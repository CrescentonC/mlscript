:NewParser
:ParseOnly


// Initial program, not immediately fusable:
fun count(c, xs) = if xs is
    C(h, t) then count(add(c, 1), t)
    N then c
fun rev(a, ys) = if ys is
    C(h1, t1) then rev(C(h1, a), t1)
    N then a
count(0, rev(N, N))
//│ |#fun| |count|(|c|,| |xs|)| |#=| |#if| |xs| |is|→|C|(|h|,| |t|)| |#then| |count|(|add|(|c|,| |1|)|,| |t|)|↵|N| |#then| |c|←|↵|#fun| |rev|(|a|,| |ys|)| |#=| |#if| |ys| |is|→|C|(|h1|,| |t1|)| |#then| |rev|(|C|(|h1|,| |a|)|,| |t1|)|↵|N| |#then| |a|←|↵|count|(|0|,| |rev|(|N|,| |N|)|)|
//│ Parsed: {fun count = c, xs, => if xs is ‹(C (h, t,)) then count (add (c, 1,), t,); (N) then c›; fun rev = a, ys, => if ys is ‹(C (h1, t1,)) then rev (C (h1, a,), t1,); (N) then a›; count (0, rev (N, N,),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ def count:6 = (fun c:8 -> (fun xs:9 -> case xs:9^1 of {
//│ 	C h:10 t:11 => ((count:6^2 ((add:4^3 c:8^4) 1)) t:11^9)
//│ 	| N => c:8^11}))
//│ def rev:7 = (fun a:12 -> (fun ys:13 -> case ys:13^15 of {
//│ 	C h1:14 t1:15 => ((rev:7^16 [C h1:14^17 a:12^18]) t1:15^21)
//│ 	| N => a:12^23}))
//│ ((count:6^27 0) ((rev:7^30 [N]) [N]))
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>>>>> initial constraints >>>>>>>>>>
//│ ([]: 18'29_callres) <: ([]: ([]: 20'34_callres) => ([]: 21'35_callres))
//│ ([]: 19'32_callres) <: ([]: ([]: N) => ([]: 20'34_callres))
//│ ([]: 1'rev_7^30) <: ([]: ([]: N) => ([]: 19'32_callres))
//│ ([]: 0'count_6^27) <: ([]: ([]: Int) => ([]: 18'29_callres))
//│ ([]: ([]: 11'a) => ([]: ([]: 12'ys) => ([]: 17'24_matchres))) <: ([]: 1'rev)
//│ ([]: 11'a) <: ([]: 17'24_matchres)
//│ ([]: 16'22_callres) <: ([]: 17'24_matchres)
//│ ([]: 12'ys) <: ([]: Destruct(C(13'h1, 14't1), N))
//│ ([]: 15'20_callres) <: ([]: ([]: 14't1) => ([]: 16'22_callres))
//│ ([]: 1'rev_7^16) <: ([]: ([]: C(([]: 13'h1), ([]: 11'a))) => ([]: 15'20_callres))
//│ ([]: ([]: 2'c) => ([]: ([]: 3'xs) => ([]: 10'12_matchres))) <: ([]: 0'count)
//│ ([]: 2'c) <: ([]: 10'12_matchres)
//│ ([]: 9'10_callres) <: ([]: 10'12_matchres)
//│ ([]: 3'xs) <: ([]: Destruct(C(4'h, 5't), N))
//│ ([]: 8'8_callres) <: ([]: ([]: 5't) => ([]: 9'10_callres))
//│ ([]: 0'count_6^2) <: ([]: ([]: 7'7_callres) => ([]: 8'8_callres))
//│ ([]: 6'5_callres) <: ([]: ([]: Int) => ([]: 7'7_callres))
//│ ([]: ([]: Destruct(Int)) => ([]: ([]: Destruct(Int)) => ([]: Int))) <: ([]: ([]: 2'c) => ([]: 6'5_callres))
//│ <<<<<<<<<< initial constraints <<<<<<<<<<
//│ 
//│ >>>>>>> knots >>>>>>>
//│ C(13'h1, 11'a) <: 3'xs
//│ 	[+rev:7^16 · +rev:7^16 · +rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2 · +count:6^2]  --->  [+rev:7^16 · +rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2]
//│ 	[+rev:7^16 · +rev:7^16 · +rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2 · +count:6^2]  --->  [+rev:7^16 · +rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2]
//│ <<<<<<< knots <<<<<<<
//│ 
//│ >>>>>>> type variable bounds >>>>>>>
//│ 0'count:
//│ 	0'count[-count:6^2] < ([]: ([]: 7'7_callres) => ([]: 8'8_callres))
//│ 	0'count[-count:6^27] < ([]: ([]: Int) => ([]: 18'29_callres))
//│ 	([]: ([]: 2'c) => ([]: ([]: 3'xs) => ([]: 10'12_matchres))) < []0'count
//│ --------------
//│ 5't:
//│ 	5't[] < ([+count:6^2]: 3'xs)
//│ 	([+rev:7^30]: N) < [+rev:7^16 · +rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2]5't
//│ 	([+rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [+rev:7^16 · +rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2]5't
//│ 	([+rev:7^30]: N) < [+rev:7^16 · +rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2]5't
//│ 	([+rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [+rev:7^16 · +rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2]5't
//│ 	([+rev:7^30]: N) < [+rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27]5't
//│ 	([+rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [+rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27]5't
//│ 	([+rev:7^30]: N) < [+rev:7^16 · -rev:7^30 · +count:6^27]5't
//│ 	([+rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [+rev:7^16 · -rev:7^30 · +count:6^27]5't
//│ --------------
//│ 10'12_matchres:
//│ 	10'12_matchres[-count:6^2] < ([]: 9'10_callres)
//│ 	10'12_matchres[-count:6^27] < ([]: 21'35_callres)
//│ 	([+count:6^2]: Int) < []10'12_matchres
//│ 	([-count:6^2 · +count:6^27]: Int) < []10'12_matchres
//│ 	([+count:6^27]: Int) < []10'12_matchres
//│ --------------
//│ 14't1:
//│ 	14't1[] < ([+rev:7^16]: 12'ys)
//│ --------------
//│ 20'34_callres:
//│ 	20'34_callres[] < ([+count:6^27]: 3'xs)
//│ 	([-rev:7^16 · +rev:7^30]: N) < [-rev:7^30]20'34_callres
//│ 	([-rev:7^16 · +rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [-rev:7^30]20'34_callres
//│ 	([+rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [-rev:7^30]20'34_callres
//│ 	([+rev:7^30]: N) < [-rev:7^30]20'34_callres
//│ --------------
//│ 1'rev:
//│ 	1'rev[-rev:7^16] < ([]: ([]: C(([]: 13'h1), ([]: 11'a))) => ([]: 15'20_callres))
//│ 	1'rev[-rev:7^30] < ([]: ([]: N) => ([]: 19'32_callres))
//│ 	([]: ([]: 11'a) => ([]: ([]: 12'ys) => ([]: 17'24_matchres))) < []1'rev
//│ --------------
//│ 6'5_callres:
//│ 	6'5_callres[] < ([]: ([]: Int) => ([]: 7'7_callres))
//│ 	([]: ([]: Destruct(Int)) => ([]: Int)) < []6'5_callres
//│ --------------
//│ 21'35_callres:
//│ 	([+count:6^2]: Int) < [-count:6^27]21'35_callres
//│ 	([-count:6^2 · +count:6^27]: Int) < [-count:6^27]21'35_callres
//│ 	([+count:6^27]: Int) < [-count:6^27]21'35_callres
//│ --------------
//│ 9'10_callres:
//│ 	9'10_callres[] < ([]: 10'12_matchres)
//│ 	([+count:6^2]: Int) < [-count:6^2]9'10_callres
//│ 	([+count:6^27]: Int) < [-count:6^2]9'10_callres
//│ --------------
//│ 13'h1:
//│ 	13'h1[+rev:7^16 · +rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2] < ([]: 4'h)
//│ 	13'h1[+rev:7^16 · +rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2] < ([]: 4'h)
//│ 	13'h1[+rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27] < ([]: 4'h)
//│ 	13'h1[+rev:7^16 · -rev:7^30 · +count:6^27] < ([]: 4'h)
//│ --------------
//│ 2'c:
//│ 	2'c[] < ([]: Destruct(Int))
//│ 	2'c[] < ([]: 10'12_matchres)
//│ 	([]: Int) < [+count:6^2]2'c
//│ 	([+count:6^27]: Int) < []2'c
//│ --------------
//│ 17'24_matchres:
//│ 	17'24_matchres[-rev:7^16] < ([]: 16'22_callres)
//│ 	17'24_matchres[-rev:7^30] < ([]: 20'34_callres)
//│ 	([-rev:7^16 · +rev:7^30]: N) < []17'24_matchres
//│ 	([-rev:7^16 · +rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < []17'24_matchres
//│ 	([+rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < []17'24_matchres
//│ 	([+rev:7^30]: N) < []17'24_matchres
//│ --------------
//│ 12'ys:
//│ 	12'ys[] < ([]: Destruct(C(13'h1, 14't1), N))
//│ 	([]: N) < [+rev:7^30]12'ys
//│ --------------
//│ 7'7_callres:
//│ 	7'7_callres[+count:6^2] < ([]: 2'c)
//│ 	([]: Int) < []7'7_callres
//│ --------------
//│ 3'xs:
//│ 	3'xs[] < ([]: Destruct(C(4'h, 5't), N))
//│ 	([+count:6^2 · +count:6^27 · -rev:7^30 · +rev:7^16 · +rev:7^16 · +rev:7^30]: N) < [+count:6^2]3'xs
//│ 	([+count:6^27 · -rev:7^30 · +rev:7^16 · +rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [+count:6^2]3'xs
//│ 	([+count:6^27 · -rev:7^30 · +rev:7^16 · +rev:7^30]: N) < [+count:6^2]3'xs
//│ 	([+count:6^2 · +count:6^27 · -rev:7^30 · -rev:7^16 · +rev:7^16 · +rev:7^16 · +rev:7^30]: N) < [+count:6^2]3'xs
//│ 	([+count:6^27 · -rev:7^30 · -rev:7^16 · +rev:7^16 · +rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [+count:6^2]3'xs
//│ 	([+count:6^27 · -rev:7^30 · -rev:7^16 · +rev:7^16 · +rev:7^30]: N) < [+count:6^2]3'xs
//│ 	([-rev:7^30 · +rev:7^30]: N) < [+count:6^27]3'xs
//│ 	([-rev:7^30 · +rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [+count:6^27]3'xs
//│ 	([-rev:7^30 · -rev:7^16 · +rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [+count:6^27]3'xs
//│ 	([-rev:7^30 · -rev:7^16 · +rev:7^30]: N) < [+count:6^27]3'xs
//│ --------------
//│ 18'29_callres:
//│ 	18'29_callres[] < ([]: ([]: 20'34_callres) => ([]: 21'35_callres))
//│ 	([]: ([]: 3'xs) => ([]: 10'12_matchres)) < [-count:6^27]18'29_callres
//│ --------------
//│ 16'22_callres:
//│ 	16'22_callres[] < ([]: 17'24_matchres)
//│ 	([+rev:7^30]: N) < [-rev:7^16]16'22_callres
//│ 	([+rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < [-rev:7^16]16'22_callres
//│ --------------
//│ 11'a:
//│ 	11'a[+rev:7^16 · +rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2] < ([]: 5't)
//│ 	11'a[+rev:7^16 · +rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27 · +count:6^2] < ([]: 5't)
//│ 	11'a[+rev:7^16 · -rev:7^16 · -rev:7^30 · +count:6^27] < ([]: 5't)
//│ 	11'a[+rev:7^16 · -rev:7^30 · +count:6^27] < ([]: 5't)
//│ 	11'a[] < ([]: 17'24_matchres)
//│ 	([+rev:7^16]: C(([]: 13'h1), ([]: 11'a))) < []11'a
//│ 	([+rev:7^30]: N) < []11'a
//│ --------------
//│ 8'8_callres:
//│ 	8'8_callres[] < ([]: ([]: 5't) => ([]: 9'10_callres))
//│ 	([]: ([]: 3'xs) => ([]: 10'12_matchres)) < [-count:6^2]8'8_callres
//│ --------------
//│ 19'32_callres:
//│ 	19'32_callres[] < ([]: ([]: N) => ([]: 20'34_callres))
//│ 	([]: ([]: 12'ys) => ([]: 17'24_matchres)) < [-rev:7^30]19'32_callres
//│ --------------
//│ 15'20_callres:
//│ 	15'20_callres[] < ([]: ([]: 14't1) => ([]: 16'22_callres))
//│ 	([]: ([]: 12'ys) => ([]: 17'24_matchres)) < [-rev:7^16]15'20_callres
//│ --------------
//│ <<<<<<< type variable bounds <<<<<<<


// Fusablified program:
fun count(xs) = if xs is
    C(h, t) then c => count(t)(add(c, 1))
    N then c => c
fun rev(a, ys) = if ys is
    C(h1, t1) then rev(C(h1, a), t1)
    N then a
fun init = N
count(rev(N, init))(0)
//│ |#fun| |count|(|xs|)| |#=| |#if| |xs| |is|→|C|(|h|,| |t|)| |#then| |c| |=>| |count|(|t|)|(|add|(|c|,| |1|)|)|↵|N| |#then| |c| |=>| |c|←|↵|#fun| |rev|(|a|,| |ys|)| |#=| |#if| |ys| |is|→|C|(|h1|,| |t1|)| |#then| |rev|(|C|(|h1|,| |a|)|,| |t1|)|↵|N| |#then| |a|←|↵|#fun| |init| |#=| |N|↵|count|(|rev|(|N|,| |init|)|)|(|0|)|
//│ Parsed: {fun count = xs, => if xs is ‹(C (h, t,)) then c, => count (t,) (add (c, 1,),); (N) then c, => c›; fun rev = a, ys, => if ys is ‹(C (h1, t1,)) then rev (C (h1, a,), t1,); (N) then a›; fun init = N; count (rev (N, init,),) (0,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ def count:6 = (fun xs:9 -> case xs:9^1 of {
//│ 	C h:10 t:11 => (fun c:12 -> ((count:6^2 t:11^3) ((add:4^5 c:12^6) 1)))
//│ 	| N => (fun c:13 -> c:13^12)})
//│ def rev:7 = (fun a:14 -> (fun ys:15 -> case ys:15^16 of {
//│ 	C h1:16 t1:17 => ((rev:7^17 [C h1:16^18 a:14^19]) t1:17^22)
//│ 	| N => a:14^24}))
//│ def init:8 = [N]
//│ ((count:6^29 ((rev:7^30 [N]) init:8^33)) 0)
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>>>>> initial constraints >>>>>>>>>>
//│ ([]: 22'35_callres) <: ([]: ([]: Int) => ([]: 23'37_callres))
//│ ([]: 0'count_6^29) <: ([]: ([]: 21'34_callres) => ([]: 22'35_callres))
//│ ([]: 20'32_callres) <: ([]: ([]: 2'init_8^33) => ([]: 21'34_callres))
//│ ([]: 1'rev_7^30) <: ([]: ([]: N) => ([]: 20'32_callres))
//│ ([]: N) <: ([]: 2'init)
//│ ([]: ([]: 13'a) => ([]: ([]: 14'ys) => ([]: 19'25_matchres))) <: ([]: 1'rev)
//│ ([]: 13'a) <: ([]: 19'25_matchres)
//│ ([]: 18'23_callres) <: ([]: 19'25_matchres)
//│ ([]: 14'ys) <: ([]: Destruct(C(15'h1, 16't1), N))
//│ ([]: 17'21_callres) <: ([]: ([]: 16't1) => ([]: 18'23_callres))
//│ ([]: 1'rev_7^17) <: ([]: ([]: C(([]: 15'h1), ([]: 13'a))) => ([]: 17'21_callres))
//│ ([]: ([]: 3'xs) => ([]: 12'14_matchres)) <: ([]: 0'count)
//│ ([]: ([]: 11'c) => ([]: 11'c)) <: ([]: 12'14_matchres)
//│ ([]: ([]: 6'c) => ([]: 10'10_callres)) <: ([]: 12'14_matchres)
//│ ([]: 3'xs) <: ([]: Destruct(C(4'h, 5't), N))
//│ ([]: 7'4_callres) <: ([]: ([]: 9'9_callres) => ([]: 10'10_callres))
//│ ([]: 8'7_callres) <: ([]: ([]: Int) => ([]: 9'9_callres))
//│ ([]: ([]: Destruct(Int)) => ([]: ([]: Destruct(Int)) => ([]: Int))) <: ([]: ([]: 6'c) => ([]: 8'7_callres))
//│ ([]: 0'count_6^2) <: ([]: ([]: 5't) => ([]: 7'4_callres))
//│ <<<<<<<<<< initial constraints <<<<<<<<<<
//│ 
//│ >>>>>>> knots >>>>>>>
//│ C(15'h1, 13'a) <: 3'xs
//│ 	[+rev:7^17 · +rev:7^17 · +rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2 · +count:6^2]  --->  [+rev:7^17 · +rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2]
//│ 	[+rev:7^17 · +rev:7^17 · +rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2 · +count:6^2]  --->  [+rev:7^17 · +rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2]
//│ <<<<<<< knots <<<<<<<
//│ 
//│ >>>>>>> type variable bounds >>>>>>>
//│ 0'count:
//│ 	0'count[-count:6^2] < ([]: ([]: 5't) => ([]: 7'4_callres))
//│ 	0'count[-count:6^29] < ([]: ([]: 21'34_callres) => ([]: 22'35_callres))
//│ 	([]: ([]: 3'xs) => ([]: 12'14_matchres)) < []0'count
//│ --------------
//│ 5't:
//│ 	5't[+count:6^2] < ([]: 3'xs)
//│ 	([+rev:7^30]: N) < [+rev:7^17 · +rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2]5't
//│ 	([+rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [+rev:7^17 · +rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2]5't
//│ 	([+rev:7^30]: N) < [+rev:7^17 · +rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2]5't
//│ 	([+rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [+rev:7^17 · +rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2]5't
//│ 	([+rev:7^30]: N) < [+rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29]5't
//│ 	([+rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [+rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29]5't
//│ 	([+rev:7^30]: N) < [+rev:7^17 · -rev:7^30 · +count:6^29]5't
//│ 	([+rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [+rev:7^17 · -rev:7^30 · +count:6^29]5't
//│ --------------
//│ 10'10_callres:
//│ 	10'10_callres[-count:6^29] < ([]: 23'37_callres)
//│ 	([+count:6^29]: Int) < [-count:6^2]10'10_callres
//│ 	([+count:6^2]: Int) < [-count:6^2]10'10_callres
//│ --------------
//│ 14'ys:
//│ 	14'ys[] < ([]: Destruct(C(15'h1, 16't1), N))
//│ 	([]: N) < [-init:8^33 · +rev:7^30]14'ys
//│ --------------
//│ 20'32_callres:
//│ 	20'32_callres[] < ([]: ([]: 2'init_8^33) => ([]: 21'34_callres))
//│ 	([]: ([]: 14'ys) => ([]: 19'25_matchres)) < [-rev:7^30]20'32_callres
//│ --------------
//│ 1'rev:
//│ 	1'rev[-rev:7^17] < ([]: ([]: C(([]: 15'h1), ([]: 13'a))) => ([]: 17'21_callres))
//│ 	1'rev[-rev:7^30] < ([]: ([]: N) => ([]: 20'32_callres))
//│ 	([]: ([]: 13'a) => ([]: ([]: 14'ys) => ([]: 19'25_matchres))) < []1'rev
//│ --------------
//│ 6'c:
//│ 	6'c[] < ([]: Destruct(Int))
//│ 	([]: Int) < [+count:6^2]6'c
//│ 	([]: Int) < [+count:6^29]6'c
//│ --------------
//│ 21'34_callres:
//│ 	21'34_callres[+count:6^29] < ([]: 3'xs)
//│ 	([-rev:7^17 · +rev:7^30]: N) < [-rev:7^30]21'34_callres
//│ 	([-rev:7^17 · +rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [-rev:7^30]21'34_callres
//│ 	([+rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [-rev:7^30]21'34_callres
//│ 	([+rev:7^30]: N) < [-rev:7^30]21'34_callres
//│ --------------
//│ 9'9_callres:
//│ 	9'9_callres[] < ([+count:6^2]: 11'c)
//│ 	9'9_callres[] < ([+count:6^2]: 6'c)
//│ 	([]: Int) < []9'9_callres
//│ --------------
//│ 13'a:
//│ 	13'a[+rev:7^17 · +rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2] < ([]: 5't)
//│ 	13'a[+rev:7^17 · +rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2] < ([]: 5't)
//│ 	13'a[+rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29] < ([]: 5't)
//│ 	13'a[+rev:7^17 · -rev:7^30 · +count:6^29] < ([]: 5't)
//│ 	13'a[] < ([]: 19'25_matchres)
//│ 	([+rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < []13'a
//│ 	([+rev:7^30]: N) < []13'a
//│ --------------
//│ 2'init:
//│ 	2'init[-init:8^33] < ([+rev:7^30]: 14'ys)
//│ 	([]: N) < []2'init
//│ --------------
//│ 17'21_callres:
//│ 	17'21_callres[] < ([]: ([]: 16't1) => ([]: 18'23_callres))
//│ 	([]: ([]: 14'ys) => ([]: 19'25_matchres)) < [-rev:7^17]17'21_callres
//│ --------------
//│ 22'35_callres:
//│ 	22'35_callres[] < ([]: ([]: Int) => ([]: 23'37_callres))
//│ 	([]: ([]: 6'c) => ([]: 10'10_callres)) < [-count:6^29]22'35_callres
//│ 	([]: ([]: 11'c) => ([]: 11'c)) < [-count:6^29]22'35_callres
//│ --------------
//│ 12'14_matchres:
//│ 	12'14_matchres[] < ([-count:6^2]: 7'4_callres)
//│ 	12'14_matchres[] < ([-count:6^29]: 22'35_callres)
//│ 	([]: ([]: 6'c) => ([]: 10'10_callres)) < []12'14_matchres
//│ 	([]: ([]: 11'c) => ([]: 11'c)) < []12'14_matchres
//│ --------------
//│ 7'4_callres:
//│ 	7'4_callres[] < ([]: ([]: 9'9_callres) => ([]: 10'10_callres))
//│ 	([]: ([]: 11'c) => ([]: 11'c)) < [-count:6^2]7'4_callres
//│ 	([]: ([]: 6'c) => ([]: 10'10_callres)) < [-count:6^2]7'4_callres
//│ --------------
//│ 3'xs:
//│ 	3'xs[] < ([]: Destruct(C(4'h, 5't), N))
//│ 	([+count:6^2 · +count:6^29 · -rev:7^30 · +rev:7^17 · +rev:7^17 · +rev:7^30]: N) < [+count:6^2]3'xs
//│ 	([+count:6^29 · -rev:7^30 · +rev:7^17 · +rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [+count:6^2]3'xs
//│ 	([+count:6^29 · -rev:7^30 · +rev:7^17 · +rev:7^30]: N) < [+count:6^2]3'xs
//│ 	([+count:6^2 · +count:6^29 · -rev:7^30 · -rev:7^17 · +rev:7^17 · +rev:7^17 · +rev:7^30]: N) < [+count:6^2]3'xs
//│ 	([+count:6^29 · -rev:7^30 · -rev:7^17 · +rev:7^17 · +rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [+count:6^2]3'xs
//│ 	([+count:6^29 · -rev:7^30 · -rev:7^17 · +rev:7^17 · +rev:7^30]: N) < [+count:6^2]3'xs
//│ 	([-rev:7^30 · +rev:7^30]: N) < [+count:6^29]3'xs
//│ 	([-rev:7^30 · +rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [+count:6^29]3'xs
//│ 	([-rev:7^30 · -rev:7^17 · +rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [+count:6^29]3'xs
//│ 	([-rev:7^30 · -rev:7^17 · +rev:7^30]: N) < [+count:6^29]3'xs
//│ --------------
//│ 18'23_callres:
//│ 	18'23_callres[] < ([]: 19'25_matchres)
//│ 	([+rev:7^30]: N) < [-rev:7^17]18'23_callres
//│ 	([+rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < [-rev:7^17]18'23_callres
//│ --------------
//│ 16't1:
//│ 	16't1[] < ([+rev:7^17]: 14'ys)
//│ --------------
//│ 11'c:
//│ 	11'c[-count:6^2] < ([]: 10'10_callres)
//│ 	11'c[-count:6^29] < ([]: 23'37_callres)
//│ 	([]: Int) < [+count:6^2]11'c
//│ 	([]: Int) < [+count:6^29]11'c
//│ --------------
//│ 23'37_callres:
//│ 	([-count:6^2 · +count:6^29]: Int) < [-count:6^29]23'37_callres
//│ 	([-count:6^2 · +count:6^2]: Int) < [-count:6^29]23'37_callres
//│ 	([+count:6^2]: Int) < [-count:6^29]23'37_callres
//│ 	([+count:6^29]: Int) < [-count:6^29]23'37_callres
//│ --------------
//│ 8'7_callres:
//│ 	8'7_callres[] < ([]: ([]: Int) => ([]: 9'9_callres))
//│ 	([]: ([]: Destruct(Int)) => ([]: Int)) < []8'7_callres
//│ --------------
//│ 19'25_matchres:
//│ 	19'25_matchres[-rev:7^17] < ([]: 18'23_callres)
//│ 	19'25_matchres[-rev:7^30] < ([]: 21'34_callres)
//│ 	([-rev:7^17 · +rev:7^30]: N) < []19'25_matchres
//│ 	([-rev:7^17 · +rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < []19'25_matchres
//│ 	([+rev:7^17]: C(([]: 15'h1), ([]: 13'a))) < []19'25_matchres
//│ 	([+rev:7^30]: N) < []19'25_matchres
//│ --------------
//│ 15'h1:
//│ 	15'h1[+rev:7^17 · +rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2] < ([]: 4'h)
//│ 	15'h1[+rev:7^17 · +rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29 · +count:6^2] < ([]: 4'h)
//│ 	15'h1[+rev:7^17 · -rev:7^17 · -rev:7^30 · +count:6^29] < ([]: 4'h)
//│ 	15'h1[+rev:7^17 · -rev:7^30 · +count:6^29] < ([]: 4'h)
//│ --------------
//│ <<<<<<< type variable bounds <<<<<<<


// FIXME
// Paper example (original)
fun idxSum(i, xs) = if xs is
    C(h, t) then add(i, idxSum(add(i, 1), t))
    N then 0
fun rev(a, ys) = if ys is
    C(h1, t1) then rev(C(h1, a), t1)
    N then a
idxSum(0, rev(N, N))
//│ |#fun| |idxSum|(|i|,| |xs|)| |#=| |#if| |xs| |is|→|C|(|h|,| |t|)| |#then| |add|(|i|,| |idxSum|(|add|(|i|,| |1|)|,| |t|)|)|↵|N| |#then| |0|←|↵|#fun| |rev|(|a|,| |ys|)| |#=| |#if| |ys| |is|→|C|(|h1|,| |t1|)| |#then| |rev|(|C|(|h1|,| |a|)|,| |t1|)|↵|N| |#then| |a|←|↵|idxSum|(|0|,| |rev|(|N|,| |N|)|)|
//│ Parsed: {fun idxSum = i, xs, => if xs is ‹(C (h, t,)) then add (i, idxSum (add (i, 1,), t,),); (N) then 0›; fun rev = a, ys, => if ys is ‹(C (h1, t1,)) then rev (C (h1, a,), t1,); (N) then a›; idxSum (0, rev (N, N,),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ def idxSum:6 = (fun i:8 -> (fun xs:9 -> case xs:9^1 of {
//│ 	C h:10 t:11 => ((add:4^2 i:8^3) ((idxSum:6^5 ((add:4^6 i:8^7) 1)) t:11^12))
//│ 	| N => 0}))
//│ def rev:7 = (fun a:12 -> (fun ys:13 -> case ys:13^19 of {
//│ 	C h1:14 t1:15 => ((rev:7^20 [C h1:14^21 a:12^22]) t1:15^25)
//│ 	| N => a:12^27}))
//│ ((idxSum:6^31 0) ((rev:7^34 [N]) [N]))
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>>>>> initial constraints >>>>>>>>>>
//│ ([]: 20'33_callres) <: ([]: ([]: 22'38_callres) => ([]: 23'39_callres))
//│ ([]: 21'36_callres) <: ([]: ([]: N) => ([]: 22'38_callres))
//│ ([]: 1'rev_7^34) <: ([]: ([]: N) => ([]: 21'36_callres))
//│ ([]: 0'idxSum_6^31) <: ([]: ([]: Int) => ([]: 20'33_callres))
//│ ([]: ([]: 13'a) => ([]: ([]: 14'ys) => ([]: 19'28_matchres))) <: ([]: 1'rev)
//│ ([]: 13'a) <: ([]: 19'28_matchres)
//│ ([]: 18'26_callres) <: ([]: 19'28_matchres)
//│ ([]: 14'ys) <: ([]: Destruct(C(15'h1, 16't1), N))
//│ ([]: 17'24_callres) <: ([]: ([]: 16't1) => ([]: 18'26_callres))
//│ ([]: 1'rev_7^20) <: ([]: ([]: C(([]: 15'h1), ([]: 13'a))) => ([]: 17'24_callres))
//│ ([]: ([]: 2'i) => ([]: ([]: 3'xs) => ([]: 12'16_matchres))) <: ([]: 0'idxSum)
//│ ([]: Int) <: ([]: 12'16_matchres)
//│ ([]: 11'14_callres) <: ([]: 12'16_matchres)
//│ ([]: 3'xs) <: ([]: Destruct(C(4'h, 5't), N))
//│ ([]: 6'4_callres) <: ([]: ([]: 10'13_callres) => ([]: 11'14_callres))
//│ ([]: 9'11_callres) <: ([]: ([]: 5't) => ([]: 10'13_callres))
//│ ([]: 0'idxSum_6^5) <: ([]: ([]: 8'10_callres) => ([]: 9'11_callres))
//│ ([]: 7'8_callres) <: ([]: ([]: Int) => ([]: 8'10_callres))
//│ ([]: ([]: Destruct(Int)) => ([]: ([]: Destruct(Int)) => ([]: Int))) <: ([]: ([]: 2'i) => ([]: 7'8_callres))
//│ ([]: ([]: Destruct(Int)) => ([]: ([]: Destruct(Int)) => ([]: Int))) <: ([]: ([]: 2'i) => ([]: 6'4_callres))
//│ <<<<<<<<<< initial constraints <<<<<<<<<<
//│ 
//│ >>>>>>> knots >>>>>>>
//│ C(15'h1, 13'a) <: 3'xs
//│ 	[+rev:7^20 · +rev:7^20 · +rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5 · +idxSum:6^5]  --->  [+rev:7^20 · +rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5]
//│ 	[+rev:7^20 · +rev:7^20 · +rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5 · +idxSum:6^5]  --->  [+rev:7^20 · +rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5]
//│ <<<<<<< knots <<<<<<<
//│ 
//│ >>>>>>> type variable bounds >>>>>>>
//│ 0'idxSum:
//│ 	0'idxSum[-idxSum:6^5] < ([]: ([]: 8'10_callres) => ([]: 9'11_callres))
//│ 	0'idxSum[-idxSum:6^31] < ([]: ([]: Int) => ([]: 20'33_callres))
//│ 	([]: ([]: 2'i) => ([]: ([]: 3'xs) => ([]: 12'16_matchres))) < []0'idxSum
//│ --------------
//│ 5't:
//│ 	5't[] < ([+idxSum:6^5]: 3'xs)
//│ 	([+rev:7^34]: N) < [+rev:7^20 · +rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5]5't
//│ 	([+rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [+rev:7^20 · +rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5]5't
//│ 	([+rev:7^34]: N) < [+rev:7^20 · +rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5]5't
//│ 	([+rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [+rev:7^20 · +rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5]5't
//│ 	([+rev:7^34]: N) < [+rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31]5't
//│ 	([+rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [+rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31]5't
//│ 	([+rev:7^34]: N) < [+rev:7^20 · -rev:7^34 · +idxSum:6^31]5't
//│ 	([+rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [+rev:7^20 · -rev:7^34 · +idxSum:6^31]5't
//│ --------------
//│ 10'13_callres:
//│ 	10'13_callres[] < ([]: Destruct(Int))
//│ 	([]: Int) < [-idxSum:6^5]10'13_callres
//│ 	([]: Int) < [-idxSum:6^5]10'13_callres
//│ --------------
//│ 14'ys:
//│ 	14'ys[] < ([]: Destruct(C(15'h1, 16't1), N))
//│ 	([]: N) < [+rev:7^34]14'ys
//│ --------------
//│ 20'33_callres:
//│ 	20'33_callres[] < ([]: ([]: 22'38_callres) => ([]: 23'39_callres))
//│ 	([]: ([]: 3'xs) => ([]: 12'16_matchres)) < [-idxSum:6^31]20'33_callres
//│ --------------
//│ 1'rev:
//│ 	1'rev[-rev:7^20] < ([]: ([]: C(([]: 15'h1), ([]: 13'a))) => ([]: 17'24_callres))
//│ 	1'rev[-rev:7^34] < ([]: ([]: N) => ([]: 21'36_callres))
//│ 	([]: ([]: 13'a) => ([]: ([]: 14'ys) => ([]: 19'28_matchres))) < []1'rev
//│ --------------
//│ 6'4_callres:
//│ 	6'4_callres[] < ([]: ([]: 10'13_callres) => ([]: 11'14_callres))
//│ 	([]: ([]: Destruct(Int)) => ([]: Int)) < []6'4_callres
//│ --------------
//│ 21'36_callres:
//│ 	21'36_callres[] < ([]: ([]: N) => ([]: 22'38_callres))
//│ 	([]: ([]: 14'ys) => ([]: 19'28_matchres)) < [-rev:7^34]21'36_callres
//│ --------------
//│ 9'11_callres:
//│ 	9'11_callres[] < ([]: ([]: 5't) => ([]: 10'13_callres))
//│ 	([]: ([]: 3'xs) => ([]: 12'16_matchres)) < [-idxSum:6^5]9'11_callres
//│ --------------
//│ 13'a:
//│ 	13'a[+rev:7^20 · +rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5] < ([]: 5't)
//│ 	13'a[+rev:7^20 · +rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5] < ([]: 5't)
//│ 	13'a[+rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31] < ([]: 5't)
//│ 	13'a[+rev:7^20 · -rev:7^34 · +idxSum:6^31] < ([]: 5't)
//│ 	13'a[] < ([]: 19'28_matchres)
//│ 	([+rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < []13'a
//│ 	([+rev:7^34]: N) < []13'a
//│ --------------
//│ 2'i:
//│ 	2'i[] < ([]: Destruct(Int))
//│ 	2'i[] < ([]: Destruct(Int))
//│ 	([]: Int) < [+idxSum:6^5]2'i
//│ 	([+idxSum:6^31]: Int) < []2'i
//│ --------------
//│ 17'24_callres:
//│ 	17'24_callres[] < ([]: ([]: 16't1) => ([]: 18'26_callres))
//│ 	([]: ([]: 14'ys) => ([]: 19'28_matchres)) < [-rev:7^20]17'24_callres
//│ --------------
//│ 22'38_callres:
//│ 	22'38_callres[] < ([+idxSum:6^31]: 3'xs)
//│ 	([-rev:7^20 · +rev:7^34]: N) < [-rev:7^34]22'38_callres
//│ 	([-rev:7^20 · +rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [-rev:7^34]22'38_callres
//│ 	([+rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [-rev:7^34]22'38_callres
//│ 	([+rev:7^34]: N) < [-rev:7^34]22'38_callres
//│ --------------
//│ 12'16_matchres:
//│ 	12'16_matchres[-idxSum:6^5] < ([]: 10'13_callres)
//│ 	12'16_matchres[-idxSum:6^31] < ([]: 23'39_callres)
//│ 	([]: Int) < []12'16_matchres
//│ 	([]: Int) < []12'16_matchres
//│ --------------
//│ 7'8_callres:
//│ 	7'8_callres[] < ([]: ([]: Int) => ([]: 8'10_callres))
//│ 	([]: ([]: Destruct(Int)) => ([]: Int)) < []7'8_callres
//│ --------------
//│ 3'xs:
//│ 	3'xs[] < ([]: Destruct(C(4'h, 5't), N))
//│ 	([+idxSum:6^5 · +idxSum:6^31 · -rev:7^34 · +rev:7^20 · +rev:7^20 · +rev:7^34]: N) < [+idxSum:6^5]3'xs
//│ 	([+idxSum:6^31 · -rev:7^34 · +rev:7^20 · +rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [+idxSum:6^5]3'xs
//│ 	([+idxSum:6^31 · -rev:7^34 · +rev:7^20 · +rev:7^34]: N) < [+idxSum:6^5]3'xs
//│ 	([+idxSum:6^5 · +idxSum:6^31 · -rev:7^34 · -rev:7^20 · +rev:7^20 · +rev:7^20 · +rev:7^34]: N) < [+idxSum:6^5]3'xs
//│ 	([+idxSum:6^31 · -rev:7^34 · -rev:7^20 · +rev:7^20 · +rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [+idxSum:6^5]3'xs
//│ 	([+idxSum:6^31 · -rev:7^34 · -rev:7^20 · +rev:7^20 · +rev:7^34]: N) < [+idxSum:6^5]3'xs
//│ 	([-rev:7^34 · +rev:7^34]: N) < [+idxSum:6^31]3'xs
//│ 	([-rev:7^34 · +rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [+idxSum:6^31]3'xs
//│ 	([-rev:7^34 · -rev:7^20 · +rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [+idxSum:6^31]3'xs
//│ 	([-rev:7^34 · -rev:7^20 · +rev:7^34]: N) < [+idxSum:6^31]3'xs
//│ --------------
//│ 18'26_callres:
//│ 	18'26_callres[] < ([]: 19'28_matchres)
//│ 	([+rev:7^34]: N) < [-rev:7^20]18'26_callres
//│ 	([+rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < [-rev:7^20]18'26_callres
//│ --------------
//│ 16't1:
//│ 	16't1[] < ([+rev:7^20]: 14'ys)
//│ --------------
//│ 11'14_callres:
//│ 	11'14_callres[] < ([]: 12'16_matchres)
//│ 	([]: Int) < []11'14_callres
//│ --------------
//│ 23'39_callres:
//│ 	([]: Int) < [-idxSum:6^31]23'39_callres
//│ 	([]: Int) < [-idxSum:6^31]23'39_callres
//│ --------------
//│ 8'10_callres:
//│ 	8'10_callres[+idxSum:6^5] < ([]: 2'i)
//│ 	([]: Int) < []8'10_callres
//│ --------------
//│ 19'28_matchres:
//│ 	19'28_matchres[-rev:7^20] < ([]: 18'26_callres)
//│ 	19'28_matchres[-rev:7^34] < ([]: 22'38_callres)
//│ 	([-rev:7^20 · +rev:7^34]: N) < []19'28_matchres
//│ 	([-rev:7^20 · +rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < []19'28_matchres
//│ 	([+rev:7^20]: C(([]: 15'h1), ([]: 13'a))) < []19'28_matchres
//│ 	([+rev:7^34]: N) < []19'28_matchres
//│ --------------
//│ 15'h1:
//│ 	15'h1[+rev:7^20 · +rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5] < ([]: 4'h)
//│ 	15'h1[+rev:7^20 · +rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31 · +idxSum:6^5] < ([]: 4'h)
//│ 	15'h1[+rev:7^20 · -rev:7^20 · -rev:7^34 · +idxSum:6^31] < ([]: 4'h)
//│ 	15'h1[+rev:7^20 · -rev:7^34 · +idxSum:6^31] < ([]: 4'h)
//│ --------------
//│ <<<<<<< type variable bounds <<<<<<<




fun count(xs) = if xs is
    C(h, t) then add(1, count(t))
    N then 0
fun rev(a, ys) = if ys is
    C(h1, t1) then rev(C(h1, a), t1)
    N then a
fun init = N
count(rev(N, init))
//│ |#fun| |count|(|xs|)| |#=| |#if| |xs| |is|→|C|(|h|,| |t|)| |#then| |add|(|1|,| |count|(|t|)|)|↵|N| |#then| |0|←|↵|#fun| |rev|(|a|,| |ys|)| |#=| |#if| |ys| |is|→|C|(|h1|,| |t1|)| |#then| |rev|(|C|(|h1|,| |a|)|,| |t1|)|↵|N| |#then| |a|←|↵|#fun| |init| |#=| |N|↵|count|(|rev|(|N|,| |init|)|)|
//│ Parsed: {fun count = xs, => if xs is ‹(C (h, t,)) then add (1, count (t,),); (N) then 0›; fun rev = a, ys, => if ys is ‹(C (h1, t1,)) then rev (C (h1, a,), t1,); (N) then a›; fun init = N; count (rev (N, init,),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ def count:6 = (fun xs:9 -> case xs:9^1 of {
//│ 	C h:10 t:11 => ((add:4^2 1) (count:6^5 t:11^6))
//│ 	| N => 0})
//│ def rev:7 = (fun a:12 -> (fun ys:13 -> case ys:13^12 of {
//│ 	C h1:14 t1:15 => ((rev:7^13 [C h1:14^14 a:12^15]) t1:15^18)
//│ 	| N => a:12^20}))
//│ def init:8 = [N]
//│ (count:6^25 ((rev:7^26 [N]) init:8^29))
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>>>>> initial constraints >>>>>>>>>>
//│ ([]: 0'count_6^25) <: ([]: ([]: 18'30_callres) => ([]: 19'31_callres))
//│ ([]: 17'28_callres) <: ([]: ([]: 2'init_8^29) => ([]: 18'30_callres))
//│ ([]: 1'rev_7^26) <: ([]: ([]: N) => ([]: 17'28_callres))
//│ ([]: N) <: ([]: 2'init)
//│ ([]: ([]: 10'a) => ([]: ([]: 11'ys) => ([]: 16'21_matchres))) <: ([]: 1'rev)
//│ ([]: 10'a) <: ([]: 16'21_matchres)
//│ ([]: 15'19_callres) <: ([]: 16'21_matchres)
//│ ([]: 11'ys) <: ([]: Destruct(C(12'h1, 13't1), N))
//│ ([]: 14'17_callres) <: ([]: ([]: 13't1) => ([]: 15'19_callres))
//│ ([]: 1'rev_7^13) <: ([]: ([]: C(([]: 12'h1), ([]: 10'a))) => ([]: 14'17_callres))
//│ ([]: ([]: 3'xs) => ([]: 9'10_matchres)) <: ([]: 0'count)
//│ ([]: Int) <: ([]: 9'10_matchres)
//│ ([]: 8'8_callres) <: ([]: 9'10_matchres)
//│ ([]: 3'xs) <: ([]: Destruct(C(4'h, 5't), N))
//│ ([]: 6'4_callres) <: ([]: ([]: 7'7_callres) => ([]: 8'8_callres))
//│ ([]: 0'count_6^5) <: ([]: ([]: 5't) => ([]: 7'7_callres))
//│ ([]: ([]: Destruct(Int)) => ([]: ([]: Destruct(Int)) => ([]: Int))) <: ([]: ([]: Int) => ([]: 6'4_callres))
//│ <<<<<<<<<< initial constraints <<<<<<<<<<
//│ 
//│ >>>>>>> knots >>>>>>>
//│ C(12'h1, 10'a) <: 3'xs
//│ 	[+rev:7^13 · +rev:7^13 · +rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5 · +count:6^5]  --->  [+rev:7^13 · +rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5]
//│ 	[+rev:7^13 · +rev:7^13 · +rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5 · +count:6^5]  --->  [+rev:7^13 · +rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5]
//│ <<<<<<< knots <<<<<<<
//│ 
//│ >>>>>>> type variable bounds >>>>>>>
//│ 0'count:
//│ 	0'count[-count:6^5] < ([]: ([]: 5't) => ([]: 7'7_callres))
//│ 	0'count[-count:6^25] < ([]: ([]: 18'30_callres) => ([]: 19'31_callres))
//│ 	([]: ([]: 3'xs) => ([]: 9'10_matchres)) < []0'count
//│ --------------
//│ 5't:
//│ 	5't[+count:6^5] < ([]: 3'xs)
//│ 	([+rev:7^26]: N) < [+rev:7^13 · +rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5]5't
//│ 	([+rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [+rev:7^13 · +rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5]5't
//│ 	([+rev:7^26]: N) < [+rev:7^13 · +rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5]5't
//│ 	([+rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [+rev:7^13 · +rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5]5't
//│ 	([+rev:7^26]: N) < [+rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25]5't
//│ 	([+rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [+rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25]5't
//│ 	([+rev:7^26]: N) < [+rev:7^13 · -rev:7^26 · +count:6^25]5't
//│ 	([+rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [+rev:7^13 · -rev:7^26 · +count:6^25]5't
//│ --------------
//│ 10'a:
//│ 	10'a[+rev:7^13 · +rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5] < ([]: 5't)
//│ 	10'a[+rev:7^13 · +rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5] < ([]: 5't)
//│ 	10'a[+rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25] < ([]: 5't)
//│ 	10'a[+rev:7^13 · -rev:7^26 · +count:6^25] < ([]: 5't)
//│ 	10'a[] < ([]: 16'21_matchres)
//│ 	([+rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < []10'a
//│ 	([+rev:7^26]: N) < []10'a
//│ --------------
//│ 14'17_callres:
//│ 	14'17_callres[] < ([]: ([]: 13't1) => ([]: 15'19_callres))
//│ 	([]: ([]: 11'ys) => ([]: 16'21_matchres)) < [-rev:7^13]14'17_callres
//│ --------------
//│ 1'rev:
//│ 	1'rev[-rev:7^13] < ([]: ([]: C(([]: 12'h1), ([]: 10'a))) => ([]: 14'17_callres))
//│ 	1'rev[-rev:7^26] < ([]: ([]: N) => ([]: 17'28_callres))
//│ 	([]: ([]: 10'a) => ([]: ([]: 11'ys) => ([]: 16'21_matchres))) < []1'rev
//│ --------------
//│ 6'4_callres:
//│ 	6'4_callres[] < ([]: ([]: 7'7_callres) => ([]: 8'8_callres))
//│ 	([]: ([]: Destruct(Int)) => ([]: Int)) < []6'4_callres
//│ --------------
//│ 9'10_matchres:
//│ 	9'10_matchres[] < ([-count:6^5]: 7'7_callres)
//│ 	9'10_matchres[] < ([-count:6^25]: 19'31_callres)
//│ 	([]: Int) < []9'10_matchres
//│ 	([]: Int) < []9'10_matchres
//│ --------------
//│ 13't1:
//│ 	13't1[] < ([+rev:7^13]: 11'ys)
//│ --------------
//│ 2'init:
//│ 	2'init[-init:8^29] < ([+rev:7^26]: 11'ys)
//│ 	([]: N) < []2'init
//│ --------------
//│ 17'28_callres:
//│ 	17'28_callres[] < ([]: ([]: 2'init_8^29) => ([]: 18'30_callres))
//│ 	([]: ([]: 11'ys) => ([]: 16'21_matchres)) < [-rev:7^26]17'28_callres
//│ --------------
//│ 12'h1:
//│ 	12'h1[+rev:7^13 · +rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5] < ([]: 4'h)
//│ 	12'h1[+rev:7^13 · +rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25 · +count:6^5] < ([]: 4'h)
//│ 	12'h1[+rev:7^13 · -rev:7^13 · -rev:7^26 · +count:6^25] < ([]: 4'h)
//│ 	12'h1[+rev:7^13 · -rev:7^26 · +count:6^25] < ([]: 4'h)
//│ --------------
//│ 7'7_callres:
//│ 	7'7_callres[] < ([]: Destruct(Int))
//│ 	([]: Int) < [-count:6^5]7'7_callres
//│ 	([]: Int) < [-count:6^5]7'7_callres
//│ --------------
//│ 3'xs:
//│ 	3'xs[] < ([]: Destruct(C(4'h, 5't), N))
//│ 	([+count:6^5 · +count:6^25 · -rev:7^26 · +rev:7^13 · +rev:7^13 · +rev:7^26]: N) < [+count:6^5]3'xs
//│ 	([+count:6^25 · -rev:7^26 · +rev:7^13 · +rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [+count:6^5]3'xs
//│ 	([+count:6^25 · -rev:7^26 · +rev:7^13 · +rev:7^26]: N) < [+count:6^5]3'xs
//│ 	([+count:6^5 · +count:6^25 · -rev:7^26 · -rev:7^13 · +rev:7^13 · +rev:7^13 · +rev:7^26]: N) < [+count:6^5]3'xs
//│ 	([+count:6^25 · -rev:7^26 · -rev:7^13 · +rev:7^13 · +rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [+count:6^5]3'xs
//│ 	([+count:6^25 · -rev:7^26 · -rev:7^13 · +rev:7^13 · +rev:7^26]: N) < [+count:6^5]3'xs
//│ 	([-rev:7^26 · +rev:7^26]: N) < [+count:6^25]3'xs
//│ 	([-rev:7^26 · +rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [+count:6^25]3'xs
//│ 	([-rev:7^26 · -rev:7^13 · +rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [+count:6^25]3'xs
//│ 	([-rev:7^26 · -rev:7^13 · +rev:7^26]: N) < [+count:6^25]3'xs
//│ --------------
//│ 18'30_callres:
//│ 	18'30_callres[+count:6^25] < ([]: 3'xs)
//│ 	([-rev:7^13 · +rev:7^26]: N) < [-rev:7^26]18'30_callres
//│ 	([-rev:7^13 · +rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [-rev:7^26]18'30_callres
//│ 	([+rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [-rev:7^26]18'30_callres
//│ 	([+rev:7^26]: N) < [-rev:7^26]18'30_callres
//│ --------------
//│ 16'21_matchres:
//│ 	16'21_matchres[-rev:7^13] < ([]: 15'19_callres)
//│ 	16'21_matchres[-rev:7^26] < ([]: 18'30_callres)
//│ 	([-rev:7^13 · +rev:7^26]: N) < []16'21_matchres
//│ 	([-rev:7^13 · +rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < []16'21_matchres
//│ 	([+rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < []16'21_matchres
//│ 	([+rev:7^26]: N) < []16'21_matchres
//│ --------------
//│ 11'ys:
//│ 	11'ys[] < ([]: Destruct(C(12'h1, 13't1), N))
//│ 	([]: N) < [-init:8^29 · +rev:7^26]11'ys
//│ --------------
//│ 8'8_callres:
//│ 	8'8_callres[] < ([]: 9'10_matchres)
//│ 	([]: Int) < []8'8_callres
//│ --------------
//│ 19'31_callres:
//│ 	([]: Int) < [-count:6^25]19'31_callres
//│ 	([]: Int) < [-count:6^25]19'31_callres
//│ --------------
//│ 15'19_callres:
//│ 	15'19_callres[] < ([]: 16'21_matchres)
//│ 	([+rev:7^26]: N) < [-rev:7^13]15'19_callres
//│ 	([+rev:7^13]: C(([]: 12'h1), ([]: 10'a))) < [-rev:7^13]15'19_callres
//│ --------------
//│ <<<<<<< type variable bounds <<<<<<<


fun rev(a, ys) = if ys is
    C(h1, t1) then rev(C(h1, a), t1)
    N then a
fun init = C(0, init)
rev(N, init)
//│ |#fun| |rev|(|a|,| |ys|)| |#=| |#if| |ys| |is|→|C|(|h1|,| |t1|)| |#then| |rev|(|C|(|h1|,| |a|)|,| |t1|)|↵|N| |#then| |a|←|↵|#fun| |init| |#=| |C|(|0|,| |init|)|↵|rev|(|N|,| |init|)|
//│ Parsed: {fun rev = a, ys, => if ys is ‹(C (h1, t1,)) then rev (C (h1, a,), t1,); (N) then a›; fun init = C (0, init,); rev (N, init,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ def rev:6 = (fun a:8 -> (fun ys:9 -> case ys:9^1 of {
//│ 	C h1:10 t1:11 => ((rev:6^2 [C h1:10^3 a:8^4]) t1:11^7)
//│ 	| N => a:8^9}))
//│ def init:7 = [C 0 init:7^14]
//│ ((rev:6^16 [N]) init:7^19)
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>>>>> initial constraints >>>>>>>>>>
//│ ([]: 9'18_callres) <: ([]: ([]: 1'init_7^19) => ([]: 10'20_callres))
//│ ([]: 0'rev_6^16) <: ([]: ([]: N) => ([]: 9'18_callres))
//│ ([]: C(([]: Int), ([]: 1'init_7^14))) <: ([]: 1'init)
//│ ([]: ([]: 2'a) => ([]: ([]: 3'ys) => ([]: 8'10_matchres))) <: ([]: 0'rev)
//│ ([]: 2'a) <: ([]: 8'10_matchres)
//│ ([]: 7'8_callres) <: ([]: 8'10_matchres)
//│ ([]: 3'ys) <: ([]: Destruct(C(4'h1, 5't1), N))
//│ ([]: 6'6_callres) <: ([]: ([]: 5't1) => ([]: 7'8_callres))
//│ ([]: 0'rev_6^2) <: ([]: ([]: C(([]: 4'h1), ([]: 2'a))) => ([]: 6'6_callres))
//│ <<<<<<<<<< initial constraints <<<<<<<<<<
//│ 
//│ >>>>>>> knots >>>>>>>
//│ C(Int, 1'init_7^14) <: 3'ys
//│ 	[-init:7^14 · -init:7^14 · -init:7^19 · +rev:6^16 · +rev:6^2 · +rev:6^2]  --->  [-init:7^14 · -init:7^19 · +rev:6^16 · +rev:6^2]
//│ <<<<<<< knots <<<<<<<
//│ 
//│ >>>>>>> type variable bounds >>>>>>>
//│ 0'rev:
//│ 	0'rev[-rev:6^2] < ([]: ([]: C(([]: 4'h1), ([]: 2'a))) => ([]: 6'6_callres))
//│ 	0'rev[-rev:6^16] < ([]: ([]: N) => ([]: 9'18_callres))
//│ 	([]: ([]: 2'a) => ([]: ([]: 3'ys) => ([]: 8'10_matchres))) < []0'rev
//│ --------------
//│ 5't1:
//│ 	5't1[] < ([+rev:6^2]: 3'ys)
//│ 	([]: C(([]: Int), ([]: 1'init_7^14))) < [-init:7^14 · -init:7^14 · -init:7^19 · +rev:6^16 · +rev:6^2]5't1
//│ 	([]: C(([]: Int), ([]: 1'init_7^14))) < [-init:7^14 · -init:7^19 · +rev:6^16]5't1
//│ --------------
//│ 10'20_callres:
//│ 	([-rev:6^2 · +rev:6^16]: N) < [-rev:6^16]10'20_callres
//│ 	([-rev:6^2 · +rev:6^2]: C(([]: 4'h1), ([]: 2'a))) < [-rev:6^16]10'20_callres
//│ 	([+rev:6^2]: C(([]: 4'h1), ([]: 2'a))) < [-rev:6^16]10'20_callres
//│ 	([+rev:6^16]: N) < [-rev:6^16]10'20_callres
//│ --------------
//│ 1'init:
//│ 	1'init[-init:7^14 · -init:7^14 · -init:7^19 · +rev:6^16 · +rev:6^2] < ([]: 5't1)
//│ 	1'init[-init:7^14 · -init:7^19 · +rev:6^16] < ([]: 5't1)
//│ 	1'init[-init:7^19] < ([+rev:6^16]: 3'ys)
//│ 	([]: C(([]: Int), ([]: 1'init_7^14))) < []1'init
//│ --------------
//│ 6'6_callres:
//│ 	6'6_callres[] < ([]: ([]: 5't1) => ([]: 7'8_callres))
//│ 	([]: ([]: 3'ys) => ([]: 8'10_matchres)) < [-rev:6^2]6'6_callres
//│ --------------
//│ 9'18_callres:
//│ 	9'18_callres[] < ([]: ([]: 1'init_7^19) => ([]: 10'20_callres))
//│ 	([]: ([]: 3'ys) => ([]: 8'10_matchres)) < [-rev:6^16]9'18_callres
//│ --------------
//│ 2'a:
//│ 	2'a[] < ([]: 8'10_matchres)
//│ 	([+rev:6^2]: C(([]: 4'h1), ([]: 2'a))) < []2'a
//│ 	([+rev:6^16]: N) < []2'a
//│ --------------
//│ 7'8_callres:
//│ 	7'8_callres[] < ([]: 8'10_matchres)
//│ 	([+rev:6^16]: N) < [-rev:6^2]7'8_callres
//│ 	([+rev:6^2]: C(([]: 4'h1), ([]: 2'a))) < [-rev:6^2]7'8_callres
//│ --------------
//│ 3'ys:
//│ 	3'ys[] < ([]: Destruct(C(4'h1, 5't1), N))
//│ 	([+rev:6^16 · -init:7^19 · -init:7^14]: C(([]: Int), ([]: 1'init_7^14))) < [+rev:6^2]3'ys
//│ 	([]: C(([]: Int), ([]: 1'init_7^14))) < [-init:7^19 · +rev:6^16]3'ys
//│ --------------
//│ 8'10_matchres:
//│ 	8'10_matchres[-rev:6^2] < ([]: 7'8_callres)
//│ 	8'10_matchres[-rev:6^16] < ([]: 10'20_callres)
//│ 	([-rev:6^2 · +rev:6^16]: N) < []8'10_matchres
//│ 	([-rev:6^2 · +rev:6^2]: C(([]: 4'h1), ([]: 2'a))) < []8'10_matchres
//│ 	([+rev:6^2]: C(([]: 4'h1), ([]: 2'a))) < []8'10_matchres
//│ 	([+rev:6^16]: N) < []8'10_matchres
//│ --------------
//│ 4'h1:
//│ 	([+rev:6^2 · +rev:6^16 · -init:7^19 · -init:7^14]: Int) < []4'h1
//│ 	([+rev:6^16 · -init:7^19]: Int) < []4'h1
//│ --------------
//│ <<<<<<< type variable bounds <<<<<<<

fun rev(a, ys) = if ys is
    C(h1, t1) then rev(C(h1, a), t1)
fun init = C(0, init)
rev(N, init)
//│ |#fun| |rev|(|a|,| |ys|)| |#=| |#if| |ys| |is|→|C|(|h1|,| |t1|)| |#then| |rev|(|C|(|h1|,| |a|)|,| |t1|)|←|↵|#fun| |init| |#=| |C|(|0|,| |init|)|↵|rev|(|N|,| |init|)|
//│ Parsed: {fun rev = a, ys, => if ys is ‹(C (h1, t1,)) then rev (C (h1, a,), t1,)›; fun init = C (0, init,); rev (N, init,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ def rev:6 = (fun a:8 -> (fun ys:9 -> case ys:9^1 of {
//│ 	C h1:10 t1:11 => ((rev:6^2 [C h1:10^3 a:8^4]) t1:11^7)}))
//│ def init:7 = [C 0 init:7^13]
//│ ((rev:6^15 [N]) init:7^18)
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>>>>> initial constraints >>>>>>>>>>
//│ ([]: 9'17_callres) <: ([]: ([]: 1'init_7^18) => ([]: 10'19_callres))
//│ ([]: 0'rev_6^15) <: ([]: ([]: N) => ([]: 9'17_callres))
//│ ([]: C(([]: Int), ([]: 1'init_7^13))) <: ([]: 1'init)
//│ ([]: ([]: 2'a) => ([]: ([]: 3'ys) => ([]: 8'9_matchres))) <: ([]: 0'rev)
//│ ([]: 7'8_callres) <: ([]: 8'9_matchres)
//│ ([]: 3'ys) <: ([]: Destruct(C(4'h1, 5't1)))
//│ ([]: 6'6_callres) <: ([]: ([]: 5't1) => ([]: 7'8_callres))
//│ ([]: 0'rev_6^2) <: ([]: ([]: C(([]: 4'h1), ([]: 2'a))) => ([]: 6'6_callres))
//│ <<<<<<<<<< initial constraints <<<<<<<<<<
//│ 
//│ >>>>>>> knots >>>>>>>
//│ C(Int, 1'init_7^13) <: 3'ys
//│ 	[-init:7^13 · -init:7^13 · -init:7^18 · +rev:6^15 · +rev:6^2 · +rev:6^2]  --->  [-init:7^13 · -init:7^18 · +rev:6^15 · +rev:6^2]
//│ <<<<<<< knots <<<<<<<
//│ 
//│ >>>>>>> type variable bounds >>>>>>>
//│ 0'rev:
//│ 	0'rev[-rev:6^2] < ([]: ([]: C(([]: 4'h1), ([]: 2'a))) => ([]: 6'6_callres))
//│ 	0'rev[-rev:6^15] < ([]: ([]: N) => ([]: 9'17_callres))
//│ 	([]: ([]: 2'a) => ([]: ([]: 3'ys) => ([]: 8'9_matchres))) < []0'rev
//│ --------------
//│ 5't1:
//│ 	5't1[] < ([+rev:6^2]: 3'ys)
//│ 	([]: C(([]: Int), ([]: 1'init_7^13))) < [-init:7^13 · -init:7^13 · -init:7^18 · +rev:6^15 · +rev:6^2]5't1
//│ 	([]: C(([]: Int), ([]: 1'init_7^13))) < [-init:7^13 · -init:7^18 · +rev:6^15]5't1
//│ --------------
//│ 1'init:
//│ 	1'init[-init:7^13 · -init:7^13 · -init:7^18 · +rev:6^15 · +rev:6^2] < ([]: 5't1)
//│ 	1'init[-init:7^13 · -init:7^18 · +rev:6^15] < ([]: 5't1)
//│ 	1'init[-init:7^18] < ([+rev:6^15]: 3'ys)
//│ 	([]: C(([]: Int), ([]: 1'init_7^13))) < []1'init
//│ --------------
//│ 6'6_callres:
//│ 	6'6_callres[] < ([]: ([]: 5't1) => ([]: 7'8_callres))
//│ 	([]: ([]: 3'ys) => ([]: 8'9_matchres)) < [-rev:6^2]6'6_callres
//│ --------------
//│ 9'17_callres:
//│ 	9'17_callres[] < ([]: ([]: 1'init_7^18) => ([]: 10'19_callres))
//│ 	([]: ([]: 3'ys) => ([]: 8'9_matchres)) < [-rev:6^15]9'17_callres
//│ --------------
//│ 2'a:
//│ 	([+rev:6^2]: C(([]: 4'h1), ([]: 2'a))) < []2'a
//│ 	([+rev:6^15]: N) < []2'a
//│ --------------
//│ 7'8_callres:
//│ 	7'8_callres[] < ([]: 8'9_matchres)
//│ --------------
//│ 3'ys:
//│ 	3'ys[] < ([]: Destruct(C(4'h1, 5't1)))
//│ 	([+rev:6^15 · -init:7^18 · -init:7^13]: C(([]: Int), ([]: 1'init_7^13))) < [+rev:6^2]3'ys
//│ 	([]: C(([]: Int), ([]: 1'init_7^13))) < [-init:7^18 · +rev:6^15]3'ys
//│ --------------
//│ 8'9_matchres:
//│ 	8'9_matchres[-rev:6^2] < ([]: 7'8_callres)
//│ 	8'9_matchres[-rev:6^15] < ([]: 10'19_callres)
//│ --------------
//│ 4'h1:
//│ 	([+rev:6^2 · +rev:6^15 · -init:7^18 · -init:7^13]: Int) < []4'h1
//│ 	([+rev:6^15 · -init:7^18]: Int) < []4'h1
//│ --------------
//│ <<<<<<< type variable bounds <<<<<<<

fun c(x) = if x is
    C(a) then c(a)
    N then N
//│ |#fun| |c|(|x|)| |#=| |#if| |x| |is|→|C|(|a|)| |#then| |c|(|a|)|↵|N| |#then| |N|←|
//│ Parsed: {fun c = x, => if x is ‹(C (a,)) then c (a,); (N) then N›}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ def c:6 = (fun x:7 -> case x:7^1 of {
//│ 	C a:8 => (c:6^2 a:8^3)
//│ 	| N => [N]})
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>>>>> initial constraints >>>>>>>>>>
//│ ([]: ([]: 1'x) => ([]: 4'6_matchres)) <: ([]: 0'c)
//│ ([]: N) <: ([]: 4'6_matchres)
//│ ([]: 3'4_callres) <: ([]: 4'6_matchres)
//│ ([]: 1'x) <: ([]: Destruct(C(2'a), N))
//│ ([]: 0'c_6^2) <: ([]: ([]: 2'a) => ([]: 3'4_callres))
//│ <<<<<<<<<< initial constraints <<<<<<<<<<
//│ 
//│ >>>>>>> knots >>>>>>>
//│ <<<<<<< knots <<<<<<<
//│ 
//│ >>>>>>> type variable bounds >>>>>>>
//│ 0'c:
//│ 	0'c[-c:6^2] < ([]: ([]: 2'a) => ([]: 3'4_callres))
//│ 	([]: ([]: 1'x) => ([]: 4'6_matchres)) < []0'c
//│ --------------
//│ 1'x:
//│ 	1'x[] < ([]: Destruct(C(2'a), N))
//│ --------------
//│ 2'a:
//│ 	2'a[+c:6^2] < ([]: 1'x)
//│ --------------
//│ 3'4_callres:
//│ 	3'4_callres[] < ([]: 4'6_matchres)
//│ 	([]: N) < [-c:6^2]3'4_callres
//│ --------------
//│ 4'6_matchres:
//│ 	4'6_matchres[] < ([-c:6^2]: 3'4_callres)
//│ 	([-c:6^2]: N) < []4'6_matchres
//│ 	([]: N) < []4'6_matchres
//│ --------------
//│ <<<<<<< type variable bounds <<<<<<<
