:NewParser
:ParseOnly

_LUMBERHACK_EVAL
fun inter(xs) = if xs is
  N then ys => ys
  C(h, t) then ys => C(h, inter(ys)(t))
inter(N)(N)
//│ |_LUMBERHACK_EVAL|↵|#fun| |inter|(|xs|)| |#=| |#if| |xs| |is|→|N| |#then| |ys| |=>| |ys|↵|C|(|h|,| |t|)| |#then| |ys| |=>| |C|(|h|,| |inter|(|ys|)|(|t|)|)|←|↵|inter|(|N|)|(|N|)|
//│ Parsed: {_LUMBERHACK_EVAL; fun inter = xs, => if xs is ‹(N) then ys, => ys; (C (h, t,)) then ys, => C (h, inter (ys,) (t,),)›; inter (N,) (N,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ inter^14([N], [N])
//│ def inter(xs⁰) = case xs⁰ of {
//│ 	N  => (fun ys⁰ -> ys⁰)
//│ 	| C h⁰ t⁰ => (fun ys¹ -> [C h⁰ inter^5(ys¹, t⁰)])}
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>>>>> Original Eval Res >>>>>>>>>>
//│ [N]
//│ <<<<<<<<<< Original Eval Res <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [inter^14]
//│ 	[inter^14 · inter^5] ---> [inter^14] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ inter₀([N], [N])
//│ def inter₀(xs¹) = 
//│ 	case xs¹ of {
//│ 		N  => (fun ys² -> ys²)
//│ 		| C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [N]: 33 --->
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 30
//│ [N]: 35 --->
//│ 	NoCons
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 30
//│ ------------------
//│ case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 30 --->
//│ 	[N]: 33
//│ 	[N]: 35
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ inter₀([N], [N])
//│ def inter₀(xs²) = 
//│ 	case xs² of {
//│ 		N  => (fun ys⁴ -> ys⁴)
//│ 		| C h¹ t¹ => (fun ys⁵ -> [C h¹ inter₀(ys⁵, t¹)])}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>> evaluate >>>>>>>
//│ [N]
//│ <<<<<<< evaluate <<<<<<<


_LUMBERHACK_EVAL
fun inter(xs) = if xs is
  N then ys => ys
  C(h, t) then ys => C(h, inter(ys)(t))
let l1 = C(1, C(2, N))
let l2 = C(9, C(10, N))
inter(l1)(l2)
//│ |_LUMBERHACK_EVAL|↵|#fun| |inter|(|xs|)| |#=| |#if| |xs| |is|→|N| |#then| |ys| |=>| |ys|↵|C|(|h|,| |t|)| |#then| |ys| |=>| |C|(|h|,| |inter|(|ys|)|(|t|)|)|←|↵|#let| |l1| |#=| |C|(|1|,| |C|(|2|,| |N|)|)|↵|#let| |l2| |#=| |C|(|9|,| |C|(|10|,| |N|)|)|↵|inter|(|l1|)|(|l2|)|
//│ Parsed: {_LUMBERHACK_EVAL; fun inter = xs, => if xs is ‹(N) then ys, => ys; (C (h, t,)) then ys, => C (h, inter (ys,) (t,),)›; let l1 = C (1, C (2, N,),); let l2 = C (9, C (10, N,),); inter (l1,) (l2,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ inter^24(l1^25, l2^27)
//│ def inter(xs⁰) = case xs⁰ of {
//│ 	N  => (fun ys⁰ -> ys⁰)
//│ 	| C h⁰ t⁰ => (fun ys¹ -> [C h⁰ inter^5(ys¹, t⁰)])}
//│ def l1 = [C 1 [C 2 [N]]]
//│ def l2 = [C 9 [C 10 [N]]]
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>>>>> Original Eval Res >>>>>>>>>>
//│ [C 1 [C 9 [C 2 [C 10 [N]]]]]
//│ <<<<<<<<<< Original Eval Res <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [inter^24]
//│ 	[inter^24 · inter^5] ---> [inter^24] (only one)
//│ [l1^25] (hopeless to continue)
//│ [l2^27] (hopeless to continue)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ inter₀(l1₀, l2₀)
//│ def inter₀(xs¹) = 
//│ 	case xs¹ of {
//│ 		N  => (fun ys² -> ys²)
//│ 		| C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}
//│ def l1₀ = 
//│ 	[C 1 [C 2 [N]]]
//│ def l2₀ = 
//│ 	[C 9 [C 10 [N]]]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [N]: 31 --->
//│ 	NoCons
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 45
//│ [C 2 [N]]: 32 --->
//│ 	NoCons
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 45
//│ [C 1 [C 2 [N]]]: 33 --->
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 45
//│ [N]: 49 --->
//│ 	NoCons
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 45
//│ [C 10 [N]]: 50 --->
//│ 	NoCons
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 45
//│ [C 9 [C 10 [N]]]: 51 --->
//│ 	NoCons
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 45
//│ ------------------
//│ case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 45 --->
//│ 	[N]: 31
//│ 	[C 2 [N]]: 32
//│ 	[C 1 [C 2 [N]]]: 33
//│ 	[N]: 49
//│ 	[C 10 [N]]: 50
//│ 	[C 9 [C 10 [N]]]: 51
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ inter₀(l1₀, l2₀)
//│ def inter₀(xs²) = 
//│ 	case xs² of {
//│ 		N  => (fun ys⁴ -> ys⁴)
//│ 		| C h¹ t¹ => (fun ys⁵ -> [C h¹ inter₀(ys⁵, t¹)])}
//│ def l1₀ = 
//│ 	[C 1 [C 2 [N]]]
//│ def l2₀ = 
//│ 	[C 9 [C 10 [N]]]
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>> evaluate >>>>>>>
//│ [C 1 [C 9 [C 2 [C 10 [N]]]]]
//│ <<<<<<< evaluate <<<<<<<

fun inter(xs) = if xs is
  N then ys => ys
  C(h, t) then ys => C(h, inter(ys)(t))
let l1 = C(1, C(2, l1))
let l2 = C(9, l2)
inter(l1)(l2)
//│ |#fun| |inter|(|xs|)| |#=| |#if| |xs| |is|→|N| |#then| |ys| |=>| |ys|↵|C|(|h|,| |t|)| |#then| |ys| |=>| |C|(|h|,| |inter|(|ys|)|(|t|)|)|←|↵|#let| |l1| |#=| |C|(|1|,| |C|(|2|,| |l1|)|)|↵|#let| |l2| |#=| |C|(|9|,| |l2|)|↵|inter|(|l1|)|(|l2|)|
//│ Parsed: {fun inter = xs, => if xs is ‹(N) then ys, => ys; (C (h, t,)) then ys, => C (h, inter (ys,) (t,),)›; let l1 = C (1, C (2, l1,),); let l2 = C (9, l2,); inter (l1,) (l2,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ inter^22(l1^23, l2^25)
//│ def inter(xs⁰) = case xs⁰ of {
//│ 	N  => (fun ys⁰ -> ys⁰)
//│ 	| C h⁰ t⁰ => (fun ys¹ -> [C h⁰ inter^5(ys¹, t⁰)])}
//│ def l1 = [C 1 [C 2 l1^16]]
//│ def l2 = [C 9 l2^20]
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [inter^22]
//│ 	[inter^22 · inter^5] ---> [inter^22] (only one)
//│ [l1^23]
//│ 	[l1^23 · l1^16] ---> [l1^23] (only one)
//│ [l2^25]
//│ 	[l2^25 · l2^20] ---> [l2^25] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ inter₀(l1₀, l2₀)
//│ def inter₀(xs¹) = 
//│ 	case xs¹ of {
//│ 		N  => (fun ys² -> ys²)
//│ 		| C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}
//│ def l1₀ = 
//│ 	[C 1 [C 2 l1₀]]
//│ def l2₀ = 
//│ 	[C 9 l2₀]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [C 2 l1₀]: 30 --->
//│ 	NoCons
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 46
//│ [C 1 [C 2 l1₀]]: 31 --->
//│ 	NoCons
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 46
//│ [C 9 l2₀]: 34 --->
//│ 	NoCons
//│ 	case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 46
//│ ------------------
//│ case xs¹ of {N  => (fun ys² -> ys²) | C h¹ t¹ => (fun ys³ -> [C h¹ inter₀(ys³, t¹)])}: 46 --->
//│ 	[C 2 l1₀]: 30
//│ 	[C 1 [C 2 l1₀]]: 31
//│ 	[C 9 l2₀]: 34
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ inter₀(l1₀, l2₀)
//│ def inter₀(xs²) = 
//│ 	case xs² of {
//│ 		N  => (fun ys⁴ -> ys⁴)
//│ 		| C h¹ t¹ => (fun ys⁵ -> [C h¹ inter₀(ys⁵, t¹)])}
//│ def l1₀ = 
//│ 	[C 1 [C 2 l1₀]]
//│ def l2₀ = 
//│ 	[C 9 l2₀]
//│ <<<<<<< after fusion <<<<<<<


// NOTE: maybe more fusion can be done
fun f(x) = if x is
  C(a) then
    if a is
      A then N
      B then g(D(a))
fun g(y) = if y is
  D(b) then
    if b is
      A then N
      B then f(C(b))
f(C(A))
//│ |#fun| |f|(|x|)| |#=| |#if| |x| |is|→|C|(|a|)| |#then|→|#if| |a| |is|→|A| |#then| |N|↵|B| |#then| |g|(|D|(|a|)|)|←|←|←|↵|#fun| |g|(|y|)| |#=| |#if| |y| |is|→|D|(|b|)| |#then|→|#if| |b| |is|→|A| |#then| |N|↵|B| |#then| |f|(|C|(|b|)|)|←|←|←|↵|f|(|C|(|A|)|)|
//│ Parsed: {fun f = x, => if x is ‹(C (a,)) then {if a is ‹(A) then N; (B) then g (D (a,),)›}›; fun g = y, => if y is ‹(D (b,)) then {if b is ‹(A) then N; (B) then f (C (b,),)›}›; f (C (A,),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ f^21([C [A]])
//│ def f(x⁰) = case x⁰ of {
//│ 	C a⁰ => case a⁰ of {
//│ 		A  => [N]
//│ 		| B  => g^4([D a⁰])}}
//│ def g(y⁰) = case y⁰ of {
//│ 	D b⁰ => case b⁰ of {
//│ 		A  => [N]
//│ 		| B  => f^14([C b⁰])}}
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [f^21]
//│ 	[f^21 · g^4]
//│ 		[f^21 · g^4 · f^14] ---> [f^21] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ f₀([C [A]])
//│ def f₀(x¹) = 
//│ 	case x¹ of {
//│ 		C a¹ => case a¹ of {
//│ 			A  => [N]
//│ 			| B  => g₀([D a¹])}}
//│ 	where
//│ 	def g₀(y¹) = 
//│ 		case y¹ of {
//│ 			D b¹ => case b¹ of {
//│ 				A  => [N]
//│ 				| B  => f₀([C b¹])}}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [C b¹]: 30 --->
//│ 	case x¹ of {C a¹ => case a¹ of {A  => [N] | B  => g₀([D a¹])}}: 43
//│ [D a¹]: 40 --->
//│ 	case y¹ of {D b¹ => case b¹ of {A  => [N] | B  => f₀([C b¹])}}: 33
//│ [A]: 46 --->
//│ 	case b¹ of {A  => [N] | B  => f₀([C b¹])}: 32
//│ 	case a¹ of {A  => [N] | B  => g₀([D a¹])}: 42
//│ [C [A]]: 47 --->
//│ 	case x¹ of {C a¹ => case a¹ of {A  => [N] | B  => g₀([D a¹])}}: 43
//│ ------------------
//│ case b¹ of {A  => [N] | B  => f₀([C b¹])}: 32 --->
//│ 	[A]: 46
//│ case y¹ of {D b¹ => case b¹ of {A  => [N] | B  => f₀([C b¹])}}: 33 --->
//│ 	[D a¹]: 40
//│ case a¹ of {A  => [N] | B  => g₀([D a¹])}: 42 --->
//│ 	[A]: 46
//│ case x¹ of {C a¹ => case a¹ of {A  => [N] | B  => g₀([D a¹])}}: 43 --->
//│ 	[C b¹]: 30
//│ 	[C [A]]: 47
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ f₀([C [A]])
//│ def f₀(x²) = 
//│ 	case x² of {
//│ 		C a¹ => case a¹ of {
//│ 			A  => [N]
//│ 			| B  => g₀([D a¹])}}
//│ 	where
//│ 	def g₀(y²) = 
//│ 		case y² of {
//│ 			D b¹ => case b¹ of {
//│ 				A  => [N]
//│ 				| B  => f₀([C b¹])}}
//│ <<<<<<< after fusion <<<<<<<


// NOTE: problem resolved by thunking the computation inside the branch
fun c(x) = if x is
  C(a) then primitive(a) // print(a)
fun f(a) = if False then c(a) else Unit
f(C(A))
//│ |#fun| |c|(|x|)| |#=| |#if| |x| |is|→|C|(|a|)| |#then| |primitive|(|a|)| |/* print(a)*/|←|↵|#fun| |f|(|a|)| |#=| |#if| |False| |#then| |c|(|a|)| |#else| |Unit|↵|f|(|C|(|A|)|)|
//│ Parsed: {fun c = x, => if x is ‹(C (a,)) then primitive (a,)›; fun f = a, => if (False) then c (a,) else Unit; f (C (A,),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ f^14([C [A]])
//│ def c(x⁰) = case x⁰ of {
//│ 	C a⁰ => primitive⁰(a⁰)}
//│ def f(a¹) = if [False] then c^8(a¹) else [Unit]
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [f^14] (hopeless to continue)
//│ 	[f^14 · c^8] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ f₀([C [A]])
//│ def f₀(a³) = 
//│ 	if [False] then c₀(a³) else [Unit]
//│ 	where
//│ 	def c₀(x¹) = 
//│ 		case x¹ of {
//│ 			C a² => primitive⁰(a²)}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [C [A]]: 33 --->
//│ 	case x¹ of {C a² => primitive⁰(a²)}: 22
//│ ------------------
//│ case x¹ of {C a² => primitive⁰(a²)}: 22 --->
//│ 	[C [A]]: 33
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [C [A]]: 33 --->
//│ 	case x¹ of {C a² => primitive⁰(a²)}: 22
//│ ------------------
//│ case x¹ of {C a² => primitive⁰(a²)}: 22 --->
//│ 	[C [A]]: 33
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ f₀(
//│ 	let a⁴ = [A]
//│ 	in (fun _lh_dummy⁰ -> primitive⁰(a⁴)))
//│ def f₀(a⁵) = 
//│ 	if [False] then c₀(a⁵) else [Unit]
//│ 	where
//│ 	def c₀(x²) = 
//│ 		x²(99)
//│ <<<<<<< after fusion <<<<<<<


fun f(xs, ys) = if xs is
  N then 0
  _ then if xs is
    C(h, t) then if ys is
      C(hh, yt) then h + hh
      _ then h
    _ then error
f(C(1, N), C(2, N))
//│ |#fun| |f|(|xs|,| |ys|)| |#=| |#if| |xs| |is|→|N| |#then| |0|↵|_| |#then| |#if| |xs| |is|→|C|(|h|,| |t|)| |#then| |#if| |ys| |is|→|C|(|hh|,| |yt|)| |#then| |h| |+| |hh|↵|_| |#then| |h|←|↵|_| |#then| |error|←|←|↵|f|(|C|(|1|,| |N|)|,| |C|(|2|,| |N|)|)|
//│ Parsed: {fun f = xs, ys, => if xs is ‹(N) then 0; (_) then if xs is ‹(C (h, t,)) then if ys is ‹(C (hh, yt,)) then + (h,) (hh,); (_) then h›; (_) then error››; f (C (1, N,), C (2, N,),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ f^17([C 1 [N]], [C 2 [N]])
//│ def f(xs⁰, ys⁰) = case xs⁰ of {
//│ 	N  => 0
//│ 	| _  => case xs⁰ of {
//│ 		C h⁰ t⁰ => case ys⁰ of {
//│ 			C hh⁰ yt⁰ => (h⁰ + hh⁰)
//│ 			| _  => h⁰}
//│ 		| _  => error⁰}}
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [f^17] (hopeless to continue)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ f₀([C 1 [N]], [C 2 [N]])
//│ def f₀(xs¹, ys¹) = 
//│ 	case xs¹ of {
//│ 		N  => 0
//│ 		| _  => case xs¹ of {
//│ 			C h¹ t¹ => case ys¹ of {
//│ 				C hh¹ yt¹ => (h¹ + hh¹)
//│ 				| _  => h¹}
//│ 			| _  => error⁰}}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [C 1 [N]]: 45 --->
//│ 	case xs¹ of {C h¹ t¹ => case ys¹ of {C hh¹ yt¹ => (h¹ + hh¹) | _  => h¹} | _  => error⁰}: 38
//│ 	case xs¹ of {N  => 0 | _  => case xs¹ of {C h¹ t¹ => case ys¹ of {C hh¹ yt¹ => (h¹ + hh¹) | _  => h¹} | _  => error⁰}}: 39
//│ [C 2 [N]]: 49 --->
//│ 	case ys¹ of {C hh¹ yt¹ => (h¹ + hh¹) | _  => h¹}: 36
//│ ------------------
//│ case ys¹ of {C hh¹ yt¹ => (h¹ + hh¹) | _  => h¹}: 36 --->
//│ 	[C 2 [N]]: 49
//│ case xs¹ of {C h¹ t¹ => case ys¹ of {C hh¹ yt¹ => (h¹ + hh¹) | _  => h¹} | _  => error⁰}: 38 --->
//│ 	[C 1 [N]]: 45
//│ case xs¹ of {N  => 0 | _  => case xs¹ of {C h¹ t¹ => case ys¹ of {C hh¹ yt¹ => (h¹ + hh¹) | _  => h¹} | _  => error⁰}}: 39 --->
//│ 	[C 1 [N]]: 45
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [C 2 [N]]: 49 --->
//│ 	case ys¹ of {C hh¹ yt¹ => (h¹ + hh¹) | _  => h¹}: 36
//│ ------------------
//│ case ys¹ of {C hh¹ yt¹ => (h¹ + hh¹) | _  => h¹}: 36 --->
//│ 	[C 2 [N]]: 49
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ f₀([C 1 [N]], 
//│ 	let hh² = 2
//│ 	in (fun h² -> (h² + hh²)))
//│ def f₀(xs², ys²) = 
//│ 	case xs² of {
//│ 		N  => 0
//│ 		| _  => case xs² of {
//│ 			C h¹ t¹ => ys²(h¹)
//│ 			| _  => error⁰}}
//│ <<<<<<< after fusion <<<<<<<


fun f(xs) = if xs is
  N then 0
  _ then if xs is
    C(h, t) then h
    _ then error("match error")
f(C(1, N))
//│ |#fun| |f|(|xs|)| |#=| |#if| |xs| |is|→|N| |#then| |0|↵|_| |#then| |#if| |xs| |is|→|C|(|h|,| |t|)| |#then| |h|↵|_| |#then| |error|(|"match error"|)|←|←|↵|f|(|C|(|1|,| |N|)|)|
//│ Parsed: {fun f = xs, => if xs is ‹(N) then 0; (_) then if xs is ‹(C (h, t,)) then h; (_) then error ("match error",)››; f (C (1, N,),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ f^33([C 1 [N]])
//│ def f(xs⁰) = case xs⁰ of {
//│ 	N  => 0
//│ 	| _  => case xs⁰ of {
//│ 		C h⁰ t⁰ => h⁰
//│ 		| _  => error⁰([LH_C 'm' [LH_C 'a' [LH_C 't' [LH_C 'c' [LH_C 'h' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]])}}
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [f^33] (hopeless to continue)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ f₀([C 1 [N]])
//│ def f₀(xs¹) = 
//│ 	case xs¹ of {
//│ 		N  => 0
//│ 		| _  => case xs¹ of {
//│ 			C h¹ t¹ => h¹
//│ 			| _  => error⁰([LH_C 'm' [LH_C 'a' [LH_C 't' [LH_C 'c' [LH_C 'h' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]])}}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [C 1 [N]]: 73 --->
//│ 	case xs¹ of {C h¹ t¹ => h¹ | _  => error⁰([LH_C 'm' [LH_C 'a' [LH_C 't' [LH_C 'c' [LH_C 'h' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]])}: 67
//│ 	case xs¹ of {N  => 0 | _  => case xs¹ of {C h¹ t¹ => h¹ | _  => error⁰([LH_C 'm' [LH_C 'a' [LH_C 't' [LH_C 'c' [LH_C 'h' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]])}}: 68
//│ ------------------
//│ case xs¹ of {C h¹ t¹ => h¹ | _  => error⁰([LH_C 'm' [LH_C 'a' [LH_C 't' [LH_C 'c' [LH_C 'h' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]])}: 67 --->
//│ 	[C 1 [N]]: 73
//│ case xs¹ of {N  => 0 | _  => case xs¹ of {C h¹ t¹ => h¹ | _  => error⁰([LH_C 'm' [LH_C 'a' [LH_C 't' [LH_C 'c' [LH_C 'h' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]])}}: 68 --->
//│ 	[C 1 [N]]: 73
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ f₀([C 1 [N]])
//│ def f₀(xs²) = 
//│ 	case xs² of {
//│ 		N  => 0
//│ 		| _  => case xs² of {
//│ 			C h¹ t¹ => h¹
//│ 			| _  => error⁰([LH_C 'm' [LH_C 'a' [LH_C 't' [LH_C 'c' [LH_C 'h' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]])}}
//│ <<<<<<< after fusion <<<<<<<


fun f(x, y) = if x is
  N then y
  _ then y + 1
f(C(1, N), 0)
//│ |#fun| |f|(|x|,| |y|)| |#=| |#if| |x| |is|→|N| |#then| |y|↵|_| |#then| |y| |+| |1|←|↵|f|(|C|(|1|,| |N|)|,| |0|)|
//│ Parsed: {fun f = x, y, => if x is ‹(N) then y; (_) then + (y,) (1,)›; f (C (1, N,), 0,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ f^11([C 1 [N]], 0)
//│ def f(x⁰, y⁰) = case x⁰ of {
//│ 	N  => y⁰
//│ 	| _  => (y⁰ + 1)}
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [f^11] (hopeless to continue)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ f₀([C 1 [N]], 0)
//│ def f₀(x¹, y¹) = 
//│ 	case x¹ of {
//│ 		N  => y¹
//│ 		| _  => (y¹ + 1)}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [C 1 [N]]: 31 --->
//│ 	case x¹ of {N  => y¹ | _  => (y¹ + 1)}: 25
//│ ------------------
//│ case x¹ of {N  => y¹ | _  => (y¹ + 1)}: 25 --->
//│ 	[C 1 [N]]: 31
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [C 1 [N]]: 31 --->
//│ 	case x¹ of {N  => y¹ | _  => (y¹ + 1)}: 25
//│ ------------------
//│ case x¹ of {N  => y¹ | _  => (y¹ + 1)}: 25 --->
//│ 	[C 1 [N]]: 31
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ f₀((fun y² -> (y² + 1)), 0)
//│ def f₀(x², y³) = 
//│ 	x²(y³)
//│ <<<<<<< after fusion <<<<<<<


// NOTE: after registering wildcard and id match, no type error
fun zip(xs, ys) = if xs is
  N then N
  _ then if ys is
    N then N
    _ then if xs is
      C(xs, xt) then if ys is
        C(ys, yt) then C(P2(xs, ys), zip(xt, yt))
        _ then N
      _ then N
zip(C(1,N), C(2,N))
//│ |#fun| |zip|(|xs|,| |ys|)| |#=| |#if| |xs| |is|→|N| |#then| |N|↵|_| |#then| |#if| |ys| |is|→|N| |#then| |N|↵|_| |#then| |#if| |xs| |is|→|C|(|xs|,| |xt|)| |#then| |#if| |ys| |is|→|C|(|ys|,| |yt|)| |#then| |C|(|P2|(|xs|,| |ys|)|,| |zip|(|xt|,| |yt|)|)|↵|_| |#then| |N|←|↵|_| |#then| |N|←|←|←|↵|zip|(|C|(|1|,|N|)|,| |C|(|2|,|N|)|)|
//│ Parsed: {fun zip = xs, ys, => if xs is ‹(N) then N; (_) then if ys is ‹(N) then N; (_) then if xs is ‹(C (xs, xt,)) then if ys is ‹(C (ys, yt,)) then C (P2 (xs, ys,), zip (xt, yt,),); (_) then N›; (_) then N›››; zip (C (1, N,), C (2, N,),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ zip^24([C 1 [N]], [C 2 [N]])
//│ def zip(xs⁰, ys⁰) = case xs⁰ of {
//│ 	N  => [N]
//│ 	| _  => case ys⁰ of {
//│ 		N  => [N]
//│ 		| _  => case xs⁰ of {
//│ 			C xs¹ xt⁰ => case ys⁰ of {
//│ 				C ys¹ yt⁰ => [C [P2 xs¹ ys¹] zip^10(xt⁰, yt⁰)]
//│ 				| _  => [N]}
//│ 			| _  => [N]}}}
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [zip^24]
//│ 	[zip^24 · zip^10] ---> [zip^24] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ zip₀([C 1 [N]], [C 2 [N]])
//│ def zip₀(xs², ys²) = 
//│ 	case xs² of {
//│ 		N  => [N]
//│ 		| _  => case ys² of {
//│ 			N  => [N]
//│ 			| _  => case xs² of {
//│ 				C xs³ xt¹ => case ys² of {
//│ 					C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)]
//│ 					| _  => [N]}
//│ 				| _  => [N]}}}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [N]: 58 --->
//│ 	case xs² of {C xs³ xt¹ => case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]} | _  => [N]}: 51
//│ 	case xs² of {N  => [N] | _  => case ys² of {N  => [N] | _  => case xs² of {C xs³ xt¹ => case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]} | _  => [N]}}}: 53
//│ [C 1 [N]]: 59 --->
//│ 	case xs² of {C xs³ xt¹ => case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]} | _  => [N]}: 51
//│ 	case xs² of {N  => [N] | _  => case ys² of {N  => [N] | _  => case xs² of {C xs³ xt¹ => case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]} | _  => [N]}}}: 53
//│ [N]: 62 --->
//│ 	case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]}: 49
//│ 	case ys² of {N  => [N] | _  => case xs² of {C xs³ xt¹ => case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]} | _  => [N]}}: 52
//│ [C 2 [N]]: 63 --->
//│ 	case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]}: 49
//│ 	case ys² of {N  => [N] | _  => case xs² of {C xs³ xt¹ => case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]} | _  => [N]}}: 52
//│ ------------------
//│ case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]}: 49 --->
//│ 	[N]: 62
//│ 	[C 2 [N]]: 63
//│ case xs² of {C xs³ xt¹ => case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]} | _  => [N]}: 51 --->
//│ 	[N]: 58
//│ 	[C 1 [N]]: 59
//│ case ys² of {N  => [N] | _  => case xs² of {C xs³ xt¹ => case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]} | _  => [N]}}: 52 --->
//│ 	[N]: 62
//│ 	[C 2 [N]]: 63
//│ case xs² of {N  => [N] | _  => case ys² of {N  => [N] | _  => case xs² of {C xs³ xt¹ => case ys² of {C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)] | _  => [N]} | _  => [N]}}}: 53 --->
//│ 	[N]: 58
//│ 	[C 1 [N]]: 59
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ zip₀([C 1 [N]], [C 2 [N]])
//│ def zip₀(xs⁴, ys⁴) = 
//│ 	case xs⁴ of {
//│ 		N  => [N]
//│ 		| _  => case ys⁴ of {
//│ 			N  => [N]
//│ 			| _  => case xs⁴ of {
//│ 				C xs³ xt¹ => case ys⁴ of {
//│ 					C ys³ yt¹ => [C [P2 xs³ ys³] zip₀(xt¹, yt¹)]
//│ 					| _  => [N]}
//│ 				| _  => [N]}}}
//│ <<<<<<< after fusion <<<<<<<

// NOTE: type error: f x = x f cannot be well typed in haskell
fun f(x) =
  (
    if x is
      C(h, t) then ff => C(h, ff(t))
      N then ff => N
  )(f)
f(C(3, N))
//│ |#fun| |f|(|x|)| |#=|→|(|→|#if| |x| |is|→|C|(|h|,| |t|)| |#then| |ff| |=>| |C|(|h|,| |ff|(|t|)|)|↵|N| |#then| |ff| |=>| |N|←|←|↵|)|(|f|)|←|↵|f|(|C|(|3|,| |N|)|)|
//│ Parsed: {fun f = x, => {'(' if x is ‹(C (h, t,)) then ff, => C (h, ff (t,),); (N) then ff, => N›, ')' (f,)}; f (C (3, N,),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ f^14([C 3 [N]])
//│ def f(x⁰) = case x⁰ of {
//│ 	C h⁰ t⁰ => (fun ff⁰ -> [C h⁰ ff⁰(t⁰)])
//│ 	| N  => (fun ff¹ -> [N])}(f^11)
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [f^14]
//│ 	[f^14 · f^11] ---> [f^14] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ f₀([C 3 [N]])
//│ def f₀(x¹) = 
//│ 	case x¹ of {
//│ 		C h¹ t¹ => (fun ff² -> [C h¹ ff²(t¹)])
//│ 		| N  => (fun ff³ -> [N])}(f₀)
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [N]: 34 --->
//│ 	case x¹ of {C h¹ t¹ => (fun ff² -> [C h¹ ff²(t¹)]) | N  => (fun ff³ -> [N])}: 28
//│ [C 3 [N]]: 35 --->
//│ 	case x¹ of {C h¹ t¹ => (fun ff² -> [C h¹ ff²(t¹)]) | N  => (fun ff³ -> [N])}: 28
//│ ------------------
//│ case x¹ of {C h¹ t¹ => (fun ff² -> [C h¹ ff²(t¹)]) | N  => (fun ff³ -> [N])}: 28 --->
//│ 	[N]: 34
//│ 	[C 3 [N]]: 35
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [N]: 34 --->
//│ 	case x¹ of {C h¹ t¹ => (fun ff² -> [C h¹ ff²(t¹)]) | N  => (fun ff³ -> [N])}: 28
//│ [C 3 [N]]: 35 --->
//│ 	case x¹ of {C h¹ t¹ => (fun ff² -> [C h¹ ff²(t¹)]) | N  => (fun ff³ -> [N])}: 28
//│ ------------------
//│ case x¹ of {C h¹ t¹ => (fun ff² -> [C h¹ ff²(t¹)]) | N  => (fun ff³ -> [N])}: 28 --->
//│ 	[N]: 34
//│ 	[C 3 [N]]: 35
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ f₀(
//│ 	let h² = 3
//│ 	in let t² = (fun _lh_dummy¹ -> (fun ff⁵ -> [N]))
//│ 	in (fun _lh_dummy⁰ -> (fun ff⁴ -> [C h² ff⁴(t²)])))
//│ def f₀(x²) = 
//│ 	x²(99, f₀)
//│ <<<<<<< after fusion <<<<<<<

// a more minimal example requiring recursive type after fusion
fun f(x) =
  (
    if x is
      N then ff => 1
  )(f)
f(N)
//│ |#fun| |f|(|x|)| |#=|→|(|→|#if| |x| |is|→|N| |#then| |ff| |=>| |1|←|←|↵|)|(|f|)|←|↵|f|(|N|)|
//│ Parsed: {fun f = x, => {'(' if x is ‹(N) then ff, => 1›, ')' (f,)}; f (N,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ f^8([N])
//│ def f(x⁰) = case x⁰ of {
//│ 	N  => (fun ff⁰ -> 1)}(f^5)
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [f^8] (hopeless to continue)
//│ 	[f^8 · f^5] ---> [f^8] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ f₀([N])
//│ def f₀(x¹) = 
//│ 	case x¹ of {
//│ 		N  => (fun ff¹ -> 1)}(f₀)
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [N]: 19 --->
//│ 	case x¹ of {N  => (fun ff¹ -> 1)}: 14
//│ ------------------
//│ case x¹ of {N  => (fun ff¹ -> 1)}: 14 --->
//│ 	[N]: 19
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [N]: 19 --->
//│ 	case x¹ of {N  => (fun ff¹ -> 1)}: 14
//│ ------------------
//│ case x¹ of {N  => (fun ff¹ -> 1)}: 14 --->
//│ 	[N]: 19
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ f₀((fun _lh_dummy⁰ -> (fun ff² -> 1)))
//│ def f₀(x²) = 
//│ 	x²(99, f₀)
//│ <<<<<<< after fusion <<<<<<<


// FIXME:
:lhInHaskell
:lhGenOCaml
:d
break p [] = ([], [])
break p (x:xs) = if p x then ([], (x:xs)) else case (break1 p xs) of { (ys, zs) -> ((x:ys), zs) }
break1 p [] = ([], [])
break1 p (x:xs) = if p x then ([], (x:xs)) else case (break1 p xs) of { (ys, zs) -> ((x:ys), zs) }
words s =  case (dropWhile (\x -> polyEq x ' ') s) of
          [] -> []
          s' -> case (break (\x -> polyEq x ' ') s') of (w, s'') -> (w : (words s''))
dropWhile f [] = []
dropWhile f (h:t) = if (f h) then dropWhile f t else (h:t)
words "1 2 4"
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ words₀^843([LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]])
//│ def break1₀(_lh_break1_arg1¹, _lh_break1_arg2¹) = case _lh_break1_arg2¹ of {
//│ 	LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 	| LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else 
//│ 		let _lh_matchIdent⁷ = break1₀^806(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ 		in case _lh_matchIdent⁷ of {
//│ 			LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def break₀(_lh_break_arg1¹, _lh_break_arg2¹) = case _lh_break_arg2¹ of {
//│ 	LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 	| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]] else 
//│ 		let _lh_matchIdent⁶ = break1₀^775(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ 		in case _lh_matchIdent⁶ of {
//│ 			LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def dropWhile₀(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = case _lh_dropWhile_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀^830(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 	| _  => error⁰}
//│ def words₀(_lh_words_arg1¹) = 
//│ 	let _lh_matchIdent⁴ = dropWhile₀^729((fun x⁴ -> polyEq⁰(x⁴, ' ')), _lh_words_arg1¹)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_N  => [LH_N]
//│ 		| _  => 
//│ 			let _lh_matchIdent⁵ = break₀^741((fun x⁵ -> polyEq⁰(x⁵, ' ')), _lh_matchIdent⁴)
//│ 			in case _lh_matchIdent⁵ of {
//│ 				LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀^753(_lh_words_LH_P2_1¹)]
//│ 				| _  => error⁰}}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec break1_d0 _lh_break1_arg1_1 _lh_break1_arg2_1 =
//│ 		  (match _lh_break1_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_P2((`LH_N), (`LH_N)))
//│ 		    | `LH_C(_lh_break1_LH_C_0_1, _lh_break1_LH_C_1_1) -> 
//│ 		      (if (_lh_break1_arg1_1 _lh_break1_LH_C_0_1) then
//│ 		        (`LH_P2((`LH_N), (`LH_C(_lh_break1_LH_C_0_1, _lh_break1_LH_C_1_1))))
//│ 		      else
//│ 		        (let rec _lh_matchIdent_7 = ((break1_d0 _lh_break1_arg1_1) _lh_break1_LH_C_1_1) in
//│ 		          (match _lh_matchIdent_7 with
//│ 		            | `LH_P2(_lh_break1_LH_P2_0_1, _lh_break1_LH_P2_1_1) -> 
//│ 		              (`LH_P2((`LH_C(_lh_break1_LH_C_0_1, _lh_break1_LH_P2_0_1)), _lh_break1_LH_P2_1_1))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and break_d0 _lh_break_arg1_1 _lh_break_arg2_1 =
//│ 		  (match _lh_break_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_P2((`LH_N), (`LH_N)))
//│ 		    | `LH_C(_lh_break_LH_C_0_1, _lh_break_LH_C_1_1) -> 
//│ 		      (if (_lh_break_arg1_1 _lh_break_LH_C_0_1) then
//│ 		        (`LH_P2((`LH_N), (`LH_C(_lh_break_LH_C_0_1, _lh_break_LH_C_1_1))))
//│ 		      else
//│ 		        (let rec _lh_matchIdent_6 = ((break1_d0 _lh_break_arg1_1) _lh_break_LH_C_1_1) in
//│ 		          (match _lh_matchIdent_6 with
//│ 		            | `LH_P2(_lh_break_LH_P2_0_1, _lh_break_LH_P2_1_1) -> 
//│ 		              (`LH_P2((`LH_C(_lh_break_LH_C_0_1, _lh_break_LH_P2_0_1)), _lh_break_LH_P2_1_1))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and dropWhile_d0 _lh_dropWhile_arg1_1 _lh_dropWhile_arg2_1 =
//│ 		  (match _lh_dropWhile_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_dropWhile_LH_C_0_1, _lh_dropWhile_LH_C_1_1) -> 
//│ 		      (if (_lh_dropWhile_arg1_1 _lh_dropWhile_LH_C_0_1) then
//│ 		        ((dropWhile_d0 _lh_dropWhile_arg1_1) _lh_dropWhile_LH_C_1_1)
//│ 		      else
//│ 		        (`LH_C(_lh_dropWhile_LH_C_0_1, _lh_dropWhile_LH_C_1_1)))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and words_d0 _lh_words_arg1_1 =
//│ 		  (let rec _lh_matchIdent_4 = ((dropWhile_d0 (fun x_4 -> 
//│ 		    (x_4 = ' '))) _lh_words_arg1_1) in
//│ 		    (match _lh_matchIdent_4 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | _ -> 
//│ 		        (let rec _lh_matchIdent_5 = ((break_d0 (fun x_5 -> 
//│ 		          (x_5 = ' '))) _lh_matchIdent_4) in
//│ 		          (match _lh_matchIdent_5 with
//│ 		            | `LH_P2(_lh_words_LH_P2_0_1, _lh_words_LH_P2_1_1) -> 
//│ 		              (`LH_C(_lh_words_LH_P2_0_1, (words_d0 _lh_words_LH_P2_1_1)))
//│ 		            | _ -> 
//│ 		              (failwith "error")))));;
//│ 		(words_d0 (`LH_C('1', (`LH_C(' ', (`LH_C('2', (`LH_C(' ', (`LH_C('4', (`LH_N))))))))))))
//│ 		....... ocaml repl result .......
//│ 		[ok]
//│ 		                                                                                                                val break1_d0 :
//│ 		  (char -> bool) ->
//│ 		  ([> `LH_C of char * 'a | `LH_N ] as 'a) ->
//│ 		  [> `LH_P2 of ([> `LH_C of char * 'b | `LH_N ] as 'b) * 'a ] = <fun>
//│ 		val break_d0 :
//│ 		  (char -> bool) ->
//│ 		  [> `LH_C of char * ([> `LH_C of char * 'a | `LH_N ] as 'a) | `LH_N ] ->
//│ 		  [> `LH_P2 of
//│ 		       [> `LH_C of char * ([> `LH_C of char * 'b | `LH_N ] as 'b) | `LH_N ] *
//│ 		       'a ] =
//│ 		  <fun>
//│ 		val dropWhile_d0 :
//│ 		  (char -> bool) ->
//│ 		  ([> `LH_C of char * 'a | `LH_N ] as 'a) -> [> `LH_C of char * 'a | `LH_N ] =
//│ 		  <fun>
//│ 		val words_d0 :
//│ 		  ([> `LH_C of char * 'a | `LH_N ] as 'a) ->
//│ 		  ([> `LH_C of
//│ 		        [> `LH_C of char * ([> `LH_C of char * 'c | `LH_N ] as 'c) | `LH_N ] *
//│ 		        'b
//│ 		    | `LH_N ]
//│ 		   as 'b) =
//│ 		  <fun>
//│ 		....... ocaml repl result .......
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [words₀^843]
//│ 	[words₀^843 · break₀^741]
//│ 		[words₀^843 · break₀^741 · break1₀^775]
//│ 			[words₀^843 · break₀^741 · break1₀^775 · break1₀^806] ---> [words₀^843 · break₀^741 · break1₀^775] (only one)
//│ 	[words₀^843 · dropWhile₀^729]
//│ 		[words₀^843 · dropWhile₀^729 · dropWhile₀^830] ---> [words₀^843 · dropWhile₀^729] (only one)
//│ 	[words₀^843 · words₀^753] ---> [words₀^843] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ words₀₀([LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]])
//│ def words₀₀(_lh_words_arg1¹) = 
//│ 	let _lh_matchIdent⁴ = dropWhile₀₀((fun x² -> polyEq⁰(x², ' ')), _lh_words_arg1¹)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_N  => [LH_N]
//│ 		| _  => 
//│ 			let _lh_matchIdent⁵ = break₀₀((fun x³ -> polyEq⁰(x³, ' ')), _lh_matchIdent⁴)
//│ 			in case _lh_matchIdent⁵ of {
//│ 				LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)]
//│ 				| _  => error⁰}}
//│ 	where
//│ 	def break₀₀(_lh_break_arg1¹, _lh_break_arg2¹) = 
//│ 		case _lh_break_arg2¹ of {
//│ 			LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 			| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]] else 
//│ 				let _lh_matchIdent⁶ = break1₀₀(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ 				in case _lh_matchIdent⁶ of {
//│ 					LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]
//│ 					| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break1₀₀(_lh_break1_arg1¹, _lh_break1_arg2¹) = 
//│ 			case _lh_break1_arg2¹ of {
//│ 				LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 				| LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else 
//│ 					let _lh_matchIdent⁷ = break1₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ 					in case _lh_matchIdent⁷ of {
//│ 						LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 	def dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = 
//│ 		case _lh_dropWhile_arg2¹ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 			| _  => error⁰}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 164 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ [LH_P2 [LH_N] [LH_N]]: 165 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}: 157
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 172 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 173 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}: 157
//│ [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 184 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}: 157
//│ [LH_N]: 194 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁵ = break₀₀((fun x³ -> polyEq⁰(x³, ' ')), _lh_matchIdent⁴)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}}: 159
//│ 	case _lh_break_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]] else let _lh_matchIdent⁶ = break1₀₀(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 190
//│ [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 205 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁵ = break₀₀((fun x³ -> polyEq⁰(x³, ' ')), _lh_matchIdent⁴)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}}: 159
//│ 	case _lh_break_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]] else let _lh_matchIdent⁶ = break1₀₀(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 190
//│ [LH_N]: 213 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ [LH_P2 [LH_N] [LH_N]]: 214 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 186
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰}: 235
//│ [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]: 221 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]]: 222 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 186
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰}: 235
//│ [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]: 233 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 186
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰}: 235
//│ [LH_N]: 248 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁷ = break1₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 239
//│ [LH_C '4' [LH_N]]: 249 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁷ = break1₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 239
//│ [LH_C ' ' [LH_C '4' [LH_N]]]: 250 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁷ = break1₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 239
//│ [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 251 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁷ = break1₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 239
//│ [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 252 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁷ = break1₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 239
//│ [LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]]: 253 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208
//│ ------------------
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}: 157 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 165
//│ 	[LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 173
//│ 	[LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 184
//│ case _lh_matchIdent⁴ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁵ = break₀₀((fun x³ -> polyEq⁰(x³, ' ')), _lh_matchIdent⁴)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}}: 159 --->
//│ 	[LH_N]: 194
//│ 	[LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 205
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 186 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 214
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]]: 222
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]: 233
//│ case _lh_break_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]] else let _lh_matchIdent⁶ = break1₀₀(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 190 --->
//│ 	[LH_N]: 194
//│ 	[LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 205
//│ case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 208 --->
//│ 	[LH_N]: 164
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 172
//│ 	[LH_N]: 213
//│ 	[LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]: 221
//│ 	[LH_N]: 248
//│ 	[LH_C '4' [LH_N]]: 249
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 250
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 251
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 252
//│ 	[LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]]: 253
//│ case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰}: 235 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 214
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]]: 222
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]: 233
//│ case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁷ = break1₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 239 --->
//│ 	[LH_N]: 248
//│ 	[LH_C '4' [LH_N]]: 249
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 250
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 251
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 252
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 [LH_N] [LH_N]]: 165 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}: 157
//│ [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 173 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}: 157
//│ [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 184 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}: 157
//│ ------------------
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_words_LH_P2_0¹ _lh_words_LH_P2_1¹ => [LH_C _lh_words_LH_P2_0¹ words₀₀(_lh_words_LH_P2_1¹)] | _  => error⁰}: 157 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 165
//│ 	[LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 173
//│ 	[LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 184
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ words₀₀([LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]])
//│ def words₀₀(_lh_words_arg1²) = 
//│ 	let _lh_matchIdent⁸ = dropWhile₀₀((fun x⁴ -> polyEq⁰(x⁴, ' ')), _lh_words_arg1²)
//│ 	in case _lh_matchIdent⁸ of {
//│ 		LH_N  => [LH_N]
//│ 		| _  => 
//│ 			let _lh_matchIdent⁹ = break₀₀((fun x⁵ -> polyEq⁰(x⁵, ' ')), _lh_matchIdent⁸)
//│ 			in _lh_matchIdent⁹(99)}
//│ 	where
//│ 	def break₀₀(_lh_break_arg1², _lh_break_arg2²) = 
//│ 		case _lh_break_arg2² of {
//│ 			LH_N  => 
//│ 				let _lh_words_LH_P2_0² = [LH_N]
//│ 				in let _lh_words_LH_P2_1² = [LH_N]
//│ 				in (fun _lh_dummy⁰ -> [LH_C _lh_words_LH_P2_0² words₀₀(_lh_words_LH_P2_1²)])
//│ 			| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1²(_lh_break_LH_C_0¹) then 
//│ 				let _lh_words_LH_P2_0³ = [LH_N]
//│ 				in let _lh_words_LH_P2_1³ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]
//│ 				in (fun _lh_dummy¹ -> [LH_C _lh_words_LH_P2_0³ words₀₀(_lh_words_LH_P2_1³)]) else 
//│ 				let _lh_matchIdent¹⁰ = break1₀₀(_lh_break_arg1², _lh_break_LH_C_1¹)
//│ 				in case _lh_matchIdent¹⁰ of {
//│ 					LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => 
//│ 						let _lh_words_LH_P2_0⁴ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ 						in let _lh_words_LH_P2_1⁴ = _lh_break_LH_P2_1¹
//│ 						in (fun _lh_dummy² -> [LH_C _lh_words_LH_P2_0⁴ words₀₀(_lh_words_LH_P2_1⁴)])
//│ 					| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break1₀₀(_lh_break1_arg1², _lh_break1_arg2²) = 
//│ 			case _lh_break1_arg2² of {
//│ 				LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 				| LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1²(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else 
//│ 					let _lh_matchIdent¹¹ = break1₀₀(_lh_break1_arg1², _lh_break1_LH_C_1¹)
//│ 					in case _lh_matchIdent¹¹ of {
//│ 						LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 	def dropWhile₀₀(_lh_dropWhile_arg1², _lh_dropWhile_arg2²) = 
//│ 		case _lh_dropWhile_arg2² of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 			| _  => error⁰}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [words₀₀^1]
//│ 	[words₀₀^1 · break₀₀^26]
//│ 		[words₀₀^1 · break₀₀^26 · break1₀₀^69] (hopeless to continue)
//│ 			[words₀₀^1 · break₀₀^26 · break1₀₀^69 · break1₀₀^125] ---> [words₀₀^1 · break₀₀^26 · break1₀₀^69] (using original def)
//│ 		[words₀₀^1 · break₀₀^26 · words₀₀^47]
//│ 			[words₀₀^1 · break₀₀^26 · words₀₀^47 · break₀₀^26] ---> [words₀₀^1 · break₀₀^26] (only one)
//│ 			[words₀₀^1 · break₀₀^26 · words₀₀^47 · dropWhile₀₀^14] (hopeless to continue)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^47 · dropWhile₀₀^14 · dropWhile₀₀^100] ---> [words₀₀^1 · break₀₀^26 · words₀₀^47 · dropWhile₀₀^14] (using original def)
//│ 		[words₀₀^1 · break₀₀^26 · words₀₀^62] (hopeless to continue)
//│ 			[words₀₀^1 · break₀₀^26 · words₀₀^62 · break₀₀^26] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^62 · break₀₀^26 · break1₀₀^69] (using original def)
//│ 					[words₀₀^1 · break₀₀^26 · words₀₀^62 · break₀₀^26 · break1₀₀^69 · break1₀₀^125] ---> [words₀₀^1 · break₀₀^26 · words₀₀^62 · break₀₀^26 · break1₀₀^69] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^62 · break₀₀^26 · words₀₀^47] ---> [words₀₀^1 · break₀₀^26 · words₀₀^62] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^62 · break₀₀^26 · words₀₀^62] ---> [words₀₀^1 · break₀₀^26 · words₀₀^62] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^62 · break₀₀^26 · words₀₀^80] ---> [words₀₀^1 · break₀₀^26 · words₀₀^62] (using original def)
//│ 			[words₀₀^1 · break₀₀^26 · words₀₀^62 · dropWhile₀₀^14] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^62 · dropWhile₀₀^14 · dropWhile₀₀^100] ---> [words₀₀^1 · break₀₀^26 · words₀₀^62 · dropWhile₀₀^14] (using original def)
//│ 		[words₀₀^1 · break₀₀^26 · words₀₀^80] (hopeless to continue)
//│ 			[words₀₀^1 · break₀₀^26 · words₀₀^80 · break₀₀^26] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^80 · break₀₀^26 · break1₀₀^69] (using original def)
//│ 					[words₀₀^1 · break₀₀^26 · words₀₀^80 · break₀₀^26 · break1₀₀^69 · break1₀₀^125] ---> [words₀₀^1 · break₀₀^26 · words₀₀^80 · break₀₀^26 · break1₀₀^69] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^80 · break₀₀^26 · words₀₀^47] ---> [words₀₀^1 · break₀₀^26 · words₀₀^80] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^80 · break₀₀^26 · words₀₀^62] ---> [words₀₀^1 · break₀₀^26 · words₀₀^80] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^80 · break₀₀^26 · words₀₀^80] ---> [words₀₀^1 · break₀₀^26 · words₀₀^80] (using original def)
//│ 			[words₀₀^1 · break₀₀^26 · words₀₀^80 · dropWhile₀₀^14] (using original def)
//│ 				[words₀₀^1 · break₀₀^26 · words₀₀^80 · dropWhile₀₀^14 · dropWhile₀₀^100] ---> [words₀₀^1 · break₀₀^26 · words₀₀^80 · dropWhile₀₀^14] (using original def)
//│ 	[words₀₀^1 · dropWhile₀₀^14]
//│ 		[words₀₀^1 · dropWhile₀₀^14 · dropWhile₀₀^100] ---> [words₀₀^1 · dropWhile₀₀^14] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ words₀₀₀([LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]])
//│ def words₀₀₀(_lh_words_arg1¹) = 
//│ 	let _lh_matchIdent⁶ = dropWhile₀₀₃((fun x² -> polyEq⁰(x², ' ')), _lh_words_arg1¹)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_N  => [LH_N]
//│ 		| _  => 
//│ 			let _lh_matchIdent⁷ = break₀₀₀((fun x³ -> polyEq⁰(x³, ' ')), _lh_matchIdent⁶)
//│ 			in _lh_matchIdent⁷(99)}
//│ 	where
//│ 	def break₀₀₀(_lh_break_arg1², _lh_break_arg2²) = 
//│ 		case _lh_break_arg2² of {
//│ 			LH_N  => 
//│ 				let _lh_words_LH_P2_0⁶ = [LH_N]
//│ 				in let _lh_words_LH_P2_1⁶ = [LH_N]
//│ 				in (fun _lh_dummy⁶ -> [LH_C _lh_words_LH_P2_0⁶ words₀₀₁(_lh_words_LH_P2_1⁶)])
//│ 			| LH_C _lh_break_LH_C_0² _lh_break_LH_C_1² => if _lh_break_arg1²(_lh_break_LH_C_0²) then 
//│ 				let _lh_words_LH_P2_0⁷ = [LH_N]
//│ 				in let _lh_words_LH_P2_1⁷ = [LH_C _lh_break_LH_C_0² _lh_break_LH_C_1²]
//│ 				in (fun _lh_dummy⁷ -> [LH_C _lh_words_LH_P2_0⁷ words₀₀₂(_lh_words_LH_P2_1⁷)]) else 
//│ 				let _lh_matchIdent¹⁶ = break1₀₀₀(_lh_break_arg1², _lh_break_LH_C_1²)
//│ 				in case _lh_matchIdent¹⁶ of {
//│ 					LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => 
//│ 						let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ 						in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ 						in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)])
//│ 					| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break1₀₀₀(_lh_break1_arg1¹, _lh_break1_arg2¹) = 
//│ 			case _lh_break1_arg2¹ of {
//│ 				LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 				| LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else 
//│ 					let _lh_matchIdent⁴ = break1₀₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ 					in case _lh_matchIdent⁴ of {
//│ 						LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 		def words₀₀₁(_lh_words_arg1⁴) = 
//│ 			let _lh_matchIdent¹⁴ = dropWhile₀₀₀((fun x⁸ -> polyEq⁰(x⁸, ' ')), _lh_words_arg1⁴)
//│ 			in case _lh_matchIdent¹⁴ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent¹⁵ = break₀₀₀((fun x⁹ -> polyEq⁰(x⁹, ' ')), _lh_matchIdent¹⁴)
//│ 					in _lh_matchIdent¹⁵(99)}
//│ 			where
//│ 			def dropWhile₀₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = 
//│ 				case _lh_dropWhile_arg2¹ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 					| _  => error⁰}
//│ 		def words₀₀₂(_lh_words_arg1²) = 
//│ 			let _lh_matchIdent⁸ = dropWhile₀₀₁((fun x⁴ -> polyEq⁰(x⁴, ' ')), _lh_words_arg1²)
//│ 			in case _lh_matchIdent⁸ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent⁹ = break₀₀₁((fun x⁵ -> polyEq⁰(x⁵, ' ')), _lh_matchIdent⁸)
//│ 					in _lh_matchIdent⁹(99)}
//│ 			where
//│ 			def break₀₀₁(_lh_break_arg1¹, _lh_break_arg2¹) = 
//│ 				case _lh_break_arg2¹ of {
//│ 					LH_N  => 
//│ 						let _lh_words_LH_P2_0³ = [LH_N]
//│ 						in let _lh_words_LH_P2_1³ = [LH_N]
//│ 						in (fun _lh_dummy³ -> [LH_C _lh_words_LH_P2_0³ words₀₀₂(_lh_words_LH_P2_1³)])
//│ 					| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then 
//│ 						let _lh_words_LH_P2_0⁴ = [LH_N]
//│ 						in let _lh_words_LH_P2_1⁴ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]
//│ 						in (fun _lh_dummy⁴ -> [LH_C _lh_words_LH_P2_0⁴ words₀₀₂(_lh_words_LH_P2_1⁴)]) else 
//│ 						let _lh_matchIdent¹⁰ = break1₀₀₁(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ 						in case _lh_matchIdent¹⁰ of {
//│ 							LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => 
//│ 								let _lh_words_LH_P2_0⁵ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ 								in let _lh_words_LH_P2_1⁵ = _lh_break_LH_P2_1¹
//│ 								in (fun _lh_dummy⁵ -> [LH_C _lh_words_LH_P2_0⁵ words₀₀₂(_lh_words_LH_P2_1⁵)])
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def break1₀₀₁(_lh_break1_arg1³, _lh_break1_arg2³) = 
//│ 					case _lh_break1_arg2³ of {
//│ 						LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 						| LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else 
//│ 							let _lh_matchIdent¹³ = break1₀₀₁(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ 							in case _lh_matchIdent¹³ of {
//│ 								LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 			def dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_arg2³) = 
//│ 				case _lh_dropWhile_arg2³ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]
//│ 					| _  => error⁰}
//│ 		def words₀₀₃(_lh_words_arg1³) = 
//│ 			let _lh_matchIdent¹¹ = dropWhile₀₀₂((fun x⁶ -> polyEq⁰(x⁶, ' ')), _lh_words_arg1³)
//│ 			in case _lh_matchIdent¹¹ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent¹² = break₀₀₂((fun x⁷ -> polyEq⁰(x⁷, ' ')), _lh_matchIdent¹¹)
//│ 					in _lh_matchIdent¹²(99)}
//│ 			where
//│ 			def break₀₀₂(_lh_break_arg1³, _lh_break_arg2³) = 
//│ 				case _lh_break_arg2³ of {
//│ 					LH_N  => 
//│ 						let _lh_words_LH_P2_0⁹ = [LH_N]
//│ 						in let _lh_words_LH_P2_1⁹ = [LH_N]
//│ 						in (fun _lh_dummy⁹ -> [LH_C _lh_words_LH_P2_0⁹ words₀₀₃(_lh_words_LH_P2_1⁹)])
//│ 					| LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1³(_lh_break_LH_C_0³) then 
//│ 						let _lh_words_LH_P2_0¹⁰ = [LH_N]
//│ 						in let _lh_words_LH_P2_1¹⁰ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ 						in (fun _lh_dummy¹⁰ -> [LH_C _lh_words_LH_P2_0¹⁰ words₀₀₃(_lh_words_LH_P2_1¹⁰)]) else 
//│ 						let _lh_matchIdent¹⁷ = break1₀₀₂(_lh_break_arg1³, _lh_break_LH_C_1³)
//│ 						in case _lh_matchIdent¹⁷ of {
//│ 							LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => 
//│ 								let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ 								in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ 								in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃(_lh_words_LH_P2_1¹¹)])
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def break1₀₀₂(_lh_break1_arg1², _lh_break1_arg2²) = 
//│ 					case _lh_break1_arg2² of {
//│ 						LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 						| LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1² => if _lh_break1_arg1²(_lh_break1_LH_C_0²) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]] else 
//│ 							let _lh_matchIdent⁵ = break1₀₀₂(_lh_break1_arg1², _lh_break1_LH_C_1²)
//│ 							in case _lh_matchIdent⁵ of {
//│ 								LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²]
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 			def dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_arg2⁴) = 
//│ 				case _lh_dropWhile_arg2⁴ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]
//│ 					| _  => error⁰}
//│ 	def dropWhile₀₀₃(_lh_dropWhile_arg1², _lh_dropWhile_arg2²) = 
//│ 		case _lh_dropWhile_arg2² of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1² => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0²) then dropWhile₀₀₃(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1²) else [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²]
//│ 			| _  => error⁰}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 145 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_N  => [LH_N] | _  => let _lh_matchIdent¹⁵ = break₀₀₀((fun x⁹ -> polyEq⁰(x⁹, ' ')), _lh_matchIdent¹⁴)
//│ in _lh_matchIdent¹⁵(99)}: 474
//│ 	case _lh_break_arg2² of {LH_N  => let _lh_words_LH_P2_0⁶ = [LH_N]
//│ in let _lh_words_LH_P2_1⁶ = [LH_N]
//│ in (fun _lh_dummy⁶ -> [LH_C _lh_words_LH_P2_0⁶ words₀₀₁(_lh_words_LH_P2_1⁶)]) | LH_C _lh_break_LH_C_0² _lh_break_LH_C_1² => if _lh_break_arg1²(_lh_break_LH_C_0²) then let _lh_words_LH_P2_0⁷ = [LH_N]
//│ in let _lh_words_LH_P2_1⁷ = [LH_C _lh_break_LH_C_0² _lh_break_LH_C_1²]
//│ in (fun _lh_dummy⁷ -> [LH_C _lh_words_LH_P2_0⁷ words₀₀₂(_lh_words_LH_P2_1⁷)]) else let _lh_matchIdent¹⁶ = break1₀₀₀(_lh_break_arg1², _lh_break_LH_C_1²)
//│ in case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)]) | _  => error⁰} | _  => error⁰}: 526
//│ [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 156 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_N  => [LH_N] | _  => let _lh_matchIdent¹⁵ = break₀₀₀((fun x⁹ -> polyEq⁰(x⁹, ' ')), _lh_matchIdent¹⁴)
//│ in _lh_matchIdent¹⁵(99)}: 474
//│ 	case _lh_break_arg2² of {LH_N  => let _lh_words_LH_P2_0⁶ = [LH_N]
//│ in let _lh_words_LH_P2_1⁶ = [LH_N]
//│ in (fun _lh_dummy⁶ -> [LH_C _lh_words_LH_P2_0⁶ words₀₀₁(_lh_words_LH_P2_1⁶)]) | LH_C _lh_break_LH_C_0² _lh_break_LH_C_1² => if _lh_break_arg1²(_lh_break_LH_C_0²) then let _lh_words_LH_P2_0⁷ = [LH_N]
//│ in let _lh_words_LH_P2_1⁷ = [LH_C _lh_break_LH_C_0² _lh_break_LH_C_1²]
//│ in (fun _lh_dummy⁷ -> [LH_C _lh_words_LH_P2_0⁷ words₀₀₂(_lh_words_LH_P2_1⁷)]) else let _lh_matchIdent¹⁶ = break1₀₀₀(_lh_break_arg1², _lh_break_LH_C_1²)
//│ in case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)]) | _  => error⁰} | _  => error⁰}: 526
//│ [LH_N]: 164 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ [LH_P2 [LH_N] [LH_N]]: 165 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰}: 186
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)]) | _  => error⁰}: 522
//│ [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]: 172 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]]: 173 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰}: 186
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)]) | _  => error⁰}: 522
//│ [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]: 184 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰}: 186
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)]) | _  => error⁰}: 522
//│ [LH_N]: 195 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ [LH_P2 [LH_N] [LH_N]]: 196 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²] | _  => error⁰}: 217
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰}: 574
//│ [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]: 203 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]]: 204 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²] | _  => error⁰}: 217
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰}: 574
//│ [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²]: 215 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²] | _  => error⁰}: 217
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰}: 574
//│ [LH_N]: 225 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁷ = break₀₀₀((fun x³ -> polyEq⁰(x³, ' ')), _lh_matchIdent⁶)
//│ in _lh_matchIdent⁷(99)}: 286
//│ 	case _lh_break_arg2² of {LH_N  => let _lh_words_LH_P2_0⁶ = [LH_N]
//│ in let _lh_words_LH_P2_1⁶ = [LH_N]
//│ in (fun _lh_dummy⁶ -> [LH_C _lh_words_LH_P2_0⁶ words₀₀₁(_lh_words_LH_P2_1⁶)]) | LH_C _lh_break_LH_C_0² _lh_break_LH_C_1² => if _lh_break_arg1²(_lh_break_LH_C_0²) then let _lh_words_LH_P2_0⁷ = [LH_N]
//│ in let _lh_words_LH_P2_1⁷ = [LH_C _lh_break_LH_C_0² _lh_break_LH_C_1²]
//│ in (fun _lh_dummy⁷ -> [LH_C _lh_words_LH_P2_0⁷ words₀₀₂(_lh_words_LH_P2_1⁷)]) else let _lh_matchIdent¹⁶ = break1₀₀₀(_lh_break_arg1², _lh_break_LH_C_1²)
//│ in case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)]) | _  => error⁰} | _  => error⁰}: 526
//│ [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²]: 236 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁷ = break₀₀₀((fun x³ -> polyEq⁰(x³, ' ')), _lh_matchIdent⁶)
//│ in _lh_matchIdent⁷(99)}: 286
//│ 	case _lh_break_arg2² of {LH_N  => let _lh_words_LH_P2_0⁶ = [LH_N]
//│ in let _lh_words_LH_P2_1⁶ = [LH_N]
//│ in (fun _lh_dummy⁶ -> [LH_C _lh_words_LH_P2_0⁶ words₀₀₁(_lh_words_LH_P2_1⁶)]) | LH_C _lh_break_LH_C_0² _lh_break_LH_C_1² => if _lh_break_arg1²(_lh_break_LH_C_0²) then let _lh_words_LH_P2_0⁷ = [LH_N]
//│ in let _lh_words_LH_P2_1⁷ = [LH_C _lh_break_LH_C_0² _lh_break_LH_C_1²]
//│ in (fun _lh_dummy⁷ -> [LH_C _lh_words_LH_P2_0⁷ words₀₀₂(_lh_words_LH_P2_1⁷)]) else let _lh_matchIdent¹⁶ = break1₀₀₀(_lh_break_arg1², _lh_break_LH_C_1²)
//│ in case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)]) | _  => error⁰} | _  => error⁰}: 526
//│ [LH_N]: 243 --->
//│ 	case _lh_matchIdent⁸ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁹ = break₀₀₁((fun x⁵ -> polyEq⁰(x⁵, ' ')), _lh_matchIdent⁸)
//│ in _lh_matchIdent⁹(99)}: 315
//│ 	case _lh_break_arg2¹ of {LH_N  => let _lh_words_LH_P2_0³ = [LH_N]
//│ in let _lh_words_LH_P2_1³ = [LH_N]
//│ in (fun _lh_dummy³ -> [LH_C _lh_words_LH_P2_0³ words₀₀₂(_lh_words_LH_P2_1³)]) | LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then let _lh_words_LH_P2_0⁴ = [LH_N]
//│ in let _lh_words_LH_P2_1⁴ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]
//│ in (fun _lh_dummy⁴ -> [LH_C _lh_words_LH_P2_0⁴ words₀₀₂(_lh_words_LH_P2_1⁴)]) else let _lh_matchIdent¹⁰ = break1₀₀₁(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => let _lh_words_LH_P2_0⁵ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ in let _lh_words_LH_P2_1⁵ = _lh_break_LH_P2_1¹
//│ in (fun _lh_dummy⁵ -> [LH_C _lh_words_LH_P2_0⁵ words₀₀₂(_lh_words_LH_P2_1⁵)]) | _  => error⁰} | _  => error⁰}: 367
//│ [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]: 254 --->
//│ 	case _lh_matchIdent⁸ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁹ = break₀₀₁((fun x⁵ -> polyEq⁰(x⁵, ' ')), _lh_matchIdent⁸)
//│ in _lh_matchIdent⁹(99)}: 315
//│ 	case _lh_break_arg2¹ of {LH_N  => let _lh_words_LH_P2_0³ = [LH_N]
//│ in let _lh_words_LH_P2_1³ = [LH_N]
//│ in (fun _lh_dummy³ -> [LH_C _lh_words_LH_P2_0³ words₀₀₂(_lh_words_LH_P2_1³)]) | LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then let _lh_words_LH_P2_0⁴ = [LH_N]
//│ in let _lh_words_LH_P2_1⁴ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]
//│ in (fun _lh_dummy⁴ -> [LH_C _lh_words_LH_P2_0⁴ words₀₀₂(_lh_words_LH_P2_1⁴)]) else let _lh_matchIdent¹⁰ = break1₀₀₁(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => let _lh_words_LH_P2_0⁵ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ in let _lh_words_LH_P2_1⁵ = _lh_break_LH_P2_1¹
//│ in (fun _lh_dummy⁵ -> [LH_C _lh_words_LH_P2_0⁵ words₀₀₂(_lh_words_LH_P2_1⁵)]) | _  => error⁰} | _  => error⁰}: 367
//│ [LH_N]: 320 --->
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 335 --->
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ [LH_N]: 371 --->
//│ 	case _lh_matchIdent¹¹ of {LH_N  => [LH_N] | _  => let _lh_matchIdent¹² = break₀₀₂((fun x⁷ -> polyEq⁰(x⁷, ' ')), _lh_matchIdent¹¹)
//│ in _lh_matchIdent¹²(99)}: 414
//│ 	case _lh_break_arg2³ of {LH_N  => let _lh_words_LH_P2_0⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1⁹ = [LH_N]
//│ in (fun _lh_dummy⁹ -> [LH_C _lh_words_LH_P2_0⁹ words₀₀₃(_lh_words_LH_P2_1⁹)]) | LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1³(_lh_break_LH_C_0³) then let _lh_words_LH_P2_0¹⁰ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁰ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ in (fun _lh_dummy¹⁰ -> [LH_C _lh_words_LH_P2_0¹⁰ words₀₀₃(_lh_words_LH_P2_1¹⁰)]) else let _lh_matchIdent¹⁷ = break1₀₀₂(_lh_break_arg1³, _lh_break_LH_C_1³)
//│ in case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰} | _  => error⁰}: 578
//│ [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]: 382 --->
//│ 	case _lh_matchIdent¹¹ of {LH_N  => [LH_N] | _  => let _lh_matchIdent¹² = break₀₀₂((fun x⁷ -> polyEq⁰(x⁷, ' ')), _lh_matchIdent¹¹)
//│ in _lh_matchIdent¹²(99)}: 414
//│ 	case _lh_break_arg2³ of {LH_N  => let _lh_words_LH_P2_0⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1⁹ = [LH_N]
//│ in (fun _lh_dummy⁹ -> [LH_C _lh_words_LH_P2_0⁹ words₀₀₃(_lh_words_LH_P2_1⁹)]) | LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1³(_lh_break_LH_C_0³) then let _lh_words_LH_P2_0¹⁰ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁰ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ in (fun _lh_dummy¹⁰ -> [LH_C _lh_words_LH_P2_0¹⁰ words₀₀₃(_lh_words_LH_P2_1¹⁰)]) else let _lh_matchIdent¹⁷ = break1₀₀₂(_lh_break_arg1³, _lh_break_LH_C_1³)
//│ in case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰} | _  => error⁰}: 578
//│ [LH_N]: 419 --->
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ [LH_P2 [LH_N] [LH_N]]: 420 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => let _lh_words_LH_P2_0⁵ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ in let _lh_words_LH_P2_1⁵ = _lh_break_LH_P2_1¹
//│ in (fun _lh_dummy⁵ -> [LH_C _lh_words_LH_P2_0⁵ words₀₀₂(_lh_words_LH_P2_1⁵)]) | _  => error⁰}: 363
//│ 	case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰}: 441
//│ [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]: 427 --->
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]]: 428 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => let _lh_words_LH_P2_0⁵ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ in let _lh_words_LH_P2_1⁵ = _lh_break_LH_P2_1¹
//│ in (fun _lh_dummy⁵ -> [LH_C _lh_words_LH_P2_0⁵ words₀₀₂(_lh_words_LH_P2_1⁵)]) | _  => error⁰}: 363
//│ 	case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰}: 441
//│ [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]: 439 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => let _lh_words_LH_P2_0⁵ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ in let _lh_words_LH_P2_1⁵ = _lh_break_LH_P2_1¹
//│ in (fun _lh_dummy⁵ -> [LH_C _lh_words_LH_P2_0⁵ words₀₀₂(_lh_words_LH_P2_1⁵)]) | _  => error⁰}: 363
//│ 	case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰}: 441
//│ [LH_N]: 479 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 159
//│ [LH_C _lh_break_LH_C_0² _lh_break_LH_C_1²]: 494 --->
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ [LH_N]: 531 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]: 546 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ [LH_N]: 587 --->
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁴ = break1₀₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 190
//│ 	case _lh_break1_arg2² of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1² => if _lh_break1_arg1²(_lh_break1_LH_C_0²) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]] else let _lh_matchIdent⁵ = break1₀₀₂(_lh_break1_arg1², _lh_break1_LH_C_1²)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 221
//│ 	case _lh_dropWhile_arg2² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1² => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0²) then dropWhile₀₀₃(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1²) else [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²] | _  => error⁰}: 239
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ 	case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹³ = break1₀₀₁(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 445
//│ [LH_C '4' [LH_N]]: 588 --->
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁴ = break1₀₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 190
//│ 	case _lh_break1_arg2² of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1² => if _lh_break1_arg1²(_lh_break1_LH_C_0²) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]] else let _lh_matchIdent⁵ = break1₀₀₂(_lh_break1_arg1², _lh_break1_LH_C_1²)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 221
//│ 	case _lh_dropWhile_arg2² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1² => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0²) then dropWhile₀₀₃(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1²) else [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²] | _  => error⁰}: 239
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ 	case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹³ = break1₀₀₁(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 445
//│ [LH_C ' ' [LH_C '4' [LH_N]]]: 589 --->
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁴ = break1₀₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 190
//│ 	case _lh_break1_arg2² of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1² => if _lh_break1_arg1²(_lh_break1_LH_C_0²) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]] else let _lh_matchIdent⁵ = break1₀₀₂(_lh_break1_arg1², _lh_break1_LH_C_1²)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 221
//│ 	case _lh_dropWhile_arg2² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1² => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0²) then dropWhile₀₀₃(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1²) else [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²] | _  => error⁰}: 239
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ 	case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹³ = break1₀₀₁(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 445
//│ [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 590 --->
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁴ = break1₀₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 190
//│ 	case _lh_break1_arg2² of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1² => if _lh_break1_arg1²(_lh_break1_LH_C_0²) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]] else let _lh_matchIdent⁵ = break1₀₀₂(_lh_break1_arg1², _lh_break1_LH_C_1²)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 221
//│ 	case _lh_dropWhile_arg2² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1² => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0²) then dropWhile₀₀₃(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1²) else [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²] | _  => error⁰}: 239
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385
//│ 	case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹³ = break1₀₀₁(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 445
//│ [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 591 --->
//│ 	case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁴ = break1₀₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 190
//│ 	case _lh_dropWhile_arg2² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1² => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0²) then dropWhile₀₀₃(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1²) else [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²] | _  => error⁰}: 239
//│ 	case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257
//│ 	case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹³ = break1₀₀₁(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 445
//│ [LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]]: 592 --->
//│ 	case _lh_dropWhile_arg2² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1² => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0²) then dropWhile₀₀₃(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1²) else [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²] | _  => error⁰}: 239
//│ ------------------
//│ case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 159 --->
//│ 	[LH_N]: 479
//│ case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰}: 186 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 165
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]]: 173
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]: 184
//│ case _lh_break1_arg2¹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1¹(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else let _lh_matchIdent⁴ = break1₀₀₀(_lh_break1_arg1¹, _lh_break1_LH_C_1¹)
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 190 --->
//│ 	[LH_N]: 587
//│ 	[LH_C '4' [LH_N]]: 588
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 589
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 590
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 591
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²] | _  => error⁰}: 217 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 196
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]]: 204
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²]: 215
//│ case _lh_break1_arg2² of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1² => if _lh_break1_arg1²(_lh_break1_LH_C_0²) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]] else let _lh_matchIdent⁵ = break1₀₀₂(_lh_break1_arg1², _lh_break1_LH_C_1²)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 221 --->
//│ 	[LH_N]: 587
//│ 	[LH_C '4' [LH_N]]: 588
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 589
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 590
//│ case _lh_dropWhile_arg2² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1² => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0²) then dropWhile₀₀₃(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1²) else [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²] | _  => error⁰}: 239 --->
//│ 	[LH_N]: 587
//│ 	[LH_C '4' [LH_N]]: 588
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 589
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 590
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 591
//│ 	[LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]]: 592
//│ case _lh_dropWhile_arg2³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1³(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1³, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 257 --->
//│ 	[LH_N]: 320
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 335
//│ 	[LH_N]: 419
//│ 	[LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]: 427
//│ 	[LH_C _lh_break_LH_C_0² _lh_break_LH_C_1²]: 494
//│ 	[LH_N]: 587
//│ 	[LH_C '4' [LH_N]]: 588
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 589
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 590
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 591
//│ case _lh_matchIdent⁶ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁷ = break₀₀₀((fun x³ -> polyEq⁰(x³, ' ')), _lh_matchIdent⁶)
//│ in _lh_matchIdent⁷(99)}: 286 --->
//│ 	[LH_N]: 225
//│ 	[LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²]: 236
//│ case _lh_matchIdent⁸ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁹ = break₀₀₁((fun x⁵ -> polyEq⁰(x⁵, ' ')), _lh_matchIdent⁸)
//│ in _lh_matchIdent⁹(99)}: 315 --->
//│ 	[LH_N]: 243
//│ 	[LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]: 254
//│ case _lh_matchIdent¹⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => let _lh_words_LH_P2_0⁵ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ in let _lh_words_LH_P2_1⁵ = _lh_break_LH_P2_1¹
//│ in (fun _lh_dummy⁵ -> [LH_C _lh_words_LH_P2_0⁵ words₀₀₂(_lh_words_LH_P2_1⁵)]) | _  => error⁰}: 363 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 420
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]]: 428
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]: 439
//│ case _lh_break_arg2¹ of {LH_N  => let _lh_words_LH_P2_0³ = [LH_N]
//│ in let _lh_words_LH_P2_1³ = [LH_N]
//│ in (fun _lh_dummy³ -> [LH_C _lh_words_LH_P2_0³ words₀₀₂(_lh_words_LH_P2_1³)]) | LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then let _lh_words_LH_P2_0⁴ = [LH_N]
//│ in let _lh_words_LH_P2_1⁴ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]
//│ in (fun _lh_dummy⁴ -> [LH_C _lh_words_LH_P2_0⁴ words₀₀₂(_lh_words_LH_P2_1⁴)]) else let _lh_matchIdent¹⁰ = break1₀₀₁(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => let _lh_words_LH_P2_0⁵ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ in let _lh_words_LH_P2_1⁵ = _lh_break_LH_P2_1¹
//│ in (fun _lh_dummy⁵ -> [LH_C _lh_words_LH_P2_0⁵ words₀₀₂(_lh_words_LH_P2_1⁵)]) | _  => error⁰} | _  => error⁰}: 367 --->
//│ 	[LH_N]: 243
//│ 	[LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]: 254
//│ case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁴(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁴, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 385 --->
//│ 	[LH_N]: 164
//│ 	[LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]: 172
//│ 	[LH_N]: 195
//│ 	[LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]: 203
//│ 	[LH_N]: 531
//│ 	[LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]: 546
//│ 	[LH_N]: 587
//│ 	[LH_C '4' [LH_N]]: 588
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 589
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 590
//│ case _lh_matchIdent¹¹ of {LH_N  => [LH_N] | _  => let _lh_matchIdent¹² = break₀₀₂((fun x⁷ -> polyEq⁰(x⁷, ' ')), _lh_matchIdent¹¹)
//│ in _lh_matchIdent¹²(99)}: 414 --->
//│ 	[LH_N]: 371
//│ 	[LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]: 382
//│ case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰}: 441 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 420
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]]: 428
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]: 439
//│ case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹³ = break1₀₀₁(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹³ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 445 --->
//│ 	[LH_N]: 587
//│ 	[LH_C '4' [LH_N]]: 588
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 589
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 590
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 591
//│ case _lh_matchIdent¹⁴ of {LH_N  => [LH_N] | _  => let _lh_matchIdent¹⁵ = break₀₀₀((fun x⁹ -> polyEq⁰(x⁹, ' ')), _lh_matchIdent¹⁴)
//│ in _lh_matchIdent¹⁵(99)}: 474 --->
//│ 	[LH_N]: 145
//│ 	[LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 156
//│ case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)]) | _  => error⁰}: 522 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 165
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]]: 173
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]: 184
//│ case _lh_break_arg2² of {LH_N  => let _lh_words_LH_P2_0⁶ = [LH_N]
//│ in let _lh_words_LH_P2_1⁶ = [LH_N]
//│ in (fun _lh_dummy⁶ -> [LH_C _lh_words_LH_P2_0⁶ words₀₀₁(_lh_words_LH_P2_1⁶)]) | LH_C _lh_break_LH_C_0² _lh_break_LH_C_1² => if _lh_break_arg1²(_lh_break_LH_C_0²) then let _lh_words_LH_P2_0⁷ = [LH_N]
//│ in let _lh_words_LH_P2_1⁷ = [LH_C _lh_break_LH_C_0² _lh_break_LH_C_1²]
//│ in (fun _lh_dummy⁷ -> [LH_C _lh_words_LH_P2_0⁷ words₀₀₂(_lh_words_LH_P2_1⁷)]) else let _lh_matchIdent¹⁶ = break1₀₀₀(_lh_break_arg1², _lh_break_LH_C_1²)
//│ in case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => let _lh_words_LH_P2_0⁸ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ in let _lh_words_LH_P2_1⁸ = _lh_break_LH_P2_1²
//│ in (fun _lh_dummy⁸ -> [LH_C _lh_words_LH_P2_0⁸ words₀₀₃(_lh_words_LH_P2_1⁸)]) | _  => error⁰} | _  => error⁰}: 526 --->
//│ 	[LH_N]: 145
//│ 	[LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 156
//│ 	[LH_N]: 225
//│ 	[LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²]: 236
//│ case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰}: 574 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 196
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]]: 204
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²]: 215
//│ case _lh_break_arg2³ of {LH_N  => let _lh_words_LH_P2_0⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1⁹ = [LH_N]
//│ in (fun _lh_dummy⁹ -> [LH_C _lh_words_LH_P2_0⁹ words₀₀₃(_lh_words_LH_P2_1⁹)]) | LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1³(_lh_break_LH_C_0³) then let _lh_words_LH_P2_0¹⁰ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁰ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ in (fun _lh_dummy¹⁰ -> [LH_C _lh_words_LH_P2_0¹⁰ words₀₀₃(_lh_words_LH_P2_1¹⁰)]) else let _lh_matchIdent¹⁷ = break1₀₀₂(_lh_break_arg1³, _lh_break_LH_C_1³)
//│ in case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰} | _  => error⁰}: 578 --->
//│ 	[LH_N]: 371
//│ 	[LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]: 382
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_N]: 479 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 159
//│ ------------------
//│ case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 159 --->
//│ 	[LH_N]: 479
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ words₀₀₀([LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]])
//│ def words₀₀₀(_lh_words_arg1⁵) = 
//│ 	let _lh_matchIdent²¹ = dropWhile₀₀₃((fun x¹⁰ -> polyEq⁰(x¹⁰, ' ')), _lh_words_arg1⁵)
//│ 	in case _lh_matchIdent²¹ of {
//│ 		LH_N  => [LH_N]
//│ 		| _  => 
//│ 			let _lh_matchIdent²² = break₀₀₀((fun x¹¹ -> polyEq⁰(x¹¹, ' ')), _lh_matchIdent²¹)
//│ 			in _lh_matchIdent²²(99)}
//│ 	where
//│ 	def break₀₀₀(_lh_break_arg1⁵, _lh_break_arg2⁵) = 
//│ 		case _lh_break_arg2⁵ of {
//│ 			LH_N  => 
//│ 				let _lh_words_LH_P2_0¹⁵ = [LH_N]
//│ 				in let _lh_words_LH_P2_1¹⁵ = (fun _lh_dropWhile_arg1⁵ -> [LH_N])
//│ 				in (fun _lh_dummy¹⁵ -> [LH_C _lh_words_LH_P2_0¹⁵ words₀₀₁(_lh_words_LH_P2_1¹⁵)])
//│ 			| LH_C _lh_break_LH_C_0² _lh_break_LH_C_1² => if _lh_break_arg1⁵(_lh_break_LH_C_0²) then 
//│ 				let _lh_words_LH_P2_0¹⁶ = [LH_N]
//│ 				in let _lh_words_LH_P2_1¹⁶ = [LH_C _lh_break_LH_C_0² _lh_break_LH_C_1²]
//│ 				in (fun _lh_dummy¹⁶ -> [LH_C _lh_words_LH_P2_0¹⁶ words₀₀₂(_lh_words_LH_P2_1¹⁶)]) else 
//│ 				let _lh_matchIdent¹⁹ = break1₀₀₀(_lh_break_arg1⁵, _lh_break_LH_C_1²)
//│ 				in case _lh_matchIdent¹⁹ of {
//│ 					LH_P2 _lh_break_LH_P2_0² _lh_break_LH_P2_1² => 
//│ 						let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0² _lh_break_LH_P2_0²]
//│ 						in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1²
//│ 						in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃(_lh_words_LH_P2_1¹⁷)])
//│ 					| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break1₀₀₀(_lh_break1_arg1⁶, _lh_break1_arg2⁶) = 
//│ 			case _lh_break1_arg2⁶ of {
//│ 				LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 				| LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹ => if _lh_break1_arg1⁶(_lh_break1_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_C_1¹]] else 
//│ 					let _lh_matchIdent³¹ = break1₀₀₀(_lh_break1_arg1⁶, _lh_break1_LH_C_1¹)
//│ 					in case _lh_matchIdent³¹ of {
//│ 						LH_P2 _lh_break1_LH_P2_0¹ _lh_break1_LH_P2_1¹ => [LH_P2 [LH_C _lh_break1_LH_C_0¹ _lh_break1_LH_P2_0¹] _lh_break1_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 		def words₀₀₁(_lh_words_arg1⁷) = 
//│ 			let _lh_matchIdent²⁶ = dropWhile₀₀₀((fun x¹⁴ -> polyEq⁰(x¹⁴, ' ')), _lh_words_arg1⁷)
//│ 			in case _lh_matchIdent²⁶ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent²⁷ = break₀₀₀((fun x¹⁵ -> polyEq⁰(x¹⁵, ' ')), _lh_matchIdent²⁶)
//│ 					in _lh_matchIdent²⁷(99)}
//│ 			where
//│ 			def dropWhile₀₀₀(_lh_dropWhile_arg1⁹, _lh_dropWhile_arg2⁸) = 
//│ 				_lh_dropWhile_arg2⁸(_lh_dropWhile_arg1⁹)
//│ 		def words₀₀₂(_lh_words_arg1⁶) = 
//│ 			let _lh_matchIdent²⁴ = dropWhile₀₀₁((fun x¹² -> polyEq⁰(x¹², ' ')), _lh_words_arg1⁶)
//│ 			in case _lh_matchIdent²⁴ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent²⁵ = break₀₀₁((fun x¹³ -> polyEq⁰(x¹³, ' ')), _lh_matchIdent²⁴)
//│ 					in _lh_matchIdent²⁵(99)}
//│ 			where
//│ 			def break₀₀₁(_lh_break_arg1⁴, _lh_break_arg2⁴) = 
//│ 				case _lh_break_arg2⁴ of {
//│ 					LH_N  => 
//│ 						let _lh_words_LH_P2_0¹² = [LH_N]
//│ 						in let _lh_words_LH_P2_1¹² = [LH_N]
//│ 						in (fun _lh_dummy¹² -> [LH_C _lh_words_LH_P2_0¹² words₀₀₂(_lh_words_LH_P2_1¹²)])
//│ 					| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1⁴(_lh_break_LH_C_0¹) then 
//│ 						let _lh_words_LH_P2_0¹³ = [LH_N]
//│ 						in let _lh_words_LH_P2_1¹³ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]
//│ 						in (fun _lh_dummy¹³ -> [LH_C _lh_words_LH_P2_0¹³ words₀₀₂(_lh_words_LH_P2_1¹³)]) else 
//│ 						let _lh_matchIdent¹⁸ = break1₀₀₁(_lh_break_arg1⁴, _lh_break_LH_C_1¹)
//│ 						in case _lh_matchIdent¹⁸ of {
//│ 							LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => 
//│ 								let _lh_words_LH_P2_0¹⁴ = [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]
//│ 								in let _lh_words_LH_P2_1¹⁴ = _lh_break_LH_P2_1¹
//│ 								in (fun _lh_dummy¹⁴ -> [LH_C _lh_words_LH_P2_0¹⁴ words₀₀₂(_lh_words_LH_P2_1¹⁴)])
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def break1₀₀₁(_lh_break1_arg1⁵, _lh_break1_arg2⁵) = 
//│ 					case _lh_break1_arg2⁵ of {
//│ 						LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 						| LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1⁵(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else 
//│ 							let _lh_matchIdent²³ = break1₀₀₁(_lh_break1_arg1⁵, _lh_break1_LH_C_1³)
//│ 							in case _lh_matchIdent²³ of {
//│ 								LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 			def dropWhile₀₀₁(_lh_dropWhile_arg1⁶, _lh_dropWhile_arg2⁵) = 
//│ 				case _lh_dropWhile_arg2⁵ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁶(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₁(_lh_dropWhile_arg1⁶, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]
//│ 					| _  => error⁰}
//│ 		def words₀₀₃(_lh_words_arg1⁸) = 
//│ 			let _lh_matchIdent²⁹ = dropWhile₀₀₂((fun x¹⁶ -> polyEq⁰(x¹⁶, ' ')), _lh_words_arg1⁸)
//│ 			in case _lh_matchIdent²⁹ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent³⁰ = break₀₀₂((fun x¹⁷ -> polyEq⁰(x¹⁷, ' ')), _lh_matchIdent²⁹)
//│ 					in _lh_matchIdent³⁰(99)}
//│ 			where
//│ 			def break₀₀₂(_lh_break_arg1⁶, _lh_break_arg2⁶) = 
//│ 				case _lh_break_arg2⁶ of {
//│ 					LH_N  => 
//│ 						let _lh_words_LH_P2_0¹⁸ = [LH_N]
//│ 						in let _lh_words_LH_P2_1¹⁸ = [LH_N]
//│ 						in (fun _lh_dummy¹⁸ -> [LH_C _lh_words_LH_P2_0¹⁸ words₀₀₃(_lh_words_LH_P2_1¹⁸)])
//│ 					| LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1⁶(_lh_break_LH_C_0³) then 
//│ 						let _lh_words_LH_P2_0¹⁹ = [LH_N]
//│ 						in let _lh_words_LH_P2_1¹⁹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ 						in (fun _lh_dummy¹⁹ -> [LH_C _lh_words_LH_P2_0¹⁹ words₀₀₃(_lh_words_LH_P2_1¹⁹)]) else 
//│ 						let _lh_matchIdent²⁸ = break1₀₀₂(_lh_break_arg1⁶, _lh_break_LH_C_1³)
//│ 						in case _lh_matchIdent²⁸ of {
//│ 							LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => 
//│ 								let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ 								in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1³
//│ 								in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₃(_lh_words_LH_P2_1²⁰)])
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def break1₀₀₂(_lh_break1_arg1⁴, _lh_break1_arg2⁴) = 
//│ 					case _lh_break1_arg2⁴ of {
//│ 						LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 						| LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1² => if _lh_break1_arg1⁴(_lh_break1_LH_C_0²) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0² _lh_break1_LH_C_1²]] else 
//│ 							let _lh_matchIdent²⁰ = break1₀₀₂(_lh_break1_arg1⁴, _lh_break1_LH_C_1²)
//│ 							in case _lh_matchIdent²⁰ of {
//│ 								LH_P2 _lh_break1_LH_P2_0² _lh_break1_LH_P2_1² => [LH_P2 [LH_C _lh_break1_LH_C_0² _lh_break1_LH_P2_0²] _lh_break1_LH_P2_1²]
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 			def dropWhile₀₀₂(_lh_dropWhile_arg1⁷, _lh_dropWhile_arg2⁶) = 
//│ 				case _lh_dropWhile_arg2⁶ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁷(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₂(_lh_dropWhile_arg1⁷, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]
//│ 					| _  => error⁰}
//│ 	def dropWhile₀₀₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_arg2⁷) = 
//│ 		case _lh_dropWhile_arg2⁷ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1² => if _lh_dropWhile_arg1⁸(_lh_dropWhile_LH_C_0²) then dropWhile₀₀₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_LH_C_1²) else [LH_C _lh_dropWhile_LH_C_0² _lh_dropWhile_LH_C_1²]
//│ 			| _  => error⁰}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [words₀₀₀^1]
//│ 	[words₀₀₀^1 · break₀₀₀^180]
//│ 		[words₀₀₀^1 · break₀₀₀^180 · break1₀₀₀^93]
//│ 			[words₀₀₀^1 · break₀₀₀^180 · break1₀₀₀^93 · break1₀₀₀^420] ---> [words₀₀₀^1 · break₀₀₀^180 · break1₀₀₀^93] (only one)
//│ 		[words₀₀₀^1 · break₀₀₀^180 · words₀₀₁^71]
//│ 			[words₀₀₀^1 · break₀₀₀^180 · words₀₀₁^71 · break₀₀₀^305] ---> [words₀₀₀^1 · break₀₀₀^180] (only one)
//│ 			[words₀₀₀^1 · break₀₀₀^180 · words₀₀₁^71 · dropWhile₀₀₀^293] (hopeless to continue)
//│ 		[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86]
//│ 			[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240]
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · break1₀₀₁^40] (hopeless to continue)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · break1₀₀₁^40 · break1₀₀₁^209] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · break1₀₀₁^40] (using original def)
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18] (hopeless to continue)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · break₀₀₁^240] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · break₀₀₁^240 · break1₀₀₁^40] (using original def)
//│ 							[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · break₀₀₁^240 · break1₀₀₁^40 · break1₀₀₁^209] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · break₀₀₁^240 · break1₀₀₁^40] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · break₀₀₁^240 · words₀₀₂^18] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · break₀₀₁^240 · words₀₀₂^33] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · break₀₀₁^240 · words₀₀₂^51] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18] (using original def)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · dropWhile₀₀₁^228] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · dropWhile₀₀₁^228 · dropWhile₀₀₁^124] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^18 · dropWhile₀₀₁^228] (using original def)
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^33]
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^33 · break₀₀₁^240] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240] (only one)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^33 · dropWhile₀₀₁^228] (hopeless to continue)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^33 · dropWhile₀₀₁^228 · dropWhile₀₀₁^124] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^33 · dropWhile₀₀₁^228] (using original def)
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51] (hopeless to continue)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · break₀₀₁^240] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · break₀₀₁^240 · break1₀₀₁^40] (using original def)
//│ 							[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · break₀₀₁^240 · break1₀₀₁^40 · break1₀₀₁^209] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · break₀₀₁^240 · break1₀₀₁^40] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · break₀₀₁^240 · words₀₀₂^18] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · break₀₀₁^240 · words₀₀₂^33] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · break₀₀₁^240 · words₀₀₂^51] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51] (using original def)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · dropWhile₀₀₁^228] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · dropWhile₀₀₁^228 · dropWhile₀₀₁^124] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · break₀₀₁^240 · words₀₀₂^51 · dropWhile₀₀₁^228] (using original def)
//│ 			[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · dropWhile₀₀₁^228]
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · dropWhile₀₀₁^228 · dropWhile₀₀₁^124] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₂^86 · dropWhile₀₀₁^228] (only one)
//│ 		[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104]
//│ 			[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391]
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · break1₀₀₂^353] (hopeless to continue)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · break1₀₀₂^353 · break1₀₀₂^149] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · break1₀₀₂^353] (using original def)
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^331]
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^331 · break₀₀₂^391] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391] (only one)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^331 · dropWhile₀₀₂^379] (hopeless to continue)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^331 · dropWhile₀₀₂^379 · dropWhile₀₀₂^262] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^331 · dropWhile₀₀₂^379] (using original def)
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346] (hopeless to continue)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · break₀₀₂^391] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · break₀₀₂^391 · break1₀₀₂^353] (using original def)
//│ 							[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · break₀₀₂^391 · break1₀₀₂^353 · break1₀₀₂^149] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · break₀₀₂^391 · break1₀₀₂^353] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · break₀₀₂^391 · words₀₀₃^331] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · break₀₀₂^391 · words₀₀₃^346] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · break₀₀₂^391 · words₀₀₃^364] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346] (using original def)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · dropWhile₀₀₂^379] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · dropWhile₀₀₂^379 · dropWhile₀₀₂^262] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^346 · dropWhile₀₀₂^379] (using original def)
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364] (hopeless to continue)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · break₀₀₂^391] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · break₀₀₂^391 · break1₀₀₂^353] (using original def)
//│ 							[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · break₀₀₂^391 · break1₀₀₂^353 · break1₀₀₂^149] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · break₀₀₂^391 · break1₀₀₂^353] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · break₀₀₂^391 · words₀₀₃^331] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · break₀₀₂^391 · words₀₀₃^346] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · break₀₀₂^391 · words₀₀₃^364] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364] (using original def)
//│ 					[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · dropWhile₀₀₂^379] (using original def)
//│ 						[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · dropWhile₀₀₂^379 · dropWhile₀₀₂^262] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · break₀₀₂^391 · words₀₀₃^364 · dropWhile₀₀₂^379] (using original def)
//│ 			[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · dropWhile₀₀₂^379]
//│ 				[words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · dropWhile₀₀₂^379 · dropWhile₀₀₂^262] ---> [words₀₀₀^1 · break₀₀₀^180 · words₀₀₃^104 · dropWhile₀₀₂^379] (only one)
//│ 	[words₀₀₀^1 · dropWhile₀₀₃^168]
//│ 		[words₀₀₀^1 · dropWhile₀₀₃^168 · dropWhile₀₀₃^280] ---> [words₀₀₀^1 · dropWhile₀₀₃^168] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ words₀₀₀₀([LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]])
//│ def words₀₀₀₀(_lh_words_arg1¹¹) = 
//│ 	let _lh_matchIdent⁴⁰ = dropWhile₀₀₃₀((fun x²² -> polyEq⁰(x²², ' ')), _lh_words_arg1¹¹)
//│ 	in case _lh_matchIdent⁴⁰ of {
//│ 		LH_N  => [LH_N]
//│ 		| _  => 
//│ 			let _lh_matchIdent⁴¹ = break₀₀₀₀((fun x²³ -> polyEq⁰(x²³, ' ')), _lh_matchIdent⁴⁰)
//│ 			in _lh_matchIdent⁴¹(99)}
//│ 	where
//│ 	def break₀₀₀₀(_lh_break_arg1⁵, _lh_break_arg2⁵) = 
//│ 		case _lh_break_arg2⁵ of {
//│ 			LH_N  => 
//│ 				let _lh_words_LH_P2_0¹⁵ = [LH_N]
//│ 				in let _lh_words_LH_P2_1¹⁵ = (fun _lh_dropWhile_arg1¹² -> [LH_N])
//│ 				in (fun _lh_dummy¹⁵ -> [LH_C _lh_words_LH_P2_0¹⁵ words₀₀₁₀(_lh_words_LH_P2_1¹⁵)])
//│ 			| LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵ => if _lh_break_arg1⁵(_lh_break_LH_C_0⁵) then 
//│ 				let _lh_words_LH_P2_0¹⁶ = [LH_N]
//│ 				in let _lh_words_LH_P2_1¹⁶ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵]
//│ 				in (fun _lh_dummy¹⁶ -> [LH_C _lh_words_LH_P2_0¹⁶ words₀₀₂₀(_lh_words_LH_P2_1¹⁶)]) else 
//│ 				let _lh_matchIdent³² = break1₀₀₀₀(_lh_break_arg1⁵, _lh_break_LH_C_1⁵)
//│ 				in case _lh_matchIdent³² of {
//│ 					LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => 
//│ 						let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ 						in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1⁵
//│ 						in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃₀(_lh_words_LH_P2_1¹⁷)])
//│ 					| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break1₀₀₀₀(_lh_break1_arg1⁵, _lh_break1_arg2⁵) = 
//│ 			case _lh_break1_arg2⁵ of {
//│ 				LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 				| LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵ => if _lh_break1_arg1⁵(_lh_break1_LH_C_0⁵) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]] else 
//│ 					let _lh_matchIdent¹⁸ = break1₀₀₀₀(_lh_break1_arg1⁵, _lh_break1_LH_C_1⁵)
//│ 					in case _lh_matchIdent¹⁸ of {
//│ 						LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 		def words₀₀₁₀(_lh_words_arg1⁵) = 
//│ 			let _lh_matchIdent²³ = dropWhile₀₀₀₀((fun x¹⁰ -> polyEq⁰(x¹⁰, ' ')), _lh_words_arg1⁵)
//│ 			in case _lh_matchIdent²³ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent²⁴ = break₀₀₀₀((fun x¹¹ -> polyEq⁰(x¹¹, ' ')), _lh_matchIdent²³)
//│ 					in _lh_matchIdent²⁴(99)}
//│ 			where
//│ 			def dropWhile₀₀₀₀(_lh_dropWhile_arg1¹³, _lh_dropWhile_arg2¹¹) = 
//│ 				_lh_dropWhile_arg2¹¹(_lh_dropWhile_arg1¹³)
//│ 		def words₀₀₂₀(_lh_words_arg1⁶) = 
//│ 			let _lh_matchIdent²⁵ = dropWhile₀₀₁₃((fun x¹² -> polyEq⁰(x¹², ' ')), _lh_words_arg1⁶)
//│ 			in case _lh_matchIdent²⁵ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent²⁶ = break₀₀₁₀((fun x¹³ -> polyEq⁰(x¹³, ' ')), _lh_matchIdent²⁵)
//│ 					in _lh_matchIdent²⁶(99)}
//│ 			where
//│ 			def break₀₀₁₀(_lh_break_arg1⁶, _lh_break_arg2⁶) = 
//│ 				case _lh_break_arg2⁶ of {
//│ 					LH_N  => 
//│ 						let _lh_words_LH_P2_0¹⁸ = [LH_N]
//│ 						in let _lh_words_LH_P2_1¹⁸ = [LH_N]
//│ 						in (fun _lh_dummy¹⁸ -> [LH_C _lh_words_LH_P2_0¹⁸ words₀₀₂₁(_lh_words_LH_P2_1¹⁸)])
//│ 					| LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶ => if _lh_break_arg1⁶(_lh_break_LH_C_0⁶) then 
//│ 						let _lh_words_LH_P2_0¹⁹ = [LH_N]
//│ 						in let _lh_words_LH_P2_1¹⁹ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶]
//│ 						in (fun _lh_dummy¹⁹ -> [LH_C _lh_words_LH_P2_0¹⁹ words₀₀₂₂(_lh_words_LH_P2_1¹⁹)]) else 
//│ 						let _lh_matchIdent³⁵ = break1₀₀₁₀(_lh_break_arg1⁶, _lh_break_LH_C_1⁶)
//│ 						in case _lh_matchIdent³⁵ of {
//│ 							LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => 
//│ 								let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ 								in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ 								in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)])
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def break1₀₀₁₀(_lh_break1_arg1⁹, _lh_break1_arg2⁹) = 
//│ 					case _lh_break1_arg2⁹ of {
//│ 						LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 						| LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹ => if _lh_break1_arg1⁹(_lh_break1_LH_C_0⁹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]] else 
//│ 							let _lh_matchIdent⁴⁵ = break1₀₀₁₀(_lh_break1_arg1⁹, _lh_break1_LH_C_1⁹)
//│ 							in case _lh_matchIdent⁴⁵ of {
//│ 								LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹]
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def words₀₀₂₁(_lh_words_arg1⁸) = 
//│ 					let _lh_matchIdent²⁹ = dropWhile₀₀₁₀((fun x¹⁶ -> polyEq⁰(x¹⁶, ' ')), _lh_words_arg1⁸)
//│ 					in case _lh_matchIdent²⁹ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent³⁰ = break₀₀₁₁((fun x¹⁷ -> polyEq⁰(x¹⁷, ' ')), _lh_matchIdent²⁹)
//│ 							in _lh_matchIdent³⁰(99)}
//│ 					where
//│ 					def break₀₀₁₁(_lh_break_arg1⁹, _lh_break_arg2⁹) = 
//│ 						case _lh_break_arg2⁹ of {
//│ 							LH_N  => 
//│ 								let _lh_words_LH_P2_0²⁷ = [LH_N]
//│ 								in let _lh_words_LH_P2_1²⁷ = [LH_N]
//│ 								in (fun _lh_dummy²⁷ -> [LH_C _lh_words_LH_P2_0²⁷ words₀₀₂₁(_lh_words_LH_P2_1²⁷)])
//│ 							| LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹ => if _lh_break_arg1⁹(_lh_break_LH_C_0⁹) then 
//│ 								let _lh_words_LH_P2_0²⁸ = [LH_N]
//│ 								in let _lh_words_LH_P2_1²⁸ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹]
//│ 								in (fun _lh_dummy²⁸ -> [LH_C _lh_words_LH_P2_0²⁸ words₀₀₂₁(_lh_words_LH_P2_1²⁸)]) else 
//│ 								let _lh_matchIdent⁴² = break1₀₀₁₁(_lh_break_arg1⁹, _lh_break_LH_C_1⁹)
//│ 								in case _lh_matchIdent⁴² of {
//│ 									LH_P2 _lh_break_LH_P2_0⁹ _lh_break_LH_P2_1⁹ => 
//│ 										let _lh_words_LH_P2_0²⁹ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_P2_0⁹]
//│ 										in let _lh_words_LH_P2_1²⁹ = _lh_break_LH_P2_1⁹
//│ 										in (fun _lh_dummy²⁹ -> [LH_C _lh_words_LH_P2_0²⁹ words₀₀₂₁(_lh_words_LH_P2_1²⁹)])
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						where
//│ 						def break1₀₀₁₁(_lh_break1_arg1⁴, _lh_break1_arg2⁴) = 
//│ 							case _lh_break1_arg2⁴ of {
//│ 								LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 								| LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴ => if _lh_break1_arg1⁴(_lh_break1_LH_C_0⁴) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴]] else 
//│ 									let _lh_matchIdent¹⁶ = break1₀₀₁₁(_lh_break1_arg1⁴, _lh_break1_LH_C_1⁴)
//│ 									in case _lh_matchIdent¹⁶ of {
//│ 										LH_P2 _lh_break1_LH_P2_0⁴ _lh_break1_LH_P2_1⁴ => [LH_P2 [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_P2_0⁴] _lh_break1_LH_P2_1⁴]
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 					def dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_arg2⁹) = 
//│ 						case _lh_dropWhile_arg2⁹ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸]
//│ 							| _  => error⁰}
//│ 				def words₀₀₂₂(_lh_words_arg1⁷) = 
//│ 					let _lh_matchIdent²⁷ = dropWhile₀₀₁₁((fun x¹⁴ -> polyEq⁰(x¹⁴, ' ')), _lh_words_arg1⁷)
//│ 					in case _lh_matchIdent²⁷ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent²⁸ = break₀₀₁₀((fun x¹⁵ -> polyEq⁰(x¹⁵, ' ')), _lh_matchIdent²⁷)
//│ 							in _lh_matchIdent²⁸(99)}
//│ 					where
//│ 					def dropWhile₀₀₁₁(_lh_dropWhile_arg1⁷, _lh_dropWhile_arg2⁶) = 
//│ 						case _lh_dropWhile_arg2⁶ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵ => if _lh_dropWhile_arg1⁷(_lh_dropWhile_LH_C_0⁵) then dropWhile₀₀₁₁(_lh_dropWhile_arg1⁷, _lh_dropWhile_LH_C_1⁵) else [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵]
//│ 							| _  => error⁰}
//│ 				def words₀₀₂₃(_lh_words_arg1⁹) = 
//│ 					let _lh_matchIdent³³ = dropWhile₀₀₁₂((fun x¹⁸ -> polyEq⁰(x¹⁸, ' ')), _lh_words_arg1⁹)
//│ 					in case _lh_matchIdent³³ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent³⁴ = break₀₀₁₂((fun x¹⁹ -> polyEq⁰(x¹⁹, ' ')), _lh_matchIdent³³)
//│ 							in _lh_matchIdent³⁴(99)}
//│ 					where
//│ 					def break₀₀₁₂(_lh_break_arg1⁸, _lh_break_arg2⁸) = 
//│ 						case _lh_break_arg2⁸ of {
//│ 							LH_N  => 
//│ 								let _lh_words_LH_P2_0²⁴ = [LH_N]
//│ 								in let _lh_words_LH_P2_1²⁴ = [LH_N]
//│ 								in (fun _lh_dummy²⁴ -> [LH_C _lh_words_LH_P2_0²⁴ words₀₀₂₃(_lh_words_LH_P2_1²⁴)])
//│ 							| LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸ => if _lh_break_arg1⁸(_lh_break_LH_C_0⁸) then 
//│ 								let _lh_words_LH_P2_0²⁵ = [LH_N]
//│ 								in let _lh_words_LH_P2_1²⁵ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸]
//│ 								in (fun _lh_dummy²⁵ -> [LH_C _lh_words_LH_P2_0²⁵ words₀₀₂₃(_lh_words_LH_P2_1²⁵)]) else 
//│ 								let _lh_matchIdent³⁹ = break1₀₀₁₂(_lh_break_arg1⁸, _lh_break_LH_C_1⁸)
//│ 								in case _lh_matchIdent³⁹ of {
//│ 									LH_P2 _lh_break_LH_P2_0⁸ _lh_break_LH_P2_1⁸ => 
//│ 										let _lh_words_LH_P2_0²⁶ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_P2_0⁸]
//│ 										in let _lh_words_LH_P2_1²⁶ = _lh_break_LH_P2_1⁸
//│ 										in (fun _lh_dummy²⁶ -> [LH_C _lh_words_LH_P2_0²⁶ words₀₀₂₃(_lh_words_LH_P2_1²⁶)])
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						where
//│ 						def break1₀₀₁₂(_lh_break1_arg1³, _lh_break1_arg2³) = 
//│ 							case _lh_break1_arg2³ of {
//│ 								LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 								| LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else 
//│ 									let _lh_matchIdent¹⁴ = break1₀₀₁₂(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ 									in case _lh_matchIdent¹⁴ of {
//│ 										LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 					def dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_arg2¹³) = 
//│ 						case _lh_dropWhile_arg2¹³ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹]
//│ 							| _  => error⁰}
//│ 			def dropWhile₀₀₁₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_arg2⁷) = 
//│ 				case _lh_dropWhile_arg2⁷ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶ => if _lh_dropWhile_arg1⁸(_lh_dropWhile_LH_C_0⁶) then dropWhile₀₀₁₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_LH_C_1⁶) else [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶]
//│ 					| _  => error⁰}
//│ 		def words₀₀₃₀(_lh_words_arg1¹³) = 
//│ 			let _lh_matchIdent⁴⁶ = dropWhile₀₀₂₃((fun x²⁶ -> polyEq⁰(x²⁶, ' ')), _lh_words_arg1¹³)
//│ 			in case _lh_matchIdent⁴⁶ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent⁴⁷ = break₀₀₂₀((fun x²⁷ -> polyEq⁰(x²⁷, ' ')), _lh_matchIdent⁴⁶)
//│ 					in _lh_matchIdent⁴⁷(99)}
//│ 			where
//│ 			def break₀₀₂₀(_lh_break_arg1⁷, _lh_break_arg2⁷) = 
//│ 				case _lh_break_arg2⁷ of {
//│ 					LH_N  => 
//│ 						let _lh_words_LH_P2_0²¹ = [LH_N]
//│ 						in let _lh_words_LH_P2_1²¹ = [LH_N]
//│ 						in (fun _lh_dummy²¹ -> [LH_C _lh_words_LH_P2_0²¹ words₀₀₃₁(_lh_words_LH_P2_1²¹)])
//│ 					| LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷ => if _lh_break_arg1⁷(_lh_break_LH_C_0⁷) then 
//│ 						let _lh_words_LH_P2_0²² = [LH_N]
//│ 						in let _lh_words_LH_P2_1²² = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷]
//│ 						in (fun _lh_dummy²² -> [LH_C _lh_words_LH_P2_0²² words₀₀₃₂(_lh_words_LH_P2_1²²)]) else 
//│ 						let _lh_matchIdent³⁸ = break1₀₀₂₀(_lh_break_arg1⁷, _lh_break_LH_C_1⁷)
//│ 						in case _lh_matchIdent³⁸ of {
//│ 							LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => 
//│ 								let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ 								in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ 								in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)])
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def break1₀₀₂₀(_lh_break1_arg1⁸, _lh_break1_arg2⁸) = 
//│ 					case _lh_break1_arg2⁸ of {
//│ 						LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 						| LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸ => if _lh_break1_arg1⁸(_lh_break1_LH_C_0⁸) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]] else 
//│ 							let _lh_matchIdent³¹ = break1₀₀₂₀(_lh_break1_arg1⁸, _lh_break1_LH_C_1⁸)
//│ 							in case _lh_matchIdent³¹ of {
//│ 								LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸]
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def words₀₀₃₁(_lh_words_arg1¹⁰) = 
//│ 					let _lh_matchIdent³⁶ = dropWhile₀₀₂₀((fun x²⁰ -> polyEq⁰(x²⁰, ' ')), _lh_words_arg1¹⁰)
//│ 					in case _lh_matchIdent³⁶ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent³⁷ = break₀₀₂₀((fun x²¹ -> polyEq⁰(x²¹, ' ')), _lh_matchIdent³⁶)
//│ 							in _lh_matchIdent³⁷(99)}
//│ 					where
//│ 					def dropWhile₀₀₂₀(_lh_dropWhile_arg1¹⁴, _lh_dropWhile_arg2¹²) = 
//│ 						case _lh_dropWhile_arg2¹² of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰ => if _lh_dropWhile_arg1¹⁴(_lh_dropWhile_LH_C_0¹⁰) then dropWhile₀₀₂₀(_lh_dropWhile_arg1¹⁴, _lh_dropWhile_LH_C_1¹⁰) else [LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰]
//│ 							| _  => error⁰}
//│ 				def words₀₀₃₂(_lh_words_arg1¹²) = 
//│ 					let _lh_matchIdent⁴³ = dropWhile₀₀₂₁((fun x²⁴ -> polyEq⁰(x²⁴, ' ')), _lh_words_arg1¹²)
//│ 					in case _lh_matchIdent⁴³ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent⁴⁴ = break₀₀₂₁((fun x²⁵ -> polyEq⁰(x²⁵, ' ')), _lh_matchIdent⁴³)
//│ 							in _lh_matchIdent⁴⁴(99)}
//│ 					where
//│ 					def break₀₀₂₁(_lh_break_arg1⁴, _lh_break_arg2⁴) = 
//│ 						case _lh_break_arg2⁴ of {
//│ 							LH_N  => 
//│ 								let _lh_words_LH_P2_0¹² = [LH_N]
//│ 								in let _lh_words_LH_P2_1¹² = [LH_N]
//│ 								in (fun _lh_dummy¹² -> [LH_C _lh_words_LH_P2_0¹² words₀₀₃₂(_lh_words_LH_P2_1¹²)])
//│ 							| LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴ => if _lh_break_arg1⁴(_lh_break_LH_C_0⁴) then 
//│ 								let _lh_words_LH_P2_0¹³ = [LH_N]
//│ 								in let _lh_words_LH_P2_1¹³ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴]
//│ 								in (fun _lh_dummy¹³ -> [LH_C _lh_words_LH_P2_0¹³ words₀₀₃₂(_lh_words_LH_P2_1¹³)]) else 
//│ 								let _lh_matchIdent¹⁷ = break1₀₀₂₁(_lh_break_arg1⁴, _lh_break_LH_C_1⁴)
//│ 								in case _lh_matchIdent¹⁷ of {
//│ 									LH_P2 _lh_break_LH_P2_0⁴ _lh_break_LH_P2_1⁴ => 
//│ 										let _lh_words_LH_P2_0¹⁴ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_P2_0⁴]
//│ 										in let _lh_words_LH_P2_1¹⁴ = _lh_break_LH_P2_1⁴
//│ 										in (fun _lh_dummy¹⁴ -> [LH_C _lh_words_LH_P2_0¹⁴ words₀₀₃₂(_lh_words_LH_P2_1¹⁴)])
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						where
//│ 						def break1₀₀₂₁(_lh_break1_arg1⁶, _lh_break1_arg2⁶) = 
//│ 							case _lh_break1_arg2⁶ of {
//│ 								LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 								| LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶ => if _lh_break1_arg1⁶(_lh_break1_LH_C_0⁶) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]] else 
//│ 									let _lh_matchIdent¹⁹ = break1₀₀₂₁(_lh_break1_arg1⁶, _lh_break1_LH_C_1⁶)
//│ 									in case _lh_matchIdent¹⁹ of {
//│ 										LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶]
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 					def dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_arg2¹⁰) = 
//│ 						case _lh_dropWhile_arg2¹⁰ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹]
//│ 							| _  => error⁰}
//│ 				def words₀₀₃₃(_lh_words_arg1⁴) = 
//│ 					let _lh_matchIdent²¹ = dropWhile₀₀₂₂((fun x⁸ -> polyEq⁰(x⁸, ' ')), _lh_words_arg1⁴)
//│ 					in case _lh_matchIdent²¹ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent²² = break₀₀₂₂((fun x⁹ -> polyEq⁰(x⁹, ' ')), _lh_matchIdent²¹)
//│ 							in _lh_matchIdent²²(99)}
//│ 					where
//│ 					def break₀₀₂₂(_lh_break_arg1³, _lh_break_arg2³) = 
//│ 						case _lh_break_arg2³ of {
//│ 							LH_N  => 
//│ 								let _lh_words_LH_P2_0⁹ = [LH_N]
//│ 								in let _lh_words_LH_P2_1⁹ = [LH_N]
//│ 								in (fun _lh_dummy⁹ -> [LH_C _lh_words_LH_P2_0⁹ words₀₀₃₃(_lh_words_LH_P2_1⁹)])
//│ 							| LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1³(_lh_break_LH_C_0³) then 
//│ 								let _lh_words_LH_P2_0¹⁰ = [LH_N]
//│ 								in let _lh_words_LH_P2_1¹⁰ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ 								in (fun _lh_dummy¹⁰ -> [LH_C _lh_words_LH_P2_0¹⁰ words₀₀₃₃(_lh_words_LH_P2_1¹⁰)]) else 
//│ 								let _lh_matchIdent¹⁵ = break1₀₀₂₂(_lh_break_arg1³, _lh_break_LH_C_1³)
//│ 								in case _lh_matchIdent¹⁵ of {
//│ 									LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => 
//│ 										let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ 										in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ 										in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃₃(_lh_words_LH_P2_1¹¹)])
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						where
//│ 						def break1₀₀₂₂(_lh_break1_arg1⁷, _lh_break1_arg2⁷) = 
//│ 							case _lh_break1_arg2⁷ of {
//│ 								LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 								| LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷ => if _lh_break1_arg1⁷(_lh_break1_LH_C_0⁷) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]] else 
//│ 									let _lh_matchIdent²⁰ = break1₀₀₂₂(_lh_break1_arg1⁷, _lh_break1_LH_C_1⁷)
//│ 									in case _lh_matchIdent²⁰ of {
//│ 										LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷]
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 					def dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_arg2⁴) = 
//│ 						case _lh_dropWhile_arg2⁴ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]
//│ 							| _  => error⁰}
//│ 			def dropWhile₀₀₂₃(_lh_dropWhile_arg1⁹, _lh_dropWhile_arg2⁸) = 
//│ 				case _lh_dropWhile_arg2⁸ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷ => if _lh_dropWhile_arg1⁹(_lh_dropWhile_LH_C_0⁷) then dropWhile₀₀₂₃(_lh_dropWhile_arg1⁹, _lh_dropWhile_LH_C_1⁷) else [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷]
//│ 					| _  => error⁰}
//│ 	def dropWhile₀₀₃₀(_lh_dropWhile_arg1⁶, _lh_dropWhile_arg2⁵) = 
//│ 		case _lh_dropWhile_arg2⁵ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁶(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₃₀(_lh_dropWhile_arg1⁶, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]
//│ 			| _  => error⁰}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 441 --->
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_P2 [LH_N] [LH_N]]: 442 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰}: 463
//│ 	case _lh_matchIdent³⁹ of {LH_P2 _lh_break_LH_P2_0⁸ _lh_break_LH_P2_1⁸ => let _lh_words_LH_P2_0²⁶ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_P2_0⁸]
//│ in let _lh_words_LH_P2_1²⁶ = _lh_break_LH_P2_1⁸
//│ in (fun _lh_dummy²⁶ -> [LH_C _lh_words_LH_P2_0²⁶ words₀₀₂₃(_lh_words_LH_P2_1²⁶)]) | _  => error⁰}: 1265
//│ [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]: 449 --->
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]]: 450 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰}: 463
//│ 	case _lh_matchIdent³⁹ of {LH_P2 _lh_break_LH_P2_0⁸ _lh_break_LH_P2_1⁸ => let _lh_words_LH_P2_0²⁶ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_P2_0⁸]
//│ in let _lh_words_LH_P2_1²⁶ = _lh_break_LH_P2_1⁸
//│ in (fun _lh_dummy²⁶ -> [LH_C _lh_words_LH_P2_0²⁶ words₀₀₂₃(_lh_words_LH_P2_1²⁶)]) | _  => error⁰}: 1265
//│ [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]: 461 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰}: 463
//│ 	case _lh_matchIdent³⁹ of {LH_P2 _lh_break_LH_P2_0⁸ _lh_break_LH_P2_1⁸ => let _lh_words_LH_P2_0²⁶ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_P2_0⁸]
//│ in let _lh_words_LH_P2_1²⁶ = _lh_break_LH_P2_1⁸
//│ in (fun _lh_dummy²⁶ -> [LH_C _lh_words_LH_P2_0²⁶ words₀₀₂₃(_lh_words_LH_P2_1²⁶)]) | _  => error⁰}: 1265
//│ [LH_N]: 472 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537
//│ [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]: 487 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537
//│ [LH_N]: 523 --->
//│ 	case _lh_break_arg2³ of {LH_N  => let _lh_words_LH_P2_0⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1⁹ = [LH_N]
//│ in (fun _lh_dummy⁹ -> [LH_C _lh_words_LH_P2_0⁹ words₀₀₃₃(_lh_words_LH_P2_1⁹)]) | LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1³(_lh_break_LH_C_0³) then let _lh_words_LH_P2_0¹⁰ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁰ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ in (fun _lh_dummy¹⁰ -> [LH_C _lh_words_LH_P2_0¹⁰ words₀₀₃₃(_lh_words_LH_P2_1¹⁰)]) else let _lh_matchIdent¹⁵ = break1₀₀₂₂(_lh_break_arg1³, _lh_break_LH_C_1³)
//│ in case _lh_matchIdent¹⁵ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_matchIdent²¹ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²² = break₀₀₂₂((fun x⁹ -> polyEq⁰(x⁹, ' ')), _lh_matchIdent²¹)
//│ in _lh_matchIdent²²(99)}: 778
//│ [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]: 534 --->
//│ 	case _lh_break_arg2³ of {LH_N  => let _lh_words_LH_P2_0⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1⁹ = [LH_N]
//│ in (fun _lh_dummy⁹ -> [LH_C _lh_words_LH_P2_0⁹ words₀₀₃₃(_lh_words_LH_P2_1⁹)]) | LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1³(_lh_break_LH_C_0³) then let _lh_words_LH_P2_0¹⁰ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁰ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ in (fun _lh_dummy¹⁰ -> [LH_C _lh_words_LH_P2_0¹⁰ words₀₀₃₃(_lh_words_LH_P2_1¹⁰)]) else let _lh_matchIdent¹⁵ = break1₀₀₂₂(_lh_break_arg1³, _lh_break_LH_C_1³)
//│ in case _lh_matchIdent¹⁵ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_matchIdent²¹ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²² = break₀₀₂₂((fun x⁹ -> polyEq⁰(x⁹, ' ')), _lh_matchIdent²¹)
//│ in _lh_matchIdent²²(99)}: 778
//│ [LH_N]: 542 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ [LH_P2 [LH_N] [LH_N]]: 543 --->
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_break1_LH_P2_0⁴ _lh_break1_LH_P2_1⁴ => [LH_P2 [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_P2_0⁴] _lh_break1_LH_P2_1⁴] | _  => error⁰}: 564
//│ 	case _lh_matchIdent⁴² of {LH_P2 _lh_break_LH_P2_0⁹ _lh_break_LH_P2_1⁹ => let _lh_words_LH_P2_0²⁹ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_P2_0⁹]
//│ in let _lh_words_LH_P2_1²⁹ = _lh_break_LH_P2_1⁹
//│ in (fun _lh_dummy²⁹ -> [LH_C _lh_words_LH_P2_0²⁹ words₀₀₂₁(_lh_words_LH_P2_1²⁹)]) | _  => error⁰}: 1364
//│ [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴]: 550 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴]]: 551 --->
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_break1_LH_P2_0⁴ _lh_break1_LH_P2_1⁴ => [LH_P2 [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_P2_0⁴] _lh_break1_LH_P2_1⁴] | _  => error⁰}: 564
//│ 	case _lh_matchIdent⁴² of {LH_P2 _lh_break_LH_P2_0⁹ _lh_break_LH_P2_1⁹ => let _lh_words_LH_P2_0²⁹ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_P2_0⁹]
//│ in let _lh_words_LH_P2_1²⁹ = _lh_break_LH_P2_1⁹
//│ in (fun _lh_dummy²⁹ -> [LH_C _lh_words_LH_P2_0²⁹ words₀₀₂₁(_lh_words_LH_P2_1²⁹)]) | _  => error⁰}: 1364
//│ [LH_P2 [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_P2_0⁴] _lh_break1_LH_P2_1⁴]: 562 --->
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_break1_LH_P2_0⁴ _lh_break1_LH_P2_1⁴ => [LH_P2 [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_P2_0⁴] _lh_break1_LH_P2_1⁴] | _  => error⁰}: 564
//│ 	case _lh_matchIdent⁴² of {LH_P2 _lh_break_LH_P2_0⁹ _lh_break_LH_P2_1⁹ => let _lh_words_LH_P2_0²⁹ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_P2_0⁹]
//│ in let _lh_words_LH_P2_1²⁹ = _lh_break_LH_P2_1⁹
//│ in (fun _lh_dummy²⁹ -> [LH_C _lh_words_LH_P2_0²⁹ words₀₀₂₁(_lh_words_LH_P2_1²⁹)]) | _  => error⁰}: 1364
//│ [LH_N]: 573 --->
//│ 	case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908
//│ [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴]: 588 --->
//│ 	case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908
//│ [LH_N]: 625 --->
//│ 	case _lh_dropWhile_arg2⁸ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷ => if _lh_dropWhile_arg1⁹(_lh_dropWhile_LH_C_0⁷) then dropWhile₀₀₂₃(_lh_dropWhile_arg1⁹, _lh_dropWhile_LH_C_1⁷) else [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷] | _  => error⁰}: 872
//│ [LH_P2 [LH_N] [LH_N]]: 626 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰}: 647
//│ 	case _lh_matchIdent³² of {LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1⁵
//│ in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃₀(_lh_words_LH_P2_1¹⁷)]) | _  => error⁰}: 1046
//│ [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]: 633 --->
//│ 	case _lh_dropWhile_arg2⁸ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷ => if _lh_dropWhile_arg1⁹(_lh_dropWhile_LH_C_0⁷) then dropWhile₀₀₂₃(_lh_dropWhile_arg1⁹, _lh_dropWhile_LH_C_1⁷) else [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷] | _  => error⁰}: 872
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]]: 634 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰}: 647
//│ 	case _lh_matchIdent³² of {LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1⁵
//│ in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃₀(_lh_words_LH_P2_1¹⁷)]) | _  => error⁰}: 1046
//│ [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵]: 645 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰}: 647
//│ 	case _lh_matchIdent³² of {LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1⁵
//│ in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃₀(_lh_words_LH_P2_1¹⁷)]) | _  => error⁰}: 1046
//│ [LH_N]: 655 --->
//│ 	case _lh_break_arg2⁵ of {LH_N  => let _lh_words_LH_P2_0¹⁵ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁵ = (fun _lh_dropWhile_arg1¹² -> [LH_N])
//│ in (fun _lh_dummy¹⁵ -> [LH_C _lh_words_LH_P2_0¹⁵ words₀₀₁₀(_lh_words_LH_P2_1¹⁵)]) | LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵ => if _lh_break_arg1⁵(_lh_break_LH_C_0⁵) then let _lh_words_LH_P2_0¹⁶ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁶ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵]
//│ in (fun _lh_dummy¹⁶ -> [LH_C _lh_words_LH_P2_0¹⁶ words₀₀₂₀(_lh_words_LH_P2_1¹⁶)]) else let _lh_matchIdent³² = break1₀₀₀₀(_lh_break_arg1⁵, _lh_break_LH_C_1⁵)
//│ in case _lh_matchIdent³² of {LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1⁵
//│ in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃₀(_lh_words_LH_P2_1¹⁷)]) | _  => error⁰} | _  => error⁰}: 1050
//│ 	case _lh_matchIdent⁴⁰ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁴¹ = break₀₀₀₀((fun x²³ -> polyEq⁰(x²³, ' ')), _lh_matchIdent⁴⁰)
//│ in _lh_matchIdent⁴¹(99)}: 1316
//│ [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]: 666 --->
//│ 	case _lh_break_arg2⁵ of {LH_N  => let _lh_words_LH_P2_0¹⁵ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁵ = (fun _lh_dropWhile_arg1¹² -> [LH_N])
//│ in (fun _lh_dummy¹⁵ -> [LH_C _lh_words_LH_P2_0¹⁵ words₀₀₁₀(_lh_words_LH_P2_1¹⁵)]) | LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵ => if _lh_break_arg1⁵(_lh_break_LH_C_0⁵) then let _lh_words_LH_P2_0¹⁶ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁶ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵]
//│ in (fun _lh_dummy¹⁶ -> [LH_C _lh_words_LH_P2_0¹⁶ words₀₀₂₀(_lh_words_LH_P2_1¹⁶)]) else let _lh_matchIdent³² = break1₀₀₀₀(_lh_break_arg1⁵, _lh_break_LH_C_1⁵)
//│ in case _lh_matchIdent³² of {LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1⁵
//│ in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃₀(_lh_words_LH_P2_1¹⁷)]) | _  => error⁰} | _  => error⁰}: 1050
//│ 	case _lh_matchIdent⁴⁰ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁴¹ = break₀₀₀₀((fun x²³ -> polyEq⁰(x²³, ' ')), _lh_matchIdent⁴⁰)
//│ in _lh_matchIdent⁴¹(99)}: 1316
//│ [LH_N]: 674 --->
//│ 	case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908
//│ [LH_P2 [LH_N] [LH_N]]: 675 --->
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0⁴ _lh_break_LH_P2_1⁴ => let _lh_words_LH_P2_0¹⁴ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_P2_0⁴]
//│ in let _lh_words_LH_P2_1¹⁴ = _lh_break_LH_P2_1⁴
//│ in (fun _lh_dummy¹⁴ -> [LH_C _lh_words_LH_P2_0¹⁴ words₀₀₃₂(_lh_words_LH_P2_1¹⁴)]) | _  => error⁰}: 616
//│ 	case _lh_matchIdent¹⁹ of {LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶] | _  => error⁰}: 696
//│ [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]: 682 --->
//│ 	case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]]: 683 --->
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0⁴ _lh_break_LH_P2_1⁴ => let _lh_words_LH_P2_0¹⁴ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_P2_0⁴]
//│ in let _lh_words_LH_P2_1¹⁴ = _lh_break_LH_P2_1⁴
//│ in (fun _lh_dummy¹⁴ -> [LH_C _lh_words_LH_P2_0¹⁴ words₀₀₃₂(_lh_words_LH_P2_1¹⁴)]) | _  => error⁰}: 616
//│ 	case _lh_matchIdent¹⁹ of {LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶] | _  => error⁰}: 696
//│ [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶]: 694 --->
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0⁴ _lh_break_LH_P2_1⁴ => let _lh_words_LH_P2_0¹⁴ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_P2_0⁴]
//│ in let _lh_words_LH_P2_1¹⁴ = _lh_break_LH_P2_1⁴
//│ in (fun _lh_dummy¹⁴ -> [LH_C _lh_words_LH_P2_0¹⁴ words₀₀₃₂(_lh_words_LH_P2_1¹⁴)]) | _  => error⁰}: 616
//│ 	case _lh_matchIdent¹⁹ of {LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶] | _  => error⁰}: 696
//│ [LH_N]: 705 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537
//│ [LH_P2 [LH_N] [LH_N]]: 706 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰}: 515
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷] | _  => error⁰}: 727
//│ [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]: 713 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]]: 714 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰}: 515
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷] | _  => error⁰}: 727
//│ [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷]: 725 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰}: 515
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷] | _  => error⁰}: 727
//│ [LH_N]: 735 --->
//│ 	case _lh_matchIdent²⁷ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²⁸ = break₀₀₁₀((fun x¹⁵ -> polyEq⁰(x¹⁵, ' ')), _lh_matchIdent²⁷)
//│ in _lh_matchIdent²⁸(99)}: 937
//│ 	case _lh_break_arg2⁶ of {LH_N  => let _lh_words_LH_P2_0¹⁸ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁸ = [LH_N]
//│ in (fun _lh_dummy¹⁸ -> [LH_C _lh_words_LH_P2_0¹⁸ words₀₀₂₁(_lh_words_LH_P2_1¹⁸)]) | LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶ => if _lh_break_arg1⁶(_lh_break_LH_C_0⁶) then let _lh_words_LH_P2_0¹⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁹ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶]
//│ in (fun _lh_dummy¹⁹ -> [LH_C _lh_words_LH_P2_0¹⁹ words₀₀₂₂(_lh_words_LH_P2_1¹⁹)]) else let _lh_matchIdent³⁵ = break1₀₀₁₀(_lh_break_arg1⁶, _lh_break_LH_C_1⁶)
//│ in case _lh_matchIdent³⁵ of {LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)]) | _  => error⁰} | _  => error⁰}: 1131
//│ [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵]: 746 --->
//│ 	case _lh_matchIdent²⁷ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²⁸ = break₀₀₁₀((fun x¹⁵ -> polyEq⁰(x¹⁵, ' ')), _lh_matchIdent²⁷)
//│ in _lh_matchIdent²⁸(99)}: 937
//│ 	case _lh_break_arg2⁶ of {LH_N  => let _lh_words_LH_P2_0¹⁸ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁸ = [LH_N]
//│ in (fun _lh_dummy¹⁸ -> [LH_C _lh_words_LH_P2_0¹⁸ words₀₀₂₁(_lh_words_LH_P2_1¹⁸)]) | LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶ => if _lh_break_arg1⁶(_lh_break_LH_C_0⁶) then let _lh_words_LH_P2_0¹⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁹ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶]
//│ in (fun _lh_dummy¹⁹ -> [LH_C _lh_words_LH_P2_0¹⁹ words₀₀₂₂(_lh_words_LH_P2_1¹⁹)]) else let _lh_matchIdent³⁵ = break1₀₀₁₀(_lh_break_arg1⁶, _lh_break_LH_C_1⁶)
//│ in case _lh_matchIdent³⁵ of {LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)]) | _  => error⁰} | _  => error⁰}: 1131
//│ [LH_N]: 782 --->
//│ 	case _lh_matchIdent²⁵ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²⁶ = break₀₀₁₀((fun x¹³ -> polyEq⁰(x¹³, ' ')), _lh_matchIdent²⁵)
//│ in _lh_matchIdent²⁶(99)}: 854
//│ 	case _lh_break_arg2⁶ of {LH_N  => let _lh_words_LH_P2_0¹⁸ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁸ = [LH_N]
//│ in (fun _lh_dummy¹⁸ -> [LH_C _lh_words_LH_P2_0¹⁸ words₀₀₂₁(_lh_words_LH_P2_1¹⁸)]) | LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶ => if _lh_break_arg1⁶(_lh_break_LH_C_0⁶) then let _lh_words_LH_P2_0¹⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁹ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶]
//│ in (fun _lh_dummy¹⁹ -> [LH_C _lh_words_LH_P2_0¹⁹ words₀₀₂₂(_lh_words_LH_P2_1¹⁹)]) else let _lh_matchIdent³⁵ = break1₀₀₁₀(_lh_break_arg1⁶, _lh_break_LH_C_1⁶)
//│ in case _lh_matchIdent³⁵ of {LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)]) | _  => error⁰} | _  => error⁰}: 1131
//│ [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶]: 793 --->
//│ 	case _lh_matchIdent²⁵ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²⁶ = break₀₀₁₀((fun x¹³ -> polyEq⁰(x¹³, ' ')), _lh_matchIdent²⁵)
//│ in _lh_matchIdent²⁶(99)}: 854
//│ 	case _lh_break_arg2⁶ of {LH_N  => let _lh_words_LH_P2_0¹⁸ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁸ = [LH_N]
//│ in (fun _lh_dummy¹⁸ -> [LH_C _lh_words_LH_P2_0¹⁸ words₀₀₂₁(_lh_words_LH_P2_1¹⁸)]) | LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶ => if _lh_break_arg1⁶(_lh_break_LH_C_0⁶) then let _lh_words_LH_P2_0¹⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁹ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶]
//│ in (fun _lh_dummy¹⁹ -> [LH_C _lh_words_LH_P2_0¹⁹ words₀₀₂₂(_lh_words_LH_P2_1¹⁹)]) else let _lh_matchIdent³⁵ = break1₀₀₁₀(_lh_break_arg1⁶, _lh_break_LH_C_1⁶)
//│ in case _lh_matchIdent³⁵ of {LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)]) | _  => error⁰} | _  => error⁰}: 1131
//│ [LH_N]: 858 --->
//│ 	case _lh_break_arg2⁷ of {LH_N  => let _lh_words_LH_P2_0²¹ = [LH_N]
//│ in let _lh_words_LH_P2_1²¹ = [LH_N]
//│ in (fun _lh_dummy²¹ -> [LH_C _lh_words_LH_P2_0²¹ words₀₀₃₁(_lh_words_LH_P2_1²¹)]) | LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷ => if _lh_break_arg1⁷(_lh_break_LH_C_0⁷) then let _lh_words_LH_P2_0²² = [LH_N]
//│ in let _lh_words_LH_P2_1²² = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷]
//│ in (fun _lh_dummy²² -> [LH_C _lh_words_LH_P2_0²² words₀₀₃₂(_lh_words_LH_P2_1²²)]) else let _lh_matchIdent³⁸ = break1₀₀₂₀(_lh_break_arg1⁷, _lh_break_LH_C_1⁷)
//│ in case _lh_matchIdent³⁸ of {LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)]) | _  => error⁰} | _  => error⁰}: 1217
//│ 	case _lh_matchIdent⁴⁶ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁴⁷ = break₀₀₂₀((fun x²⁷ -> polyEq⁰(x²⁷, ' ')), _lh_matchIdent⁴⁶)
//│ in _lh_matchIdent⁴⁷(99)}: 1457
//│ [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷]: 869 --->
//│ 	case _lh_break_arg2⁷ of {LH_N  => let _lh_words_LH_P2_0²¹ = [LH_N]
//│ in let _lh_words_LH_P2_1²¹ = [LH_N]
//│ in (fun _lh_dummy²¹ -> [LH_C _lh_words_LH_P2_0²¹ words₀₀₃₁(_lh_words_LH_P2_1²¹)]) | LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷ => if _lh_break_arg1⁷(_lh_break_LH_C_0⁷) then let _lh_words_LH_P2_0²² = [LH_N]
//│ in let _lh_words_LH_P2_1²² = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷]
//│ in (fun _lh_dummy²² -> [LH_C _lh_words_LH_P2_0²² words₀₀₃₂(_lh_words_LH_P2_1²²)]) else let _lh_matchIdent³⁸ = break1₀₀₂₀(_lh_break_arg1⁷, _lh_break_LH_C_1⁷)
//│ in case _lh_matchIdent³⁸ of {LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)]) | _  => error⁰} | _  => error⁰}: 1217
//│ 	case _lh_matchIdent⁴⁶ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁴⁷ = break₀₀₂₀((fun x²⁷ -> polyEq⁰(x²⁷, ' ')), _lh_matchIdent⁴⁶)
//│ in _lh_matchIdent⁴⁷(99)}: 1457
//│ [LH_N]: 876 --->
//│ 	case _lh_matchIdent²⁹ of {LH_N  => [LH_N] | _  => let _lh_matchIdent³⁰ = break₀₀₁₁((fun x¹⁷ -> polyEq⁰(x¹⁷, ' ')), _lh_matchIdent²⁹)
//│ in _lh_matchIdent³⁰(99)}: 966
//│ 	case _lh_break_arg2⁹ of {LH_N  => let _lh_words_LH_P2_0²⁷ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁷ = [LH_N]
//│ in (fun _lh_dummy²⁷ -> [LH_C _lh_words_LH_P2_0²⁷ words₀₀₂₁(_lh_words_LH_P2_1²⁷)]) | LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹ => if _lh_break_arg1⁹(_lh_break_LH_C_0⁹) then let _lh_words_LH_P2_0²⁸ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁸ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹]
//│ in (fun _lh_dummy²⁸ -> [LH_C _lh_words_LH_P2_0²⁸ words₀₀₂₁(_lh_words_LH_P2_1²⁸)]) else let _lh_matchIdent⁴² = break1₀₀₁₁(_lh_break_arg1⁹, _lh_break_LH_C_1⁹)
//│ in case _lh_matchIdent⁴² of {LH_P2 _lh_break_LH_P2_0⁹ _lh_break_LH_P2_1⁹ => let _lh_words_LH_P2_0²⁹ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_P2_0⁹]
//│ in let _lh_words_LH_P2_1²⁹ = _lh_break_LH_P2_1⁹
//│ in (fun _lh_dummy²⁹ -> [LH_C _lh_words_LH_P2_0²⁹ words₀₀₂₁(_lh_words_LH_P2_1²⁹)]) | _  => error⁰} | _  => error⁰}: 1368
//│ [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸]: 887 --->
//│ 	case _lh_matchIdent²⁹ of {LH_N  => [LH_N] | _  => let _lh_matchIdent³⁰ = break₀₀₁₁((fun x¹⁷ -> polyEq⁰(x¹⁷, ' ')), _lh_matchIdent²⁹)
//│ in _lh_matchIdent³⁰(99)}: 966
//│ 	case _lh_break_arg2⁹ of {LH_N  => let _lh_words_LH_P2_0²⁷ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁷ = [LH_N]
//│ in (fun _lh_dummy²⁷ -> [LH_C _lh_words_LH_P2_0²⁷ words₀₀₂₁(_lh_words_LH_P2_1²⁷)]) | LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹ => if _lh_break_arg1⁹(_lh_break_LH_C_0⁹) then let _lh_words_LH_P2_0²⁸ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁸ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹]
//│ in (fun _lh_dummy²⁸ -> [LH_C _lh_words_LH_P2_0²⁸ words₀₀₂₁(_lh_words_LH_P2_1²⁸)]) else let _lh_matchIdent⁴² = break1₀₀₁₁(_lh_break_arg1⁹, _lh_break_LH_C_1⁹)
//│ in case _lh_matchIdent⁴² of {LH_P2 _lh_break_LH_P2_0⁹ _lh_break_LH_P2_1⁹ => let _lh_words_LH_P2_0²⁹ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_P2_0⁹]
//│ in let _lh_words_LH_P2_1²⁹ = _lh_break_LH_P2_1⁹
//│ in (fun _lh_dummy²⁹ -> [LH_C _lh_words_LH_P2_0²⁹ words₀₀₂₁(_lh_words_LH_P2_1²⁹)]) | _  => error⁰} | _  => error⁰}: 1368
//│ [LH_N]: 894 --->
//│ 	case _lh_break_arg2⁴ of {LH_N  => let _lh_words_LH_P2_0¹² = [LH_N]
//│ in let _lh_words_LH_P2_1¹² = [LH_N]
//│ in (fun _lh_dummy¹² -> [LH_C _lh_words_LH_P2_0¹² words₀₀₃₂(_lh_words_LH_P2_1¹²)]) | LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴ => if _lh_break_arg1⁴(_lh_break_LH_C_0⁴) then let _lh_words_LH_P2_0¹³ = [LH_N]
//│ in let _lh_words_LH_P2_1¹³ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴]
//│ in (fun _lh_dummy¹³ -> [LH_C _lh_words_LH_P2_0¹³ words₀₀₃₂(_lh_words_LH_P2_1¹³)]) else let _lh_matchIdent¹⁷ = break1₀₀₂₁(_lh_break_arg1⁴, _lh_break_LH_C_1⁴)
//│ in case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0⁴ _lh_break_LH_P2_1⁴ => let _lh_words_LH_P2_0¹⁴ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_P2_0⁴]
//│ in let _lh_words_LH_P2_1¹⁴ = _lh_break_LH_P2_1⁴
//│ in (fun _lh_dummy¹⁴ -> [LH_C _lh_words_LH_P2_0¹⁴ words₀₀₃₂(_lh_words_LH_P2_1¹⁴)]) | _  => error⁰} | _  => error⁰}: 620
//│ 	case _lh_matchIdent⁴³ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁴⁴ = break₀₀₂₁((fun x²⁵ -> polyEq⁰(x²⁵, ' ')), _lh_matchIdent⁴³)
//│ in _lh_matchIdent⁴⁴(99)}: 1397
//│ [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹]: 905 --->
//│ 	case _lh_break_arg2⁴ of {LH_N  => let _lh_words_LH_P2_0¹² = [LH_N]
//│ in let _lh_words_LH_P2_1¹² = [LH_N]
//│ in (fun _lh_dummy¹² -> [LH_C _lh_words_LH_P2_0¹² words₀₀₃₂(_lh_words_LH_P2_1¹²)]) | LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴ => if _lh_break_arg1⁴(_lh_break_LH_C_0⁴) then let _lh_words_LH_P2_0¹³ = [LH_N]
//│ in let _lh_words_LH_P2_1¹³ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴]
//│ in (fun _lh_dummy¹³ -> [LH_C _lh_words_LH_P2_0¹³ words₀₀₃₂(_lh_words_LH_P2_1¹³)]) else let _lh_matchIdent¹⁷ = break1₀₀₂₁(_lh_break_arg1⁴, _lh_break_LH_C_1⁴)
//│ in case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0⁴ _lh_break_LH_P2_1⁴ => let _lh_words_LH_P2_0¹⁴ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_P2_0⁴]
//│ in let _lh_words_LH_P2_1¹⁴ = _lh_break_LH_P2_1⁴
//│ in (fun _lh_dummy¹⁴ -> [LH_C _lh_words_LH_P2_0¹⁴ words₀₀₃₂(_lh_words_LH_P2_1¹⁴)]) | _  => error⁰} | _  => error⁰}: 620
//│ 	case _lh_matchIdent⁴³ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁴⁴ = break₀₀₂₁((fun x²⁵ -> polyEq⁰(x²⁵, ' ')), _lh_matchIdent⁴³)
//│ in _lh_matchIdent⁴⁴(99)}: 1397
//│ [LH_N]: 971 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537
//│ [LH_P2 [LH_N] [LH_N]]: 972 --->
//│ 	case _lh_matchIdent³¹ of {LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸] | _  => error⁰}: 993
//│ 	case _lh_matchIdent³⁸ of {LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)]) | _  => error⁰}: 1213
//│ [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]: 979 --->
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]]: 980 --->
//│ 	case _lh_matchIdent³¹ of {LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸] | _  => error⁰}: 993
//│ 	case _lh_matchIdent³⁸ of {LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)]) | _  => error⁰}: 1213
//│ [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸]: 991 --->
//│ 	case _lh_matchIdent³¹ of {LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸] | _  => error⁰}: 993
//│ 	case _lh_matchIdent³⁸ of {LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)]) | _  => error⁰}: 1213
//│ [LH_N]: 1002 --->
//│ 	case _lh_matchIdent²³ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²⁴ = break₀₀₀₀((fun x¹¹ -> polyEq⁰(x¹¹, ' ')), _lh_matchIdent²³)
//│ in _lh_matchIdent²⁴(99)}: 825
//│ 	case _lh_break_arg2⁵ of {LH_N  => let _lh_words_LH_P2_0¹⁵ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁵ = (fun _lh_dropWhile_arg1¹² -> [LH_N])
//│ in (fun _lh_dummy¹⁵ -> [LH_C _lh_words_LH_P2_0¹⁵ words₀₀₁₀(_lh_words_LH_P2_1¹⁵)]) | LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵ => if _lh_break_arg1⁵(_lh_break_LH_C_0⁵) then let _lh_words_LH_P2_0¹⁶ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁶ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵]
//│ in (fun _lh_dummy¹⁶ -> [LH_C _lh_words_LH_P2_0¹⁶ words₀₀₂₀(_lh_words_LH_P2_1¹⁶)]) else let _lh_matchIdent³² = break1₀₀₀₀(_lh_break_arg1⁵, _lh_break_LH_C_1⁵)
//│ in case _lh_matchIdent³² of {LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1⁵
//│ in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃₀(_lh_words_LH_P2_1¹⁷)]) | _  => error⁰} | _  => error⁰}: 1050
//│ [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵]: 1018 --->
//│ 	case _lh_dropWhile_arg2⁷ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶ => if _lh_dropWhile_arg1⁸(_lh_dropWhile_LH_C_0⁶) then dropWhile₀₀₁₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_LH_C_1⁶) else [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶] | _  => error⁰}: 796
//│ [LH_N]: 1084 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶]: 1099 --->
//│ 	case _lh_dropWhile_arg2⁶ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵ => if _lh_dropWhile_arg1⁷(_lh_dropWhile_LH_C_0⁵) then dropWhile₀₀₁₁(_lh_dropWhile_arg1⁷, _lh_dropWhile_LH_C_1⁵) else [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵] | _  => error⁰}: 749
//│ [LH_N]: 1170 --->
//│ 	case _lh_dropWhile_arg2¹² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰ => if _lh_dropWhile_arg1¹⁴(_lh_dropWhile_LH_C_0¹⁰) then dropWhile₀₀₂₀(_lh_dropWhile_arg1¹⁴, _lh_dropWhile_LH_C_1¹⁰) else [LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰] | _  => error⁰}: 1287
//│ [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷]: 1185 --->
//│ 	case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908
//│ [LH_N]: 1222 --->
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸]: 1237 --->
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_N]: 1273 --->
//│ 	case _lh_matchIdent³⁶ of {LH_N  => [LH_N] | _  => let _lh_matchIdent³⁷ = break₀₀₂₀((fun x²¹ -> polyEq⁰(x²¹, ' ')), _lh_matchIdent³⁶)
//│ in _lh_matchIdent³⁷(99)}: 1165
//│ 	case _lh_break_arg2⁷ of {LH_N  => let _lh_words_LH_P2_0²¹ = [LH_N]
//│ in let _lh_words_LH_P2_1²¹ = [LH_N]
//│ in (fun _lh_dummy²¹ -> [LH_C _lh_words_LH_P2_0²¹ words₀₀₃₁(_lh_words_LH_P2_1²¹)]) | LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷ => if _lh_break_arg1⁷(_lh_break_LH_C_0⁷) then let _lh_words_LH_P2_0²² = [LH_N]
//│ in let _lh_words_LH_P2_1²² = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷]
//│ in (fun _lh_dummy²² -> [LH_C _lh_words_LH_P2_0²² words₀₀₃₂(_lh_words_LH_P2_1²²)]) else let _lh_matchIdent³⁸ = break1₀₀₂₀(_lh_break_arg1⁷, _lh_break_LH_C_1⁷)
//│ in case _lh_matchIdent³⁸ of {LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)]) | _  => error⁰} | _  => error⁰}: 1217
//│ [LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰]: 1284 --->
//│ 	case _lh_matchIdent³⁶ of {LH_N  => [LH_N] | _  => let _lh_matchIdent³⁷ = break₀₀₂₀((fun x²¹ -> polyEq⁰(x²¹, ' ')), _lh_matchIdent³⁶)
//│ in _lh_matchIdent³⁷(99)}: 1165
//│ 	case _lh_break_arg2⁷ of {LH_N  => let _lh_words_LH_P2_0²¹ = [LH_N]
//│ in let _lh_words_LH_P2_1²¹ = [LH_N]
//│ in (fun _lh_dummy²¹ -> [LH_C _lh_words_LH_P2_0²¹ words₀₀₃₁(_lh_words_LH_P2_1²¹)]) | LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷ => if _lh_break_arg1⁷(_lh_break_LH_C_0⁷) then let _lh_words_LH_P2_0²² = [LH_N]
//│ in let _lh_words_LH_P2_1²² = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷]
//│ in (fun _lh_dummy²² -> [LH_C _lh_words_LH_P2_0²² words₀₀₃₂(_lh_words_LH_P2_1²²)]) else let _lh_matchIdent³⁸ = break1₀₀₂₀(_lh_break_arg1⁷, _lh_break_LH_C_1⁷)
//│ in case _lh_matchIdent³⁸ of {LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)]) | _  => error⁰} | _  => error⁰}: 1217
//│ [LH_N]: 1321 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹]: 1336 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ [LH_N]: 1402 --->
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_P2 [LH_N] [LH_N]]: 1403 --->
//│ 	case _lh_matchIdent³⁵ of {LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)]) | _  => error⁰}: 1127
//│ 	case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰}: 1424
//│ [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]: 1410 --->
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]]: 1411 --->
//│ 	case _lh_matchIdent³⁵ of {LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)]) | _  => error⁰}: 1127
//│ 	case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰}: 1424
//│ [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹]: 1422 --->
//│ 	case _lh_matchIdent³⁵ of {LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)]) | _  => error⁰}: 1127
//│ 	case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰}: 1424
//│ [LH_N]: 1461 --->
//│ 	case _lh_matchIdent³³ of {LH_N  => [LH_N] | _  => let _lh_matchIdent³⁴ = break₀₀₁₂((fun x¹⁹ -> polyEq⁰(x¹⁹, ' ')), _lh_matchIdent³³)
//│ in _lh_matchIdent³⁴(99)}: 1079
//│ 	case _lh_break_arg2⁸ of {LH_N  => let _lh_words_LH_P2_0²⁴ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁴ = [LH_N]
//│ in (fun _lh_dummy²⁴ -> [LH_C _lh_words_LH_P2_0²⁴ words₀₀₂₃(_lh_words_LH_P2_1²⁴)]) | LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸ => if _lh_break_arg1⁸(_lh_break_LH_C_0⁸) then let _lh_words_LH_P2_0²⁵ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁵ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸]
//│ in (fun _lh_dummy²⁵ -> [LH_C _lh_words_LH_P2_0²⁵ words₀₀₂₃(_lh_words_LH_P2_1²⁵)]) else let _lh_matchIdent³⁹ = break1₀₀₁₂(_lh_break_arg1⁸, _lh_break_LH_C_1⁸)
//│ in case _lh_matchIdent³⁹ of {LH_P2 _lh_break_LH_P2_0⁸ _lh_break_LH_P2_1⁸ => let _lh_words_LH_P2_0²⁶ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_P2_0⁸]
//│ in let _lh_words_LH_P2_1²⁶ = _lh_break_LH_P2_1⁸
//│ in (fun _lh_dummy²⁶ -> [LH_C _lh_words_LH_P2_0²⁶ words₀₀₂₃(_lh_words_LH_P2_1²⁶)]) | _  => error⁰} | _  => error⁰}: 1269
//│ [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹]: 1472 --->
//│ 	case _lh_matchIdent³³ of {LH_N  => [LH_N] | _  => let _lh_matchIdent³⁴ = break₀₀₁₂((fun x¹⁹ -> polyEq⁰(x¹⁹, ' ')), _lh_matchIdent³³)
//│ in _lh_matchIdent³⁴(99)}: 1079
//│ 	case _lh_break_arg2⁸ of {LH_N  => let _lh_words_LH_P2_0²⁴ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁴ = [LH_N]
//│ in (fun _lh_dummy²⁴ -> [LH_C _lh_words_LH_P2_0²⁴ words₀₀₂₃(_lh_words_LH_P2_1²⁴)]) | LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸ => if _lh_break_arg1⁸(_lh_break_LH_C_0⁸) then let _lh_words_LH_P2_0²⁵ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁵ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸]
//│ in (fun _lh_dummy²⁵ -> [LH_C _lh_words_LH_P2_0²⁵ words₀₀₂₃(_lh_words_LH_P2_1²⁵)]) else let _lh_matchIdent³⁹ = break1₀₀₁₂(_lh_break_arg1⁸, _lh_break_LH_C_1⁸)
//│ in case _lh_matchIdent³⁹ of {LH_P2 _lh_break_LH_P2_0⁸ _lh_break_LH_P2_1⁸ => let _lh_words_LH_P2_0²⁶ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_P2_0⁸]
//│ in let _lh_words_LH_P2_1²⁶ = _lh_break_LH_P2_1⁸
//│ in (fun _lh_dummy²⁶ -> [LH_C _lh_words_LH_P2_0²⁶ words₀₀₂₃(_lh_words_LH_P2_1²⁶)]) | _  => error⁰} | _  => error⁰}: 1269
//│ [LH_N]: 1484 --->
//│ 	case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹⁴ = break1₀₀₁₂(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹⁴ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 467
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537
//│ 	case _lh_break1_arg2⁵ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵ => if _lh_break1_arg1⁵(_lh_break1_LH_C_0⁵) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]] else let _lh_matchIdent¹⁸ = break1₀₀₀₀(_lh_break1_arg1⁵, _lh_break1_LH_C_1⁵)
//│ in case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰} | _  => error⁰}: 651
//│ 	case _lh_dropWhile_arg2⁵ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁶(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₃₀(_lh_dropWhile_arg1⁶, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 669
//│ 	case _lh_break1_arg2⁶ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶ => if _lh_break1_arg1⁶(_lh_break1_LH_C_0⁶) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]] else let _lh_matchIdent¹⁹ = break1₀₀₂₁(_lh_break1_arg1⁶, _lh_break1_LH_C_1⁶)
//│ in case _lh_matchIdent¹⁹ of {LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶] | _  => error⁰} | _  => error⁰}: 700
//│ 	case _lh_break1_arg2⁷ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷ => if _lh_break1_arg1⁷(_lh_break1_LH_C_0⁷) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]] else let _lh_matchIdent²⁰ = break1₀₀₂₂(_lh_break1_arg1⁷, _lh_break1_LH_C_1⁷)
//│ in case _lh_matchIdent²⁰ of {LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷] | _  => error⁰} | _  => error⁰}: 731
//│ 	case _lh_dropWhile_arg2⁶ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵ => if _lh_dropWhile_arg1⁷(_lh_dropWhile_LH_C_0⁵) then dropWhile₀₀₁₁(_lh_dropWhile_arg1⁷, _lh_dropWhile_LH_C_1⁵) else [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵] | _  => error⁰}: 749
//│ 	case _lh_dropWhile_arg2⁷ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶ => if _lh_dropWhile_arg1⁸(_lh_dropWhile_LH_C_0⁶) then dropWhile₀₀₁₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_LH_C_1⁶) else [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶] | _  => error⁰}: 796
//│ 	case _lh_dropWhile_arg2⁸ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷ => if _lh_dropWhile_arg1⁹(_lh_dropWhile_LH_C_0⁷) then dropWhile₀₀₂₃(_lh_dropWhile_arg1⁹, _lh_dropWhile_LH_C_1⁷) else [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷] | _  => error⁰}: 872
//│ 	case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908
//│ 	case _lh_break1_arg2⁸ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸ => if _lh_break1_arg1⁸(_lh_break1_LH_C_0⁸) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]] else let _lh_matchIdent³¹ = break1₀₀₂₀(_lh_break1_arg1⁸, _lh_break1_LH_C_1⁸)
//│ in case _lh_matchIdent³¹ of {LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸] | _  => error⁰} | _  => error⁰}: 997
//│ 	case _lh_break1_arg2⁹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹ => if _lh_break1_arg1⁹(_lh_break1_LH_C_0⁹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]] else let _lh_matchIdent⁴⁵ = break1₀₀₁₀(_lh_break1_arg1⁹, _lh_break1_LH_C_1⁹)
//│ in case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 1428
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_C '4' [LH_N]]: 1485 --->
//│ 	case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹⁴ = break1₀₀₁₂(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹⁴ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 467
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537
//│ 	case _lh_break1_arg2⁵ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵ => if _lh_break1_arg1⁵(_lh_break1_LH_C_0⁵) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]] else let _lh_matchIdent¹⁸ = break1₀₀₀₀(_lh_break1_arg1⁵, _lh_break1_LH_C_1⁵)
//│ in case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰} | _  => error⁰}: 651
//│ 	case _lh_dropWhile_arg2⁵ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁶(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₃₀(_lh_dropWhile_arg1⁶, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 669
//│ 	case _lh_break1_arg2⁶ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶ => if _lh_break1_arg1⁶(_lh_break1_LH_C_0⁶) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]] else let _lh_matchIdent¹⁹ = break1₀₀₂₁(_lh_break1_arg1⁶, _lh_break1_LH_C_1⁶)
//│ in case _lh_matchIdent¹⁹ of {LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶] | _  => error⁰} | _  => error⁰}: 700
//│ 	case _lh_break1_arg2⁷ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷ => if _lh_break1_arg1⁷(_lh_break1_LH_C_0⁷) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]] else let _lh_matchIdent²⁰ = break1₀₀₂₂(_lh_break1_arg1⁷, _lh_break1_LH_C_1⁷)
//│ in case _lh_matchIdent²⁰ of {LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷] | _  => error⁰} | _  => error⁰}: 731
//│ 	case _lh_dropWhile_arg2⁶ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵ => if _lh_dropWhile_arg1⁷(_lh_dropWhile_LH_C_0⁵) then dropWhile₀₀₁₁(_lh_dropWhile_arg1⁷, _lh_dropWhile_LH_C_1⁵) else [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵] | _  => error⁰}: 749
//│ 	case _lh_dropWhile_arg2⁷ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶ => if _lh_dropWhile_arg1⁸(_lh_dropWhile_LH_C_0⁶) then dropWhile₀₀₁₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_LH_C_1⁶) else [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶] | _  => error⁰}: 796
//│ 	case _lh_dropWhile_arg2⁸ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷ => if _lh_dropWhile_arg1⁹(_lh_dropWhile_LH_C_0⁷) then dropWhile₀₀₂₃(_lh_dropWhile_arg1⁹, _lh_dropWhile_LH_C_1⁷) else [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷] | _  => error⁰}: 872
//│ 	case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908
//│ 	case _lh_break1_arg2⁸ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸ => if _lh_break1_arg1⁸(_lh_break1_LH_C_0⁸) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]] else let _lh_matchIdent³¹ = break1₀₀₂₀(_lh_break1_arg1⁸, _lh_break1_LH_C_1⁸)
//│ in case _lh_matchIdent³¹ of {LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸] | _  => error⁰} | _  => error⁰}: 997
//│ 	case _lh_break1_arg2⁹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹ => if _lh_break1_arg1⁹(_lh_break1_LH_C_0⁹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]] else let _lh_matchIdent⁴⁵ = break1₀₀₁₀(_lh_break1_arg1⁹, _lh_break1_LH_C_1⁹)
//│ in case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 1428
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_C ' ' [LH_C '4' [LH_N]]]: 1486 --->
//│ 	case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹⁴ = break1₀₀₁₂(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹⁴ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 467
//│ 	case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537
//│ 	case _lh_break1_arg2⁵ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵ => if _lh_break1_arg1⁵(_lh_break1_LH_C_0⁵) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]] else let _lh_matchIdent¹⁸ = break1₀₀₀₀(_lh_break1_arg1⁵, _lh_break1_LH_C_1⁵)
//│ in case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰} | _  => error⁰}: 651
//│ 	case _lh_dropWhile_arg2⁵ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁶(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₃₀(_lh_dropWhile_arg1⁶, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 669
//│ 	case _lh_break1_arg2⁶ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶ => if _lh_break1_arg1⁶(_lh_break1_LH_C_0⁶) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]] else let _lh_matchIdent¹⁹ = break1₀₀₂₁(_lh_break1_arg1⁶, _lh_break1_LH_C_1⁶)
//│ in case _lh_matchIdent¹⁹ of {LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶] | _  => error⁰} | _  => error⁰}: 700
//│ 	case _lh_break1_arg2⁷ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷ => if _lh_break1_arg1⁷(_lh_break1_LH_C_0⁷) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]] else let _lh_matchIdent²⁰ = break1₀₀₂₂(_lh_break1_arg1⁷, _lh_break1_LH_C_1⁷)
//│ in case _lh_matchIdent²⁰ of {LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷] | _  => error⁰} | _  => error⁰}: 731
//│ 	case _lh_dropWhile_arg2⁶ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵ => if _lh_dropWhile_arg1⁷(_lh_dropWhile_LH_C_0⁵) then dropWhile₀₀₁₁(_lh_dropWhile_arg1⁷, _lh_dropWhile_LH_C_1⁵) else [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵] | _  => error⁰}: 749
//│ 	case _lh_dropWhile_arg2⁷ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶ => if _lh_dropWhile_arg1⁸(_lh_dropWhile_LH_C_0⁶) then dropWhile₀₀₁₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_LH_C_1⁶) else [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶] | _  => error⁰}: 796
//│ 	case _lh_dropWhile_arg2⁸ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷ => if _lh_dropWhile_arg1⁹(_lh_dropWhile_LH_C_0⁷) then dropWhile₀₀₂₃(_lh_dropWhile_arg1⁹, _lh_dropWhile_LH_C_1⁷) else [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷] | _  => error⁰}: 872
//│ 	case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908
//│ 	case _lh_break1_arg2⁸ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸ => if _lh_break1_arg1⁸(_lh_break1_LH_C_0⁸) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]] else let _lh_matchIdent³¹ = break1₀₀₂₀(_lh_break1_arg1⁸, _lh_break1_LH_C_1⁸)
//│ in case _lh_matchIdent³¹ of {LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸] | _  => error⁰} | _  => error⁰}: 997
//│ 	case _lh_break1_arg2⁹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹ => if _lh_break1_arg1⁹(_lh_break1_LH_C_0⁹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]] else let _lh_matchIdent⁴⁵ = break1₀₀₁₀(_lh_break1_arg1⁹, _lh_break1_LH_C_1⁹)
//│ in case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 1428
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487 --->
//│ 	case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹⁴ = break1₀₀₁₂(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹⁴ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 467
//│ 	case _lh_break1_arg2⁵ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵ => if _lh_break1_arg1⁵(_lh_break1_LH_C_0⁵) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]] else let _lh_matchIdent¹⁸ = break1₀₀₀₀(_lh_break1_arg1⁵, _lh_break1_LH_C_1⁵)
//│ in case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰} | _  => error⁰}: 651
//│ 	case _lh_dropWhile_arg2⁵ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁶(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₃₀(_lh_dropWhile_arg1⁶, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 669
//│ 	case _lh_break1_arg2⁶ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶ => if _lh_break1_arg1⁶(_lh_break1_LH_C_0⁶) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]] else let _lh_matchIdent¹⁹ = break1₀₀₂₁(_lh_break1_arg1⁶, _lh_break1_LH_C_1⁶)
//│ in case _lh_matchIdent¹⁹ of {LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶] | _  => error⁰} | _  => error⁰}: 700
//│ 	case _lh_dropWhile_arg2⁶ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵ => if _lh_dropWhile_arg1⁷(_lh_dropWhile_LH_C_0⁵) then dropWhile₀₀₁₁(_lh_dropWhile_arg1⁷, _lh_dropWhile_LH_C_1⁵) else [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵] | _  => error⁰}: 749
//│ 	case _lh_dropWhile_arg2⁷ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶ => if _lh_dropWhile_arg1⁸(_lh_dropWhile_LH_C_0⁶) then dropWhile₀₀₁₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_LH_C_1⁶) else [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶] | _  => error⁰}: 796
//│ 	case _lh_dropWhile_arg2⁸ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷ => if _lh_dropWhile_arg1⁹(_lh_dropWhile_LH_C_0⁷) then dropWhile₀₀₂₃(_lh_dropWhile_arg1⁹, _lh_dropWhile_LH_C_1⁷) else [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷] | _  => error⁰}: 872
//│ 	case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908
//│ 	case _lh_break1_arg2⁸ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸ => if _lh_break1_arg1⁸(_lh_break1_LH_C_0⁸) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]] else let _lh_matchIdent³¹ = break1₀₀₂₀(_lh_break1_arg1⁸, _lh_break1_LH_C_1⁸)
//│ in case _lh_matchIdent³¹ of {LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸] | _  => error⁰} | _  => error⁰}: 997
//│ 	case _lh_break1_arg2⁹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹ => if _lh_break1_arg1⁹(_lh_break1_LH_C_0⁹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]] else let _lh_matchIdent⁴⁵ = break1₀₀₁₀(_lh_break1_arg1⁹, _lh_break1_LH_C_1⁹)
//│ in case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 1428
//│ 	case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475
//│ [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 1488 --->
//│ 	case _lh_break1_arg2⁵ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵ => if _lh_break1_arg1⁵(_lh_break1_LH_C_0⁵) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]] else let _lh_matchIdent¹⁸ = break1₀₀₀₀(_lh_break1_arg1⁵, _lh_break1_LH_C_1⁵)
//│ in case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰} | _  => error⁰}: 651
//│ 	case _lh_dropWhile_arg2⁵ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁶(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₃₀(_lh_dropWhile_arg1⁶, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 669
//│ 	case _lh_dropWhile_arg2⁶ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵ => if _lh_dropWhile_arg1⁷(_lh_dropWhile_LH_C_0⁵) then dropWhile₀₀₁₁(_lh_dropWhile_arg1⁷, _lh_dropWhile_LH_C_1⁵) else [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵] | _  => error⁰}: 749
//│ 	case _lh_dropWhile_arg2⁷ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶ => if _lh_dropWhile_arg1⁸(_lh_dropWhile_LH_C_0⁶) then dropWhile₀₀₁₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_LH_C_1⁶) else [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶] | _  => error⁰}: 796
//│ 	case _lh_break1_arg2⁹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹ => if _lh_break1_arg1⁹(_lh_break1_LH_C_0⁹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]] else let _lh_matchIdent⁴⁵ = break1₀₀₁₀(_lh_break1_arg1⁹, _lh_break1_LH_C_1⁹)
//│ in case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 1428
//│ [LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]]: 1489 --->
//│ 	case _lh_dropWhile_arg2⁵ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁶(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₃₀(_lh_dropWhile_arg1⁶, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 669
//│ ------------------
//│ case _lh_matchIdent¹⁴ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰}: 463 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 442
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]]: 450
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]: 461
//│ case _lh_break1_arg2³ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1³(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else let _lh_matchIdent¹⁴ = break1₀₀₁₂(_lh_break1_arg1³, _lh_break1_LH_C_1³)
//│ in case _lh_matchIdent¹⁴ of {LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³] | _  => error⁰} | _  => error⁰}: 467 --->
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ case _lh_matchIdent¹⁵ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰}: 515 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 706
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]]: 714
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷]: 725
//│ case _lh_break_arg2³ of {LH_N  => let _lh_words_LH_P2_0⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1⁹ = [LH_N]
//│ in (fun _lh_dummy⁹ -> [LH_C _lh_words_LH_P2_0⁹ words₀₀₃₃(_lh_words_LH_P2_1⁹)]) | LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1³(_lh_break_LH_C_0³) then let _lh_words_LH_P2_0¹⁰ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁰ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ in (fun _lh_dummy¹⁰ -> [LH_C _lh_words_LH_P2_0¹⁰ words₀₀₃₃(_lh_words_LH_P2_1¹⁰)]) else let _lh_matchIdent¹⁵ = break1₀₀₂₂(_lh_break_arg1³, _lh_break_LH_C_1³)
//│ in case _lh_matchIdent¹⁵ of {LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => let _lh_words_LH_P2_0¹¹ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ in let _lh_words_LH_P2_1¹¹ = _lh_break_LH_P2_1³
//│ in (fun _lh_dummy¹¹ -> [LH_C _lh_words_LH_P2_0¹¹ words₀₀₃₃(_lh_words_LH_P2_1¹¹)]) | _  => error⁰} | _  => error⁰}: 519 --->
//│ 	[LH_N]: 523
//│ 	[LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]: 534
//│ case _lh_dropWhile_arg2⁴ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1⁵(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1⁵, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³] | _  => error⁰}: 537 --->
//│ 	[LH_N]: 472
//│ 	[LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]: 487
//│ 	[LH_N]: 705
//│ 	[LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]: 713
//│ 	[LH_N]: 971
//│ 	[LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]: 979
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ case _lh_matchIdent¹⁶ of {LH_P2 _lh_break1_LH_P2_0⁴ _lh_break1_LH_P2_1⁴ => [LH_P2 [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_P2_0⁴] _lh_break1_LH_P2_1⁴] | _  => error⁰}: 564 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 543
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴]]: 551
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_P2_0⁴] _lh_break1_LH_P2_1⁴]: 562
//│ case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0⁴ _lh_break_LH_P2_1⁴ => let _lh_words_LH_P2_0¹⁴ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_P2_0⁴]
//│ in let _lh_words_LH_P2_1¹⁴ = _lh_break_LH_P2_1⁴
//│ in (fun _lh_dummy¹⁴ -> [LH_C _lh_words_LH_P2_0¹⁴ words₀₀₃₂(_lh_words_LH_P2_1¹⁴)]) | _  => error⁰}: 616 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 675
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]]: 683
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶]: 694
//│ case _lh_break_arg2⁴ of {LH_N  => let _lh_words_LH_P2_0¹² = [LH_N]
//│ in let _lh_words_LH_P2_1¹² = [LH_N]
//│ in (fun _lh_dummy¹² -> [LH_C _lh_words_LH_P2_0¹² words₀₀₃₂(_lh_words_LH_P2_1¹²)]) | LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴ => if _lh_break_arg1⁴(_lh_break_LH_C_0⁴) then let _lh_words_LH_P2_0¹³ = [LH_N]
//│ in let _lh_words_LH_P2_1¹³ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴]
//│ in (fun _lh_dummy¹³ -> [LH_C _lh_words_LH_P2_0¹³ words₀₀₃₂(_lh_words_LH_P2_1¹³)]) else let _lh_matchIdent¹⁷ = break1₀₀₂₁(_lh_break_arg1⁴, _lh_break_LH_C_1⁴)
//│ in case _lh_matchIdent¹⁷ of {LH_P2 _lh_break_LH_P2_0⁴ _lh_break_LH_P2_1⁴ => let _lh_words_LH_P2_0¹⁴ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_P2_0⁴]
//│ in let _lh_words_LH_P2_1¹⁴ = _lh_break_LH_P2_1⁴
//│ in (fun _lh_dummy¹⁴ -> [LH_C _lh_words_LH_P2_0¹⁴ words₀₀₃₂(_lh_words_LH_P2_1¹⁴)]) | _  => error⁰} | _  => error⁰}: 620 --->
//│ 	[LH_N]: 894
//│ 	[LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹]: 905
//│ case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰}: 647 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 626
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]]: 634
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵]: 645
//│ case _lh_break1_arg2⁵ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵ => if _lh_break1_arg1⁵(_lh_break1_LH_C_0⁵) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]] else let _lh_matchIdent¹⁸ = break1₀₀₀₀(_lh_break1_arg1⁵, _lh_break1_LH_C_1⁵)
//│ in case _lh_matchIdent¹⁸ of {LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵] | _  => error⁰} | _  => error⁰}: 651 --->
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 1488
//│ case _lh_dropWhile_arg2⁵ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1⁶(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₃₀(_lh_dropWhile_arg1⁶, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴] | _  => error⁰}: 669 --->
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 1488
//│ 	[LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]]: 1489
//│ case _lh_matchIdent¹⁹ of {LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶] | _  => error⁰}: 696 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 675
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]]: 683
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶]: 694
//│ case _lh_break1_arg2⁶ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶ => if _lh_break1_arg1⁶(_lh_break1_LH_C_0⁶) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]] else let _lh_matchIdent¹⁹ = break1₀₀₂₁(_lh_break1_arg1⁶, _lh_break1_LH_C_1⁶)
//│ in case _lh_matchIdent¹⁹ of {LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶] | _  => error⁰} | _  => error⁰}: 700 --->
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ case _lh_matchIdent²⁰ of {LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷] | _  => error⁰}: 727 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 706
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]]: 714
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷]: 725
//│ case _lh_break1_arg2⁷ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷ => if _lh_break1_arg1⁷(_lh_break1_LH_C_0⁷) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]] else let _lh_matchIdent²⁰ = break1₀₀₂₂(_lh_break1_arg1⁷, _lh_break1_LH_C_1⁷)
//│ in case _lh_matchIdent²⁰ of {LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷] | _  => error⁰} | _  => error⁰}: 731 --->
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ case _lh_dropWhile_arg2⁶ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵ => if _lh_dropWhile_arg1⁷(_lh_dropWhile_LH_C_0⁵) then dropWhile₀₀₁₁(_lh_dropWhile_arg1⁷, _lh_dropWhile_LH_C_1⁵) else [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵] | _  => error⁰}: 749 --->
//│ 	[LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶]: 1099
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 1488
//│ case _lh_matchIdent²¹ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²² = break₀₀₂₂((fun x⁹ -> polyEq⁰(x⁹, ' ')), _lh_matchIdent²¹)
//│ in _lh_matchIdent²²(99)}: 778 --->
//│ 	[LH_N]: 523
//│ 	[LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]: 534
//│ case _lh_dropWhile_arg2⁷ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶ => if _lh_dropWhile_arg1⁸(_lh_dropWhile_LH_C_0⁶) then dropWhile₀₀₁₃(_lh_dropWhile_arg1⁸, _lh_dropWhile_LH_C_1⁶) else [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶] | _  => error⁰}: 796 --->
//│ 	[LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵]: 1018
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 1488
//│ case _lh_matchIdent²³ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²⁴ = break₀₀₀₀((fun x¹¹ -> polyEq⁰(x¹¹, ' ')), _lh_matchIdent²³)
//│ in _lh_matchIdent²⁴(99)}: 825 --->
//│ 	[LH_N]: 1002
//│ case _lh_matchIdent²⁵ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²⁶ = break₀₀₁₀((fun x¹³ -> polyEq⁰(x¹³, ' ')), _lh_matchIdent²⁵)
//│ in _lh_matchIdent²⁶(99)}: 854 --->
//│ 	[LH_N]: 782
//│ 	[LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶]: 793
//│ case _lh_dropWhile_arg2⁸ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷ => if _lh_dropWhile_arg1⁹(_lh_dropWhile_LH_C_0⁷) then dropWhile₀₀₂₃(_lh_dropWhile_arg1⁹, _lh_dropWhile_LH_C_1⁷) else [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷] | _  => error⁰}: 872 --->
//│ 	[LH_N]: 625
//│ 	[LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]: 633
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890 --->
//│ 	[LH_N]: 542
//│ 	[LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴]: 550
//│ 	[LH_N]: 1084
//│ 	[LH_N]: 1321
//│ 	[LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹]: 1336
//│ case _lh_dropWhile_arg2¹⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1¹¹(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1¹¹, _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹] | _  => error⁰}: 908 --->
//│ 	[LH_N]: 573
//│ 	[LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴]: 588
//│ 	[LH_N]: 674
//│ 	[LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]: 682
//│ 	[LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷]: 1185
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ case _lh_matchIdent²⁷ of {LH_N  => [LH_N] | _  => let _lh_matchIdent²⁸ = break₀₀₁₀((fun x¹⁵ -> polyEq⁰(x¹⁵, ' ')), _lh_matchIdent²⁷)
//│ in _lh_matchIdent²⁸(99)}: 937 --->
//│ 	[LH_N]: 735
//│ 	[LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵]: 746
//│ case _lh_matchIdent²⁹ of {LH_N  => [LH_N] | _  => let _lh_matchIdent³⁰ = break₀₀₁₁((fun x¹⁷ -> polyEq⁰(x¹⁷, ' ')), _lh_matchIdent²⁹)
//│ in _lh_matchIdent³⁰(99)}: 966 --->
//│ 	[LH_N]: 876
//│ 	[LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸]: 887
//│ case _lh_matchIdent³¹ of {LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸] | _  => error⁰}: 993 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 972
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]]: 980
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸]: 991
//│ case _lh_break1_arg2⁸ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸ => if _lh_break1_arg1⁸(_lh_break1_LH_C_0⁸) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]] else let _lh_matchIdent³¹ = break1₀₀₂₀(_lh_break1_arg1⁸, _lh_break1_LH_C_1⁸)
//│ in case _lh_matchIdent³¹ of {LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸] | _  => error⁰} | _  => error⁰}: 997 --->
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ case _lh_matchIdent³² of {LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1⁵
//│ in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃₀(_lh_words_LH_P2_1¹⁷)]) | _  => error⁰}: 1046 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 626
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]]: 634
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵]: 645
//│ case _lh_break_arg2⁵ of {LH_N  => let _lh_words_LH_P2_0¹⁵ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁵ = (fun _lh_dropWhile_arg1¹² -> [LH_N])
//│ in (fun _lh_dummy¹⁵ -> [LH_C _lh_words_LH_P2_0¹⁵ words₀₀₁₀(_lh_words_LH_P2_1¹⁵)]) | LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵ => if _lh_break_arg1⁵(_lh_break_LH_C_0⁵) then let _lh_words_LH_P2_0¹⁶ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁶ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵]
//│ in (fun _lh_dummy¹⁶ -> [LH_C _lh_words_LH_P2_0¹⁶ words₀₀₂₀(_lh_words_LH_P2_1¹⁶)]) else let _lh_matchIdent³² = break1₀₀₀₀(_lh_break_arg1⁵, _lh_break_LH_C_1⁵)
//│ in case _lh_matchIdent³² of {LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => let _lh_words_LH_P2_0¹⁷ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ in let _lh_words_LH_P2_1¹⁷ = _lh_break_LH_P2_1⁵
//│ in (fun _lh_dummy¹⁷ -> [LH_C _lh_words_LH_P2_0¹⁷ words₀₀₃₀(_lh_words_LH_P2_1¹⁷)]) | _  => error⁰} | _  => error⁰}: 1050 --->
//│ 	[LH_N]: 655
//│ 	[LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]: 666
//│ 	[LH_N]: 1002
//│ case _lh_matchIdent³³ of {LH_N  => [LH_N] | _  => let _lh_matchIdent³⁴ = break₀₀₁₂((fun x¹⁹ -> polyEq⁰(x¹⁹, ' ')), _lh_matchIdent³³)
//│ in _lh_matchIdent³⁴(99)}: 1079 --->
//│ 	[LH_N]: 1461
//│ 	[LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹]: 1472
//│ case _lh_matchIdent³⁵ of {LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)]) | _  => error⁰}: 1127 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 1403
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]]: 1411
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹]: 1422
//│ case _lh_break_arg2⁶ of {LH_N  => let _lh_words_LH_P2_0¹⁸ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁸ = [LH_N]
//│ in (fun _lh_dummy¹⁸ -> [LH_C _lh_words_LH_P2_0¹⁸ words₀₀₂₁(_lh_words_LH_P2_1¹⁸)]) | LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶ => if _lh_break_arg1⁶(_lh_break_LH_C_0⁶) then let _lh_words_LH_P2_0¹⁹ = [LH_N]
//│ in let _lh_words_LH_P2_1¹⁹ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶]
//│ in (fun _lh_dummy¹⁹ -> [LH_C _lh_words_LH_P2_0¹⁹ words₀₀₂₂(_lh_words_LH_P2_1¹⁹)]) else let _lh_matchIdent³⁵ = break1₀₀₁₀(_lh_break_arg1⁶, _lh_break_LH_C_1⁶)
//│ in case _lh_matchIdent³⁵ of {LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => let _lh_words_LH_P2_0²⁰ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ in let _lh_words_LH_P2_1²⁰ = _lh_break_LH_P2_1⁶
//│ in (fun _lh_dummy²⁰ -> [LH_C _lh_words_LH_P2_0²⁰ words₀₀₂₃(_lh_words_LH_P2_1²⁰)]) | _  => error⁰} | _  => error⁰}: 1131 --->
//│ 	[LH_N]: 735
//│ 	[LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵]: 746
//│ 	[LH_N]: 782
//│ 	[LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶]: 793
//│ case _lh_matchIdent³⁶ of {LH_N  => [LH_N] | _  => let _lh_matchIdent³⁷ = break₀₀₂₀((fun x²¹ -> polyEq⁰(x²¹, ' ')), _lh_matchIdent³⁶)
//│ in _lh_matchIdent³⁷(99)}: 1165 --->
//│ 	[LH_N]: 1273
//│ 	[LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰]: 1284
//│ case _lh_matchIdent³⁸ of {LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)]) | _  => error⁰}: 1213 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 972
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]]: 980
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸]: 991
//│ case _lh_break_arg2⁷ of {LH_N  => let _lh_words_LH_P2_0²¹ = [LH_N]
//│ in let _lh_words_LH_P2_1²¹ = [LH_N]
//│ in (fun _lh_dummy²¹ -> [LH_C _lh_words_LH_P2_0²¹ words₀₀₃₁(_lh_words_LH_P2_1²¹)]) | LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷ => if _lh_break_arg1⁷(_lh_break_LH_C_0⁷) then let _lh_words_LH_P2_0²² = [LH_N]
//│ in let _lh_words_LH_P2_1²² = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷]
//│ in (fun _lh_dummy²² -> [LH_C _lh_words_LH_P2_0²² words₀₀₃₂(_lh_words_LH_P2_1²²)]) else let _lh_matchIdent³⁸ = break1₀₀₂₀(_lh_break_arg1⁷, _lh_break_LH_C_1⁷)
//│ in case _lh_matchIdent³⁸ of {LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => let _lh_words_LH_P2_0²³ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ in let _lh_words_LH_P2_1²³ = _lh_break_LH_P2_1⁷
//│ in (fun _lh_dummy²³ -> [LH_C _lh_words_LH_P2_0²³ words₀₀₃₃(_lh_words_LH_P2_1²³)]) | _  => error⁰} | _  => error⁰}: 1217 --->
//│ 	[LH_N]: 858
//│ 	[LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷]: 869
//│ 	[LH_N]: 1273
//│ 	[LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰]: 1284
//│ case _lh_matchIdent³⁹ of {LH_P2 _lh_break_LH_P2_0⁸ _lh_break_LH_P2_1⁸ => let _lh_words_LH_P2_0²⁶ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_P2_0⁸]
//│ in let _lh_words_LH_P2_1²⁶ = _lh_break_LH_P2_1⁸
//│ in (fun _lh_dummy²⁶ -> [LH_C _lh_words_LH_P2_0²⁶ words₀₀₂₃(_lh_words_LH_P2_1²⁶)]) | _  => error⁰}: 1265 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 442
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]]: 450
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]: 461
//│ case _lh_break_arg2⁸ of {LH_N  => let _lh_words_LH_P2_0²⁴ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁴ = [LH_N]
//│ in (fun _lh_dummy²⁴ -> [LH_C _lh_words_LH_P2_0²⁴ words₀₀₂₃(_lh_words_LH_P2_1²⁴)]) | LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸ => if _lh_break_arg1⁸(_lh_break_LH_C_0⁸) then let _lh_words_LH_P2_0²⁵ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁵ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸]
//│ in (fun _lh_dummy²⁵ -> [LH_C _lh_words_LH_P2_0²⁵ words₀₀₂₃(_lh_words_LH_P2_1²⁵)]) else let _lh_matchIdent³⁹ = break1₀₀₁₂(_lh_break_arg1⁸, _lh_break_LH_C_1⁸)
//│ in case _lh_matchIdent³⁹ of {LH_P2 _lh_break_LH_P2_0⁸ _lh_break_LH_P2_1⁸ => let _lh_words_LH_P2_0²⁶ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_P2_0⁸]
//│ in let _lh_words_LH_P2_1²⁶ = _lh_break_LH_P2_1⁸
//│ in (fun _lh_dummy²⁶ -> [LH_C _lh_words_LH_P2_0²⁶ words₀₀₂₃(_lh_words_LH_P2_1²⁶)]) | _  => error⁰} | _  => error⁰}: 1269 --->
//│ 	[LH_N]: 1461
//│ 	[LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹]: 1472
//│ case _lh_dropWhile_arg2¹² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰ => if _lh_dropWhile_arg1¹⁴(_lh_dropWhile_LH_C_0¹⁰) then dropWhile₀₀₂₀(_lh_dropWhile_arg1¹⁴, _lh_dropWhile_LH_C_1¹⁰) else [LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰] | _  => error⁰}: 1287 --->
//│ 	[LH_N]: 1170
//│ case _lh_matchIdent⁴⁰ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁴¹ = break₀₀₀₀((fun x²³ -> polyEq⁰(x²³, ' ')), _lh_matchIdent⁴⁰)
//│ in _lh_matchIdent⁴¹(99)}: 1316 --->
//│ 	[LH_N]: 655
//│ 	[LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]: 666
//│ case _lh_matchIdent⁴² of {LH_P2 _lh_break_LH_P2_0⁹ _lh_break_LH_P2_1⁹ => let _lh_words_LH_P2_0²⁹ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_P2_0⁹]
//│ in let _lh_words_LH_P2_1²⁹ = _lh_break_LH_P2_1⁹
//│ in (fun _lh_dummy²⁹ -> [LH_C _lh_words_LH_P2_0²⁹ words₀₀₂₁(_lh_words_LH_P2_1²⁹)]) | _  => error⁰}: 1364 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 543
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴]]: 551
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_P2_0⁴] _lh_break1_LH_P2_1⁴]: 562
//│ case _lh_break_arg2⁹ of {LH_N  => let _lh_words_LH_P2_0²⁷ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁷ = [LH_N]
//│ in (fun _lh_dummy²⁷ -> [LH_C _lh_words_LH_P2_0²⁷ words₀₀₂₁(_lh_words_LH_P2_1²⁷)]) | LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹ => if _lh_break_arg1⁹(_lh_break_LH_C_0⁹) then let _lh_words_LH_P2_0²⁸ = [LH_N]
//│ in let _lh_words_LH_P2_1²⁸ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹]
//│ in (fun _lh_dummy²⁸ -> [LH_C _lh_words_LH_P2_0²⁸ words₀₀₂₁(_lh_words_LH_P2_1²⁸)]) else let _lh_matchIdent⁴² = break1₀₀₁₁(_lh_break_arg1⁹, _lh_break_LH_C_1⁹)
//│ in case _lh_matchIdent⁴² of {LH_P2 _lh_break_LH_P2_0⁹ _lh_break_LH_P2_1⁹ => let _lh_words_LH_P2_0²⁹ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_P2_0⁹]
//│ in let _lh_words_LH_P2_1²⁹ = _lh_break_LH_P2_1⁹
//│ in (fun _lh_dummy²⁹ -> [LH_C _lh_words_LH_P2_0²⁹ words₀₀₂₁(_lh_words_LH_P2_1²⁹)]) | _  => error⁰} | _  => error⁰}: 1368 --->
//│ 	[LH_N]: 876
//│ 	[LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸]: 887
//│ case _lh_matchIdent⁴³ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁴⁴ = break₀₀₂₁((fun x²⁵ -> polyEq⁰(x²⁵, ' ')), _lh_matchIdent⁴³)
//│ in _lh_matchIdent⁴⁴(99)}: 1397 --->
//│ 	[LH_N]: 894
//│ 	[LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹]: 905
//│ case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰}: 1424 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 1403
//│ 	[LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]]: 1411
//│ 	[LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹]: 1422
//│ case _lh_break1_arg2⁹ of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹ => if _lh_break1_arg1⁹(_lh_break1_LH_C_0⁹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]] else let _lh_matchIdent⁴⁵ = break1₀₀₁₀(_lh_break1_arg1⁹, _lh_break1_LH_C_1⁹)
//│ in case _lh_matchIdent⁴⁵ of {LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 1428 --->
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ 	[LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]: 1488
//│ case _lh_matchIdent⁴⁶ of {LH_N  => [LH_N] | _  => let _lh_matchIdent⁴⁷ = break₀₀₂₀((fun x²⁷ -> polyEq⁰(x²⁷, ' ')), _lh_matchIdent⁴⁶)
//│ in _lh_matchIdent⁴⁷(99)}: 1457 --->
//│ 	[LH_N]: 858
//│ 	[LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷]: 869
//│ case _lh_dropWhile_arg2¹³ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁵(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁵, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹] | _  => error⁰}: 1475 --->
//│ 	[LH_N]: 441
//│ 	[LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]: 449
//│ 	[LH_N]: 1222
//│ 	[LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸]: 1237
//│ 	[LH_N]: 1402
//│ 	[LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]: 1410
//│ 	[LH_N]: 1484
//│ 	[LH_C '4' [LH_N]]: 1485
//│ 	[LH_C ' ' [LH_C '4' [LH_N]]]: 1486
//│ 	[LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]: 1487
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_N]: 542 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴]: 550 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ [LH_N]: 1084 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ [LH_N]: 1170 --->
//│ 	case _lh_dropWhile_arg2¹² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰ => if _lh_dropWhile_arg1¹⁴(_lh_dropWhile_LH_C_0¹⁰) then dropWhile₀₀₂₀(_lh_dropWhile_arg1¹⁴, _lh_dropWhile_LH_C_1¹⁰) else [LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰] | _  => error⁰}: 1287
//│ [LH_N]: 1321 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹]: 1336 --->
//│ 	case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890
//│ ------------------
//│ case _lh_dropWhile_arg2⁹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸ => if _lh_dropWhile_arg1¹⁰(_lh_dropWhile_LH_C_0⁸) then dropWhile₀₀₁₀(_lh_dropWhile_arg1¹⁰, _lh_dropWhile_LH_C_1⁸) else [LH_C _lh_dropWhile_LH_C_0⁸ _lh_dropWhile_LH_C_1⁸] | _  => error⁰}: 890 --->
//│ 	[LH_N]: 542
//│ 	[LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴]: 550
//│ 	[LH_N]: 1084
//│ 	[LH_N]: 1321
//│ 	[LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹]: 1336
//│ case _lh_dropWhile_arg2¹² of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰ => if _lh_dropWhile_arg1¹⁴(_lh_dropWhile_LH_C_0¹⁰) then dropWhile₀₀₂₀(_lh_dropWhile_arg1¹⁴, _lh_dropWhile_LH_C_1¹⁰) else [LH_C _lh_dropWhile_LH_C_0¹⁰ _lh_dropWhile_LH_C_1¹⁰] | _  => error⁰}: 1287 --->
//│ 	[LH_N]: 1170
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ words₀₀₀₀([LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]])
//│ def words₀₀₀₀(_lh_words_arg1¹⁷) = 
//│ 	let _lh_matchIdent⁵⁹ = dropWhile₀₀₃₀((fun x³⁴ -> polyEq⁰(x³⁴, ' ')), _lh_words_arg1¹⁷)
//│ 	in case _lh_matchIdent⁵⁹ of {
//│ 		LH_N  => [LH_N]
//│ 		| _  => 
//│ 			let _lh_matchIdent⁶⁰ = break₀₀₀₀((fun x³⁵ -> polyEq⁰(x³⁵, ' ')), _lh_matchIdent⁵⁹)
//│ 			in _lh_matchIdent⁶⁰(99)}
//│ 	where
//│ 	def break₀₀₀₀(_lh_break_arg1¹³, _lh_break_arg2¹³) = 
//│ 		case _lh_break_arg2¹³ of {
//│ 			LH_N  => 
//│ 				let _lh_words_LH_P2_0³⁹ = [LH_N]
//│ 				in let _lh_words_LH_P2_1³⁹ = (fun _lh_dropWhile_arg1²¹ -> [LH_N])
//│ 				in (fun _lh_dummy³⁹ -> [LH_C _lh_words_LH_P2_0³⁹ words₀₀₁₀(_lh_words_LH_P2_1³⁹)])
//│ 			| LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵ => if _lh_break_arg1¹³(_lh_break_LH_C_0⁵) then 
//│ 				let _lh_words_LH_P2_0⁴⁰ = [LH_N]
//│ 				in let _lh_words_LH_P2_1⁴⁰ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_C_1⁵]
//│ 				in (fun _lh_dummy⁴⁰ -> [LH_C _lh_words_LH_P2_0⁴⁰ words₀₀₂₀(_lh_words_LH_P2_1⁴⁰)]) else 
//│ 				let _lh_matchIdent⁶⁹ = break1₀₀₀₀(_lh_break_arg1¹³, _lh_break_LH_C_1⁵)
//│ 				in case _lh_matchIdent⁶⁹ of {
//│ 					LH_P2 _lh_break_LH_P2_0⁵ _lh_break_LH_P2_1⁵ => 
//│ 						let _lh_words_LH_P2_0⁴¹ = [LH_C _lh_break_LH_C_0⁵ _lh_break_LH_P2_0⁵]
//│ 						in let _lh_words_LH_P2_1⁴¹ = _lh_break_LH_P2_1⁵
//│ 						in (fun _lh_dummy⁴¹ -> [LH_C _lh_words_LH_P2_0⁴¹ words₀₀₃₀(_lh_words_LH_P2_1⁴¹)])
//│ 					| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break1₀₀₀₀(_lh_break1_arg1¹², _lh_break1_arg2¹²) = 
//│ 			case _lh_break1_arg2¹² of {
//│ 				LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 				| LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵ => if _lh_break1_arg1¹²(_lh_break1_LH_C_0⁵) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_C_1⁵]] else 
//│ 					let _lh_matchIdent⁵⁶ = break1₀₀₀₀(_lh_break1_arg1¹², _lh_break1_LH_C_1⁵)
//│ 					in case _lh_matchIdent⁵⁶ of {
//│ 						LH_P2 _lh_break1_LH_P2_0⁵ _lh_break1_LH_P2_1⁵ => [LH_P2 [LH_C _lh_break1_LH_C_0⁵ _lh_break1_LH_P2_0⁵] _lh_break1_LH_P2_1⁵]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 		def words₀₀₁₀(_lh_words_arg1²⁰) = 
//│ 			let _lh_matchIdent⁶⁶ = dropWhile₀₀₀₀((fun x⁴⁰ -> polyEq⁰(x⁴⁰, ' ')), _lh_words_arg1²⁰)
//│ 			in case _lh_matchIdent⁶⁶ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent⁶⁷ = break₀₀₀₀((fun x⁴¹ -> polyEq⁰(x⁴¹, ' ')), _lh_matchIdent⁶⁶)
//│ 					in _lh_matchIdent⁶⁷(99)}
//│ 			where
//│ 			def dropWhile₀₀₀₀(_lh_dropWhile_arg1¹⁶, _lh_dropWhile_arg2¹⁴) = 
//│ 				_lh_dropWhile_arg2¹⁴(_lh_dropWhile_arg1¹⁶)
//│ 		def words₀₀₂₀(_lh_words_arg1²¹) = 
//│ 			let _lh_matchIdent⁷⁰ = dropWhile₀₀₁₃((fun x⁴² -> polyEq⁰(x⁴², ' ')), _lh_words_arg1²¹)
//│ 			in case _lh_matchIdent⁷⁰ of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent⁷¹ = break₀₀₁₀((fun x⁴³ -> polyEq⁰(x⁴³, ' ')), _lh_matchIdent⁷⁰)
//│ 					in _lh_matchIdent⁷¹(99)}
//│ 			where
//│ 			def break₀₀₁₀(_lh_break_arg1¹⁵, _lh_break_arg2¹⁵) = 
//│ 				case _lh_break_arg2¹⁵ of {
//│ 					LH_N  => 
//│ 						let _lh_words_LH_P2_0⁴⁵ = [LH_N]
//│ 						in let _lh_words_LH_P2_1⁴⁵ = (fun _lh_dropWhile_arg1²⁷ -> [LH_N])
//│ 						in (fun _lh_dummy⁴⁵ -> [LH_C _lh_words_LH_P2_0⁴⁵ words₀₀₂₁(_lh_words_LH_P2_1⁴⁵)])
//│ 					| LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶ => if _lh_break_arg1¹⁵(_lh_break_LH_C_0⁶) then 
//│ 						let _lh_words_LH_P2_0⁴⁶ = [LH_N]
//│ 						in let _lh_words_LH_P2_1⁴⁶ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_C_1⁶]
//│ 						in (fun _lh_dummy⁴⁶ -> [LH_C _lh_words_LH_P2_0⁴⁶ words₀₀₂₂(_lh_words_LH_P2_1⁴⁶)]) else 
//│ 						let _lh_matchIdent⁷⁷ = break1₀₀₁₀(_lh_break_arg1¹⁵, _lh_break_LH_C_1⁶)
//│ 						in case _lh_matchIdent⁷⁷ of {
//│ 							LH_P2 _lh_break_LH_P2_0⁶ _lh_break_LH_P2_1⁶ => 
//│ 								let _lh_words_LH_P2_0⁴⁷ = [LH_C _lh_break_LH_C_0⁶ _lh_break_LH_P2_0⁶]
//│ 								in let _lh_words_LH_P2_1⁴⁷ = _lh_break_LH_P2_1⁶
//│ 								in (fun _lh_dummy⁴⁷ -> [LH_C _lh_words_LH_P2_0⁴⁷ words₀₀₂₃(_lh_words_LH_P2_1⁴⁷)])
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def break1₀₀₁₀(_lh_break1_arg1¹⁰, _lh_break1_arg2¹⁰) = 
//│ 					case _lh_break1_arg2¹⁰ of {
//│ 						LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 						| LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹ => if _lh_break1_arg1¹⁰(_lh_break1_LH_C_0⁹) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_C_1⁹]] else 
//│ 							let _lh_matchIdent⁴⁸ = break1₀₀₁₀(_lh_break1_arg1¹⁰, _lh_break1_LH_C_1⁹)
//│ 							in case _lh_matchIdent⁴⁸ of {
//│ 								LH_P2 _lh_break1_LH_P2_0⁹ _lh_break1_LH_P2_1⁹ => [LH_P2 [LH_C _lh_break1_LH_C_0⁹ _lh_break1_LH_P2_0⁹] _lh_break1_LH_P2_1⁹]
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def words₀₀₂₁(_lh_words_arg1²²) = 
//│ 					let _lh_matchIdent⁷⁴ = dropWhile₀₀₁₀((fun x⁴⁴ -> polyEq⁰(x⁴⁴, ' ')), _lh_words_arg1²²)
//│ 					in case _lh_matchIdent⁷⁴ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent⁷⁵ = break₀₀₁₁((fun x⁴⁵ -> polyEq⁰(x⁴⁵, ' ')), _lh_matchIdent⁷⁴)
//│ 							in _lh_matchIdent⁷⁵(99)}
//│ 					where
//│ 					def break₀₀₁₁(_lh_break_arg1¹⁴, _lh_break_arg2¹⁴) = 
//│ 						case _lh_break_arg2¹⁴ of {
//│ 							LH_N  => 
//│ 								let _lh_words_LH_P2_0⁴² = [LH_N]
//│ 								in let _lh_words_LH_P2_1⁴² = (fun _lh_dropWhile_arg1²⁴ -> [LH_N])
//│ 								in (fun _lh_dummy⁴² -> [LH_C _lh_words_LH_P2_0⁴² words₀₀₂₁(_lh_words_LH_P2_1⁴²)])
//│ 							| LH_C _lh_break_LH_C_0⁹ _lh_break_LH_C_1⁹ => if _lh_break_arg1¹⁴(_lh_break_LH_C_0⁹) then 
//│ 								let _lh_words_LH_P2_0⁴³ = [LH_N]
//│ 								in let _lh_words_LH_P2_1⁴³ = 	
//│ 									let _lh_dropWhile_LH_C_0¹² = _lh_break_LH_C_0⁹
//│ 									in let _lh_dropWhile_LH_C_1¹² = _lh_break_LH_C_1⁹
//│ 									in (fun _lh_dropWhile_arg1²⁵ -> if _lh_dropWhile_arg1²⁵(_lh_dropWhile_LH_C_0¹²) then dropWhile₀₀₁₀(_lh_dropWhile_arg1²⁵, _lh_dropWhile_LH_C_1¹²) else [LH_C _lh_dropWhile_LH_C_0¹² _lh_dropWhile_LH_C_1¹²])
//│ 								in (fun _lh_dummy⁴³ -> [LH_C _lh_words_LH_P2_0⁴³ words₀₀₂₁(_lh_words_LH_P2_1⁴³)]) else 
//│ 								let _lh_matchIdent⁷² = break1₀₀₁₁(_lh_break_arg1¹⁴, _lh_break_LH_C_1⁹)
//│ 								in case _lh_matchIdent⁷² of {
//│ 									LH_P2 _lh_break_LH_P2_0⁹ _lh_break_LH_P2_1⁹ => 
//│ 										let _lh_words_LH_P2_0⁴⁴ = [LH_C _lh_break_LH_C_0⁹ _lh_break_LH_P2_0⁹]
//│ 										in let _lh_words_LH_P2_1⁴⁴ = _lh_break_LH_P2_1⁹
//│ 										in (fun _lh_dummy⁴⁴ -> [LH_C _lh_words_LH_P2_0⁴⁴ words₀₀₂₁(_lh_words_LH_P2_1⁴⁴)])
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						where
//│ 						def break1₀₀₁₁(_lh_break1_arg1¹⁶, _lh_break1_arg2¹⁶) = 
//│ 							case _lh_break1_arg2¹⁶ of {
//│ 								LH_N  => [LH_P2 [LH_N] (fun _lh_dropWhile_arg1³¹ -> [LH_N])]
//│ 								| LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_C_1⁴ => if _lh_break1_arg1¹⁶(_lh_break1_LH_C_0⁴) then [LH_P2 [LH_N] 
//│ 									let _lh_dropWhile_LH_C_0¹³ = _lh_break1_LH_C_0⁴
//│ 									in let _lh_dropWhile_LH_C_1¹³ = _lh_break1_LH_C_1⁴
//│ 									in (fun _lh_dropWhile_arg1³² -> if _lh_dropWhile_arg1³²(_lh_dropWhile_LH_C_0¹³) then dropWhile₀₀₁₀(_lh_dropWhile_arg1³², _lh_dropWhile_LH_C_1¹³) else [LH_C _lh_dropWhile_LH_C_0¹³ _lh_dropWhile_LH_C_1¹³])] else 
//│ 									let _lh_matchIdent⁸¹ = break1₀₀₁₁(_lh_break1_arg1¹⁶, _lh_break1_LH_C_1⁴)
//│ 									in case _lh_matchIdent⁸¹ of {
//│ 										LH_P2 _lh_break1_LH_P2_0⁴ _lh_break1_LH_P2_1⁴ => [LH_P2 [LH_C _lh_break1_LH_C_0⁴ _lh_break1_LH_P2_0⁴] _lh_break1_LH_P2_1⁴]
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 					def dropWhile₀₀₁₀(_lh_dropWhile_arg1²⁶, _lh_dropWhile_arg2²¹) = 
//│ 						_lh_dropWhile_arg2²¹(_lh_dropWhile_arg1²⁶)
//│ 				def words₀₀₂₂(_lh_words_arg1¹⁴) = 
//│ 					let _lh_matchIdent⁵⁰ = dropWhile₀₀₁₁((fun x²⁸ -> polyEq⁰(x²⁸, ' ')), _lh_words_arg1¹⁴)
//│ 					in case _lh_matchIdent⁵⁰ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent⁵¹ = break₀₀₁₀((fun x²⁹ -> polyEq⁰(x²⁹, ' ')), _lh_matchIdent⁵⁰)
//│ 							in _lh_matchIdent⁵¹(99)}
//│ 					where
//│ 					def dropWhile₀₀₁₁(_lh_dropWhile_arg1³⁰, _lh_dropWhile_arg2²³) = 
//│ 						case _lh_dropWhile_arg2²³ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵ => if _lh_dropWhile_arg1³⁰(_lh_dropWhile_LH_C_0⁵) then dropWhile₀₀₁₁(_lh_dropWhile_arg1³⁰, _lh_dropWhile_LH_C_1⁵) else [LH_C _lh_dropWhile_LH_C_0⁵ _lh_dropWhile_LH_C_1⁵]
//│ 							| _  => error⁰}
//│ 				def words₀₀₂₃(_lh_words_arg1²³) = 
//│ 					let _lh_matchIdent⁷⁸ = dropWhile₀₀₁₂((fun x⁴⁶ -> polyEq⁰(x⁴⁶, ' ')), _lh_words_arg1²³)
//│ 					in case _lh_matchIdent⁷⁸ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent⁷⁹ = break₀₀₁₂((fun x⁴⁷ -> polyEq⁰(x⁴⁷, ' ')), _lh_matchIdent⁷⁸)
//│ 							in _lh_matchIdent⁷⁹(99)}
//│ 					where
//│ 					def break₀₀₁₂(_lh_break_arg1¹², _lh_break_arg2¹²) = 
//│ 						case _lh_break_arg2¹² of {
//│ 							LH_N  => 
//│ 								let _lh_words_LH_P2_0³⁶ = [LH_N]
//│ 								in let _lh_words_LH_P2_1³⁶ = [LH_N]
//│ 								in (fun _lh_dummy³⁶ -> [LH_C _lh_words_LH_P2_0³⁶ words₀₀₂₃(_lh_words_LH_P2_1³⁶)])
//│ 							| LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸ => if _lh_break_arg1¹²(_lh_break_LH_C_0⁸) then 
//│ 								let _lh_words_LH_P2_0³⁷ = [LH_N]
//│ 								in let _lh_words_LH_P2_1³⁷ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_C_1⁸]
//│ 								in (fun _lh_dummy³⁷ -> [LH_C _lh_words_LH_P2_0³⁷ words₀₀₂₃(_lh_words_LH_P2_1³⁷)]) else 
//│ 								let _lh_matchIdent⁶⁸ = break1₀₀₁₂(_lh_break_arg1¹², _lh_break_LH_C_1⁸)
//│ 								in case _lh_matchIdent⁶⁸ of {
//│ 									LH_P2 _lh_break_LH_P2_0⁸ _lh_break_LH_P2_1⁸ => 
//│ 										let _lh_words_LH_P2_0³⁸ = [LH_C _lh_break_LH_C_0⁸ _lh_break_LH_P2_0⁸]
//│ 										in let _lh_words_LH_P2_1³⁸ = _lh_break_LH_P2_1⁸
//│ 										in (fun _lh_dummy³⁸ -> [LH_C _lh_words_LH_P2_0³⁸ words₀₀₂₃(_lh_words_LH_P2_1³⁸)])
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						where
//│ 						def break1₀₀₁₂(_lh_break1_arg1¹⁴, _lh_break1_arg2¹⁴) = 
//│ 							case _lh_break1_arg2¹⁴ of {
//│ 								LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 								| LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³ => if _lh_break1_arg1¹⁴(_lh_break1_LH_C_0³) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_C_1³]] else 
//│ 									let _lh_matchIdent⁷³ = break1₀₀₁₂(_lh_break1_arg1¹⁴, _lh_break1_LH_C_1³)
//│ 									in case _lh_matchIdent⁷³ of {
//│ 										LH_P2 _lh_break1_LH_P2_0³ _lh_break1_LH_P2_1³ => [LH_P2 [LH_C _lh_break1_LH_C_0³ _lh_break1_LH_P2_0³] _lh_break1_LH_P2_1³]
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 					def dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁷, _lh_dropWhile_arg2¹⁵) = 
//│ 						case _lh_dropWhile_arg2¹⁵ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹ => if _lh_dropWhile_arg1¹⁷(_lh_dropWhile_LH_C_0¹¹) then dropWhile₀₀₁₂(_lh_dropWhile_arg1¹⁷, _lh_dropWhile_LH_C_1¹¹) else [LH_C _lh_dropWhile_LH_C_0¹¹ _lh_dropWhile_LH_C_1¹¹]
//│ 							| _  => error⁰}
//│ 			def dropWhile₀₀₁₃(_lh_dropWhile_arg1¹⁸, _lh_dropWhile_arg2¹⁶) = 
//│ 				case _lh_dropWhile_arg2¹⁶ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶ => if _lh_dropWhile_arg1¹⁸(_lh_dropWhile_LH_C_0⁶) then dropWhile₀₀₁₃(_lh_dropWhile_arg1¹⁸, _lh_dropWhile_LH_C_1⁶) else [LH_C _lh_dropWhile_LH_C_0⁶ _lh_dropWhile_LH_C_1⁶]
//│ 					| _  => error⁰}
//│ 		def words₀₀₃₀(_lh_words_arg1¹⁸) = 
//│ 			let _lh_matchIdent⁶² = dropWhile₀₀₂₃((fun x³⁶ -> polyEq⁰(x³⁶, ' ')), _lh_words_arg1¹⁸)
//│ 			in case _lh_matchIdent⁶² of {
//│ 				LH_N  => [LH_N]
//│ 				| _  => 
//│ 					let _lh_matchIdent⁶³ = break₀₀₂₀((fun x³⁷ -> polyEq⁰(x³⁷, ' ')), _lh_matchIdent⁶²)
//│ 					in _lh_matchIdent⁶³(99)}
//│ 			where
//│ 			def break₀₀₂₀(_lh_break_arg1¹⁶, _lh_break_arg2¹⁶) = 
//│ 				case _lh_break_arg2¹⁶ of {
//│ 					LH_N  => 
//│ 						let _lh_words_LH_P2_0⁴⁸ = [LH_N]
//│ 						in let _lh_words_LH_P2_1⁴⁸ = (fun _lh_dropWhile_arg1²⁹ -> [LH_N])
//│ 						in (fun _lh_dummy⁴⁸ -> [LH_C _lh_words_LH_P2_0⁴⁸ words₀₀₃₁(_lh_words_LH_P2_1⁴⁸)])
//│ 					| LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷ => if _lh_break_arg1¹⁶(_lh_break_LH_C_0⁷) then 
//│ 						let _lh_words_LH_P2_0⁴⁹ = [LH_N]
//│ 						in let _lh_words_LH_P2_1⁴⁹ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_C_1⁷]
//│ 						in (fun _lh_dummy⁴⁹ -> [LH_C _lh_words_LH_P2_0⁴⁹ words₀₀₃₂(_lh_words_LH_P2_1⁴⁹)]) else 
//│ 						let _lh_matchIdent⁸⁰ = break1₀₀₂₀(_lh_break_arg1¹⁶, _lh_break_LH_C_1⁷)
//│ 						in case _lh_matchIdent⁸⁰ of {
//│ 							LH_P2 _lh_break_LH_P2_0⁷ _lh_break_LH_P2_1⁷ => 
//│ 								let _lh_words_LH_P2_0⁵⁰ = [LH_C _lh_break_LH_C_0⁷ _lh_break_LH_P2_0⁷]
//│ 								in let _lh_words_LH_P2_1⁵⁰ = _lh_break_LH_P2_1⁷
//│ 								in (fun _lh_dummy⁵⁰ -> [LH_C _lh_words_LH_P2_0⁵⁰ words₀₀₃₃(_lh_words_LH_P2_1⁵⁰)])
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def break1₀₀₂₀(_lh_break1_arg1¹¹, _lh_break1_arg2¹¹) = 
//│ 					case _lh_break1_arg2¹¹ of {
//│ 						LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 						| LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸ => if _lh_break1_arg1¹¹(_lh_break1_LH_C_0⁸) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_C_1⁸]] else 
//│ 							let _lh_matchIdent⁵² = break1₀₀₂₀(_lh_break1_arg1¹¹, _lh_break1_LH_C_1⁸)
//│ 							in case _lh_matchIdent⁵² of {
//│ 								LH_P2 _lh_break1_LH_P2_0⁸ _lh_break1_LH_P2_1⁸ => [LH_P2 [LH_C _lh_break1_LH_C_0⁸ _lh_break1_LH_P2_0⁸] _lh_break1_LH_P2_1⁸]
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def words₀₀₃₁(_lh_words_arg1¹⁹) = 
//│ 					let _lh_matchIdent⁶⁴ = dropWhile₀₀₂₀((fun x³⁸ -> polyEq⁰(x³⁸, ' ')), _lh_words_arg1¹⁹)
//│ 					in case _lh_matchIdent⁶⁴ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent⁶⁵ = break₀₀₂₀((fun x³⁹ -> polyEq⁰(x³⁹, ' ')), _lh_matchIdent⁶⁴)
//│ 							in _lh_matchIdent⁶⁵(99)}
//│ 					where
//│ 					def dropWhile₀₀₂₀(_lh_dropWhile_arg1²⁰, _lh_dropWhile_arg2¹⁸) = 
//│ 						_lh_dropWhile_arg2¹⁸(_lh_dropWhile_arg1²⁰)
//│ 				def words₀₀₃₂(_lh_words_arg1¹⁶) = 
//│ 					let _lh_matchIdent⁵⁷ = dropWhile₀₀₂₁((fun x³² -> polyEq⁰(x³², ' ')), _lh_words_arg1¹⁶)
//│ 					in case _lh_matchIdent⁵⁷ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent⁵⁸ = break₀₀₂₁((fun x³³ -> polyEq⁰(x³³, ' ')), _lh_matchIdent⁵⁷)
//│ 							in _lh_matchIdent⁵⁸(99)}
//│ 					where
//│ 					def break₀₀₂₁(_lh_break_arg1¹⁰, _lh_break_arg2¹⁰) = 
//│ 						case _lh_break_arg2¹⁰ of {
//│ 							LH_N  => 
//│ 								let _lh_words_LH_P2_0³⁰ = [LH_N]
//│ 								in let _lh_words_LH_P2_1³⁰ = [LH_N]
//│ 								in (fun _lh_dummy³⁰ -> [LH_C _lh_words_LH_P2_0³⁰ words₀₀₃₂(_lh_words_LH_P2_1³⁰)])
//│ 							| LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴ => if _lh_break_arg1¹⁰(_lh_break_LH_C_0⁴) then 
//│ 								let _lh_words_LH_P2_0³¹ = [LH_N]
//│ 								in let _lh_words_LH_P2_1³¹ = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_C_1⁴]
//│ 								in (fun _lh_dummy³¹ -> [LH_C _lh_words_LH_P2_0³¹ words₀₀₃₂(_lh_words_LH_P2_1³¹)]) else 
//│ 								let _lh_matchIdent⁴⁹ = break1₀₀₂₁(_lh_break_arg1¹⁰, _lh_break_LH_C_1⁴)
//│ 								in case _lh_matchIdent⁴⁹ of {
//│ 									LH_P2 _lh_break_LH_P2_0⁴ _lh_break_LH_P2_1⁴ => 
//│ 										let _lh_words_LH_P2_0³² = [LH_C _lh_break_LH_C_0⁴ _lh_break_LH_P2_0⁴]
//│ 										in let _lh_words_LH_P2_1³² = _lh_break_LH_P2_1⁴
//│ 										in (fun _lh_dummy³² -> [LH_C _lh_words_LH_P2_0³² words₀₀₃₂(_lh_words_LH_P2_1³²)])
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						where
//│ 						def break1₀₀₂₁(_lh_break1_arg1¹⁵, _lh_break1_arg2¹⁵) = 
//│ 							case _lh_break1_arg2¹⁵ of {
//│ 								LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 								| LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶ => if _lh_break1_arg1¹⁵(_lh_break1_LH_C_0⁶) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_C_1⁶]] else 
//│ 									let _lh_matchIdent⁷⁶ = break1₀₀₂₁(_lh_break1_arg1¹⁵, _lh_break1_LH_C_1⁶)
//│ 									in case _lh_matchIdent⁷⁶ of {
//│ 										LH_P2 _lh_break1_LH_P2_0⁶ _lh_break1_LH_P2_1⁶ => [LH_P2 [LH_C _lh_break1_LH_C_0⁶ _lh_break1_LH_P2_0⁶] _lh_break1_LH_P2_1⁶]
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 					def dropWhile₀₀₂₁(_lh_dropWhile_arg1²², _lh_dropWhile_arg2¹⁹) = 
//│ 						case _lh_dropWhile_arg2¹⁹ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹ => if _lh_dropWhile_arg1²²(_lh_dropWhile_LH_C_0⁹) then dropWhile₀₀₂₁(_lh_dropWhile_arg1²², _lh_dropWhile_LH_C_1⁹) else [LH_C _lh_dropWhile_LH_C_0⁹ _lh_dropWhile_LH_C_1⁹]
//│ 							| _  => error⁰}
//│ 				def words₀₀₃₃(_lh_words_arg1¹⁵) = 
//│ 					let _lh_matchIdent⁵⁴ = dropWhile₀₀₂₂((fun x³⁰ -> polyEq⁰(x³⁰, ' ')), _lh_words_arg1¹⁵)
//│ 					in case _lh_matchIdent⁵⁴ of {
//│ 						LH_N  => [LH_N]
//│ 						| _  => 
//│ 							let _lh_matchIdent⁵⁵ = break₀₀₂₂((fun x³¹ -> polyEq⁰(x³¹, ' ')), _lh_matchIdent⁵⁴)
//│ 							in _lh_matchIdent⁵⁵(99)}
//│ 					where
//│ 					def break₀₀₂₂(_lh_break_arg1¹¹, _lh_break_arg2¹¹) = 
//│ 						case _lh_break_arg2¹¹ of {
//│ 							LH_N  => 
//│ 								let _lh_words_LH_P2_0³³ = [LH_N]
//│ 								in let _lh_words_LH_P2_1³³ = [LH_N]
//│ 								in (fun _lh_dummy³³ -> [LH_C _lh_words_LH_P2_0³³ words₀₀₃₃(_lh_words_LH_P2_1³³)])
//│ 							| LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³ => if _lh_break_arg1¹¹(_lh_break_LH_C_0³) then 
//│ 								let _lh_words_LH_P2_0³⁴ = [LH_N]
//│ 								in let _lh_words_LH_P2_1³⁴ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_C_1³]
//│ 								in (fun _lh_dummy³⁴ -> [LH_C _lh_words_LH_P2_0³⁴ words₀₀₃₃(_lh_words_LH_P2_1³⁴)]) else 
//│ 								let _lh_matchIdent⁵³ = break1₀₀₂₂(_lh_break_arg1¹¹, _lh_break_LH_C_1³)
//│ 								in case _lh_matchIdent⁵³ of {
//│ 									LH_P2 _lh_break_LH_P2_0³ _lh_break_LH_P2_1³ => 
//│ 										let _lh_words_LH_P2_0³⁵ = [LH_C _lh_break_LH_C_0³ _lh_break_LH_P2_0³]
//│ 										in let _lh_words_LH_P2_1³⁵ = _lh_break_LH_P2_1³
//│ 										in (fun _lh_dummy³⁵ -> [LH_C _lh_words_LH_P2_0³⁵ words₀₀₃₃(_lh_words_LH_P2_1³⁵)])
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						where
//│ 						def break1₀₀₂₂(_lh_break1_arg1¹³, _lh_break1_arg2¹³) = 
//│ 							case _lh_break1_arg2¹³ of {
//│ 								LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 								| LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷ => if _lh_break1_arg1¹³(_lh_break1_LH_C_0⁷) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_C_1⁷]] else 
//│ 									let _lh_matchIdent⁶¹ = break1₀₀₂₂(_lh_break1_arg1¹³, _lh_break1_LH_C_1⁷)
//│ 									in case _lh_matchIdent⁶¹ of {
//│ 										LH_P2 _lh_break1_LH_P2_0⁷ _lh_break1_LH_P2_1⁷ => [LH_P2 [LH_C _lh_break1_LH_C_0⁷ _lh_break1_LH_P2_0⁷] _lh_break1_LH_P2_1⁷]
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 					def dropWhile₀₀₂₂(_lh_dropWhile_arg1²⁸, _lh_dropWhile_arg2²²) = 
//│ 						case _lh_dropWhile_arg2²² of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³ => if _lh_dropWhile_arg1²⁸(_lh_dropWhile_LH_C_0³) then dropWhile₀₀₂₂(_lh_dropWhile_arg1²⁸, _lh_dropWhile_LH_C_1³) else [LH_C _lh_dropWhile_LH_C_0³ _lh_dropWhile_LH_C_1³]
//│ 							| _  => error⁰}
//│ 			def dropWhile₀₀₂₃(_lh_dropWhile_arg1²³, _lh_dropWhile_arg2²⁰) = 
//│ 				case _lh_dropWhile_arg2²⁰ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷ => if _lh_dropWhile_arg1²³(_lh_dropWhile_LH_C_0⁷) then dropWhile₀₀₂₃(_lh_dropWhile_arg1²³, _lh_dropWhile_LH_C_1⁷) else [LH_C _lh_dropWhile_LH_C_0⁷ _lh_dropWhile_LH_C_1⁷]
//│ 					| _  => error⁰}
//│ 	def dropWhile₀₀₃₀(_lh_dropWhile_arg1¹⁹, _lh_dropWhile_arg2¹⁷) = 
//│ 		case _lh_dropWhile_arg2¹⁷ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴ => if _lh_dropWhile_arg1¹⁹(_lh_dropWhile_LH_C_0⁴) then dropWhile₀₀₃₀(_lh_dropWhile_arg1¹⁹, _lh_dropWhile_LH_C_1⁴) else [LH_C _lh_dropWhile_LH_C_0⁴ _lh_dropWhile_LH_C_1⁴]
//│ 			| _  => error⁰}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ 
//│ >>>>>>>>>> deadcode elimination info >>>>>>>>>>
//│ words₀₀₀₀ :: 'words₀₀₀₀ <: [LH_C(Char, LH_C(Char, LH_C(Char, LH_C(Char, LH_C(Char, LH_N))))) => '13_callres] ::: false
//│ '1' :: Char ::: false
//│ ' ' :: Char ::: false
//│ '2' :: Char ::: false
//│ ' ' :: Char ::: false
//│ '4' :: Char ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_C '4' [LH_N]] :: LH_C(Char, LH_N) ::: false
//│ [LH_C ' ' [LH_C '4' [LH_N]]] :: LH_C(Char, LH_C(Char, LH_N)) ::: false
//│ [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]] :: LH_C(Char, LH_C(Char, LH_C(Char, LH_N))) ::: false
//│ [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]] :: LH_C(Char, LH_C(Char, LH_C(Char, LH_C(Char, LH_N)))) ::: false
//│ [LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]] :: LH_C(Char, LH_C(Char, LH_C(Char, LH_C(Char, LH_C(Char, LH_N))))) ::: false
//│ words₀₀₀₀([LH_C '1' [LH_C ' ' [LH_C '2' [LH_C ' ' [LH_C '4' [LH_N]]]]]]) :: '13_callres <: [NoCons] ::: false
//│ _lh_break1_arg2 :: '_lh_break1_arg2⁰ <: [Destruct(LH_N, LH_C('_lh_break1_LH_C_0⁰, '_lh_break1_LH_C_1⁰), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_P2 [LH_N] [LH_N]] :: LH_P2(LH_N, LH_N) ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1⁰ <: ['_lh_break1_LH_C_0⁰ => '20_callres] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁰ <: [NoCons | 'x¹ | 'x¹⁵ | '_lh_dropWhile_LH_C_0⁰] ::: false
//│ _lh_break1_arg1(_lh_break1_LH_C_0) :: '20_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁰ <: [NoCons | 'x¹ | 'x¹⁵ | '_lh_dropWhile_LH_C_0⁰] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1⁰ <: ['_lh_dropWhile_LH_C_1⁰ | '_lh_break1_arg2⁰] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1] :: LH_C('_lh_break1_LH_C_0⁰, '_lh_break1_LH_C_1⁰) ::: false
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] :: LH_P2(LH_N, LH_C('_lh_break1_LH_C_0⁰, '_lh_break1_LH_C_1⁰)) ::: false
//│ break1₀₀₁₀ :: 'break1₀₀₁₀ <: ['_lh_break1_arg1⁰ => '28_callres | '_lh_break_arg1⁵ => '871_callres] ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1⁰ <: ['_lh_break1_LH_C_0⁰ => '20_callres] ::: false
//│ break1₀₀₁₀(_lh_break1_arg1) :: '28_callres <: ['_lh_break1_LH_C_1⁰ => '30_callres] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1⁰ <: ['_lh_dropWhile_LH_C_1⁰ | '_lh_break1_arg2⁰] ::: false
//│ break1₀₀₁₀(_lh_break1_arg1, _lh_break1_LH_C_1) :: '30_callres <: ['_lh_matchIdent⁰] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent⁰ <: [Destruct(LH_P2('_lh_break1_LH_P2_0⁰, '_lh_break1_LH_P2_1⁰), _)] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁰ <: [NoCons | 'x¹ | 'x¹⁵ | '_lh_dropWhile_LH_C_0⁰] ::: false
//│ _lh_break1_LH_P2_0 :: '_lh_break1_LH_P2_0⁰ <: [NoCons] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] :: LH_C('_lh_break1_LH_C_0⁰, '_lh_break1_LH_P2_0⁰) ::: false
//│ _lh_break1_LH_P2_1 :: '_lh_break1_LH_P2_1⁰ <: ['_lh_break_LH_P2_1⁵] ::: false
//│ [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] :: LH_P2(LH_C('_lh_break1_LH_C_0⁰, '_lh_break1_LH_P2_0⁰), '_lh_break1_LH_P2_1⁰) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '38_matchres <: ['40_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₁₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '38_matchres <: ['40_ifres] ::: false
//│ if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₁₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '40_ifres <: ['42_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₁₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error} :: '42_matchres <: ['30_callres | '873_callres] ::: false
//│ (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₁₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error}) :: '_lh_break1_arg2⁰ => '42_matchres ::: false
//│ (fun _lh_break1_arg1 -> (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₁₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error})) :: '_lh_break1_arg1⁰ => '_lh_break1_arg2⁰ => '42_matchres ::: false
//│ _lh_break_arg2 :: '_lh_break_arg2⁰ <: [Destruct(LH_N, LH_C('_lh_break_LH_C_0⁰, '_lh_break_LH_C_1⁰), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0⁰ <: [NoCons] ::: false
//│ words₀₀₃₂ :: 'words₀₀₃₂ <: ['_lh_words_LH_P2_1⁰ => '51_callres | '_lh_words_LH_P2_1¹ => '66_callres | '_lh_words_LH_P2_1² => '84_callres | '_lh_words_LH_P2_1¹⁹ => '964_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1⁰ <: ['_lh_words_arg1²] ::: false
//│ words₀₀₃₂(_lh_words_LH_P2_1) :: '51_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0⁰, '51_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy⁰ => LH_C('_lh_words_LH_P2_0⁰, '51_callres) ::: false
//│ let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy⁰ => LH_C('_lh_words_LH_P2_0⁰, '51_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy⁰ => LH_C('_lh_words_LH_P2_0⁰, '51_callres) ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1⁰ <: ['_lh_break_LH_C_0⁰ => '58_callres | '_lh_break1_arg1⁵] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁰ <: [NoCons | 'x⁵ | '_lh_dropWhile_LH_C_0³] ::: false
//│ _lh_break_arg1(_lh_break_LH_C_0) :: '58_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁰ <: [NoCons | 'x⁵ | '_lh_dropWhile_LH_C_0³] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1⁰ <: ['_lh_dropWhile_LH_C_1³ | '_lh_break1_arg2⁵] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1] :: LH_C('_lh_break_LH_C_0⁰, '_lh_break_LH_C_1⁰) ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹ <: [NoCons] ::: false
//│ words₀₀₃₂ :: 'words₀₀₃₂ <: ['_lh_words_LH_P2_1⁰ => '51_callres | '_lh_words_LH_P2_1¹ => '66_callres | '_lh_words_LH_P2_1² => '84_callres | '_lh_words_LH_P2_1¹⁹ => '964_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹ <: ['_lh_words_arg1²] ::: false
//│ words₀₀₃₂(_lh_words_LH_P2_1) :: '66_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹, '66_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy¹ => LH_C('_lh_words_LH_P2_0¹, '66_callres) ::: false
//│ let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy¹ => LH_C('_lh_words_LH_P2_0¹, '66_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy¹ => LH_C('_lh_words_LH_P2_0¹, '66_callres) ::: false
//│ break1₀₀₂₁ :: 'break1₀₀₂₁ <: ['_lh_break_arg1⁰ => '73_callres | '_lh_break1_arg1⁵ => '825_callres] ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1⁰ <: ['_lh_break_LH_C_0⁰ => '58_callres | '_lh_break1_arg1⁵] ::: false
//│ break1₀₀₂₁(_lh_break_arg1) :: '73_callres <: ['_lh_break_LH_C_1⁰ => '75_callres] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1⁰ <: ['_lh_dropWhile_LH_C_1³ | '_lh_break1_arg2⁵] ::: false
//│ break1₀₀₂₁(_lh_break_arg1, _lh_break_LH_C_1) :: '75_callres <: ['_lh_matchIdent¹] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹ <: [Destruct(LH_P2('_lh_break_LH_P2_0⁰, '_lh_break_LH_P2_1⁰), _)] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁰ <: [NoCons | 'x⁵ | '_lh_dropWhile_LH_C_0³] ::: false
//│ _lh_break_LH_P2_0 :: '_lh_break_LH_P2_0⁰ <: [NoCons] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0] :: LH_C('_lh_break_LH_C_0⁰, '_lh_break_LH_P2_0⁰) ::: false
//│ _lh_break_LH_P2_1 :: '_lh_break_LH_P2_1⁰ <: ['_lh_words_LH_P2_1²] ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0² <: [NoCons] ::: false
//│ words₀₀₃₂ :: 'words₀₀₃₂ <: ['_lh_words_LH_P2_1⁰ => '51_callres | '_lh_words_LH_P2_1¹ => '66_callres | '_lh_words_LH_P2_1² => '84_callres | '_lh_words_LH_P2_1¹⁹ => '964_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1² <: ['_lh_words_arg1²] ::: false
//│ words₀₀₃₂(_lh_words_LH_P2_1) :: '84_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0², '84_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy² => LH_C('_lh_words_LH_P2_0², '84_callres) ::: false
//│ let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy² => LH_C('_lh_words_LH_P2_0², '84_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy² => LH_C('_lh_words_LH_P2_0², '84_callres) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) | _  => error} :: '90_matchres <: ['92_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₂₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) | _  => error} :: '90_matchres <: ['92_ifres] ::: false
//│ if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) | _  => error} :: '92_ifres <: ['94_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) | _  => error} | _  => error} :: '94_matchres <: ['349_callres] ::: false
//│ (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) | _  => error} | _  => error}) :: '_lh_break_arg2⁰ => '94_matchres ::: false
//│ (fun _lh_break_arg1 -> (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) | _  => error} | _  => error})) :: '_lh_break_arg1⁰ => '_lh_break_arg2⁰ => '94_matchres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2⁰ <: ['_lh_dropWhile_arg1⁰ => '99_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1⁰ <: ['_lh_dropWhile_arg1⁵] ::: true
//│ _lh_dropWhile_arg2(_lh_dropWhile_arg1) :: '99_callres <: ['489_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> _lh_dropWhile_arg2(_lh_dropWhile_arg1)) :: '_lh_dropWhile_arg2⁰ => '99_callres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> _lh_dropWhile_arg2(_lh_dropWhile_arg1))) :: '_lh_dropWhile_arg1⁰ => '_lh_dropWhile_arg2⁰ => '99_callres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2¹ <: [Destruct(LH_N, LH_C('_lh_dropWhile_LH_C_0⁰, '_lh_dropWhile_LH_C_1⁰), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1¹ <: ['_lh_dropWhile_LH_C_0⁰ => '106_callres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁰ <: ['x¹⁸ | '_lh_break_LH_C_0²] ::: false
//│ _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) :: '106_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀₁₂ :: 'dropWhile₀₀₁₂ <: ['_lh_dropWhile_arg1¹ => '109_callres | 'x¹⁸ => '900_callres => '902_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1¹ <: ['_lh_dropWhile_LH_C_0⁰ => '106_callres] ::: false
//│ dropWhile₀₀₁₂(_lh_dropWhile_arg1) :: '109_callres <: ['_lh_dropWhile_LH_C_1⁰ => '111_callres] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁰ <: ['_lh_dropWhile_arg2¹ | '_lh_break_LH_C_1²] ::: false
//│ dropWhile₀₀₁₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) :: '111_callres <: ['115_ifres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁰ <: ['x¹⁸ | '_lh_break_LH_C_0²] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁰ <: ['_lh_dropWhile_arg2¹ | '_lh_break_LH_C_1²] ::: false
//│ [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: LH_C('_lh_dropWhile_LH_C_0⁰, '_lh_dropWhile_LH_C_1⁰) ::: false
//│ if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: '115_ifres <: ['117_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error} :: '117_matchres <: ['111_callres | '904_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error}) :: '_lh_dropWhile_arg2¹ => '117_matchres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error})) :: '_lh_dropWhile_arg1¹ => '_lh_dropWhile_arg2¹ => '117_matchres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2² <: [Destruct(LH_N, LH_C('_lh_dropWhile_LH_C_0¹, '_lh_dropWhile_LH_C_1¹), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1² <: ['_lh_dropWhile_LH_C_0¹ => '124_callres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0¹ <: ['x¹⁴ | '_lh_break_LH_C_0⁵] ::: false
//│ _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) :: '124_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀₁₃ :: 'dropWhile₀₀₁₃ <: ['_lh_dropWhile_arg1² => '127_callres | 'x¹⁴ => '619_callres => '621_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1² <: ['_lh_dropWhile_LH_C_0¹ => '124_callres] ::: false
//│ dropWhile₀₀₁₃(_lh_dropWhile_arg1) :: '127_callres <: ['_lh_dropWhile_LH_C_1¹ => '129_callres] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1¹ <: ['_lh_dropWhile_arg2² | '_lh_break_LH_C_1⁵] ::: false
//│ dropWhile₀₀₁₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) :: '129_callres <: ['133_ifres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0¹ <: ['x¹⁴ | '_lh_break_LH_C_0⁵] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1¹ <: ['_lh_dropWhile_arg2² | '_lh_break_LH_C_1⁵] ::: false
//│ [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: LH_C('_lh_dropWhile_LH_C_0¹, '_lh_dropWhile_LH_C_1¹) ::: false
//│ if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: '133_ifres <: ['135_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error} :: '135_matchres <: ['129_callres | '623_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error}) :: '_lh_dropWhile_arg2² => '135_matchres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error})) :: '_lh_dropWhile_arg1² => '_lh_dropWhile_arg2² => '135_matchres ::: false
//│ dropWhile₀₀₁₁ :: 'dropWhile₀₀₁₁ <: ['x⁰ => '143_callres => '145_callres | '_lh_dropWhile_arg1¹⁴ => '1002_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x⁰ <: [NoCons] ::: false
//│ polyEq(x) :: '141_callres <: [Char => '143_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '143_callres <: ['999_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x⁰ => '143_callres ::: false
//│ dropWhile₀₀₁₁((fun x -> polyEq(x, ' '))) :: '145_callres <: ['_lh_words_arg1⁰ => '147_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1⁰ <: ['_lh_dropWhile_arg2⁹] ::: false
//│ dropWhile₀₀₁₁((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '147_callres <: ['_lh_matchIdent²] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent² <: ['_lh_break_arg2⁵ | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₁₀ :: 'break₀₀₁₀ <: ['x¹ => '155_callres => '157_callres | 'x¹⁵ => '631_callres => '633_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹ <: [NoCons] ::: false
//│ polyEq(x) :: '153_callres <: [Char => '155_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '155_callres <: ['20_callres | '856_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x¹ => '155_callres ::: false
//│ break₀₀₁₀((fun x -> polyEq(x, ' '))) :: '157_callres <: ['_lh_matchIdent² => '159_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent² <: ['_lh_break_arg2⁵ | Destruct(LH_N, _)] ::: false
//│ break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '159_callres <: ['_lh_matchIdent³] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent³ <: [Int => '162_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '162_callres <: ['164_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '162_callres <: ['164_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '164_matchres <: ['864_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₁₁((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '164_matchres <: ['864_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₁₁((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1⁰ => '164_matchres ::: false
//│ _lh_break1_arg2 :: '_lh_break1_arg2¹ <: [Destruct(LH_N, LH_C('_lh_break1_LH_C_0¹, '_lh_break1_LH_C_1¹), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_P2 [LH_N] [LH_N]] :: LH_P2(LH_N, LH_N) ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1¹ <: ['_lh_break1_LH_C_0¹ => '173_callres] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0¹ <: [NoCons | 'x⁹ | 'x¹¹ | '_lh_dropWhile_LH_C_0⁶] ::: false
//│ _lh_break1_arg1(_lh_break1_LH_C_0) :: '173_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0¹ <: [NoCons | 'x⁹ | 'x¹¹ | '_lh_dropWhile_LH_C_0⁶] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1¹ <: ['_lh_dropWhile_LH_C_1⁶ | '_lh_break1_arg2¹] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1] :: LH_C('_lh_break1_LH_C_0¹, '_lh_break1_LH_C_1¹) ::: false
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] :: LH_P2(LH_N, LH_C('_lh_break1_LH_C_0¹, '_lh_break1_LH_C_1¹)) ::: false
//│ break1₀₀₂₀ :: 'break1₀₀₂₀ <: ['_lh_break1_arg1¹ => '181_callres | '_lh_break_arg1⁶ => '971_callres] ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1¹ <: ['_lh_break1_LH_C_0¹ => '173_callres] ::: false
//│ break1₀₀₂₀(_lh_break1_arg1) :: '181_callres <: ['_lh_break1_LH_C_1¹ => '183_callres] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1¹ <: ['_lh_dropWhile_LH_C_1⁶ | '_lh_break1_arg2¹] ::: false
//│ break1₀₀₂₀(_lh_break1_arg1, _lh_break1_LH_C_1) :: '183_callres <: ['_lh_matchIdent⁴] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent⁴ <: [Destruct(LH_P2('_lh_break1_LH_P2_0¹, '_lh_break1_LH_P2_1¹), _)] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0¹ <: [NoCons | 'x⁹ | 'x¹¹ | '_lh_dropWhile_LH_C_0⁶] ::: false
//│ _lh_break1_LH_P2_0 :: '_lh_break1_LH_P2_0¹ <: [NoCons] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] :: LH_C('_lh_break1_LH_C_0¹, '_lh_break1_LH_P2_0¹) ::: false
//│ _lh_break1_LH_P2_1 :: '_lh_break1_LH_P2_1¹ <: ['_lh_break_LH_P2_1⁶] ::: false
//│ [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] :: LH_P2(LH_C('_lh_break1_LH_C_0¹, '_lh_break1_LH_P2_0¹), '_lh_break1_LH_P2_1¹) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '191_matchres <: ['193_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₂₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '191_matchres <: ['193_ifres] ::: false
//│ if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '193_ifres <: ['195_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error} :: '195_matchres <: ['183_callres | '973_callres] ::: false
//│ (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error}) :: '_lh_break1_arg2¹ => '195_matchres ::: false
//│ (fun _lh_break1_arg1 -> (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error})) :: '_lh_break1_arg1¹ => '_lh_break1_arg2¹ => '195_matchres ::: false
//│ _lh_break_arg2 :: '_lh_break_arg2¹ <: [Destruct(LH_N, LH_C('_lh_break_LH_C_0¹, '_lh_break_LH_C_1¹), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0³ <: [NoCons] ::: false
//│ words₀₀₃₃ :: 'words₀₀₃₃ <: ['_lh_words_LH_P2_1³ => '204_callres | '_lh_words_LH_P2_1⁴ => '219_callres | '_lh_words_LH_P2_1⁵ => '237_callres | '_lh_words_LH_P2_1²⁰ => '982_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1³ <: ['_lh_words_arg1¹] ::: false
//│ words₀₀₃₃(_lh_words_LH_P2_1) :: '204_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0³, '204_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy³ => LH_C('_lh_words_LH_P2_0³, '204_callres) ::: false
//│ let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy³ => LH_C('_lh_words_LH_P2_0³, '204_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy³ => LH_C('_lh_words_LH_P2_0³, '204_callres) ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1¹ <: ['_lh_break_LH_C_0¹ => '211_callres | '_lh_break1_arg1³] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0¹ <: [NoCons | 'x³ | '_lh_dropWhile_LH_C_0⁶] ::: false
//│ _lh_break_arg1(_lh_break_LH_C_0) :: '211_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0¹ <: [NoCons | 'x³ | '_lh_dropWhile_LH_C_0⁶] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1¹ <: ['_lh_dropWhile_LH_C_1⁶ | '_lh_break1_arg2³] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1] :: LH_C('_lh_break_LH_C_0¹, '_lh_break_LH_C_1¹) ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0⁴ <: [NoCons] ::: false
//│ words₀₀₃₃ :: 'words₀₀₃₃ <: ['_lh_words_LH_P2_1³ => '204_callres | '_lh_words_LH_P2_1⁴ => '219_callres | '_lh_words_LH_P2_1⁵ => '237_callres | '_lh_words_LH_P2_1²⁰ => '982_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1⁴ <: ['_lh_words_arg1¹] ::: false
//│ words₀₀₃₃(_lh_words_LH_P2_1) :: '219_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0⁴, '219_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁴ => LH_C('_lh_words_LH_P2_0⁴, '219_callres) ::: false
//│ let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁴ => LH_C('_lh_words_LH_P2_0⁴, '219_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁴ => LH_C('_lh_words_LH_P2_0⁴, '219_callres) ::: false
//│ break1₀₀₂₂ :: 'break1₀₀₂₂ <: ['_lh_break_arg1¹ => '226_callres | '_lh_break1_arg1³ => '405_callres] ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1¹ <: ['_lh_break_LH_C_0¹ => '211_callres | '_lh_break1_arg1³] ::: false
//│ break1₀₀₂₂(_lh_break_arg1) :: '226_callres <: ['_lh_break_LH_C_1¹ => '228_callres] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1¹ <: ['_lh_dropWhile_LH_C_1⁶ | '_lh_break1_arg2³] ::: false
//│ break1₀₀₂₂(_lh_break_arg1, _lh_break_LH_C_1) :: '228_callres <: ['_lh_matchIdent⁵] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent⁵ <: [Destruct(LH_P2('_lh_break_LH_P2_0¹, '_lh_break_LH_P2_1¹), _)] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0¹ <: [NoCons | 'x³ | '_lh_dropWhile_LH_C_0⁶] ::: false
//│ _lh_break_LH_P2_0 :: '_lh_break_LH_P2_0¹ <: [NoCons] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0] :: LH_C('_lh_break_LH_C_0¹, '_lh_break_LH_P2_0¹) ::: false
//│ _lh_break_LH_P2_1 :: '_lh_break_LH_P2_1¹ <: ['_lh_words_LH_P2_1⁵] ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0⁵ <: [NoCons] ::: false
//│ words₀₀₃₃ :: 'words₀₀₃₃ <: ['_lh_words_LH_P2_1³ => '204_callres | '_lh_words_LH_P2_1⁴ => '219_callres | '_lh_words_LH_P2_1⁵ => '237_callres | '_lh_words_LH_P2_1²⁰ => '982_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1⁵ <: ['_lh_words_arg1¹] ::: false
//│ words₀₀₃₃(_lh_words_LH_P2_1) :: '237_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0⁵, '237_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁵ => LH_C('_lh_words_LH_P2_0⁵, '237_callres) ::: false
//│ let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁵ => LH_C('_lh_words_LH_P2_0⁵, '237_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁵ => LH_C('_lh_words_LH_P2_0⁵, '237_callres) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} :: '243_matchres <: ['245_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₂₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} :: '243_matchres <: ['245_ifres] ::: false
//│ if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} :: '245_ifres <: ['247_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error} :: '247_matchres <: ['271_callres] ::: false
//│ (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error}) :: '_lh_break_arg2¹ => '247_matchres ::: false
//│ (fun _lh_break_arg1 -> (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error})) :: '_lh_break_arg1¹ => '_lh_break_arg2¹ => '247_matchres ::: false
//│ dropWhile₀₀₂₂ :: 'dropWhile₀₀₂₂ <: ['x² => '255_callres => '257_callres | '_lh_dropWhile_arg1¹² => '931_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x² <: [NoCons] ::: false
//│ polyEq(x) :: '253_callres <: [Char => '255_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '255_callres <: ['928_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x² => '255_callres ::: false
//│ dropWhile₀₀₂₂((fun x -> polyEq(x, ' '))) :: '257_callres <: ['_lh_words_arg1¹ => '259_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1¹ <: ['_lh_dropWhile_arg2⁸] ::: false
//│ dropWhile₀₀₂₂((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '259_callres <: ['_lh_matchIdent⁶] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent⁶ <: ['_lh_break_arg2¹ | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₂₂ :: 'break₀₀₂₂ <: ['x³ => '267_callres => '269_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x³ <: [NoCons] ::: false
//│ polyEq(x) :: '265_callres <: [Char => '267_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '267_callres <: ['211_callres | '397_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x³ => '267_callres ::: false
//│ break₀₀₂₂((fun x -> polyEq(x, ' '))) :: '269_callres <: ['_lh_matchIdent⁶ => '271_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent⁶ <: ['_lh_break_arg2¹ | Destruct(LH_N, _)] ::: false
//│ break₀₀₂₂((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '271_callres <: ['_lh_matchIdent⁷] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent⁷ <: [Int => '274_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '274_callres <: ['276_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₂₂((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '274_callres <: ['276_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₂((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '276_matchres <: ['204_callres | '219_callres | '237_callres | '982_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₂₂((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₂((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '276_matchres <: ['204_callres | '219_callres | '237_callres | '982_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₂₂((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₂((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1¹ => '276_matchres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2³ <: [Destruct(LH_N, LH_C('_lh_dropWhile_LH_C_0², '_lh_dropWhile_LH_C_1²), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1³ <: ['_lh_dropWhile_LH_C_0² => '283_callres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0² <: ['x⁶ | '_lh_break_LH_C_0³] ::: false
//│ _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) :: '283_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀₃₀ :: 'dropWhile₀₀₃₀ <: ['_lh_dropWhile_arg1³ => '286_callres | 'x⁶ => '367_callres => '369_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1³ <: ['_lh_dropWhile_LH_C_0² => '283_callres] ::: false
//│ dropWhile₀₀₃₀(_lh_dropWhile_arg1) :: '286_callres <: ['_lh_dropWhile_LH_C_1² => '288_callres] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1² <: ['_lh_dropWhile_arg2³ | '_lh_break_LH_C_1³] ::: false
//│ dropWhile₀₀₃₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) :: '288_callres <: ['292_ifres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0² <: ['x⁶ | '_lh_break_LH_C_0³] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1² <: ['_lh_dropWhile_arg2³ | '_lh_break_LH_C_1³] ::: false
//│ [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: LH_C('_lh_dropWhile_LH_C_0², '_lh_dropWhile_LH_C_1²) ::: false
//│ if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₃₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: '292_ifres <: ['294_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₃₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error} :: '294_matchres <: ['288_callres | '371_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₃₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error}) :: '_lh_dropWhile_arg2³ => '294_matchres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₃₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error})) :: '_lh_dropWhile_arg1³ => '_lh_dropWhile_arg2³ => '294_matchres ::: false
//│ _lh_break1_arg2 :: '_lh_break1_arg2² <: [Destruct(LH_N, LH_C('_lh_break1_LH_C_0², '_lh_break1_LH_C_1²), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_P2 [LH_N] [LH_N]] :: LH_P2(LH_N, LH_N) ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1² <: ['_lh_break1_LH_C_0² => '303_callres] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0² <: [NoCons | 'x⁷ | 'x¹³ | '_lh_dropWhile_LH_C_0⁴] ::: false
//│ _lh_break1_arg1(_lh_break1_LH_C_0) :: '303_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0² <: [NoCons | 'x⁷ | 'x¹³ | '_lh_dropWhile_LH_C_0⁴] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1² <: ['_lh_dropWhile_LH_C_1⁴ | '_lh_break1_arg2²] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1] :: LH_C('_lh_break1_LH_C_0², '_lh_break1_LH_C_1²) ::: false
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] :: LH_P2(LH_N, LH_C('_lh_break1_LH_C_0², '_lh_break1_LH_C_1²)) ::: false
//│ break1₀₀₀₀ :: 'break1₀₀₀₀ <: ['_lh_break1_arg1² => '311_callres | '_lh_break_arg1³ => '590_callres] ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1² <: ['_lh_break1_LH_C_0² => '303_callres] ::: false
//│ break1₀₀₀₀(_lh_break1_arg1) :: '311_callres <: ['_lh_break1_LH_C_1² => '313_callres] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1² <: ['_lh_dropWhile_LH_C_1⁴ | '_lh_break1_arg2²] ::: false
//│ break1₀₀₀₀(_lh_break1_arg1, _lh_break1_LH_C_1) :: '313_callres <: ['_lh_matchIdent⁸] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent⁸ <: [Destruct(LH_P2('_lh_break1_LH_P2_0², '_lh_break1_LH_P2_1²), _)] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0² <: [NoCons | 'x⁷ | 'x¹³ | '_lh_dropWhile_LH_C_0⁴] ::: false
//│ _lh_break1_LH_P2_0 :: '_lh_break1_LH_P2_0² <: [NoCons] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] :: LH_C('_lh_break1_LH_C_0², '_lh_break1_LH_P2_0²) ::: false
//│ _lh_break1_LH_P2_1 :: '_lh_break1_LH_P2_1² <: ['_lh_break_LH_P2_1³] ::: false
//│ [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] :: LH_P2(LH_C('_lh_break1_LH_C_0², '_lh_break1_LH_P2_0²), '_lh_break1_LH_P2_1²) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '321_matchres <: ['323_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₀₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '321_matchres <: ['323_ifres] ::: false
//│ if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₀₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '323_ifres <: ['325_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₀₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error} :: '325_matchres <: ['313_callres | '592_callres] ::: false
//│ (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₀₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error}) :: '_lh_break1_arg2² => '325_matchres ::: false
//│ (fun _lh_break1_arg1 -> (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₀₀(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error})) :: '_lh_break1_arg1² => '_lh_break1_arg2² => '325_matchres ::: false
//│ dropWhile₀₀₂₁ :: 'dropWhile₀₀₂₁ <: ['x⁴ => '333_callres => '335_callres | '_lh_dropWhile_arg1⁶ => '650_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x⁴ <: [NoCons] ::: false
//│ polyEq(x) :: '331_callres <: [Char => '333_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '333_callres <: ['647_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x⁴ => '333_callres ::: false
//│ dropWhile₀₀₂₁((fun x -> polyEq(x, ' '))) :: '335_callres <: ['_lh_words_arg1² => '337_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1² <: ['_lh_dropWhile_arg2⁵] ::: false
//│ dropWhile₀₀₂₁((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '337_callres <: ['_lh_matchIdent⁹] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent⁹ <: ['_lh_break_arg2⁰ | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₂₁ :: 'break₀₀₂₁ <: ['x⁵ => '345_callres => '347_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x⁵ <: [NoCons] ::: false
//│ polyEq(x) :: '343_callres <: [Char => '345_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '345_callres <: ['58_callres | '817_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x⁵ => '345_callres ::: false
//│ break₀₀₂₁((fun x -> polyEq(x, ' '))) :: '347_callres <: ['_lh_matchIdent⁹ => '349_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent⁹ <: ['_lh_break_arg2⁰ | Destruct(LH_N, _)] ::: false
//│ break₀₀₂₁((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '349_callres <: ['_lh_matchIdent¹⁰] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁰ <: [Int => '352_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '352_callres <: ['354_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₂₁((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '352_callres <: ['354_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₁((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '354_matchres <: ['51_callres | '66_callres | '84_callres | '964_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₂₁((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₁((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '354_matchres <: ['51_callres | '66_callres | '84_callres | '964_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₂₁((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₁((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1² => '354_matchres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2⁴ <: ['_lh_dropWhile_arg1⁴ => '359_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1⁴ <: ['_lh_dropWhile_arg1¹³] ::: true
//│ _lh_dropWhile_arg2(_lh_dropWhile_arg1) :: '359_callres <: ['460_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> _lh_dropWhile_arg2(_lh_dropWhile_arg1)) :: '_lh_dropWhile_arg2⁴ => '359_callres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> _lh_dropWhile_arg2(_lh_dropWhile_arg1))) :: '_lh_dropWhile_arg1⁴ => '_lh_dropWhile_arg2⁴ => '359_callres ::: false
//│ dropWhile₀₀₃₀ :: 'dropWhile₀₀₃₀ <: ['_lh_dropWhile_arg1³ => '286_callres | 'x⁶ => '367_callres => '369_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x⁶ <: [NoCons] ::: false
//│ polyEq(x) :: '365_callres <: [Char => '367_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '367_callres <: ['283_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x⁶ => '367_callres ::: false
//│ dropWhile₀₀₃₀((fun x -> polyEq(x, ' '))) :: '369_callres <: ['_lh_words_arg1³ => '371_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1³ <: ['_lh_dropWhile_arg2³] ::: false
//│ dropWhile₀₀₃₀((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '371_callres <: ['_lh_matchIdent¹¹] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹¹ <: ['_lh_break_arg2³ | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₀₀ :: 'break₀₀₀₀ <: ['x⁷ => '379_callres => '381_callres | 'x¹³ => '497_callres => '499_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x⁷ <: [NoCons] ::: false
//│ polyEq(x) :: '377_callres <: [Char => '379_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '379_callres <: ['303_callres | '575_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x⁷ => '379_callres ::: false
//│ break₀₀₀₀((fun x -> polyEq(x, ' '))) :: '381_callres <: ['_lh_matchIdent¹¹ => '383_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹¹ <: ['_lh_break_arg2³ | Destruct(LH_N, _)] ::: false
//│ break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '383_callres <: ['_lh_matchIdent¹²] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹² <: [Int => '386_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '386_callres <: ['388_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '386_callres <: ['388_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '388_matchres <: ['13_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₃₀((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '388_matchres <: ['13_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₃₀((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1³ => '388_matchres ::: false
//│ _lh_break1_arg2 :: '_lh_break1_arg2³ <: [Destruct(LH_N, LH_C('_lh_break1_LH_C_0³, '_lh_break1_LH_C_1³), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_P2 [LH_N] [LH_N]] :: LH_P2(LH_N, LH_N) ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1³ <: ['_lh_break1_LH_C_0³ => '397_callres] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0³ <: [NoCons | '_lh_dropWhile_LH_C_0⁶ | 'x³] ::: false
//│ _lh_break1_arg1(_lh_break1_LH_C_0) :: '397_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0³ <: [NoCons | '_lh_dropWhile_LH_C_0⁶ | 'x³] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1³ <: ['_lh_dropWhile_LH_C_1⁶ | '_lh_break1_arg2³] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1] :: LH_C('_lh_break1_LH_C_0³, '_lh_break1_LH_C_1³) ::: false
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] :: LH_P2(LH_N, LH_C('_lh_break1_LH_C_0³, '_lh_break1_LH_C_1³)) ::: false
//│ break1₀₀₂₂ :: 'break1₀₀₂₂ <: ['_lh_break_arg1¹ => '226_callres | '_lh_break1_arg1³ => '405_callres] ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1³ <: ['_lh_break1_LH_C_0³ => '397_callres] ::: false
//│ break1₀₀₂₂(_lh_break1_arg1) :: '405_callres <: ['_lh_break1_LH_C_1³ => '407_callres] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1³ <: ['_lh_dropWhile_LH_C_1⁶ | '_lh_break1_arg2³] ::: false
//│ break1₀₀₂₂(_lh_break1_arg1, _lh_break1_LH_C_1) :: '407_callres <: ['_lh_matchIdent¹³] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹³ <: [Destruct(LH_P2('_lh_break1_LH_P2_0³, '_lh_break1_LH_P2_1³), _)] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0³ <: [NoCons | '_lh_dropWhile_LH_C_0⁶ | 'x³] ::: false
//│ _lh_break1_LH_P2_0 :: '_lh_break1_LH_P2_0³ <: [NoCons] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] :: LH_C('_lh_break1_LH_C_0³, '_lh_break1_LH_P2_0³) ::: false
//│ _lh_break1_LH_P2_1 :: '_lh_break1_LH_P2_1³ <: ['_lh_break_LH_P2_1¹] ::: false
//│ [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] :: LH_P2(LH_C('_lh_break1_LH_C_0³, '_lh_break1_LH_P2_0³), '_lh_break1_LH_P2_1³) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '415_matchres <: ['417_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₂₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '415_matchres <: ['417_ifres] ::: false
//│ if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '417_ifres <: ['419_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error} :: '419_matchres <: ['228_callres | '407_callres] ::: false
//│ (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error}) :: '_lh_break1_arg2³ => '419_matchres ::: false
//│ (fun _lh_break1_arg1 -> (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error})) :: '_lh_break1_arg1³ => '_lh_break1_arg2³ => '419_matchres ::: false
//│ dropWhile₀₀₂₃ :: 'dropWhile₀₀₂₃ <: ['x⁸ => '427_callres => '429_callres | '_lh_dropWhile_arg1⁷ => '668_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x⁸ <: [NoCons] ::: false
//│ polyEq(x) :: '425_callres <: [Char => '427_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '427_callres <: ['665_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x⁸ => '427_callres ::: false
//│ dropWhile₀₀₂₃((fun x -> polyEq(x, ' '))) :: '429_callres <: ['_lh_words_arg1⁴ => '431_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1⁴ <: ['_lh_dropWhile_arg2⁶] ::: false
//│ dropWhile₀₀₂₃((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '431_callres <: ['_lh_matchIdent¹⁴] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁴ <: ['_lh_break_arg2⁶ | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₂₀ :: 'break₀₀₂₀ <: ['x⁹ => '439_callres => '441_callres | 'x¹¹ => '468_callres => '470_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x⁹ <: [NoCons] ::: false
//│ polyEq(x) :: '437_callres <: [Char => '439_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '439_callres <: ['173_callres | '956_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x⁹ => '439_callres ::: false
//│ break₀₀₂₀((fun x -> polyEq(x, ' '))) :: '441_callres <: ['_lh_matchIdent¹⁴ => '443_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁴ <: ['_lh_break_arg2⁶ | Destruct(LH_N, _)] ::: false
//│ break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '443_callres <: ['_lh_matchIdent¹⁵] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁵ <: [Int => '446_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '446_callres <: ['448_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '446_callres <: ['448_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '448_matchres <: ['601_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₂₃((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '448_matchres <: ['601_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₂₃((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1⁴ => '448_matchres ::: false
//│ dropWhile₀₀₂₀ :: 'dropWhile₀₀₂₀ <: ['x¹⁰ => '456_callres => '458_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹⁰ <: [NoCons] ::: false
//│ polyEq(x) :: '454_callres <: [Char => '456_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '456_callres <: [] ::: true
//│ (fun x -> polyEq(x, ' ')) :: 'x¹⁰ => '456_callres ::: true
//│ dropWhile₀₀₂₀((fun x -> polyEq(x, ' '))) :: '458_callres <: ['_lh_words_arg1⁵ => '460_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1⁵ <: ['_lh_dropWhile_arg2⁴] ::: false
//│ dropWhile₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '460_callres <: ['_lh_matchIdent¹⁶] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁶ <: ['_lh_break_arg2⁶ | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₂₀ :: 'break₀₀₂₀ <: ['x⁹ => '439_callres => '441_callres | 'x¹¹ => '468_callres => '470_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹¹ <: [NoCons] ::: false
//│ polyEq(x) :: '466_callres <: [Char => '468_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '468_callres <: ['173_callres | '956_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x¹¹ => '468_callres ::: false
//│ break₀₀₂₀((fun x -> polyEq(x, ' '))) :: '470_callres <: ['_lh_matchIdent¹⁶ => '472_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁶ <: ['_lh_break_arg2⁶ | Destruct(LH_N, _)] ::: false
//│ break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '472_callres <: ['_lh_matchIdent¹⁷] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁷ <: [Int => '475_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '475_callres <: ['477_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '475_callres <: ['477_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '477_matchres <: ['949_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '477_matchres <: ['949_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₂₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1⁵ => '477_matchres ::: false
//│ dropWhile₀₀₀₀ :: 'dropWhile₀₀₀₀ <: ['x¹² => '485_callres => '487_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹² <: [NoCons] ::: false
//│ polyEq(x) :: '483_callres <: [Char => '485_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '485_callres <: [] ::: true
//│ (fun x -> polyEq(x, ' ')) :: 'x¹² => '485_callres ::: true
//│ dropWhile₀₀₀₀((fun x -> polyEq(x, ' '))) :: '487_callres <: ['_lh_words_arg1⁶ => '489_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1⁶ <: ['_lh_dropWhile_arg2⁰] ::: false
//│ dropWhile₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '489_callres <: ['_lh_matchIdent¹⁸] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁸ <: ['_lh_break_arg2³ | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₀₀ :: 'break₀₀₀₀ <: ['x⁷ => '379_callres => '381_callres | 'x¹³ => '497_callres => '499_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹³ <: [NoCons] ::: false
//│ polyEq(x) :: '495_callres <: [Char => '497_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '497_callres <: ['303_callres | '575_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x¹³ => '497_callres ::: false
//│ break₀₀₀₀((fun x -> polyEq(x, ' '))) :: '499_callres <: ['_lh_matchIdent¹⁸ => '501_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁸ <: ['_lh_break_arg2³ | Destruct(LH_N, _)] ::: false
//│ break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '501_callres <: ['_lh_matchIdent¹⁹] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent¹⁹ <: [Int => '504_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '504_callres <: ['506_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '504_callres <: ['506_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '506_matchres <: ['568_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '506_matchres <: ['568_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₀₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1⁶ => '506_matchres ::: false
//│ _lh_break_arg2 :: '_lh_break_arg2² <: [Destruct(LH_N, LH_C('_lh_break_LH_C_0², '_lh_break_LH_C_1²), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0⁶ <: [NoCons] ::: false
//│ words₀₀₂₃ :: 'words₀₀₂₃ <: ['_lh_words_LH_P2_1⁶ => '515_callres | '_lh_words_LH_P2_1⁷ => '530_callres | '_lh_words_LH_P2_1⁸ => '548_callres | '_lh_words_LH_P2_1¹⁷ => '882_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1⁶ <: ['_lh_words_arg1⁹] ::: false
//│ words₀₀₂₃(_lh_words_LH_P2_1) :: '515_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0⁶, '515_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁶ => LH_C('_lh_words_LH_P2_0⁶, '515_callres) ::: false
//│ let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁶ => LH_C('_lh_words_LH_P2_0⁶, '515_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁶ => LH_C('_lh_words_LH_P2_0⁶, '515_callres) ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1² <: ['_lh_break_LH_C_0² => '522_callres | '_lh_break1_arg1⁴] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0² <: [NoCons | '_lh_dropWhile_LH_C_0⁰ | 'x¹⁹] ::: false
//│ _lh_break_arg1(_lh_break_LH_C_0) :: '522_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0² <: [NoCons | '_lh_dropWhile_LH_C_0⁰ | 'x¹⁹] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1² <: ['_lh_dropWhile_LH_C_1⁰ | '_lh_break1_arg2⁴] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1] :: LH_C('_lh_break_LH_C_0², '_lh_break_LH_C_1²) ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0⁷ <: [NoCons] ::: false
//│ words₀₀₂₃ :: 'words₀₀₂₃ <: ['_lh_words_LH_P2_1⁶ => '515_callres | '_lh_words_LH_P2_1⁷ => '530_callres | '_lh_words_LH_P2_1⁸ => '548_callres | '_lh_words_LH_P2_1¹⁷ => '882_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1⁷ <: ['_lh_words_arg1⁹] ::: false
//│ words₀₀₂₃(_lh_words_LH_P2_1) :: '530_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0⁷, '530_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁷ => LH_C('_lh_words_LH_P2_0⁷, '530_callres) ::: false
//│ let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁷ => LH_C('_lh_words_LH_P2_0⁷, '530_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁷ => LH_C('_lh_words_LH_P2_0⁷, '530_callres) ::: false
//│ break1₀₀₁₂ :: 'break1₀₀₁₂ <: ['_lh_break_arg1² => '537_callres | '_lh_break1_arg1⁴ => '760_callres] ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1² <: ['_lh_break_LH_C_0² => '522_callres | '_lh_break1_arg1⁴] ::: false
//│ break1₀₀₁₂(_lh_break_arg1) :: '537_callres <: ['_lh_break_LH_C_1² => '539_callres] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1² <: ['_lh_dropWhile_LH_C_1⁰ | '_lh_break1_arg2⁴] ::: false
//│ break1₀₀₁₂(_lh_break_arg1, _lh_break_LH_C_1) :: '539_callres <: ['_lh_matchIdent²⁰] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²⁰ <: [Destruct(LH_P2('_lh_break_LH_P2_0², '_lh_break_LH_P2_1²), _)] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0² <: [NoCons | '_lh_dropWhile_LH_C_0⁰ | 'x¹⁹] ::: false
//│ _lh_break_LH_P2_0 :: '_lh_break_LH_P2_0² <: [NoCons] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0] :: LH_C('_lh_break_LH_C_0², '_lh_break_LH_P2_0²) ::: false
//│ _lh_break_LH_P2_1 :: '_lh_break_LH_P2_1² <: ['_lh_words_LH_P2_1⁸] ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0⁸ <: [NoCons] ::: false
//│ words₀₀₂₃ :: 'words₀₀₂₃ <: ['_lh_words_LH_P2_1⁶ => '515_callres | '_lh_words_LH_P2_1⁷ => '530_callres | '_lh_words_LH_P2_1⁸ => '548_callres | '_lh_words_LH_P2_1¹⁷ => '882_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1⁸ <: ['_lh_words_arg1⁹] ::: false
//│ words₀₀₂₃(_lh_words_LH_P2_1) :: '548_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0⁸, '548_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁸ => LH_C('_lh_words_LH_P2_0⁸, '548_callres) ::: false
//│ let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁸ => LH_C('_lh_words_LH_P2_0⁸, '548_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy⁸ => LH_C('_lh_words_LH_P2_0⁸, '548_callres) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} :: '554_matchres <: ['556_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₁₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} :: '554_matchres <: ['556_ifres] ::: false
//│ if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} :: '556_ifres <: ['558_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error} :: '558_matchres <: ['916_callres] ::: false
//│ (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error}) :: '_lh_break_arg2² => '558_matchres ::: false
//│ (fun _lh_break_arg1 -> (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_N]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₂(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error})) :: '_lh_break_arg1² => '_lh_break_arg2² => '558_matchres ::: false
//│ _lh_break_arg2 :: '_lh_break_arg2³ <: [Destruct(LH_N, LH_C('_lh_break_LH_C_0³, '_lh_break_LH_C_1³), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ (fun _lh_dropWhile_arg1 -> [LH_N]) :: '_lh_dropWhile_arg1⁵ => LH_N ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0⁹ <: [NoCons] ::: false
//│ words₀₀₁₀ :: 'words₀₀₁₀ <: ['_lh_words_LH_P2_1⁹ => '568_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1⁹ <: ['_lh_words_arg1⁶] ::: false
//│ words₀₀₁₀(_lh_words_LH_P2_1) :: '568_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₁₀(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0⁹, '568_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₁₀(_lh_words_LH_P2_1)]) :: '_lh_dummy⁹ => LH_C('_lh_words_LH_P2_0⁹, '568_callres) ::: false
//│ let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₁₀(_lh_words_LH_P2_1)]) :: '_lh_dummy⁹ => LH_C('_lh_words_LH_P2_0⁹, '568_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₁₀(_lh_words_LH_P2_1)]) :: '_lh_dummy⁹ => LH_C('_lh_words_LH_P2_0⁹, '568_callres) ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1³ <: ['_lh_break1_arg1² | '_lh_break_LH_C_0³ => '575_callres] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0³ <: [NoCons | '_lh_dropWhile_LH_C_0¹ | 'x⁷ | 'x¹³] ::: false
//│ _lh_break_arg1(_lh_break_LH_C_0) :: '575_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0³ <: [NoCons | '_lh_dropWhile_LH_C_0¹ | 'x⁷ | 'x¹³] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1³ <: ['_lh_dropWhile_LH_C_1¹ | '_lh_break1_arg2²] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1] :: LH_C('_lh_break_LH_C_0³, '_lh_break_LH_C_1³) ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹⁰ <: [NoCons] ::: false
//│ words₀₀₂₀ :: 'words₀₀₂₀ <: ['_lh_words_LH_P2_1¹⁰ => '583_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹⁰ <: ['_lh_words_arg1⁷] ::: false
//│ words₀₀₂₀(_lh_words_LH_P2_1) :: '583_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₀(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹⁰, '583_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₀(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁰ => LH_C('_lh_words_LH_P2_0¹⁰, '583_callres) ::: false
//│ let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₀(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁰ => LH_C('_lh_words_LH_P2_0¹⁰, '583_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₀(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁰ => LH_C('_lh_words_LH_P2_0¹⁰, '583_callres) ::: false
//│ break1₀₀₀₀ :: 'break1₀₀₀₀ <: ['_lh_break1_arg1² => '311_callres | '_lh_break_arg1³ => '590_callres] ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1³ <: ['_lh_break1_arg1² | '_lh_break_LH_C_0³ => '575_callres] ::: false
//│ break1₀₀₀₀(_lh_break_arg1) :: '590_callres <: ['_lh_break_LH_C_1³ => '592_callres] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1³ <: ['_lh_dropWhile_LH_C_1¹ | '_lh_break1_arg2²] ::: false
//│ break1₀₀₀₀(_lh_break_arg1, _lh_break_LH_C_1) :: '592_callres <: ['_lh_matchIdent²¹] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²¹ <: [Destruct(LH_P2('_lh_break_LH_P2_0³, '_lh_break_LH_P2_1³), _)] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0³ <: [NoCons | '_lh_dropWhile_LH_C_0¹ | 'x⁷ | 'x¹³] ::: false
//│ _lh_break_LH_P2_0 :: '_lh_break_LH_P2_0³ <: [NoCons] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0] :: LH_C('_lh_break_LH_C_0³, '_lh_break_LH_P2_0³) ::: false
//│ _lh_break_LH_P2_1 :: '_lh_break_LH_P2_1³ <: ['_lh_words_LH_P2_1¹¹] ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹¹ <: [NoCons] ::: false
//│ words₀₀₃₀ :: 'words₀₀₃₀ <: ['_lh_words_LH_P2_1¹¹ => '601_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹¹ <: ['_lh_words_arg1⁴] ::: false
//│ words₀₀₃₀(_lh_words_LH_P2_1) :: '601_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹¹, '601_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)]) :: '_lh_dummy¹¹ => LH_C('_lh_words_LH_P2_0¹¹, '601_callres) ::: false
//│ let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)]) :: '_lh_dummy¹¹ => LH_C('_lh_words_LH_P2_0¹¹, '601_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)]) :: '_lh_dummy¹¹ => LH_C('_lh_words_LH_P2_0¹¹, '601_callres) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)]) | _  => error} :: '607_matchres <: ['609_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₀₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)]) | _  => error} :: '607_matchres <: ['609_ifres] ::: false
//│ if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₀(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₀₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)]) | _  => error} :: '609_ifres <: ['611_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₁₀(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₀(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₀₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)]) | _  => error} | _  => error} :: '611_matchres <: ['383_callres | '501_callres] ::: false
//│ (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₁₀(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₀(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₀₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)]) | _  => error} | _  => error}) :: '_lh_break_arg2³ => '611_matchres ::: false
//│ (fun _lh_break_arg1 -> (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₁₀(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₀(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₀₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₀(_lh_words_LH_P2_1)]) | _  => error} | _  => error})) :: '_lh_break_arg1³ => '_lh_break_arg2³ => '611_matchres ::: false
//│ dropWhile₀₀₁₃ :: 'dropWhile₀₀₁₃ <: ['_lh_dropWhile_arg1² => '127_callres | 'x¹⁴ => '619_callres => '621_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹⁴ <: [NoCons] ::: false
//│ polyEq(x) :: '617_callres <: [Char => '619_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '619_callres <: ['124_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x¹⁴ => '619_callres ::: false
//│ dropWhile₀₀₁₃((fun x -> polyEq(x, ' '))) :: '621_callres <: ['_lh_words_arg1⁷ => '623_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1⁷ <: ['_lh_dropWhile_arg2²] ::: false
//│ dropWhile₀₀₁₃((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '623_callres <: ['_lh_matchIdent²²] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²² <: ['_lh_break_arg2⁵ | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₁₀ :: 'break₀₀₁₀ <: ['x¹ => '155_callres => '157_callres | 'x¹⁵ => '631_callres => '633_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹⁵ <: [NoCons] ::: false
//│ polyEq(x) :: '629_callres <: [Char => '631_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '631_callres <: ['20_callres | '856_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x¹⁵ => '631_callres ::: false
//│ break₀₀₁₀((fun x -> polyEq(x, ' '))) :: '633_callres <: ['_lh_matchIdent²² => '635_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²² <: ['_lh_break_arg2⁵ | Destruct(LH_N, _)] ::: false
//│ break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '635_callres <: ['_lh_matchIdent²³] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²³ <: [Int => '638_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '638_callres <: ['640_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '638_callres <: ['640_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '640_matchres <: ['583_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₁₃((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '640_matchres <: ['583_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₁₃((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1⁷ => '640_matchres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2⁵ <: [Destruct(LH_N, LH_C('_lh_dropWhile_LH_C_0³, '_lh_dropWhile_LH_C_1³), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1⁶ <: ['_lh_dropWhile_LH_C_0³ => '647_callres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0³ <: ['_lh_break_LH_C_0⁰ | 'x⁴] ::: false
//│ _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) :: '647_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀₂₁ :: 'dropWhile₀₀₂₁ <: ['x⁴ => '333_callres => '335_callres | '_lh_dropWhile_arg1⁶ => '650_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1⁶ <: ['_lh_dropWhile_LH_C_0³ => '647_callres] ::: false
//│ dropWhile₀₀₂₁(_lh_dropWhile_arg1) :: '650_callres <: ['_lh_dropWhile_LH_C_1³ => '652_callres] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1³ <: ['_lh_break_LH_C_1⁰ | '_lh_dropWhile_arg2⁵] ::: false
//│ dropWhile₀₀₂₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) :: '652_callres <: ['656_ifres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0³ <: ['_lh_break_LH_C_0⁰ | 'x⁴] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1³ <: ['_lh_break_LH_C_1⁰ | '_lh_dropWhile_arg2⁵] ::: false
//│ [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: LH_C('_lh_dropWhile_LH_C_0³, '_lh_dropWhile_LH_C_1³) ::: false
//│ if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: '656_ifres <: ['658_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error} :: '658_matchres <: ['337_callres | '652_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error}) :: '_lh_dropWhile_arg2⁵ => '658_matchres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error})) :: '_lh_dropWhile_arg1⁶ => '_lh_dropWhile_arg2⁵ => '658_matchres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2⁶ <: [Destruct(LH_N, LH_C('_lh_dropWhile_LH_C_0⁴, '_lh_dropWhile_LH_C_1⁴), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1⁷ <: ['_lh_dropWhile_LH_C_0⁴ => '665_callres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁴ <: ['_lh_break_LH_C_0⁶ | 'x⁸] ::: false
//│ _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) :: '665_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀₂₃ :: 'dropWhile₀₀₂₃ <: ['x⁸ => '427_callres => '429_callres | '_lh_dropWhile_arg1⁷ => '668_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1⁷ <: ['_lh_dropWhile_LH_C_0⁴ => '665_callres] ::: false
//│ dropWhile₀₀₂₃(_lh_dropWhile_arg1) :: '668_callres <: ['_lh_dropWhile_LH_C_1⁴ => '670_callres] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁴ <: ['_lh_break_LH_C_1⁶ | '_lh_dropWhile_arg2⁶] ::: false
//│ dropWhile₀₀₂₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) :: '670_callres <: ['674_ifres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁴ <: ['_lh_break_LH_C_0⁶ | 'x⁸] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁴ <: ['_lh_break_LH_C_1⁶ | '_lh_dropWhile_arg2⁶] ::: false
//│ [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: LH_C('_lh_dropWhile_LH_C_0⁴, '_lh_dropWhile_LH_C_1⁴) ::: false
//│ if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: '674_ifres <: ['676_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error} :: '676_matchres <: ['431_callres | '670_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error}) :: '_lh_dropWhile_arg2⁶ => '676_matchres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₃(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error})) :: '_lh_dropWhile_arg1⁷ => '_lh_dropWhile_arg2⁶ => '676_matchres ::: false
//│ _lh_break_arg2 :: '_lh_break_arg2⁴ <: [Destruct(LH_N, LH_C('_lh_break_LH_C_0⁴, '_lh_break_LH_C_1⁴), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ (fun _lh_dropWhile_arg1 -> [LH_N]) :: '_lh_dropWhile_arg1⁸ => LH_N ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹² <: [NoCons] ::: false
//│ words₀₀₂₁ :: 'words₀₀₂₁ <: ['_lh_words_LH_P2_1¹² => '686_callres | '_lh_words_LH_P2_1¹³ => '715_callres | '_lh_words_LH_P2_1¹⁴ => '733_callres | '_lh_words_LH_P2_1¹⁵ => '849_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹² <: ['_lh_words_arg1⁸] ::: false
//│ words₀₀₂₁(_lh_words_LH_P2_1) :: '686_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹², '686_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹² => LH_C('_lh_words_LH_P2_0¹², '686_callres) ::: false
//│ let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹² => LH_C('_lh_words_LH_P2_0¹², '686_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹² => LH_C('_lh_words_LH_P2_0¹², '686_callres) ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1⁴ <: ['_lh_break_LH_C_0⁴ => '693_callres | '_lh_break1_arg1⁶] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁴ <: [NoCons | 'x¹⁷ | '_lh_dropWhile_LH_C_0⁵] ::: false
//│ _lh_break_arg1(_lh_break_LH_C_0) :: '693_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁴ <: [NoCons | 'x¹⁷ | '_lh_dropWhile_LH_C_0⁵] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1⁴ <: ['_lh_dropWhile_LH_C_1⁵ | '_lh_break1_arg2⁶] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1⁹ <: ['_lh_dropWhile_LH_C_0⁵ => '699_callres | '_lh_dropWhile_arg1¹⁰] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁵ <: ['x¹⁶ | '_lh_break_LH_C_0⁴] ::: false
//│ _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) :: '699_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀₁₀ :: 'dropWhile₀₀₁₀ <: ['_lh_dropWhile_arg1⁹ => '702_callres | 'x¹⁶ => '787_callres => '789_callres | '_lh_dropWhile_arg1¹⁶ => '1029_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1⁹ <: ['_lh_dropWhile_LH_C_0⁵ => '699_callres | '_lh_dropWhile_arg1¹⁰] ::: false
//│ dropWhile₀₀₁₀(_lh_dropWhile_arg1) :: '702_callres <: ['_lh_dropWhile_LH_C_1⁵ => '704_callres] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁵ <: ['_lh_dropWhile_arg2⁷ | '_lh_break_LH_C_1⁴] ::: false
//│ dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) :: '704_callres <: ['708_ifres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁵ <: ['x¹⁶ | '_lh_break_LH_C_0⁴] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁵ <: ['_lh_dropWhile_arg2⁷ | '_lh_break_LH_C_1⁴] ::: false
//│ [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: LH_C('_lh_dropWhile_LH_C_0⁵, '_lh_dropWhile_LH_C_1⁵) ::: false
//│ if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: '708_ifres <: ['779_callres] ::: false
//│ (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1]) :: '_lh_dropWhile_arg1⁹ => '708_ifres ::: false
//│ let _lh_dropWhile_LH_C_1 = _lh_break_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1]) :: '_lh_dropWhile_arg1⁹ => '708_ifres ::: false
//│ let _lh_dropWhile_LH_C_0 = _lh_break_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1]) :: '_lh_dropWhile_arg1⁹ => '708_ifres ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹³ <: [NoCons] ::: false
//│ words₀₀₂₁ :: 'words₀₀₂₁ <: ['_lh_words_LH_P2_1¹² => '686_callres | '_lh_words_LH_P2_1¹³ => '715_callres | '_lh_words_LH_P2_1¹⁴ => '733_callres | '_lh_words_LH_P2_1¹⁵ => '849_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹³ <: ['_lh_words_arg1⁸] ::: false
//│ words₀₀₂₁(_lh_words_LH_P2_1) :: '715_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹³, '715_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹³ => LH_C('_lh_words_LH_P2_0¹³, '715_callres) ::: false
//│ let _lh_words_LH_P2_1 = let _lh_dropWhile_LH_C_0 = _lh_break_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹³ => LH_C('_lh_words_LH_P2_0¹³, '715_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = let _lh_dropWhile_LH_C_0 = _lh_break_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹³ => LH_C('_lh_words_LH_P2_0¹³, '715_callres) ::: false
//│ break1₀₀₁₁ :: 'break1₀₀₁₁ <: ['_lh_break_arg1⁴ => '722_callres | '_lh_break1_arg1⁶ => '1042_callres] ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1⁴ <: ['_lh_break_LH_C_0⁴ => '693_callres | '_lh_break1_arg1⁶] ::: false
//│ break1₀₀₁₁(_lh_break_arg1) :: '722_callres <: ['_lh_break_LH_C_1⁴ => '724_callres] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1⁴ <: ['_lh_dropWhile_LH_C_1⁵ | '_lh_break1_arg2⁶] ::: false
//│ break1₀₀₁₁(_lh_break_arg1, _lh_break_LH_C_1) :: '724_callres <: ['_lh_matchIdent²⁴] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²⁴ <: [Destruct(LH_P2('_lh_break_LH_P2_0⁴, '_lh_break_LH_P2_1⁴), _)] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁴ <: [NoCons | 'x¹⁷ | '_lh_dropWhile_LH_C_0⁵] ::: false
//│ _lh_break_LH_P2_0 :: '_lh_break_LH_P2_0⁴ <: [NoCons] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0] :: LH_C('_lh_break_LH_C_0⁴, '_lh_break_LH_P2_0⁴) ::: false
//│ _lh_break_LH_P2_1 :: '_lh_break_LH_P2_1⁴ <: ['_lh_words_LH_P2_1¹⁴] ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹⁴ <: [NoCons] ::: false
//│ words₀₀₂₁ :: 'words₀₀₂₁ <: ['_lh_words_LH_P2_1¹² => '686_callres | '_lh_words_LH_P2_1¹³ => '715_callres | '_lh_words_LH_P2_1¹⁴ => '733_callres | '_lh_words_LH_P2_1¹⁵ => '849_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹⁴ <: ['_lh_words_arg1⁸] ::: false
//│ words₀₀₂₁(_lh_words_LH_P2_1) :: '733_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹⁴, '733_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁴ => LH_C('_lh_words_LH_P2_0¹⁴, '733_callres) ::: false
//│ let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁴ => LH_C('_lh_words_LH_P2_0¹⁴, '733_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁴ => LH_C('_lh_words_LH_P2_0¹⁴, '733_callres) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | _  => error} :: '739_matchres <: ['741_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₁₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | _  => error} :: '739_matchres <: ['741_ifres] ::: false
//│ if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = let _lh_dropWhile_LH_C_0 = _lh_break_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | _  => error} :: '741_ifres <: ['743_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = let _lh_dropWhile_LH_C_0 = _lh_break_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | _  => error} | _  => error} :: '743_matchres <: ['803_callres] ::: false
//│ (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = let _lh_dropWhile_LH_C_0 = _lh_break_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | _  => error} | _  => error}) :: '_lh_break_arg2⁴ => '743_matchres ::: false
//│ (fun _lh_break_arg1 -> (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = let _lh_dropWhile_LH_C_0 = _lh_break_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₁(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | _  => error} | _  => error})) :: '_lh_break_arg1⁴ => '_lh_break_arg2⁴ => '743_matchres ::: false
//│ _lh_break1_arg2 :: '_lh_break1_arg2⁴ <: [Destruct(LH_N, LH_C('_lh_break1_LH_C_0⁴, '_lh_break1_LH_C_1⁴), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_P2 [LH_N] [LH_N]] :: LH_P2(LH_N, LH_N) ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1⁴ <: ['_lh_break1_LH_C_0⁴ => '752_callres] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁴ <: [NoCons | '_lh_dropWhile_LH_C_0⁰ | 'x¹⁹] ::: false
//│ _lh_break1_arg1(_lh_break1_LH_C_0) :: '752_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁴ <: [NoCons | '_lh_dropWhile_LH_C_0⁰ | 'x¹⁹] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1⁴ <: ['_lh_dropWhile_LH_C_1⁰ | '_lh_break1_arg2⁴] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1] :: LH_C('_lh_break1_LH_C_0⁴, '_lh_break1_LH_C_1⁴) ::: false
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] :: LH_P2(LH_N, LH_C('_lh_break1_LH_C_0⁴, '_lh_break1_LH_C_1⁴)) ::: false
//│ break1₀₀₁₂ :: 'break1₀₀₁₂ <: ['_lh_break_arg1² => '537_callres | '_lh_break1_arg1⁴ => '760_callres] ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1⁴ <: ['_lh_break1_LH_C_0⁴ => '752_callres] ::: false
//│ break1₀₀₁₂(_lh_break1_arg1) :: '760_callres <: ['_lh_break1_LH_C_1⁴ => '762_callres] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1⁴ <: ['_lh_dropWhile_LH_C_1⁰ | '_lh_break1_arg2⁴] ::: false
//│ break1₀₀₁₂(_lh_break1_arg1, _lh_break1_LH_C_1) :: '762_callres <: ['_lh_matchIdent²⁵] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²⁵ <: [Destruct(LH_P2('_lh_break1_LH_P2_0⁴, '_lh_break1_LH_P2_1⁴), _)] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁴ <: [NoCons | '_lh_dropWhile_LH_C_0⁰ | 'x¹⁹] ::: false
//│ _lh_break1_LH_P2_0 :: '_lh_break1_LH_P2_0⁴ <: [NoCons] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] :: LH_C('_lh_break1_LH_C_0⁴, '_lh_break1_LH_P2_0⁴) ::: false
//│ _lh_break1_LH_P2_1 :: '_lh_break1_LH_P2_1⁴ <: ['_lh_break_LH_P2_1²] ::: false
//│ [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] :: LH_P2(LH_C('_lh_break1_LH_C_0⁴, '_lh_break1_LH_P2_0⁴), '_lh_break1_LH_P2_1⁴) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '770_matchres <: ['772_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₁₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '770_matchres <: ['772_ifres] ::: false
//│ if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₁₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '772_ifres <: ['774_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₁₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error} :: '774_matchres <: ['539_callres | '762_callres] ::: false
//│ (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₁₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error}) :: '_lh_break1_arg2⁴ => '774_matchres ::: false
//│ (fun _lh_break1_arg1 -> (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₁₂(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error})) :: '_lh_break1_arg1⁴ => '_lh_break1_arg2⁴ => '774_matchres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2⁷ <: ['_lh_dropWhile_arg1¹⁰ => '779_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1¹⁰ <: ['_lh_dropWhile_arg1⁸ | '_lh_dropWhile_arg1⁹ | '_lh_dropWhile_arg1¹⁵ | '_lh_dropWhile_arg1¹⁶ | '_lh_dropWhile_arg1¹¹] ::: false
//│ _lh_dropWhile_arg2(_lh_dropWhile_arg1) :: '779_callres <: ['704_callres | '1031_callres | '791_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> _lh_dropWhile_arg2(_lh_dropWhile_arg1)) :: '_lh_dropWhile_arg2⁷ => '779_callres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> _lh_dropWhile_arg2(_lh_dropWhile_arg1))) :: '_lh_dropWhile_arg1¹⁰ => '_lh_dropWhile_arg2⁷ => '779_callres ::: false
//│ dropWhile₀₀₁₀ :: 'dropWhile₀₀₁₀ <: ['_lh_dropWhile_arg1⁹ => '702_callres | 'x¹⁶ => '787_callres => '789_callres | '_lh_dropWhile_arg1¹⁶ => '1029_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹⁶ <: [NoCons] ::: false
//│ polyEq(x) :: '785_callres <: [Char => '787_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '787_callres <: ['699_callres | '1026_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x¹⁶ => '787_callres ::: false
//│ dropWhile₀₀₁₀((fun x -> polyEq(x, ' '))) :: '789_callres <: ['_lh_words_arg1⁸ => '791_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1⁸ <: ['_lh_dropWhile_arg2⁷] ::: false
//│ dropWhile₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '791_callres <: ['_lh_matchIdent²⁶] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²⁶ <: ['_lh_break_arg2⁴ | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₁₁ :: 'break₀₀₁₁ <: ['x¹⁷ => '799_callres => '801_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹⁷ <: [NoCons] ::: false
//│ polyEq(x) :: '797_callres <: [Char => '799_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '799_callres <: ['693_callres | '1020_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x¹⁷ => '799_callres ::: false
//│ break₀₀₁₁((fun x -> polyEq(x, ' '))) :: '801_callres <: ['_lh_matchIdent²⁶ => '803_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²⁶ <: ['_lh_break_arg2⁴ | Destruct(LH_N, _)] ::: false
//│ break₀₀₁₁((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '803_callres <: ['_lh_matchIdent²⁷] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²⁷ <: [Int => '806_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '806_callres <: ['808_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₁₁((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '806_callres <: ['808_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₁((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '808_matchres <: ['686_callres | '715_callres | '733_callres | '849_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₁((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '808_matchres <: ['686_callres | '715_callres | '733_callres | '849_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₁₀((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₁((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1⁸ => '808_matchres ::: false
//│ _lh_break1_arg2 :: '_lh_break1_arg2⁵ <: [Destruct(LH_N, LH_C('_lh_break1_LH_C_0⁵, '_lh_break1_LH_C_1⁵), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_P2 [LH_N] [LH_N]] :: LH_P2(LH_N, LH_N) ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1⁵ <: ['_lh_break1_LH_C_0⁵ => '817_callres] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁵ <: [NoCons | '_lh_dropWhile_LH_C_0³ | 'x⁵] ::: false
//│ _lh_break1_arg1(_lh_break1_LH_C_0) :: '817_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁵ <: [NoCons | '_lh_dropWhile_LH_C_0³ | 'x⁵] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1⁵ <: ['_lh_dropWhile_LH_C_1³ | '_lh_break1_arg2⁵] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1] :: LH_C('_lh_break1_LH_C_0⁵, '_lh_break1_LH_C_1⁵) ::: false
//│ [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] :: LH_P2(LH_N, LH_C('_lh_break1_LH_C_0⁵, '_lh_break1_LH_C_1⁵)) ::: false
//│ break1₀₀₂₁ :: 'break1₀₀₂₁ <: ['_lh_break_arg1⁰ => '73_callres | '_lh_break1_arg1⁵ => '825_callres] ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1⁵ <: ['_lh_break1_LH_C_0⁵ => '817_callres] ::: false
//│ break1₀₀₂₁(_lh_break1_arg1) :: '825_callres <: ['_lh_break1_LH_C_1⁵ => '827_callres] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1⁵ <: ['_lh_dropWhile_LH_C_1³ | '_lh_break1_arg2⁵] ::: false
//│ break1₀₀₂₁(_lh_break1_arg1, _lh_break1_LH_C_1) :: '827_callres <: ['_lh_matchIdent²⁸] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²⁸ <: [Destruct(LH_P2('_lh_break1_LH_P2_0⁵, '_lh_break1_LH_P2_1⁵), _)] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁵ <: [NoCons | '_lh_dropWhile_LH_C_0³ | 'x⁵] ::: false
//│ _lh_break1_LH_P2_0 :: '_lh_break1_LH_P2_0⁵ <: [NoCons] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] :: LH_C('_lh_break1_LH_C_0⁵, '_lh_break1_LH_P2_0⁵) ::: false
//│ _lh_break1_LH_P2_1 :: '_lh_break1_LH_P2_1⁵ <: ['_lh_break_LH_P2_1⁰] ::: false
//│ [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] :: LH_P2(LH_C('_lh_break1_LH_C_0⁵, '_lh_break1_LH_P2_0⁵), '_lh_break1_LH_P2_1⁵) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '835_matchres <: ['837_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₂₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '835_matchres <: ['837_ifres] ::: false
//│ if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '837_ifres <: ['839_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error} :: '839_matchres <: ['75_callres | '827_callres] ::: false
//│ (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error}) :: '_lh_break1_arg2⁵ => '839_matchres ::: false
//│ (fun _lh_break1_arg1 -> (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] [LH_N]] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] [LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1]] else let _lh_matchIdent = break1₀₀₂₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error})) :: '_lh_break1_arg1⁵ => '_lh_break1_arg2⁵ => '839_matchres ::: false
//│ _lh_break_arg2 :: '_lh_break_arg2⁵ <: [Destruct(LH_N, LH_C('_lh_break_LH_C_0⁵, '_lh_break_LH_C_1⁵), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ (fun _lh_dropWhile_arg1 -> [LH_N]) :: '_lh_dropWhile_arg1¹¹ => LH_N ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹⁵ <: [NoCons] ::: false
//│ words₀₀₂₁ :: 'words₀₀₂₁ <: ['_lh_words_LH_P2_1¹² => '686_callres | '_lh_words_LH_P2_1¹³ => '715_callres | '_lh_words_LH_P2_1¹⁴ => '733_callres | '_lh_words_LH_P2_1¹⁵ => '849_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹⁵ <: ['_lh_words_arg1⁸] ::: false
//│ words₀₀₂₁(_lh_words_LH_P2_1) :: '849_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹⁵, '849_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁵ => LH_C('_lh_words_LH_P2_0¹⁵, '849_callres) ::: false
//│ let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁵ => LH_C('_lh_words_LH_P2_0¹⁵, '849_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁵ => LH_C('_lh_words_LH_P2_0¹⁵, '849_callres) ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1⁵ <: ['_lh_break1_arg1⁰ | '_lh_break_LH_C_0⁵ => '856_callres] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁵ <: [NoCons | '_lh_dropWhile_LH_C_0⁷ | 'x¹ | 'x¹⁵] ::: false
//│ _lh_break_arg1(_lh_break_LH_C_0) :: '856_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁵ <: [NoCons | '_lh_dropWhile_LH_C_0⁷ | 'x¹ | 'x¹⁵] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1⁵ <: ['_lh_break1_arg2⁰ | '_lh_dropWhile_LH_C_1⁷] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1] :: LH_C('_lh_break_LH_C_0⁵, '_lh_break_LH_C_1⁵) ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹⁶ <: [NoCons] ::: false
//│ words₀₀₂₂ :: 'words₀₀₂₂ <: ['_lh_words_LH_P2_1¹⁶ => '864_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹⁶ <: ['_lh_words_arg1⁰] ::: false
//│ words₀₀₂₂(_lh_words_LH_P2_1) :: '864_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₂(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹⁶, '864_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₂(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁶ => LH_C('_lh_words_LH_P2_0¹⁶, '864_callres) ::: false
//│ let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₂(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁶ => LH_C('_lh_words_LH_P2_0¹⁶, '864_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₂(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁶ => LH_C('_lh_words_LH_P2_0¹⁶, '864_callres) ::: false
//│ break1₀₀₁₀ :: 'break1₀₀₁₀ <: ['_lh_break1_arg1⁰ => '28_callres | '_lh_break_arg1⁵ => '871_callres] ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1⁵ <: ['_lh_break1_arg1⁰ | '_lh_break_LH_C_0⁵ => '856_callres] ::: false
//│ break1₀₀₁₀(_lh_break_arg1) :: '871_callres <: ['_lh_break_LH_C_1⁵ => '873_callres] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1⁵ <: ['_lh_break1_arg2⁰ | '_lh_dropWhile_LH_C_1⁷] ::: false
//│ break1₀₀₁₀(_lh_break_arg1, _lh_break_LH_C_1) :: '873_callres <: ['_lh_matchIdent²⁹] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent²⁹ <: [Destruct(LH_P2('_lh_break_LH_P2_0⁵, '_lh_break_LH_P2_1⁵), _)] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁵ <: [NoCons | '_lh_dropWhile_LH_C_0⁷ | 'x¹ | 'x¹⁵] ::: false
//│ _lh_break_LH_P2_0 :: '_lh_break_LH_P2_0⁵ <: [NoCons] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0] :: LH_C('_lh_break_LH_C_0⁵, '_lh_break_LH_P2_0⁵) ::: false
//│ _lh_break_LH_P2_1 :: '_lh_break_LH_P2_1⁵ <: ['_lh_words_LH_P2_1¹⁷] ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹⁷ <: [NoCons] ::: false
//│ words₀₀₂₃ :: 'words₀₀₂₃ <: ['_lh_words_LH_P2_1⁶ => '515_callres | '_lh_words_LH_P2_1⁷ => '530_callres | '_lh_words_LH_P2_1⁸ => '548_callres | '_lh_words_LH_P2_1¹⁷ => '882_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹⁷ <: ['_lh_words_arg1⁹] ::: false
//│ words₀₀₂₃(_lh_words_LH_P2_1) :: '882_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹⁷, '882_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁷ => LH_C('_lh_words_LH_P2_0¹⁷, '882_callres) ::: false
//│ let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁷ => LH_C('_lh_words_LH_P2_0¹⁷, '882_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁷ => LH_C('_lh_words_LH_P2_0¹⁷, '882_callres) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} :: '888_matchres <: ['890_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₁₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} :: '888_matchres <: ['890_ifres] ::: false
//│ if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} :: '890_ifres <: ['892_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error} :: '892_matchres <: ['159_callres | '635_callres] ::: false
//│ (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error}) :: '_lh_break_arg2⁵ => '892_matchres ::: false
//│ (fun _lh_break_arg1 -> (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₁(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₁₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₂₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error})) :: '_lh_break_arg1⁵ => '_lh_break_arg2⁵ => '892_matchres ::: false
//│ dropWhile₀₀₁₂ :: 'dropWhile₀₀₁₂ <: ['_lh_dropWhile_arg1¹ => '109_callres | 'x¹⁸ => '900_callres => '902_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹⁸ <: [NoCons] ::: false
//│ polyEq(x) :: '898_callres <: [Char => '900_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '900_callres <: ['106_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x¹⁸ => '900_callres ::: false
//│ dropWhile₀₀₁₂((fun x -> polyEq(x, ' '))) :: '902_callres <: ['_lh_words_arg1⁹ => '904_callres] ::: false
//│ _lh_words_arg1 :: '_lh_words_arg1⁹ <: ['_lh_dropWhile_arg2¹] ::: false
//│ dropWhile₀₀₁₂((fun x -> polyEq(x, ' ')), _lh_words_arg1) :: '904_callres <: ['_lh_matchIdent³⁰] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent³⁰ <: ['_lh_break_arg2² | Destruct(LH_N, _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ break₀₀₁₂ :: 'break₀₀₁₂ <: ['x¹⁹ => '912_callres => '914_callres] ::: false
//│ polyEq :: NoProd ::: false
//│ x :: 'x¹⁹ <: [NoCons] ::: false
//│ polyEq(x) :: '910_callres <: [Char => '912_callres] ::: false
//│ ' ' :: Char ::: false
//│ polyEq(x, ' ') :: '912_callres <: ['522_callres | '752_callres] ::: false
//│ (fun x -> polyEq(x, ' ')) :: 'x¹⁹ => '912_callres ::: false
//│ break₀₀₁₂((fun x -> polyEq(x, ' '))) :: '914_callres <: ['_lh_matchIdent³⁰ => '916_callres] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent³⁰ <: ['_lh_break_arg2² | Destruct(LH_N, _)] ::: false
//│ break₀₀₁₂((fun x -> polyEq(x, ' ')), _lh_matchIdent) :: '916_callres <: ['_lh_matchIdent³¹] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent³¹ <: [Int => '919_callres] ::: false
//│ 99 :: Int ::: false
//│ _lh_matchIdent(99) :: '919_callres <: ['921_matchres] ::: false
//│ let _lh_matchIdent = break₀₀₁₂((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99) :: '919_callres <: ['921_matchres] ::: false
//│ case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₂((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '921_matchres <: ['515_callres | '530_callres | '548_callres | '882_callres] ::: false
//│ let _lh_matchIdent = dropWhile₀₀₁₂((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₂((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)} :: '921_matchres <: ['515_callres | '530_callres | '548_callres | '882_callres] ::: false
//│ (fun _lh_words_arg1 -> let _lh_matchIdent = dropWhile₀₀₁₂((fun x -> polyEq(x, ' ')), _lh_words_arg1)
//│ in case _lh_matchIdent of {LH_N  => [LH_N] | _  => let _lh_matchIdent = break₀₀₁₂((fun x -> polyEq(x, ' ')), _lh_matchIdent)
//│ in _lh_matchIdent(99)}) :: '_lh_words_arg1⁹ => '921_matchres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2⁸ <: [Destruct(LH_N, LH_C('_lh_dropWhile_LH_C_0⁶, '_lh_dropWhile_LH_C_1⁶), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1¹² <: ['_lh_dropWhile_LH_C_0⁶ => '928_callres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁶ <: ['_lh_break_LH_C_0¹ | 'x²] ::: false
//│ _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) :: '928_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀₂₂ :: 'dropWhile₀₀₂₂ <: ['x² => '255_callres => '257_callres | '_lh_dropWhile_arg1¹² => '931_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1¹² <: ['_lh_dropWhile_LH_C_0⁶ => '928_callres] ::: false
//│ dropWhile₀₀₂₂(_lh_dropWhile_arg1) :: '931_callres <: ['_lh_dropWhile_LH_C_1⁶ => '933_callres] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁶ <: ['_lh_break_LH_C_1¹ | '_lh_dropWhile_arg2⁸] ::: false
//│ dropWhile₀₀₂₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) :: '933_callres <: ['937_ifres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁶ <: ['_lh_break_LH_C_0¹ | 'x²] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁶ <: ['_lh_break_LH_C_1¹ | '_lh_dropWhile_arg2⁸] ::: false
//│ [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: LH_C('_lh_dropWhile_LH_C_0⁶, '_lh_dropWhile_LH_C_1⁶) ::: false
//│ if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: '937_ifres <: ['939_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error} :: '939_matchres <: ['259_callres | '933_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error}) :: '_lh_dropWhile_arg2⁸ => '939_matchres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₂₂(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error})) :: '_lh_dropWhile_arg1¹² => '_lh_dropWhile_arg2⁸ => '939_matchres ::: false
//│ _lh_break_arg2 :: '_lh_break_arg2⁶ <: [Destruct(LH_N, LH_C('_lh_break_LH_C_0⁶, '_lh_break_LH_C_1⁶), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ (fun _lh_dropWhile_arg1 -> [LH_N]) :: '_lh_dropWhile_arg1¹³ => LH_N ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹⁸ <: [NoCons] ::: false
//│ words₀₀₃₁ :: 'words₀₀₃₁ <: ['_lh_words_LH_P2_1¹⁸ => '949_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹⁸ <: ['_lh_words_arg1⁵] ::: false
//│ words₀₀₃₁(_lh_words_LH_P2_1) :: '949_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₁(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹⁸, '949_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁸ => LH_C('_lh_words_LH_P2_0¹⁸, '949_callres) ::: false
//│ let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁸ => LH_C('_lh_words_LH_P2_0¹⁸, '949_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₁(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁸ => LH_C('_lh_words_LH_P2_0¹⁸, '949_callres) ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1⁶ <: ['_lh_break1_arg1¹ | '_lh_break_LH_C_0⁶ => '956_callres] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁶ <: [NoCons | '_lh_dropWhile_LH_C_0³ | 'x⁹ | 'x¹¹] ::: false
//│ _lh_break_arg1(_lh_break_LH_C_0) :: '956_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁶ <: [NoCons | '_lh_dropWhile_LH_C_0³ | 'x⁹ | 'x¹¹] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1⁶ <: ['_lh_break1_arg2¹ | '_lh_dropWhile_LH_C_1³] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1] :: LH_C('_lh_break_LH_C_0⁶, '_lh_break_LH_C_1⁶) ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0¹⁹ <: [NoCons] ::: false
//│ words₀₀₃₂ :: 'words₀₀₃₂ <: ['_lh_words_LH_P2_1⁰ => '51_callres | '_lh_words_LH_P2_1¹ => '66_callres | '_lh_words_LH_P2_1² => '84_callres | '_lh_words_LH_P2_1¹⁹ => '964_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1¹⁹ <: ['_lh_words_arg1²] ::: false
//│ words₀₀₃₂(_lh_words_LH_P2_1) :: '964_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0¹⁹, '964_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁹ => LH_C('_lh_words_LH_P2_0¹⁹, '964_callres) ::: false
//│ let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁹ => LH_C('_lh_words_LH_P2_0¹⁹, '964_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) :: '_lh_dummy¹⁹ => LH_C('_lh_words_LH_P2_0¹⁹, '964_callres) ::: false
//│ break1₀₀₂₀ :: 'break1₀₀₂₀ <: ['_lh_break1_arg1¹ => '181_callres | '_lh_break_arg1⁶ => '971_callres] ::: false
//│ _lh_break_arg1 :: '_lh_break_arg1⁶ <: ['_lh_break1_arg1¹ | '_lh_break_LH_C_0⁶ => '956_callres] ::: false
//│ break1₀₀₂₀(_lh_break_arg1) :: '971_callres <: ['_lh_break_LH_C_1⁶ => '973_callres] ::: false
//│ _lh_break_LH_C_1 :: '_lh_break_LH_C_1⁶ <: ['_lh_break1_arg2¹ | '_lh_dropWhile_LH_C_1³] ::: false
//│ break1₀₀₂₀(_lh_break_arg1, _lh_break_LH_C_1) :: '973_callres <: ['_lh_matchIdent³²] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent³² <: [Destruct(LH_P2('_lh_break_LH_P2_0⁶, '_lh_break_LH_P2_1⁶), _)] ::: false
//│ _lh_break_LH_C_0 :: '_lh_break_LH_C_0⁶ <: [NoCons | '_lh_dropWhile_LH_C_0³ | 'x⁹ | 'x¹¹] ::: false
//│ _lh_break_LH_P2_0 :: '_lh_break_LH_P2_0⁶ <: [NoCons] ::: false
//│ [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0] :: LH_C('_lh_break_LH_C_0⁶, '_lh_break_LH_P2_0⁶) ::: false
//│ _lh_break_LH_P2_1 :: '_lh_break_LH_P2_1⁶ <: ['_lh_words_LH_P2_1²⁰] ::: false
//│ _lh_words_LH_P2_0 :: '_lh_words_LH_P2_0²⁰ <: [NoCons] ::: false
//│ words₀₀₃₃ :: 'words₀₀₃₃ <: ['_lh_words_LH_P2_1³ => '204_callres | '_lh_words_LH_P2_1⁴ => '219_callres | '_lh_words_LH_P2_1⁵ => '237_callres | '_lh_words_LH_P2_1²⁰ => '982_callres] ::: false
//│ _lh_words_LH_P2_1 :: '_lh_words_LH_P2_1²⁰ <: ['_lh_words_arg1¹] ::: false
//│ words₀₀₃₃(_lh_words_LH_P2_1) :: '982_callres <: [NoCons] ::: false
//│ [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)] :: LH_C('_lh_words_LH_P2_0²⁰, '982_callres) ::: false
//│ (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy²⁰ => LH_C('_lh_words_LH_P2_0²⁰, '982_callres) ::: false
//│ let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy²⁰ => LH_C('_lh_words_LH_P2_0²⁰, '982_callres) ::: false
//│ let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) :: '_lh_dummy²⁰ => LH_C('_lh_words_LH_P2_0²⁰, '982_callres) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} :: '988_matchres <: ['990_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₂₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} :: '988_matchres <: ['990_ifres] ::: false
//│ if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} :: '990_ifres <: ['992_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₁(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error} :: '992_matchres <: ['443_callres | '472_callres] ::: false
//│ (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₁(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error}) :: '_lh_break_arg2⁶ => '992_matchres ::: false
//│ (fun _lh_break_arg1 -> (fun _lh_break_arg2 -> case _lh_break_arg2 of {LH_N  => let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = (fun _lh_dropWhile_arg1 -> [LH_N])
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₁(_lh_words_LH_P2_1)]) | LH_C _lh_break_LH_C_0 _lh_break_LH_C_1 => if _lh_break_arg1(_lh_break_LH_C_0) then let _lh_words_LH_P2_0 = [LH_N]
//│ in let _lh_words_LH_P2_1 = [LH_C _lh_break_LH_C_0 _lh_break_LH_C_1]
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₂(_lh_words_LH_P2_1)]) else let _lh_matchIdent = break1₀₀₂₀(_lh_break_arg1, _lh_break_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break_LH_P2_0 _lh_break_LH_P2_1 => let _lh_words_LH_P2_0 = [LH_C _lh_break_LH_C_0 _lh_break_LH_P2_0]
//│ in let _lh_words_LH_P2_1 = _lh_break_LH_P2_1
//│ in (fun _lh_dummy -> [LH_C _lh_words_LH_P2_0 words₀₀₃₃(_lh_words_LH_P2_1)]) | _  => error} | _  => error})) :: '_lh_break_arg1⁶ => '_lh_break_arg2⁶ => '992_matchres ::: false
//│ _lh_dropWhile_arg2 :: '_lh_dropWhile_arg2⁹ <: [Destruct(LH_N, LH_C('_lh_dropWhile_LH_C_0⁷, '_lh_dropWhile_LH_C_1⁷), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1¹⁴ <: ['_lh_dropWhile_LH_C_0⁷ => '999_callres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁷ <: ['_lh_break_LH_C_0⁵ | 'x⁰] ::: false
//│ _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) :: '999_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀₁₁ :: 'dropWhile₀₀₁₁ <: ['x⁰ => '143_callres => '145_callres | '_lh_dropWhile_arg1¹⁴ => '1002_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1¹⁴ <: ['_lh_dropWhile_LH_C_0⁷ => '999_callres] ::: false
//│ dropWhile₀₀₁₁(_lh_dropWhile_arg1) :: '1002_callres <: ['_lh_dropWhile_LH_C_1⁷ => '1004_callres] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁷ <: ['_lh_break_LH_C_1⁵ | '_lh_dropWhile_arg2⁹] ::: false
//│ dropWhile₀₀₁₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) :: '1004_callres <: ['1008_ifres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁷ <: ['_lh_break_LH_C_0⁵ | 'x⁰] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁷ <: ['_lh_break_LH_C_1⁵ | '_lh_dropWhile_arg2⁹] ::: false
//│ [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: LH_C('_lh_dropWhile_LH_C_0⁷, '_lh_dropWhile_LH_C_1⁷) ::: false
//│ if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: '1008_ifres <: ['1010_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error} :: '1010_matchres <: ['147_callres | '1004_callres] ::: false
//│ (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error}) :: '_lh_dropWhile_arg2⁹ => '1010_matchres ::: false
//│ (fun _lh_dropWhile_arg1 -> (fun _lh_dropWhile_arg2 -> case _lh_dropWhile_arg2 of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1 => if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₁(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] | _  => error})) :: '_lh_dropWhile_arg1¹⁴ => '_lh_dropWhile_arg2⁹ => '1010_matchres ::: false
//│ _lh_break1_arg2 :: '_lh_break1_arg2⁶ <: [Destruct(LH_N, LH_C('_lh_break1_LH_C_0⁶, '_lh_break1_LH_C_1⁶), _)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ [LH_N] :: LH_N ::: false
//│ (fun _lh_dropWhile_arg1 -> [LH_N]) :: '_lh_dropWhile_arg1¹⁵ => LH_N ::: false
//│ [LH_P2 [LH_N] (fun _lh_dropWhile_arg1 -> [LH_N])] :: LH_P2(LH_N, '_lh_dropWhile_arg1¹⁵ => LH_N) ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1⁶ <: ['_lh_break1_LH_C_0⁶ => '1020_callres] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁶ <: [NoCons | 'x¹⁷ | '_lh_dropWhile_LH_C_0⁸] ::: false
//│ _lh_break1_arg1(_lh_break1_LH_C_0) :: '1020_callres <: [Destruct(True, False)] ::: false
//│ [LH_N] :: LH_N ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁶ <: [NoCons | 'x¹⁷ | '_lh_dropWhile_LH_C_0⁸] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1⁶ <: ['_lh_dropWhile_LH_C_1⁸ | '_lh_break1_arg2⁶] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1¹⁶ <: ['_lh_dropWhile_arg1¹⁰ | '_lh_dropWhile_LH_C_0⁸ => '1026_callres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁸ <: ['_lh_break_LH_C_0⁴ | 'x¹⁶] ::: false
//│ _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) :: '1026_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀₁₀ :: 'dropWhile₀₀₁₀ <: ['_lh_dropWhile_arg1⁹ => '702_callres | 'x¹⁶ => '787_callres => '789_callres | '_lh_dropWhile_arg1¹⁶ => '1029_callres] ::: false
//│ _lh_dropWhile_arg1 :: '_lh_dropWhile_arg1¹⁶ <: ['_lh_dropWhile_arg1¹⁰ | '_lh_dropWhile_LH_C_0⁸ => '1026_callres] ::: false
//│ dropWhile₀₀₁₀(_lh_dropWhile_arg1) :: '1029_callres <: ['_lh_dropWhile_LH_C_1⁸ => '1031_callres] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁸ <: ['_lh_break_LH_C_1⁴ | '_lh_dropWhile_arg2⁷] ::: false
//│ dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) :: '1031_callres <: ['1035_ifres] ::: false
//│ _lh_dropWhile_LH_C_0 :: '_lh_dropWhile_LH_C_0⁸ <: ['_lh_break_LH_C_0⁴ | 'x¹⁶] ::: false
//│ _lh_dropWhile_LH_C_1 :: '_lh_dropWhile_LH_C_1⁸ <: ['_lh_break_LH_C_1⁴ | '_lh_dropWhile_arg2⁷] ::: false
//│ [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: LH_C('_lh_dropWhile_LH_C_0⁸, '_lh_dropWhile_LH_C_1⁸) ::: false
//│ if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1] :: '1035_ifres <: ['779_callres] ::: false
//│ (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1]) :: '_lh_dropWhile_arg1¹⁶ => '1035_ifres ::: false
//│ let _lh_dropWhile_LH_C_1 = _lh_break1_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1]) :: '_lh_dropWhile_arg1¹⁶ => '1035_ifres ::: false
//│ let _lh_dropWhile_LH_C_0 = _lh_break1_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break1_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1]) :: '_lh_dropWhile_arg1¹⁶ => '1035_ifres ::: false
//│ [LH_P2 [LH_N] let _lh_dropWhile_LH_C_0 = _lh_break1_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break1_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])] :: LH_P2(LH_N, '_lh_dropWhile_arg1¹⁶ => '1035_ifres) ::: false
//│ break1₀₀₁₁ :: 'break1₀₀₁₁ <: ['_lh_break_arg1⁴ => '722_callres | '_lh_break1_arg1⁶ => '1042_callres] ::: false
//│ _lh_break1_arg1 :: '_lh_break1_arg1⁶ <: ['_lh_break1_LH_C_0⁶ => '1020_callres] ::: false
//│ break1₀₀₁₁(_lh_break1_arg1) :: '1042_callres <: ['_lh_break1_LH_C_1⁶ => '1044_callres] ::: false
//│ _lh_break1_LH_C_1 :: '_lh_break1_LH_C_1⁶ <: ['_lh_dropWhile_LH_C_1⁸ | '_lh_break1_arg2⁶] ::: false
//│ break1₀₀₁₁(_lh_break1_arg1, _lh_break1_LH_C_1) :: '1044_callres <: ['_lh_matchIdent³³] ::: false
//│ _lh_matchIdent :: '_lh_matchIdent³³ <: [Destruct(LH_P2('_lh_break1_LH_P2_0⁶, '_lh_break1_LH_P2_1⁶), _)] ::: false
//│ _lh_break1_LH_C_0 :: '_lh_break1_LH_C_0⁶ <: [NoCons | 'x¹⁷ | '_lh_dropWhile_LH_C_0⁸] ::: false
//│ _lh_break1_LH_P2_0 :: '_lh_break1_LH_P2_0⁶ <: [NoCons] ::: false
//│ [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] :: LH_C('_lh_break1_LH_C_0⁶, '_lh_break1_LH_P2_0⁶) ::: false
//│ _lh_break1_LH_P2_1 :: '_lh_break1_LH_P2_1⁶ <: ['_lh_break_LH_P2_1⁴] ::: false
//│ [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] :: LH_P2(LH_C('_lh_break1_LH_C_0⁶, '_lh_break1_LH_P2_0⁶), '_lh_break1_LH_P2_1⁶) ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '1052_matchres <: ['1054_ifres] ::: false
//│ let _lh_matchIdent = break1₀₀₁₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '1052_matchres <: ['1054_ifres] ::: false
//│ if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] let _lh_dropWhile_LH_C_0 = _lh_break1_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break1_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])] else let _lh_matchIdent = break1₀₀₁₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} :: '1054_ifres <: ['1056_matchres] ::: false
//│ error :: '_lh_rigid_error_var <: [] ::: true
//│ case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] (fun _lh_dropWhile_arg1 -> [LH_N])] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] let _lh_dropWhile_LH_C_0 = _lh_break1_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break1_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])] else let _lh_matchIdent = break1₀₀₁₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error} :: '1056_matchres <: ['724_callres | '1044_callres] ::: false
//│ (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] (fun _lh_dropWhile_arg1 -> [LH_N])] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] let _lh_dropWhile_LH_C_0 = _lh_break1_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break1_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])] else let _lh_matchIdent = break1₀₀₁₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error}) :: '_lh_break1_arg2⁶ => '1056_matchres ::: false
//│ (fun _lh_break1_arg1 -> (fun _lh_break1_arg2 -> case _lh_break1_arg2 of {LH_N  => [LH_P2 [LH_N] (fun _lh_dropWhile_arg1 -> [LH_N])] | LH_C _lh_break1_LH_C_0 _lh_break1_LH_C_1 => if _lh_break1_arg1(_lh_break1_LH_C_0) then [LH_P2 [LH_N] let _lh_dropWhile_LH_C_0 = _lh_break1_LH_C_0
//│ in let _lh_dropWhile_LH_C_1 = _lh_break1_LH_C_1
//│ in (fun _lh_dropWhile_arg1 -> if _lh_dropWhile_arg1(_lh_dropWhile_LH_C_0) then dropWhile₀₀₁₀(_lh_dropWhile_arg1, _lh_dropWhile_LH_C_1) else [LH_C _lh_dropWhile_LH_C_0 _lh_dropWhile_LH_C_1])] else let _lh_matchIdent = break1₀₀₁₁(_lh_break1_arg1, _lh_break1_LH_C_1)
//│ in case _lh_matchIdent of {LH_P2 _lh_break1_LH_P2_0 _lh_break1_LH_P2_1 => [LH_P2 [LH_C _lh_break1_LH_C_0 _lh_break1_LH_P2_0] _lh_break1_LH_P2_1] | _  => error} | _  => error})) :: '_lh_break1_arg1⁶ => '_lh_break1_arg2⁶ => '1056_matchres ::: false
//│ <<<<<<<<<< deadcode elimination info <<<<<<<<<<
//│ cannot generate benchmark files: Internal Error: benchmark requires a method of name `testxxx` calling a value wrapped in `primId`
//│  and if there are manually fused benchmarks, there should be a call to `testManual`with exact the same parameter following the `testxxx`
//│ 
//│ let rec break1_d0_d0_d0_d0_d0 _lh_break1_arg1_1_0 _lh_break1_arg2_1_0 =
//│   (match _lh_break1_arg2_1_0 with
//│     | `LH_N -> 
//│       (`LH_P2((`LH_N), (`LH_N)))
//│     | `LH_C(_lh_break1_LH_C_0_1_0, _lh_break1_LH_C_1_1_0) -> 
//│       (if (_lh_break1_arg1_1_0 _lh_break1_LH_C_0_1_0) then
//│         (`LH_P2((`LH_N), (`LH_C(_lh_break1_LH_C_0_1_0, _lh_break1_LH_C_1_1_0))))
//│       else
//│         (let rec _lh_matchIdent_4_0 = ((break1_d0_d0_d0_d0_d0 _lh_break1_arg1_1_0) _lh_break1_LH_C_1_1_0) in
//│           (match _lh_matchIdent_4_0 with
//│             | `LH_P2(_lh_break1_LH_P2_0_1_0, _lh_break1_LH_P2_1_1_0) -> 
//│               (`LH_P2((`LH_C(_lh_break1_LH_C_0_1_0, _lh_break1_LH_P2_0_1_0)), _lh_break1_LH_P2_1_1_0))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break1_d0_d0_d1_d0_d0 _lh_break1_arg1_1_2 _lh_break1_arg2_1_2 =
//│   (match _lh_break1_arg2_1_2 with
//│     | `LH_N -> 
//│       (`LH_P2((`LH_N), (`LH_N)))
//│     | `LH_C(_lh_break1_LH_C_0_1_2, _lh_break1_LH_C_1_1_2) -> 
//│       (if (_lh_break1_arg1_1_2 _lh_break1_LH_C_0_1_2) then
//│         (`LH_P2((`LH_N), (`LH_C(_lh_break1_LH_C_0_1_2, _lh_break1_LH_C_1_1_2))))
//│       else
//│         (let rec _lh_matchIdent_5_3 = ((break1_d0_d0_d1_d0_d0 _lh_break1_arg1_1_2) _lh_break1_LH_C_1_1_2) in
//│           (match _lh_matchIdent_5_3 with
//│             | `LH_P2(_lh_break1_LH_P2_0_1_2, _lh_break1_LH_P2_1_1_2) -> 
//│               (`LH_P2((`LH_C(_lh_break1_LH_C_0_1_2, _lh_break1_LH_P2_0_1_2)), _lh_break1_LH_P2_1_1_2))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break1_d0_d0_d1_d1_d0 _lh_break1_arg1_1_1 _lh_break1_arg2_1_1 =
//│   (match _lh_break1_arg2_1_1 with
//│     | `LH_N -> 
//│       (`LH_P2((`LH_N), (fun _lh_dropWhile_arg1_2_9 -> 
//│         (`LH_N))))
//│     | `LH_C(_lh_break1_LH_C_0_1_1, _lh_break1_LH_C_1_1_1) -> 
//│       (if (_lh_break1_arg1_1_1 _lh_break1_LH_C_0_1_1) then
//│         (`LH_P2((`LH_N), (let rec _lh_dropWhile_LH_C_0_1_5 = _lh_break1_LH_C_0_1_1 in
//│           (let rec _lh_dropWhile_LH_C_1_1_5 = _lh_break1_LH_C_1_1_1 in
//│             (fun _lh_dropWhile_arg1_3_0 -> 
//│               (if (_lh_dropWhile_arg1_3_0 _lh_dropWhile_LH_C_0_1_5) then
//│                 ((dropWhile_d0_d0_d1_d0_d0 _lh_dropWhile_arg1_3_0) _lh_dropWhile_LH_C_1_1_5)
//│               else
//│                 (`LH_C(_lh_dropWhile_LH_C_0_1_5, _lh_dropWhile_LH_C_1_1_5))))))))
//│       else
//│         (let rec _lh_matchIdent_5_0 = ((break1_d0_d0_d1_d1_d0 _lh_break1_arg1_1_1) _lh_break1_LH_C_1_1_1) in
//│           (match _lh_matchIdent_5_0 with
//│             | `LH_P2(_lh_break1_LH_P2_0_1_1, _lh_break1_LH_P2_1_1_1) -> 
//│               (`LH_P2((`LH_C(_lh_break1_LH_C_0_1_1, _lh_break1_LH_P2_0_1_1)), _lh_break1_LH_P2_1_1_1))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break1_d0_d0_d1_d2_d0 _lh_break1_arg1_1_3 _lh_break1_arg2_1_3 =
//│   (match _lh_break1_arg2_1_3 with
//│     | `LH_N -> 
//│       (`LH_P2((`LH_N), (`LH_N)))
//│     | `LH_C(_lh_break1_LH_C_0_1_3, _lh_break1_LH_C_1_1_3) -> 
//│       (if (_lh_break1_arg1_1_3 _lh_break1_LH_C_0_1_3) then
//│         (`LH_P2((`LH_N), (`LH_C(_lh_break1_LH_C_0_1_3, _lh_break1_LH_C_1_1_3))))
//│       else
//│         (let rec _lh_matchIdent_5_4 = ((break1_d0_d0_d1_d2_d0 _lh_break1_arg1_1_3) _lh_break1_LH_C_1_1_3) in
//│           (match _lh_matchIdent_5_4 with
//│             | `LH_P2(_lh_break1_LH_P2_0_1_3, _lh_break1_LH_P2_1_1_3) -> 
//│               (`LH_P2((`LH_C(_lh_break1_LH_C_0_1_3, _lh_break1_LH_P2_0_1_3)), _lh_break1_LH_P2_1_1_3))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break1_d0_d0_d2_d0_d0 _lh_break1_arg1_7 _lh_break1_arg2_7 =
//│   (match _lh_break1_arg2_7 with
//│     | `LH_N -> 
//│       (`LH_P2((`LH_N), (`LH_N)))
//│     | `LH_C(_lh_break1_LH_C_0_7, _lh_break1_LH_C_1_7) -> 
//│       (if (_lh_break1_arg1_7 _lh_break1_LH_C_0_7) then
//│         (`LH_P2((`LH_N), (`LH_C(_lh_break1_LH_C_0_7, _lh_break1_LH_C_1_7))))
//│       else
//│         (let rec _lh_matchIdent_3_3 = ((break1_d0_d0_d2_d0_d0 _lh_break1_arg1_7) _lh_break1_LH_C_1_7) in
//│           (match _lh_matchIdent_3_3 with
//│             | `LH_P2(_lh_break1_LH_P2_0_7, _lh_break1_LH_P2_1_7) -> 
//│               (`LH_P2((`LH_C(_lh_break1_LH_C_0_7, _lh_break1_LH_P2_0_7)), _lh_break1_LH_P2_1_7))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break1_d0_d0_d2_d1_d0 _lh_break1_arg1_9 _lh_break1_arg2_9 =
//│   (match _lh_break1_arg2_9 with
//│     | `LH_N -> 
//│       (`LH_P2((`LH_N), (`LH_N)))
//│     | `LH_C(_lh_break1_LH_C_0_9, _lh_break1_LH_C_1_9) -> 
//│       (if (_lh_break1_arg1_9 _lh_break1_LH_C_0_9) then
//│         (`LH_P2((`LH_N), (`LH_C(_lh_break1_LH_C_0_9, _lh_break1_LH_C_1_9))))
//│       else
//│         (let rec _lh_matchIdent_3_9 = ((break1_d0_d0_d2_d1_d0 _lh_break1_arg1_9) _lh_break1_LH_C_1_9) in
//│           (match _lh_matchIdent_3_9 with
//│             | `LH_P2(_lh_break1_LH_P2_0_9, _lh_break1_LH_P2_1_9) -> 
//│               (`LH_P2((`LH_C(_lh_break1_LH_C_0_9, _lh_break1_LH_P2_0_9)), _lh_break1_LH_P2_1_9))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break1_d0_d0_d2_d2_d0 _lh_break1_arg1_8 _lh_break1_arg2_8 =
//│   (match _lh_break1_arg2_8 with
//│     | `LH_N -> 
//│       (`LH_P2((`LH_N), (`LH_N)))
//│     | `LH_C(_lh_break1_LH_C_0_8, _lh_break1_LH_C_1_8) -> 
//│       (if (_lh_break1_arg1_8 _lh_break1_LH_C_0_8) then
//│         (`LH_P2((`LH_N), (`LH_C(_lh_break1_LH_C_0_8, _lh_break1_LH_C_1_8))))
//│       else
//│         (let rec _lh_matchIdent_3_8 = ((break1_d0_d0_d2_d2_d0 _lh_break1_arg1_8) _lh_break1_LH_C_1_8) in
//│           (match _lh_matchIdent_3_8 with
//│             | `LH_P2(_lh_break1_LH_P2_0_8, _lh_break1_LH_P2_1_8) -> 
//│               (`LH_P2((`LH_C(_lh_break1_LH_C_0_8, _lh_break1_LH_P2_0_8)), _lh_break1_LH_P2_1_8))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break_d0_d0_d0_d0_d0 _lh_break_arg1_7 _lh_break_arg2_7 =
//│   (match _lh_break_arg2_7 with
//│     | `LH_N -> 
//│       (let rec _lh_words_LH_P2_0_2_1 = (`LH_N) in
//│         (let rec _lh_words_LH_P2_1_2_1 = (fun _lh_dropWhile_arg1_1_8 -> 
//│           (`LH_N)) in
//│           (fun _lh_dummy_2_1 -> 
//│             (`LH_C(_lh_words_LH_P2_0_2_1, (words_d0_d0_d1_d0_d0 _lh_words_LH_P2_1_2_1))))))
//│     | `LH_C(_lh_break_LH_C_0_7, _lh_break_LH_C_1_7) -> 
//│       (if (_lh_break_arg1_7 _lh_break_LH_C_0_7) then
//│         (let rec _lh_words_LH_P2_0_2_2 = (`LH_N) in
//│           (let rec _lh_words_LH_P2_1_2_2 = (`LH_C(_lh_break_LH_C_0_7, _lh_break_LH_C_1_7)) in
//│             (fun _lh_dummy_2_2 -> 
//│               (`LH_C(_lh_words_LH_P2_0_2_2, (words_d0_d0_d2_d0_d0 _lh_words_LH_P2_1_2_2))))))
//│       else
//│         (let rec _lh_matchIdent_3_2 = ((break1_d0_d0_d0_d0_d0 _lh_break_arg1_7) _lh_break_LH_C_1_7) in
//│           (match _lh_matchIdent_3_2 with
//│             | `LH_P2(_lh_break_LH_P2_0_7, _lh_break_LH_P2_1_7) -> 
//│               (let rec _lh_words_LH_P2_0_2_3 = (`LH_C(_lh_break_LH_C_0_7, _lh_break_LH_P2_0_7)) in
//│                 (let rec _lh_words_LH_P2_1_2_3 = _lh_break_LH_P2_1_7 in
//│                   (fun _lh_dummy_2_3 -> 
//│                     (`LH_C(_lh_words_LH_P2_0_2_3, (words_d0_d0_d3_d0_d0 _lh_words_LH_P2_1_2_3))))))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break_d0_d0_d1_d0_d0 _lh_break_arg1_1_1 _lh_break_arg2_1_1 =
//│   (match _lh_break_arg2_1_1 with
//│     | `LH_N -> 
//│       (let rec _lh_words_LH_P2_0_3_3 = (`LH_N) in
//│         (let rec _lh_words_LH_P2_1_3_3 = (fun _lh_dropWhile_arg1_3_3 -> 
//│           (`LH_N)) in
//│           (fun _lh_dummy_3_3 -> 
//│             (`LH_C(_lh_words_LH_P2_0_3_3, (words_d0_d0_d2_d1_d0 _lh_words_LH_P2_1_3_3))))))
//│     | `LH_C(_lh_break_LH_C_0_1_1, _lh_break_LH_C_1_1_1) -> 
//│       (if (_lh_break_arg1_1_1 _lh_break_LH_C_0_1_1) then
//│         (let rec _lh_words_LH_P2_0_3_4 = (`LH_N) in
//│           (let rec _lh_words_LH_P2_1_3_4 = (`LH_C(_lh_break_LH_C_0_1_1, _lh_break_LH_C_1_1_1)) in
//│             (fun _lh_dummy_3_4 -> 
//│               (`LH_C(_lh_words_LH_P2_0_3_4, (words_d0_d0_d2_d2_d0 _lh_words_LH_P2_1_3_4))))))
//│       else
//│         (let rec _lh_matchIdent_5_5 = ((break1_d0_d0_d1_d0_d0 _lh_break_arg1_1_1) _lh_break_LH_C_1_1_1) in
//│           (match _lh_matchIdent_5_5 with
//│             | `LH_P2(_lh_break_LH_P2_0_1_1, _lh_break_LH_P2_1_1_1) -> 
//│               (let rec _lh_words_LH_P2_0_3_5 = (`LH_C(_lh_break_LH_C_0_1_1, _lh_break_LH_P2_0_1_1)) in
//│                 (let rec _lh_words_LH_P2_1_3_5 = _lh_break_LH_P2_1_1_1 in
//│                   (fun _lh_dummy_3_5 -> 
//│                     (`LH_C(_lh_words_LH_P2_0_3_5, (words_d0_d0_d2_d3_d0 _lh_words_LH_P2_1_3_5))))))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break_d0_d0_d1_d1_d0 _lh_break_arg1_8 _lh_break_arg2_8 =
//│   (match _lh_break_arg2_8 with
//│     | `LH_N -> 
//│       (let rec _lh_words_LH_P2_0_2_4 = (`LH_N) in
//│         (let rec _lh_words_LH_P2_1_2_4 = (fun _lh_dropWhile_arg1_2_2 -> 
//│           (`LH_N)) in
//│           (fun _lh_dummy_2_4 -> 
//│             (`LH_C(_lh_words_LH_P2_0_2_4, (words_d0_d0_d2_d1_d0 _lh_words_LH_P2_1_2_4))))))
//│     | `LH_C(_lh_break_LH_C_0_8, _lh_break_LH_C_1_8) -> 
//│       (if (_lh_break_arg1_8 _lh_break_LH_C_0_8) then
//│         (let rec _lh_words_LH_P2_0_2_5 = (`LH_N) in
//│           (let rec _lh_words_LH_P2_1_2_5 = (let rec _lh_dropWhile_LH_C_0_1_2 = _lh_break_LH_C_0_8 in
//│             (let rec _lh_dropWhile_LH_C_1_1_2 = _lh_break_LH_C_1_8 in
//│               (fun _lh_dropWhile_arg1_2_3 -> 
//│                 (if (_lh_dropWhile_arg1_2_3 _lh_dropWhile_LH_C_0_1_2) then
//│                   ((dropWhile_d0_d0_d1_d0_d1 _lh_dropWhile_arg1_2_3) _lh_dropWhile_LH_C_1_1_2)
//│                 else
//│                   (`LH_C(_lh_dropWhile_LH_C_0_1_2, _lh_dropWhile_LH_C_1_1_2)))))) in
//│             (fun _lh_dummy_2_5 -> 
//│               (`LH_C(_lh_words_LH_P2_0_2_5, (words_d0_d0_d2_d1_d0 _lh_words_LH_P2_1_2_5))))))
//│       else
//│         (let rec _lh_matchIdent_3_4 = ((break1_d0_d0_d1_d1_d0 _lh_break_arg1_8) _lh_break_LH_C_1_8) in
//│           (match _lh_matchIdent_3_4 with
//│             | `LH_P2(_lh_break_LH_P2_0_8, _lh_break_LH_P2_1_8) -> 
//│               (let rec _lh_words_LH_P2_0_2_6 = (`LH_C(_lh_break_LH_C_0_8, _lh_break_LH_P2_0_8)) in
//│                 (let rec _lh_words_LH_P2_1_2_6 = _lh_break_LH_P2_1_8 in
//│                   (fun _lh_dummy_2_6 -> 
//│                     (`LH_C(_lh_words_LH_P2_0_2_6, (words_d0_d0_d2_d1_d0 _lh_words_LH_P2_1_2_6))))))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break_d0_d0_d1_d2_d0 _lh_break_arg1_1_2 _lh_break_arg2_1_2 =
//│   (match _lh_break_arg2_1_2 with
//│     | `LH_N -> 
//│       (let rec _lh_words_LH_P2_0_3_6 = (`LH_N) in
//│         (let rec _lh_words_LH_P2_1_3_6 = (`LH_N) in
//│           (fun _lh_dummy_3_6 -> 
//│             (`LH_C(_lh_words_LH_P2_0_3_6, (words_d0_d0_d2_d3_d0 _lh_words_LH_P2_1_3_6))))))
//│     | `LH_C(_lh_break_LH_C_0_1_2, _lh_break_LH_C_1_1_2) -> 
//│       (if (_lh_break_arg1_1_2 _lh_break_LH_C_0_1_2) then
//│         (let rec _lh_words_LH_P2_0_3_7 = (`LH_N) in
//│           (let rec _lh_words_LH_P2_1_3_7 = (`LH_C(_lh_break_LH_C_0_1_2, _lh_break_LH_C_1_1_2)) in
//│             (fun _lh_dummy_3_7 -> 
//│               (`LH_C(_lh_words_LH_P2_0_3_7, (words_d0_d0_d2_d3_d0 _lh_words_LH_P2_1_3_7))))))
//│       else
//│         (let rec _lh_matchIdent_5_8 = ((break1_d0_d0_d1_d2_d0 _lh_break_arg1_1_2) _lh_break_LH_C_1_1_2) in
//│           (match _lh_matchIdent_5_8 with
//│             | `LH_P2(_lh_break_LH_P2_0_1_2, _lh_break_LH_P2_1_1_2) -> 
//│               (let rec _lh_words_LH_P2_0_3_8 = (`LH_C(_lh_break_LH_C_0_1_2, _lh_break_LH_P2_0_1_2)) in
//│                 (let rec _lh_words_LH_P2_1_3_8 = _lh_break_LH_P2_1_1_2 in
//│                   (fun _lh_dummy_3_8 -> 
//│                     (`LH_C(_lh_words_LH_P2_0_3_8, (words_d0_d0_d2_d3_d0 _lh_words_LH_P2_1_3_8))))))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break_d0_d0_d2_d0_d0 _lh_break_arg1_1_3 _lh_break_arg2_1_3 =
//│   (match _lh_break_arg2_1_3 with
//│     | `LH_N -> 
//│       (let rec _lh_words_LH_P2_0_3_9 = (`LH_N) in
//│         (let rec _lh_words_LH_P2_1_3_9 = (fun _lh_dropWhile_arg1_3_5 -> 
//│           (`LH_N)) in
//│           (fun _lh_dummy_3_9 -> 
//│             (`LH_C(_lh_words_LH_P2_0_3_9, (words_d0_d0_d3_d1_d0 _lh_words_LH_P2_1_3_9))))))
//│     | `LH_C(_lh_break_LH_C_0_1_3, _lh_break_LH_C_1_1_3) -> 
//│       (if (_lh_break_arg1_1_3 _lh_break_LH_C_0_1_3) then
//│         (let rec _lh_words_LH_P2_0_4_0 = (`LH_N) in
//│           (let rec _lh_words_LH_P2_1_4_0 = (`LH_C(_lh_break_LH_C_0_1_3, _lh_break_LH_C_1_1_3)) in
//│             (fun _lh_dummy_4_0 -> 
//│               (`LH_C(_lh_words_LH_P2_0_4_0, (words_d0_d0_d3_d2_d0 _lh_words_LH_P2_1_4_0))))))
//│       else
//│         (let rec _lh_matchIdent_6_1 = ((break1_d0_d0_d2_d0_d0 _lh_break_arg1_1_3) _lh_break_LH_C_1_1_3) in
//│           (match _lh_matchIdent_6_1 with
//│             | `LH_P2(_lh_break_LH_P2_0_1_3, _lh_break_LH_P2_1_1_3) -> 
//│               (let rec _lh_words_LH_P2_0_4_1 = (`LH_C(_lh_break_LH_C_0_1_3, _lh_break_LH_P2_0_1_3)) in
//│                 (let rec _lh_words_LH_P2_1_4_1 = _lh_break_LH_P2_1_1_3 in
//│                   (fun _lh_dummy_4_1 -> 
//│                     (`LH_C(_lh_words_LH_P2_0_4_1, (words_d0_d0_d3_d3_d0 _lh_words_LH_P2_1_4_1))))))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break_d0_d0_d2_d1_d0 _lh_break_arg1_1_0 _lh_break_arg2_1_0 =
//│   (match _lh_break_arg2_1_0 with
//│     | `LH_N -> 
//│       (let rec _lh_words_LH_P2_0_3_0 = (`LH_N) in
//│         (let rec _lh_words_LH_P2_1_3_0 = (`LH_N) in
//│           (fun _lh_dummy_3_0 -> 
//│             (`LH_C(_lh_words_LH_P2_0_3_0, (words_d0_d0_d3_d2_d0 _lh_words_LH_P2_1_3_0))))))
//│     | `LH_C(_lh_break_LH_C_0_1_0, _lh_break_LH_C_1_1_0) -> 
//│       (if (_lh_break_arg1_1_0 _lh_break_LH_C_0_1_0) then
//│         (let rec _lh_words_LH_P2_0_3_1 = (`LH_N) in
//│           (let rec _lh_words_LH_P2_1_3_1 = (`LH_C(_lh_break_LH_C_0_1_0, _lh_break_LH_C_1_1_0)) in
//│             (fun _lh_dummy_3_1 -> 
//│               (`LH_C(_lh_words_LH_P2_0_3_1, (words_d0_d0_d3_d2_d0 _lh_words_LH_P2_1_3_1))))))
//│       else
//│         (let rec _lh_matchIdent_5_2 = ((break1_d0_d0_d2_d1_d0 _lh_break_arg1_1_0) _lh_break_LH_C_1_1_0) in
//│           (match _lh_matchIdent_5_2 with
//│             | `LH_P2(_lh_break_LH_P2_0_1_0, _lh_break_LH_P2_1_1_0) -> 
//│               (let rec _lh_words_LH_P2_0_3_2 = (`LH_C(_lh_break_LH_C_0_1_0, _lh_break_LH_P2_0_1_0)) in
//│                 (let rec _lh_words_LH_P2_1_3_2 = _lh_break_LH_P2_1_1_0 in
//│                   (fun _lh_dummy_3_2 -> 
//│                     (`LH_C(_lh_words_LH_P2_0_3_2, (words_d0_d0_d3_d2_d0 _lh_words_LH_P2_1_3_2))))))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and break_d0_d0_d2_d2_d0 _lh_break_arg1_9 _lh_break_arg2_9 =
//│   (match _lh_break_arg2_9 with
//│     | `LH_N -> 
//│       (let rec _lh_words_LH_P2_0_2_7 = (`LH_N) in
//│         (let rec _lh_words_LH_P2_1_2_7 = (`LH_N) in
//│           (fun _lh_dummy_2_7 -> 
//│             (`LH_C(_lh_words_LH_P2_0_2_7, (words_d0_d0_d3_d3_d0 _lh_words_LH_P2_1_2_7))))))
//│     | `LH_C(_lh_break_LH_C_0_9, _lh_break_LH_C_1_9) -> 
//│       (if (_lh_break_arg1_9 _lh_break_LH_C_0_9) then
//│         (let rec _lh_words_LH_P2_0_2_8 = (`LH_N) in
//│           (let rec _lh_words_LH_P2_1_2_8 = (`LH_C(_lh_break_LH_C_0_9, _lh_break_LH_C_1_9)) in
//│             (fun _lh_dummy_2_8 -> 
//│               (`LH_C(_lh_words_LH_P2_0_2_8, (words_d0_d0_d3_d3_d0 _lh_words_LH_P2_1_2_8))))))
//│       else
//│         (let rec _lh_matchIdent_3_5 = ((break1_d0_d0_d2_d2_d0 _lh_break_arg1_9) _lh_break_LH_C_1_9) in
//│           (match _lh_matchIdent_3_5 with
//│             | `LH_P2(_lh_break_LH_P2_0_9, _lh_break_LH_P2_1_9) -> 
//│               (let rec _lh_words_LH_P2_0_2_9 = (`LH_C(_lh_break_LH_C_0_9, _lh_break_LH_P2_0_9)) in
//│                 (let rec _lh_words_LH_P2_1_2_9 = _lh_break_LH_P2_1_9 in
//│                   (fun _lh_dummy_2_9 -> 
//│                     (`LH_C(_lh_words_LH_P2_0_2_9, (words_d0_d0_d3_d3_d0 _lh_words_LH_P2_1_2_9))))))
//│             | _ -> 
//│               (Obj.magic 99))))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and dropWhile_d0_d0_d0_d0_d0 _lh_dropWhile_arg1_2_7 _lh_dropWhile_arg2_1_7 =
//│   (_lh_dropWhile_arg2_1_7 (Obj.magic 99))
//│ and dropWhile_d0_d0_d1_d0_d0 _lh_dropWhile_arg1_2_1 _lh_dropWhile_arg2_1_3 =
//│   (_lh_dropWhile_arg2_1_3 _lh_dropWhile_arg1_2_1)
//│ and dropWhile_d0_d0_d1_d0_d1 _lh_dropWhile_arg1_2_8 _lh_dropWhile_arg2_1_8 =
//│   (_lh_dropWhile_arg2_1_8 _lh_dropWhile_arg1_2_8)
//│ and dropWhile_d0_d0_d1_d0_d2 _lh_dropWhile_arg1_2_5 _lh_dropWhile_arg2_1_5 =
//│   (_lh_dropWhile_arg2_1_5 _lh_dropWhile_arg1_2_5)
//│ and dropWhile_d0_d0_d1_d1_d0 _lh_dropWhile_arg1_2_6 _lh_dropWhile_arg2_1_6 =
//│   (match _lh_dropWhile_arg2_1_6 with
//│     | `LH_N -> 
//│       (`LH_N)
//│     | `LH_C(_lh_dropWhile_LH_C_0_1_4, _lh_dropWhile_LH_C_1_1_4) -> 
//│       (if (_lh_dropWhile_arg1_2_6 _lh_dropWhile_LH_C_0_1_4) then
//│         ((dropWhile_d0_d0_d1_d1_d0 _lh_dropWhile_arg1_2_6) _lh_dropWhile_LH_C_1_1_4)
//│       else
//│         (`LH_C(_lh_dropWhile_LH_C_0_1_4, _lh_dropWhile_LH_C_1_1_4)))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and dropWhile_d0_d0_d1_d2_d0 _lh_dropWhile_arg1_1_7 _lh_dropWhile_arg2_1_0 =
//│   (match _lh_dropWhile_arg2_1_0 with
//│     | `LH_N -> 
//│       (`LH_N)
//│     | `LH_C(_lh_dropWhile_LH_C_0_9, _lh_dropWhile_LH_C_1_9) -> 
//│       (if (_lh_dropWhile_arg1_1_7 _lh_dropWhile_LH_C_0_9) then
//│         ((dropWhile_d0_d0_d1_d2_d0 _lh_dropWhile_arg1_1_7) _lh_dropWhile_LH_C_1_9)
//│       else
//│         (`LH_C(_lh_dropWhile_LH_C_0_9, _lh_dropWhile_LH_C_1_9)))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and dropWhile_d0_d0_d1_d3_d0 _lh_dropWhile_arg1_2_4 _lh_dropWhile_arg2_1_4 =
//│   (match _lh_dropWhile_arg2_1_4 with
//│     | `LH_N -> 
//│       (`LH_N)
//│     | `LH_C(_lh_dropWhile_LH_C_0_1_3, _lh_dropWhile_LH_C_1_1_3) -> 
//│       (if (_lh_dropWhile_arg1_2_4 _lh_dropWhile_LH_C_0_1_3) then
//│         ((dropWhile_d0_d0_d1_d3_d0 _lh_dropWhile_arg1_2_4) _lh_dropWhile_LH_C_1_1_3)
//│       else
//│         (`LH_C(_lh_dropWhile_LH_C_0_1_3, _lh_dropWhile_LH_C_1_1_3)))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and dropWhile_d0_d0_d2_d0_d0 _lh_dropWhile_arg1_3_1 _lh_dropWhile_arg2_1_9 =
//│   (_lh_dropWhile_arg2_1_9 (Obj.magic 99))
//│ and dropWhile_d0_d0_d2_d1_d0 _lh_dropWhile_arg1_1_9 _lh_dropWhile_arg2_1_1 =
//│   (match _lh_dropWhile_arg2_1_1 with
//│     | `LH_N -> 
//│       (`LH_N)
//│     | `LH_C(_lh_dropWhile_LH_C_0_1_0, _lh_dropWhile_LH_C_1_1_0) -> 
//│       (if (_lh_dropWhile_arg1_1_9 _lh_dropWhile_LH_C_0_1_0) then
//│         ((dropWhile_d0_d0_d2_d1_d0 _lh_dropWhile_arg1_1_9) _lh_dropWhile_LH_C_1_1_0)
//│       else
//│         (`LH_C(_lh_dropWhile_LH_C_0_1_0, _lh_dropWhile_LH_C_1_1_0)))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and dropWhile_d0_d0_d2_d2_d0 _lh_dropWhile_arg1_3_4 _lh_dropWhile_arg2_2_1 =
//│   (match _lh_dropWhile_arg2_2_1 with
//│     | `LH_N -> 
//│       (`LH_N)
//│     | `LH_C(_lh_dropWhile_LH_C_0_1_7, _lh_dropWhile_LH_C_1_1_7) -> 
//│       (if (_lh_dropWhile_arg1_3_4 _lh_dropWhile_LH_C_0_1_7) then
//│         ((dropWhile_d0_d0_d2_d2_d0 _lh_dropWhile_arg1_3_4) _lh_dropWhile_LH_C_1_1_7)
//│       else
//│         (`LH_C(_lh_dropWhile_LH_C_0_1_7, _lh_dropWhile_LH_C_1_1_7)))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and dropWhile_d0_d0_d2_d3_d0 _lh_dropWhile_arg1_3_2 _lh_dropWhile_arg2_2_0 =
//│   (match _lh_dropWhile_arg2_2_0 with
//│     | `LH_N -> 
//│       (`LH_N)
//│     | `LH_C(_lh_dropWhile_LH_C_0_1_6, _lh_dropWhile_LH_C_1_1_6) -> 
//│       (if (_lh_dropWhile_arg1_3_2 _lh_dropWhile_LH_C_0_1_6) then
//│         ((dropWhile_d0_d0_d2_d3_d0 _lh_dropWhile_arg1_3_2) _lh_dropWhile_LH_C_1_1_6)
//│       else
//│         (`LH_C(_lh_dropWhile_LH_C_0_1_6, _lh_dropWhile_LH_C_1_1_6)))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and dropWhile_d0_d0_d3_d0_d0 _lh_dropWhile_arg1_2_0 _lh_dropWhile_arg2_1_2 =
//│   (match _lh_dropWhile_arg2_1_2 with
//│     | `LH_N -> 
//│       (`LH_N)
//│     | `LH_C(_lh_dropWhile_LH_C_0_1_1, _lh_dropWhile_LH_C_1_1_1) -> 
//│       (if (_lh_dropWhile_arg1_2_0 _lh_dropWhile_LH_C_0_1_1) then
//│         ((dropWhile_d0_d0_d3_d0_d0 _lh_dropWhile_arg1_2_0) _lh_dropWhile_LH_C_1_1_1)
//│       else
//│         (`LH_C(_lh_dropWhile_LH_C_0_1_1, _lh_dropWhile_LH_C_1_1_1)))
//│     | _ -> 
//│       (Obj.magic 99))
//│ and words_d0_d0_d0_d0_d0 _lh_words_arg1_1_1 =
//│   (let rec _lh_matchIdent_4_1 = ((dropWhile_d0_d0_d3_d0_d0 (fun x_1_8 -> 
//│     (x_1_8 = ' '))) _lh_words_arg1_1_1) in
//│     (match _lh_matchIdent_4_1 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (let rec _lh_matchIdent_4_2 = ((break_d0_d0_d0_d0_d0 (fun x_1_9 -> 
//│           (x_1_9 = ' '))) _lh_matchIdent_4_1) in
//│           (_lh_matchIdent_4_2 99))))
//│ and words_d0_d0_d1_d0_d0 _lh_words_arg1_1_6 =
//│   (let rec _lh_matchIdent_5_1 = ((dropWhile_d0_d0_d0_d0_d0 (Obj.magic 99)) _lh_words_arg1_1_6) in
//│     (match _lh_matchIdent_5_1 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (Obj.magic 99)))
//│ and words_d0_d0_d2_d0_d0 _lh_words_arg1_1_2 =
//│   (let rec _lh_matchIdent_4_3 = ((dropWhile_d0_d0_d1_d3_d0 (fun x_2_0 -> 
//│     (x_2_0 = ' '))) _lh_words_arg1_1_2) in
//│     (match _lh_matchIdent_4_3 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (let rec _lh_matchIdent_4_4 = ((break_d0_d0_d1_d0_d0 (fun x_2_1 -> 
//│           (x_2_1 = ' '))) _lh_matchIdent_4_3) in
//│           (_lh_matchIdent_4_4 99))))
//│ and words_d0_d0_d2_d1_d0 _lh_words_arg1_1_0 =
//│   (let rec _lh_matchIdent_3_6 = ((dropWhile_d0_d0_d1_d0_d2 (fun x_1_6 -> 
//│     (x_1_6 = ' '))) _lh_words_arg1_1_0) in
//│     (match _lh_matchIdent_3_6 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (let rec _lh_matchIdent_3_7 = ((break_d0_d0_d1_d1_d0 (fun x_1_7 -> 
//│           (x_1_7 = ' '))) _lh_matchIdent_3_6) in
//│           (_lh_matchIdent_3_7 99))))
//│ and words_d0_d0_d2_d2_d0 _lh_words_arg1_1_5 =
//│   (let rec _lh_matchIdent_4_8 = ((dropWhile_d0_d0_d1_d1_d0 (fun x_2_4 -> 
//│     (x_2_4 = ' '))) _lh_words_arg1_1_5) in
//│     (match _lh_matchIdent_4_8 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (let rec _lh_matchIdent_4_9 = ((break_d0_d0_d1_d0_d0 (fun x_2_5 -> 
//│           (x_2_5 = ' '))) _lh_matchIdent_4_8) in
//│           (_lh_matchIdent_4_9 99))))
//│ and words_d0_d0_d2_d3_d0 _lh_words_arg1_1_9 =
//│   (let rec _lh_matchIdent_6_2 = ((dropWhile_d0_d0_d1_d2_d0 (fun x_3_0 -> 
//│     (x_3_0 = ' '))) _lh_words_arg1_1_9) in
//│     (match _lh_matchIdent_6_2 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (let rec _lh_matchIdent_6_3 = ((break_d0_d0_d1_d2_d0 (fun x_3_1 -> 
//│           (x_3_1 = ' '))) _lh_matchIdent_6_2) in
//│           (_lh_matchIdent_6_3 99))))
//│ and words_d0_d0_d3_d0_d0 _lh_words_arg1_1_8 =
//│   (let rec _lh_matchIdent_5_9 = ((dropWhile_d0_d0_d2_d3_d0 (fun x_2_8 -> 
//│     (x_2_8 = ' '))) _lh_words_arg1_1_8) in
//│     (match _lh_matchIdent_5_9 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (let rec _lh_matchIdent_6_0 = ((break_d0_d0_d2_d0_d0 (fun x_2_9 -> 
//│           (x_2_9 = ' '))) _lh_matchIdent_5_9) in
//│           (_lh_matchIdent_6_0 99))))
//│ and words_d0_d0_d3_d1_d0 _lh_words_arg1_1_4 =
//│   (let rec _lh_matchIdent_4_7 = ((dropWhile_d0_d0_d2_d0_d0 (Obj.magic 99)) _lh_words_arg1_1_4) in
//│     (match _lh_matchIdent_4_7 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (Obj.magic 99)))
//│ and words_d0_d0_d3_d2_d0 _lh_words_arg1_1_3 =
//│   (let rec _lh_matchIdent_4_5 = ((dropWhile_d0_d0_d2_d1_d0 (fun x_2_2 -> 
//│     (x_2_2 = ' '))) _lh_words_arg1_1_3) in
//│     (match _lh_matchIdent_4_5 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (let rec _lh_matchIdent_4_6 = ((break_d0_d0_d2_d1_d0 (fun x_2_3 -> 
//│           (x_2_3 = ' '))) _lh_matchIdent_4_5) in
//│           (_lh_matchIdent_4_6 99))))
//│ and words_d0_d0_d3_d3_d0 _lh_words_arg1_1_7 =
//│   (let rec _lh_matchIdent_5_6 = ((dropWhile_d0_d0_d2_d2_d0 (fun x_2_6 -> 
//│     (x_2_6 = ' '))) _lh_words_arg1_1_7) in
//│     (match _lh_matchIdent_5_6 with
//│       | `LH_N -> 
//│         (`LH_N)
//│       | _ -> 
//│         (let rec _lh_matchIdent_5_7 = ((break_d0_d0_d2_d2_d0 (fun x_2_7 -> 
//│           (x_2_7 = ' '))) _lh_matchIdent_5_6) in
//│           (_lh_matchIdent_5_7 99))));;
//│ (words_d0_d0_d0_d0_d0 (`LH_C('1', (`LH_C(' ', (`LH_C('2', (`LH_C(' ', (`LH_C('4', (`LH_N))))))))))))
//│ 
//│ --------------- ocaml repl result -----------------
//│ /!!!\ Uncaught error: java.lang.Exception:                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Line 308, characters 3-25:
//│ 308 |   (_lh_dropWhile_arg2_1_3 _lh_dropWhile_arg1_2_1)
//│          ^^^^^^^^^^^^^^^^^^^^^^
//│ Error: This expression has type [> `LH_C of 'b * 'a | `LH_N ] as 'a
//│        This is not a function; it cannot be applied.


// FIXME: the type error can be eliminated by expanding again to
// eliminate dead codes (totally unreachable definitions) that appear
// after removing dead branches
:lhGenOCaml
:d
fun break(p, ls) = if ls is
  N then P(N, N)
  C(x, xs) then if p(x) then P(N, C(x, xs)) else if break1(p, xs) is
    P(ys, zs) then P(C(x, ys), zs)
fun break1(p, ls) = if ls is
  N then P(N, N)
  C(x, xs) then if p(x) then P(N, C(x, xs)) else if break1(p, xs) is
    P(ys, zs) then P(C(x, ys), zs)
fun words(s) = if dropWhile(x => x == 1, s) is
  N then N
  s' then if break(x => x == 1, s') is
    P(w, s'') then C(w, words(s''))
fun dropWhile(f, ls) = if ls is
  N then N
  C(h, t) then if f(h) then dropWhile(f, t) else C(h, t)
words(C(2, C(1, C(2, C(1, C(2, N))))))
//│ |#fun| |break|(|p|,| |ls|)| |#=| |#if| |ls| |is|→|N| |#then| |P|(|N|,| |N|)|↵|C|(|x|,| |xs|)| |#then| |#if| |p|(|x|)| |#then| |P|(|N|,| |C|(|x|,| |xs|)|)| |#else| |#if| |break1|(|p|,| |xs|)| |is|→|P|(|ys|,| |zs|)| |#then| |P|(|C|(|x|,| |ys|)|,| |zs|)|←|←|↵|#fun| |break1|(|p|,| |ls|)| |#=| |#if| |ls| |is|→|N| |#then| |P|(|N|,| |N|)|↵|C|(|x|,| |xs|)| |#then| |#if| |p|(|x|)| |#then| |P|(|N|,| |C|(|x|,| |xs|)|)| |#else| |#if| |break1|(|p|,| |xs|)| |is|→|P|(|ys|,| |zs|)| |#then| |P|(|C|(|x|,| |ys|)|,| |zs|)|←|←|↵|#fun| |words|(|s|)| |#=| |#if| |dropWhile|(|x| |=>| |x| |==| |1|,| |s|)| |is|→|N| |#then| |N|↵|s'| |#then| |#if| |break|(|x| |=>| |x| |==| |1|,| |s'|)| |is|→|P|(|w|,| |s''|)| |#then| |C|(|w|,| |words|(|s''|)|)|←|←|↵|#fun| |dropWhile|(|f|,| |ls|)| |#=| |#if| |ls| |is|→|N| |#then| |N|↵|C|(|h|,| |t|)| |#then| |#if| |f|(|h|)| |#then| |dropWhile|(|f|,| |t|)| |#else| |C|(|h|,| |t|)|←|↵|words|(|C|(|2|,| |C|(|1|,| |C|(|2|,| |C|(|1|,| |C|(|2|,| |N|)|)|)|)|)|)|
//│ Parsed: {fun break = p, ls, => if ls is ‹(N) then P (N, N,); (C (x, xs,)) then if (p (x,)) then P (N, C (x, xs,),) else if break1 (p, xs,) is ‹(P (ys, zs,)) then P (C (x, ys,), zs,)››; fun break1 = p, ls, => if ls is ‹(N) then P (N, N,); (C (x, xs,)) then if (p (x,)) then P (N, C (x, xs,),) else if break1 (p, xs,) is ‹(P (ys, zs,)) then P (C (x, ys,), zs,)››; fun words = s, => if dropWhile (x, => == (x,) (1,), s,) is ‹(N) then N; (s') then if break (x, => == (x,) (1,), s',) is ‹(P (w, s'',)) then C (w, words (s'',),)››; fun dropWhile = f, ls, => if ls is ‹(N) then N; (C (h, t,)) then if (f (h,)) then dropWhile (f, t,) else C (h, t,)›; words (C (2, C (1, C (2, C (1, C (2, N,),),),),),)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ words^101([C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]])
//│ def break(p⁰, ls⁰) = case ls⁰ of {
//│ 	N  => [P [N] [N]]
//│ 	| C x⁰ xs⁰ => if p⁰(x⁰) then [P [N] [C x⁰ xs⁰]] else case break1^13(p⁰, xs⁰) of {
//│ 		P ys⁰ zs⁰ => [P [C x⁰ ys⁰] zs⁰]}}
//│ def break1(p¹, ls¹) = case ls¹ of {
//│ 	N  => [P [N] [N]]
//│ 	| C x¹ xs¹ => if p¹(x¹) then [P [N] [C x¹ xs¹]] else case break1^40(p¹, xs¹) of {
//│ 		P ys¹ zs¹ => [P [C x¹ ys¹] zs¹]}}
//│ def dropWhile(f⁰, ls²) = case ls² of {
//│ 	N  => [N]
//│ 	| C h⁰ t⁰ => if f⁰(h⁰) then dropWhile^89(f⁰, t⁰) else [C h⁰ t⁰]}
//│ def words(s⁰) = case dropWhile^55((fun x² -> (x² == 1)), s⁰) of {
//│ 	N  => [N]
//│ 	| s'⁰ => case break^66((fun x³ -> (x³ == 1)), s'⁰) of {
//│ 		P w⁰ s''⁰ => [C w⁰ words^77(s''⁰)]}}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec break p_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `N -> 
//│ 		      (`P((`N), (`N)))
//│ 		    | `C(x_0, xs_0) -> 
//│ 		      (if (p_0 x_0) then
//│ 		        (`P((`N), (`C(x_0, xs_0))))
//│ 		      else
//│ 		        (match ((break1 p_0) xs_0) with
//│ 		          | `P(ys_0, zs_0) -> 
//│ 		            (`P((`C(x_0, ys_0)), zs_0)))))
//│ 		and break1 p_1 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `N -> 
//│ 		      (`P((`N), (`N)))
//│ 		    | `C(x_1, xs_1) -> 
//│ 		      (if (p_1 x_1) then
//│ 		        (`P((`N), (`C(x_1, xs_1))))
//│ 		      else
//│ 		        (match ((break1 p_1) xs_1) with
//│ 		          | `P(ys_1, zs_1) -> 
//│ 		            (`P((`C(x_1, ys_1)), zs_1)))))
//│ 		and dropWhile f_0 ls_2 =
//│ 		  (match ls_2 with
//│ 		    | `N -> 
//│ 		      (`N)
//│ 		    | `C(h_0, t_0) -> 
//│ 		      (if (f_0 h_0) then
//│ 		        ((dropWhile f_0) t_0)
//│ 		      else
//│ 		        (`C(h_0, t_0))))
//│ 		and words s_0 =
//│ 		  (match ((dropWhile (fun x_2 -> 
//│ 		    (x_2 = 1))) s_0) with
//│ 		    | `N -> 
//│ 		      (`N)
//│ 		    | s'_0 -> 
//│ 		      (match ((break (fun x_3 -> 
//│ 		        (x_3 = 1))) s'_0) with
//│ 		        | `P(w_0, s''_0) -> 
//│ 		          (`C(w_0, (words s''_0)))));;
//│ 		(words (`C(2, (`C(1, (`C(2, (`C(1, (`C(2, (`N))))))))))))
//│ 		....... ocaml repl result .......
//│ 		[ok]
//│ 		                                                                                val break :
//│ 		  (int -> bool) ->
//│ 		  [ `C of int * ([ `C of int * 'a | `N ] as 'a) | `N ] ->
//│ 		  [ `P of
//│ 		      [> `C of int * ([> `C of int * 'b | `N ] as 'b) | `N ] *
//│ 		      [ `C of int * 'a | `N ] ] =
//│ 		  <fun>
//│ 		val break1 :
//│ 		  (int -> bool) ->
//│ 		  ([ `C of int * 'a | `N ] as 'a) ->
//│ 		  [ `P of ([> `C of int * 'b | `N ] as 'b) * [ `C of int * 'a | `N ] ] =
//│ 		  <fun>
//│ 		val dropWhile :
//│ 		  (int -> bool) -> ([ `C of int * 'a | `N ] as 'a) -> [ `C of int * 'a | `N ] =
//│ 		  <fun>
//│ 		val words :
//│ 		  ([ `C of int * 'a | `N ] as 'a) ->
//│ 		  ([> `C of [> `C of int * ([> `C of int * 'c | `N ] as 'c) | `N ] * 'b | `N
//│ 		   ] as 'b) =
//│ 		  <fun>
//│ 		....... ocaml repl result .......
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [words^101]
//│ 	[words^101 · break^66]
//│ 		[words^101 · break^66 · break1^13]
//│ 			[words^101 · break^66 · break1^13 · break1^40] ---> [words^101 · break^66 · break1^13] (only one)
//│ 	[words^101 · dropWhile^55]
//│ 		[words^101 · dropWhile^55 · dropWhile^89] ---> [words^101 · dropWhile^55] (only one)
//│ 	[words^101 · words^77] ---> [words^101] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ words₀([C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]])
//│ def words₀(s¹) = 
//│ 	case dropWhile₀((fun x⁵ -> (x⁵ == 1)), s¹) of {
//│ 		N  => [N]
//│ 		| s'¹ => case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {
//│ 			P w¹ s''¹ => [C w¹ words₀(s''¹)]}}
//│ 	where
//│ 	def break₀(p², ls⁴) = 
//│ 		case ls⁴ of {
//│ 			N  => [P [N] [N]]
//│ 			| C x⁴ xs² => if p²(x⁴) then [P [N] [C x⁴ xs²]] else case break1₀(p², xs²) of {
//│ 				P ys² zs² => [P [C x⁴ ys²] zs²]}}
//│ 		where
//│ 		def break1₀(p³, ls⁵) = 
//│ 			case ls⁵ of {
//│ 				N  => [P [N] [N]]
//│ 				| C x⁷ xs³ => if p³(x⁷) then [P [N] [C x⁷ xs³]] else case break1₀(p³, xs³) of {
//│ 					P ys³ zs³ => [P [C x⁷ ys³] zs³]}}
//│ 	def dropWhile₀(f¹, ls³) = 
//│ 		case ls³ of {
//│ 			N  => [N]
//│ 			| C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [N]: 115 --->
//│ 	case dropWhile₀((fun x⁵ -> (x⁵ == 1)), s¹) of {N  => [N] | s'¹ => case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}}: 185
//│ [C h¹ t¹]: 126 --->
//│ 	case ls⁴ of {N  => [P [N] [N]] | C x⁴ xs² => if p²(x⁴) then [P [N] [C x⁴ xs²]] else case break1₀(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}}: 155
//│ 	case dropWhile₀((fun x⁵ -> (x⁵ == 1)), s¹) of {N  => [N] | s'¹ => case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}}: 185
//│ [N]: 133 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ [P [N] [N]]: 134 --->
//│ 	case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}: 184
//│ [C x⁴ xs²]: 141 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ [P [N] [C x⁴ xs²]]: 142 --->
//│ 	case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}: 184
//│ [P [C x⁴ ys²] zs²]: 152 --->
//│ 	case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}: 184
//│ [N]: 189 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ [P [N] [N]]: 190 --->
//│ 	case break1₀(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}: 153
//│ 	case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}: 209
//│ [C x⁷ xs³]: 197 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ [P [N] [C x⁷ xs³]]: 198 --->
//│ 	case break1₀(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}: 153
//│ 	case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}: 209
//│ [P [C x⁷ ys³] zs³]: 208 --->
//│ 	case break1₀(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}: 153
//│ 	case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}: 209
//│ [N]: 220 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ 	case ls⁵ of {N  => [P [N] [N]] | C x⁷ xs³ => if p³(x⁷) then [P [N] [C x⁷ xs³]] else case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}}: 211
//│ [C 2 [N]]: 221 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ 	case ls⁵ of {N  => [P [N] [N]] | C x⁷ xs³ => if p³(x⁷) then [P [N] [C x⁷ xs³]] else case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}}: 211
//│ [C 1 [C 2 [N]]]: 222 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ 	case ls⁵ of {N  => [P [N] [N]] | C x⁷ xs³ => if p³(x⁷) then [P [N] [C x⁷ xs³]] else case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}}: 211
//│ [C 2 [C 1 [C 2 [N]]]]: 223 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ 	case ls⁵ of {N  => [P [N] [N]] | C x⁷ xs³ => if p³(x⁷) then [P [N] [C x⁷ xs³]] else case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}}: 211
//│ [C 1 [C 2 [C 1 [C 2 [N]]]]]: 224 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ 	case ls⁵ of {N  => [P [N] [N]] | C x⁷ xs³ => if p³(x⁷) then [P [N] [C x⁷ xs³]] else case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}}: 211
//│ [C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]]: 225 --->
//│ 	case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128
//│ ------------------
//│ case ls³ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀(f¹, t¹) else [C h¹ t¹]}: 128 --->
//│ 	[N]: 133
//│ 	[C x⁴ xs²]: 141
//│ 	[N]: 189
//│ 	[C x⁷ xs³]: 197
//│ 	[N]: 220
//│ 	[C 2 [N]]: 221
//│ 	[C 1 [C 2 [N]]]: 222
//│ 	[C 2 [C 1 [C 2 [N]]]]: 223
//│ 	[C 1 [C 2 [C 1 [C 2 [N]]]]]: 224
//│ 	[C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]]: 225
//│ case break1₀(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}: 153 --->
//│ 	[P [N] [N]]: 190
//│ 	[P [N] [C x⁷ xs³]]: 198
//│ 	[P [C x⁷ ys³] zs³]: 208
//│ case ls⁴ of {N  => [P [N] [N]] | C x⁴ xs² => if p²(x⁴) then [P [N] [C x⁴ xs²]] else case break1₀(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}}: 155 --->
//│ 	[C h¹ t¹]: 126
//│ case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}: 184 --->
//│ 	[P [N] [N]]: 134
//│ 	[P [N] [C x⁴ xs²]]: 142
//│ 	[P [C x⁴ ys²] zs²]: 152
//│ case dropWhile₀((fun x⁵ -> (x⁵ == 1)), s¹) of {N  => [N] | s'¹ => case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}}: 185 --->
//│ 	[N]: 115
//│ 	[C h¹ t¹]: 126
//│ case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}: 209 --->
//│ 	[P [N] [N]]: 190
//│ 	[P [N] [C x⁷ xs³]]: 198
//│ 	[P [C x⁷ ys³] zs³]: 208
//│ case ls⁵ of {N  => [P [N] [N]] | C x⁷ xs³ => if p³(x⁷) then [P [N] [C x⁷ xs³]] else case break1₀(p³, xs³) of {P ys³ zs³ => [P [C x⁷ ys³] zs³]}}: 211 --->
//│ 	[N]: 220
//│ 	[C 2 [N]]: 221
//│ 	[C 1 [C 2 [N]]]: 222
//│ 	[C 2 [C 1 [C 2 [N]]]]: 223
//│ 	[C 1 [C 2 [C 1 [C 2 [N]]]]]: 224
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [P [N] [N]]: 134 --->
//│ 	case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}: 184
//│ [P [N] [C x⁴ xs²]]: 142 --->
//│ 	case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}: 184
//│ [P [C x⁴ ys²] zs²]: 152 --->
//│ 	case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}: 184
//│ ------------------
//│ case break₀((fun x⁶ -> (x⁶ == 1)), s'¹) of {P w¹ s''¹ => [C w¹ words₀(s''¹)]}: 184 --->
//│ 	[P [N] [N]]: 134
//│ 	[P [N] [C x⁴ xs²]]: 142
//│ 	[P [C x⁴ ys²] zs²]: 152
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ words₀([C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]])
//│ def words₀(s²) = 
//│ 	case dropWhile₀((fun x⁸ -> (x⁸ == 1)), s²) of {
//│ 		N  => [N]
//│ 		| s'¹ => break₀((fun x⁹ -> (x⁹ == 1)), s'¹, 99)}
//│ 	where
//│ 	def break₀(p⁴, ls⁷) = 
//│ 		case ls⁷ of {
//│ 			N  => 
//│ 				let w² = [N]
//│ 				in let s''² = [N]
//│ 				in (fun _lh_dummy⁰ -> [C w² words₀(s''²)])
//│ 			| C x⁴ xs² => if p⁴(x⁴) then 
//│ 				let w³ = [N]
//│ 				in let s''³ = [C x⁴ xs²]
//│ 				in (fun _lh_dummy¹ -> [C w³ words₀(s''³)]) else case break1₀(p⁴, xs²) of {
//│ 				P ys² zs² => 
//│ 					let w⁴ = [C x⁴ ys²]
//│ 					in let s''⁴ = zs²
//│ 					in (fun _lh_dummy² -> [C w⁴ words₀(s''⁴)])}}
//│ 		where
//│ 		def break1₀(p⁵, ls⁸) = 
//│ 			case ls⁸ of {
//│ 				N  => [P [N] [N]]
//│ 				| C x⁷ xs³ => if p⁵(x⁷) then [P [N] [C x⁷ xs³]] else case break1₀(p⁵, xs³) of {
//│ 					P ys³ zs³ => [P [C x⁷ ys³] zs³]}}
//│ 	def dropWhile₀(f², ls⁶) = 
//│ 		case ls⁶ of {
//│ 			N  => [N]
//│ 			| C h¹ t¹ => if f²(h¹) then dropWhile₀(f², t¹) else [C h¹ t¹]}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [words₀^1]
//│ 	[words₀^1 · break₀^90]
//│ 		[words₀^1 · break₀^90 · break1₀^57] (hopeless to continue)
//│ 			[words₀^1 · break₀^90 · break1₀^57 · break1₀^116] ---> [words₀^1 · break₀^90 · break1₀^57] (using original def)
//│ 		[words₀^1 · break₀^90 · words₀^35] (hopeless to continue)
//│ 			[words₀^1 · break₀^90 · words₀^35 · break₀^90] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^35 · break₀^90 · break1₀^57] (using original def)
//│ 					[words₀^1 · break₀^90 · words₀^35 · break₀^90 · break1₀^57 · break1₀^116] ---> [words₀^1 · break₀^90 · words₀^35 · break₀^90 · break1₀^57] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^35 · break₀^90 · words₀^35] ---> [words₀^1 · break₀^90 · words₀^35] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^35 · break₀^90 · words₀^50] ---> [words₀^1 · break₀^90 · words₀^35] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^35 · break₀^90 · words₀^67] ---> [words₀^1 · break₀^90 · words₀^35] (using original def)
//│ 			[words₀^1 · break₀^90 · words₀^35 · dropWhile₀^79] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^35 · dropWhile₀^79 · dropWhile₀^19] ---> [words₀^1 · break₀^90 · words₀^35 · dropWhile₀^79] (using original def)
//│ 		[words₀^1 · break₀^90 · words₀^50]
//│ 			[words₀^1 · break₀^90 · words₀^50 · break₀^90] ---> [words₀^1 · break₀^90] (only one)
//│ 			[words₀^1 · break₀^90 · words₀^50 · dropWhile₀^79] (hopeless to continue)
//│ 				[words₀^1 · break₀^90 · words₀^50 · dropWhile₀^79 · dropWhile₀^19] ---> [words₀^1 · break₀^90 · words₀^50 · dropWhile₀^79] (using original def)
//│ 		[words₀^1 · break₀^90 · words₀^67] (hopeless to continue)
//│ 			[words₀^1 · break₀^90 · words₀^67 · break₀^90] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^67 · break₀^90 · break1₀^57] (using original def)
//│ 					[words₀^1 · break₀^90 · words₀^67 · break₀^90 · break1₀^57 · break1₀^116] ---> [words₀^1 · break₀^90 · words₀^67 · break₀^90 · break1₀^57] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^67 · break₀^90 · words₀^35] ---> [words₀^1 · break₀^90 · words₀^67] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^67 · break₀^90 · words₀^50] ---> [words₀^1 · break₀^90 · words₀^67] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^67 · break₀^90 · words₀^67] ---> [words₀^1 · break₀^90 · words₀^67] (using original def)
//│ 			[words₀^1 · break₀^90 · words₀^67 · dropWhile₀^79] (using original def)
//│ 				[words₀^1 · break₀^90 · words₀^67 · dropWhile₀^79 · dropWhile₀^19] ---> [words₀^1 · break₀^90 · words₀^67 · dropWhile₀^79] (using original def)
//│ 	[words₀^1 · dropWhile₀^79]
//│ 		[words₀^1 · dropWhile₀^79 · dropWhile₀^19] ---> [words₀^1 · dropWhile₀^79] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ words₀₀([C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]])
//│ def words₀₀(s²) = 
//│ 	case dropWhile₀₃((fun x⁹ -> (x⁹ == 1)), s²) of {
//│ 		N  => [N]
//│ 		| s'² => break₀₀((fun x¹⁰ -> (x¹⁰ == 1)), s'², 99)}
//│ 	where
//│ 	def break₀₀(p⁶, ls¹¹) = 
//│ 		case ls¹¹ of {
//│ 			N  => 
//│ 				let w⁹ = [N]
//│ 				in let s''⁹ = [N]
//│ 				in (fun _lh_dummy⁹ -> [C w⁹ words₀₁(s''⁹)])
//│ 			| C x¹² xs⁶ => if p⁶(x¹²) then 
//│ 				let w¹⁰ = [N]
//│ 				in let s''¹⁰ = [C x¹² xs⁶]
//│ 				in (fun _lh_dummy¹⁰ -> [C w¹⁰ words₀₂(s''¹⁰)]) else case break1₀₀(p⁶, xs⁶) of {
//│ 				P ys⁶ zs⁶ => 
//│ 					let w¹¹ = [C x¹² ys⁶]
//│ 					in let s''¹¹ = zs⁶
//│ 					in (fun _lh_dummy¹¹ -> [C w¹¹ words₀₃(s''¹¹)])}}
//│ 		where
//│ 		def break1₀₀(p³, ls⁴) = 
//│ 			case ls⁴ of {
//│ 				N  => [P [N] [N]]
//│ 				| C x⁵ xs³ => if p³(x⁵) then [P [N] [C x⁵ xs³]] else case break1₀₀(p³, xs³) of {
//│ 					P ys³ zs³ => [P [C x⁵ ys³] zs³]}}
//│ 		def words₀₁(s¹) = 
//│ 			case dropWhile₀₀((fun x⁷ -> (x⁷ == 1)), s¹) of {
//│ 				N  => [N]
//│ 				| s'¹ => break₀₁((fun x⁸ -> (x⁸ == 1)), s'¹, 99)}
//│ 			where
//│ 			def break₀₁(p⁵, ls¹⁰) = 
//│ 				case ls¹⁰ of {
//│ 					N  => 
//│ 						let w⁶ = [N]
//│ 						in let s''⁶ = [N]
//│ 						in (fun _lh_dummy⁶ -> [C w⁶ words₀₁(s''⁶)])
//│ 					| C x¹¹ xs⁵ => if p⁵(x¹¹) then 
//│ 						let w⁷ = [N]
//│ 						in let s''⁷ = [C x¹¹ xs⁵]
//│ 						in (fun _lh_dummy⁷ -> [C w⁷ words₀₁(s''⁷)]) else case break1₀₁(p⁵, xs⁵) of {
//│ 						P ys⁵ zs⁵ => 
//│ 							let w⁸ = [C x¹¹ ys⁵]
//│ 							in let s''⁸ = zs⁵
//│ 							in (fun _lh_dummy⁸ -> [C w⁸ words₀₁(s''⁸)])}}
//│ 				where
//│ 				def break1₀₁(p², ls³) = 
//│ 					case ls³ of {
//│ 						N  => [P [N] [N]]
//│ 						| C x⁴ xs² => if p²(x⁴) then [P [N] [C x⁴ xs²]] else case break1₀₁(p², xs²) of {
//│ 							P ys² zs² => [P [C x⁴ ys²] zs²]}}
//│ 			def dropWhile₀₀(f¹, ls⁶) = 
//│ 				case ls⁶ of {
//│ 					N  => [N]
//│ 					| C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}
//│ 		def words₀₂(s⁴) = 
//│ 			case dropWhile₀₁((fun x¹⁶ -> (x¹⁶ == 1)), s⁴) of {
//│ 				N  => [N]
//│ 				| s'⁴ => break₀₀((fun x¹⁷ -> (x¹⁷ == 1)), s'⁴, 99)}
//│ 			where
//│ 			def dropWhile₀₁(f², ls⁷) = 
//│ 				case ls⁷ of {
//│ 					N  => [N]
//│ 					| C h² t² => if f²(h²) then dropWhile₀₁(f², t²) else [C h² t²]}
//│ 		def words₀₃(s³) = 
//│ 			case dropWhile₀₂((fun x¹³ -> (x¹³ == 1)), s³) of {
//│ 				N  => [N]
//│ 				| s'³ => break₀₂((fun x¹⁴ -> (x¹⁴ == 1)), s'³, 99)}
//│ 			where
//│ 			def break₀₂(p⁴, ls⁵) = 
//│ 				case ls⁵ of {
//│ 					N  => 
//│ 						let w³ = [N]
//│ 						in let s''³ = [N]
//│ 						in (fun _lh_dummy³ -> [C w³ words₀₃(s''³)])
//│ 					| C x⁶ xs⁴ => if p⁴(x⁶) then 
//│ 						let w⁴ = [N]
//│ 						in let s''⁴ = [C x⁶ xs⁴]
//│ 						in (fun _lh_dummy⁴ -> [C w⁴ words₀₃(s''⁴)]) else case break1₀₂(p⁴, xs⁴) of {
//│ 						P ys⁴ zs⁴ => 
//│ 							let w⁵ = [C x⁶ ys⁴]
//│ 							in let s''⁵ = zs⁴
//│ 							in (fun _lh_dummy⁵ -> [C w⁵ words₀₃(s''⁵)])}}
//│ 				where
//│ 				def break1₀₂(p⁷, ls¹²) = 
//│ 					case ls¹² of {
//│ 						N  => [P [N] [N]]
//│ 						| C x¹⁵ xs⁷ => if p⁷(x¹⁵) then [P [N] [C x¹⁵ xs⁷]] else case break1₀₂(p⁷, xs⁷) of {
//│ 							P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}}
//│ 			def dropWhile₀₂(f⁴, ls⁹) = 
//│ 				case ls⁹ of {
//│ 					N  => [N]
//│ 					| C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}
//│ 	def dropWhile₀₃(f³, ls⁸) = 
//│ 		case ls⁸ of {
//│ 			N  => [N]
//│ 			| C h³ t³ => if f³(h³) then dropWhile₀₃(f³, t³) else [C h³ t³]}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [N]: 133 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ [P [N] [N]]: 134 --->
//│ 	case break1₀₁(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}: 153
//│ 	case break1₀₁(p⁵, xs⁵) of {P ys⁵ zs⁵ => let w⁸ = [C x¹¹ ys⁵]
//│ in let s''⁸ = zs⁵
//│ in (fun _lh_dummy⁸ -> [C w⁸ words₀₁(s''⁸)])}: 394
//│ [C x⁴ xs²]: 141 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ [P [N] [C x⁴ xs²]]: 142 --->
//│ 	case break1₀₁(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}: 153
//│ 	case break1₀₁(p⁵, xs⁵) of {P ys⁵ zs⁵ => let w⁸ = [C x¹¹ ys⁵]
//│ in let s''⁸ = zs⁵
//│ in (fun _lh_dummy⁸ -> [C w⁸ words₀₁(s''⁸)])}: 394
//│ [P [C x⁴ ys²] zs²]: 152 --->
//│ 	case break1₀₁(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}: 153
//│ 	case break1₀₁(p⁵, xs⁵) of {P ys⁵ zs⁵ => let w⁸ = [C x¹¹ ys⁵]
//│ in let s''⁸ = zs⁵
//│ in (fun _lh_dummy⁸ -> [C w⁸ words₀₁(s''⁸)])}: 394
//│ [N]: 160 --->
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ [P [N] [N]]: 161 --->
//│ 	case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}: 180
//│ 	case break1₀₀(p⁶, xs⁶) of {P ys⁶ zs⁶ => let w¹¹ = [C x¹² ys⁶]
//│ in let s''¹¹ = zs⁶
//│ in (fun _lh_dummy¹¹ -> [C w¹¹ words₀₃(s''¹¹)])}: 442
//│ [C x⁵ xs³]: 168 --->
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ [P [N] [C x⁵ xs³]]: 169 --->
//│ 	case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}: 180
//│ 	case break1₀₀(p⁶, xs⁶) of {P ys⁶ zs⁶ => let w¹¹ = [C x¹² ys⁶]
//│ in let s''¹¹ = zs⁶
//│ in (fun _lh_dummy¹¹ -> [C w¹¹ words₀₃(s''¹¹)])}: 442
//│ [P [C x⁵ ys³] zs³]: 179 --->
//│ 	case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}: 180
//│ 	case break1₀₀(p⁶, xs⁶) of {P ys⁶ zs⁶ => let w¹¹ = [C x¹² ys⁶]
//│ in let s''¹¹ = zs⁶
//│ in (fun _lh_dummy¹¹ -> [C w¹¹ words₀₃(s''¹¹)])}: 442
//│ [N]: 187 --->
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ [C x⁶ xs⁴]: 202 --->
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ [N]: 259 --->
//│ 	case dropWhile₀₀((fun x⁷ -> (x⁷ == 1)), s¹) of {N  => [N] | s'¹ => break₀₁((fun x⁸ -> (x⁸ == 1)), s'¹, 99)}: 256
//│ [C h¹ t¹]: 270 --->
//│ 	case dropWhile₀₀((fun x⁷ -> (x⁷ == 1)), s¹) of {N  => [N] | s'¹ => break₀₁((fun x⁸ -> (x⁸ == 1)), s'¹, 99)}: 256
//│ 	case ls¹⁰ of {N  => let w⁶ = [N]
//│ in let s''⁶ = [N]
//│ in (fun _lh_dummy⁶ -> [C w⁶ words₀₁(s''⁶)]) | C x¹¹ xs⁵ => if p⁵(x¹¹) then let w⁷ = [N]
//│ in let s''⁷ = [C x¹¹ xs⁵]
//│ in (fun _lh_dummy⁷ -> [C w⁷ words₀₁(s''⁷)]) else case break1₀₁(p⁵, xs⁵) of {P ys⁵ zs⁵ => let w⁸ = [C x¹¹ ys⁵]
//│ in let s''⁸ = zs⁵
//│ in (fun _lh_dummy⁸ -> [C w⁸ words₀₁(s''⁸)])}}: 396
//│ [N]: 276 --->
//│ 	case dropWhile₀₁((fun x¹⁶ -> (x¹⁶ == 1)), s⁴) of {N  => [N] | s'⁴ => break₀₀((fun x¹⁷ -> (x¹⁷ == 1)), s'⁴, 99)}: 522
//│ [C h² t²]: 287 --->
//│ 	case ls¹¹ of {N  => let w⁹ = [N]
//│ in let s''⁹ = [N]
//│ in (fun _lh_dummy⁹ -> [C w⁹ words₀₁(s''⁹)]) | C x¹² xs⁶ => if p⁶(x¹²) then let w¹⁰ = [N]
//│ in let s''¹⁰ = [C x¹² xs⁶]
//│ in (fun _lh_dummy¹⁰ -> [C w¹⁰ words₀₂(s''¹⁰)]) else case break1₀₀(p⁶, xs⁶) of {P ys⁶ zs⁶ => let w¹¹ = [C x¹² ys⁶]
//│ in let s''¹¹ = zs⁶
//│ in (fun _lh_dummy¹¹ -> [C w¹¹ words₀₃(s''¹¹)])}}: 444
//│ 	case dropWhile₀₁((fun x¹⁶ -> (x¹⁶ == 1)), s⁴) of {N  => [N] | s'⁴ => break₀₀((fun x¹⁷ -> (x¹⁷ == 1)), s'⁴, 99)}: 522
//│ [N]: 293 --->
//│ 	case dropWhile₀₃((fun x⁹ -> (x⁹ == 1)), s²) of {N  => [N] | s'² => break₀₀((fun x¹⁰ -> (x¹⁰ == 1)), s'², 99)}: 349
//│ [C h³ t³]: 304 --->
//│ 	case dropWhile₀₃((fun x⁹ -> (x⁹ == 1)), s²) of {N  => [N] | s'² => break₀₀((fun x¹⁰ -> (x¹⁰ == 1)), s'², 99)}: 349
//│ 	case ls¹¹ of {N  => let w⁹ = [N]
//│ in let s''⁹ = [N]
//│ in (fun _lh_dummy⁹ -> [C w⁹ words₀₁(s''⁹)]) | C x¹² xs⁶ => if p⁶(x¹²) then let w¹⁰ = [N]
//│ in let s''¹⁰ = [C x¹² xs⁶]
//│ in (fun _lh_dummy¹⁰ -> [C w¹⁰ words₀₂(s''¹⁰)]) else case break1₀₀(p⁶, xs⁶) of {P ys⁶ zs⁶ => let w¹¹ = [C x¹² ys⁶]
//│ in let s''¹¹ = zs⁶
//│ in (fun _lh_dummy¹¹ -> [C w¹¹ words₀₃(s''¹¹)])}}: 444
//│ [N]: 310 --->
//│ 	case dropWhile₀₂((fun x¹³ -> (x¹³ == 1)), s³) of {N  => [N] | s'³ => break₀₂((fun x¹⁴ -> (x¹⁴ == 1)), s'³, 99)}: 470
//│ [C h⁴ t⁴]: 321 --->
//│ 	case ls⁵ of {N  => let w³ = [N]
//│ in let s''³ = [N]
//│ in (fun _lh_dummy³ -> [C w³ words₀₃(s''³)]) | C x⁶ xs⁴ => if p⁴(x⁶) then let w⁴ = [N]
//│ in let s''⁴ = [C x⁶ xs⁴]
//│ in (fun _lh_dummy⁴ -> [C w⁴ words₀₃(s''⁴)]) else case break1₀₂(p⁴, xs⁴) of {P ys⁴ zs⁴ => let w⁵ = [C x⁶ ys⁴]
//│ in let s''⁵ = zs⁴
//│ in (fun _lh_dummy⁵ -> [C w⁵ words₀₃(s''⁵)])}}: 230
//│ 	case dropWhile₀₂((fun x¹³ -> (x¹³ == 1)), s³) of {N  => [N] | s'³ => break₀₂((fun x¹⁴ -> (x¹⁴ == 1)), s'³, 99)}: 470
//│ [N]: 353 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ [C x¹¹ xs⁵]: 368 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ [N]: 401 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ [C x¹² xs⁶]: 416 --->
//│ 	case ls⁷ of {N  => [N] | C h² t² => if f²(h²) then dropWhile₀₁(f², t²) else [C h² t²]}: 289
//│ [N]: 474 --->
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ [P [N] [N]]: 475 --->
//│ 	case break1₀₂(p⁴, xs⁴) of {P ys⁴ zs⁴ => let w⁵ = [C x⁶ ys⁴]
//│ in let s''⁵ = zs⁴
//│ in (fun _lh_dummy⁵ -> [C w⁵ words₀₃(s''⁵)])}: 228
//│ 	case break1₀₂(p⁷, xs⁷) of {P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}: 494
//│ [C x¹⁵ xs⁷]: 482 --->
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ [P [N] [C x¹⁵ xs⁷]]: 483 --->
//│ 	case break1₀₂(p⁴, xs⁴) of {P ys⁴ zs⁴ => let w⁵ = [C x⁶ ys⁴]
//│ in let s''⁵ = zs⁴
//│ in (fun _lh_dummy⁵ -> [C w⁵ words₀₃(s''⁵)])}: 228
//│ 	case break1₀₂(p⁷, xs⁷) of {P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}: 494
//│ [P [C x¹⁵ ys⁷] zs⁷]: 493 --->
//│ 	case break1₀₂(p⁴, xs⁴) of {P ys⁴ zs⁴ => let w⁵ = [C x⁶ ys⁴]
//│ in let s''⁵ = zs⁴
//│ in (fun _lh_dummy⁵ -> [C w⁵ words₀₃(s''⁵)])}: 228
//│ 	case break1₀₂(p⁷, xs⁷) of {P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}: 494
//│ [N]: 530 --->
//│ 	case ls⁴ of {N  => [P [N] [N]] | C x⁵ xs³ => if p³(x⁵) then [P [N] [C x⁵ xs³]] else case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}}: 182
//│ 	case ls⁷ of {N  => [N] | C h² t² => if f²(h²) then dropWhile₀₁(f², t²) else [C h² t²]}: 289
//│ 	case ls⁸ of {N  => [N] | C h³ t³ => if f³(h³) then dropWhile₀₃(f³, t³) else [C h³ t³]}: 306
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ 	case ls¹² of {N  => [P [N] [N]] | C x¹⁵ xs⁷ => if p⁷(x¹⁵) then [P [N] [C x¹⁵ xs⁷]] else case break1₀₂(p⁷, xs⁷) of {P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}}: 496
//│ [C 2 [N]]: 531 --->
//│ 	case ls⁴ of {N  => [P [N] [N]] | C x⁵ xs³ => if p³(x⁵) then [P [N] [C x⁵ xs³]] else case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}}: 182
//│ 	case ls⁷ of {N  => [N] | C h² t² => if f²(h²) then dropWhile₀₁(f², t²) else [C h² t²]}: 289
//│ 	case ls⁸ of {N  => [N] | C h³ t³ => if f³(h³) then dropWhile₀₃(f³, t³) else [C h³ t³]}: 306
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ 	case ls¹² of {N  => [P [N] [N]] | C x¹⁵ xs⁷ => if p⁷(x¹⁵) then [P [N] [C x¹⁵ xs⁷]] else case break1₀₂(p⁷, xs⁷) of {P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}}: 496
//│ [C 1 [C 2 [N]]]: 532 --->
//│ 	case ls⁴ of {N  => [P [N] [N]] | C x⁵ xs³ => if p³(x⁵) then [P [N] [C x⁵ xs³]] else case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}}: 182
//│ 	case ls⁷ of {N  => [N] | C h² t² => if f²(h²) then dropWhile₀₁(f², t²) else [C h² t²]}: 289
//│ 	case ls⁸ of {N  => [N] | C h³ t³ => if f³(h³) then dropWhile₀₃(f³, t³) else [C h³ t³]}: 306
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ 	case ls¹² of {N  => [P [N] [N]] | C x¹⁵ xs⁷ => if p⁷(x¹⁵) then [P [N] [C x¹⁵ xs⁷]] else case break1₀₂(p⁷, xs⁷) of {P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}}: 496
//│ [C 2 [C 1 [C 2 [N]]]]: 533 --->
//│ 	case ls⁴ of {N  => [P [N] [N]] | C x⁵ xs³ => if p³(x⁵) then [P [N] [C x⁵ xs³]] else case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}}: 182
//│ 	case ls⁷ of {N  => [N] | C h² t² => if f²(h²) then dropWhile₀₁(f², t²) else [C h² t²]}: 289
//│ 	case ls⁸ of {N  => [N] | C h³ t³ => if f³(h³) then dropWhile₀₃(f³, t³) else [C h³ t³]}: 306
//│ 	case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323
//│ 	case ls¹² of {N  => [P [N] [N]] | C x¹⁵ xs⁷ => if p⁷(x¹⁵) then [P [N] [C x¹⁵ xs⁷]] else case break1₀₂(p⁷, xs⁷) of {P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}}: 496
//│ [C 1 [C 2 [C 1 [C 2 [N]]]]]: 534 --->
//│ 	case ls⁴ of {N  => [P [N] [N]] | C x⁵ xs³ => if p³(x⁵) then [P [N] [C x⁵ xs³]] else case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}}: 182
//│ 	case ls⁷ of {N  => [N] | C h² t² => if f²(h²) then dropWhile₀₁(f², t²) else [C h² t²]}: 289
//│ 	case ls⁸ of {N  => [N] | C h³ t³ => if f³(h³) then dropWhile₀₃(f³, t³) else [C h³ t³]}: 306
//│ [C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]]: 535 --->
//│ 	case ls⁸ of {N  => [N] | C h³ t³ => if f³(h³) then dropWhile₀₃(f³, t³) else [C h³ t³]}: 306
//│ ------------------
//│ case break1₀₁(p², xs²) of {P ys² zs² => [P [C x⁴ ys²] zs²]}: 153 --->
//│ 	[P [N] [N]]: 134
//│ 	[P [N] [C x⁴ xs²]]: 142
//│ 	[P [C x⁴ ys²] zs²]: 152
//│ case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}: 180 --->
//│ 	[P [N] [N]]: 161
//│ 	[P [N] [C x⁵ xs³]]: 169
//│ 	[P [C x⁵ ys³] zs³]: 179
//│ case ls⁴ of {N  => [P [N] [N]] | C x⁵ xs³ => if p³(x⁵) then [P [N] [C x⁵ xs³]] else case break1₀₀(p³, xs³) of {P ys³ zs³ => [P [C x⁵ ys³] zs³]}}: 182 --->
//│ 	[N]: 530
//│ 	[C 2 [N]]: 531
//│ 	[C 1 [C 2 [N]]]: 532
//│ 	[C 2 [C 1 [C 2 [N]]]]: 533
//│ 	[C 1 [C 2 [C 1 [C 2 [N]]]]]: 534
//│ case break1₀₂(p⁴, xs⁴) of {P ys⁴ zs⁴ => let w⁵ = [C x⁶ ys⁴]
//│ in let s''⁵ = zs⁴
//│ in (fun _lh_dummy⁵ -> [C w⁵ words₀₃(s''⁵)])}: 228 --->
//│ 	[P [N] [N]]: 475
//│ 	[P [N] [C x¹⁵ xs⁷]]: 483
//│ 	[P [C x¹⁵ ys⁷] zs⁷]: 493
//│ case ls⁵ of {N  => let w³ = [N]
//│ in let s''³ = [N]
//│ in (fun _lh_dummy³ -> [C w³ words₀₃(s''³)]) | C x⁶ xs⁴ => if p⁴(x⁶) then let w⁴ = [N]
//│ in let s''⁴ = [C x⁶ xs⁴]
//│ in (fun _lh_dummy⁴ -> [C w⁴ words₀₃(s''⁴)]) else case break1₀₂(p⁴, xs⁴) of {P ys⁴ zs⁴ => let w⁵ = [C x⁶ ys⁴]
//│ in let s''⁵ = zs⁴
//│ in (fun _lh_dummy⁵ -> [C w⁵ words₀₃(s''⁵)])}}: 230 --->
//│ 	[C h⁴ t⁴]: 321
//│ case dropWhile₀₀((fun x⁷ -> (x⁷ == 1)), s¹) of {N  => [N] | s'¹ => break₀₁((fun x⁸ -> (x⁸ == 1)), s'¹, 99)}: 256 --->
//│ 	[N]: 259
//│ 	[C h¹ t¹]: 270
//│ case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272 --->
//│ 	[N]: 133
//│ 	[C x⁴ xs²]: 141
//│ 	[N]: 353
//│ 	[C x¹¹ xs⁵]: 368
//│ 	[N]: 401
//│ case ls⁷ of {N  => [N] | C h² t² => if f²(h²) then dropWhile₀₁(f², t²) else [C h² t²]}: 289 --->
//│ 	[C x¹² xs⁶]: 416
//│ 	[N]: 530
//│ 	[C 2 [N]]: 531
//│ 	[C 1 [C 2 [N]]]: 532
//│ 	[C 2 [C 1 [C 2 [N]]]]: 533
//│ 	[C 1 [C 2 [C 1 [C 2 [N]]]]]: 534
//│ case ls⁸ of {N  => [N] | C h³ t³ => if f³(h³) then dropWhile₀₃(f³, t³) else [C h³ t³]}: 306 --->
//│ 	[N]: 530
//│ 	[C 2 [N]]: 531
//│ 	[C 1 [C 2 [N]]]: 532
//│ 	[C 2 [C 1 [C 2 [N]]]]: 533
//│ 	[C 1 [C 2 [C 1 [C 2 [N]]]]]: 534
//│ 	[C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]]: 535
//│ case ls⁹ of {N  => [N] | C h⁴ t⁴ => if f⁴(h⁴) then dropWhile₀₂(f⁴, t⁴) else [C h⁴ t⁴]}: 323 --->
//│ 	[N]: 160
//│ 	[C x⁵ xs³]: 168
//│ 	[N]: 187
//│ 	[C x⁶ xs⁴]: 202
//│ 	[N]: 474
//│ 	[C x¹⁵ xs⁷]: 482
//│ 	[N]: 530
//│ 	[C 2 [N]]: 531
//│ 	[C 1 [C 2 [N]]]: 532
//│ 	[C 2 [C 1 [C 2 [N]]]]: 533
//│ case dropWhile₀₃((fun x⁹ -> (x⁹ == 1)), s²) of {N  => [N] | s'² => break₀₀((fun x¹⁰ -> (x¹⁰ == 1)), s'², 99)}: 349 --->
//│ 	[N]: 293
//│ 	[C h³ t³]: 304
//│ case break1₀₁(p⁵, xs⁵) of {P ys⁵ zs⁵ => let w⁸ = [C x¹¹ ys⁵]
//│ in let s''⁸ = zs⁵
//│ in (fun _lh_dummy⁸ -> [C w⁸ words₀₁(s''⁸)])}: 394 --->
//│ 	[P [N] [N]]: 134
//│ 	[P [N] [C x⁴ xs²]]: 142
//│ 	[P [C x⁴ ys²] zs²]: 152
//│ case ls¹⁰ of {N  => let w⁶ = [N]
//│ in let s''⁶ = [N]
//│ in (fun _lh_dummy⁶ -> [C w⁶ words₀₁(s''⁶)]) | C x¹¹ xs⁵ => if p⁵(x¹¹) then let w⁷ = [N]
//│ in let s''⁷ = [C x¹¹ xs⁵]
//│ in (fun _lh_dummy⁷ -> [C w⁷ words₀₁(s''⁷)]) else case break1₀₁(p⁵, xs⁵) of {P ys⁵ zs⁵ => let w⁸ = [C x¹¹ ys⁵]
//│ in let s''⁸ = zs⁵
//│ in (fun _lh_dummy⁸ -> [C w⁸ words₀₁(s''⁸)])}}: 396 --->
//│ 	[C h¹ t¹]: 270
//│ case break1₀₀(p⁶, xs⁶) of {P ys⁶ zs⁶ => let w¹¹ = [C x¹² ys⁶]
//│ in let s''¹¹ = zs⁶
//│ in (fun _lh_dummy¹¹ -> [C w¹¹ words₀₃(s''¹¹)])}: 442 --->
//│ 	[P [N] [N]]: 161
//│ 	[P [N] [C x⁵ xs³]]: 169
//│ 	[P [C x⁵ ys³] zs³]: 179
//│ case ls¹¹ of {N  => let w⁹ = [N]
//│ in let s''⁹ = [N]
//│ in (fun _lh_dummy⁹ -> [C w⁹ words₀₁(s''⁹)]) | C x¹² xs⁶ => if p⁶(x¹²) then let w¹⁰ = [N]
//│ in let s''¹⁰ = [C x¹² xs⁶]
//│ in (fun _lh_dummy¹⁰ -> [C w¹⁰ words₀₂(s''¹⁰)]) else case break1₀₀(p⁶, xs⁶) of {P ys⁶ zs⁶ => let w¹¹ = [C x¹² ys⁶]
//│ in let s''¹¹ = zs⁶
//│ in (fun _lh_dummy¹¹ -> [C w¹¹ words₀₃(s''¹¹)])}}: 444 --->
//│ 	[C h² t²]: 287
//│ 	[C h³ t³]: 304
//│ case dropWhile₀₂((fun x¹³ -> (x¹³ == 1)), s³) of {N  => [N] | s'³ => break₀₂((fun x¹⁴ -> (x¹⁴ == 1)), s'³, 99)}: 470 --->
//│ 	[N]: 310
//│ 	[C h⁴ t⁴]: 321
//│ case break1₀₂(p⁷, xs⁷) of {P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}: 494 --->
//│ 	[P [N] [N]]: 475
//│ 	[P [N] [C x¹⁵ xs⁷]]: 483
//│ 	[P [C x¹⁵ ys⁷] zs⁷]: 493
//│ case ls¹² of {N  => [P [N] [N]] | C x¹⁵ xs⁷ => if p⁷(x¹⁵) then [P [N] [C x¹⁵ xs⁷]] else case break1₀₂(p⁷, xs⁷) of {P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}}: 496 --->
//│ 	[N]: 530
//│ 	[C 2 [N]]: 531
//│ 	[C 1 [C 2 [N]]]: 532
//│ 	[C 2 [C 1 [C 2 [N]]]]: 533
//│ case dropWhile₀₁((fun x¹⁶ -> (x¹⁶ == 1)), s⁴) of {N  => [N] | s'⁴ => break₀₀((fun x¹⁷ -> (x¹⁷ == 1)), s'⁴, 99)}: 522 --->
//│ 	[N]: 276
//│ 	[C h² t²]: 287
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [N]: 133 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ [C x⁴ xs²]: 141 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ [N]: 353 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ [C x¹¹ xs⁵]: 368 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ [N]: 401 --->
//│ 	case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272
//│ ------------------
//│ case ls⁶ of {N  => [N] | C h¹ t¹ => if f¹(h¹) then dropWhile₀₀(f¹, t¹) else [C h¹ t¹]}: 272 --->
//│ 	[N]: 133
//│ 	[C x⁴ xs²]: 141
//│ 	[N]: 353
//│ 	[C x¹¹ xs⁵]: 368
//│ 	[N]: 401
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ words₀₀([C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]])
//│ def words₀₀(s⁶) = 
//│ 	case dropWhile₀₃((fun x²⁰ -> (x²⁰ == 1)), s⁶) of {
//│ 		N  => [N]
//│ 		| s'² => break₀₀((fun x²¹ -> (x²¹ == 1)), s'², 99)}
//│ 	where
//│ 	def break₀₀(p⁸, ls¹⁶) = 
//│ 		case ls¹⁶ of {
//│ 			N  => 
//│ 				let w¹² = [N]
//│ 				in let s''¹² = (fun f⁸ -> [N])
//│ 				in (fun _lh_dummy¹² -> [C w¹² words₀₁(s''¹²)])
//│ 			| C x¹² xs⁶ => if p⁸(x¹²) then 
//│ 				let w¹³ = [N]
//│ 				in let s''¹³ = [C x¹² xs⁶]
//│ 				in (fun _lh_dummy¹³ -> [C w¹³ words₀₂(s''¹³)]) else case break1₀₀(p⁸, xs⁶) of {
//│ 				P ys⁶ zs⁶ => 
//│ 					let w¹⁴ = [C x¹² ys⁶]
//│ 					in let s''¹⁴ = zs⁶
//│ 					in (fun _lh_dummy¹⁴ -> [C w¹⁴ words₀₃(s''¹⁴)])}}
//│ 		where
//│ 		def break1₀₀(p¹³, ls²²) = 
//│ 			case ls²² of {
//│ 				N  => [P [N] [N]]
//│ 				| C x⁵ xs³ => if p¹³(x⁵) then [P [N] [C x⁵ xs³]] else case break1₀₀(p¹³, xs³) of {
//│ 					P ys³ zs³ => [P [C x⁵ ys³] zs³]}}
//│ 		def words₀₁(s⁸) = 
//│ 			case dropWhile₀₀((fun x²⁴ -> (x²⁴ == 1)), s⁸) of {
//│ 				N  => [N]
//│ 				| s'¹ => break₀₁((fun x²⁵ -> (x²⁵ == 1)), s'¹, 99)}
//│ 			where
//│ 			def break₀₁(p⁹, ls¹⁷) = 
//│ 				case ls¹⁷ of {
//│ 					N  => 
//│ 						let w¹⁵ = [N]
//│ 						in let s''¹⁵ = (fun f⁹ -> [N])
//│ 						in (fun _lh_dummy¹⁵ -> [C w¹⁵ words₀₁(s''¹⁵)])
//│ 					| C x¹¹ xs⁵ => if p⁹(x¹¹) then 
//│ 						let w¹⁶ = [N]
//│ 						in let s''¹⁶ = 	
//│ 							let h⁵ = x¹¹
//│ 							in let t⁵ = xs⁵
//│ 							in (fun f¹⁰ -> if f¹⁰(h⁵) then dropWhile₀₀(f¹⁰, t⁵) else [C h⁵ t⁵])
//│ 						in (fun _lh_dummy¹⁶ -> [C w¹⁶ words₀₁(s''¹⁶)]) else case break1₀₁(p⁹, xs⁵) of {
//│ 						P ys⁵ zs⁵ => 
//│ 							let w¹⁷ = [C x¹¹ ys⁵]
//│ 							in let s''¹⁷ = zs⁵
//│ 							in (fun _lh_dummy¹⁷ -> [C w¹⁷ words₀₁(s''¹⁷)])}}
//│ 				where
//│ 				def break1₀₁(p¹², ls²¹) = 
//│ 					case ls²¹ of {
//│ 						N  => [P [N] (fun f¹² -> [N])]
//│ 						| C x⁴ xs² => if p¹²(x⁴) then [P [N] 
//│ 							let h⁶ = x⁴
//│ 							in let t⁶ = xs²
//│ 							in (fun f¹³ -> if f¹³(h⁶) then dropWhile₀₀(f¹³, t⁶) else [C h⁶ t⁶])] else case break1₀₁(p¹², xs²) of {
//│ 							P ys² zs² => [P [C x⁴ ys²] zs²]}}
//│ 			def dropWhile₀₀(f⁵, ls¹³) = 
//│ 				ls¹³(f⁵)
//│ 		def words₀₂(s⁵) = 
//│ 			case dropWhile₀₁((fun x¹⁸ -> (x¹⁸ == 1)), s⁵) of {
//│ 				N  => [N]
//│ 				| s'⁴ => break₀₀((fun x¹⁹ -> (x¹⁹ == 1)), s'⁴, 99)}
//│ 			where
//│ 			def dropWhile₀₁(f⁶, ls¹⁴) = 
//│ 				case ls¹⁴ of {
//│ 					N  => [N]
//│ 					| C h² t² => if f⁶(h²) then dropWhile₀₁(f⁶, t²) else [C h² t²]}
//│ 		def words₀₃(s⁷) = 
//│ 			case dropWhile₀₂((fun x²² -> (x²² == 1)), s⁷) of {
//│ 				N  => [N]
//│ 				| s'³ => break₀₂((fun x²³ -> (x²³ == 1)), s'³, 99)}
//│ 			where
//│ 			def break₀₂(p¹¹, ls¹⁹) = 
//│ 				case ls¹⁹ of {
//│ 					N  => 
//│ 						let w¹⁸ = [N]
//│ 						in let s''¹⁸ = [N]
//│ 						in (fun _lh_dummy¹⁸ -> [C w¹⁸ words₀₃(s''¹⁸)])
//│ 					| C x⁶ xs⁴ => if p¹¹(x⁶) then 
//│ 						let w¹⁹ = [N]
//│ 						in let s''¹⁹ = [C x⁶ xs⁴]
//│ 						in (fun _lh_dummy¹⁹ -> [C w¹⁹ words₀₃(s''¹⁹)]) else case break1₀₂(p¹¹, xs⁴) of {
//│ 						P ys⁴ zs⁴ => 
//│ 							let w²⁰ = [C x⁶ ys⁴]
//│ 							in let s''²⁰ = zs⁴
//│ 							in (fun _lh_dummy²⁰ -> [C w²⁰ words₀₃(s''²⁰)])}}
//│ 				where
//│ 				def break1₀₂(p¹⁰, ls¹⁸) = 
//│ 					case ls¹⁸ of {
//│ 						N  => [P [N] [N]]
//│ 						| C x¹⁵ xs⁷ => if p¹⁰(x¹⁵) then [P [N] [C x¹⁵ xs⁷]] else case break1₀₂(p¹⁰, xs⁷) of {
//│ 							P ys⁷ zs⁷ => [P [C x¹⁵ ys⁷] zs⁷]}}
//│ 			def dropWhile₀₂(f⁷, ls¹⁵) = 
//│ 				case ls¹⁵ of {
//│ 					N  => [N]
//│ 					| C h⁴ t⁴ => if f⁷(h⁴) then dropWhile₀₂(f⁷, t⁴) else [C h⁴ t⁴]}
//│ 	def dropWhile₀₃(f¹¹, ls²⁰) = 
//│ 		case ls²⁰ of {
//│ 			N  => [N]
//│ 			| C h³ t³ => if f¹¹(h³) then dropWhile₀₃(f¹¹, t³) else [C h³ t³]}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ 
//│ >>>>>>>>>> deadcode elimination info >>>>>>>>>>
//│ words₀₀ :: 'words₀₀ <: [C(Int, C(Int, C(Int, C(Int, C(Int, N))))) => '13_callres] ::: false
//│ 2 :: Int ::: false
//│ 1 :: Int ::: false
//│ 2 :: Int ::: false
//│ 1 :: Int ::: false
//│ 2 :: Int ::: false
//│ [N] :: N ::: false
//│ [C 2 [N]] :: C(Int, N) ::: false
//│ [C 1 [C 2 [N]]] :: C(Int, C(Int, N)) ::: false
//│ [C 2 [C 1 [C 2 [N]]]] :: C(Int, C(Int, C(Int, N))) ::: false
//│ [C 1 [C 2 [C 1 [C 2 [N]]]]] :: C(Int, C(Int, C(Int, C(Int, N)))) ::: false
//│ [C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]] :: C(Int, C(Int, C(Int, C(Int, C(Int, N))))) ::: false
//│ words₀₀([C 2 [C 1 [C 2 [C 1 [C 2 [N]]]]]]) :: '13_callres <: [NoCons] ::: false
//│ ls :: 'ls⁰ <: ['f⁰ => '16_callres] ::: false
//│ f :: 'f⁰ <: ['f³ | 'f⁴ | 'f⁵ | 'f⁷ | 'f⁸] ::: false
//│ ls(f) :: '16_callres <: ['410_callres | '325_callres | '127_callres] ::: false
//│ (fun ls -> ls(f)) :: 'ls⁰ => '16_callres ::: false
//│ (fun f -> (fun ls -> ls(f))) :: 'f⁰ => 'ls⁰ => '16_callres ::: false
//│ ls :: 'ls¹ <: [Destruct(N, C('h⁰, 't⁰))] ::: false
//│ [N] :: N ::: false
//│ f :: 'f¹ <: ['h⁰ => '23_callres] ::: false
//│ h :: 'h⁰ <: ['x² | 'x⁰] ::: false
//│ f(h) :: '23_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₁ :: 'dropWhile₀₁ <: ['f¹ => '26_callres | 'x² => '170_callres => '172_callres] ::: false
//│ f :: 'f¹ <: ['h⁰ => '23_callres] ::: false
//│ dropWhile₀₁(f) :: '26_callres <: ['t⁰ => '28_callres] ::: false
//│ t :: 't⁰ <: ['ls¹ | 'xs⁰] ::: false
//│ dropWhile₀₁(f, t) :: '28_callres <: ['32_ifres] ::: false
//│ h :: 'h⁰ <: ['x² | 'x⁰] ::: false
//│ t :: 't⁰ <: ['ls¹ | 'xs⁰] ::: false
//│ [C h t] :: C('h⁰, 't⁰) ::: false
//│ if f(h) then dropWhile₀₁(f, t) else [C h t] :: '32_ifres <: ['33_matchres] ::: false
//│ case ls of {N  => [N] | C h t => if f(h) then dropWhile₀₁(f, t) else [C h t]} :: '33_matchres <: ['28_callres | '174_callres] ::: false
//│ (fun ls -> case ls of {N  => [N] | C h t => if f(h) then dropWhile₀₁(f, t) else [C h t]}) :: 'ls¹ => '33_matchres ::: false
//│ (fun f -> (fun ls -> case ls of {N  => [N] | C h t => if f(h) then dropWhile₀₁(f, t) else [C h t]})) :: 'f¹ => 'ls¹ => '33_matchres ::: false
//│ ls :: 'ls² <: [Destruct(N, C('h¹, 't¹))] ::: false
//│ [N] :: N ::: false
//│ f :: 'f² <: ['h¹ => '40_callres] ::: false
//│ h :: 'h¹ <: ['x¹⁰ | 'x⁷] ::: false
//│ f(h) :: '40_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₂ :: 'dropWhile₀₂ <: ['f² => '43_callres | 'x¹⁰ => '381_callres => '383_callres] ::: false
//│ f :: 'f² <: ['h¹ => '40_callres] ::: false
//│ dropWhile₀₂(f) :: '43_callres <: ['t¹ => '45_callres] ::: false
//│ t :: 't¹ <: ['ls² | 'xs³] ::: false
//│ dropWhile₀₂(f, t) :: '45_callres <: ['49_ifres] ::: false
//│ h :: 'h¹ <: ['x¹⁰ | 'x⁷] ::: false
//│ t :: 't¹ <: ['ls² | 'xs³] ::: false
//│ [C h t] :: C('h¹, 't¹) ::: false
//│ if f(h) then dropWhile₀₂(f, t) else [C h t] :: '49_ifres <: ['50_matchres] ::: false
//│ case ls of {N  => [N] | C h t => if f(h) then dropWhile₀₂(f, t) else [C h t]} :: '50_matchres <: ['45_callres | '385_callres] ::: false
//│ (fun ls -> case ls of {N  => [N] | C h t => if f(h) then dropWhile₀₂(f, t) else [C h t]}) :: 'ls² => '50_matchres ::: false
//│ (fun f -> (fun ls -> case ls of {N  => [N] | C h t => if f(h) then dropWhile₀₂(f, t) else [C h t]})) :: 'f² => 'ls² => '50_matchres ::: false
//│ ls :: 'ls³ <: [Destruct(N, C('x⁰, 'xs⁰))] ::: false
//│ [N] :: N ::: false
//│ [N] :: N ::: false
//│ (fun f -> [N]) :: 'f³ => N ::: false
//│ w :: 'w⁰ <: [NoCons] ::: false
//│ words₀₁ :: 'words₀₁ <: ['s''⁰ => '60_callres | 's''³ => '109_callres | 's''⁴ => '138_callres | 's''⁵ => '155_callres] ::: false
//│ s'' :: 's''⁰ <: ['s³] ::: false
//│ words₀₁(s'') :: '60_callres <: [NoCons] ::: false
//│ [C w words₀₁(s'')] :: C('w⁰, '60_callres) ::: false
//│ (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy⁰ => C('w⁰, '60_callres) ::: false
//│ let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy⁰ => C('w⁰, '60_callres) ::: false
//│ let w = [N]
//│ in let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy⁰ => C('w⁰, '60_callres) ::: false
//│ p :: 'p⁰ <: ['x⁰ => '67_callres | 'p⁵] ::: false
//│ x :: 'x⁰ <: [NoCons | 'h⁰ | 'x³ | 'x⁶] ::: false
//│ p(x) :: '67_callres <: [Destruct(True, False)] ::: false
//│ [N] :: N ::: false
//│ x :: 'x⁰ <: [NoCons | 'h⁰ | 'x³ | 'x⁶] ::: false
//│ xs :: 'xs⁰ <: ['t⁰ | 'ls⁹] ::: false
//│ [C x xs] :: C('x⁰, 'xs⁰) ::: false
//│ w :: 'w¹ <: [NoCons] ::: false
//│ words₀₂ :: 'words₀₂ <: ['s''¹ => '75_callres] ::: false
//│ s'' :: 's''¹ <: ['s⁰] ::: false
//│ words₀₂(s'') :: '75_callres <: [NoCons] ::: false
//│ [C w words₀₂(s'')] :: C('w¹, '75_callres) ::: false
//│ (fun _lh_dummy -> [C w words₀₂(s'')]) :: '_lh_dummy¹ => C('w¹, '75_callres) ::: false
//│ let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₂(s'')]) :: '_lh_dummy¹ => C('w¹, '75_callres) ::: false
//│ let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₂(s'')]) :: '_lh_dummy¹ => C('w¹, '75_callres) ::: false
//│ break1₀₀ :: 'break1₀₀ <: ['p⁰ => '82_callres | 'p⁵ => '363_callres] ::: false
//│ p :: 'p⁰ <: ['x⁰ => '67_callres | 'p⁵] ::: false
//│ break1₀₀(p) :: '82_callres <: ['xs⁰ => '84_callres] ::: false
//│ xs :: 'xs⁰ <: ['t⁰ | 'ls⁹] ::: false
//│ break1₀₀(p, xs) :: '84_callres <: [Destruct(P('ys⁰, 'zs⁰))] ::: false
//│ x :: 'x⁰ <: [NoCons | 'h⁰ | 'x³ | 'x⁶] ::: false
//│ ys :: 'ys⁰ <: [NoCons] ::: false
//│ [C x ys] :: C('x⁰, 'ys⁰) ::: false
//│ zs :: 'zs⁰ <: ['s''²] ::: false
//│ w :: 'w² <: [NoCons] ::: false
//│ words₀₃ :: 'words₀₃ <: ['s''² => '92_callres | 's''⁶ => '248_callres | 's''⁷ => '263_callres | 's''⁸ => '280_callres] ::: false
//│ s'' :: 's''² <: ['s²] ::: false
//│ words₀₃(s'') :: '92_callres <: [NoCons] ::: false
//│ [C w words₀₃(s'')] :: C('w², '92_callres) ::: false
//│ (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy² => C('w², '92_callres) ::: false
//│ let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy² => C('w², '92_callres) ::: false
//│ let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy² => C('w², '92_callres) ::: false
//│ case break1₀₀(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])} :: '97_matchres <: ['98_ifres] ::: false
//│ if p(x) then let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₂(s'')]) else case break1₀₀(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])} :: '98_ifres <: ['99_matchres] ::: false
//│ case ls of {N  => let w = [N]
//│ in let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) | C x xs => if p(x) then let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₂(s'')]) else case break1₀₀(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])}} :: '99_matchres <: ['237_callres | '185_callres] ::: false
//│ (fun ls -> case ls of {N  => let w = [N]
//│ in let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) | C x xs => if p(x) then let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₂(s'')]) else case break1₀₀(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])}}) :: 'ls³ => '99_matchres ::: false
//│ (fun p -> (fun ls -> case ls of {N  => let w = [N]
//│ in let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) | C x xs => if p(x) then let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₂(s'')]) else case break1₀₀(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])}})) :: 'p⁰ => 'ls³ => '99_matchres ::: false
//│ ls :: 'ls⁴ <: [Destruct(N, C('x¹, 'xs¹))] ::: false
//│ [N] :: N ::: false
//│ [N] :: N ::: false
//│ (fun f -> [N]) :: 'f⁴ => N ::: false
//│ w :: 'w³ <: [NoCons] ::: false
//│ words₀₁ :: 'words₀₁ <: ['s''⁰ => '60_callres | 's''³ => '109_callres | 's''⁴ => '138_callres | 's''⁵ => '155_callres] ::: false
//│ s'' :: 's''³ <: ['s³] ::: false
//│ words₀₁(s'') :: '109_callres <: [NoCons] ::: false
//│ [C w words₀₁(s'')] :: C('w³, '109_callres) ::: false
//│ (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy³ => C('w³, '109_callres) ::: false
//│ let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy³ => C('w³, '109_callres) ::: false
//│ let w = [N]
//│ in let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy³ => C('w³, '109_callres) ::: false
//│ p :: 'p¹ <: ['x¹ => '116_callres | 'p⁴] ::: false
//│ x :: 'x¹ <: [NoCons | 'x¹³ | 'h²] ::: false
//│ p(x) :: '116_callres <: [Destruct(True, False)] ::: false
//│ [N] :: N ::: false
//│ x :: 'x¹ <: [NoCons | 'x¹³ | 'h²] ::: false
//│ xs :: 'xs¹ <: ['t² | 'ls⁸] ::: false
//│ f :: 'f⁵ <: ['f⁰ | 'h² => '122_callres] ::: false
//│ h :: 'h² <: ['x¹ | 'x¹²] ::: false
//│ f(h) :: '122_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀ :: 'dropWhile₀₀ <: ['f⁵ => '125_callres | 'f⁸ => '323_callres | 'x¹² => '406_callres => '408_callres] ::: false
//│ f :: 'f⁵ <: ['f⁰ | 'h² => '122_callres] ::: false
//│ dropWhile₀₀(f) :: '125_callres <: ['t² => '127_callres] ::: false
//│ t :: 't² <: ['xs¹ | 'ls⁰] ::: false
//│ dropWhile₀₀(f, t) :: '127_callres <: ['131_ifres] ::: false
//│ h :: 'h² <: ['x¹ | 'x¹²] ::: false
//│ t :: 't² <: ['xs¹ | 'ls⁰] ::: false
//│ [C h t] :: C('h², 't²) ::: false
//│ if f(h) then dropWhile₀₀(f, t) else [C h t] :: '131_ifres <: ['16_callres] ::: false
//│ (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t]) :: 'f⁵ => '131_ifres ::: false
//│ let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t]) :: 'f⁵ => '131_ifres ::: false
//│ let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t]) :: 'f⁵ => '131_ifres ::: false
//│ w :: 'w⁴ <: [NoCons] ::: false
//│ words₀₁ :: 'words₀₁ <: ['s''⁰ => '60_callres | 's''³ => '109_callres | 's''⁴ => '138_callres | 's''⁵ => '155_callres] ::: false
//│ s'' :: 's''⁴ <: ['s³] ::: false
//│ words₀₁(s'') :: '138_callres <: [NoCons] ::: false
//│ [C w words₀₁(s'')] :: C('w⁴, '138_callres) ::: false
//│ (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy⁴ => C('w⁴, '138_callres) ::: false
//│ let s'' = let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy⁴ => C('w⁴, '138_callres) ::: false
//│ let w = [N]
//│ in let s'' = let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy⁴ => C('w⁴, '138_callres) ::: false
//│ break1₀₁ :: 'break1₀₁ <: ['p¹ => '145_callres | 'p⁴ => '336_callres] ::: false
//│ p :: 'p¹ <: ['x¹ => '116_callres | 'p⁴] ::: false
//│ break1₀₁(p) :: '145_callres <: ['xs¹ => '147_callres] ::: false
//│ xs :: 'xs¹ <: ['t² | 'ls⁸] ::: false
//│ break1₀₁(p, xs) :: '147_callres <: [Destruct(P('ys¹, 'zs¹))] ::: false
//│ x :: 'x¹ <: [NoCons | 'x¹³ | 'h²] ::: false
//│ ys :: 'ys¹ <: [NoCons] ::: false
//│ [C x ys] :: C('x¹, 'ys¹) ::: false
//│ zs :: 'zs¹ <: ['s''⁵] ::: false
//│ w :: 'w⁵ <: [NoCons] ::: false
//│ words₀₁ :: 'words₀₁ <: ['s''⁰ => '60_callres | 's''³ => '109_callres | 's''⁴ => '138_callres | 's''⁵ => '155_callres] ::: false
//│ s'' :: 's''⁵ <: ['s³] ::: false
//│ words₀₁(s'') :: '155_callres <: [NoCons] ::: false
//│ [C w words₀₁(s'')] :: C('w⁵, '155_callres) ::: false
//│ (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy⁵ => C('w⁵, '155_callres) ::: false
//│ let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy⁵ => C('w⁵, '155_callres) ::: false
//│ let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) :: '_lh_dummy⁵ => C('w⁵, '155_callres) ::: false
//│ case break1₀₁(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₁(s'')])} :: '160_matchres <: ['161_ifres] ::: false
//│ if p(x) then let w = [N]
//│ in let s'' = let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) else case break1₀₁(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₁(s'')])} :: '161_ifres <: ['162_matchres] ::: false
//│ case ls of {N  => let w = [N]
//│ in let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) | C x xs => if p(x) then let w = [N]
//│ in let s'' = let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) else case break1₀₁(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₁(s'')])}} :: '162_matchres <: ['421_callres] ::: false
//│ (fun ls -> case ls of {N  => let w = [N]
//│ in let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) | C x xs => if p(x) then let w = [N]
//│ in let s'' = let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) else case break1₀₁(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₁(s'')])}}) :: 'ls⁴ => '162_matchres ::: false
//│ (fun p -> (fun ls -> case ls of {N  => let w = [N]
//│ in let s'' = (fun f -> [N])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) | C x xs => if p(x) then let w = [N]
//│ in let s'' = let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])
//│ in (fun _lh_dummy -> [C w words₀₁(s'')]) else case break1₀₁(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₁(s'')])}})) :: 'p¹ => 'ls⁴ => '162_matchres ::: false
//│ dropWhile₀₁ :: 'dropWhile₀₁ <: ['f¹ => '26_callres | 'x² => '170_callres => '172_callres] ::: false
//│ == :: Destruct(Int) => Destruct(Int) => Sum[True, False] ::: false
//│ x :: 'x² <: [Destruct(Int)] ::: false
//│ ==(x) :: '168_callres <: [Int => '170_callres] ::: false
//│ 1 :: Int ::: false
//│ (x == 1) :: '170_callres <: ['23_callres] ::: false
//│ (fun x -> (x == 1)) :: 'x² => '170_callres ::: false
//│ dropWhile₀₁((fun x -> (x == 1))) :: '172_callres <: ['s⁰ => '174_callres] ::: false
//│ s :: 's⁰ <: ['ls¹] ::: false
//│ dropWhile₀₁((fun x -> (x == 1)), s) :: '174_callres <: [Destruct(N, _('s'⁰))] ::: false
//│ [N] :: N ::: false
//│ break₀₀ :: 'break₀₀ <: ['x³ => '181_callres => '183_callres | 'x⁶ => '233_callres => '235_callres] ::: false
//│ == :: Destruct(Int) => Destruct(Int) => Sum[True, False] ::: false
//│ x :: 'x³ <: [Destruct(Int)] ::: false
//│ ==(x) :: '179_callres <: [Int => '181_callres] ::: false
//│ 1 :: Int ::: false
//│ (x == 1) :: '181_callres <: ['67_callres | '355_callres] ::: false
//│ (fun x -> (x == 1)) :: 'x³ => '181_callres ::: false
//│ break₀₀((fun x -> (x == 1))) :: '183_callres <: ['s'⁰ => '185_callres] ::: false
//│ s' :: 's'⁰ <: ['ls³] ::: false
//│ break₀₀((fun x -> (x == 1)), s') :: '185_callres <: [Int => '187_callres] ::: false
//│ 99 :: Int ::: false
//│ break₀₀((fun x -> (x == 1)), s', 99) :: '187_callres <: ['188_matchres] ::: false
//│ case dropWhile₀₁((fun x -> (x == 1)), s) of {N  => [N] | s' => break₀₀((fun x -> (x == 1)), s', 99)} :: '188_matchres <: ['75_callres] ::: false
//│ (fun s -> case dropWhile₀₁((fun x -> (x == 1)), s) of {N  => [N] | s' => break₀₀((fun x -> (x == 1)), s', 99)}) :: 's⁰ => '188_matchres ::: false
//│ ls :: 'ls⁵ <: [Destruct(N, C('x⁴, 'xs²))] ::: false
//│ [N] :: N ::: false
//│ [N] :: N ::: false
//│ [P [N] [N]] :: P(N, N) ::: false
//│ p :: 'p² <: ['x⁴ => '196_callres] ::: false
//│ x :: 'x⁴ <: [NoCons | 'h¹ | 'x¹¹] ::: false
//│ p(x) :: '196_callres <: [Destruct(True, False)] ::: false
//│ [N] :: N ::: false
//│ x :: 'x⁴ <: [NoCons | 'h¹ | 'x¹¹] ::: false
//│ xs :: 'xs² <: ['t¹ | 'ls⁵] ::: false
//│ [C x xs] :: C('x⁴, 'xs²) ::: false
//│ [P [N] [C x xs]] :: P(N, C('x⁴, 'xs²)) ::: false
//│ break1₀₂ :: 'break1₀₂ <: ['p² => '204_callres | 'p³ => '270_callres] ::: false
//│ p :: 'p² <: ['x⁴ => '196_callres] ::: false
//│ break1₀₂(p) :: '204_callres <: ['xs² => '206_callres] ::: false
//│ xs :: 'xs² <: ['t¹ | 'ls⁵] ::: false
//│ break1₀₂(p, xs) :: '206_callres <: [Destruct(P('ys², 'zs²))] ::: false
//│ x :: 'x⁴ <: [NoCons | 'h¹ | 'x¹¹] ::: false
//│ ys :: 'ys² <: [NoCons] ::: false
//│ [C x ys] :: C('x⁴, 'ys²) ::: false
//│ zs :: 'zs² <: ['zs³] ::: false
//│ [P [C x ys] zs] :: P(C('x⁴, 'ys²), 'zs²) ::: false
//│ case break1₀₂(p, xs) of {P ys zs => [P [C x ys] zs]} :: '212_matchres <: ['213_ifres] ::: false
//│ if p(x) then [P [N] [C x xs]] else case break1₀₂(p, xs) of {P ys zs => [P [C x ys] zs]} :: '213_ifres <: ['214_matchres] ::: false
//│ case ls of {N  => [P [N] [N]] | C x xs => if p(x) then [P [N] [C x xs]] else case break1₀₂(p, xs) of {P ys zs => [P [C x ys] zs]}} :: '214_matchres <: ['206_callres | '272_callres] ::: false
//│ (fun ls -> case ls of {N  => [P [N] [N]] | C x xs => if p(x) then [P [N] [C x xs]] else case break1₀₂(p, xs) of {P ys zs => [P [C x ys] zs]}}) :: 'ls⁵ => '214_matchres ::: false
//│ (fun p -> (fun ls -> case ls of {N  => [P [N] [N]] | C x xs => if p(x) then [P [N] [C x xs]] else case break1₀₂(p, xs) of {P ys zs => [P [C x ys] zs]}})) :: 'p² => 'ls⁵ => '214_matchres ::: false
//│ dropWhile₀₃ :: 'dropWhile₀₃ <: ['x⁵ => '222_callres => '224_callres | 'f⁶ => '297_callres] ::: false
//│ == :: Destruct(Int) => Destruct(Int) => Sum[True, False] ::: false
//│ x :: 'x⁵ <: [Destruct(Int)] ::: false
//│ ==(x) :: '220_callres <: [Int => '222_callres] ::: false
//│ 1 :: Int ::: false
//│ (x == 1) :: '222_callres <: ['294_callres] ::: false
//│ (fun x -> (x == 1)) :: 'x⁵ => '222_callres ::: false
//│ dropWhile₀₃((fun x -> (x == 1))) :: '224_callres <: ['s¹ => '226_callres] ::: false
//│ s :: 's¹ <: ['ls⁷] ::: false
//│ dropWhile₀₃((fun x -> (x == 1)), s) :: '226_callres <: [Destruct(N, _('s'¹))] ::: false
//│ [N] :: N ::: false
//│ break₀₀ :: 'break₀₀ <: ['x³ => '181_callres => '183_callres | 'x⁶ => '233_callres => '235_callres] ::: false
//│ == :: Destruct(Int) => Destruct(Int) => Sum[True, False] ::: false
//│ x :: 'x⁶ <: [Destruct(Int)] ::: false
//│ ==(x) :: '231_callres <: [Int => '233_callres] ::: false
//│ 1 :: Int ::: false
//│ (x == 1) :: '233_callres <: ['67_callres | '355_callres] ::: false
//│ (fun x -> (x == 1)) :: 'x⁶ => '233_callres ::: false
//│ break₀₀((fun x -> (x == 1))) :: '235_callres <: ['s'¹ => '237_callres] ::: false
//│ s' :: 's'¹ <: ['ls³] ::: false
//│ break₀₀((fun x -> (x == 1)), s') :: '237_callres <: [Int => '239_callres] ::: false
//│ 99 :: Int ::: false
//│ break₀₀((fun x -> (x == 1)), s', 99) :: '239_callres <: ['240_matchres] ::: false
//│ case dropWhile₀₃((fun x -> (x == 1)), s) of {N  => [N] | s' => break₀₀((fun x -> (x == 1)), s', 99)} :: '240_matchres <: ['13_callres] ::: false
//│ (fun s -> case dropWhile₀₃((fun x -> (x == 1)), s) of {N  => [N] | s' => break₀₀((fun x -> (x == 1)), s', 99)}) :: 's¹ => '240_matchres ::: false
//│ ls :: 'ls⁶ <: [Destruct(N, C('x⁷, 'xs³))] ::: false
//│ [N] :: N ::: false
//│ [N] :: N ::: false
//│ w :: 'w⁶ <: [NoCons] ::: false
//│ words₀₃ :: 'words₀₃ <: ['s''² => '92_callres | 's''⁶ => '248_callres | 's''⁷ => '263_callres | 's''⁸ => '280_callres] ::: false
//│ s'' :: 's''⁶ <: ['s²] ::: false
//│ words₀₃(s'') :: '248_callres <: [NoCons] ::: false
//│ [C w words₀₃(s'')] :: C('w⁶, '248_callres) ::: false
//│ (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy⁶ => C('w⁶, '248_callres) ::: false
//│ let s'' = [N]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy⁶ => C('w⁶, '248_callres) ::: false
//│ let w = [N]
//│ in let s'' = [N]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy⁶ => C('w⁶, '248_callres) ::: false
//│ p :: 'p³ <: ['p² | 'x⁷ => '255_callres] ::: false
//│ x :: 'x⁷ <: [NoCons | 'h¹ | 'x¹¹] ::: false
//│ p(x) :: '255_callres <: [Destruct(True, False)] ::: false
//│ [N] :: N ::: false
//│ x :: 'x⁷ <: [NoCons | 'h¹ | 'x¹¹] ::: false
//│ xs :: 'xs³ <: ['t¹ | 'ls⁵] ::: false
//│ [C x xs] :: C('x⁷, 'xs³) ::: false
//│ w :: 'w⁷ <: [NoCons] ::: false
//│ words₀₃ :: 'words₀₃ <: ['s''² => '92_callres | 's''⁶ => '248_callres | 's''⁷ => '263_callres | 's''⁸ => '280_callres] ::: false
//│ s'' :: 's''⁷ <: ['s²] ::: false
//│ words₀₃(s'') :: '263_callres <: [NoCons] ::: false
//│ [C w words₀₃(s'')] :: C('w⁷, '263_callres) ::: false
//│ (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy⁷ => C('w⁷, '263_callres) ::: false
//│ let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy⁷ => C('w⁷, '263_callres) ::: false
//│ let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy⁷ => C('w⁷, '263_callres) ::: false
//│ break1₀₂ :: 'break1₀₂ <: ['p² => '204_callres | 'p³ => '270_callres] ::: false
//│ p :: 'p³ <: ['p² | 'x⁷ => '255_callres] ::: false
//│ break1₀₂(p) :: '270_callres <: ['xs³ => '272_callres] ::: false
//│ xs :: 'xs³ <: ['t¹ | 'ls⁵] ::: false
//│ break1₀₂(p, xs) :: '272_callres <: [Destruct(P('ys³, 'zs³))] ::: false
//│ x :: 'x⁷ <: [NoCons | 'h¹ | 'x¹¹] ::: false
//│ ys :: 'ys³ <: [NoCons] ::: false
//│ [C x ys] :: C('x⁷, 'ys³) ::: false
//│ zs :: 'zs³ <: ['s''⁸] ::: false
//│ w :: 'w⁸ <: [NoCons] ::: false
//│ words₀₃ :: 'words₀₃ <: ['s''² => '92_callres | 's''⁶ => '248_callres | 's''⁷ => '263_callres | 's''⁸ => '280_callres] ::: false
//│ s'' :: 's''⁸ <: ['s²] ::: false
//│ words₀₃(s'') :: '280_callres <: [NoCons] ::: false
//│ [C w words₀₃(s'')] :: C('w⁸, '280_callres) ::: false
//│ (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy⁸ => C('w⁸, '280_callres) ::: false
//│ let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy⁸ => C('w⁸, '280_callres) ::: false
//│ let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) :: '_lh_dummy⁸ => C('w⁸, '280_callres) ::: false
//│ case break1₀₂(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])} :: '285_matchres <: ['286_ifres] ::: false
//│ if p(x) then let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) else case break1₀₂(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])} :: '286_ifres <: ['287_matchres] ::: false
//│ case ls of {N  => let w = [N]
//│ in let s'' = [N]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) | C x xs => if p(x) then let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) else case break1₀₂(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])}} :: '287_matchres <: ['396_callres] ::: false
//│ (fun ls -> case ls of {N  => let w = [N]
//│ in let s'' = [N]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) | C x xs => if p(x) then let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) else case break1₀₂(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])}}) :: 'ls⁶ => '287_matchres ::: false
//│ (fun p -> (fun ls -> case ls of {N  => let w = [N]
//│ in let s'' = [N]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) | C x xs => if p(x) then let w = [N]
//│ in let s'' = [C x xs]
//│ in (fun _lh_dummy -> [C w words₀₃(s'')]) else case break1₀₂(p, xs) of {P ys zs => let w = [C x ys]
//│ in let s'' = zs
//│ in (fun _lh_dummy -> [C w words₀₃(s'')])}})) :: 'p³ => 'ls⁶ => '287_matchres ::: false
//│ ls :: 'ls⁷ <: [Destruct(N, C('h³, 't³))] ::: false
//│ [N] :: N ::: false
//│ f :: 'f⁶ <: ['h³ => '294_callres] ::: false
//│ h :: 'h³ <: ['x⁰ | 'x⁵] ::: false
//│ f(h) :: '294_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₃ :: 'dropWhile₀₃ <: ['x⁵ => '222_callres => '224_callres | 'f⁶ => '297_callres] ::: false
//│ f :: 'f⁶ <: ['h³ => '294_callres] ::: false
//│ dropWhile₀₃(f) :: '297_callres <: ['t³ => '299_callres] ::: false
//│ t :: 't³ <: ['xs⁰ | 'ls⁷] ::: false
//│ dropWhile₀₃(f, t) :: '299_callres <: ['303_ifres] ::: false
//│ h :: 'h³ <: ['x⁰ | 'x⁵] ::: false
//│ t :: 't³ <: ['xs⁰ | 'ls⁷] ::: false
//│ [C h t] :: C('h³, 't³) ::: false
//│ if f(h) then dropWhile₀₃(f, t) else [C h t] :: '303_ifres <: ['304_matchres] ::: false
//│ case ls of {N  => [N] | C h t => if f(h) then dropWhile₀₃(f, t) else [C h t]} :: '304_matchres <: ['226_callres | '299_callres] ::: false
//│ (fun ls -> case ls of {N  => [N] | C h t => if f(h) then dropWhile₀₃(f, t) else [C h t]}) :: 'ls⁷ => '304_matchres ::: false
//│ (fun f -> (fun ls -> case ls of {N  => [N] | C h t => if f(h) then dropWhile₀₃(f, t) else [C h t]})) :: 'f⁶ => 'ls⁷ => '304_matchres ::: false
//│ ls :: 'ls⁸ <: [Destruct(N, C('x⁸, 'xs⁴))] ::: false
//│ [N] :: N ::: false
//│ [N] :: N ::: false
//│ (fun f -> [N]) :: 'f⁷ => N ::: false
//│ [P [N] (fun f -> [N])] :: P(N, 'f⁷ => N) ::: false
//│ p :: 'p⁴ <: ['x⁸ => '314_callres] ::: false
//│ x :: 'x⁸ <: [NoCons | 'x¹³ | 'h⁴] ::: false
//│ p(x) :: '314_callres <: [Destruct(True, False)] ::: false
//│ [N] :: N ::: false
//│ x :: 'x⁸ <: [NoCons | 'x¹³ | 'h⁴] ::: false
//│ xs :: 'xs⁴ <: ['t⁴ | 'ls⁸] ::: false
//│ f :: 'f⁸ <: ['f⁰ | 'h⁴ => '320_callres] ::: false
//│ h :: 'h⁴ <: ['x¹ | 'x¹²] ::: false
//│ f(h) :: '320_callres <: [Destruct(True, False)] ::: false
//│ dropWhile₀₀ :: 'dropWhile₀₀ <: ['f⁵ => '125_callres | 'f⁸ => '323_callres | 'x¹² => '406_callres => '408_callres] ::: false
//│ f :: 'f⁸ <: ['f⁰ | 'h⁴ => '320_callres] ::: false
//│ dropWhile₀₀(f) :: '323_callres <: ['t⁴ => '325_callres] ::: false
//│ t :: 't⁴ <: ['xs¹ | 'ls⁰] ::: false
//│ dropWhile₀₀(f, t) :: '325_callres <: ['329_ifres] ::: false
//│ h :: 'h⁴ <: ['x¹ | 'x¹²] ::: false
//│ t :: 't⁴ <: ['xs¹ | 'ls⁰] ::: false
//│ [C h t] :: C('h⁴, 't⁴) ::: false
//│ if f(h) then dropWhile₀₀(f, t) else [C h t] :: '329_ifres <: ['16_callres] ::: false
//│ (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t]) :: 'f⁸ => '329_ifres ::: false
//│ let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t]) :: 'f⁸ => '329_ifres ::: false
//│ let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t]) :: 'f⁸ => '329_ifres ::: false
//│ [P [N] let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])] :: P(N, 'f⁸ => '329_ifres) ::: false
//│ break1₀₁ :: 'break1₀₁ <: ['p¹ => '145_callres | 'p⁴ => '336_callres] ::: false
//│ p :: 'p⁴ <: ['x⁸ => '314_callres] ::: false
//│ break1₀₁(p) :: '336_callres <: ['xs⁴ => '338_callres] ::: false
//│ xs :: 'xs⁴ <: ['t⁴ | 'ls⁸] ::: false
//│ break1₀₁(p, xs) :: '338_callres <: [Destruct(P('ys⁴, 'zs⁴))] ::: false
//│ x :: 'x⁸ <: [NoCons | 'x¹³ | 'h⁴] ::: false
//│ ys :: 'ys⁴ <: [NoCons] ::: false
//│ [C x ys] :: C('x⁸, 'ys⁴) ::: false
//│ zs :: 'zs⁴ <: ['zs¹] ::: false
//│ [P [C x ys] zs] :: P(C('x⁸, 'ys⁴), 'zs⁴) ::: false
//│ case break1₀₁(p, xs) of {P ys zs => [P [C x ys] zs]} :: '344_matchres <: ['345_ifres] ::: false
//│ if p(x) then [P [N] let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])] else case break1₀₁(p, xs) of {P ys zs => [P [C x ys] zs]} :: '345_ifres <: ['346_matchres] ::: false
//│ case ls of {N  => [P [N] (fun f -> [N])] | C x xs => if p(x) then [P [N] let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])] else case break1₀₁(p, xs) of {P ys zs => [P [C x ys] zs]}} :: '346_matchres <: ['147_callres | '338_callres] ::: false
//│ (fun ls -> case ls of {N  => [P [N] (fun f -> [N])] | C x xs => if p(x) then [P [N] let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])] else case break1₀₁(p, xs) of {P ys zs => [P [C x ys] zs]}}) :: 'ls⁸ => '346_matchres ::: false
//│ (fun p -> (fun ls -> case ls of {N  => [P [N] (fun f -> [N])] | C x xs => if p(x) then [P [N] let h = x
//│ in let t = xs
//│ in (fun f -> if f(h) then dropWhile₀₀(f, t) else [C h t])] else case break1₀₁(p, xs) of {P ys zs => [P [C x ys] zs]}})) :: 'p⁴ => 'ls⁸ => '346_matchres ::: false
//│ ls :: 'ls⁹ <: [Destruct(N, C('x⁹, 'xs⁵))] ::: false
//│ [N] :: N ::: false
//│ [N] :: N ::: false
//│ [P [N] [N]] :: P(N, N) ::: false
//│ p :: 'p⁵ <: ['x⁹ => '355_callres] ::: false
//│ x :: 'x⁹ <: [NoCons | 'h¹ | 'x³ | 'x⁶] ::: false
//│ p(x) :: '355_callres <: [Destruct(True, False)] ::: false
//│ [N] :: N ::: false
//│ x :: 'x⁹ <: [NoCons | 'h¹ | 'x³ | 'x⁶] ::: false
//│ xs :: 'xs⁵ <: ['t¹ | 'ls⁹] ::: false
//│ [C x xs] :: C('x⁹, 'xs⁵) ::: false
//│ [P [N] [C x xs]] :: P(N, C('x⁹, 'xs⁵)) ::: false
//│ break1₀₀ :: 'break1₀₀ <: ['p⁰ => '82_callres | 'p⁵ => '363_callres] ::: false
//│ p :: 'p⁵ <: ['x⁹ => '355_callres] ::: false
//│ break1₀₀(p) :: '363_callres <: ['xs⁵ => '365_callres] ::: false
//│ xs :: 'xs⁵ <: ['t¹ | 'ls⁹] ::: false
//│ break1₀₀(p, xs) :: '365_callres <: [Destruct(P('ys⁵, 'zs⁵))] ::: false
//│ x :: 'x⁹ <: [NoCons | 'h¹ | 'x³ | 'x⁶] ::: false
//│ ys :: 'ys⁵ <: [NoCons] ::: false
//│ [C x ys] :: C('x⁹, 'ys⁵) ::: false
//│ zs :: 'zs⁵ <: ['zs⁰] ::: false
//│ [P [C x ys] zs] :: P(C('x⁹, 'ys⁵), 'zs⁵) ::: false
//│ case break1₀₀(p, xs) of {P ys zs => [P [C x ys] zs]} :: '371_matchres <: ['372_ifres] ::: false
//│ if p(x) then [P [N] [C x xs]] else case break1₀₀(p, xs) of {P ys zs => [P [C x ys] zs]} :: '372_ifres <: ['373_matchres] ::: false
//│ case ls of {N  => [P [N] [N]] | C x xs => if p(x) then [P [N] [C x xs]] else case break1₀₀(p, xs) of {P ys zs => [P [C x ys] zs]}} :: '373_matchres <: ['84_callres | '365_callres] ::: false
//│ (fun ls -> case ls of {N  => [P [N] [N]] | C x xs => if p(x) then [P [N] [C x xs]] else case break1₀₀(p, xs) of {P ys zs => [P [C x ys] zs]}}) :: 'ls⁹ => '373_matchres ::: false
//│ (fun p -> (fun ls -> case ls of {N  => [P [N] [N]] | C x xs => if p(x) then [P [N] [C x xs]] else case break1₀₀(p, xs) of {P ys zs => [P [C x ys] zs]}})) :: 'p⁵ => 'ls⁹ => '373_matchres ::: false
//│ dropWhile₀₂ :: 'dropWhile₀₂ <: ['f² => '43_callres | 'x¹⁰ => '381_callres => '383_callres] ::: false
//│ == :: Destruct(Int) => Destruct(Int) => Sum[True, False] ::: false
//│ x :: 'x¹⁰ <: [Destruct(Int)] ::: false
//│ ==(x) :: '379_callres <: [Int => '381_callres] ::: false
//│ 1 :: Int ::: false
//│ (x == 1) :: '381_callres <: ['40_callres] ::: false
//│ (fun x -> (x == 1)) :: 'x¹⁰ => '381_callres ::: false
//│ dropWhile₀₂((fun x -> (x == 1))) :: '383_callres <: ['s² => '385_callres] ::: false
//│ s :: 's² <: ['ls²] ::: false
//│ dropWhile₀₂((fun x -> (x == 1)), s) :: '385_callres <: [Destruct(N, _('s'²))] ::: false
//│ [N] :: N ::: false
//│ break₀₂ :: 'break₀₂ <: ['x¹¹ => '392_callres => '394_callres] ::: false
//│ == :: Destruct(Int) => Destruct(Int) => Sum[True, False] ::: false
//│ x :: 'x¹¹ <: [Destruct(Int)] ::: false
//│ ==(x) :: '390_callres <: [Int => '392_callres] ::: false
//│ 1 :: Int ::: false
//│ (x == 1) :: '392_callres <: ['196_callres | '255_callres] ::: false
//│ (fun x -> (x == 1)) :: 'x¹¹ => '392_callres ::: false
//│ break₀₂((fun x -> (x == 1))) :: '394_callres <: ['s'² => '396_callres] ::: false
//│ s' :: 's'² <: ['ls⁶] ::: false
//│ break₀₂((fun x -> (x == 1)), s') :: '396_callres <: [Int => '398_callres] ::: false
//│ 99 :: Int ::: false
//│ break₀₂((fun x -> (x == 1)), s', 99) :: '398_callres <: ['399_matchres] ::: false
//│ case dropWhile₀₂((fun x -> (x == 1)), s) of {N  => [N] | s' => break₀₂((fun x -> (x == 1)), s', 99)} :: '399_matchres <: ['92_callres | '248_callres | '263_callres | '280_callres] ::: false
//│ (fun s -> case dropWhile₀₂((fun x -> (x == 1)), s) of {N  => [N] | s' => break₀₂((fun x -> (x == 1)), s', 99)}) :: 's² => '399_matchres ::: false
//│ dropWhile₀₀ :: 'dropWhile₀₀ <: ['f⁵ => '125_callres | 'f⁸ => '323_callres | 'x¹² => '406_callres => '408_callres] ::: false
//│ == :: Destruct(Int) => Destruct(Int) => Sum[True, False] ::: false
//│ x :: 'x¹² <: [Destruct(Int)] ::: false
//│ ==(x) :: '404_callres <: [Int => '406_callres] ::: false
//│ 1 :: Int ::: false
//│ (x == 1) :: '406_callres <: ['122_callres | '320_callres] ::: false
//│ (fun x -> (x == 1)) :: 'x¹² => '406_callres ::: false
//│ dropWhile₀₀((fun x -> (x == 1))) :: '408_callres <: ['s³ => '410_callres] ::: false
//│ s :: 's³ <: ['ls⁰] ::: false
//│ dropWhile₀₀((fun x -> (x == 1)), s) :: '410_callres <: [Destruct(N, _('s'³))] ::: false
//│ [N] :: N ::: false
//│ break₀₁ :: 'break₀₁ <: ['x¹³ => '417_callres => '419_callres] ::: false
//│ == :: Destruct(Int) => Destruct(Int) => Sum[True, False] ::: false
//│ x :: 'x¹³ <: [Destruct(Int)] ::: false
//│ ==(x) :: '415_callres <: [Int => '417_callres] ::: false
//│ 1 :: Int ::: false
//│ (x == 1) :: '417_callres <: ['116_callres | '314_callres] ::: false
//│ (fun x -> (x == 1)) :: 'x¹³ => '417_callres ::: false
//│ break₀₁((fun x -> (x == 1))) :: '419_callres <: ['s'³ => '421_callres] ::: false
//│ s' :: 's'³ <: ['ls⁴] ::: false
//│ break₀₁((fun x -> (x == 1)), s') :: '421_callres <: [Int => '423_callres] ::: false
//│ 99 :: Int ::: false
//│ break₀₁((fun x -> (x == 1)), s', 99) :: '423_callres <: ['424_matchres] ::: false
//│ case dropWhile₀₀((fun x -> (x == 1)), s) of {N  => [N] | s' => break₀₁((fun x -> (x == 1)), s', 99)} :: '424_matchres <: ['60_callres | '109_callres | '138_callres | '155_callres] ::: false
//│ (fun s -> case dropWhile₀₀((fun x -> (x == 1)), s) of {N  => [N] | s' => break₀₁((fun x -> (x == 1)), s', 99)}) :: 's³ => '424_matchres ::: false
//│ <<<<<<<<<< deadcode elimination info <<<<<<<<<<
//│ cannot generate benchmark files: Internal Error: benchmark requires a method of name `testxxx` calling a value wrapped in `primId`
//│  and if there are manually fused benchmarks, there should be a call to `testManual`with exact the same parameter following the `testxxx`
//│ 
//│ let rec break1_d0_d0_d0 p_8 ls_1_3 =
//│   (match ls_1_3 with
//│     | `N -> 
//│       (`P((`N), (`N)))
//│     | `C(x_2_2, xs_8) -> 
//│       (if (p_8 x_2_2) then
//│         (`P((`N), (`C(x_2_2, xs_8))))
//│       else
//│         (match ((break1_d0_d0_d0 p_8) xs_8) with
//│           | `P(ys_8, zs_8) -> 
//│             (`P((`C(x_2_2, ys_8)), zs_8)))))
//│ and break1_d0_d2_d0 p_9 ls_1_5 =
//│   (match ls_1_5 with
//│     | `N -> 
//│       (`P((`N), (`N)))
//│     | `C(x_2_3, xs_9) -> 
//│       (if (p_9 x_2_3) then
//│         (`P((`N), (`C(x_2_3, xs_9))))
//│       else
//│         (match ((break1_d0_d2_d0 p_9) xs_9) with
//│           | `P(ys_9, zs_9) -> 
//│             (`P((`C(x_2_3, ys_9)), zs_9)))))
//│ and break_d0_d0_d0 p_6 ls_1_0 =
//│   (match ls_1_0 with
//│     | `N -> 
//│       (Obj.magic 99)
//│     | `C(x_1_4, xs_6) -> 
//│       (if (p_6 x_1_4) then
//│         (let rec w_6 = (`N) in
//│           (let rec s''_6 = (`C(x_1_4, xs_6)) in
//│             (fun _lh_dummy_6 -> 
//│               (`C(w_6, (words_d0_d2_d0 s''_6))))))
//│       else
//│         (match ((break1_d0_d0_d0 p_6) xs_6) with
//│           | `P(ys_6, zs_6) -> 
//│             (let rec w_7 = (`C(x_1_4, ys_6)) in
//│               (let rec s''_7 = zs_6 in
//│                 (fun _lh_dummy_7 -> 
//│                   (`C(w_7, (words_d0_d3_d0 s''_7)))))))))
//│ and break_d0_d2_d0 p_7 ls_1_2 =
//│   (match ls_1_2 with
//│     | `N -> 
//│       (Obj.magic 99)
//│     | `C(x_1_9, xs_7) -> 
//│       (if (p_7 x_1_9) then
//│         (let rec w_8 = (`N) in
//│           (let rec s''_8 = (`C(x_1_9, xs_7)) in
//│             (fun _lh_dummy_8 -> 
//│               (`C(w_8, (words_d0_d3_d0 s''_8))))))
//│       else
//│         (match ((break1_d0_d2_d0 p_7) xs_7) with
//│           | `P(ys_7, zs_7) -> 
//│             (let rec w_9 = (`C(x_1_9, ys_7)) in
//│               (let rec s''_9 = zs_7 in
//│                 (fun _lh_dummy_9 -> 
//│                   (`C(w_9, (words_d0_d3_d0 s''_9)))))))))
//│ and dropWhile_d0_d1_d0 f_7 ls_1_1 =
//│   (match ls_1_1 with
//│     | `N -> 
//│       (`N)
//│     | `C(h_5, t_5) -> 
//│       (if (f_7 h_5) then
//│         ((dropWhile_d0_d1_d0 f_7) t_5)
//│       else
//│         (`C(h_5, t_5))))
//│ and dropWhile_d0_d2_d0 f_9 ls_1_6 =
//│   (match ls_1_6 with
//│     | `N -> 
//│       (`N)
//│     | `C(h_7, t_7) -> 
//│       (if (f_9 h_7) then
//│         ((dropWhile_d0_d2_d0 f_9) t_7)
//│       else
//│         (`C(h_7, t_7))))
//│ and dropWhile_d0_d3_d0 f_8 ls_1_4 =
//│   (match ls_1_4 with
//│     | `N -> 
//│       (`N)
//│     | `C(h_6, t_6) -> 
//│       (if (f_8 h_6) then
//│         ((dropWhile_d0_d3_d0 f_8) t_6)
//│       else
//│         (`C(h_6, t_6))))
//│ and words_d0_d0_d0 s_4 =
//│   (match ((dropWhile_d0_d3_d0 (fun x_1_5 -> 
//│     (x_1_5 = 1))) s_4) with
//│     | `N -> 
//│       (`N)
//│     | s'_4 -> 
//│       (((break_d0_d0_d0 (fun x_1_6 -> 
//│         (x_1_6 = 1))) s'_4) 99))
//│ and words_d0_d2_d0 s_6 =
//│   (match ((dropWhile_d0_d1_d0 (fun x_2_0 -> 
//│     (x_2_0 = 1))) s_6) with
//│     | `N -> 
//│       (`N)
//│     | s'_6 -> 
//│       (((break_d0_d0_d0 (fun x_2_1 -> 
//│         (x_2_1 = 1))) s'_6) 99))
//│ and words_d0_d3_d0 s_5 =
//│   (match ((dropWhile_d0_d2_d0 (fun x_1_7 -> 
//│     (x_1_7 = 1))) s_5) with
//│     | `N -> 
//│       (`N)
//│     | s'_5 -> 
//│       (((break_d0_d2_d0 (fun x_1_8 -> 
//│         (x_1_8 = 1))) s'_5) 99));;
//│ (words_d0_d0_d0 (`C(2, (`C(1, (`C(2, (`C(1, (`C(2, (`N))))))))))))
//│ 
//│ --------------- ocaml repl result -----------------
//│ [ok]
//│   - : [> `C of [> `C of int * ([> `C of int * 'b | `N ] as 'b) | `N ] * 'a | `N
//│     ] as 'a
//│ = `C (`C (2, `N), `C (`C (2, `N), `C (`C (2, `N), `N)))
//│ 
//│ --------------- ocaml repl result -----------------
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

