:NewParser
:ParseOnly

// NOTE: memory allocation negative numbers??
// -- powers = [[r^n | r<-[2..]] | n<-1..]
// powers :: [[Integer]]
// -- powers = [[(-1)^r * r^n | r<-[2..]] | n<-1..]
// neg_powers :: [[Integer]]
// pascal:: [[Integer]]
:lhInHaskell
:lhGenOCaml
powers = lazy ([2..] : (map_lz (\p -> zipWith_lz_lz (\a b -> a * b) (head_lz powers) p) powers))
neg_powers =
  lazy (map_lz (zipWith_lz_lz (\n x -> if n then x else (0-x)) (iterate not True)) powers)
pascal = lazy ([1,2,1] : map_lz (\line -> zipWith (\a b -> a + b) (mappend line [0]) (0:line)) pascal)
bernoulli 0 = 1
bernoulli 1 = 0 - (1 / 2)
bernoulli n =
  if ((n `mod` 2) == 1) then
    0
  else
    let powers = (atIndex_lz (n - 1) (force neg_powers)) in
      ((0-1)/2) + sum [ ((sum $ zipWith_lz_nl (\a b -> a * b) powers (tail $ tail combs)) - k) / (k+1) | (k,combs) <- zip_nl_lz [2..n] pascal ]
testBernoulli_nofib n = bernoulli n
testBernoulli_nofib $ primId 1500
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testBernoulli_nofib_₀^1300(primId⁰(1500))
//│ def atIndex_lz_₀(n⁶, ls²²) = if (n⁶ < 0) then error⁰ else case force⁰(ls²²) of {
//│ 	LH_C h²⁴ t²⁶ => if (n⁶ == 0) then h²⁴ else atIndex_lz_₀^1021((n⁶ - 1), t²⁶)
//│ 	| LH_N  => error⁰}
//│ def bernoulli_₀(_lh_bernoulli_arg1¹) = case _lh_bernoulli_arg1¹ of {
//│ 	0  => 1
//│ 	| 1  => (0 - (1 / 2))
//│ 	| _  => if ((_lh_bernoulli_arg1¹ % 2) == 1) then 0 else 
//│ 		let powers² = atIndex_lz_₀^1191((_lh_bernoulli_arg1¹ - 1), force⁰(neg_powers_₀^1199))
//│ 		in (((0 - 1) / 2) + sum_₀^1213(
//│ 			let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 					LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁^1218(zipWith_lz_nl_₀^1219((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀^1230(tail_₁^1231(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 					| _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}
//│ 				| LH_N  => [LH_N]})
//│ 			in _lh_listcomp_fun¹(zip_nl_lz_₀^1259(enumFromTo_₀^1260(2, _lh_bernoulli_arg1¹), pascal_₀^1266))))}
//│ def enumFromTo_₀(a⁹, b⁵) = if (a⁹ <= b⁵) then [LH_C a⁹ enumFromTo_₀^1071((a⁹ + 1), b⁵)] else [LH_N]
//│ def enumFrom_₀(a⁸) = lazy⁰([LH_C a⁸ enumFrom_₀^996((a⁸ + 1))])
//│ def head_lz_₀(ls²⁵) = case force⁰(ls²⁵) of {
//│ 	LH_C h²⁷ t²⁹ => h²⁷
//│ 	| LH_N  => error⁰}
//│ def iterate_₀(f¹⁶, x⁴) = lazy⁰([LH_C x⁴ iterate_₀^965(f¹⁶, f¹⁶(x⁴))])
//│ def map_lz_₀(f¹⁸, ls²³) = lazy⁰(case force⁰(ls²³) of {
//│ 	LH_C h²⁵ t²⁷ => [LH_C f¹⁸(h²⁵) map_lz_₀^1043(f¹⁸, t²⁷)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_₁(f¹³, ls¹⁹) = lazy⁰(case force⁰(ls¹⁹) of {
//│ 	LH_C h²⁰ t²² => [LH_C f¹³(h²⁰) map_lz_₁^860(f¹³, t²²)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_₂(f¹⁷, ls²¹) = lazy⁰(case force⁰(ls²¹) of {
//│ 	LH_C h²³ t²⁵ => [LH_C f¹⁷(h²³) map_lz_₂^983(f¹⁷, t²⁵)]
//│ 	| LH_N  => [LH_N]})
//│ def mappend_₀(xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C h²² t²⁴ => [LH_C h²² mappend_₀^953(t²⁴, ys¹³)]
//│ 	| LH_N  => ys¹³}
//│ def neg_powers_₀ = lazy⁰(map_lz_₀^830(zipWith_lz_lz_₁^831((fun n⁵ -> (fun x³ -> if n⁵ then x³ else (0 - x³))), iterate_₀^843(not⁰, [True])), powers_₀^850))
//│ def pascal_₀ = lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂^1142((fun line¹ -> zipWith_₀^1143((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend_₀^1152(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀^1166)])
//│ def powers_₀ = lazy⁰([LH_C enumFrom_₀^1093(2) map_lz_₁^1096((fun p¹ -> zipWith_lz_lz_₀^1097((fun a¹⁰ -> (fun b⁶ -> (a¹⁰ * b⁶))), head_lz_₀^1106(powers_₀^1107), p¹)), powers_₀^1114)])
//│ def sum_₀(ls²⁷) = case ls²⁷ of {
//│ 	LH_C h²⁹ t³¹ => (h²⁹ + sum_₀^1127(t³¹))
//│ 	| LH_N  => 0}
//│ def sum_₁(ls²⁴) = case ls²⁴ of {
//│ 	LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁^1058(t²⁸))
//│ 	| LH_N  => 0}
//│ def tail_₀(ls²⁶) = case ls²⁶ of {
//│ 	LH_C h²⁸ t³⁰ => t³⁰
//│ 	| LH_N  => error⁰}
//│ def tail_₁(ls²⁰) = case ls²⁰ of {
//│ 	LH_C h²¹ t²³ => t²³
//│ 	| LH_N  => error⁰}
//│ def testBernoulli_nofib_₀(_lh_testBernoulli_nofib_arg1¹) = bernoulli_₀^803(_lh_testBernoulli_nofib_arg1¹)
//│ def zipWith_lz_lz_₀(f¹⁵, xs¹², ys¹²) = lazy⁰(case force⁰(xs¹²) of {
//│ 	LH_C hx¹¹ tx¹¹ => case force⁰(ys¹²) of {
//│ 		LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀^935(f¹⁵, tx¹¹, ty¹¹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_₁(f¹⁴, xs¹⁰, ys¹⁰) = lazy⁰(case force⁰(xs¹⁰) of {
//│ 	LH_C hx⁹ tx⁹ => case force⁰(ys¹⁰) of {
//│ 		LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁^888(f¹⁴, tx⁹, ty⁹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_nl_₀(f¹⁹, xs¹⁴, ys¹⁴) = case ys¹⁴ of {
//│ 	LH_C hy¹² ty¹² => case force⁰(xs¹⁴) of {
//│ 		LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀^1285(f¹⁹, tx¹², ty¹²)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zipWith_₀(f¹², xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C hx⁸ tx⁸ => case ys⁹ of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀^814(f¹², tx⁸, ty⁸)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zip_nl_lz_₀(xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹¹) of {
//│ 		LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀^911(tx¹⁰, ty¹⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec atIndex_lz__d0 n_6 ls_2_2 =
//│ 		  (if (n_6 < 0) then
//│ 		    (failwith "error")
//│ 		  else
//│ 		    (match (Lazy.force ls_2_2) with
//│ 		      | `LH_C(h_2_4, t_2_6) -> 
//│ 		        (if (n_6 = 0) then
//│ 		          h_2_4
//│ 		        else
//│ 		          ((atIndex_lz__d0 (n_6 - 1)) t_2_6))
//│ 		      | `LH_N -> 
//│ 		        (failwith "error")))
//│ 		and bernoulli__d0 _lh_bernoulli_arg1_1 =
//│ 		  (match _lh_bernoulli_arg1_1 with
//│ 		    | 0 -> 
//│ 		      1
//│ 		    | 1 -> 
//│ 		      (0 - (1 / 2))
//│ 		    | _ -> 
//│ 		      (if ((_lh_bernoulli_arg1_1 mod 2) = 1) then
//│ 		        0
//│ 		      else
//│ 		        (let rec powers_2 = ((atIndex_lz__d0 (_lh_bernoulli_arg1_1 - 1)) (Lazy.force neg_powers__d0)) in
//│ 		          (((0 - 1) / 2) + (sum__d0 (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		            (match _lh_listcomp_fun_para_1 with
//│ 		              | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                (match _lh_listcomp_fun_ls_h_1 with
//│ 		                  | `LH_P2(_lh_bernoulli_LH_P2_0_1, _lh_bernoulli_LH_P2_1_1) -> 
//│ 		                    (`LH_C((((sum__d1 (((zipWith_lz_nl__d0 (fun a_1_2 b_8 -> 
//│ 		                      (a_1_2 * b_8))) powers_2) (tail__d0 (tail__d1 _lh_bernoulli_LH_P2_1_1)))) - _lh_bernoulli_LH_P2_0_1) / (_lh_bernoulli_LH_P2_0_1 + 1)), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		                  | _ -> 
//│ 		                    (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))
//│ 		              | `LH_N -> 
//│ 		                (`LH_N))) in
//│ 		            (_lh_listcomp_fun_1 ((zip_nl_lz__d0 ((enumFromTo__d0 2) _lh_bernoulli_arg1_1)) pascal__d0))))))))
//│ 		and enumFromTo__d0 a_9 b_5 =
//│ 		  (if (a_9 <= b_5) then
//│ 		    (`LH_C(a_9, ((enumFromTo__d0 (a_9 + 1)) b_5)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFrom__d0 a_8 =
//│ 		  (lazy (`LH_C(a_8, (enumFrom__d0 (a_8 + 1)))))
//│ 		and head_lz__d0 ls_2_5 =
//│ 		  (match (Lazy.force ls_2_5) with
//│ 		    | `LH_C(h_2_7, t_2_9) -> 
//│ 		      h_2_7
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and iterate__d0 f_1_6 x_4 =
//│ 		  (lazy (`LH_C(x_4, ((iterate__d0 f_1_6) (f_1_6 x_4)))))
//│ 		and map_lz__d0 f_1_8 ls_2_3 =
//│ 		  (lazy (match (Lazy.force ls_2_3) with
//│ 		    | `LH_C(h_2_5, t_2_7) -> 
//│ 		      (`LH_C((f_1_8 h_2_5), ((map_lz__d0 f_1_8) t_2_7)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz__d1 f_1_3 ls_1_9 =
//│ 		  (lazy (match (Lazy.force ls_1_9) with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C((f_1_3 h_2_0), ((map_lz__d1 f_1_3) t_2_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz__d2 f_1_7 ls_2_1 =
//│ 		  (lazy (match (Lazy.force ls_2_1) with
//│ 		    | `LH_C(h_2_3, t_2_5) -> 
//│ 		      (`LH_C((f_1_7 h_2_3), ((map_lz__d2 f_1_7) t_2_5)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and mappend__d0 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(h_2_2, t_2_4) -> 
//│ 		      (`LH_C(h_2_2, ((mappend__d0 t_2_4) ys_1_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_3)
//│ 		and neg_powers__d0 =
//│ 		  (lazy ((map_lz__d0 ((zipWith_lz_lz__d1 (fun n_5 x_3 -> 
//│ 		    (if n_5 then
//│ 		      x_3
//│ 		    else
//│ 		      (0 - x_3)))) ((iterate__d0 not) true))) powers__d0))
//│ 		and pascal__d0 =
//│ 		  (lazy (`LH_C((`LH_C(1, (`LH_C(2, (`LH_C(1, (`LH_N))))))), ((map_lz__d2 (fun line_1 -> 
//│ 		    (((zipWith__d0 (fun a_1_1 b_7 -> 
//│ 		      (a_1_1 + b_7))) ((mappend__d0 line_1) (`LH_C(0, (`LH_N))))) (`LH_C(0, line_1))))) pascal__d0))))
//│ 		and powers__d0 =
//│ 		  (lazy (`LH_C((enumFrom__d0 2), ((map_lz__d1 (fun p_1 -> 
//│ 		    (((zipWith_lz_lz__d0 (fun a_1_0 b_6 -> 
//│ 		      (a_1_0 * b_6))) (head_lz__d0 powers__d0)) p_1))) powers__d0))))
//│ 		and sum__d0 ls_2_7 =
//│ 		  (match ls_2_7 with
//│ 		    | `LH_C(h_2_9, t_3_1) -> 
//│ 		      (h_2_9 + (sum__d0 t_3_1))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and sum__d1 ls_2_4 =
//│ 		  (match ls_2_4 with
//│ 		    | `LH_C(h_2_6, t_2_8) -> 
//│ 		      (h_2_6 + (sum__d1 t_2_8))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and tail__d0 ls_2_6 =
//│ 		  (match ls_2_6 with
//│ 		    | `LH_C(h_2_8, t_3_0) -> 
//│ 		      t_3_0
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and tail__d1 ls_2_0 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      t_2_3
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and testBernoulli_nofib__d0 _lh_testBernoulli_nofib_arg1_1 =
//│ 		  (bernoulli__d0 _lh_testBernoulli_nofib_arg1_1)
//│ 		and zipWith_lz_lz__d0 f_1_5 xs_1_2 ys_1_2 =
//│ 		  (lazy (match (Lazy.force xs_1_2) with
//│ 		    | `LH_C(hx_1_1, tx_1_1) -> 
//│ 		      (match (Lazy.force ys_1_2) with
//│ 		        | `LH_C(hy_1_1, ty_1_1) -> 
//│ 		          (`LH_C(((f_1_5 hx_1_1) hy_1_1), (((zipWith_lz_lz__d0 f_1_5) tx_1_1) ty_1_1)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and zipWith_lz_lz__d1 f_1_4 xs_1_0 ys_1_0 =
//│ 		  (lazy (match (Lazy.force xs_1_0) with
//│ 		    | `LH_C(hx_9, tx_9) -> 
//│ 		      (match (Lazy.force ys_1_0) with
//│ 		        | `LH_C(hy_9, ty_9) -> 
//│ 		          (`LH_C(((f_1_4 hx_9) hy_9), (((zipWith_lz_lz__d1 f_1_4) tx_9) ty_9)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and zipWith_lz_nl__d0 f_1_9 xs_1_4 ys_1_4 =
//│ 		  (match ys_1_4 with
//│ 		    | `LH_C(hy_1_2, ty_1_2) -> 
//│ 		      (match (Lazy.force xs_1_4) with
//│ 		        | `LH_C(hx_1_2, tx_1_2) -> 
//│ 		          (`LH_C(((f_1_9 hx_1_2) hy_1_2), (((zipWith_lz_nl__d0 f_1_9) tx_1_2) ty_1_2)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and zipWith__d0 f_1_2 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(hx_8, tx_8) -> 
//│ 		      (match ys_9 with
//│ 		        | `LH_C(hy_8, ty_8) -> 
//│ 		          (`LH_C(((f_1_2 hx_8) hy_8), (((zipWith__d0 f_1_2) tx_8) ty_8)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and zip_nl_lz__d0 xs_1_1 ys_1_1 =
//│ 		  (match xs_1_1 with
//│ 		    | `LH_C(hx_1_0, tx_1_0) -> 
//│ 		      (match (Lazy.force ys_1_1) with
//│ 		        | `LH_C(hy_1_0, ty_1_0) -> 
//│ 		          (`LH_C((`LH_P2(hx_1_0, hy_1_0)), ((zip_nl_lz__d0 tx_1_0) ty_1_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		(testBernoulli_nofib__d0 1500)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testBernoulli_nofib_₀^1300] (hopeless to continue)
//│ 	[testBernoulli_nofib_₀^1300 · bernoulli_₀^803] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · atIndex_lz_₀^1191] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · atIndex_lz_₀^1191 · atIndex_lz_₀^1021] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · atIndex_lz_₀^1191] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · enumFromTo_₀^1260] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · enumFromTo_₀^1260 · enumFromTo_₀^1071] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · enumFromTo_₀^1260] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · iterate_₀^843] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · iterate_₀^843 · iterate_₀^965] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · iterate_₀^843] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · map_lz_₀^830] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · map_lz_₀^830 · map_lz_₀^1043] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · map_lz_₀^830] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · enumFrom_₀^1093] (using original def)
//│ 					[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · enumFrom_₀^1093 · enumFrom_₀^996] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · enumFrom_₀^1093] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · head_lz_₀^1106] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · map_lz_₁^1096] (using original def)
//│ 					[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · map_lz_₁^1096 · map_lz_₁^860] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · map_lz_₁^1096] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · powers_₀^1107] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · powers_₀^1114] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · zipWith_lz_lz_₀^1097] (using original def)
//│ 					[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · zipWith_lz_lz_₀^1097 · zipWith_lz_lz_₀^935] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · powers_₀^850 · zipWith_lz_lz_₀^1097] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · zipWith_lz_lz_₁^831] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · zipWith_lz_lz_₁^831 · zipWith_lz_lz_₁^888] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · neg_powers_₀^1199 · zipWith_lz_lz_₁^831] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · map_lz_₂^1142] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · map_lz_₂^1142 · map_lz_₂^983] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · map_lz_₂^1142] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · mappend_₀^1152] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · mappend_₀^1152 · mappend_₀^953] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · mappend_₀^1152] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · pascal_₀^1166] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · zipWith_₀^1143] (using original def)
//│ 				[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · zipWith_₀^1143 · zipWith_₀^814] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · pascal_₀^1266 · zipWith_₀^1143] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · sum_₀^1213] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · sum_₀^1213 · sum_₀^1127] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · sum_₀^1213] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · sum_₁^1218] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · sum_₁^1218 · sum_₁^1058] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · sum_₁^1218] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · tail_₀^1230] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · tail_₁^1231] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · zipWith_lz_nl_₀^1219] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · zipWith_lz_nl_₀^1219 · zipWith_lz_nl_₀^1285] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · zipWith_lz_nl_₀^1219] (using original def)
//│ 		[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · zip_nl_lz_₀^1259] (using original def)
//│ 			[testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · zip_nl_lz_₀^1259 · zip_nl_lz_₀^911] ---> [testBernoulli_nofib_₀^1300 · bernoulli_₀^803 · zip_nl_lz_₀^1259] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testBernoulli_nofib_₀_₀(primId⁰(1500))
//│ def testBernoulli_nofib_₀_₀(_lh_testBernoulli_nofib_arg1¹) = 
//│ 	bernoulli_₀_₀(_lh_testBernoulli_nofib_arg1¹)
//│ 	where
//│ 	def bernoulli_₀_₀(_lh_bernoulli_arg1¹) = 
//│ 		case _lh_bernoulli_arg1¹ of {
//│ 			0  => 1
//│ 			| 1  => (0 - (1 / 2))
//│ 			| _  => if ((_lh_bernoulli_arg1¹ % 2) == 1) then 0 else 
//│ 				let powers¹ = atIndex_lz_₀_₀((_lh_bernoulli_arg1¹ - 1), force⁰(neg_powers_₀_₀))
//│ 				in (((0 - 1) / 2) + sum_₀_₀(
//│ 					let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 						LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 							LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 							| _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun¹(zip_nl_lz_₀_₀(enumFromTo_₀_₀(2, _lh_bernoulli_arg1¹), pascal_₀_₀))))}
//│ 		where
//│ 		def atIndex_lz_₀_₀(n³, ls¹⁶) = 
//│ 			if (n³ < 0) then error⁰ else case force⁰(ls¹⁶) of {
//│ 				LH_C h¹⁸ t¹⁸ => if (n³ == 0) then h¹⁸ else atIndex_lz_₀_₀((n³ - 1), t¹⁸)
//│ 				| LH_N  => error⁰}
//│ 		def enumFromTo_₀_₀(a⁷, b⁵) = 
//│ 			if (a⁷ <= b⁵) then [LH_C a⁷ enumFromTo_₀_₀((a⁷ + 1), b⁵)] else [LH_N]
//│ 		def neg_powers_₀_₀ = 
//│ 			lazy⁰(map_lz_₀_₀(zipWith_lz_lz_₁_₀((fun n² -> (fun x² -> if n² then x² else (0 - x²))), iterate_₀_₀(not⁰, [True])), powers_₀_₀))
//│ 			where
//│ 			def iterate_₀_₀(f¹³, x³) = 
//│ 				lazy⁰([LH_C x³ iterate_₀_₀(f¹³, f¹³(x³))])
//│ 			def map_lz_₀_₀(f¹², ls¹²) = 
//│ 				lazy⁰(case force⁰(ls¹²) of {
//│ 					LH_C h¹³ t¹³ => [LH_C f¹²(h¹³) map_lz_₀_₀(f¹², t¹³)]
//│ 					| LH_N  => [LH_N]})
//│ 			def powers_₀_₀ = 
//│ 				lazy⁰([LH_C enumFrom_₀_₀(2) map_lz_₁_₀((fun p¹ -> zipWith_lz_lz_₀_₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz_₀_₀(powers_₀_₀), p¹)), powers_₀_₀)])
//│ 				where
//│ 				def enumFrom_₀_₀(a⁶) = 
//│ 					lazy⁰([LH_C a⁶ enumFrom_₀_₀((a⁶ + 1))])
//│ 				def head_lz_₀_₀(ls¹⁷) = 
//│ 					case force⁰(ls¹⁷) of {
//│ 						LH_C h¹⁹ t¹⁹ => h¹⁹
//│ 						| LH_N  => error⁰}
//│ 				def map_lz_₁_₀(f¹⁰, ls⁹) = 
//│ 					lazy⁰(case force⁰(ls⁹) of {
//│ 						LH_C h¹⁰ t¹⁰ => [LH_C f¹⁰(h¹⁰) map_lz_₁_₀(f¹⁰, t¹⁰)]
//│ 						| LH_N  => [LH_N]})
//│ 				def zipWith_lz_lz_₀_₀(f⁹, xs⁷, ys⁷) = 
//│ 					lazy⁰(case force⁰(xs⁷) of {
//│ 						LH_C hx⁶ tx⁶ => case force⁰(ys⁷) of {
//│ 							LH_C hy⁶ ty⁶ => [LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ 			def zipWith_lz_lz_₁_₀(f¹⁵, xs¹⁰, ys¹⁰) = 
//│ 				lazy⁰(case force⁰(xs¹⁰) of {
//│ 					LH_C hx⁸ tx⁸ => case force⁰(ys¹⁰) of {
//│ 						LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def pascal_₀_₀ = 
//│ 			lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂_₀((fun line¹ -> zipWith_₀_₀((fun a⁵ -> (fun b⁴ -> (a⁵ + b⁴))), mappend_₀_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀_₀)])
//│ 			where
//│ 			def map_lz_₂_₀(f¹¹, ls¹⁰) = 
//│ 				lazy⁰(case force⁰(ls¹⁰) of {
//│ 					LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lz_₂_₀(f¹¹, t¹¹)]
//│ 					| LH_N  => [LH_N]})
//│ 			def mappend_₀_₀(xs⁸, ys⁸) = 
//│ 				case xs⁸ of {
//│ 					LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)]
//│ 					| LH_N  => ys⁸}
//│ 			def zipWith_₀_₀(f⁸, xs⁶, ys⁶) = 
//│ 				case xs⁶ of {
//│ 					LH_C hx⁵ tx⁵ => case ys⁶ of {
//│ 						LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]}
//│ 		def sum_₀_₀(ls¹⁴) = 
//│ 			case ls¹⁴ of {
//│ 				LH_C h¹⁶ t¹⁶ => (h¹⁶ + sum_₀_₀(t¹⁶))
//│ 				| LH_N  => 0}
//│ 		def sum_₁_₀(ls¹³) = 
//│ 			case ls¹³ of {
//│ 				LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum_₁_₀(t¹⁵))
//│ 				| LH_N  => 0}
//│ 		def tail_₀_₀(ls¹⁵) = 
//│ 			case ls¹⁵ of {
//│ 				LH_C h¹⁷ t¹⁷ => t¹⁷
//│ 				| LH_N  => error⁰}
//│ 		def tail_₁_₀(ls¹¹) = 
//│ 			case ls¹¹ of {
//│ 				LH_C h¹² t¹² => t¹²
//│ 				| LH_N  => error⁰}
//│ 		def zipWith_lz_nl_₀_₀(f¹⁴, xs⁹, ys⁹) = 
//│ 			case ys⁹ of {
//│ 				LH_C hy⁷ ty⁷ => case force⁰(xs⁹) of {
//│ 					LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)]
//│ 					| LH_N  => [LH_N]}
//│ 				| LH_N  => [LH_N]}
//│ 		def zip_nl_lz_₀_₀(xs¹¹, ys¹¹) = 
//│ 			case xs¹¹ of {
//│ 				LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {
//│ 					LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)]
//│ 					| LH_N  => [LH_N]}
//│ 				| LH_N  => [LH_N]}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)]: 517 --->
//│ 	case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 519
//│ 	case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 656
//│ 	case xs⁸ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)] | LH_N  => ys⁸}: 685
//│ 	case ys⁹ of {LH_C hy⁷ ty⁷ => case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 721
//│ 	case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 790
//│ [LH_N]: 518 --->
//│ 	case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 519
//│ 	case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 656
//│ 	case xs⁸ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)] | LH_N  => ys⁸}: 685
//│ 	case ys⁹ of {LH_C hy⁷ ty⁷ => case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 721
//│ 	case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 790
//│ [LH_N]: 520 --->
//│ 	case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 519
//│ 	case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 656
//│ 	case xs⁸ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)] | LH_N  => ys⁸}: 685
//│ 	case ys⁹ of {LH_C hy⁷ ty⁷ => case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 721
//│ 	case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 790
//│ [LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)]: 544 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys⁷) of {LH_C hy⁶ ty⁶ => [LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 546
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 769
//│ [LH_N]: 545 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys⁷) of {LH_C hy⁶ ty⁶ => [LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 546
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 769
//│ [LH_N]: 547 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys⁷) of {LH_C hy⁶ ty⁶ => [LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 546
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 769
//│ [LH_C f¹⁰(h¹⁰) map_lz_₁_₀(f¹⁰, t¹⁰)]: 565 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁹) of {LH_C h¹⁰ t¹⁰ => [LH_C f¹⁰(h¹⁰) map_lz_₁_₀(f¹⁰, t¹⁰)] | LH_N  => [LH_N]}: 567
//│ 	case force⁰(ls¹²) of {LH_C h¹³ t¹³ => [LH_C f¹²(h¹³) map_lz_₀_₀(f¹², t¹³)] | LH_N  => [LH_N]}: 672
//│ [LH_N]: 566 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁹) of {LH_C h¹⁰ t¹⁰ => [LH_C f¹⁰(h¹⁰) map_lz_₁_₀(f¹⁰, t¹⁰)] | LH_N  => [LH_N]}: 567
//│ 	case force⁰(ls¹²) of {LH_C h¹³ t¹³ => [LH_C f¹²(h¹³) map_lz_₀_₀(f¹², t¹³)] | LH_N  => [LH_N]}: 672
//│ [LH_C f¹¹(h¹¹) map_lz_₂_₀(f¹¹, t¹¹)]: 611 --->
//│ 	case force⁰(ls¹⁰) of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lz_₂_₀(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 613
//│ 	case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]}: 806
//│ [LH_N]: 612 --->
//│ 	case force⁰(ls¹⁰) of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lz_₂_₀(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 613
//│ 	case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]}: 806
//│ [LH_N]: 621 --->
//│ 	case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 519
//│ 	case xs⁸ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)] | LH_N  => ys⁸}: 685
//│ 	case ys⁹ of {LH_C hy⁷ ty⁷ => case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 721
//│ [LH_C 1 [LH_N]]: 622 --->
//│ 	case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 519
//│ 	case xs⁸ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)] | LH_N  => ys⁸}: 685
//│ 	case ys⁹ of {LH_C hy⁷ ty⁷ => case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 721
//│ [LH_C 2 [LH_C 1 [LH_N]]]: 623 --->
//│ 	case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 519
//│ 	case xs⁸ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)] | LH_N  => ys⁸}: 685
//│ 	case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 790
//│ [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 624 --->
//│ 	case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 519
//│ 	case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 656
//│ 	case xs⁸ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)] | LH_N  => ys⁸}: 685
//│ [LH_N]: 639 --->
//│ 	case xs⁶ of {LH_C hx⁵ tx⁵ => case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 521
//│ [LH_C 0 [LH_N]]: 640 --->
//│ 	case xs⁶ of {LH_C hx⁵ tx⁵ => case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 521
//│ [LH_C 0 line¹]: 645 --->
//│ 	case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 519
//│ [LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂_₀((fun line¹ -> zipWith_₀_₀((fun a⁵ -> (fun b⁴ -> (a⁵ + b⁴))), mappend_₀_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀_₀)]: 651 --->
//│ 	case force⁰(ls¹⁰) of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lz_₂_₀(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 613
//│ 	case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]}: 806
//│ [LH_C f¹²(h¹³) map_lz_₀_₀(f¹², t¹³)]: 670 --->
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁸ t¹⁸ => if (n³ == 0) then h¹⁸ else atIndex_lz_₀_₀((n³ - 1), t¹⁸) | LH_N  => error⁰}: 963
//│ [LH_N]: 671 --->
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁸ t¹⁸ => if (n³ == 0) then h¹⁸ else atIndex_lz_₀_₀((n³ - 1), t¹⁸) | LH_N  => error⁰}: 963
//│ [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)]: 683 --->
//│ 	case xs⁶ of {LH_C hx⁵ tx⁵ => case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 521
//│ [LH_C x³ iterate_₀_₀(f¹³, f¹³(x³))]: 697 --->
//│ 	case force⁰(xs¹⁰) of {LH_C hx⁸ tx⁸ => case force⁰(ys¹⁰) of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 771
//│ [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)]: 717 --->
//│ 	case ls¹³ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum_₁_₀(t¹⁵)) | LH_N  => 0}: 734
//│ [LH_N]: 718 --->
//│ 	case ls¹³ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum_₁_₀(t¹⁵)) | LH_N  => 0}: 734
//│ [LH_N]: 720 --->
//│ 	case ls¹³ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum_₁_₀(t¹⁵)) | LH_N  => 0}: 734
//│ [LH_C a⁶ enumFrom_₀_₀((a⁶ + 1))]: 745 --->
//│ 	case force⁰(ys⁷) of {LH_C hy⁶ ty⁶ => [LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 546
//│ 	case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => case force⁰(ys⁷) of {LH_C hy⁶ ty⁶ => [LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 548
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 769
//│ [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)]: 767 --->
//│ 	case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]}: 719
//│ [LH_N]: 768 --->
//│ 	case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]}: 719
//│ [LH_N]: 770 --->
//│ 	case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]}: 719
//│ [LH_P2 hx⁹ hy⁹]: 798 --->
//│ 	case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 915
//│ [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)]: 804 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 917
//│ [LH_N]: 805 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 917
//│ [LH_N]: 807 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 917
//│ [LH_C a⁷ enumFromTo_₀_₀((a⁷ + 1), b⁵)]: 826 --->
//│ 	case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 808
//│ [LH_N]: 827 --->
//│ 	case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 808
//│ [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 911 --->
//│ 	case ls¹⁴ of {LH_C h¹⁶ t¹⁶ => (h¹⁶ + sum_₀_₀(t¹⁶)) | LH_N  => 0}: 785
//│ [LH_N]: 916 --->
//│ 	case ls¹⁴ of {LH_C h¹⁶ t¹⁶ => (h¹⁶ + sum_₀_₀(t¹⁶)) | LH_N  => 0}: 785
//│ [LH_C enumFrom_₀_₀(2) map_lz_₁_₀((fun p¹ -> zipWith_lz_lz_₀_₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz_₀_₀(powers_₀_₀), p¹)), powers_₀_₀)]: 998 --->
//│ 	case force⁰(ls⁹) of {LH_C h¹⁰ t¹⁰ => [LH_C f¹⁰(h¹⁰) map_lz_₁_₀(f¹⁰, t¹⁰)] | LH_N  => [LH_N]}: 567
//│ 	case force⁰(ls¹²) of {LH_C h¹³ t¹³ => [LH_C f¹²(h¹³) map_lz_₀_₀(f¹², t¹³)] | LH_N  => [LH_N]}: 672
//│ 	case force⁰(ls¹⁷) of {LH_C h¹⁹ t¹⁹ => h¹⁹ | LH_N  => error⁰}: 972
//│ ------------------
//│ case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 519 --->
//│ 	[LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)]: 517
//│ 	[LH_N]: 518
//│ 	[LH_N]: 520
//│ 	[LH_N]: 621
//│ 	[LH_C 1 [LH_N]]: 622
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 623
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 624
//│ 	[LH_C 0 line¹]: 645
//│ case xs⁶ of {LH_C hx⁵ tx⁵ => case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 521 --->
//│ 	[LH_N]: 639
//│ 	[LH_C 0 [LH_N]]: 640
//│ 	[LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)]: 683
//│ case force⁰(ys⁷) of {LH_C hy⁶ ty⁶ => [LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 546 --->
//│ 	[LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)]: 544
//│ 	[LH_N]: 545
//│ 	[LH_N]: 547
//│ 	[LH_C a⁶ enumFrom_₀_₀((a⁶ + 1))]: 745
//│ case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => case force⁰(ys⁷) of {LH_C hy⁶ ty⁶ => [LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 548 --->
//│ 	[LH_C a⁶ enumFrom_₀_₀((a⁶ + 1))]: 745
//│ case force⁰(ls⁹) of {LH_C h¹⁰ t¹⁰ => [LH_C f¹⁰(h¹⁰) map_lz_₁_₀(f¹⁰, t¹⁰)] | LH_N  => [LH_N]}: 567 --->
//│ 	[LH_C f¹⁰(h¹⁰) map_lz_₁_₀(f¹⁰, t¹⁰)]: 565
//│ 	[LH_N]: 566
//│ 	[LH_C enumFrom_₀_₀(2) map_lz_₁_₀((fun p¹ -> zipWith_lz_lz_₀_₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz_₀_₀(powers_₀_₀), p¹)), powers_₀_₀)]: 998
//│ case force⁰(ls¹⁰) of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lz_₂_₀(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 613 --->
//│ 	[LH_C f¹¹(h¹¹) map_lz_₂_₀(f¹¹, t¹¹)]: 611
//│ 	[LH_N]: 612
//│ 	[LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂_₀((fun line¹ -> zipWith_₀_₀((fun a⁵ -> (fun b⁴ -> (a⁵ + b⁴))), mappend_₀_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀_₀)]: 651
//│ case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 656 --->
//│ 	[LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)]: 517
//│ 	[LH_N]: 518
//│ 	[LH_N]: 520
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 624
//│ case force⁰(ls¹²) of {LH_C h¹³ t¹³ => [LH_C f¹²(h¹³) map_lz_₀_₀(f¹², t¹³)] | LH_N  => [LH_N]}: 672 --->
//│ 	[LH_C f¹⁰(h¹⁰) map_lz_₁_₀(f¹⁰, t¹⁰)]: 565
//│ 	[LH_N]: 566
//│ 	[LH_C enumFrom_₀_₀(2) map_lz_₁_₀((fun p¹ -> zipWith_lz_lz_₀_₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz_₀_₀(powers_₀_₀), p¹)), powers_₀_₀)]: 998
//│ case xs⁸ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)] | LH_N  => ys⁸}: 685 --->
//│ 	[LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)]: 517
//│ 	[LH_N]: 518
//│ 	[LH_N]: 520
//│ 	[LH_N]: 621
//│ 	[LH_C 1 [LH_N]]: 622
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 623
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 624
//│ case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]}: 719 --->
//│ 	[LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)]: 767
//│ 	[LH_N]: 768
//│ 	[LH_N]: 770
//│ case ys⁹ of {LH_C hy⁷ ty⁷ => case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 721 --->
//│ 	[LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)]: 517
//│ 	[LH_N]: 518
//│ 	[LH_N]: 520
//│ 	[LH_N]: 621
//│ 	[LH_C 1 [LH_N]]: 622
//│ case ls¹³ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum_₁_₀(t¹⁵)) | LH_N  => 0}: 734 --->
//│ 	[LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)]: 717
//│ 	[LH_N]: 718
//│ 	[LH_N]: 720
//│ case force⁰(ys¹⁰) of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 769 --->
//│ 	[LH_C f⁹(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f⁹, tx⁶, ty⁶)]: 544
//│ 	[LH_N]: 545
//│ 	[LH_N]: 547
//│ 	[LH_C a⁶ enumFrom_₀_₀((a⁶ + 1))]: 745
//│ case force⁰(xs¹⁰) of {LH_C hx⁸ tx⁸ => case force⁰(ys¹⁰) of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 771 --->
//│ 	[LH_C x³ iterate_₀_₀(f¹³, f¹³(x³))]: 697
//│ case ls¹⁴ of {LH_C h¹⁶ t¹⁶ => (h¹⁶ + sum_₀_₀(t¹⁶)) | LH_N  => 0}: 785 --->
//│ 	[LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 911
//│ 	[LH_N]: 916
//│ case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 790 --->
//│ 	[LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)]: 517
//│ 	[LH_N]: 518
//│ 	[LH_N]: 520
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 623
//│ case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]}: 806 --->
//│ 	[LH_C f¹¹(h¹¹) map_lz_₂_₀(f¹¹, t¹¹)]: 611
//│ 	[LH_N]: 612
//│ 	[LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂_₀((fun line¹ -> zipWith_₀_₀((fun a⁵ -> (fun b⁴ -> (a⁵ + b⁴))), mappend_₀_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀_₀)]: 651
//│ case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 808 --->
//│ 	[LH_C a⁷ enumFromTo_₀_₀((a⁷ + 1), b⁵)]: 826
//│ 	[LH_N]: 827
//│ case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 915 --->
//│ 	[LH_P2 hx⁹ hy⁹]: 798
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 917 --->
//│ 	[LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)]: 804
//│ 	[LH_N]: 805
//│ 	[LH_N]: 807
//│ case force⁰(ls¹⁶) of {LH_C h¹⁸ t¹⁸ => if (n³ == 0) then h¹⁸ else atIndex_lz_₀_₀((n³ - 1), t¹⁸) | LH_N  => error⁰}: 963 --->
//│ 	[LH_C f¹²(h¹³) map_lz_₀_₀(f¹², t¹³)]: 670
//│ 	[LH_N]: 671
//│ case force⁰(ls¹⁷) of {LH_C h¹⁹ t¹⁹ => h¹⁹ | LH_N  => error⁰}: 972 --->
//│ 	[LH_C enumFrom_₀_₀(2) map_lz_₁_₀((fun p¹ -> zipWith_lz_lz_₀_₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz_₀_₀(powers_₀_₀), p¹)), powers_₀_₀)]: 998
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_N]: 639 --->
//│ 	case xs⁶ of {LH_C hx⁵ tx⁵ => case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 521
//│ [LH_C 0 [LH_N]]: 640 --->
//│ 	case xs⁶ of {LH_C hx⁵ tx⁵ => case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 521
//│ [LH_C f¹²(h¹³) map_lz_₀_₀(f¹², t¹³)]: 670 --->
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁸ t¹⁸ => if (n³ == 0) then h¹⁸ else atIndex_lz_₀_₀((n³ - 1), t¹⁸) | LH_N  => error⁰}: 963
//│ [LH_N]: 671 --->
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁸ t¹⁸ => if (n³ == 0) then h¹⁸ else atIndex_lz_₀_₀((n³ - 1), t¹⁸) | LH_N  => error⁰}: 963
//│ [LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)]: 683 --->
//│ 	case xs⁶ of {LH_C hx⁵ tx⁵ => case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 521
//│ [LH_C x³ iterate_₀_₀(f¹³, f¹³(x³))]: 697 --->
//│ 	case force⁰(xs¹⁰) of {LH_C hx⁸ tx⁸ => case force⁰(ys¹⁰) of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 771
//│ [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)]: 717 --->
//│ 	case ls¹³ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum_₁_₀(t¹⁵)) | LH_N  => 0}: 734
//│ [LH_N]: 718 --->
//│ 	case ls¹³ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum_₁_₀(t¹⁵)) | LH_N  => 0}: 734
//│ [LH_N]: 720 --->
//│ 	case ls¹³ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum_₁_₀(t¹⁵)) | LH_N  => 0}: 734
//│ [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)]: 767 --->
//│ 	case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]}: 719
//│ [LH_N]: 768 --->
//│ 	case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]}: 719
//│ [LH_N]: 770 --->
//│ 	case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]}: 719
//│ [LH_P2 hx⁹ hy⁹]: 798 --->
//│ 	case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 915
//│ [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)]: 804 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 917
//│ [LH_N]: 805 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 917
//│ [LH_N]: 807 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 917
//│ [LH_C a⁷ enumFromTo_₀_₀((a⁷ + 1), b⁵)]: 826 --->
//│ 	case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 808
//│ [LH_N]: 827 --->
//│ 	case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 808
//│ [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 911 --->
//│ 	case ls¹⁴ of {LH_C h¹⁶ t¹⁶ => (h¹⁶ + sum_₀_₀(t¹⁶)) | LH_N  => 0}: 785
//│ [LH_N]: 916 --->
//│ 	case ls¹⁴ of {LH_C h¹⁶ t¹⁶ => (h¹⁶ + sum_₀_₀(t¹⁶)) | LH_N  => 0}: 785
//│ ------------------
//│ case xs⁶ of {LH_C hx⁵ tx⁵ => case ys⁶ of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_₀_₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 521 --->
//│ 	[LH_N]: 639
//│ 	[LH_C 0 [LH_N]]: 640
//│ 	[LH_C h¹⁴ mappend_₀_₀(t¹⁴, ys⁸)]: 683
//│ case force⁰(xs⁹) of {LH_C hx⁷ tx⁷ => [LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)] | LH_N  => [LH_N]}: 719 --->
//│ 	[LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)]: 767
//│ 	[LH_N]: 768
//│ 	[LH_N]: 770
//│ case ls¹³ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum_₁_₀(t¹⁵)) | LH_N  => 0}: 734 --->
//│ 	[LH_C f¹⁴(hx⁷, hy⁷) zipWith_lz_nl_₀_₀(f¹⁴, tx⁷, ty⁷)]: 717
//│ 	[LH_N]: 718
//│ 	[LH_N]: 720
//│ case force⁰(xs¹⁰) of {LH_C hx⁸ tx⁸ => case force⁰(ys¹⁰) of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith_lz_lz_₁_₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 771 --->
//│ 	[LH_C x³ iterate_₀_₀(f¹³, f¹³(x³))]: 697
//│ case ls¹⁴ of {LH_C h¹⁶ t¹⁶ => (h¹⁶ + sum_₀_₀(t¹⁶)) | LH_N  => 0}: 785 --->
//│ 	[LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 911
//│ 	[LH_N]: 916
//│ case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 808 --->
//│ 	[LH_C a⁷ enumFromTo_₀_₀((a⁷ + 1), b⁵)]: 826
//│ 	[LH_N]: 827
//│ case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 915 --->
//│ 	[LH_P2 hx⁹ hy⁹]: 798
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a⁸ -> (fun b⁶ -> (a⁸ * b⁶))), powers¹, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 917 --->
//│ 	[LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz_₀_₀(tx⁹, ty⁹)]: 804
//│ 	[LH_N]: 805
//│ 	[LH_N]: 807
//│ case force⁰(ls¹⁶) of {LH_C h¹⁸ t¹⁸ => if (n³ == 0) then h¹⁸ else atIndex_lz_₀_₀((n³ - 1), t¹⁸) | LH_N  => error⁰}: 963 --->
//│ 	[LH_C f¹²(h¹³) map_lz_₀_₀(f¹², t¹³)]: 670
//│ 	[LH_N]: 671
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testBernoulli_nofib_₀_₀(primId⁰(1500))
//│ def testBernoulli_nofib_₀_₀(_lh_testBernoulli_nofib_arg1²) = 
//│ 	bernoulli_₀_₀(_lh_testBernoulli_nofib_arg1²)
//│ 	where
//│ 	def bernoulli_₀_₀(_lh_bernoulli_arg1²) = 
//│ 		case _lh_bernoulli_arg1² of {
//│ 			0  => 1
//│ 			| 1  => (0 - (1 / 2))
//│ 			| _  => if ((_lh_bernoulli_arg1² % 2) == 1) then 0 else 
//│ 				let powers⁶ = atIndex_lz_₀_₀((_lh_bernoulli_arg1² - 1), force⁰(neg_powers_₀_₀))
//│ 				in (((0 - 1) / 2) + sum_₀_₀(
//│ 					let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para² -> _lh_listcomp_fun_para²(_lh_listcomp_fun⁶, powers⁶))
//│ 					in _lh_listcomp_fun⁶(zip_nl_lz_₀_₀(enumFromTo_₀_₀(2, _lh_bernoulli_arg1²), pascal_₀_₀))))}
//│ 		where
//│ 		def atIndex_lz_₀_₀(n⁷, ls²⁶) = 
//│ 			if (n⁷ < 0) then error⁰ else force⁰(ls²⁶, n⁷)
//│ 		def enumFromTo_₀_₀(a¹¹, b⁹) = 
//│ 			if (a¹¹ <= b⁹) then 
//│ 				let tx¹⁰ = enumFromTo_₀_₀((a¹¹ + 1), b⁹)
//│ 				in let hx¹⁰ = a¹¹
//│ 				in (fun ys¹³ -> case force⁰(ys¹³) of {
//│ 					LH_C hy⁹ ty⁹ => 
//│ 						let _lh_listcomp_fun_ls_t² = zip_nl_lz_₀_₀(tx¹⁰, ty⁹)
//│ 						in let _lh_listcomp_fun_ls_h² = 	
//│ 							let _lh_bernoulli_LH_P2_1² = hy⁹
//│ 							in let _lh_bernoulli_LH_P2_0² = hx¹⁰
//│ 							in (fun _lh_listcomp_fun_ls_t³ -> (fun _lh_listcomp_fun³ -> (fun powers³ -> 
//│ 								let t²⁰ = _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)
//│ 								in let h²⁰ = ((sum_₁_₀(zipWith_lz_nl_₀_₀((fun a¹² -> (fun b¹⁰ -> (a¹² * b¹⁰))), powers³, tail_₀_₀(tail_₁_₀(_lh_bernoulli_LH_P2_1²)))) - _lh_bernoulli_LH_P2_0²) / (_lh_bernoulli_LH_P2_0² + 1))
//│ 								in (fun _lh_dummy⁰ -> (h²⁰ + sum_₀_₀(t²⁰))))))
//│ 						in (fun _lh_listcomp_fun² -> (fun powers² -> _lh_listcomp_fun_ls_h²(_lh_listcomp_fun_ls_t², _lh_listcomp_fun², powers²)))
//│ 					| LH_N  => (fun _lh_listcomp_fun⁴ -> (fun powers⁴ -> (fun _lh_dummy¹ -> 0)))}) else (fun ys¹⁴ -> (fun _lh_listcomp_fun⁵ -> (fun powers⁵ -> (fun _lh_dummy² -> 0))))
//│ 		def neg_powers_₀_₀ = 
//│ 			lazy⁰(map_lz_₀_₀(zipWith_lz_lz_₁_₀((fun n⁴ -> (fun x⁴ -> if n⁴ then x⁴ else (0 - x⁴))), iterate_₀_₀(not⁰, [True])), powers_₀_₀))
//│ 			where
//│ 			def iterate_₀_₀(f²², x⁵) = 
//│ 				lazy⁰(
//│ 					let tx¹² = iterate_₀_₀(f²², f²²(x⁵))
//│ 					in let hx¹² = x⁵
//│ 					in (fun f²³ -> (fun ys¹⁸ -> case force⁰(ys¹⁸) of {
//│ 						LH_C hy⁸ ty⁸ => 
//│ 							let tx¹³ = zipWith_lz_lz_₁_₀(f²³, tx¹², ty⁸)
//│ 							in let hx¹³ = f²³(hx¹², hy⁸)
//│ 							in (fun f²⁴ -> (fun hy¹⁰ -> (fun ty¹⁰ -> 
//│ 								let t²² = zipWith_lz_nl_₀_₀(f²⁴, tx¹³, ty¹⁰)
//│ 								in let h²² = f²⁴(hx¹³, hy¹⁰)
//│ 								in (fun _lh_dummy³ -> (h²² + sum_₁_₀(t²²))))))
//│ 						| LH_N  => (fun f²⁵ -> (fun hy¹¹ -> (fun ty¹¹ -> (fun _lh_dummy⁴ -> 0))))})))
//│ 			def map_lz_₀_₀(f¹⁸, ls²³) = 
//│ 				lazy⁰(case force⁰(ls²³) of {
//│ 					LH_C h¹³ t¹³ => 
//│ 						let t²¹ = map_lz_₀_₀(f¹⁸, t¹³)
//│ 						in let h²¹ = f¹⁸(h¹³)
//│ 						in (fun n⁵ -> if (n⁵ == 0) then h²¹ else atIndex_lz_₀_₀((n⁵ - 1), t²¹))
//│ 					| LH_N  => (fun n⁶ -> error⁰)})
//│ 			def powers_₀_₀ = 
//│ 				lazy⁰([LH_C enumFrom_₀_₀(2) map_lz_₁_₀((fun p² -> zipWith_lz_lz_₀_₀((fun a¹⁰ -> (fun b⁸ -> (a¹⁰ * b⁸))), head_lz_₀_₀(powers_₀_₀), p²)), powers_₀_₀)])
//│ 				where
//│ 				def enumFrom_₀_₀(a¹³) = 
//│ 					lazy⁰([LH_C a¹³ enumFrom_₀_₀((a¹³ + 1))])
//│ 				def head_lz_₀_₀(ls²⁰) = 
//│ 					case force⁰(ls²⁰) of {
//│ 						LH_C h¹⁹ t¹⁹ => h¹⁹
//│ 						| LH_N  => error⁰}
//│ 				def map_lz_₁_₀(f¹⁶, ls¹⁸) = 
//│ 					lazy⁰(case force⁰(ls¹⁸) of {
//│ 						LH_C h¹⁰ t¹⁰ => [LH_C f¹⁶(h¹⁰) map_lz_₁_₀(f¹⁶, t¹⁰)]
//│ 						| LH_N  => [LH_N]})
//│ 				def zipWith_lz_lz_₀_₀(f²⁰, xs¹³, ys¹⁵) = 
//│ 					lazy⁰(case force⁰(xs¹³) of {
//│ 						LH_C hx⁶ tx⁶ => case force⁰(ys¹⁵) of {
//│ 							LH_C hy⁶ ty⁶ => [LH_C f²⁰(hx⁶, hy⁶) zipWith_lz_lz_₀_₀(f²⁰, tx⁶, ty⁶)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ 			def zipWith_lz_lz_₁_₀(f²⁹, xs¹⁷, ys²³) = 
//│ 				lazy⁰(force⁰(xs¹⁷, f²⁹, ys²³))
//│ 		def pascal_₀_₀ = 
//│ 			lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂_₀((fun line² -> zipWith_₀_₀((fun a¹⁴ -> (fun b¹¹ -> (a¹⁴ + b¹¹))), mappend_₀_₀(line², 
//│ 				let tx¹⁴ = (fun f²⁷ -> (fun ys²⁰ -> [LH_N]))
//│ 				in let hx¹⁴ = 0
//│ 				in (fun f²⁶ -> (fun ys¹⁹ -> case ys¹⁹ of {
//│ 					LH_C hy⁵ ty⁵ => [LH_C f²⁶(hx¹⁴, hy⁵) zipWith_₀_₀(f²⁶, tx¹⁴, ty⁵)]
//│ 					| LH_N  => [LH_N]}))), [LH_C 0 line²])), pascal_₀_₀)])
//│ 			where
//│ 			def map_lz_₂_₀(f¹⁹, ls²⁴) = 
//│ 				lazy⁰(case force⁰(ls²⁴) of {
//│ 					LH_C h¹¹ t¹¹ => [LH_C f¹⁹(h¹¹) map_lz_₂_₀(f¹⁹, t¹¹)]
//│ 					| LH_N  => [LH_N]})
//│ 			def mappend_₀_₀(xs¹⁴, ys¹⁶) = 
//│ 				case xs¹⁴ of {
//│ 					LH_C h¹⁴ t¹⁴ => 
//│ 						let tx¹¹ = mappend_₀_₀(t¹⁴, ys¹⁶)
//│ 						in let hx¹¹ = h¹⁴
//│ 						in (fun f²¹ -> (fun ys¹⁷ -> case ys¹⁷ of {
//│ 							LH_C hy⁵ ty⁵ => [LH_C f²¹(hx¹¹, hy⁵) zipWith_₀_₀(f²¹, tx¹¹, ty⁵)]
//│ 							| LH_N  => [LH_N]}))
//│ 					| LH_N  => ys¹⁶}
//│ 			def zipWith_₀_₀(f¹⁷, xs¹², ys¹²) = 
//│ 				xs¹²(f¹⁷, ys¹²)
//│ 		def sum_₀_₀(ls²⁵) = 
//│ 			ls²⁵(99)
//│ 		def sum_₁_₀(ls¹⁹) = 
//│ 			ls¹⁹(99)
//│ 		def tail_₀_₀(ls²¹) = 
//│ 			case ls²¹ of {
//│ 				LH_C h¹⁷ t¹⁷ => t¹⁷
//│ 				| LH_N  => error⁰}
//│ 		def tail_₁_₀(ls²²) = 
//│ 			case ls²² of {
//│ 				LH_C h¹² t¹² => t¹²
//│ 				| LH_N  => error⁰}
//│ 		def zipWith_lz_nl_₀_₀(f²⁸, xs¹⁶, ys²²) = 
//│ 			case ys²² of {
//│ 				LH_C hy⁷ ty⁷ => force⁰(xs¹⁶, f²⁸, hy⁷, ty⁷)
//│ 				| LH_N  => (fun _lh_dummy⁵ -> 0)}
//│ 		def zip_nl_lz_₀_₀(xs¹⁵, ys²¹) = 
//│ 			xs¹⁵(ys²¹)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

