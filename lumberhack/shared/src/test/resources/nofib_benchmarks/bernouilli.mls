:NewParser
:ParseOnly

// NOTE: memory allocation negative numbers??
// -- powers = [[r^n | r<-[2..]] | n<-1..]
// powers :: [[Integer]]
// -- powers = [[(-1)^r * r^n | r<-[2..]] | n<-1..]
// neg_powers :: [[Integer]]
// pascal:: [[Integer]]
:lhInHaskell
:lhGenOCaml
powers = lazy ([2..] : (map_lz (\p -> zipWith_lz_lz (\a b -> a * b) (head_lz powers) p) powers))
neg_powers =
  lazy (map_lz (zipWith_lz_lz (\n x -> if n then x else (0-x)) (iterate not True)) powers)
pascal = lazy ([1,2,1] : map_lz (\line -> zipWith (\a b -> a + b) (mappend line [0]) (0:line)) pascal)
bernoulli 0 = 1
bernoulli 1 = 0 - (1 / 2)
bernoulli n =
  if ((n `mod` 2) == 1) then
    0
  else
    let powers = (atIndex_lz (n - 1) (force neg_powers)) in
      ((0-1)/2) + sum [ ((sum $ zipWith_lz_nl (\a b -> a * b) powers (tail $ tail combs)) - k) / (k+1) | (k,combs) <- zip_nl_lz [2..n] pascal ]
testBernoulli_nofib n = bernoulli n
testBernoulli_nofib $ primId 1500
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testBernoulli_nofib_₀^1302(primId⁰(1500))
//│ def atIndex_lz_₀(n⁶, ls²¹) = if (n⁶ < 0) then error⁰ else case force⁰(ls²¹) of {
//│ 	LH_C h²³ t²⁵ => if (n⁶ == 0) then h²³ else atIndex_lz_₀^1049((n⁶ - 1), t²⁵)
//│ 	| LH_N  => error⁰}
//│ def bernoulli_₀(_lh_bernoulli_arg1¹) = case _lh_bernoulli_arg1¹ of {
//│ 	0  => 1
//│ 	| 1  => (0 - (1 / 2))
//│ 	| _  => if ((_lh_bernoulli_arg1¹ % 2) == 1) then 0 else 
//│ 		let powers² = atIndex_lz_₀^865((_lh_bernoulli_arg1¹ - 1), force⁰(neg_powers_₀^873))
//│ 		in (((0 - 1) / 2) + sum_₀^887(
//│ 			let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 					LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁^892(zipWith_lz_nl_₀^893((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀^904(tail_₁^905(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 					| _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}
//│ 				| LH_N  => [LH_N]})
//│ 			in _lh_listcomp_fun¹(zip_nl_lz_₀^933(enumFromTo_₀^934(2, _lh_bernoulli_arg1¹), pascal_₀^940))))}
//│ def enumFromTo_₀(a⁹, b⁶) = if (a⁹ <= b⁶) then [LH_C a⁹ enumFromTo_₀^1070((a⁹ + 1), b⁶)] else [LH_N]
//│ def enumFrom_₀(a¹⁰) = lazy⁰([LH_C a¹⁰ enumFrom_₀^1144((a¹⁰ + 1))])
//│ def head_lz_₀(ls²³) = case force⁰(ls²³) of {
//│ 	LH_C h²⁵ t²⁷ => h²⁵
//│ 	| LH_N  => error⁰}
//│ def iterate_₀(f¹³, x⁴) = lazy⁰([LH_C x⁴ iterate_₀^988(f¹³, f¹³(x⁴))])
//│ def map_lz_₀(f¹⁷, ls²⁵) = lazy⁰(case force⁰(ls²⁵) of {
//│ 	LH_C h²⁷ t²⁹ => [LH_C f¹⁷(h²⁷) map_lz_₀^1161(f¹⁷, t²⁹)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_₁(f¹⁹, ls²⁷) = lazy⁰(case force⁰(ls²⁷) of {
//│ 	LH_C h²⁹ t³¹ => [LH_C f¹⁹(h²⁹) map_lz_₁^1210(f¹⁹, t³¹)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_₂(f¹⁵, ls²²) = lazy⁰(case force⁰(ls²²) of {
//│ 	LH_C h²⁴ t²⁶ => [LH_C f¹⁵(h²⁴) map_lz_₂^1091(f¹⁵, t²⁶)]
//│ 	| LH_N  => [LH_N]})
//│ def mappend_₀(xs¹⁰, ys¹⁰) = case xs¹⁰ of {
//│ 	LH_C h²¹ t²³ => [LH_C h²¹ mappend_₀^976(t²³, ys¹⁰)]
//│ 	| LH_N  => ys¹⁰}
//│ def neg_powers_₀ = lazy⁰(map_lz_₀^951(zipWith_lz_lz_₁^952((fun n⁵ -> (fun x³ -> if n⁵ then x³ else (0 - x³))), iterate_₀^964(not⁰, [True])), powers_₀^971))
//│ def pascal_₀ = lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂^1229((fun line¹ -> zipWith_₀^1230((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend_₀^1239(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀^1253)])
//│ def powers_₀ = lazy⁰([LH_C enumFrom_₀^1258(2) map_lz_₁^1261((fun p¹ -> zipWith_lz_lz_₀^1262((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), head_lz_₀^1271(powers_₀^1272), p¹)), powers_₀^1279)])
//│ def sum_₀(ls²⁰) = case ls²⁰ of {
//│ 	LH_C h²² t²⁴ => (h²² + sum_₀^1027(t²⁴))
//│ 	| LH_N  => 0}
//│ def sum_₁(ls¹⁹) = case ls¹⁹ of {
//│ 	LH_C h²⁰ t²² => (h²⁰ + sum_₁^809(t²²))
//│ 	| LH_N  => 0}
//│ def tail_₀(ls²⁴) = case ls²⁴ of {
//│ 	LH_C h²⁶ t²⁸ => t²⁸
//│ 	| LH_N  => error⁰}
//│ def tail_₁(ls²⁶) = case ls²⁶ of {
//│ 	LH_C h²⁸ t³⁰ => t³⁰
//│ 	| LH_N  => error⁰}
//│ def testBernoulli_nofib_₀(_lh_testBernoulli_nofib_arg1¹) = bernoulli_₀^1199(_lh_testBernoulli_nofib_arg1¹)
//│ def zipWith_lz_lz_₀(f¹², xs⁹, ys⁹) = lazy⁰(case force⁰(xs⁹) of {
//│ 	LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀^828(f¹², tx⁸, ty⁸)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_₁(f¹⁶, xs¹², ys¹²) = lazy⁰(case force⁰(xs¹²) of {
//│ 	LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹²) of {
//│ 		LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁^1126(f¹⁶, tx¹⁰, ty¹⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_nl_₀(f¹⁴, xs¹¹, ys¹¹) = case ys¹¹ of {
//│ 	LH_C hy⁹ ty⁹ => case force⁰(xs¹¹) of {
//│ 		LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀^1008(f¹⁴, tx⁹, ty⁹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zipWith_₀(f¹⁸, xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C hx¹¹ tx¹¹ => case ys¹³ of {
//│ 		LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀^1179(f¹⁸, tx¹¹, ty¹¹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zip_nl_lz_₀(xs¹⁴, ys¹⁴) = case xs¹⁴ of {
//│ 	LH_C hx¹² tx¹² => case force⁰(ys¹⁴) of {
//│ 		LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀^1290(tx¹², ty¹²)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec atIndex_lz__d0 n_6 ls_2_1 =
//│ 		  (if (n_6 < 0) then
//│ 		    (failwith "error")
//│ 		  else
//│ 		    (match (Lazy.force ls_2_1) with
//│ 		      | `LH_C(h_2_3, t_2_5) -> 
//│ 		        (if (n_6 = 0) then
//│ 		          h_2_3
//│ 		        else
//│ 		          ((atIndex_lz__d0 (n_6 - 1)) t_2_5))
//│ 		      | `LH_N -> 
//│ 		        (failwith "error")))
//│ 		and bernoulli__d0 _lh_bernoulli_arg1_1 =
//│ 		  (match _lh_bernoulli_arg1_1 with
//│ 		    | 0 -> 
//│ 		      1
//│ 		    | 1 -> 
//│ 		      (0 - (1 / 2))
//│ 		    | _ -> 
//│ 		      (if ((_lh_bernoulli_arg1_1 mod 2) = 1) then
//│ 		        0
//│ 		      else
//│ 		        (let rec powers_2 = ((atIndex_lz__d0 (_lh_bernoulli_arg1_1 - 1)) (Lazy.force neg_powers__d0)) in
//│ 		          (((0 - 1) / 2) + (sum__d0 (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		            (match _lh_listcomp_fun_para_1 with
//│ 		              | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                (match _lh_listcomp_fun_ls_h_1 with
//│ 		                  | `LH_P2(_lh_bernoulli_LH_P2_0_1, _lh_bernoulli_LH_P2_1_1) -> 
//│ 		                    (`LH_C((((sum__d1 (((zipWith_lz_nl__d0 (fun a_8 b_5 -> 
//│ 		                      (a_8 * b_5))) powers_2) (tail__d0 (tail__d1 _lh_bernoulli_LH_P2_1_1)))) - _lh_bernoulli_LH_P2_0_1) / (_lh_bernoulli_LH_P2_0_1 + 1)), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		                  | _ -> 
//│ 		                    (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))
//│ 		              | `LH_N -> 
//│ 		                (`LH_N))) in
//│ 		            (_lh_listcomp_fun_1 ((zip_nl_lz__d0 ((enumFromTo__d0 2) _lh_bernoulli_arg1_1)) pascal__d0))))))))
//│ 		and enumFromTo__d0 a_9 b_6 =
//│ 		  (if (a_9 <= b_6) then
//│ 		    (`LH_C(a_9, ((enumFromTo__d0 (a_9 + 1)) b_6)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFrom__d0 a_1_0 =
//│ 		  (lazy (`LH_C(a_1_0, (enumFrom__d0 (a_1_0 + 1)))))
//│ 		and head_lz__d0 ls_2_3 =
//│ 		  (match (Lazy.force ls_2_3) with
//│ 		    | `LH_C(h_2_5, t_2_7) -> 
//│ 		      h_2_5
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and iterate__d0 f_1_3 x_4 =
//│ 		  (lazy (`LH_C(x_4, ((iterate__d0 f_1_3) (f_1_3 x_4)))))
//│ 		and map_lz__d0 f_1_7 ls_2_5 =
//│ 		  (lazy (match (Lazy.force ls_2_5) with
//│ 		    | `LH_C(h_2_7, t_2_9) -> 
//│ 		      (`LH_C((f_1_7 h_2_7), ((map_lz__d0 f_1_7) t_2_9)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz__d1 f_1_9 ls_2_7 =
//│ 		  (lazy (match (Lazy.force ls_2_7) with
//│ 		    | `LH_C(h_2_9, t_3_1) -> 
//│ 		      (`LH_C((f_1_9 h_2_9), ((map_lz__d1 f_1_9) t_3_1)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz__d2 f_1_5 ls_2_2 =
//│ 		  (lazy (match (Lazy.force ls_2_2) with
//│ 		    | `LH_C(h_2_4, t_2_6) -> 
//│ 		      (`LH_C((f_1_5 h_2_4), ((map_lz__d2 f_1_5) t_2_6)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and mappend__d0 xs_1_0 ys_1_0 =
//│ 		  (match xs_1_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (`LH_C(h_2_1, ((mappend__d0 t_2_3) ys_1_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_0)
//│ 		and neg_powers__d0 =
//│ 		  (lazy ((map_lz__d0 ((zipWith_lz_lz__d1 (fun n_5 x_3 -> 
//│ 		    (if n_5 then
//│ 		      x_3
//│ 		    else
//│ 		      (0 - x_3)))) ((iterate__d0 not) true))) powers__d0))
//│ 		and pascal__d0 =
//│ 		  (lazy (`LH_C((`LH_C(1, (`LH_C(2, (`LH_C(1, (`LH_N))))))), ((map_lz__d2 (fun line_1 -> 
//│ 		    (((zipWith__d0 (fun a_1_1 b_7 -> 
//│ 		      (a_1_1 + b_7))) ((mappend__d0 line_1) (`LH_C(0, (`LH_N))))) (`LH_C(0, line_1))))) pascal__d0))))
//│ 		and powers__d0 =
//│ 		  (lazy (`LH_C((enumFrom__d0 2), ((map_lz__d1 (fun p_1 -> 
//│ 		    (((zipWith_lz_lz__d0 (fun a_1_2 b_8 -> 
//│ 		      (a_1_2 * b_8))) (head_lz__d0 powers__d0)) p_1))) powers__d0))))
//│ 		and sum__d0 ls_2_0 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_2, t_2_4) -> 
//│ 		      (h_2_2 + (sum__d0 t_2_4))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and sum__d1 ls_1_9 =
//│ 		  (match ls_1_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (h_2_0 + (sum__d1 t_2_2))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and tail__d0 ls_2_4 =
//│ 		  (match ls_2_4 with
//│ 		    | `LH_C(h_2_6, t_2_8) -> 
//│ 		      t_2_8
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and tail__d1 ls_2_6 =
//│ 		  (match ls_2_6 with
//│ 		    | `LH_C(h_2_8, t_3_0) -> 
//│ 		      t_3_0
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and testBernoulli_nofib__d0 _lh_testBernoulli_nofib_arg1_1 =
//│ 		  (bernoulli__d0 _lh_testBernoulli_nofib_arg1_1)
//│ 		and zipWith_lz_lz__d0 f_1_2 xs_9 ys_9 =
//│ 		  (lazy (match (Lazy.force xs_9) with
//│ 		    | `LH_C(hx_8, tx_8) -> 
//│ 		      (match (Lazy.force ys_9) with
//│ 		        | `LH_C(hy_8, ty_8) -> 
//│ 		          (`LH_C(((f_1_2 hx_8) hy_8), (((zipWith_lz_lz__d0 f_1_2) tx_8) ty_8)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and zipWith_lz_lz__d1 f_1_6 xs_1_2 ys_1_2 =
//│ 		  (lazy (match (Lazy.force xs_1_2) with
//│ 		    | `LH_C(hx_1_0, tx_1_0) -> 
//│ 		      (match (Lazy.force ys_1_2) with
//│ 		        | `LH_C(hy_1_0, ty_1_0) -> 
//│ 		          (`LH_C(((f_1_6 hx_1_0) hy_1_0), (((zipWith_lz_lz__d1 f_1_6) tx_1_0) ty_1_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and zipWith_lz_nl__d0 f_1_4 xs_1_1 ys_1_1 =
//│ 		  (match ys_1_1 with
//│ 		    | `LH_C(hy_9, ty_9) -> 
//│ 		      (match (Lazy.force xs_1_1) with
//│ 		        | `LH_C(hx_9, tx_9) -> 
//│ 		          (`LH_C(((f_1_4 hx_9) hy_9), (((zipWith_lz_nl__d0 f_1_4) tx_9) ty_9)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and zipWith__d0 f_1_8 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(hx_1_1, tx_1_1) -> 
//│ 		      (match ys_1_3 with
//│ 		        | `LH_C(hy_1_1, ty_1_1) -> 
//│ 		          (`LH_C(((f_1_8 hx_1_1) hy_1_1), (((zipWith__d0 f_1_8) tx_1_1) ty_1_1)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and zip_nl_lz__d0 xs_1_4 ys_1_4 =
//│ 		  (match xs_1_4 with
//│ 		    | `LH_C(hx_1_2, tx_1_2) -> 
//│ 		      (match (Lazy.force ys_1_4) with
//│ 		        | `LH_C(hy_1_2, ty_1_2) -> 
//│ 		          (`LH_C((`LH_P2(hx_1_2, hy_1_2)), ((zip_nl_lz__d0 tx_1_2) ty_1_2)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		(testBernoulli_nofib__d0 1500)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)]: 835 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 837
//│ 	case force⁰(ys¹²) of {LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]}: 1135
//│ [LH_N]: 836 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 837
//│ 	case force⁰(ys¹²) of {LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]}: 1135
//│ [LH_N]: 838 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 837
//│ 	case force⁰(ys¹²) of {LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]}: 1135
//│ [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 924 --->
//│ 	case ls²⁰ of {LH_C h²² t²⁴ => (h²² + sum_₀(t²⁴)) | LH_N  => 0}: 1032
//│ [LH_N]: 929 --->
//│ 	case ls²⁰ of {LH_C h²² t²⁴ => (h²² + sum_₀(t²⁴)) | LH_N  => 0}: 1032
//│ [LH_C h²¹ mappend_₀(t²³, ys¹⁰)]: 981 --->
//│ 	case xs¹³ of {LH_C hx¹¹ tx¹¹ => case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1190
//│ [LH_C x⁴ iterate_₀(f¹³, f¹³(x⁴))]: 995 --->
//│ 	case force⁰(xs¹²) of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹²) of {LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1137
//│ [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)]: 1015 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => (h²⁰ + sum_₁(t²²)) | LH_N  => 0}: 814
//│ [LH_N]: 1016 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => (h²⁰ + sum_₁(t²²)) | LH_N  => 0}: 814
//│ [LH_N]: 1018 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => (h²⁰ + sum_₁(t²²)) | LH_N  => 0}: 814
//│ [LH_C a⁹ enumFromTo_₀((a⁹ + 1), b⁶)]: 1079 --->
//│ 	case xs¹⁴ of {LH_C hx¹² tx¹² => case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1299
//│ [LH_N]: 1080 --->
//│ 	case xs¹⁴ of {LH_C hx¹² tx¹² => case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1299
//│ [LH_C f¹⁵(h²⁴) map_lz_₂(f¹⁵, t²⁶)]: 1096 --->
//│ 	case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => [LH_C f¹⁵(h²⁴) map_lz_₂(f¹⁵, t²⁶)] | LH_N  => [LH_N]}: 1098
//│ 	case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]}: 1297
//│ [LH_N]: 1097 --->
//│ 	case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => [LH_C f¹⁵(h²⁴) map_lz_₂(f¹⁵, t²⁶)] | LH_N  => [LH_N]}: 1098
//│ 	case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]}: 1297
//│ [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)]: 1133 --->
//│ 	case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 1017
//│ [LH_N]: 1134 --->
//│ 	case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 1017
//│ [LH_N]: 1136 --->
//│ 	case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 1017
//│ [LH_C a¹⁰ enumFrom_₀((a¹⁰ + 1))]: 1151 --->
//│ 	case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 837
//│ 	case force⁰(xs⁹) of {LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 839
//│ 	case force⁰(ys¹²) of {LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]}: 1135
//│ [LH_C f¹⁷(h²⁷) map_lz_₀(f¹⁷, t²⁹)]: 1166 --->
//│ 	case force⁰(ls²¹) of {LH_C h²³ t²⁵ => if (n⁶ == 0) then h²³ else atIndex_lz_₀((n⁶ - 1), t²⁵) | LH_N  => error⁰}: 1060
//│ [LH_N]: 1167 --->
//│ 	case force⁰(ls²¹) of {LH_C h²³ t²⁵ => if (n⁶ == 0) then h²³ else atIndex_lz_₀((n⁶ - 1), t²⁵) | LH_N  => error⁰}: 1060
//│ [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)]: 1186 --->
//│ 	case xs¹⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₀(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 983
//│ 	case ys¹¹ of {LH_C hy⁹ ty⁹ => case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1019
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => t²⁸ | LH_N  => error⁰}: 1112
//│ 	case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 1188
//│ 	case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1197
//│ [LH_N]: 1187 --->
//│ 	case xs¹⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₀(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 983
//│ 	case ys¹¹ of {LH_C hy⁹ ty⁹ => case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1019
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => t²⁸ | LH_N  => error⁰}: 1112
//│ 	case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 1188
//│ 	case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1197
//│ [LH_N]: 1189 --->
//│ 	case xs¹⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₀(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 983
//│ 	case ys¹¹ of {LH_C hy⁹ ty⁹ => case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1019
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => t²⁸ | LH_N  => error⁰}: 1112
//│ 	case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 1188
//│ 	case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1197
//│ [LH_C f¹⁹(h²⁹) map_lz_₁(f¹⁹, t³¹)]: 1215 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls²⁵) of {LH_C h²⁷ t²⁹ => [LH_C f¹⁷(h²⁷) map_lz_₀(f¹⁷, t²⁹)] | LH_N  => [LH_N]}: 1168
//│ 	case force⁰(ls²⁷) of {LH_C h²⁹ t³¹ => [LH_C f¹⁹(h²⁹) map_lz_₁(f¹⁹, t³¹)] | LH_N  => [LH_N]}: 1217
//│ [LH_N]: 1216 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls²⁵) of {LH_C h²⁷ t²⁹ => [LH_C f¹⁷(h²⁷) map_lz_₀(f¹⁷, t²⁹)] | LH_N  => [LH_N]}: 1168
//│ 	case force⁰(ls²⁷) of {LH_C h²⁹ t³¹ => [LH_C f¹⁹(h²⁹) map_lz_₁(f¹⁹, t³¹)] | LH_N  => [LH_N]}: 1217
//│ [LH_N]: 1225 --->
//│ 	case xs¹⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₀(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 983
//│ 	case ys¹¹ of {LH_C hy⁹ ty⁹ => case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1019
//│ 	case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 1188
//│ [LH_C 1 [LH_N]]: 1226 --->
//│ 	case xs¹⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₀(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 983
//│ 	case ys¹¹ of {LH_C hy⁹ ty⁹ => case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1019
//│ 	case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 1188
//│ [LH_C 2 [LH_C 1 [LH_N]]]: 1227 --->
//│ 	case xs¹⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₀(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 983
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => t²⁸ | LH_N  => error⁰}: 1112
//│ 	case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 1188
//│ [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 1228 --->
//│ 	case xs¹⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₀(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 983
//│ 	case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 1188
//│ 	case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1197
//│ [LH_N]: 1243 --->
//│ 	case xs¹³ of {LH_C hx¹¹ tx¹¹ => case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1190
//│ [LH_C 0 [LH_N]]: 1244 --->
//│ 	case xs¹³ of {LH_C hx¹¹ tx¹¹ => case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1190
//│ [LH_C 0 line¹]: 1249 --->
//│ 	case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 1188
//│ [LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂((fun line¹ -> zipWith_₀((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀)]: 1255 --->
//│ 	case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => [LH_C f¹⁵(h²⁴) map_lz_₂(f¹⁵, t²⁶)] | LH_N  => [LH_N]}: 1098
//│ 	case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]}: 1297
//│ [LH_C enumFrom_₀(2) map_lz_₁((fun p¹ -> zipWith_lz_lz_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), head_lz_₀(powers_₀), p¹)), powers_₀)]: 1281 --->
//│ 	case force⁰(ls²³) of {LH_C h²⁵ t²⁷ => h²⁵ | LH_N  => error⁰}: 1107
//│ 	case force⁰(ls²⁵) of {LH_C h²⁷ t²⁹ => [LH_C f¹⁷(h²⁷) map_lz_₀(f¹⁷, t²⁹)] | LH_N  => [LH_N]}: 1168
//│ 	case force⁰(ls²⁷) of {LH_C h²⁹ t³¹ => [LH_C f¹⁹(h²⁹) map_lz_₁(f¹⁹, t³¹)] | LH_N  => [LH_N]}: 1217
//│ [LH_P2 hx¹² hy¹²]: 1289 --->
//│ 	case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 928
//│ [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)]: 1295 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 930
//│ [LH_N]: 1296 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 930
//│ [LH_N]: 1298 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 930
//│ ------------------
//│ case ls¹⁹ of {LH_C h²⁰ t²² => (h²⁰ + sum_₁(t²²)) | LH_N  => 0}: 814 --->
//│ 	[LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)]: 1015
//│ 	[LH_N]: 1016
//│ 	[LH_N]: 1018
//│ case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 837 --->
//│ 	[LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)]: 835
//│ 	[LH_N]: 836
//│ 	[LH_N]: 838
//│ 	[LH_C a¹⁰ enumFrom_₀((a¹⁰ + 1))]: 1151
//│ case force⁰(xs⁹) of {LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 839 --->
//│ 	[LH_C a¹⁰ enumFrom_₀((a¹⁰ + 1))]: 1151
//│ case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 928 --->
//│ 	[LH_P2 hx¹² hy¹²]: 1289
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 930 --->
//│ 	[LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)]: 1295
//│ 	[LH_N]: 1296
//│ 	[LH_N]: 1298
//│ case xs¹⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₀(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 983 --->
//│ 	[LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)]: 1186
//│ 	[LH_N]: 1187
//│ 	[LH_N]: 1189
//│ 	[LH_N]: 1225
//│ 	[LH_C 1 [LH_N]]: 1226
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 1227
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 1228
//│ case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 1017 --->
//│ 	[LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)]: 1133
//│ 	[LH_N]: 1134
//│ 	[LH_N]: 1136
//│ case ys¹¹ of {LH_C hy⁹ ty⁹ => case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1019 --->
//│ 	[LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)]: 1186
//│ 	[LH_N]: 1187
//│ 	[LH_N]: 1189
//│ 	[LH_N]: 1225
//│ 	[LH_C 1 [LH_N]]: 1226
//│ case ls²⁰ of {LH_C h²² t²⁴ => (h²² + sum_₀(t²⁴)) | LH_N  => 0}: 1032 --->
//│ 	[LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 924
//│ 	[LH_N]: 929
//│ case force⁰(ls²¹) of {LH_C h²³ t²⁵ => if (n⁶ == 0) then h²³ else atIndex_lz_₀((n⁶ - 1), t²⁵) | LH_N  => error⁰}: 1060 --->
//│ 	[LH_C f¹⁷(h²⁷) map_lz_₀(f¹⁷, t²⁹)]: 1166
//│ 	[LH_N]: 1167
//│ case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => [LH_C f¹⁵(h²⁴) map_lz_₂(f¹⁵, t²⁶)] | LH_N  => [LH_N]}: 1098 --->
//│ 	[LH_C f¹⁵(h²⁴) map_lz_₂(f¹⁵, t²⁶)]: 1096
//│ 	[LH_N]: 1097
//│ 	[LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂((fun line¹ -> zipWith_₀((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀)]: 1255
//│ case force⁰(ls²³) of {LH_C h²⁵ t²⁷ => h²⁵ | LH_N  => error⁰}: 1107 --->
//│ 	[LH_C enumFrom_₀(2) map_lz_₁((fun p¹ -> zipWith_lz_lz_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), head_lz_₀(powers_₀), p¹)), powers_₀)]: 1281
//│ case ls²⁴ of {LH_C h²⁶ t²⁸ => t²⁸ | LH_N  => error⁰}: 1112 --->
//│ 	[LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)]: 1186
//│ 	[LH_N]: 1187
//│ 	[LH_N]: 1189
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 1227
//│ case force⁰(ys¹²) of {LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]}: 1135 --->
//│ 	[LH_C f¹²(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹², tx⁸, ty⁸)]: 835
//│ 	[LH_N]: 836
//│ 	[LH_N]: 838
//│ 	[LH_C a¹⁰ enumFrom_₀((a¹⁰ + 1))]: 1151
//│ case force⁰(xs¹²) of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹²) of {LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1137 --->
//│ 	[LH_C x⁴ iterate_₀(f¹³, f¹³(x⁴))]: 995
//│ case force⁰(ls²⁵) of {LH_C h²⁷ t²⁹ => [LH_C f¹⁷(h²⁷) map_lz_₀(f¹⁷, t²⁹)] | LH_N  => [LH_N]}: 1168 --->
//│ 	[LH_C f¹⁹(h²⁹) map_lz_₁(f¹⁹, t³¹)]: 1215
//│ 	[LH_N]: 1216
//│ 	[LH_C enumFrom_₀(2) map_lz_₁((fun p¹ -> zipWith_lz_lz_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), head_lz_₀(powers_₀), p¹)), powers_₀)]: 1281
//│ case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 1188 --->
//│ 	[LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)]: 1186
//│ 	[LH_N]: 1187
//│ 	[LH_N]: 1189
//│ 	[LH_N]: 1225
//│ 	[LH_C 1 [LH_N]]: 1226
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 1227
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 1228
//│ 	[LH_C 0 line¹]: 1249
//│ case xs¹³ of {LH_C hx¹¹ tx¹¹ => case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1190 --->
//│ 	[LH_C h²¹ mappend_₀(t²³, ys¹⁰)]: 981
//│ 	[LH_N]: 1243
//│ 	[LH_C 0 [LH_N]]: 1244
//│ case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1197 --->
//│ 	[LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)]: 1186
//│ 	[LH_N]: 1187
//│ 	[LH_N]: 1189
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 1228
//│ case force⁰(ls²⁷) of {LH_C h²⁹ t³¹ => [LH_C f¹⁹(h²⁹) map_lz_₁(f¹⁹, t³¹)] | LH_N  => [LH_N]}: 1217 --->
//│ 	[LH_C f¹⁹(h²⁹) map_lz_₁(f¹⁹, t³¹)]: 1215
//│ 	[LH_N]: 1216
//│ 	[LH_C enumFrom_₀(2) map_lz_₁((fun p¹ -> zipWith_lz_lz_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), head_lz_₀(powers_₀), p¹)), powers_₀)]: 1281
//│ case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]}: 1297 --->
//│ 	[LH_C f¹⁵(h²⁴) map_lz_₂(f¹⁵, t²⁶)]: 1096
//│ 	[LH_N]: 1097
//│ 	[LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂((fun line¹ -> zipWith_₀((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀)]: 1255
//│ case xs¹⁴ of {LH_C hx¹² tx¹² => case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1299 --->
//│ 	[LH_C a⁹ enumFromTo_₀((a⁹ + 1), b⁶)]: 1079
//│ 	[LH_N]: 1080
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 924 --->
//│ 	case ls²⁰ of {LH_C h²² t²⁴ => (h²² + sum_₀(t²⁴)) | LH_N  => 0}: 1032
//│ [LH_N]: 929 --->
//│ 	case ls²⁰ of {LH_C h²² t²⁴ => (h²² + sum_₀(t²⁴)) | LH_N  => 0}: 1032
//│ [LH_C h²¹ mappend_₀(t²³, ys¹⁰)]: 981 --->
//│ 	case xs¹³ of {LH_C hx¹¹ tx¹¹ => case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1190
//│ [LH_C x⁴ iterate_₀(f¹³, f¹³(x⁴))]: 995 --->
//│ 	case force⁰(xs¹²) of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹²) of {LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1137
//│ [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)]: 1015 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => (h²⁰ + sum_₁(t²²)) | LH_N  => 0}: 814
//│ [LH_N]: 1016 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => (h²⁰ + sum_₁(t²²)) | LH_N  => 0}: 814
//│ [LH_N]: 1018 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => (h²⁰ + sum_₁(t²²)) | LH_N  => 0}: 814
//│ [LH_C a⁹ enumFromTo_₀((a⁹ + 1), b⁶)]: 1079 --->
//│ 	case xs¹⁴ of {LH_C hx¹² tx¹² => case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1299
//│ [LH_N]: 1080 --->
//│ 	case xs¹⁴ of {LH_C hx¹² tx¹² => case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1299
//│ [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)]: 1133 --->
//│ 	case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 1017
//│ [LH_N]: 1134 --->
//│ 	case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 1017
//│ [LH_N]: 1136 --->
//│ 	case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 1017
//│ [LH_C f¹⁷(h²⁷) map_lz_₀(f¹⁷, t²⁹)]: 1166 --->
//│ 	case force⁰(ls²¹) of {LH_C h²³ t²⁵ => if (n⁶ == 0) then h²³ else atIndex_lz_₀((n⁶ - 1), t²⁵) | LH_N  => error⁰}: 1060
//│ [LH_N]: 1167 --->
//│ 	case force⁰(ls²¹) of {LH_C h²³ t²⁵ => if (n⁶ == 0) then h²³ else atIndex_lz_₀((n⁶ - 1), t²⁵) | LH_N  => error⁰}: 1060
//│ [LH_N]: 1243 --->
//│ 	case xs¹³ of {LH_C hx¹¹ tx¹¹ => case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1190
//│ [LH_C 0 [LH_N]]: 1244 --->
//│ 	case xs¹³ of {LH_C hx¹¹ tx¹¹ => case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1190
//│ [LH_P2 hx¹² hy¹²]: 1289 --->
//│ 	case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 928
//│ [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)]: 1295 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 930
//│ [LH_N]: 1296 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 930
//│ [LH_N]: 1298 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 930
//│ ------------------
//│ case ls¹⁹ of {LH_C h²⁰ t²² => (h²⁰ + sum_₁(t²²)) | LH_N  => 0}: 814 --->
//│ 	[LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)]: 1015
//│ 	[LH_N]: 1016
//│ 	[LH_N]: 1018
//│ case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 928 --->
//│ 	[LH_P2 hx¹² hy¹²]: 1289
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 930 --->
//│ 	[LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)]: 1295
//│ 	[LH_N]: 1296
//│ 	[LH_N]: 1298
//│ case force⁰(xs¹¹) of {LH_C hx⁹ tx⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_nl_₀(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 1017 --->
//│ 	[LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)]: 1133
//│ 	[LH_N]: 1134
//│ 	[LH_N]: 1136
//│ case ls²⁰ of {LH_C h²² t²⁴ => (h²² + sum_₀(t²⁴)) | LH_N  => 0}: 1032 --->
//│ 	[LH_C ((sum_₁(zipWith_lz_nl_₀((fun a⁸ -> (fun b⁵ -> (a⁸ * b⁵))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 924
//│ 	[LH_N]: 929
//│ case force⁰(ls²¹) of {LH_C h²³ t²⁵ => if (n⁶ == 0) then h²³ else atIndex_lz_₀((n⁶ - 1), t²⁵) | LH_N  => error⁰}: 1060 --->
//│ 	[LH_C f¹⁷(h²⁷) map_lz_₀(f¹⁷, t²⁹)]: 1166
//│ 	[LH_N]: 1167
//│ case force⁰(xs¹²) of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹²) of {LH_C hy¹⁰ ty¹⁰ => [LH_C f¹⁶(hx¹⁰, hy¹⁰) zipWith_lz_lz_₁(f¹⁶, tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1137 --->
//│ 	[LH_C x⁴ iterate_₀(f¹³, f¹³(x⁴))]: 995
//│ case xs¹³ of {LH_C hx¹¹ tx¹¹ => case ys¹³ of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁸(hx¹¹, hy¹¹) zipWith_₀(f¹⁸, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1190 --->
//│ 	[LH_C h²¹ mappend_₀(t²³, ys¹⁰)]: 981
//│ 	[LH_N]: 1243
//│ 	[LH_C 0 [LH_N]]: 1244
//│ case xs¹⁴ of {LH_C hx¹² tx¹² => case force⁰(ys¹⁴) of {LH_C hy¹² ty¹² => [LH_C [LH_P2 hx¹² hy¹²] zip_nl_lz_₀(tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1299 --->
//│ 	[LH_C a⁹ enumFromTo_₀((a⁹ + 1), b⁶)]: 1079
//│ 	[LH_N]: 1080
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testBernoulli_nofib_₀(primId⁰(1500))
//│ def atIndex_lz_₀(n⁷, ls³¹) = if (n⁷ < 0) then error⁰ else force⁰(ls³¹, n⁷)
//│ def bernoulli_₀(_lh_bernoulli_arg1²) = case _lh_bernoulli_arg1² of {
//│ 	0  => 1
//│ 	| 1  => (0 - (1 / 2))
//│ 	| _  => if ((_lh_bernoulli_arg1² % 2) == 1) then 0 else 
//│ 		let powers³ = atIndex_lz_₀((_lh_bernoulli_arg1² - 1), force⁰(neg_powers_₀))
//│ 		in (((0 - 1) / 2) + sum_₀(
//│ 			let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> _lh_listcomp_fun_para²(_lh_listcomp_fun², powers³))
//│ 			in _lh_listcomp_fun²(zip_nl_lz_₀(enumFromTo_₀(2, _lh_bernoulli_arg1²), pascal_₀))))}
//│ def enumFromTo_₀(a¹⁵, b¹⁰) = if (a¹⁵ <= b¹⁰) then 
//│ 	let tx¹⁶ = enumFromTo_₀((a¹⁵ + 1), b¹⁰)
//│ 	in let hx¹⁶ = a¹⁵
//│ 	in (fun ys²¹ -> case force⁰(ys²¹) of {
//│ 		LH_C hy¹² ty¹² => 
//│ 			let _lh_listcomp_fun_ls_t² = zip_nl_lz_₀(tx¹⁶, ty¹²)
//│ 			in let _lh_listcomp_fun_ls_h² = 	
//│ 				let _lh_bernoulli_LH_P2_1² = hy¹²
//│ 				in let _lh_bernoulli_LH_P2_0² = hx¹⁶
//│ 				in (fun _lh_listcomp_fun_ls_t³ -> (fun _lh_listcomp_fun⁴ -> (fun powers⁵ -> 
//│ 					let t³³ = _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t³)
//│ 					in let h³¹ = ((sum_₁(zipWith_lz_nl_₀((fun a¹⁶ -> (fun b¹¹ -> (a¹⁶ * b¹¹))), powers⁵, tail_₀(tail_₁(_lh_bernoulli_LH_P2_1²)))) - _lh_bernoulli_LH_P2_0²) / (_lh_bernoulli_LH_P2_0² + 1))
//│ 					in (fun _lh_dummy² -> (h³¹ + sum_₀(t³³))))))
//│ 			in (fun _lh_listcomp_fun³ -> (fun powers⁴ -> _lh_listcomp_fun_ls_h²(_lh_listcomp_fun_ls_t², _lh_listcomp_fun³, powers⁴)))
//│ 		| LH_N  => (fun _lh_listcomp_fun⁵ -> (fun powers⁶ -> (fun _lh_dummy³ -> 0)))}) else (fun ys²² -> (fun _lh_listcomp_fun⁶ -> (fun powers⁷ -> (fun _lh_dummy⁴ -> 0))))
//│ def enumFrom_₀(a¹³) = lazy⁰([LH_C a¹³ enumFrom_₀((a¹³ + 1))])
//│ def head_lz_₀(ls³²) = case force⁰(ls³²) of {
//│ 	LH_C h²⁵ t²⁷ => h²⁵
//│ 	| LH_N  => error⁰}
//│ def iterate_₀(f²⁴, x⁵) = lazy⁰(
//│ 	let tx¹⁴ = iterate_₀(f²⁴, f²⁴(x⁵))
//│ 	in let hx¹⁴ = x⁵
//│ 	in (fun f²⁵ -> (fun ys²⁰ -> case force⁰(ys²⁰) of {
//│ 		LH_C hy¹⁰ ty¹⁰ => 
//│ 			let tx¹⁵ = zipWith_lz_lz_₁(f²⁵, tx¹⁴, ty¹⁰)
//│ 			in let hx¹⁵ = f²⁵(hx¹⁴, hy¹⁰)
//│ 			in (fun f²⁶ -> (fun hy¹³ -> (fun ty¹³ -> 
//│ 				let t³² = zipWith_lz_nl_₀(f²⁶, tx¹⁵, ty¹³)
//│ 				in let h³⁰ = f²⁶(hx¹⁵, hy¹³)
//│ 				in (fun _lh_dummy⁰ -> (h³⁰ + sum_₁(t³²))))))
//│ 		| LH_N  => (fun f²⁷ -> (fun hy¹⁴ -> (fun ty¹⁴ -> (fun _lh_dummy¹ -> 0))))})))
//│ def map_lz_₀(f³², ls³⁵) = lazy⁰(case force⁰(ls³⁵) of {
//│ 	LH_C h²⁷ t²⁹ => 
//│ 		let t³⁴ = map_lz_₀(f³², t²⁹)
//│ 		in let h³² = f³²(h²⁷)
//│ 		in (fun n⁹ -> if (n⁹ == 0) then h³² else atIndex_lz_₀((n⁹ - 1), t³⁴))
//│ 	| LH_N  => (fun n¹⁰ -> error⁰)})
//│ def map_lz_₁(f²¹, ls²⁹) = lazy⁰(case force⁰(ls²⁹) of {
//│ 	LH_C h²⁹ t³¹ => [LH_C f²¹(h²⁹) map_lz_₁(f²¹, t³¹)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_₂(f²⁸, ls³³) = lazy⁰(case force⁰(ls³³) of {
//│ 	LH_C h²⁴ t²⁶ => [LH_C f²⁸(h²⁴) map_lz_₂(f²⁸, t²⁶)]
//│ 	| LH_N  => [LH_N]})
//│ def mappend_₀(xs¹⁶, ys¹⁶) = case xs¹⁶ of {
//│ 	LH_C h²¹ t²³ => 
//│ 		let tx¹³ = mappend_₀(t²³, ys¹⁶)
//│ 		in let hx¹³ = h²¹
//│ 		in (fun f²⁰ -> (fun ys¹⁷ -> case ys¹⁷ of {
//│ 			LH_C hy¹¹ ty¹¹ => [LH_C f²⁰(hx¹³, hy¹¹) zipWith_₀(f²⁰, tx¹³, ty¹¹)]
//│ 			| LH_N  => [LH_N]}))
//│ 	| LH_N  => ys¹⁶}
//│ def neg_powers_₀ = lazy⁰(map_lz_₀(zipWith_lz_lz_₁((fun n⁸ -> (fun x⁶ -> if n⁸ then x⁶ else (0 - x⁶))), iterate_₀(not⁰, [True])), powers_₀))
//│ def pascal_₀ = lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂((fun line² -> zipWith_₀((fun a¹⁷ -> (fun b¹² -> (a¹⁷ + b¹²))), mappend_₀(line², 
//│ 	let tx¹⁷ = (fun f³¹ -> (fun ys²⁵ -> [LH_N]))
//│ 	in let hx¹⁷ = 0
//│ 	in (fun f³⁰ -> (fun ys²⁴ -> case ys²⁴ of {
//│ 		LH_C hy¹¹ ty¹¹ => [LH_C f³⁰(hx¹⁷, hy¹¹) zipWith_₀(f³⁰, tx¹⁷, ty¹¹)]
//│ 		| LH_N  => [LH_N]}))), [LH_C 0 line²])), pascal_₀)])
//│ def powers_₀ = lazy⁰([LH_C enumFrom_₀(2) map_lz_₁((fun p² -> zipWith_lz_lz_₀((fun a¹⁴ -> (fun b⁹ -> (a¹⁴ * b⁹))), head_lz_₀(powers_₀), p²)), powers_₀)])
//│ def sum_₀(ls³⁴) = ls³⁴(99)
//│ def sum_₁(ls²⁸) = ls²⁸(99)
//│ def tail_₀(ls³⁰) = case ls³⁰ of {
//│ 	LH_C h²⁶ t²⁸ => t²⁸
//│ 	| LH_N  => error⁰}
//│ def tail_₁(ls³⁶) = case ls³⁶ of {
//│ 	LH_C h²⁸ t³⁰ => t³⁰
//│ 	| LH_N  => error⁰}
//│ def testBernoulli_nofib_₀(_lh_testBernoulli_nofib_arg1²) = bernoulli_₀(_lh_testBernoulli_nofib_arg1²)
//│ def zipWith_lz_lz_₀(f²², xs¹⁷, ys¹⁸) = lazy⁰(case force⁰(xs¹⁷) of {
//│ 	LH_C hx⁸ tx⁸ => case force⁰(ys¹⁸) of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C f²²(hx⁸, hy⁸) zipWith_lz_lz_₀(f²², tx⁸, ty⁸)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_₁(f³³, xs²⁰, ys²⁶) = lazy⁰(force⁰(xs²⁰, f³³, ys²⁶))
//│ def zipWith_lz_nl_₀(f²⁹, xs¹⁹, ys²³) = case ys²³ of {
//│ 	LH_C hy⁹ ty⁹ => force⁰(xs¹⁹, f²⁹, hy⁹, ty⁹)
//│ 	| LH_N  => (fun _lh_dummy⁵ -> 0)}
//│ def zipWith_₀(f²³, xs¹⁸, ys¹⁹) = xs¹⁸(f²³, ys¹⁹)
//│ def zip_nl_lz_₀(xs¹⁵, ys¹⁵) = xs¹⁵(ys¹⁵)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

