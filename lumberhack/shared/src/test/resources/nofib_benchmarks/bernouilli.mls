:NewParser
:ParseOnly

// NOTE: memory allocation negative numbers??
// -- powers = [[r^n | r<-[2..]] | n<-1..]
// powers :: [[Integer]]
// -- powers = [[(-1)^r * r^n | r<-[2..]] | n<-1..]
// neg_powers :: [[Integer]]
// pascal:: [[Integer]]
:lhInHaskell
:lhGenOCaml
powers = lazy ([2..] : (map_lz (\p -> zipWith_lz_lz (\a b -> a * b) (head_lz powers) p) powers))
neg_powers =
  lazy (map_lz (zipWith_lz_lz (\n x -> if n then x else (0-x)) (iterate not True)) powers)
pascal = lazy ([1,2,1] : map_lz (\line -> zipWith (\a b -> a + b) (mappend line [0]) (0:line)) pascal)
bernoulli 0 = 1
bernoulli 1 = 0 - (1 / 2)
bernoulli n =
  if ((n `mod` 2) == 1) then
    0
  else
    let powers = (atIndex_lz (n - 1) (force neg_powers)) in
      ((0-1)/2) + sum [ ((sum $ zipWith_lz_nl (\a b -> a * b) powers (tail $ tail combs)) - k) / (k+1) | (k,combs) <- zip_nl_lz [2..n] pascal ]
testBernoulli_nofib n = bernoulli n
testBernoulli_nofib $ primId 1500
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testBernoulli_nofib_₀^1300(primId⁰(1500))
//│ def atIndex_lz_₀(n⁶, ls²²) = if (n⁶ < 0) then error⁰ else case force⁰(ls²²) of {
//│ 	LH_C h²⁴ t²⁶ => if (n⁶ == 0) then h²⁴ else atIndex_lz_₀^1021((n⁶ - 1), t²⁶)
//│ 	| LH_N  => error⁰}
//│ def bernoulli_₀(_lh_bernoulli_arg1¹) = case _lh_bernoulli_arg1¹ of {
//│ 	0  => 1
//│ 	| 1  => (0 - (1 / 2))
//│ 	| _  => if ((_lh_bernoulli_arg1¹ % 2) == 1) then 0 else 
//│ 		let powers² = atIndex_lz_₀^1191((_lh_bernoulli_arg1¹ - 1), force⁰(neg_powers_₀^1199))
//│ 		in (((0 - 1) / 2) + sum_₀^1213(
//│ 			let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 					LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁^1218(zipWith_lz_nl_₀^1219((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀^1230(tail_₁^1231(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 					| _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}
//│ 				| LH_N  => [LH_N]})
//│ 			in _lh_listcomp_fun¹(zip_nl_lz_₀^1259(enumFromTo_₀^1260(2, _lh_bernoulli_arg1¹), pascal_₀^1266))))}
//│ def enumFromTo_₀(a⁹, b⁵) = if (a⁹ <= b⁵) then [LH_C a⁹ enumFromTo_₀^1071((a⁹ + 1), b⁵)] else [LH_N]
//│ def enumFrom_₀(a⁸) = lazy⁰([LH_C a⁸ enumFrom_₀^996((a⁸ + 1))])
//│ def head_lz_₀(ls²⁵) = case force⁰(ls²⁵) of {
//│ 	LH_C h²⁷ t²⁹ => h²⁷
//│ 	| LH_N  => error⁰}
//│ def iterate_₀(f¹⁶, x⁴) = lazy⁰([LH_C x⁴ iterate_₀^965(f¹⁶, f¹⁶(x⁴))])
//│ def map_lz_₀(f¹⁸, ls²³) = lazy⁰(case force⁰(ls²³) of {
//│ 	LH_C h²⁵ t²⁷ => [LH_C f¹⁸(h²⁵) map_lz_₀^1043(f¹⁸, t²⁷)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_₁(f¹³, ls¹⁹) = lazy⁰(case force⁰(ls¹⁹) of {
//│ 	LH_C h²⁰ t²² => [LH_C f¹³(h²⁰) map_lz_₁^860(f¹³, t²²)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_₂(f¹⁷, ls²¹) = lazy⁰(case force⁰(ls²¹) of {
//│ 	LH_C h²³ t²⁵ => [LH_C f¹⁷(h²³) map_lz_₂^983(f¹⁷, t²⁵)]
//│ 	| LH_N  => [LH_N]})
//│ def mappend_₀(xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C h²² t²⁴ => [LH_C h²² mappend_₀^953(t²⁴, ys¹³)]
//│ 	| LH_N  => ys¹³}
//│ def neg_powers_₀ = lazy⁰(map_lz_₀^830(zipWith_lz_lz_₁^831((fun n⁵ -> (fun x³ -> if n⁵ then x³ else (0 - x³))), iterate_₀^843(not⁰, [True])), powers_₀^850))
//│ def pascal_₀ = lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂^1142((fun line¹ -> zipWith_₀^1143((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend_₀^1152(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀^1166)])
//│ def powers_₀ = lazy⁰([LH_C enumFrom_₀^1093(2) map_lz_₁^1096((fun p¹ -> zipWith_lz_lz_₀^1097((fun a¹⁰ -> (fun b⁶ -> (a¹⁰ * b⁶))), head_lz_₀^1106(powers_₀^1107), p¹)), powers_₀^1114)])
//│ def sum_₀(ls²⁷) = case ls²⁷ of {
//│ 	LH_C h²⁹ t³¹ => (h²⁹ + sum_₀^1127(t³¹))
//│ 	| LH_N  => 0}
//│ def sum_₁(ls²⁴) = case ls²⁴ of {
//│ 	LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁^1058(t²⁸))
//│ 	| LH_N  => 0}
//│ def tail_₀(ls²⁶) = case ls²⁶ of {
//│ 	LH_C h²⁸ t³⁰ => t³⁰
//│ 	| LH_N  => error⁰}
//│ def tail_₁(ls²⁰) = case ls²⁰ of {
//│ 	LH_C h²¹ t²³ => t²³
//│ 	| LH_N  => error⁰}
//│ def testBernoulli_nofib_₀(_lh_testBernoulli_nofib_arg1¹) = bernoulli_₀^803(_lh_testBernoulli_nofib_arg1¹)
//│ def zipWith_lz_lz_₀(f¹⁵, xs¹², ys¹²) = lazy⁰(case force⁰(xs¹²) of {
//│ 	LH_C hx¹¹ tx¹¹ => case force⁰(ys¹²) of {
//│ 		LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀^935(f¹⁵, tx¹¹, ty¹¹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_₁(f¹⁴, xs¹⁰, ys¹⁰) = lazy⁰(case force⁰(xs¹⁰) of {
//│ 	LH_C hx⁹ tx⁹ => case force⁰(ys¹⁰) of {
//│ 		LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁^888(f¹⁴, tx⁹, ty⁹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_nl_₀(f¹⁹, xs¹⁴, ys¹⁴) = case ys¹⁴ of {
//│ 	LH_C hy¹² ty¹² => case force⁰(xs¹⁴) of {
//│ 		LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀^1285(f¹⁹, tx¹², ty¹²)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zipWith_₀(f¹², xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C hx⁸ tx⁸ => case ys⁹ of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀^814(f¹², tx⁸, ty⁸)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zip_nl_lz_₀(xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹¹) of {
//│ 		LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀^911(tx¹⁰, ty¹⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec atIndex_lz__d0 n_6 ls_2_2 =
//│ 		  (if (n_6 < 0) then
//│ 		    (failwith "error")
//│ 		  else
//│ 		    (match (Lazy.force ls_2_2) with
//│ 		      | `LH_C(h_2_4, t_2_6) -> 
//│ 		        (if (n_6 = 0) then
//│ 		          h_2_4
//│ 		        else
//│ 		          ((atIndex_lz__d0 (n_6 - 1)) t_2_6))
//│ 		      | `LH_N -> 
//│ 		        (failwith "error")))
//│ 		and bernoulli__d0 _lh_bernoulli_arg1_1 =
//│ 		  (match _lh_bernoulli_arg1_1 with
//│ 		    | 0 -> 
//│ 		      1
//│ 		    | 1 -> 
//│ 		      (0 - (1 / 2))
//│ 		    | _ -> 
//│ 		      (if ((_lh_bernoulli_arg1_1 mod 2) = 1) then
//│ 		        0
//│ 		      else
//│ 		        (let rec powers_2 = ((atIndex_lz__d0 (_lh_bernoulli_arg1_1 - 1)) (Lazy.force neg_powers__d0)) in
//│ 		          (((0 - 1) / 2) + (sum__d0 (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		            (match _lh_listcomp_fun_para_1 with
//│ 		              | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                (match _lh_listcomp_fun_ls_h_1 with
//│ 		                  | `LH_P2(_lh_bernoulli_LH_P2_0_1, _lh_bernoulli_LH_P2_1_1) -> 
//│ 		                    (`LH_C((((sum__d1 (((zipWith_lz_nl__d0 (fun a_1_2 b_8 -> 
//│ 		                      (a_1_2 * b_8))) powers_2) (tail__d0 (tail__d1 _lh_bernoulli_LH_P2_1_1)))) - _lh_bernoulli_LH_P2_0_1) / (_lh_bernoulli_LH_P2_0_1 + 1)), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		                  | _ -> 
//│ 		                    (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))
//│ 		              | `LH_N -> 
//│ 		                (`LH_N))) in
//│ 		            (_lh_listcomp_fun_1 ((zip_nl_lz__d0 ((enumFromTo__d0 2) _lh_bernoulli_arg1_1)) pascal__d0))))))))
//│ 		and enumFromTo__d0 a_9 b_5 =
//│ 		  (if (a_9 <= b_5) then
//│ 		    (`LH_C(a_9, ((enumFromTo__d0 (a_9 + 1)) b_5)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFrom__d0 a_8 =
//│ 		  (lazy (`LH_C(a_8, (enumFrom__d0 (a_8 + 1)))))
//│ 		and head_lz__d0 ls_2_5 =
//│ 		  (match (Lazy.force ls_2_5) with
//│ 		    | `LH_C(h_2_7, t_2_9) -> 
//│ 		      h_2_7
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and iterate__d0 f_1_6 x_4 =
//│ 		  (lazy (`LH_C(x_4, ((iterate__d0 f_1_6) (f_1_6 x_4)))))
//│ 		and map_lz__d0 f_1_8 ls_2_3 =
//│ 		  (lazy (match (Lazy.force ls_2_3) with
//│ 		    | `LH_C(h_2_5, t_2_7) -> 
//│ 		      (`LH_C((f_1_8 h_2_5), ((map_lz__d0 f_1_8) t_2_7)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz__d1 f_1_3 ls_1_9 =
//│ 		  (lazy (match (Lazy.force ls_1_9) with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C((f_1_3 h_2_0), ((map_lz__d1 f_1_3) t_2_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz__d2 f_1_7 ls_2_1 =
//│ 		  (lazy (match (Lazy.force ls_2_1) with
//│ 		    | `LH_C(h_2_3, t_2_5) -> 
//│ 		      (`LH_C((f_1_7 h_2_3), ((map_lz__d2 f_1_7) t_2_5)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and mappend__d0 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(h_2_2, t_2_4) -> 
//│ 		      (`LH_C(h_2_2, ((mappend__d0 t_2_4) ys_1_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_3)
//│ 		and neg_powers__d0 =
//│ 		  (lazy ((map_lz__d0 ((zipWith_lz_lz__d1 (fun n_5 x_3 -> 
//│ 		    (if n_5 then
//│ 		      x_3
//│ 		    else
//│ 		      (0 - x_3)))) ((iterate__d0 not) true))) powers__d0))
//│ 		and pascal__d0 =
//│ 		  (lazy (`LH_C((`LH_C(1, (`LH_C(2, (`LH_C(1, (`LH_N))))))), ((map_lz__d2 (fun line_1 -> 
//│ 		    (((zipWith__d0 (fun a_1_1 b_7 -> 
//│ 		      (a_1_1 + b_7))) ((mappend__d0 line_1) (`LH_C(0, (`LH_N))))) (`LH_C(0, line_1))))) pascal__d0))))
//│ 		and powers__d0 =
//│ 		  (lazy (`LH_C((enumFrom__d0 2), ((map_lz__d1 (fun p_1 -> 
//│ 		    (((zipWith_lz_lz__d0 (fun a_1_0 b_6 -> 
//│ 		      (a_1_0 * b_6))) (head_lz__d0 powers__d0)) p_1))) powers__d0))))
//│ 		and sum__d0 ls_2_7 =
//│ 		  (match ls_2_7 with
//│ 		    | `LH_C(h_2_9, t_3_1) -> 
//│ 		      (h_2_9 + (sum__d0 t_3_1))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and sum__d1 ls_2_4 =
//│ 		  (match ls_2_4 with
//│ 		    | `LH_C(h_2_6, t_2_8) -> 
//│ 		      (h_2_6 + (sum__d1 t_2_8))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and tail__d0 ls_2_6 =
//│ 		  (match ls_2_6 with
//│ 		    | `LH_C(h_2_8, t_3_0) -> 
//│ 		      t_3_0
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and tail__d1 ls_2_0 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      t_2_3
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and testBernoulli_nofib__d0 _lh_testBernoulli_nofib_arg1_1 =
//│ 		  (bernoulli__d0 _lh_testBernoulli_nofib_arg1_1)
//│ 		and zipWith_lz_lz__d0 f_1_5 xs_1_2 ys_1_2 =
//│ 		  (lazy (match (Lazy.force xs_1_2) with
//│ 		    | `LH_C(hx_1_1, tx_1_1) -> 
//│ 		      (match (Lazy.force ys_1_2) with
//│ 		        | `LH_C(hy_1_1, ty_1_1) -> 
//│ 		          (`LH_C(((f_1_5 hx_1_1) hy_1_1), (((zipWith_lz_lz__d0 f_1_5) tx_1_1) ty_1_1)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and zipWith_lz_lz__d1 f_1_4 xs_1_0 ys_1_0 =
//│ 		  (lazy (match (Lazy.force xs_1_0) with
//│ 		    | `LH_C(hx_9, tx_9) -> 
//│ 		      (match (Lazy.force ys_1_0) with
//│ 		        | `LH_C(hy_9, ty_9) -> 
//│ 		          (`LH_C(((f_1_4 hx_9) hy_9), (((zipWith_lz_lz__d1 f_1_4) tx_9) ty_9)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and zipWith_lz_nl__d0 f_1_9 xs_1_4 ys_1_4 =
//│ 		  (match ys_1_4 with
//│ 		    | `LH_C(hy_1_2, ty_1_2) -> 
//│ 		      (match (Lazy.force xs_1_4) with
//│ 		        | `LH_C(hx_1_2, tx_1_2) -> 
//│ 		          (`LH_C(((f_1_9 hx_1_2) hy_1_2), (((zipWith_lz_nl__d0 f_1_9) tx_1_2) ty_1_2)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and zipWith__d0 f_1_2 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(hx_8, tx_8) -> 
//│ 		      (match ys_9 with
//│ 		        | `LH_C(hy_8, ty_8) -> 
//│ 		          (`LH_C(((f_1_2 hx_8) hy_8), (((zipWith__d0 f_1_2) tx_8) ty_8)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and zip_nl_lz__d0 xs_1_1 ys_1_1 =
//│ 		  (match xs_1_1 with
//│ 		    | `LH_C(hx_1_0, tx_1_0) -> 
//│ 		      (match (Lazy.force ys_1_1) with
//│ 		        | `LH_C(hy_1_0, ty_1_0) -> 
//│ 		          (`LH_C((`LH_P2(hx_1_0, hy_1_0)), ((zip_nl_lz__d0 tx_1_0) ty_1_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		(testBernoulli_nofib__d0 1500)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)]: 821 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 823
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => t²³ | LH_N  => error⁰}: 874
//│ 	case xs¹³ of {LH_C h²² t²⁴ => [LH_C h²² mappend_₀(t²⁴, ys¹³)] | LH_N  => ys¹³}: 960
//│ 	case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1121
//│ 	case ys¹⁴ of {LH_C hy¹² ty¹² => case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1296
//│ [LH_N]: 822 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 823
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => t²³ | LH_N  => error⁰}: 874
//│ 	case xs¹³ of {LH_C h²² t²⁴ => [LH_C h²² mappend_₀(t²⁴, ys¹³)] | LH_N  => ys¹³}: 960
//│ 	case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1121
//│ 	case ys¹⁴ of {LH_C hy¹² ty¹² => case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1296
//│ [LH_N]: 824 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 823
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => t²³ | LH_N  => error⁰}: 874
//│ 	case xs¹³ of {LH_C h²² t²⁴ => [LH_C h²² mappend_₀(t²⁴, ys¹³)] | LH_N  => ys¹³}: 960
//│ 	case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1121
//│ 	case ys¹⁴ of {LH_C hy¹² ty¹² => case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1296
//│ [LH_C f¹³(h²⁰) map_lz_₁(f¹³, t²²)]: 865 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls¹⁹) of {LH_C h²⁰ t²² => [LH_C f¹³(h²⁰) map_lz_₁(f¹³, t²²)] | LH_N  => [LH_N]}: 867
//│ 	case force⁰(ls²³) of {LH_C h²⁵ t²⁷ => [LH_C f¹⁸(h²⁵) map_lz_₀(f¹⁸, t²⁷)] | LH_N  => [LH_N]}: 1050
//│ [LH_N]: 866 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls¹⁹) of {LH_C h²⁰ t²² => [LH_C f¹³(h²⁰) map_lz_₁(f¹³, t²²)] | LH_N  => [LH_N]}: 867
//│ 	case force⁰(ls²³) of {LH_C h²⁵ t²⁷ => [LH_C f¹⁸(h²⁵) map_lz_₀(f¹⁸, t²⁷)] | LH_N  => [LH_N]}: 1050
//│ [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)]: 895 --->
//│ 	case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]}: 1294
//│ [LH_N]: 896 --->
//│ 	case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]}: 1294
//│ [LH_N]: 898 --->
//│ 	case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]}: 1294
//│ [LH_P2 hx¹⁰ hy¹⁰]: 910 --->
//│ 	case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1254
//│ [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)]: 916 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1256
//│ [LH_N]: 917 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1256
//│ [LH_N]: 919 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1256
//│ [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)]: 942 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 897
//│ 	case force⁰(ys¹²) of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 944
//│ [LH_N]: 943 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 897
//│ 	case force⁰(ys¹²) of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 944
//│ [LH_N]: 945 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 897
//│ 	case force⁰(ys¹²) of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 944
//│ [LH_C h²² mappend_₀(t²⁴, ys¹³)]: 958 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 825
//│ [LH_C x⁴ iterate_₀(f¹⁶, f¹⁶(x⁴))]: 972 --->
//│ 	case force⁰(xs¹⁰) of {LH_C hx⁹ tx⁹ => case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 899
//│ [LH_C f¹⁷(h²³) map_lz_₂(f¹⁷, t²⁵)]: 988 --->
//│ 	case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]}: 918
//│ 	case force⁰(ls²¹) of {LH_C h²³ t²⁵ => [LH_C f¹⁷(h²³) map_lz_₂(f¹⁷, t²⁵)] | LH_N  => [LH_N]}: 990
//│ [LH_N]: 989 --->
//│ 	case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]}: 918
//│ 	case force⁰(ls²¹) of {LH_C h²³ t²⁵ => [LH_C f¹⁷(h²³) map_lz_₂(f¹⁷, t²⁵)] | LH_N  => [LH_N]}: 990
//│ [LH_C a⁸ enumFrom_₀((a⁸ + 1))]: 1003 --->
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 897
//│ 	case force⁰(ys¹²) of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 944
//│ 	case force⁰(xs¹²) of {LH_C hx¹¹ tx¹¹ => case force⁰(ys¹²) of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 946
//│ [LH_C f¹⁸(h²⁵) map_lz_₀(f¹⁸, t²⁷)]: 1048 --->
//│ 	case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => if (n⁶ == 0) then h²⁴ else atIndex_lz_₀((n⁶ - 1), t²⁶) | LH_N  => error⁰}: 1032
//│ [LH_N]: 1049 --->
//│ 	case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => if (n⁶ == 0) then h²⁴ else atIndex_lz_₀((n⁶ - 1), t²⁶) | LH_N  => error⁰}: 1032
//│ [LH_C a⁹ enumFromTo_₀((a⁹ + 1), b⁵)]: 1080 --->
//│ 	case xs¹¹ of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 920
//│ [LH_N]: 1081 --->
//│ 	case xs¹¹ of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 920
//│ [LH_C enumFrom_₀(2) map_lz_₁((fun p¹ -> zipWith_lz_lz_₀((fun a¹⁰ -> (fun b⁶ -> (a¹⁰ * b⁶))), head_lz_₀(powers_₀), p¹)), powers_₀)]: 1116 --->
//│ 	case force⁰(ls¹⁹) of {LH_C h²⁰ t²² => [LH_C f¹³(h²⁰) map_lz_₁(f¹³, t²²)] | LH_N  => [LH_N]}: 867
//│ 	case force⁰(ls²³) of {LH_C h²⁵ t²⁷ => [LH_C f¹⁸(h²⁵) map_lz_₀(f¹⁸, t²⁷)] | LH_N  => [LH_N]}: 1050
//│ 	case force⁰(ls²⁵) of {LH_C h²⁷ t²⁹ => h²⁷ | LH_N  => error⁰}: 1090
//│ [LH_N]: 1138 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 823
//│ 	case xs¹³ of {LH_C h²² t²⁴ => [LH_C h²² mappend_₀(t²⁴, ys¹³)] | LH_N  => ys¹³}: 960
//│ 	case ys¹⁴ of {LH_C hy¹² ty¹² => case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1296
//│ [LH_C 1 [LH_N]]: 1139 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 823
//│ 	case xs¹³ of {LH_C h²² t²⁴ => [LH_C h²² mappend_₀(t²⁴, ys¹³)] | LH_N  => ys¹³}: 960
//│ 	case ys¹⁴ of {LH_C hy¹² ty¹² => case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1296
//│ [LH_C 2 [LH_C 1 [LH_N]]]: 1140 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 823
//│ 	case xs¹³ of {LH_C h²² t²⁴ => [LH_C h²² mappend_₀(t²⁴, ys¹³)] | LH_N  => ys¹³}: 960
//│ 	case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1121
//│ [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 1141 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 823
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => t²³ | LH_N  => error⁰}: 874
//│ 	case xs¹³ of {LH_C h²² t²⁴ => [LH_C h²² mappend_₀(t²⁴, ys¹³)] | LH_N  => ys¹³}: 960
//│ [LH_N]: 1156 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 825
//│ [LH_C 0 [LH_N]]: 1157 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 825
//│ [LH_C 0 line¹]: 1162 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 823
//│ [LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂((fun line¹ -> zipWith_₀((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀)]: 1168 --->
//│ 	case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]}: 918
//│ 	case force⁰(ls²¹) of {LH_C h²³ t²⁵ => [LH_C f¹⁷(h²³) map_lz_₂(f¹⁷, t²⁵)] | LH_N  => [LH_N]}: 990
//│ [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1250 --->
//│ 	case ls²⁷ of {LH_C h²⁹ t³¹ => (h²⁹ + sum_₀(t³¹)) | LH_N  => 0}: 1132
//│ [LH_N]: 1255 --->
//│ 	case ls²⁷ of {LH_C h²⁹ t³¹ => (h²⁹ + sum_₀(t³¹)) | LH_N  => 0}: 1132
//│ [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)]: 1292 --->
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁(t²⁸)) | LH_N  => 0}: 1063
//│ [LH_N]: 1293 --->
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁(t²⁸)) | LH_N  => 0}: 1063
//│ [LH_N]: 1295 --->
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁(t²⁸)) | LH_N  => 0}: 1063
//│ ------------------
//│ case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]}: 823 --->
//│ 	[LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)]: 821
//│ 	[LH_N]: 822
//│ 	[LH_N]: 824
//│ 	[LH_N]: 1138
//│ 	[LH_C 1 [LH_N]]: 1139
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 1140
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 1141
//│ 	[LH_C 0 line¹]: 1162
//│ case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 825 --->
//│ 	[LH_C h²² mappend_₀(t²⁴, ys¹³)]: 958
//│ 	[LH_N]: 1156
//│ 	[LH_C 0 [LH_N]]: 1157
//│ case force⁰(ls¹⁹) of {LH_C h²⁰ t²² => [LH_C f¹³(h²⁰) map_lz_₁(f¹³, t²²)] | LH_N  => [LH_N]}: 867 --->
//│ 	[LH_C f¹³(h²⁰) map_lz_₁(f¹³, t²²)]: 865
//│ 	[LH_N]: 866
//│ 	[LH_C enumFrom_₀(2) map_lz_₁((fun p¹ -> zipWith_lz_lz_₀((fun a¹⁰ -> (fun b⁶ -> (a¹⁰ * b⁶))), head_lz_₀(powers_₀), p¹)), powers_₀)]: 1116
//│ case ls²⁰ of {LH_C h²¹ t²³ => t²³ | LH_N  => error⁰}: 874 --->
//│ 	[LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)]: 821
//│ 	[LH_N]: 822
//│ 	[LH_N]: 824
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 1141
//│ case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]}: 897 --->
//│ 	[LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)]: 942
//│ 	[LH_N]: 943
//│ 	[LH_N]: 945
//│ 	[LH_C a⁸ enumFrom_₀((a⁸ + 1))]: 1003
//│ case force⁰(xs¹⁰) of {LH_C hx⁹ tx⁹ => case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 899 --->
//│ 	[LH_C x⁴ iterate_₀(f¹⁶, f¹⁶(x⁴))]: 972
//│ case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]}: 918 --->
//│ 	[LH_C f¹⁷(h²³) map_lz_₂(f¹⁷, t²⁵)]: 988
//│ 	[LH_N]: 989
//│ 	[LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂((fun line¹ -> zipWith_₀((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀)]: 1168
//│ case xs¹¹ of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 920 --->
//│ 	[LH_C a⁹ enumFromTo_₀((a⁹ + 1), b⁵)]: 1080
//│ 	[LH_N]: 1081
//│ case force⁰(ys¹²) of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)] | LH_N  => [LH_N]}: 944 --->
//│ 	[LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)]: 942
//│ 	[LH_N]: 943
//│ 	[LH_N]: 945
//│ 	[LH_C a⁸ enumFrom_₀((a⁸ + 1))]: 1003
//│ case force⁰(xs¹²) of {LH_C hx¹¹ tx¹¹ => case force⁰(ys¹²) of {LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f¹⁵, tx¹¹, ty¹¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 946 --->
//│ 	[LH_C a⁸ enumFrom_₀((a⁸ + 1))]: 1003
//│ case xs¹³ of {LH_C h²² t²⁴ => [LH_C h²² mappend_₀(t²⁴, ys¹³)] | LH_N  => ys¹³}: 960 --->
//│ 	[LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)]: 821
//│ 	[LH_N]: 822
//│ 	[LH_N]: 824
//│ 	[LH_N]: 1138
//│ 	[LH_C 1 [LH_N]]: 1139
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 1140
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 1141
//│ case force⁰(ls²¹) of {LH_C h²³ t²⁵ => [LH_C f¹⁷(h²³) map_lz_₂(f¹⁷, t²⁵)] | LH_N  => [LH_N]}: 990 --->
//│ 	[LH_C f¹⁷(h²³) map_lz_₂(f¹⁷, t²⁵)]: 988
//│ 	[LH_N]: 989
//│ 	[LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂((fun line¹ -> zipWith_₀((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend_₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal_₀)]: 1168
//│ case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => if (n⁶ == 0) then h²⁴ else atIndex_lz_₀((n⁶ - 1), t²⁶) | LH_N  => error⁰}: 1032 --->
//│ 	[LH_C f¹⁸(h²⁵) map_lz_₀(f¹⁸, t²⁷)]: 1048
//│ 	[LH_N]: 1049
//│ case force⁰(ls²³) of {LH_C h²⁵ t²⁷ => [LH_C f¹⁸(h²⁵) map_lz_₀(f¹⁸, t²⁷)] | LH_N  => [LH_N]}: 1050 --->
//│ 	[LH_C f¹³(h²⁰) map_lz_₁(f¹³, t²²)]: 865
//│ 	[LH_N]: 866
//│ 	[LH_C enumFrom_₀(2) map_lz_₁((fun p¹ -> zipWith_lz_lz_₀((fun a¹⁰ -> (fun b⁶ -> (a¹⁰ * b⁶))), head_lz_₀(powers_₀), p¹)), powers_₀)]: 1116
//│ case ls²⁴ of {LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁(t²⁸)) | LH_N  => 0}: 1063 --->
//│ 	[LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)]: 1292
//│ 	[LH_N]: 1293
//│ 	[LH_N]: 1295
//│ case force⁰(ls²⁵) of {LH_C h²⁷ t²⁹ => h²⁷ | LH_N  => error⁰}: 1090 --->
//│ 	[LH_C enumFrom_₀(2) map_lz_₁((fun p¹ -> zipWith_lz_lz_₀((fun a¹⁰ -> (fun b⁶ -> (a¹⁰ * b⁶))), head_lz_₀(powers_₀), p¹)), powers_₀)]: 1116
//│ case ls²⁶ of {LH_C h²⁸ t³⁰ => t³⁰ | LH_N  => error⁰}: 1121 --->
//│ 	[LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)]: 821
//│ 	[LH_N]: 822
//│ 	[LH_N]: 824
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 1140
//│ case ls²⁷ of {LH_C h²⁹ t³¹ => (h²⁹ + sum_₀(t³¹)) | LH_N  => 0}: 1132 --->
//│ 	[LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1250
//│ 	[LH_N]: 1255
//│ case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1254 --->
//│ 	[LH_P2 hx¹⁰ hy¹⁰]: 910
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1256 --->
//│ 	[LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)]: 916
//│ 	[LH_N]: 917
//│ 	[LH_N]: 919
//│ case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]}: 1294 --->
//│ 	[LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)]: 895
//│ 	[LH_N]: 896
//│ 	[LH_N]: 898
//│ case ys¹⁴ of {LH_C hy¹² ty¹² => case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1296 --->
//│ 	[LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)]: 821
//│ 	[LH_N]: 822
//│ 	[LH_N]: 824
//│ 	[LH_N]: 1138
//│ 	[LH_C 1 [LH_N]]: 1139
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)]: 895 --->
//│ 	case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]}: 1294
//│ [LH_N]: 896 --->
//│ 	case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]}: 1294
//│ [LH_N]: 898 --->
//│ 	case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]}: 1294
//│ [LH_P2 hx¹⁰ hy¹⁰]: 910 --->
//│ 	case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1254
//│ [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)]: 916 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1256
//│ [LH_N]: 917 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1256
//│ [LH_N]: 919 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1256
//│ [LH_C h²² mappend_₀(t²⁴, ys¹³)]: 958 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 825
//│ [LH_C x⁴ iterate_₀(f¹⁶, f¹⁶(x⁴))]: 972 --->
//│ 	case force⁰(xs¹⁰) of {LH_C hx⁹ tx⁹ => case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 899
//│ [LH_C f¹⁸(h²⁵) map_lz_₀(f¹⁸, t²⁷)]: 1048 --->
//│ 	case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => if (n⁶ == 0) then h²⁴ else atIndex_lz_₀((n⁶ - 1), t²⁶) | LH_N  => error⁰}: 1032
//│ [LH_N]: 1049 --->
//│ 	case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => if (n⁶ == 0) then h²⁴ else atIndex_lz_₀((n⁶ - 1), t²⁶) | LH_N  => error⁰}: 1032
//│ [LH_C a⁹ enumFromTo_₀((a⁹ + 1), b⁵)]: 1080 --->
//│ 	case xs¹¹ of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 920
//│ [LH_N]: 1081 --->
//│ 	case xs¹¹ of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 920
//│ [LH_N]: 1156 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 825
//│ [LH_C 0 [LH_N]]: 1157 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 825
//│ [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1250 --->
//│ 	case ls²⁷ of {LH_C h²⁹ t³¹ => (h²⁹ + sum_₀(t³¹)) | LH_N  => 0}: 1132
//│ [LH_N]: 1255 --->
//│ 	case ls²⁷ of {LH_C h²⁹ t³¹ => (h²⁹ + sum_₀(t³¹)) | LH_N  => 0}: 1132
//│ [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)]: 1292 --->
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁(t²⁸)) | LH_N  => 0}: 1063
//│ [LH_N]: 1293 --->
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁(t²⁸)) | LH_N  => 0}: 1063
//│ [LH_N]: 1295 --->
//│ 	case ls²⁴ of {LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁(t²⁸)) | LH_N  => 0}: 1063
//│ ------------------
//│ case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith_₀(f¹², tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 825 --->
//│ 	[LH_C h²² mappend_₀(t²⁴, ys¹³)]: 958
//│ 	[LH_N]: 1156
//│ 	[LH_C 0 [LH_N]]: 1157
//│ case force⁰(xs¹⁰) of {LH_C hx⁹ tx⁹ => case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 899 --->
//│ 	[LH_C x⁴ iterate_₀(f¹⁶, f¹⁶(x⁴))]: 972
//│ case xs¹¹ of {LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹¹) of {LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 920 --->
//│ 	[LH_C a⁹ enumFromTo_₀((a⁹ + 1), b⁵)]: 1080
//│ 	[LH_N]: 1081
//│ case force⁰(ls²²) of {LH_C h²⁴ t²⁶ => if (n⁶ == 0) then h²⁴ else atIndex_lz_₀((n⁶ - 1), t²⁶) | LH_N  => error⁰}: 1032 --->
//│ 	[LH_C f¹⁸(h²⁵) map_lz_₀(f¹⁸, t²⁷)]: 1048
//│ 	[LH_N]: 1049
//│ case ls²⁴ of {LH_C h²⁶ t²⁸ => (h²⁶ + sum_₁(t²⁸)) | LH_N  => 0}: 1063 --->
//│ 	[LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)]: 1292
//│ 	[LH_N]: 1293
//│ 	[LH_N]: 1295
//│ case ls²⁷ of {LH_C h²⁹ t³¹ => (h²⁹ + sum_₀(t³¹)) | LH_N  => 0}: 1132 --->
//│ 	[LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1250
//│ 	[LH_N]: 1255
//│ case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1254 --->
//│ 	[LH_P2 hx¹⁰ hy¹⁰]: 910
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum_₁(zipWith_lz_nl_₀((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail_₀(tail_₁(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1256 --->
//│ 	[LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz_₀(tx¹⁰, ty¹⁰)]: 916
//│ 	[LH_N]: 917
//│ 	[LH_N]: 919
//│ case force⁰(xs¹⁴) of {LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl_₀(f¹⁹, tx¹², ty¹²)] | LH_N  => [LH_N]}: 1294 --->
//│ 	[LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz_₁(f¹⁴, tx⁹, ty⁹)]: 895
//│ 	[LH_N]: 896
//│ 	[LH_N]: 898
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testBernoulli_nofib_₀(primId⁰(1500))
//│ def atIndex_lz_₀(n⁷, ls³¹) = if (n⁷ < 0) then error⁰ else force⁰(ls³¹, n⁷)
//│ def bernoulli_₀(_lh_bernoulli_arg1²) = case _lh_bernoulli_arg1² of {
//│ 	0  => 1
//│ 	| 1  => (0 - (1 / 2))
//│ 	| _  => if ((_lh_bernoulli_arg1² % 2) == 1) then 0 else 
//│ 		let powers³ = atIndex_lz_₀((_lh_bernoulli_arg1² - 1), force⁰(neg_powers_₀))
//│ 		in (((0 - 1) / 2) + sum_₀(
//│ 			let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> _lh_listcomp_fun_para²(_lh_listcomp_fun², powers³))
//│ 			in _lh_listcomp_fun²(zip_nl_lz_₀(enumFromTo_₀(2, _lh_bernoulli_arg1²), pascal_₀))))}
//│ def enumFromTo_₀(a¹⁵, b¹⁰) = if (a¹⁵ <= b¹⁰) then 
//│ 	let tx¹⁶ = enumFromTo_₀((a¹⁵ + 1), b¹⁰)
//│ 	in let hx¹⁶ = a¹⁵
//│ 	in (fun ys²¹ -> case force⁰(ys²¹) of {
//│ 		LH_C hy¹⁰ ty¹⁰ => 
//│ 			let _lh_listcomp_fun_ls_t² = zip_nl_lz_₀(tx¹⁶, ty¹⁰)
//│ 			in let _lh_listcomp_fun_ls_h² = 	
//│ 				let _lh_bernoulli_LH_P2_1² = hy¹⁰
//│ 				in let _lh_bernoulli_LH_P2_0² = hx¹⁶
//│ 				in (fun _lh_listcomp_fun_ls_t³ -> (fun _lh_listcomp_fun⁴ -> (fun powers⁵ -> 
//│ 					let t³³ = _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t³)
//│ 					in let h³¹ = ((sum_₁(zipWith_lz_nl_₀((fun a¹⁶ -> (fun b¹¹ -> (a¹⁶ * b¹¹))), powers⁵, tail_₀(tail_₁(_lh_bernoulli_LH_P2_1²)))) - _lh_bernoulli_LH_P2_0²) / (_lh_bernoulli_LH_P2_0² + 1))
//│ 					in (fun _lh_dummy² -> (h³¹ + sum_₀(t³³))))))
//│ 			in (fun _lh_listcomp_fun³ -> (fun powers⁴ -> _lh_listcomp_fun_ls_h²(_lh_listcomp_fun_ls_t², _lh_listcomp_fun³, powers⁴)))
//│ 		| LH_N  => (fun _lh_listcomp_fun⁵ -> (fun powers⁶ -> (fun _lh_dummy³ -> 0)))}) else (fun ys²² -> (fun _lh_listcomp_fun⁶ -> (fun powers⁷ -> (fun _lh_dummy⁴ -> 0))))
//│ def enumFrom_₀(a¹³) = lazy⁰([LH_C a¹³ enumFrom_₀((a¹³ + 1))])
//│ def head_lz_₀(ls³²) = case force⁰(ls³²) of {
//│ 	LH_C h²⁷ t²⁹ => h²⁷
//│ 	| LH_N  => error⁰}
//│ def iterate_₀(f²⁴, x⁵) = lazy⁰(
//│ 	let tx¹⁴ = iterate_₀(f²⁴, f²⁴(x⁵))
//│ 	in let hx¹⁴ = x⁵
//│ 	in (fun f²⁵ -> (fun ys²⁰ -> case force⁰(ys²⁰) of {
//│ 		LH_C hy⁹ ty⁹ => 
//│ 			let tx¹⁵ = zipWith_lz_lz_₁(f²⁵, tx¹⁴, ty⁹)
//│ 			in let hx¹⁵ = f²⁵(hx¹⁴, hy⁹)
//│ 			in (fun f²⁶ -> (fun hy¹³ -> (fun ty¹³ -> 
//│ 				let t³² = zipWith_lz_nl_₀(f²⁶, tx¹⁵, ty¹³)
//│ 				in let h³⁰ = f²⁶(hx¹⁵, hy¹³)
//│ 				in (fun _lh_dummy⁰ -> (h³⁰ + sum_₁(t³²))))))
//│ 		| LH_N  => (fun f²⁷ -> (fun hy¹⁴ -> (fun ty¹⁴ -> (fun _lh_dummy¹ -> 0))))})))
//│ def map_lz_₀(f³², ls³⁵) = lazy⁰(case force⁰(ls³⁵) of {
//│ 	LH_C h²⁵ t²⁷ => 
//│ 		let t³⁴ = map_lz_₀(f³², t²⁷)
//│ 		in let h³² = f³²(h²⁵)
//│ 		in (fun n⁹ -> if (n⁹ == 0) then h³² else atIndex_lz_₀((n⁹ - 1), t³⁴))
//│ 	| LH_N  => (fun n¹⁰ -> error⁰)})
//│ def map_lz_₁(f²¹, ls²⁹) = lazy⁰(case force⁰(ls²⁹) of {
//│ 	LH_C h²⁰ t²² => [LH_C f²¹(h²⁰) map_lz_₁(f²¹, t²²)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_₂(f²⁸, ls³³) = lazy⁰(case force⁰(ls³³) of {
//│ 	LH_C h²³ t²⁵ => [LH_C f²⁸(h²³) map_lz_₂(f²⁸, t²⁵)]
//│ 	| LH_N  => [LH_N]})
//│ def mappend_₀(xs¹⁶, ys¹⁶) = case xs¹⁶ of {
//│ 	LH_C h²² t²⁴ => 
//│ 		let tx¹³ = mappend_₀(t²⁴, ys¹⁶)
//│ 		in let hx¹³ = h²²
//│ 		in (fun f²⁰ -> (fun ys¹⁷ -> case ys¹⁷ of {
//│ 			LH_C hy⁸ ty⁸ => [LH_C f²⁰(hx¹³, hy⁸) zipWith_₀(f²⁰, tx¹³, ty⁸)]
//│ 			| LH_N  => [LH_N]}))
//│ 	| LH_N  => ys¹⁶}
//│ def neg_powers_₀ = lazy⁰(map_lz_₀(zipWith_lz_lz_₁((fun n⁸ -> (fun x⁶ -> if n⁸ then x⁶ else (0 - x⁶))), iterate_₀(not⁰, [True])), powers_₀))
//│ def pascal_₀ = lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz_₂((fun line² -> zipWith_₀((fun a¹⁷ -> (fun b¹² -> (a¹⁷ + b¹²))), mappend_₀(line², 
//│ 	let tx¹⁷ = (fun f³¹ -> (fun ys²⁵ -> [LH_N]))
//│ 	in let hx¹⁷ = 0
//│ 	in (fun f³⁰ -> (fun ys²⁴ -> case ys²⁴ of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C f³⁰(hx¹⁷, hy⁸) zipWith_₀(f³⁰, tx¹⁷, ty⁸)]
//│ 		| LH_N  => [LH_N]}))), [LH_C 0 line²])), pascal_₀)])
//│ def powers_₀ = lazy⁰([LH_C enumFrom_₀(2) map_lz_₁((fun p² -> zipWith_lz_lz_₀((fun a¹⁴ -> (fun b⁹ -> (a¹⁴ * b⁹))), head_lz_₀(powers_₀), p²)), powers_₀)])
//│ def sum_₀(ls³⁴) = ls³⁴(99)
//│ def sum_₁(ls²⁸) = ls²⁸(99)
//│ def tail_₀(ls³⁰) = case ls³⁰ of {
//│ 	LH_C h²⁸ t³⁰ => t³⁰
//│ 	| LH_N  => error⁰}
//│ def tail_₁(ls³⁶) = case ls³⁶ of {
//│ 	LH_C h²¹ t²³ => t²³
//│ 	| LH_N  => error⁰}
//│ def testBernoulli_nofib_₀(_lh_testBernoulli_nofib_arg1²) = bernoulli_₀(_lh_testBernoulli_nofib_arg1²)
//│ def zipWith_lz_lz_₀(f²², xs¹⁷, ys¹⁸) = lazy⁰(case force⁰(xs¹⁷) of {
//│ 	LH_C hx¹¹ tx¹¹ => case force⁰(ys¹⁸) of {
//│ 		LH_C hy¹¹ ty¹¹ => [LH_C f²²(hx¹¹, hy¹¹) zipWith_lz_lz_₀(f²², tx¹¹, ty¹¹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_₁(f³³, xs²⁰, ys²⁶) = lazy⁰(force⁰(xs²⁰, f³³, ys²⁶))
//│ def zipWith_lz_nl_₀(f²⁹, xs¹⁹, ys²³) = case ys²³ of {
//│ 	LH_C hy¹² ty¹² => force⁰(xs¹⁹, f²⁹, hy¹², ty¹²)
//│ 	| LH_N  => (fun _lh_dummy⁵ -> 0)}
//│ def zipWith_₀(f²³, xs¹⁸, ys¹⁹) = xs¹⁸(f²³, ys¹⁹)
//│ def zip_nl_lz_₀(xs¹⁵, ys¹⁵) = xs¹⁵(ys¹⁵)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

