:NewParser
:ParseOnly

// NOTE: memory allocation negative numbers??
// -- powers = [[r^n | r<-[2..]] | n<-1..]
// powers :: [[Integer]]
// -- powers = [[(-1)^r * r^n | r<-[2..]] | n<-1..]
// neg_powers :: [[Integer]]
// pascal:: [[Integer]]
:lhInHaskell
:lhGenOCaml
powers = lazy ([2..] : (map_lz (\p -> zipWith_lz_lz (\a b -> a * b) (head_lz powers) p) powers))
neg_powers =
  lazy (map_lz (zipWith_lz_lz (\n x -> if n then x else (0-x)) (iterate not True)) powers)
pascal = lazy ([1,2,1] : map_lz (\line -> zipWith (\a b -> a + b) (mappend line [0]) (0:line)) pascal)
bernoulli 0 = 1
bernoulli 1 = 0 - (1 / 2)
bernoulli n =
  if ((n `mod` 2) == 1) then
    0
  else
    let powers = (atIndex_lz (n - 1) (force neg_powers)) in
      ((0-1)/2) + sum [ ((sum $ zipWith_lz_nl (\a b -> a * b) powers (tail $ tail combs)) - k) / (k+1) | (k,combs) <- zip_nl_lz [2..n] pascal ]
testBernoulli_nofib n = bernoulli n
testBernoulli_nofib $ primId 1500
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testBernoulli_nofib₀^1300(primId⁰(1500))
//│ def atIndex_lz₀(n⁶, ls²²) = if (n⁶ < 0) then error⁰ else case force⁰(ls²²) of {
//│ 	LH_C h²⁴ t²⁶ => if (n⁶ == 0) then h²⁴ else atIndex_lz₀^1021((n⁶ - 1), t²⁶)
//│ 	| LH_N  => error⁰}
//│ def bernoulli₀(_lh_bernoulli_arg1¹) = case _lh_bernoulli_arg1¹ of {
//│ 	0  => 1
//│ 	| 1  => (0 - (1 / 2))
//│ 	| _  => if ((_lh_bernoulli_arg1¹ % 2) == 1) then 0 else 
//│ 		let powers² = atIndex_lz₀^1191((_lh_bernoulli_arg1¹ - 1), force⁰(neg_powers₀^1199))
//│ 		in (((0 - 1) / 2) + sum₀^1213(
//│ 			let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 					LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁^1218(zipWith_lz_nl₀^1219((fun a¹² -> (fun b⁸ -> (a¹² * b⁸))), powers², tail₀^1230(tail₁^1231(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 					| _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}
//│ 				| LH_N  => [LH_N]})
//│ 			in _lh_listcomp_fun¹(zip_nl_lz₀^1259(enumFromTo₀^1260(2, _lh_bernoulli_arg1¹), pascal₀^1266))))}
//│ def enumFromTo₀(a⁹, b⁵) = if (a⁹ <= b⁵) then [LH_C a⁹ enumFromTo₀^1071((a⁹ + 1), b⁵)] else [LH_N]
//│ def enumFrom₀(a⁸) = lazy⁰([LH_C a⁸ enumFrom₀^996((a⁸ + 1))])
//│ def head_lz₀(ls²⁵) = case force⁰(ls²⁵) of {
//│ 	LH_C h²⁷ t²⁹ => h²⁷
//│ 	| LH_N  => error⁰}
//│ def iterate₀(f¹⁶, x⁴) = lazy⁰([LH_C x⁴ iterate₀^965(f¹⁶, f¹⁶(x⁴))])
//│ def map_lz₀(f¹⁸, ls²³) = lazy⁰(case force⁰(ls²³) of {
//│ 	LH_C h²⁵ t²⁷ => [LH_C f¹⁸(h²⁵) map_lz₀^1043(f¹⁸, t²⁷)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz₁(f¹³, ls¹⁹) = lazy⁰(case force⁰(ls¹⁹) of {
//│ 	LH_C h²⁰ t²² => [LH_C f¹³(h²⁰) map_lz₁^860(f¹³, t²²)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz₂(f¹⁷, ls²¹) = lazy⁰(case force⁰(ls²¹) of {
//│ 	LH_C h²³ t²⁵ => [LH_C f¹⁷(h²³) map_lz₂^983(f¹⁷, t²⁵)]
//│ 	| LH_N  => [LH_N]})
//│ def mappend₀(xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C h²² t²⁴ => [LH_C h²² mappend₀^953(t²⁴, ys¹³)]
//│ 	| LH_N  => ys¹³}
//│ def neg_powers₀ = lazy⁰(map_lz₀^830(zipWith_lz_lz₁^831((fun n⁵ -> (fun x³ -> if n⁵ then x³ else (0 - x³))), iterate₀^843(not⁰, [True])), powers₀^850))
//│ def pascal₀ = lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz₂^1142((fun line¹ -> zipWith₀^1143((fun a¹¹ -> (fun b⁷ -> (a¹¹ + b⁷))), mappend₀^1152(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal₀^1166)])
//│ def powers₀ = lazy⁰([LH_C enumFrom₀^1093(2) map_lz₁^1096((fun p¹ -> zipWith_lz_lz₀^1097((fun a¹⁰ -> (fun b⁶ -> (a¹⁰ * b⁶))), head_lz₀^1106(powers₀^1107), p¹)), powers₀^1114)])
//│ def sum₀(ls²⁷) = case ls²⁷ of {
//│ 	LH_C h²⁹ t³¹ => (h²⁹ + sum₀^1127(t³¹))
//│ 	| LH_N  => 0}
//│ def sum₁(ls²⁴) = case ls²⁴ of {
//│ 	LH_C h²⁶ t²⁸ => (h²⁶ + sum₁^1058(t²⁸))
//│ 	| LH_N  => 0}
//│ def tail₀(ls²⁶) = case ls²⁶ of {
//│ 	LH_C h²⁸ t³⁰ => t³⁰
//│ 	| LH_N  => error⁰}
//│ def tail₁(ls²⁰) = case ls²⁰ of {
//│ 	LH_C h²¹ t²³ => t²³
//│ 	| LH_N  => error⁰}
//│ def testBernoulli_nofib₀(_lh_testBernoulli_nofib_arg1¹) = bernoulli₀^803(_lh_testBernoulli_nofib_arg1¹)
//│ def zipWith_lz_lz₀(f¹⁵, xs¹², ys¹²) = lazy⁰(case force⁰(xs¹²) of {
//│ 	LH_C hx¹¹ tx¹¹ => case force⁰(ys¹²) of {
//│ 		LH_C hy¹¹ ty¹¹ => [LH_C f¹⁵(hx¹¹, hy¹¹) zipWith_lz_lz₀^935(f¹⁵, tx¹¹, ty¹¹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz₁(f¹⁴, xs¹⁰, ys¹⁰) = lazy⁰(case force⁰(xs¹⁰) of {
//│ 	LH_C hx⁹ tx⁹ => case force⁰(ys¹⁰) of {
//│ 		LH_C hy⁹ ty⁹ => [LH_C f¹⁴(hx⁹, hy⁹) zipWith_lz_lz₁^888(f¹⁴, tx⁹, ty⁹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_nl₀(f¹⁹, xs¹⁴, ys¹⁴) = case ys¹⁴ of {
//│ 	LH_C hy¹² ty¹² => case force⁰(xs¹⁴) of {
//│ 		LH_C hx¹² tx¹² => [LH_C f¹⁹(hx¹², hy¹²) zipWith_lz_nl₀^1285(f¹⁹, tx¹², ty¹²)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zipWith₀(f¹², xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C hx⁸ tx⁸ => case ys⁹ of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C f¹²(hx⁸, hy⁸) zipWith₀^814(f¹², tx⁸, ty⁸)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zip_nl_lz₀(xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C hx¹⁰ tx¹⁰ => case force⁰(ys¹¹) of {
//│ 		LH_C hy¹⁰ ty¹⁰ => [LH_C [LH_P2 hx¹⁰ hy¹⁰] zip_nl_lz₀^911(tx¹⁰, ty¹⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec atIndex_lz_d0 n_6 ls_2_2 =
//│ 		  (if (n_6 < 0) then
//│ 		    (failwith "error")
//│ 		  else
//│ 		    (match (Lazy.force ls_2_2) with
//│ 		      | `LH_C(h_2_4, t_2_6) -> 
//│ 		        (if (n_6 = 0) then
//│ 		          h_2_4
//│ 		        else
//│ 		          ((atIndex_lz_d0 (n_6 - 1)) t_2_6))
//│ 		      | `LH_N -> 
//│ 		        (failwith "error")))
//│ 		and bernoulli_d0 _lh_bernoulli_arg1_1 =
//│ 		  (match _lh_bernoulli_arg1_1 with
//│ 		    | 0 -> 
//│ 		      1
//│ 		    | 1 -> 
//│ 		      (0 - (1 / 2))
//│ 		    | _ -> 
//│ 		      (if ((_lh_bernoulli_arg1_1 mod 2) = 1) then
//│ 		        0
//│ 		      else
//│ 		        (let rec powers_2 = ((atIndex_lz_d0 (_lh_bernoulli_arg1_1 - 1)) (Lazy.force neg_powers_d0)) in
//│ 		          (((0 - 1) / 2) + (sum_d0 (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		            (match _lh_listcomp_fun_para_1 with
//│ 		              | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                (match _lh_listcomp_fun_ls_h_1 with
//│ 		                  | `LH_P2(_lh_bernoulli_LH_P2_0_1, _lh_bernoulli_LH_P2_1_1) -> 
//│ 		                    (`LH_C((((sum_d1 (((zipWith_lz_nl_d0 (fun a_1_2 b_8 -> 
//│ 		                      (a_1_2 * b_8))) powers_2) (tail_d0 (tail_d1 _lh_bernoulli_LH_P2_1_1)))) - _lh_bernoulli_LH_P2_0_1) / (_lh_bernoulli_LH_P2_0_1 + 1)), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		                  | _ -> 
//│ 		                    (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))
//│ 		              | `LH_N -> 
//│ 		                (`LH_N))) in
//│ 		            (_lh_listcomp_fun_1 ((zip_nl_lz_d0 ((enumFromTo_d0 2) _lh_bernoulli_arg1_1)) pascal_d0))))))))
//│ 		and enumFromTo_d0 a_9 b_5 =
//│ 		  (if (a_9 <= b_5) then
//│ 		    (`LH_C(a_9, ((enumFromTo_d0 (a_9 + 1)) b_5)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFrom_d0 a_8 =
//│ 		  (lazy (`LH_C(a_8, (enumFrom_d0 (a_8 + 1)))))
//│ 		and head_lz_d0 ls_2_5 =
//│ 		  (match (Lazy.force ls_2_5) with
//│ 		    | `LH_C(h_2_7, t_2_9) -> 
//│ 		      h_2_7
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and iterate_d0 f_1_6 x_4 =
//│ 		  (lazy (`LH_C(x_4, ((iterate_d0 f_1_6) (f_1_6 x_4)))))
//│ 		and map_lz_d0 f_1_8 ls_2_3 =
//│ 		  (lazy (match (Lazy.force ls_2_3) with
//│ 		    | `LH_C(h_2_5, t_2_7) -> 
//│ 		      (`LH_C((f_1_8 h_2_5), ((map_lz_d0 f_1_8) t_2_7)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz_d1 f_1_3 ls_1_9 =
//│ 		  (lazy (match (Lazy.force ls_1_9) with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C((f_1_3 h_2_0), ((map_lz_d1 f_1_3) t_2_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz_d2 f_1_7 ls_2_1 =
//│ 		  (lazy (match (Lazy.force ls_2_1) with
//│ 		    | `LH_C(h_2_3, t_2_5) -> 
//│ 		      (`LH_C((f_1_7 h_2_3), ((map_lz_d2 f_1_7) t_2_5)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and mappend_d0 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(h_2_2, t_2_4) -> 
//│ 		      (`LH_C(h_2_2, ((mappend_d0 t_2_4) ys_1_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_3)
//│ 		and neg_powers_d0 =
//│ 		  (lazy ((map_lz_d0 ((zipWith_lz_lz_d1 (fun n_5 x_3 -> 
//│ 		    (if n_5 then
//│ 		      x_3
//│ 		    else
//│ 		      (0 - x_3)))) ((iterate_d0 not) true))) powers_d0))
//│ 		and pascal_d0 =
//│ 		  (lazy (`LH_C((`LH_C(1, (`LH_C(2, (`LH_C(1, (`LH_N))))))), ((map_lz_d2 (fun line_1 -> 
//│ 		    (((zipWith_d0 (fun a_1_1 b_7 -> 
//│ 		      (a_1_1 + b_7))) ((mappend_d0 line_1) (`LH_C(0, (`LH_N))))) (`LH_C(0, line_1))))) pascal_d0))))
//│ 		and powers_d0 =
//│ 		  (lazy (`LH_C((enumFrom_d0 2), ((map_lz_d1 (fun p_1 -> 
//│ 		    (((zipWith_lz_lz_d0 (fun a_1_0 b_6 -> 
//│ 		      (a_1_0 * b_6))) (head_lz_d0 powers_d0)) p_1))) powers_d0))))
//│ 		and sum_d0 ls_2_7 =
//│ 		  (match ls_2_7 with
//│ 		    | `LH_C(h_2_9, t_3_1) -> 
//│ 		      (h_2_9 + (sum_d0 t_3_1))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and sum_d1 ls_2_4 =
//│ 		  (match ls_2_4 with
//│ 		    | `LH_C(h_2_6, t_2_8) -> 
//│ 		      (h_2_6 + (sum_d1 t_2_8))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and tail_d0 ls_2_6 =
//│ 		  (match ls_2_6 with
//│ 		    | `LH_C(h_2_8, t_3_0) -> 
//│ 		      t_3_0
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and tail_d1 ls_2_0 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      t_2_3
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and testBernoulli_nofib_d0 _lh_testBernoulli_nofib_arg1_1 =
//│ 		  (bernoulli_d0 _lh_testBernoulli_nofib_arg1_1)
//│ 		and zipWith_lz_lz_d0 f_1_5 xs_1_2 ys_1_2 =
//│ 		  (lazy (match (Lazy.force xs_1_2) with
//│ 		    | `LH_C(hx_1_1, tx_1_1) -> 
//│ 		      (match (Lazy.force ys_1_2) with
//│ 		        | `LH_C(hy_1_1, ty_1_1) -> 
//│ 		          (`LH_C(((f_1_5 hx_1_1) hy_1_1), (((zipWith_lz_lz_d0 f_1_5) tx_1_1) ty_1_1)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and zipWith_lz_lz_d1 f_1_4 xs_1_0 ys_1_0 =
//│ 		  (lazy (match (Lazy.force xs_1_0) with
//│ 		    | `LH_C(hx_9, tx_9) -> 
//│ 		      (match (Lazy.force ys_1_0) with
//│ 		        | `LH_C(hy_9, ty_9) -> 
//│ 		          (`LH_C(((f_1_4 hx_9) hy_9), (((zipWith_lz_lz_d1 f_1_4) tx_9) ty_9)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and zipWith_lz_nl_d0 f_1_9 xs_1_4 ys_1_4 =
//│ 		  (match ys_1_4 with
//│ 		    | `LH_C(hy_1_2, ty_1_2) -> 
//│ 		      (match (Lazy.force xs_1_4) with
//│ 		        | `LH_C(hx_1_2, tx_1_2) -> 
//│ 		          (`LH_C(((f_1_9 hx_1_2) hy_1_2), (((zipWith_lz_nl_d0 f_1_9) tx_1_2) ty_1_2)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and zipWith_d0 f_1_2 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(hx_8, tx_8) -> 
//│ 		      (match ys_9 with
//│ 		        | `LH_C(hy_8, ty_8) -> 
//│ 		          (`LH_C(((f_1_2 hx_8) hy_8), (((zipWith_d0 f_1_2) tx_8) ty_8)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and zip_nl_lz_d0 xs_1_1 ys_1_1 =
//│ 		  (match xs_1_1 with
//│ 		    | `LH_C(hx_1_0, tx_1_0) -> 
//│ 		      (match (Lazy.force ys_1_1) with
//│ 		        | `LH_C(hy_1_0, ty_1_0) -> 
//│ 		          (`LH_C((`LH_P2(hx_1_0, hy_1_0)), ((zip_nl_lz_d0 tx_1_0) ty_1_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		(testBernoulli_nofib_d0 1500)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testBernoulli_nofib₀^1300] (hopeless to continue)
//│ 	[testBernoulli_nofib₀^1300 · bernoulli₀^803] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · atIndex_lz₀^1191] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · atIndex_lz₀^1191 · atIndex_lz₀^1021] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · atIndex_lz₀^1191] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · enumFromTo₀^1260] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · enumFromTo₀^1260 · enumFromTo₀^1071] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · enumFromTo₀^1260] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · iterate₀^843] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · iterate₀^843 · iterate₀^965] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · iterate₀^843] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · map_lz₀^830] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · map_lz₀^830 · map_lz₀^1043] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · map_lz₀^830] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · enumFrom₀^1093] (using original def)
//│ 					[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · enumFrom₀^1093 · enumFrom₀^996] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · enumFrom₀^1093] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · head_lz₀^1106] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · map_lz₁^1096] (using original def)
//│ 					[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · map_lz₁^1096 · map_lz₁^860] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · map_lz₁^1096] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · powers₀^1107] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · powers₀^1114] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · zipWith_lz_lz₀^1097] (using original def)
//│ 					[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · zipWith_lz_lz₀^1097 · zipWith_lz_lz₀^935] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · powers₀^850 · zipWith_lz_lz₀^1097] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · zipWith_lz_lz₁^831] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · zipWith_lz_lz₁^831 · zipWith_lz_lz₁^888] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · neg_powers₀^1199 · zipWith_lz_lz₁^831] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · map_lz₂^1142] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · map_lz₂^1142 · map_lz₂^983] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · map_lz₂^1142] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · mappend₀^1152] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · mappend₀^1152 · mappend₀^953] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · mappend₀^1152] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · pascal₀^1166] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · zipWith₀^1143] (using original def)
//│ 				[testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · zipWith₀^1143 · zipWith₀^814] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · pascal₀^1266 · zipWith₀^1143] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · sum₀^1213] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · sum₀^1213 · sum₀^1127] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · sum₀^1213] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · sum₁^1218] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · sum₁^1218 · sum₁^1058] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · sum₁^1218] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · tail₀^1230] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · tail₁^1231] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · zipWith_lz_nl₀^1219] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · zipWith_lz_nl₀^1219 · zipWith_lz_nl₀^1285] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · zipWith_lz_nl₀^1219] (using original def)
//│ 		[testBernoulli_nofib₀^1300 · bernoulli₀^803 · zip_nl_lz₀^1259] (using original def)
//│ 			[testBernoulli_nofib₀^1300 · bernoulli₀^803 · zip_nl_lz₀^1259 · zip_nl_lz₀^911] ---> [testBernoulli_nofib₀^1300 · bernoulli₀^803 · zip_nl_lz₀^1259] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testBernoulli_nofib₀₀(primId⁰(1500))
//│ def testBernoulli_nofib₀₀(_lh_testBernoulli_nofib_arg1¹) = 
//│ 	bernoulli₀₀(_lh_testBernoulli_nofib_arg1¹)
//│ 	where
//│ 	def bernoulli₀₀(_lh_bernoulli_arg1¹) = 
//│ 		case _lh_bernoulli_arg1¹ of {
//│ 			0  => 1
//│ 			| 1  => (0 - (1 / 2))
//│ 			| _  => if ((_lh_bernoulli_arg1¹ % 2) == 1) then 0 else 
//│ 				let powers¹ = atIndex_lz₀₀((_lh_bernoulli_arg1¹ - 1), force⁰(neg_powers₀₀))
//│ 				in (((0 - 1) / 2) + sum₀₀(
//│ 					let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 						LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 							LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 							| _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun¹(zip_nl_lz₀₀(enumFromTo₀₀(2, _lh_bernoulli_arg1¹), pascal₀₀))))}
//│ 		where
//│ 		def atIndex_lz₀₀(n³, ls¹⁷) = 
//│ 			if (n³ < 0) then error⁰ else case force⁰(ls¹⁷) of {
//│ 				LH_C h¹⁹ t¹⁹ => if (n³ == 0) then h¹⁹ else atIndex_lz₀₀((n³ - 1), t¹⁹)
//│ 				| LH_N  => error⁰}
//│ 		def enumFromTo₀₀(a⁸, b⁶) = 
//│ 			if (a⁸ <= b⁶) then [LH_C a⁸ enumFromTo₀₀((a⁸ + 1), b⁶)] else [LH_N]
//│ 		def neg_powers₀₀ = 
//│ 			lazy⁰(map_lz₀₀(zipWith_lz_lz₁₀((fun n² -> (fun x² -> if n² then x² else (0 - x²))), iterate₀₀(not⁰, [True])), powers₀₀))
//│ 			where
//│ 			def iterate₀₀(f¹⁴, x³) = 
//│ 				lazy⁰([LH_C x³ iterate₀₀(f¹⁴, f¹⁴(x³))])
//│ 			def map_lz₀₀(f¹³, ls¹³) = 
//│ 				lazy⁰(case force⁰(ls¹³) of {
//│ 					LH_C h¹⁴ t¹⁴ => [LH_C f¹³(h¹⁴) map_lz₀₀(f¹³, t¹⁴)]
//│ 					| LH_N  => [LH_N]})
//│ 			def powers₀₀ = 
//│ 				lazy⁰([LH_C enumFrom₀₀(2) map_lz₁₀((fun p¹ -> zipWith_lz_lz₀₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz₀₀(powers₀₀), p¹)), powers₀₀)])
//│ 				where
//│ 				def enumFrom₀₀(a⁶) = 
//│ 					lazy⁰([LH_C a⁶ enumFrom₀₀((a⁶ + 1))])
//│ 				def head_lz₀₀(ls¹⁶) = 
//│ 					case force⁰(ls¹⁶) of {
//│ 						LH_C h¹⁸ t¹⁸ => h¹⁸
//│ 						| LH_N  => error⁰}
//│ 				def map_lz₁₀(f¹⁰, ls¹⁰) = 
//│ 					lazy⁰(case force⁰(ls¹⁰) of {
//│ 						LH_C h¹¹ t¹¹ => [LH_C f¹⁰(h¹¹) map_lz₁₀(f¹⁰, t¹¹)]
//│ 						| LH_N  => [LH_N]})
//│ 				def zipWith_lz_lz₀₀(f⁸, xs⁶, ys⁶) = 
//│ 					lazy⁰(case force⁰(xs⁶) of {
//│ 						LH_C hx⁵ tx⁵ => case force⁰(ys⁶) of {
//│ 							LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ 			def zipWith_lz_lz₁₀(f¹², xs⁸, ys⁸) = 
//│ 				lazy⁰(case force⁰(xs⁸) of {
//│ 					LH_C hx⁷ tx⁷ => case force⁰(ys⁸) of {
//│ 						LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def pascal₀₀ = 
//│ 			lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz₂₀((fun line¹ -> zipWith₀₀((fun a⁷ -> (fun b⁵ -> (a⁷ + b⁵))), mappend₀₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal₀₀)])
//│ 			where
//│ 			def map_lz₂₀(f⁹, ls⁹) = 
//│ 				lazy⁰(case force⁰(ls⁹) of {
//│ 					LH_C h¹⁰ t¹⁰ => [LH_C f⁹(h¹⁰) map_lz₂₀(f⁹, t¹⁰)]
//│ 					| LH_N  => [LH_N]})
//│ 			def mappend₀₀(xs⁹, ys⁹) = 
//│ 				case xs⁹ of {
//│ 					LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)]
//│ 					| LH_N  => ys⁹}
//│ 			def zipWith₀₀(f¹⁵, xs¹⁰, ys¹⁰) = 
//│ 				case xs¹⁰ of {
//│ 					LH_C hx⁸ tx⁸ => case ys¹⁰ of {
//│ 						LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]}
//│ 		def sum₀₀(ls¹⁴) = 
//│ 			case ls¹⁴ of {
//│ 				LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum₀₀(t¹⁵))
//│ 				| LH_N  => 0}
//│ 		def sum₁₀(ls¹²) = 
//│ 			case ls¹² of {
//│ 				LH_C h¹³ t¹³ => (h¹³ + sum₁₀(t¹³))
//│ 				| LH_N  => 0}
//│ 		def tail₀₀(ls¹⁵) = 
//│ 			case ls¹⁵ of {
//│ 				LH_C h¹⁷ t¹⁷ => t¹⁷
//│ 				| LH_N  => error⁰}
//│ 		def tail₁₀(ls¹¹) = 
//│ 			case ls¹¹ of {
//│ 				LH_C h¹² t¹² => t¹²
//│ 				| LH_N  => error⁰}
//│ 		def zipWith_lz_nl₀₀(f¹¹, xs⁷, ys⁷) = 
//│ 			case ys⁷ of {
//│ 				LH_C hy⁶ ty⁶ => case force⁰(xs⁷) of {
//│ 					LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)]
//│ 					| LH_N  => [LH_N]}
//│ 				| LH_N  => [LH_N]}
//│ 		def zip_nl_lz₀₀(xs¹¹, ys¹¹) = 
//│ 			case xs¹¹ of {
//│ 				LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {
//│ 					LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)]
//│ 					| LH_N  => [LH_N]}
//│ 				| LH_N  => [LH_N]}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)]: 522 --->
//│ 	case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 524
//│ 	case force⁰(ys⁸) of {LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)] | LH_N  => [LH_N]}: 612
//│ [LH_N]: 523 --->
//│ 	case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 524
//│ 	case force⁰(ys⁸) of {LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)] | LH_N  => [LH_N]}: 612
//│ [LH_N]: 525 --->
//│ 	case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 524
//│ 	case force⁰(ys⁸) of {LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)] | LH_N  => [LH_N]}: 612
//│ [LH_C f⁹(h¹⁰) map_lz₂₀(f⁹, t¹⁰)]: 543 --->
//│ 	case force⁰(ls⁹) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁹(h¹⁰) map_lz₂₀(f⁹, t¹⁰)] | LH_N  => [LH_N]}: 545
//│ 	case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]}: 995
//│ [LH_N]: 544 --->
//│ 	case force⁰(ls⁹) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁹(h¹⁰) map_lz₂₀(f⁹, t¹⁰)] | LH_N  => [LH_N]}: 545
//│ 	case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]}: 995
//│ [LH_C f¹⁰(h¹¹) map_lz₁₀(f¹⁰, t¹¹)]: 561 --->
//│ 	case force⁰(ls¹⁰) of {LH_C h¹¹ t¹¹ => [LH_C f¹⁰(h¹¹) map_lz₁₀(f¹⁰, t¹¹)] | LH_N  => [LH_N]}: 563
//│ 	case force⁰(ls¹³) of {LH_C h¹⁴ t¹⁴ => [LH_C f¹³(h¹⁴) map_lz₀₀(f¹³, t¹⁴)] | LH_N  => [LH_N]}: 649
//│ [LH_N]: 562 --->
//│ 	case force⁰(ls¹⁰) of {LH_C h¹¹ t¹¹ => [LH_C f¹⁰(h¹¹) map_lz₁₀(f¹⁰, t¹¹)] | LH_N  => [LH_N]}: 563
//│ 	case force⁰(ls¹³) of {LH_C h¹⁴ t¹⁴ => [LH_C f¹³(h¹⁴) map_lz₀₀(f¹³, t¹⁴)] | LH_N  => [LH_N]}: 649
//│ [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)]: 583 --->
//│ 	case ls¹² of {LH_C h¹³ t¹³ => (h¹³ + sum₁₀(t¹³)) | LH_N  => 0}: 633
//│ [LH_N]: 584 --->
//│ 	case ls¹² of {LH_C h¹³ t¹³ => (h¹³ + sum₁₀(t¹³)) | LH_N  => 0}: 633
//│ [LH_N]: 586 --->
//│ 	case ls¹² of {LH_C h¹³ t¹³ => (h¹³ + sum₁₀(t¹³)) | LH_N  => 0}: 633
//│ [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)]: 610 --->
//│ 	case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 585
//│ [LH_N]: 611 --->
//│ 	case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 585
//│ [LH_N]: 613 --->
//│ 	case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 585
//│ [LH_C f¹³(h¹⁴) map_lz₀₀(f¹³, t¹⁴)]: 647 --->
//│ 	case force⁰(ls¹⁷) of {LH_C h¹⁹ t¹⁹ => if (n³ == 0) then h¹⁹ else atIndex_lz₀₀((n³ - 1), t¹⁹) | LH_N  => error⁰}: 951
//│ [LH_N]: 648 --->
//│ 	case force⁰(ls¹⁷) of {LH_C h¹⁹ t¹⁹ => if (n³ == 0) then h¹⁹ else atIndex_lz₀₀((n³ - 1), t¹⁹) | LH_N  => error⁰}: 951
//│ [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 744 --->
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum₀₀(t¹⁵)) | LH_N  => 0}: 662
//│ [LH_N]: 749 --->
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum₀₀(t¹⁵)) | LH_N  => 0}: 662
//│ [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)]: 777 --->
//│ 	case xs¹⁰ of {LH_C hx⁸ tx⁸ => case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 921
//│ [LH_C a⁶ enumFrom₀₀((a⁶ + 1))]: 795 --->
//│ 	case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 524
//│ 	case force⁰(xs⁶) of {LH_C hx⁵ tx⁵ => case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 526
//│ 	case force⁰(ys⁸) of {LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)] | LH_N  => [LH_N]}: 612
//│ [LH_C x³ iterate₀₀(f¹⁴, f¹⁴(x³))]: 836 --->
//│ 	case force⁰(xs⁸) of {LH_C hx⁷ tx⁷ => case force⁰(ys⁸) of {LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 614
//│ [LH_N]: 844 --->
//│ 	case ys⁷ of {LH_C hy⁶ ty⁶ => case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 587
//│ 	case xs⁹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)] | LH_N  => ys⁹}: 779
//│ 	case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 919
//│ [LH_C 1 [LH_N]]: 845 --->
//│ 	case ys⁷ of {LH_C hy⁶ ty⁶ => case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 587
//│ 	case xs⁹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)] | LH_N  => ys⁹}: 779
//│ 	case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 919
//│ [LH_C 2 [LH_C 1 [LH_N]]]: 846 --->
//│ 	case xs⁹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)] | LH_N  => ys⁹}: 779
//│ 	case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 825
//│ 	case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 919
//│ [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 847 --->
//│ 	case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 622
//│ 	case xs⁹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)] | LH_N  => ys⁹}: 779
//│ 	case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 919
//│ [LH_N]: 862 --->
//│ 	case xs¹⁰ of {LH_C hx⁸ tx⁸ => case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 921
//│ [LH_C 0 [LH_N]]: 863 --->
//│ 	case xs¹⁰ of {LH_C hx⁸ tx⁸ => case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 921
//│ [LH_C 0 line¹]: 868 --->
//│ 	case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 919
//│ [LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz₂₀((fun line¹ -> zipWith₀₀((fun a⁷ -> (fun b⁵ -> (a⁷ + b⁵))), mappend₀₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal₀₀)]: 874 --->
//│ 	case force⁰(ls⁹) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁹(h¹⁰) map_lz₂₀(f⁹, t¹⁰)] | LH_N  => [LH_N]}: 545
//│ 	case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]}: 995
//│ [LH_C a⁸ enumFromTo₀₀((a⁸ + 1), b⁶)]: 891 --->
//│ 	case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 997
//│ [LH_N]: 892 --->
//│ 	case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 997
//│ [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)]: 917 --->
//│ 	case ys⁷ of {LH_C hy⁶ ty⁶ => case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 587
//│ 	case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 622
//│ 	case xs⁹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)] | LH_N  => ys⁹}: 779
//│ 	case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 825
//│ 	case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 919
//│ [LH_N]: 918 --->
//│ 	case ys⁷ of {LH_C hy⁶ ty⁶ => case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 587
//│ 	case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 622
//│ 	case xs⁹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)] | LH_N  => ys⁹}: 779
//│ 	case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 825
//│ 	case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 919
//│ [LH_N]: 920 --->
//│ 	case ys⁷ of {LH_C hy⁶ ty⁶ => case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 587
//│ 	case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 622
//│ 	case xs⁹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)] | LH_N  => ys⁹}: 779
//│ 	case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 825
//│ 	case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 919
//│ [LH_C enumFrom₀₀(2) map_lz₁₀((fun p¹ -> zipWith_lz_lz₀₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz₀₀(powers₀₀), p¹)), powers₀₀)]: 979 --->
//│ 	case force⁰(ls¹⁰) of {LH_C h¹¹ t¹¹ => [LH_C f¹⁰(h¹¹) map_lz₁₀(f¹⁰, t¹¹)] | LH_N  => [LH_N]}: 563
//│ 	case force⁰(ls¹³) of {LH_C h¹⁴ t¹⁴ => [LH_C f¹³(h¹⁴) map_lz₀₀(f¹³, t¹⁴)] | LH_N  => [LH_N]}: 649
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 901
//│ [LH_P2 hx⁹ hy⁹]: 987 --->
//│ 	case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 748
//│ [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)]: 993 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 750
//│ [LH_N]: 994 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 750
//│ [LH_N]: 996 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 750
//│ ------------------
//│ case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 524 --->
//│ 	[LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)]: 522
//│ 	[LH_N]: 523
//│ 	[LH_N]: 525
//│ 	[LH_C a⁶ enumFrom₀₀((a⁶ + 1))]: 795
//│ case force⁰(xs⁶) of {LH_C hx⁵ tx⁵ => case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => [LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 526 --->
//│ 	[LH_C a⁶ enumFrom₀₀((a⁶ + 1))]: 795
//│ case force⁰(ls⁹) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁹(h¹⁰) map_lz₂₀(f⁹, t¹⁰)] | LH_N  => [LH_N]}: 545 --->
//│ 	[LH_C f⁹(h¹⁰) map_lz₂₀(f⁹, t¹⁰)]: 543
//│ 	[LH_N]: 544
//│ 	[LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz₂₀((fun line¹ -> zipWith₀₀((fun a⁷ -> (fun b⁵ -> (a⁷ + b⁵))), mappend₀₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal₀₀)]: 874
//│ case force⁰(ls¹⁰) of {LH_C h¹¹ t¹¹ => [LH_C f¹⁰(h¹¹) map_lz₁₀(f¹⁰, t¹¹)] | LH_N  => [LH_N]}: 563 --->
//│ 	[LH_C f¹⁰(h¹¹) map_lz₁₀(f¹⁰, t¹¹)]: 561
//│ 	[LH_N]: 562
//│ 	[LH_C enumFrom₀₀(2) map_lz₁₀((fun p¹ -> zipWith_lz_lz₀₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz₀₀(powers₀₀), p¹)), powers₀₀)]: 979
//│ case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 585 --->
//│ 	[LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)]: 610
//│ 	[LH_N]: 611
//│ 	[LH_N]: 613
//│ case ys⁷ of {LH_C hy⁶ ty⁶ => case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 587 --->
//│ 	[LH_N]: 844
//│ 	[LH_C 1 [LH_N]]: 845
//│ 	[LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)]: 917
//│ 	[LH_N]: 918
//│ 	[LH_N]: 920
//│ case force⁰(ys⁸) of {LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)] | LH_N  => [LH_N]}: 612 --->
//│ 	[LH_C f⁸(hx⁵, hy⁵) zipWith_lz_lz₀₀(f⁸, tx⁵, ty⁵)]: 522
//│ 	[LH_N]: 523
//│ 	[LH_N]: 525
//│ 	[LH_C a⁶ enumFrom₀₀((a⁶ + 1))]: 795
//│ case force⁰(xs⁸) of {LH_C hx⁷ tx⁷ => case force⁰(ys⁸) of {LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 614 --->
//│ 	[LH_C x³ iterate₀₀(f¹⁴, f¹⁴(x³))]: 836
//│ case ls¹¹ of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 622 --->
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 847
//│ 	[LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)]: 917
//│ 	[LH_N]: 918
//│ 	[LH_N]: 920
//│ case ls¹² of {LH_C h¹³ t¹³ => (h¹³ + sum₁₀(t¹³)) | LH_N  => 0}: 633 --->
//│ 	[LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)]: 583
//│ 	[LH_N]: 584
//│ 	[LH_N]: 586
//│ case force⁰(ls¹³) of {LH_C h¹⁴ t¹⁴ => [LH_C f¹³(h¹⁴) map_lz₀₀(f¹³, t¹⁴)] | LH_N  => [LH_N]}: 649 --->
//│ 	[LH_C f¹⁰(h¹¹) map_lz₁₀(f¹⁰, t¹¹)]: 561
//│ 	[LH_N]: 562
//│ 	[LH_C enumFrom₀₀(2) map_lz₁₀((fun p¹ -> zipWith_lz_lz₀₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz₀₀(powers₀₀), p¹)), powers₀₀)]: 979
//│ case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum₀₀(t¹⁵)) | LH_N  => 0}: 662 --->
//│ 	[LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 744
//│ 	[LH_N]: 749
//│ case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 748 --->
//│ 	[LH_P2 hx⁹ hy⁹]: 987
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 750 --->
//│ 	[LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)]: 993
//│ 	[LH_N]: 994
//│ 	[LH_N]: 996
//│ case xs⁹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)] | LH_N  => ys⁹}: 779 --->
//│ 	[LH_N]: 844
//│ 	[LH_C 1 [LH_N]]: 845
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 846
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 847
//│ 	[LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)]: 917
//│ 	[LH_N]: 918
//│ 	[LH_N]: 920
//│ case ls¹⁵ of {LH_C h¹⁷ t¹⁷ => t¹⁷ | LH_N  => error⁰}: 825 --->
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 846
//│ 	[LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)]: 917
//│ 	[LH_N]: 918
//│ 	[LH_N]: 920
//│ case force⁰(ls¹⁶) of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 901 --->
//│ 	[LH_C enumFrom₀₀(2) map_lz₁₀((fun p¹ -> zipWith_lz_lz₀₀((fun a⁹ -> (fun b⁷ -> (a⁹ * b⁷))), head_lz₀₀(powers₀₀), p¹)), powers₀₀)]: 979
//│ case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 919 --->
//│ 	[LH_N]: 844
//│ 	[LH_C 1 [LH_N]]: 845
//│ 	[LH_C 2 [LH_C 1 [LH_N]]]: 846
//│ 	[LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]]: 847
//│ 	[LH_C 0 line¹]: 868
//│ 	[LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)]: 917
//│ 	[LH_N]: 918
//│ 	[LH_N]: 920
//│ case xs¹⁰ of {LH_C hx⁸ tx⁸ => case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 921 --->
//│ 	[LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)]: 777
//│ 	[LH_N]: 862
//│ 	[LH_C 0 [LH_N]]: 863
//│ case force⁰(ls¹⁷) of {LH_C h¹⁹ t¹⁹ => if (n³ == 0) then h¹⁹ else atIndex_lz₀₀((n³ - 1), t¹⁹) | LH_N  => error⁰}: 951 --->
//│ 	[LH_C f¹³(h¹⁴) map_lz₀₀(f¹³, t¹⁴)]: 647
//│ 	[LH_N]: 648
//│ case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]}: 995 --->
//│ 	[LH_C f⁹(h¹⁰) map_lz₂₀(f⁹, t¹⁰)]: 543
//│ 	[LH_N]: 544
//│ 	[LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz₂₀((fun line¹ -> zipWith₀₀((fun a⁷ -> (fun b⁵ -> (a⁷ + b⁵))), mappend₀₀(line¹, [LH_C 0 [LH_N]]), [LH_C 0 line¹])), pascal₀₀)]: 874
//│ case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 997 --->
//│ 	[LH_C a⁸ enumFromTo₀₀((a⁸ + 1), b⁶)]: 891
//│ 	[LH_N]: 892
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)]: 583 --->
//│ 	case ls¹² of {LH_C h¹³ t¹³ => (h¹³ + sum₁₀(t¹³)) | LH_N  => 0}: 633
//│ [LH_N]: 584 --->
//│ 	case ls¹² of {LH_C h¹³ t¹³ => (h¹³ + sum₁₀(t¹³)) | LH_N  => 0}: 633
//│ [LH_N]: 586 --->
//│ 	case ls¹² of {LH_C h¹³ t¹³ => (h¹³ + sum₁₀(t¹³)) | LH_N  => 0}: 633
//│ [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)]: 610 --->
//│ 	case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 585
//│ [LH_N]: 611 --->
//│ 	case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 585
//│ [LH_N]: 613 --->
//│ 	case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 585
//│ [LH_C f¹³(h¹⁴) map_lz₀₀(f¹³, t¹⁴)]: 647 --->
//│ 	case force⁰(ls¹⁷) of {LH_C h¹⁹ t¹⁹ => if (n³ == 0) then h¹⁹ else atIndex_lz₀₀((n³ - 1), t¹⁹) | LH_N  => error⁰}: 951
//│ [LH_N]: 648 --->
//│ 	case force⁰(ls¹⁷) of {LH_C h¹⁹ t¹⁹ => if (n³ == 0) then h¹⁹ else atIndex_lz₀₀((n³ - 1), t¹⁹) | LH_N  => error⁰}: 951
//│ [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 744 --->
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum₀₀(t¹⁵)) | LH_N  => 0}: 662
//│ [LH_N]: 749 --->
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum₀₀(t¹⁵)) | LH_N  => 0}: 662
//│ [LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)]: 777 --->
//│ 	case xs¹⁰ of {LH_C hx⁸ tx⁸ => case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 921
//│ [LH_C x³ iterate₀₀(f¹⁴, f¹⁴(x³))]: 836 --->
//│ 	case force⁰(xs⁸) of {LH_C hx⁷ tx⁷ => case force⁰(ys⁸) of {LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 614
//│ [LH_N]: 862 --->
//│ 	case xs¹⁰ of {LH_C hx⁸ tx⁸ => case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 921
//│ [LH_C 0 [LH_N]]: 863 --->
//│ 	case xs¹⁰ of {LH_C hx⁸ tx⁸ => case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 921
//│ [LH_C a⁸ enumFromTo₀₀((a⁸ + 1), b⁶)]: 891 --->
//│ 	case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 997
//│ [LH_N]: 892 --->
//│ 	case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 997
//│ [LH_P2 hx⁹ hy⁹]: 987 --->
//│ 	case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 748
//│ [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)]: 993 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 750
//│ [LH_N]: 994 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 750
//│ [LH_N]: 996 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 750
//│ ------------------
//│ case force⁰(xs⁷) of {LH_C hx⁶ tx⁶ => [LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)] | LH_N  => [LH_N]}: 585 --->
//│ 	[LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)]: 610
//│ 	[LH_N]: 611
//│ 	[LH_N]: 613
//│ case force⁰(xs⁸) of {LH_C hx⁷ tx⁷ => case force⁰(ys⁸) of {LH_C hy⁷ ty⁷ => [LH_C f¹²(hx⁷, hy⁷) zipWith_lz_lz₁₀(f¹², tx⁷, ty⁷)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 614 --->
//│ 	[LH_C x³ iterate₀₀(f¹⁴, f¹⁴(x³))]: 836
//│ case ls¹² of {LH_C h¹³ t¹³ => (h¹³ + sum₁₀(t¹³)) | LH_N  => 0}: 633 --->
//│ 	[LH_C f¹¹(hx⁶, hy⁶) zipWith_lz_nl₀₀(f¹¹, tx⁶, ty⁶)]: 583
//│ 	[LH_N]: 584
//│ 	[LH_N]: 586
//│ case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => (h¹⁵ + sum₀₀(t¹⁵)) | LH_N  => 0}: 662 --->
//│ 	[LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 744
//│ 	[LH_N]: 749
//│ case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 748 --->
//│ 	[LH_P2 hx⁹ hy⁹]: 987
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P2 _lh_bernoulli_LH_P2_0¹ _lh_bernoulli_LH_P2_1¹ => [LH_C ((sum₁₀(zipWith_lz_nl₀₀((fun a⁵ -> (fun b⁴ -> (a⁵ * b⁴))), powers¹, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1¹)))) - _lh_bernoulli_LH_P2_0¹) / (_lh_bernoulli_LH_P2_0¹ + 1)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 750 --->
//│ 	[LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)]: 993
//│ 	[LH_N]: 994
//│ 	[LH_N]: 996
//│ case xs¹⁰ of {LH_C hx⁸ tx⁸ => case ys¹⁰ of {LH_C hy⁸ ty⁸ => [LH_C f¹⁵(hx⁸, hy⁸) zipWith₀₀(f¹⁵, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 921 --->
//│ 	[LH_C h¹⁶ mappend₀₀(t¹⁶, ys⁹)]: 777
//│ 	[LH_N]: 862
//│ 	[LH_C 0 [LH_N]]: 863
//│ case force⁰(ls¹⁷) of {LH_C h¹⁹ t¹⁹ => if (n³ == 0) then h¹⁹ else atIndex_lz₀₀((n³ - 1), t¹⁹) | LH_N  => error⁰}: 951 --->
//│ 	[LH_C f¹³(h¹⁴) map_lz₀₀(f¹³, t¹⁴)]: 647
//│ 	[LH_N]: 648
//│ case xs¹¹ of {LH_C hx⁹ tx⁹ => case force⁰(ys¹¹) of {LH_C hy⁹ ty⁹ => [LH_C [LH_P2 hx⁹ hy⁹] zip_nl_lz₀₀(tx⁹, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 997 --->
//│ 	[LH_C a⁸ enumFromTo₀₀((a⁸ + 1), b⁶)]: 891
//│ 	[LH_N]: 892
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testBernoulli_nofib₀₀(primId⁰(1500))
//│ def testBernoulli_nofib₀₀(_lh_testBernoulli_nofib_arg1²) = 
//│ 	bernoulli₀₀(_lh_testBernoulli_nofib_arg1²)
//│ 	where
//│ 	def bernoulli₀₀(_lh_bernoulli_arg1²) = 
//│ 		case _lh_bernoulli_arg1² of {
//│ 			0  => 1
//│ 			| 1  => (0 - (1 / 2))
//│ 			| _  => if ((_lh_bernoulli_arg1² % 2) == 1) then 0 else 
//│ 				let powers⁶ = atIndex_lz₀₀((_lh_bernoulli_arg1² - 1), force⁰(neg_powers₀₀))
//│ 				in (((0 - 1) / 2) + sum₀₀(
//│ 					let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para² -> _lh_listcomp_fun_para²(_lh_listcomp_fun⁶, powers⁶))
//│ 					in _lh_listcomp_fun⁶(zip_nl_lz₀₀(enumFromTo₀₀(2, _lh_bernoulli_arg1²), pascal₀₀))))}
//│ 		where
//│ 		def atIndex_lz₀₀(n⁷, ls²⁶) = 
//│ 			if (n⁷ < 0) then error⁰ else force⁰(ls²⁶, n⁷)
//│ 		def enumFromTo₀₀(a¹¹, b⁹) = 
//│ 			if (a¹¹ <= b⁹) then 
//│ 				let hx¹¹ = a¹¹
//│ 				in let tx¹¹ = enumFromTo₀₀((a¹¹ + 1), b⁹)
//│ 				in (fun ys¹⁶ -> case force⁰(ys¹⁶) of {
//│ 					LH_C hy⁹ ty⁹ => 
//│ 						let _lh_listcomp_fun_ls_h² = 	
//│ 							let _lh_bernoulli_LH_P2_0² = hx¹¹
//│ 							in let _lh_bernoulli_LH_P2_1² = hy⁹
//│ 							in (fun _lh_listcomp_fun_ls_t³ -> (fun _lh_listcomp_fun³ -> (fun powers³ -> 
//│ 								let h²⁰ = ((sum₁₀(zipWith_lz_nl₀₀((fun a¹² -> (fun b¹⁰ -> (a¹² * b¹⁰))), powers³, tail₀₀(tail₁₀(_lh_bernoulli_LH_P2_1²)))) - _lh_bernoulli_LH_P2_0²) / (_lh_bernoulli_LH_P2_0² + 1))
//│ 								in let t²⁰ = _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)
//│ 								in (fun _lh_dummy⁰ -> (h²⁰ + sum₀₀(t²⁰))))))
//│ 						in let _lh_listcomp_fun_ls_t² = zip_nl_lz₀₀(tx¹¹, ty⁹)
//│ 						in (fun _lh_listcomp_fun² -> (fun powers² -> _lh_listcomp_fun_ls_h²(_lh_listcomp_fun_ls_t², _lh_listcomp_fun², powers²)))
//│ 					| LH_N  => (fun _lh_listcomp_fun⁴ -> (fun powers⁴ -> (fun _lh_dummy¹ -> 0)))}) else (fun ys¹⁷ -> (fun _lh_listcomp_fun⁵ -> (fun powers⁵ -> (fun _lh_dummy² -> 0))))
//│ 		def neg_powers₀₀ = 
//│ 			lazy⁰(map_lz₀₀(zipWith_lz_lz₁₀((fun n⁶ -> (fun x⁴ -> if n⁶ then x⁴ else (0 - x⁴))), iterate₀₀(not⁰, [True])), powers₀₀))
//│ 			where
//│ 			def iterate₀₀(f²⁶, x⁵) = 
//│ 				lazy⁰(
//│ 					let hx¹³ = x⁵
//│ 					in let tx¹³ = iterate₀₀(f²⁶, f²⁶(x⁵))
//│ 					in (fun f²⁷ -> (fun ys²³ -> case force⁰(ys²³) of {
//│ 						LH_C hy⁷ ty⁷ => 
//│ 							let hx¹⁴ = f²⁷(hx¹³, hy⁷)
//│ 							in let tx¹⁴ = zipWith_lz_lz₁₀(f²⁷, tx¹³, ty⁷)
//│ 							in (fun f²⁸ -> (fun hy¹⁰ -> (fun ty¹⁰ -> 
//│ 								let h²² = f²⁸(hx¹⁴, hy¹⁰)
//│ 								in let t²² = zipWith_lz_nl₀₀(f²⁸, tx¹⁴, ty¹⁰)
//│ 								in (fun _lh_dummy⁴ -> (h²² + sum₁₀(t²²))))))
//│ 						| LH_N  => (fun f²⁹ -> (fun hy¹¹ -> (fun ty¹¹ -> (fun _lh_dummy⁵ -> 0))))})))
//│ 			def map_lz₀₀(f¹⁹, ls¹⁹) = 
//│ 				lazy⁰(case force⁰(ls¹⁹) of {
//│ 					LH_C h¹⁴ t¹⁴ => 
//│ 						let h²¹ = f¹⁹(h¹⁴)
//│ 						in let t²¹ = map_lz₀₀(f¹⁹, t¹⁴)
//│ 						in (fun n⁴ -> if (n⁴ == 0) then h²¹ else atIndex_lz₀₀((n⁴ - 1), t²¹))
//│ 					| LH_N  => (fun n⁵ -> error⁰)})
//│ 			def powers₀₀ = 
//│ 				lazy⁰([LH_C enumFrom₀₀(2) map_lz₁₀((fun p² -> zipWith_lz_lz₀₀((fun a¹⁴ -> (fun b¹¹ -> (a¹⁴ * b¹¹))), head_lz₀₀(powers₀₀), p²)), powers₀₀)])
//│ 				where
//│ 				def enumFrom₀₀(a¹³) = 
//│ 					lazy⁰([LH_C a¹³ enumFrom₀₀((a¹³ + 1))])
//│ 				def head_lz₀₀(ls²³) = 
//│ 					case force⁰(ls²³) of {
//│ 						LH_C h¹⁸ t¹⁸ => h¹⁸
//│ 						| LH_N  => error⁰}
//│ 				def map_lz₁₀(f²⁰, ls²⁰) = 
//│ 					lazy⁰(case force⁰(ls²⁰) of {
//│ 						LH_C h¹¹ t¹¹ => [LH_C f²⁰(h¹¹) map_lz₁₀(f²⁰, t¹¹)]
//│ 						| LH_N  => [LH_N]})
//│ 				def zipWith_lz_lz₀₀(f²⁴, xs¹⁶, ys²⁰) = 
//│ 					lazy⁰(case force⁰(xs¹⁶) of {
//│ 						LH_C hx⁵ tx⁵ => case force⁰(ys²⁰) of {
//│ 							LH_C hy⁵ ty⁵ => [LH_C f²⁴(hx⁵, hy⁵) zipWith_lz_lz₀₀(f²⁴, tx⁵, ty⁵)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ 			def zipWith_lz_lz₁₀(f²¹, xs¹⁴, ys¹⁸) = 
//│ 				lazy⁰(force⁰(xs¹⁴, f²¹, ys¹⁸))
//│ 		def pascal₀₀ = 
//│ 			lazy⁰([LH_C [LH_C 1 [LH_C 2 [LH_C 1 [LH_N]]]] map_lz₂₀((fun line² -> zipWith₀₀((fun a¹⁰ -> (fun b⁸ -> (a¹⁰ + b⁸))), mappend₀₀(line², 
//│ 				let hx¹⁰ = 0
//│ 				in let tx¹⁰ = (fun f¹⁸ -> (fun ys¹⁵ -> [LH_N]))
//│ 				in (fun f¹⁷ -> (fun ys¹⁴ -> case ys¹⁴ of {
//│ 					LH_C hy⁸ ty⁸ => [LH_C f¹⁷(hx¹⁰, hy⁸) zipWith₀₀(f¹⁷, tx¹⁰, ty⁸)]
//│ 					| LH_N  => [LH_N]}))), [LH_C 0 line²])), pascal₀₀)])
//│ 			where
//│ 			def map_lz₂₀(f²³, ls²⁴) = 
//│ 				lazy⁰(case force⁰(ls²⁴) of {
//│ 					LH_C h¹⁰ t¹⁰ => [LH_C f²³(h¹⁰) map_lz₂₀(f²³, t¹⁰)]
//│ 					| LH_N  => [LH_N]})
//│ 			def mappend₀₀(xs¹⁷, ys²¹) = 
//│ 				case xs¹⁷ of {
//│ 					LH_C h¹⁶ t¹⁶ => 
//│ 						let hx¹² = h¹⁶
//│ 						in let tx¹² = mappend₀₀(t¹⁶, ys²¹)
//│ 						in (fun f²⁵ -> (fun ys²² -> case ys²² of {
//│ 							LH_C hy⁸ ty⁸ => [LH_C f²⁵(hx¹², hy⁸) zipWith₀₀(f²⁵, tx¹², ty⁸)]
//│ 							| LH_N  => [LH_N]}))
//│ 					| LH_N  => ys²¹}
//│ 			def zipWith₀₀(f¹⁶, xs¹², ys¹²) = 
//│ 				xs¹²(f¹⁶, ys¹²)
//│ 		def sum₀₀(ls²¹) = 
//│ 			ls²¹(99)
//│ 		def sum₁₀(ls²²) = 
//│ 			ls²²(99)
//│ 		def tail₀₀(ls²⁵) = 
//│ 			case ls²⁵ of {
//│ 				LH_C h¹⁷ t¹⁷ => t¹⁷
//│ 				| LH_N  => error⁰}
//│ 		def tail₁₀(ls¹⁸) = 
//│ 			case ls¹⁸ of {
//│ 				LH_C h¹² t¹² => t¹²
//│ 				| LH_N  => error⁰}
//│ 		def zipWith_lz_nl₀₀(f²², xs¹⁵, ys¹⁹) = 
//│ 			case ys¹⁹ of {
//│ 				LH_C hy⁶ ty⁶ => force⁰(xs¹⁵, f²², hy⁶, ty⁶)
//│ 				| LH_N  => (fun _lh_dummy³ -> 0)}
//│ 		def zip_nl_lz₀₀(xs¹³, ys¹³) = 
//│ 			xs¹³(ys¹³)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

