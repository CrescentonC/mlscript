:NewParser
:ParseOnly

// prime :: Int -> Int
// prime n = primes !! n
//   where
//     primes = sieve (wheels primes) primes (squares primes) n

// sieve (Wheel s ns:ws) ps qs input =
//   -- It's always the case that input*input > head ps,
//   -- but GHC doesn't know that. We do this so that stuff
//   -- isn't floated to top-level into a CAF.
//   [n' | o <- s:[s*2,s*3..(min (input*input) (head ps-1))*s],
//         n <- ns,
//         n'<- [n+o], noFactor n']
//   ++
//   sieve ws (tail ps) (tail qs) input
//   where
//   noFactor = if s<=2 then const True else notDivBy ps qs

// notDivBy (p:ps) (q:qs) n =
//   q > n || n `mod` p > 0 && notDivBy ps qs n

// squares :: [Int] -> [Int]
// squares ps = [p*p | p<-ps]

// wheels :: [Int] -> [Wheel]
// wheels ps = ws
//   where
//     ws = Wheel 1 [1] : zipWith nextSize ws ps

// nextSize (Wheel s ns) p =
//   Wheel (s*p) ns'
//   where
//   ns' = [n' | o <- [0,s..(p-1)*s],
//               n <- ns,
//               n' <- [n+o], n'`mod`p > 0]

// main = forM_ [1..100] $ const $ do
// 	[arg] <- getArgs
// 	print (prime (read arg))

// squares ps = map (\p -> p * p) ps
// min a b = if a > b then b else a
// noFactor s ps qs n = if (s<=2) then True else notDivBy ps qs n
// notDivBy (p:ps) (q:qs) n = (q > n) || (((n `mod` p) > 0) && (notDivBy ps qs n))
// nextSize (Wheel s ns) p = Wheel (s*p) [n' | o <- [0,s..((p-1)*s)], n <- ns, n' <- [n + o], (n' `mod` p) > 0]
// wheels ps = (Wheel 1 [1]):(zipWith nextSize (wheels ps) ps)
// sieve ((Wheel s ns):ws) ps qs input = [n' | o <- (s:[s*2,s*3..(min (input*input) ((head ps)-1))*s]), n <- ns, n'<- [n+o], noFactor s ps qs n'] ++ (sieve ws (tail ps) (tail qs) input)
// primes n = sieve (wheels (primes n)) (primes n) (squares (primes n)) n
// prime n = atIndex n (primes n)
// testWheelSieve1_nofib n = prime n
// testWheelSieve1_nofib $ primId 1000

:lhInHaskell
:lhGenOCaml
append_lz xs ys = case xs of {
  (x:xs) -> lazy (x:(append_lz xs ys));
  [] -> ys
}
squares ps = map_lz (\p -> p * p) ps
min a b = if a > b then b else a
noFactor s ps qs n = if (s<=2) then True else notDivBy ps qs n
notDivBy xs ys n = case (force ys) of {
  (q:qs) -> if (q > n)
            then True
            else case (force xs) of {
              (p:ps) -> (((n `mod` p) > 0) && (notDivBy ps qs n))
            }
}
nextSize (Wheel s ns) p = Wheel (s*p) [n' | o <- [0,s..((p-1)*s)], n <- ns, n' <- [n + o], (n' `mod` p) > 0]
wheels ps = lazy ((Wheel 1 [1]):(zipWith_lz_lz nextSize (wheels ps) ps))
sieve wls ps qs input = case (force wls) of {
  ((Wheel s ns):ws) ->
    append_lz [n' | o <- (s:[s*2,s*3..(min (input*input) ((head_lz ps)-1))*s]), n <- ns, n'<- [n+o], noFactor s ps qs n'] (sieve ws (tail_lz ps) (tail_lz qs) input)
}
primes n = lazy (sieve (wheels (primes n)) (primes n) (squares (primes n)) n)
prime n = atIndex_lz n (primes n)
testWheelSieve1_nofib n = prime n
testWheelSieve1_nofib $ primId 1000
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testWheelSieve1_nofib_₀^1446(primId⁰(1000))
//│ def append_lz_₀(_lh_append_lz_arg1¹, _lh_append_lz_arg2¹) = 
//│ 	let _lh_matchIdent⁴ = _lh_append_lz_arg1¹
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀^1036(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)])
//│ 		| LH_N  => _lh_append_lz_arg2¹
//│ 		| _  => error⁰}
//│ def atIndex_lz_₀(n⁴, ls¹⁹) = if (n⁴ < 0) then error⁰ else case force⁰(ls¹⁹) of {
//│ 	LH_C h²⁰ t²² => if (n⁴ == 0) then h²⁰ else atIndex_lz_₀^966((n⁴ - 1), t²²)
//│ 	| LH_N  => error⁰}
//│ def enumFromThenTo_₀(a⁵, t²⁴, b²) = if (a⁵ <= b²) then [LH_C a⁵ enumFromThenTo_₀^1088(t²⁴, ((2 * t²⁴) - a⁵), b²)] else [LH_N]
//│ def enumFromThenTo_₁(a⁶, t²⁷, b³) = if (a⁶ <= b³) then [LH_C a⁶ enumFromThenTo_₁^1220(t²⁷, ((2 * t²⁷) - a⁶), b³)] else [LH_N]
//│ def head_lz_₀(ls²¹) = case force⁰(ls²¹) of {
//│ 	LH_C h²² t²⁵ => h²²
//│ 	| LH_N  => error⁰}
//│ def map_lz_₀(f¹², ls²³) = lazy⁰(case force⁰(ls²³) of {
//│ 	LH_C h²⁴ t²⁸ => [LH_C f¹²(h²⁴) map_lz_₀^1291(f¹², t²⁸)]
//│ 	| LH_N  => [LH_N]})
//│ def min_₀(_lh_min_arg1¹, _lh_min_arg2¹) = if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ def nextSize_₀(_lh_nextSize_arg1¹, _lh_nextSize_arg2¹) = case _lh_nextSize_arg1¹ of {
//│ 	Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) 
//│ 		let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => 
//│ 				let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 					LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => 
//│ 						let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 							LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)
//│ 							| LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ 						in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]])
//│ 					| LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ 				in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁶(enumFromThenTo_₁^1192(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))]
//│ 	| _  => error⁰}
//│ def noFactor_₀(_lh_noFactor_arg1¹, _lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹) = if (_lh_noFactor_arg1¹ <= 2) then [True] else notDivBy_₀^1020(_lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹)
//│ def notDivBy_₀(_lh_notDivBy_arg1¹, _lh_notDivBy_arg2¹, _lh_notDivBy_arg3¹) = 
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_notDivBy_arg2¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else 
//│ 			let _lh_matchIdent⁶ = force⁰(_lh_notDivBy_arg1¹)
//│ 			in case _lh_matchIdent⁶ of {
//│ 				LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_₀^1266(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹))
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def prime_₀(_lh_prime_arg1¹) = atIndex_lz_₀^1074(_lh_prime_arg1¹, primes_₀^1077(_lh_prime_arg1¹))
//│ def primes_₀(_lh_primes_arg1¹) = lazy⁰(sieve_₀^982(wheels_₀^983(primes_₀^984(_lh_primes_arg1¹)), primes_₀^989(_lh_primes_arg1¹), squares_₀^993(primes_₀^994(_lh_primes_arg1¹)), _lh_primes_arg1¹))
//│ def sieve_₀(_lh_sieve_arg1¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_sieve_arg4¹) = 
//│ 	let _lh_matchIdent⁷ = force⁰(_lh_sieve_arg1¹)
//│ 	in case _lh_matchIdent⁷ of {
//│ 		LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {
//│ 			Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀^1307(
//│ 				let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 					LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => 
//│ 						let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => 
//│ 								let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 									LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀^1311(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)
//│ 									| LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ 								in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]])
//│ 							| LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ 						in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹)
//│ 					| LH_N  => [LH_N]})
//│ 				in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀^1358((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀^1372((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀^1380(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve_₀^1395(_lh_sieve_LH_C_1¹, tail_lz_₀^1398(_lh_sieve_arg2¹), tail_lz_₁^1402(_lh_sieve_arg3¹), _lh_sieve_arg4¹))
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ def squares_₀(_lh_squares_arg1¹) = map_lz_₀^1003((fun p¹ -> (p¹ * p¹)), _lh_squares_arg1¹)
//│ def tail_lz_₀(ls²⁰) = case force⁰(ls²⁰) of {
//│ 	LH_C h²¹ t²³ => t²³
//│ 	| LH_N  => error⁰}
//│ def tail_lz_₁(ls²²) = case force⁰(ls²²) of {
//│ 	LH_C h²³ t²⁶ => t²⁶
//│ 	| LH_N  => error⁰}
//│ def testWheelSieve1_nofib_₀(_lh_testWheelSieve1_nofib_arg1¹) = prime_₀^1133(_lh_testWheelSieve1_nofib_arg1¹)
//│ def wheels_₀(_lh_wheels_arg1¹) = lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_₀^1055(nextSize_₀^1056, wheels_₀^1058(_lh_wheels_arg1¹), _lh_wheels_arg1¹)])
//│ def zipWith_lz_lz_₀(f¹³, xs⁹, ys⁹) = lazy⁰(case force⁰(xs⁹) of {
//│ 	LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀^1430(f¹³, tx⁸, ty⁸)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec append_lz__d0 _lh_append_lz_arg1_1 _lh_append_lz_arg2_1 =
//│ 		  (let rec _lh_matchIdent_4 = _lh_append_lz_arg1_1 in
//│ 		    (match _lh_matchIdent_4 with
//│ 		      | `LH_C(_lh_append_lz_LH_C_0_1, _lh_append_lz_LH_C_1_1) -> 
//│ 		        (lazy (`LH_C(_lh_append_lz_LH_C_0_1, ((append_lz__d0 _lh_append_lz_LH_C_1_1) _lh_append_lz_arg2_1))))
//│ 		      | `LH_N -> 
//│ 		        _lh_append_lz_arg2_1
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and atIndex_lz__d0 n_4 ls_1_9 =
//│ 		  (if (n_4 < 0) then
//│ 		    (failwith "error")
//│ 		  else
//│ 		    (match (Lazy.force ls_1_9) with
//│ 		      | `LH_C(h_2_0, t_2_2) -> 
//│ 		        (if (n_4 = 0) then
//│ 		          h_2_0
//│ 		        else
//│ 		          ((atIndex_lz__d0 (n_4 - 1)) t_2_2))
//│ 		      | `LH_N -> 
//│ 		        (failwith "error")))
//│ 		and enumFromThenTo__d0 a_5 t_2_4 b_2 =
//│ 		  (if (a_5 <= b_2) then
//│ 		    (`LH_C(a_5, (((enumFromThenTo__d0 t_2_4) ((2 * t_2_4) - a_5)) b_2)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFromThenTo__d1 a_6 t_2_7 b_3 =
//│ 		  (if (a_6 <= b_3) then
//│ 		    (`LH_C(a_6, (((enumFromThenTo__d1 t_2_7) ((2 * t_2_7) - a_6)) b_3)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and head_lz__d0 ls_2_1 =
//│ 		  (match (Lazy.force ls_2_1) with
//│ 		    | `LH_C(h_2_2, t_2_5) -> 
//│ 		      h_2_2
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and map_lz__d0 f_1_2 ls_2_3 =
//│ 		  (lazy (match (Lazy.force ls_2_3) with
//│ 		    | `LH_C(h_2_4, t_2_8) -> 
//│ 		      (`LH_C((f_1_2 h_2_4), ((map_lz__d0 f_1_2) t_2_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and min__d0 _lh_min_arg1_1 _lh_min_arg2_1 =
//│ 		  (if (_lh_min_arg1_1 > _lh_min_arg2_1) then
//│ 		    _lh_min_arg2_1
//│ 		  else
//│ 		    _lh_min_arg1_1)
//│ 		and nextSize__d0 _lh_nextSize_arg1_1 _lh_nextSize_arg2_1 =
//│ 		  (match _lh_nextSize_arg1_1 with
//│ 		    | `Wheel(_lh_nextSize_Wheel_0_1, _lh_nextSize_Wheel_1_1) -> 
//│ 		      (`Wheel((_lh_nextSize_Wheel_0_1 * _lh_nextSize_arg2_1), (let rec _lh_listcomp_fun_6 = (fun _lh_listcomp_fun_para_6 -> 
//│ 		        (match _lh_listcomp_fun_para_6 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_6, _lh_listcomp_fun_ls_t_6) -> 
//│ 		            (let rec _lh_listcomp_fun_7 = (fun _lh_listcomp_fun_para_7 -> 
//│ 		              (match _lh_listcomp_fun_para_7 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_7, _lh_listcomp_fun_ls_t_7) -> 
//│ 		                  (let rec _lh_listcomp_fun_8 = (fun _lh_listcomp_fun_para_8 -> 
//│ 		                    (match _lh_listcomp_fun_para_8 with
//│ 		                      | `LH_C(_lh_listcomp_fun_ls_h_8, _lh_listcomp_fun_ls_t_8) -> 
//│ 		                        (if ((_lh_listcomp_fun_ls_h_8 mod _lh_nextSize_arg2_1) > 0) then
//│ 		                          (`LH_C(_lh_listcomp_fun_ls_h_8, (_lh_listcomp_fun_8 _lh_listcomp_fun_ls_t_8)))
//│ 		                        else
//│ 		                          (_lh_listcomp_fun_8 _lh_listcomp_fun_ls_t_8))
//│ 		                      | `LH_N -> 
//│ 		                        (_lh_listcomp_fun_7 _lh_listcomp_fun_ls_t_7))) in
//│ 		                    (_lh_listcomp_fun_8 (`LH_C((_lh_listcomp_fun_ls_h_7 + _lh_listcomp_fun_ls_h_6), (`LH_N)))))
//│ 		                | `LH_N -> 
//│ 		                  (_lh_listcomp_fun_6 _lh_listcomp_fun_ls_t_6))) in
//│ 		              (_lh_listcomp_fun_7 _lh_nextSize_Wheel_1_1))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_6 (((enumFromThenTo__d1 0) _lh_nextSize_Wheel_0_1) ((_lh_nextSize_arg2_1 - 1) * _lh_nextSize_Wheel_0_1))))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and noFactor__d0 _lh_noFactor_arg1_1 _lh_noFactor_arg2_1 _lh_noFactor_arg3_1 _lh_noFactor_arg4_1 =
//│ 		  (if (_lh_noFactor_arg1_1 <= 2) then
//│ 		    true
//│ 		  else
//│ 		    (((notDivBy__d0 _lh_noFactor_arg2_1) _lh_noFactor_arg3_1) _lh_noFactor_arg4_1))
//│ 		and notDivBy__d0 _lh_notDivBy_arg1_1 _lh_notDivBy_arg2_1 _lh_notDivBy_arg3_1 =
//│ 		  (let rec _lh_matchIdent_5 = (Lazy.force _lh_notDivBy_arg2_1) in
//│ 		    (match _lh_matchIdent_5 with
//│ 		      | `LH_C(_lh_notDivBy_LH_C_0_2, _lh_notDivBy_LH_C_1_2) -> 
//│ 		        (if (_lh_notDivBy_LH_C_0_2 > _lh_notDivBy_arg3_1) then
//│ 		          true
//│ 		        else
//│ 		          (let rec _lh_matchIdent_6 = (Lazy.force _lh_notDivBy_arg1_1) in
//│ 		            (match _lh_matchIdent_6 with
//│ 		              | `LH_C(_lh_notDivBy_LH_C_0_3, _lh_notDivBy_LH_C_1_3) -> 
//│ 		                (((_lh_notDivBy_arg3_1 mod _lh_notDivBy_LH_C_0_3) > 0) && (((notDivBy__d0 _lh_notDivBy_LH_C_1_3) _lh_notDivBy_LH_C_1_2) _lh_notDivBy_arg3_1))
//│ 		              | _ -> 
//│ 		                (failwith "error"))))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and prime__d0 _lh_prime_arg1_1 =
//│ 		  ((atIndex_lz__d0 _lh_prime_arg1_1) (primes__d0 _lh_prime_arg1_1))
//│ 		and primes__d0 _lh_primes_arg1_1 =
//│ 		  (lazy ((((sieve__d0 (wheels__d0 (primes__d0 _lh_primes_arg1_1))) (primes__d0 _lh_primes_arg1_1)) (squares__d0 (primes__d0 _lh_primes_arg1_1))) _lh_primes_arg1_1))
//│ 		and sieve__d0 _lh_sieve_arg1_1 _lh_sieve_arg2_1 _lh_sieve_arg3_1 _lh_sieve_arg4_1 =
//│ 		  (let rec _lh_matchIdent_7 = (Lazy.force _lh_sieve_arg1_1) in
//│ 		    (match _lh_matchIdent_7 with
//│ 		      | `LH_C(_lh_sieve_LH_C_0_1, _lh_sieve_LH_C_1_1) -> 
//│ 		        (match _lh_sieve_LH_C_0_1 with
//│ 		          | `Wheel(_lh_sieve_Wheel_0_1, _lh_sieve_Wheel_1_1) -> 
//│ 		            ((append_lz__d0 (let rec _lh_listcomp_fun_9 = (fun _lh_listcomp_fun_para_9 -> 
//│ 		              (match _lh_listcomp_fun_para_9 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_9, _lh_listcomp_fun_ls_t_9) -> 
//│ 		                  (let rec _lh_listcomp_fun_1_0 = (fun _lh_listcomp_fun_para_1_0 -> 
//│ 		                    (match _lh_listcomp_fun_para_1_0 with
//│ 		                      | `LH_C(_lh_listcomp_fun_ls_h_1_0, _lh_listcomp_fun_ls_t_1_0) -> 
//│ 		                        (let rec _lh_listcomp_fun_1_1 = (fun _lh_listcomp_fun_para_1_1 -> 
//│ 		                          (match _lh_listcomp_fun_para_1_1 with
//│ 		                            | `LH_C(_lh_listcomp_fun_ls_h_1_1, _lh_listcomp_fun_ls_t_1_1) -> 
//│ 		                              (if ((((noFactor__d0 _lh_sieve_Wheel_0_1) _lh_sieve_arg2_1) _lh_sieve_arg3_1) _lh_listcomp_fun_ls_h_1_1) then
//│ 		                                (`LH_C(_lh_listcomp_fun_ls_h_1_1, (_lh_listcomp_fun_1_1 _lh_listcomp_fun_ls_t_1_1)))
//│ 		                              else
//│ 		                                (_lh_listcomp_fun_1_1 _lh_listcomp_fun_ls_t_1_1))
//│ 		                            | `LH_N -> 
//│ 		                              (_lh_listcomp_fun_1_0 _lh_listcomp_fun_ls_t_1_0))) in
//│ 		                          (_lh_listcomp_fun_1_1 (`LH_C((_lh_listcomp_fun_ls_h_1_0 + _lh_listcomp_fun_ls_h_9), (`LH_N)))))
//│ 		                      | `LH_N -> 
//│ 		                        (_lh_listcomp_fun_9 _lh_listcomp_fun_ls_t_9))) in
//│ 		                    (_lh_listcomp_fun_1_0 _lh_sieve_Wheel_1_1))
//│ 		                | `LH_N -> 
//│ 		                  (`LH_N))) in
//│ 		              (_lh_listcomp_fun_9 (`LH_C(_lh_sieve_Wheel_0_1, (((enumFromThenTo__d0 (_lh_sieve_Wheel_0_1 * 2)) (_lh_sieve_Wheel_0_1 * 3)) (((min__d0 (_lh_sieve_arg4_1 * _lh_sieve_arg4_1)) ((head_lz__d0 _lh_sieve_arg2_1) - 1)) * _lh_sieve_Wheel_0_1))))))) ((((sieve__d0 _lh_sieve_LH_C_1_1) (tail_lz__d0 _lh_sieve_arg2_1)) (tail_lz__d1 _lh_sieve_arg3_1)) _lh_sieve_arg4_1))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and squares__d0 _lh_squares_arg1_1 =
//│ 		  ((map_lz__d0 (fun p_1 -> 
//│ 		    (p_1 * p_1))) _lh_squares_arg1_1)
//│ 		and tail_lz__d0 ls_2_0 =
//│ 		  (match (Lazy.force ls_2_0) with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      t_2_3
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and tail_lz__d1 ls_2_2 =
//│ 		  (match (Lazy.force ls_2_2) with
//│ 		    | `LH_C(h_2_3, t_2_6) -> 
//│ 		      t_2_6
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and testWheelSieve1_nofib__d0 _lh_testWheelSieve1_nofib_arg1_1 =
//│ 		  (prime__d0 _lh_testWheelSieve1_nofib_arg1_1)
//│ 		and wheels__d0 _lh_wheels_arg1_1 =
//│ 		  (lazy (`LH_C((`Wheel(1, (`LH_C(1, (`LH_N))))), (((zipWith_lz_lz__d0 nextSize__d0) (wheels__d0 _lh_wheels_arg1_1)) _lh_wheels_arg1_1))))
//│ 		and zipWith_lz_lz__d0 f_1_3 xs_9 ys_9 =
//│ 		  (lazy (match (Lazy.force xs_9) with
//│ 		    | `LH_C(hx_8, tx_8) -> 
//│ 		      (match (Lazy.force ys_9) with
//│ 		        | `LH_C(hy_8, ty_8) -> 
//│ 		          (`LH_C(((f_1_3 hx_8) hy_8), (((zipWith_lz_lz__d0 f_1_3) tx_8) ty_8)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		(testWheelSieve1_nofib__d0 1000)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1041 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls¹⁹) of {LH_C h²⁰ t²² => if (n⁴ == 0) then h²⁰ else atIndex_lz_₀((n⁴ - 1), t²²) | LH_N  => error⁰}: 977
//│ 	case force⁰(ls²⁰) of {LH_C h²¹ t²³ => t²³ | LH_N  => error⁰}: 1072
//│ 	case force⁰(ls²¹) of {LH_C h²² t²⁵ => h²² | LH_N  => error⁰}: 1124
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰}: 1275
//│ 	case force⁰(ls²³) of {LH_C h²⁴ t²⁸ => [LH_C f¹²(h²⁴) map_lz_₀(f¹², t²⁸)] | LH_N  => [LH_N]}: 1298
//│ 	case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 1439
//│ [LH_N]: 1052 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 1182
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 1347
//│ [LH_C 1 [LH_N]]: 1053 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 1182
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 1347
//│ [Wheel 1 [LH_C 1 [LH_N]]]: 1054 --->
//│ 	case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 1211
//│ 	case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve_₀(_lh_sieve_LH_C_1¹, tail_lz_₀(_lh_sieve_arg2¹), tail_lz_₁(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰}: 1410
//│ [LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_₀(nextSize_₀, wheels_₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 1064 --->
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve_₀(_lh_sieve_LH_C_1¹, tail_lz_₀(_lh_sieve_arg2¹), tail_lz_₁(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1412
//│ 	case force⁰(xs⁹) of {LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1441
//│ [LH_C a⁵ enumFromThenTo_₀(t²⁴, ((2 * t²⁴) - a⁵), b²)]: 1103 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 1354
//│ [LH_N]: 1104 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 1354
//│ [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1159 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 1182
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 1347
//│ [LH_N]: 1175 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 1167
//│ [LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]: 1176 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 1167
//│ [LH_N]: 1188 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 1182
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 1347
//│ [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))]: 1209 --->
//│ 	case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 1211
//│ 	case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve_₀(_lh_sieve_LH_C_1¹, tail_lz_₀(_lh_sieve_arg2¹), tail_lz_₁(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰}: 1410
//│ [LH_C a⁶ enumFromThenTo_₁(t²⁷, ((2 * t²⁷) - a⁶), b³)]: 1235 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 1189
//│ [LH_N]: 1236 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 1189
//│ [LH_C f¹²(h²⁴) map_lz_₀(f¹², t²⁸)]: 1296 --->
//│ 	case force⁰(ls²²) of {LH_C h²³ t²⁶ => t²⁶ | LH_N  => error⁰}: 1131
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁶ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 1279
//│ [LH_N]: 1297 --->
//│ 	case force⁰(ls²²) of {LH_C h²³ t²⁶ => t²⁶ | LH_N  => error⁰}: 1131
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁶ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 1279
//│ [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 1324 --->
//│ 	case _lh_matchIdent⁴ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1045
//│ [LH_N]: 1340 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 1332
//│ [LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]: 1341 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 1332
//│ [LH_N]: 1353 --->
//│ 	case _lh_matchIdent⁴ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1045
//│ [LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]: 1391 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 1354
//│ [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)]: 1437 --->
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve_₀(_lh_sieve_LH_C_1¹, tail_lz_₀(_lh_sieve_arg2¹), tail_lz_₁(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1412
//│ 	case force⁰(xs⁹) of {LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1441
//│ [LH_N]: 1438 --->
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve_₀(_lh_sieve_LH_C_1¹, tail_lz_₀(_lh_sieve_arg2¹), tail_lz_₁(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1412
//│ 	case force⁰(xs⁹) of {LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1441
//│ [LH_N]: 1440 --->
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve_₀(_lh_sieve_LH_C_1¹, tail_lz_₀(_lh_sieve_arg2¹), tail_lz_₁(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1412
//│ 	case force⁰(xs⁹) of {LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1441
//│ ------------------
//│ case force⁰(ls¹⁹) of {LH_C h²⁰ t²² => if (n⁴ == 0) then h²⁰ else atIndex_lz_₀((n⁴ - 1), t²²) | LH_N  => error⁰}: 977 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1041
//│ case _lh_matchIdent⁴ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1045 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 1324
//│ 	[LH_N]: 1353
//│ case force⁰(ls²⁰) of {LH_C h²¹ t²³ => t²³ | LH_N  => error⁰}: 1072 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1041
//│ case force⁰(ls²¹) of {LH_C h²² t²⁵ => h²² | LH_N  => error⁰}: 1124 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1041
//│ case force⁰(ls²²) of {LH_C h²³ t²⁶ => t²⁶ | LH_N  => error⁰}: 1131 --->
//│ 	[LH_C f¹²(h²⁴) map_lz_₀(f¹², t²⁸)]: 1296
//│ 	[LH_N]: 1297
//│ case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 1167 --->
//│ 	[LH_N]: 1175
//│ 	[LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]: 1176
//│ case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 1182 --->
//│ 	[LH_N]: 1052
//│ 	[LH_C 1 [LH_N]]: 1053
//│ 	[LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1159
//│ 	[LH_N]: 1188
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 1189 --->
//│ 	[LH_C a⁶ enumFromThenTo_₁(t²⁷, ((2 * t²⁷) - a⁶), b³)]: 1235
//│ 	[LH_N]: 1236
//│ case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 1211 --->
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 1054
//│ 	[Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))]: 1209
//│ case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰}: 1275 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1041
//│ case _lh_matchIdent⁵ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁶ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 1279 --->
//│ 	[LH_C f¹²(h²⁴) map_lz_₀(f¹², t²⁸)]: 1296
//│ 	[LH_N]: 1297
//│ case force⁰(ls²³) of {LH_C h²⁴ t²⁸ => [LH_C f¹²(h²⁴) map_lz_₀(f¹², t²⁸)] | LH_N  => [LH_N]}: 1298 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1041
//│ case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 1332 --->
//│ 	[LH_N]: 1340
//│ 	[LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]: 1341
//│ case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 1347 --->
//│ 	[LH_N]: 1052
//│ 	[LH_C 1 [LH_N]]: 1053
//│ 	[LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1159
//│ 	[LH_N]: 1188
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 1354 --->
//│ 	[LH_C a⁵ enumFromThenTo_₀(t²⁴, ((2 * t²⁴) - a⁵), b²)]: 1103
//│ 	[LH_N]: 1104
//│ 	[LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]: 1391
//│ case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve_₀(_lh_sieve_LH_C_1¹, tail_lz_₀(_lh_sieve_arg2¹), tail_lz_₁(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰}: 1410 --->
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 1054
//│ 	[Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))]: 1209
//│ case _lh_matchIdent⁷ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve_₀(_lh_sieve_LH_C_1¹, tail_lz_₀(_lh_sieve_arg2¹), tail_lz_₁(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1412 --->
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_₀(nextSize_₀, wheels_₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 1064
//│ 	[LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)]: 1437
//│ 	[LH_N]: 1438
//│ 	[LH_N]: 1440
//│ case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)] | LH_N  => [LH_N]}: 1439 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1041
//│ case force⁰(xs⁹) of {LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1441 --->
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_₀(nextSize_₀, wheels_₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 1064
//│ 	[LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹³, tx⁸, ty⁸)]: 1437
//│ 	[LH_N]: 1438
//│ 	[LH_N]: 1440
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C a⁵ enumFromThenTo_₀(t²⁴, ((2 * t²⁴) - a⁵), b²)]: 1103 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 1354
//│ [LH_N]: 1104 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 1354
//│ [LH_N]: 1175 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 1167
//│ [LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]: 1176 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 1167
//│ [LH_C a⁶ enumFromThenTo_₁(t²⁷, ((2 * t²⁷) - a⁶), b³)]: 1235 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 1189
//│ [LH_N]: 1236 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 1189
//│ [LH_N]: 1340 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 1332
//│ [LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]: 1341 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 1332
//│ [LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]: 1391 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 1354
//│ ------------------
//│ case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 1167 --->
//│ 	[LH_N]: 1175
//│ 	[LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]: 1176
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 1189 --->
//│ 	[LH_C a⁶ enumFromThenTo_₁(t²⁷, ((2 * t²⁷) - a⁶), b³)]: 1235
//│ 	[LH_N]: 1236
//│ case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 1332 --->
//│ 	[LH_N]: 1340
//│ 	[LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]: 1341
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor_₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 1354 --->
//│ 	[LH_C a⁵ enumFromThenTo_₀(t²⁴, ((2 * t²⁴) - a⁵), b²)]: 1103
//│ 	[LH_N]: 1104
//│ 	[LH_C _lh_sieve_Wheel_0¹ enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]: 1391
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testWheelSieve1_nofib_₀(primId⁰(1000))
//│ def append_lz_₀(_lh_append_lz_arg1², _lh_append_lz_arg2²) = 
//│ 	let _lh_matchIdent⁹ = _lh_append_lz_arg1²
//│ 	in case _lh_matchIdent⁹ of {
//│ 		LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2²)])
//│ 		| LH_N  => _lh_append_lz_arg2²
//│ 		| _  => error⁰}
//│ def atIndex_lz_₀(n⁵, ls²⁸) = if (n⁵ < 0) then error⁰ else case force⁰(ls²⁸) of {
//│ 	LH_C h²⁰ t²² => if (n⁵ == 0) then h²⁰ else atIndex_lz_₀((n⁵ - 1), t²²)
//│ 	| LH_N  => error⁰}
//│ def enumFromThenTo_₀(a⁷, t²⁹, b⁴) = if (a⁷ <= b⁴) then 
//│ 	let _lh_listcomp_fun_ls_t¹² = enumFromThenTo_₀(t²⁹, ((2 * t²⁹) - a⁷), b⁴)
//│ 	in let _lh_listcomp_fun_ls_h¹² = a⁷
//│ 	in (fun _lh_listcomp_fun¹² -> (fun _lh_sieve_Wheel_0² -> (fun _lh_sieve_Wheel_1² -> (fun _lh_sieve_arg2² -> (fun _lh_sieve_arg3² -> 
//│ 		let _lh_listcomp_fun¹³ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {
//│ 			LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => 
//│ 				let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun¹⁴, _lh_sieve_Wheel_0², _lh_sieve_arg2², _lh_sieve_arg3², _lh_listcomp_fun_ls_t¹⁰, _lh_listcomp_fun¹³))
//│ 				in _lh_listcomp_fun¹⁴(
//│ 					let _lh_listcomp_fun_ls_t¹³ = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁵ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁵)))))))
//│ 					in let _lh_listcomp_fun_ls_h¹³ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h¹²)
//│ 					in (fun _lh_listcomp_fun¹⁵ -> (fun _lh_sieve_Wheel_0³ -> (fun _lh_sieve_arg2³ -> (fun _lh_sieve_arg3³ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun¹⁶ -> if noFactor_₀(_lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_h¹³) then [LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹³)] else _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹³))))))))
//│ 			| LH_N  => _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)})
//│ 		in _lh_listcomp_fun¹³(_lh_sieve_Wheel_1²)))))) else (fun _lh_listcomp_fun¹⁹ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_Wheel_1³ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> [LH_N])))))
//│ def enumFromThenTo_₁(a⁸, t³⁰, b⁵) = if (a⁸ <= b⁵) then 
//│ 	let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo_₁(t³⁰, ((2 * t³⁰) - a⁸), b⁵)
//│ 	in let _lh_listcomp_fun_ls_h¹⁶ = a⁸
//│ 	in (fun _lh_listcomp_fun²⁸ -> (fun _lh_nextSize_Wheel_1² -> (fun _lh_nextSize_arg2² -> 
//│ 		let _lh_listcomp_fun²⁹ = (fun _lh_listcomp_fun_para¹⁷ -> case _lh_listcomp_fun_para¹⁷ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => 
//│ 				let _lh_listcomp_fun³⁰ = (fun _lh_listcomp_fun_para¹⁸ -> _lh_listcomp_fun_para¹⁸(_lh_listcomp_fun³⁰, _lh_nextSize_arg2², _lh_listcomp_fun_ls_t⁷, _lh_listcomp_fun²⁹))
//│ 				in _lh_listcomp_fun³⁰(
//│ 					let _lh_listcomp_fun_ls_t²¹ = (fun _lh_listcomp_fun³³ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁴ -> _lh_listcomp_fun³⁴(_lh_listcomp_fun_ls_t²³)))))
//│ 					in let _lh_listcomp_fun_ls_h¹⁷ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h¹⁶)
//│ 					in (fun _lh_listcomp_fun³¹ -> (fun _lh_nextSize_arg2³ -> (fun _lh_listcomp_fun_ls_t²² -> (fun _lh_listcomp_fun³² -> if ((_lh_listcomp_fun_ls_h¹⁷ % _lh_nextSize_arg2³) > 0) then [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun³¹(_lh_listcomp_fun_ls_t²¹)] else _lh_listcomp_fun³¹(_lh_listcomp_fun_ls_t²¹))))))
//│ 			| LH_N  => _lh_listcomp_fun²⁸(_lh_listcomp_fun_ls_t²⁰)})
//│ 		in _lh_listcomp_fun²⁹(_lh_nextSize_Wheel_1²)))) else (fun _lh_listcomp_fun³⁵ -> (fun _lh_nextSize_Wheel_1³ -> (fun _lh_nextSize_arg2⁵ -> [LH_N])))
//│ def head_lz_₀(ls²⁷) = case force⁰(ls²⁷) of {
//│ 	LH_C h²² t²⁵ => h²²
//│ 	| LH_N  => error⁰}
//│ def map_lz_₀(f¹⁵, ls²⁶) = lazy⁰(case force⁰(ls²⁶) of {
//│ 	LH_C h²⁴ t²⁸ => [LH_C f¹⁵(h²⁴) map_lz_₀(f¹⁵, t²⁸)]
//│ 	| LH_N  => [LH_N]})
//│ def min_₀(_lh_min_arg1², _lh_min_arg2²) = if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ def nextSize_₀(_lh_nextSize_arg1², _lh_nextSize_arg2⁶) = case _lh_nextSize_arg1² of {
//│ 	Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2⁶) 
//│ 		let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹⁹ -> _lh_listcomp_fun_para¹⁹(_lh_listcomp_fun³⁶, _lh_nextSize_Wheel_1¹, _lh_nextSize_arg2⁶))
//│ 		in _lh_listcomp_fun³⁶(enumFromThenTo_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2⁶ - 1) * _lh_nextSize_Wheel_0¹)))]
//│ 	| _  => error⁰}
//│ def noFactor_₀(_lh_noFactor_arg1², _lh_noFactor_arg2², _lh_noFactor_arg3², _lh_noFactor_arg4²) = if (_lh_noFactor_arg1² <= 2) then [True] else notDivBy_₀(_lh_noFactor_arg2², _lh_noFactor_arg3², _lh_noFactor_arg4²)
//│ def notDivBy_₀(_lh_notDivBy_arg1², _lh_notDivBy_arg2², _lh_notDivBy_arg3²) = 
//│ 	let _lh_matchIdent¹⁰ = force⁰(_lh_notDivBy_arg2²)
//│ 	in case _lh_matchIdent¹⁰ of {
//│ 		LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3²) then [True] else 
//│ 			let _lh_matchIdent¹¹ = force⁰(_lh_notDivBy_arg1²)
//│ 			in case _lh_matchIdent¹¹ of {
//│ 				LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3² % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3²))
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def prime_₀(_lh_prime_arg1²) = atIndex_lz_₀(_lh_prime_arg1², primes_₀(_lh_prime_arg1²))
//│ def primes_₀(_lh_primes_arg1²) = lazy⁰(sieve_₀(wheels_₀(primes_₀(_lh_primes_arg1²)), primes_₀(_lh_primes_arg1²), squares_₀(primes_₀(_lh_primes_arg1²)), _lh_primes_arg1²))
//│ def sieve_₀(_lh_sieve_arg1², _lh_sieve_arg2⁶, _lh_sieve_arg3⁶, _lh_sieve_arg4²) = 
//│ 	let _lh_matchIdent⁸ = force⁰(_lh_sieve_arg1²)
//│ 	in case _lh_matchIdent⁸ of {
//│ 		LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {
//│ 			Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz_₀(
//│ 				let _lh_listcomp_fun²⁰ = (fun _lh_listcomp_fun_para¹⁴ -> _lh_listcomp_fun_para¹⁴(_lh_listcomp_fun²⁰, _lh_sieve_Wheel_0¹, _lh_sieve_Wheel_1¹, _lh_sieve_arg2⁶, _lh_sieve_arg3⁶))
//│ 				in _lh_listcomp_fun²⁰(
//│ 					let _lh_listcomp_fun_ls_t¹⁶ = enumFromThenTo_₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min_₀((_lh_sieve_arg4² * _lh_sieve_arg4²), (head_lz_₀(_lh_sieve_arg2⁶) - 1)) * _lh_sieve_Wheel_0¹))
//│ 					in let _lh_listcomp_fun_ls_h¹⁴ = _lh_sieve_Wheel_0¹
//│ 					in (fun _lh_listcomp_fun²¹ -> (fun _lh_sieve_Wheel_0⁶ -> (fun _lh_sieve_Wheel_1⁴ -> (fun _lh_sieve_arg2⁷ -> (fun _lh_sieve_arg3⁷ -> 
//│ 						let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => 
//│ 								let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹⁶ -> _lh_listcomp_fun_para¹⁶(_lh_listcomp_fun²³, _lh_sieve_Wheel_0⁶, _lh_sieve_arg2⁷, _lh_sieve_arg3⁷, _lh_listcomp_fun_ls_t¹⁰, _lh_listcomp_fun²²))
//│ 								in _lh_listcomp_fun²³(
//│ 									let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁸ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> _lh_listcomp_fun²⁷(_lh_listcomp_fun_ls_t¹⁹)))))))
//│ 									in let _lh_listcomp_fun_ls_h¹⁵ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h¹⁴)
//│ 									in (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁷ -> (fun _lh_sieve_arg2⁸ -> (fun _lh_sieve_arg3⁸ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> if noFactor_₀(_lh_sieve_Wheel_0⁷, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸, _lh_listcomp_fun_ls_h¹⁵) then [LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun²⁴(_lh_listcomp_fun_ls_t¹⁷)] else _lh_listcomp_fun²⁴(_lh_listcomp_fun_ls_t¹⁷))))))))
//│ 							| LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁶)})
//│ 						in _lh_listcomp_fun²²(_lh_sieve_Wheel_1⁴))))))), sieve_₀(_lh_sieve_LH_C_1¹, tail_lz_₀(_lh_sieve_arg2⁶), tail_lz_₁(_lh_sieve_arg3⁶), _lh_sieve_arg4²))
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ def squares_₀(_lh_squares_arg1²) = map_lz_₀((fun p² -> (p² * p²)), _lh_squares_arg1²)
//│ def tail_lz_₀(ls²⁴) = case force⁰(ls²⁴) of {
//│ 	LH_C h²¹ t²³ => t²³
//│ 	| LH_N  => error⁰}
//│ def tail_lz_₁(ls²⁵) = case force⁰(ls²⁵) of {
//│ 	LH_C h²³ t²⁶ => t²⁶
//│ 	| LH_N  => error⁰}
//│ def testWheelSieve1_nofib_₀(_lh_testWheelSieve1_nofib_arg1²) = prime_₀(_lh_testWheelSieve1_nofib_arg1²)
//│ def wheels_₀(_lh_wheels_arg1²) = lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_₀(nextSize_₀, wheels_₀(_lh_wheels_arg1²), _lh_wheels_arg1²)])
//│ def zipWith_lz_lz_₀(f¹⁴, xs¹⁰, ys¹⁰) = lazy⁰(case force⁰(xs¹⁰) of {
//│ 	LH_C hx⁸ tx⁸ => case force⁰(ys¹⁰) of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C f¹⁴(hx⁸, hy⁸) zipWith_lz_lz_₀(f¹⁴, tx⁸, ty⁸)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
