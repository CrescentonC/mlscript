:NewParser
:ParseOnly

// prime :: Int -> Int
// prime n = primes !! n
//   where
//     primes = sieve (wheels primes) primes (squares primes) n

// sieve (Wheel s ns:ws) ps qs input =
//   -- It's always the case that input*input > head ps,
//   -- but GHC doesn't know that. We do this so that stuff
//   -- isn't floated to top-level into a CAF.
//   [n' | o <- s:[s*2,s*3..(min (input*input) (head ps-1))*s],
//         n <- ns,
//         n'<- [n+o], noFactor n']
//   ++
//   sieve ws (tail ps) (tail qs) input
//   where
//   noFactor = if s<=2 then const True else notDivBy ps qs

// notDivBy (p:ps) (q:qs) n =
//   q > n || n `mod` p > 0 && notDivBy ps qs n

// squares :: [Int] -> [Int]
// squares ps = [p*p | p<-ps]

// wheels :: [Int] -> [Wheel]
// wheels ps = ws
//   where
//     ws = Wheel 1 [1] : zipWith nextSize ws ps

// nextSize (Wheel s ns) p =
//   Wheel (s*p) ns'
//   where
//   ns' = [n' | o <- [0,s..(p-1)*s],
//               n <- ns,
//               n' <- [n+o], n'`mod`p > 0]

// main = forM_ [1..100] $ const $ do
// 	[arg] <- getArgs
// 	print (prime (read arg))

// squares ps = map (\p -> p * p) ps
// min a b = if a > b then b else a
// noFactor s ps qs n = if (s<=2) then True else notDivBy ps qs n
// notDivBy (p:ps) (q:qs) n = (q > n) || (((n `mod` p) > 0) && (notDivBy ps qs n))
// nextSize (Wheel s ns) p = Wheel (s*p) [n' | o <- [0,s..((p-1)*s)], n <- ns, n' <- [n + o], (n' `mod` p) > 0]
// wheels ps = (Wheel 1 [1]):(zipWith nextSize (wheels ps) ps)
// sieve ((Wheel s ns):ws) ps qs input = [n' | o <- (s:[s*2,s*3..(min (input*input) ((head ps)-1))*s]), n <- ns, n'<- [n+o], noFactor s ps qs n'] ++ (sieve ws (tail ps) (tail qs) input)
// primes n = sieve (wheels (primes n)) (primes n) (squares (primes n)) n
// prime n = atIndex n (primes n)
// testWheelSieve1_nofib n = prime n
// testWheelSieve1_nofib $ primId 1000

:lhInHaskell
:lhGenOCaml
append_lz xs ys = case xs of {
  (x:xs) -> lazy (x:(append_lz xs ys));
  [] -> ys
}
squares ps = map_lz (\p -> p * p) ps
min a b = if a > b then b else a
noFactor s ps qs n = if (s<=2) then True else notDivBy ps qs n
notDivBy xs ys n = case (force ys) of {
  (q:qs) -> if (q > n)
            then True
            else case (force xs) of {
              (p:ps) -> (((n `mod` p) > 0) && (notDivBy ps qs n))
            }
}
nextSize (Wheel s ns) p = Wheel (s*p) [n' | o <- [0,s..((p-1)*s)], n <- ns, n' <- [n + o], (n' `mod` p) > 0]
wheels ps = lazy ((Wheel 1 [1]):(zipWith_lz_lz nextSize (wheels ps) ps))
sieve wls ps qs input = case (force wls) of {
  ((Wheel s ns):ws) ->
    append_lz [n' | o <- (s:[s*2,s*3..(min (input*input) ((head_lz ps)-1))*s]), n <- ns, n'<- [n+o], noFactor s ps qs n'] (sieve ws (tail_lz ps) (tail_lz qs) input)
}
primes n = lazy (sieve (wheels (primes n)) (primes n) (squares (primes n)) n)
prime n = atIndex_lz n (primes n)
testWheelSieve1_nofib n = prime n
testWheelSieve1_nofib $ primId 1000
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testWheelSieve1_nofib₀^1446(primId⁰(1000))
//│ def append_lz₀(_lh_append_lz_arg1¹, _lh_append_lz_arg2¹) = 
//│ 	let _lh_matchIdent⁴ = _lh_append_lz_arg1¹
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀^1036(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)])
//│ 		| LH_N  => _lh_append_lz_arg2¹
//│ 		| _  => error⁰}
//│ def atIndex_lz₀(n⁴, ls¹⁹) = if (n⁴ < 0) then error⁰ else case force⁰(ls¹⁹) of {
//│ 	LH_C h²⁰ t²² => if (n⁴ == 0) then h²⁰ else atIndex_lz₀^966((n⁴ - 1), t²²)
//│ 	| LH_N  => error⁰}
//│ def enumFromThenTo₀(a⁵, t²⁴, b²) = if (a⁵ <= b²) then [LH_C a⁵ enumFromThenTo₀^1088(t²⁴, ((2 * t²⁴) - a⁵), b²)] else [LH_N]
//│ def enumFromThenTo₁(a⁶, t²⁷, b³) = if (a⁶ <= b³) then [LH_C a⁶ enumFromThenTo₁^1220(t²⁷, ((2 * t²⁷) - a⁶), b³)] else [LH_N]
//│ def head_lz₀(ls²¹) = case force⁰(ls²¹) of {
//│ 	LH_C h²² t²⁵ => h²²
//│ 	| LH_N  => error⁰}
//│ def map_lz₀(f¹², ls²³) = lazy⁰(case force⁰(ls²³) of {
//│ 	LH_C h²⁴ t²⁸ => [LH_C f¹²(h²⁴) map_lz₀^1291(f¹², t²⁸)]
//│ 	| LH_N  => [LH_N]})
//│ def min₀(_lh_min_arg1¹, _lh_min_arg2¹) = if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ def nextSize₀(_lh_nextSize_arg1¹, _lh_nextSize_arg2¹) = case _lh_nextSize_arg1¹ of {
//│ 	Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) 
//│ 		let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => 
//│ 				let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 					LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => 
//│ 						let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 							LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)
//│ 							| LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ 						in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]])
//│ 					| LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ 				in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁶(enumFromThenTo₁^1192(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))]
//│ 	| _  => error⁰}
//│ def noFactor₀(_lh_noFactor_arg1¹, _lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹) = if (_lh_noFactor_arg1¹ <= 2) then [True] else notDivBy₀^1020(_lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹)
//│ def notDivBy₀(_lh_notDivBy_arg1¹, _lh_notDivBy_arg2¹, _lh_notDivBy_arg3¹) = 
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_notDivBy_arg2¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else 
//│ 			let _lh_matchIdent⁶ = force⁰(_lh_notDivBy_arg1¹)
//│ 			in case _lh_matchIdent⁶ of {
//│ 				LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀^1266(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹))
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def primes₀(_lh_primes_arg1¹) = lazy⁰(sieve₀^982(wheels₀^983(primes₀^984(_lh_primes_arg1¹)), primes₀^989(_lh_primes_arg1¹), squares₀^993(primes₀^994(_lh_primes_arg1¹)), _lh_primes_arg1¹))
//│ def prime₀(_lh_prime_arg1¹) = atIndex_lz₀^1074(_lh_prime_arg1¹, primes₀^1077(_lh_prime_arg1¹))
//│ def sieve₀(_lh_sieve_arg1¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_sieve_arg4¹) = 
//│ 	let _lh_matchIdent⁷ = force⁰(_lh_sieve_arg1¹)
//│ 	in case _lh_matchIdent⁷ of {
//│ 		LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {
//│ 			Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀^1307(
//│ 				let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 					LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => 
//│ 						let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => 
//│ 								let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 									LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀^1311(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)
//│ 									| LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ 								in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]])
//│ 							| LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ 						in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹)
//│ 					| LH_N  => [LH_N]})
//│ 				in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀^1358((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀^1372((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀^1380(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀^1395(_lh_sieve_LH_C_1¹, tail_lz₀^1398(_lh_sieve_arg2¹), tail_lz₁^1402(_lh_sieve_arg3¹), _lh_sieve_arg4¹))
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ def squares₀(_lh_squares_arg1¹) = map_lz₀^1003((fun p¹ -> (p¹ * p¹)), _lh_squares_arg1¹)
//│ def tail_lz₀(ls²⁰) = case force⁰(ls²⁰) of {
//│ 	LH_C h²¹ t²³ => t²³
//│ 	| LH_N  => error⁰}
//│ def tail_lz₁(ls²²) = case force⁰(ls²²) of {
//│ 	LH_C h²³ t²⁶ => t²⁶
//│ 	| LH_N  => error⁰}
//│ def testWheelSieve1_nofib₀(_lh_testWheelSieve1_nofib_arg1¹) = prime₀^1133(_lh_testWheelSieve1_nofib_arg1¹)
//│ def wheels₀(_lh_wheels_arg1¹) = lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀^1055(nextSize₀^1056, wheels₀^1058(_lh_wheels_arg1¹), _lh_wheels_arg1¹)])
//│ def zipWith_lz_lz₀(f¹³, xs⁹, ys⁹) = lazy⁰(case force⁰(xs⁹) of {
//│ 	LH_C hx⁸ tx⁸ => case force⁰(ys⁹) of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C f¹³(hx⁸, hy⁸) zipWith_lz_lz₀^1430(f¹³, tx⁸, ty⁸)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec append_lz_d0 _lh_append_lz_arg1_1 _lh_append_lz_arg2_1 =
//│ 		  (let rec _lh_matchIdent_4 = _lh_append_lz_arg1_1 in
//│ 		    (match _lh_matchIdent_4 with
//│ 		      | `LH_C(_lh_append_lz_LH_C_0_1, _lh_append_lz_LH_C_1_1) -> 
//│ 		        (lazy (`LH_C(_lh_append_lz_LH_C_0_1, ((append_lz_d0 _lh_append_lz_LH_C_1_1) _lh_append_lz_arg2_1))))
//│ 		      | `LH_N -> 
//│ 		        _lh_append_lz_arg2_1
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and atIndex_lz_d0 n_4 ls_1_9 =
//│ 		  (if (n_4 < 0) then
//│ 		    (failwith "error")
//│ 		  else
//│ 		    (match (Lazy.force ls_1_9) with
//│ 		      | `LH_C(h_2_0, t_2_2) -> 
//│ 		        (if (n_4 = 0) then
//│ 		          h_2_0
//│ 		        else
//│ 		          ((atIndex_lz_d0 (n_4 - 1)) t_2_2))
//│ 		      | `LH_N -> 
//│ 		        (failwith "error")))
//│ 		and enumFromThenTo_d0 a_5 t_2_4 b_2 =
//│ 		  (if (a_5 <= b_2) then
//│ 		    (`LH_C(a_5, (((enumFromThenTo_d0 t_2_4) ((2 * t_2_4) - a_5)) b_2)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFromThenTo_d1 a_6 t_2_7 b_3 =
//│ 		  (if (a_6 <= b_3) then
//│ 		    (`LH_C(a_6, (((enumFromThenTo_d1 t_2_7) ((2 * t_2_7) - a_6)) b_3)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and head_lz_d0 ls_2_1 =
//│ 		  (match (Lazy.force ls_2_1) with
//│ 		    | `LH_C(h_2_2, t_2_5) -> 
//│ 		      h_2_2
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and map_lz_d0 f_1_2 ls_2_3 =
//│ 		  (lazy (match (Lazy.force ls_2_3) with
//│ 		    | `LH_C(h_2_4, t_2_8) -> 
//│ 		      (`LH_C((f_1_2 h_2_4), ((map_lz_d0 f_1_2) t_2_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and min_d0 _lh_min_arg1_1 _lh_min_arg2_1 =
//│ 		  (if (_lh_min_arg1_1 > _lh_min_arg2_1) then
//│ 		    _lh_min_arg2_1
//│ 		  else
//│ 		    _lh_min_arg1_1)
//│ 		and nextSize_d0 _lh_nextSize_arg1_1 _lh_nextSize_arg2_1 =
//│ 		  (match _lh_nextSize_arg1_1 with
//│ 		    | `Wheel(_lh_nextSize_Wheel_0_1, _lh_nextSize_Wheel_1_1) -> 
//│ 		      (`Wheel((_lh_nextSize_Wheel_0_1 * _lh_nextSize_arg2_1), (let rec _lh_listcomp_fun_6 = (fun _lh_listcomp_fun_para_6 -> 
//│ 		        (match _lh_listcomp_fun_para_6 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_6, _lh_listcomp_fun_ls_t_6) -> 
//│ 		            (let rec _lh_listcomp_fun_7 = (fun _lh_listcomp_fun_para_7 -> 
//│ 		              (match _lh_listcomp_fun_para_7 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_7, _lh_listcomp_fun_ls_t_7) -> 
//│ 		                  (let rec _lh_listcomp_fun_8 = (fun _lh_listcomp_fun_para_8 -> 
//│ 		                    (match _lh_listcomp_fun_para_8 with
//│ 		                      | `LH_C(_lh_listcomp_fun_ls_h_8, _lh_listcomp_fun_ls_t_8) -> 
//│ 		                        (if ((_lh_listcomp_fun_ls_h_8 mod _lh_nextSize_arg2_1) > 0) then
//│ 		                          (`LH_C(_lh_listcomp_fun_ls_h_8, (_lh_listcomp_fun_8 _lh_listcomp_fun_ls_t_8)))
//│ 		                        else
//│ 		                          (_lh_listcomp_fun_8 _lh_listcomp_fun_ls_t_8))
//│ 		                      | `LH_N -> 
//│ 		                        (_lh_listcomp_fun_7 _lh_listcomp_fun_ls_t_7))) in
//│ 		                    (_lh_listcomp_fun_8 (`LH_C((_lh_listcomp_fun_ls_h_7 + _lh_listcomp_fun_ls_h_6), (`LH_N)))))
//│ 		                | `LH_N -> 
//│ 		                  (_lh_listcomp_fun_6 _lh_listcomp_fun_ls_t_6))) in
//│ 		              (_lh_listcomp_fun_7 _lh_nextSize_Wheel_1_1))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_6 (((enumFromThenTo_d1 0) _lh_nextSize_Wheel_0_1) ((_lh_nextSize_arg2_1 - 1) * _lh_nextSize_Wheel_0_1))))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and noFactor_d0 _lh_noFactor_arg1_1 _lh_noFactor_arg2_1 _lh_noFactor_arg3_1 _lh_noFactor_arg4_1 =
//│ 		  (if (_lh_noFactor_arg1_1 <= 2) then
//│ 		    true
//│ 		  else
//│ 		    (((notDivBy_d0 _lh_noFactor_arg2_1) _lh_noFactor_arg3_1) _lh_noFactor_arg4_1))
//│ 		and notDivBy_d0 _lh_notDivBy_arg1_1 _lh_notDivBy_arg2_1 _lh_notDivBy_arg3_1 =
//│ 		  (let rec _lh_matchIdent_5 = (Lazy.force _lh_notDivBy_arg2_1) in
//│ 		    (match _lh_matchIdent_5 with
//│ 		      | `LH_C(_lh_notDivBy_LH_C_0_2, _lh_notDivBy_LH_C_1_2) -> 
//│ 		        (if (_lh_notDivBy_LH_C_0_2 > _lh_notDivBy_arg3_1) then
//│ 		          true
//│ 		        else
//│ 		          (let rec _lh_matchIdent_6 = (Lazy.force _lh_notDivBy_arg1_1) in
//│ 		            (match _lh_matchIdent_6 with
//│ 		              | `LH_C(_lh_notDivBy_LH_C_0_3, _lh_notDivBy_LH_C_1_3) -> 
//│ 		                (((_lh_notDivBy_arg3_1 mod _lh_notDivBy_LH_C_0_3) > 0) && (((notDivBy_d0 _lh_notDivBy_LH_C_1_3) _lh_notDivBy_LH_C_1_2) _lh_notDivBy_arg3_1))
//│ 		              | _ -> 
//│ 		                (failwith "error"))))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and primes_d0 _lh_primes_arg1_1 =
//│ 		  (lazy ((((sieve_d0 (wheels_d0 (primes_d0 _lh_primes_arg1_1))) (primes_d0 _lh_primes_arg1_1)) (squares_d0 (primes_d0 _lh_primes_arg1_1))) _lh_primes_arg1_1))
//│ 		and prime_d0 _lh_prime_arg1_1 =
//│ 		  ((atIndex_lz_d0 _lh_prime_arg1_1) (primes_d0 _lh_prime_arg1_1))
//│ 		and sieve_d0 _lh_sieve_arg1_1 _lh_sieve_arg2_1 _lh_sieve_arg3_1 _lh_sieve_arg4_1 =
//│ 		  (let rec _lh_matchIdent_7 = (Lazy.force _lh_sieve_arg1_1) in
//│ 		    (match _lh_matchIdent_7 with
//│ 		      | `LH_C(_lh_sieve_LH_C_0_1, _lh_sieve_LH_C_1_1) -> 
//│ 		        (match _lh_sieve_LH_C_0_1 with
//│ 		          | `Wheel(_lh_sieve_Wheel_0_1, _lh_sieve_Wheel_1_1) -> 
//│ 		            ((append_lz_d0 (let rec _lh_listcomp_fun_9 = (fun _lh_listcomp_fun_para_9 -> 
//│ 		              (match _lh_listcomp_fun_para_9 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_9, _lh_listcomp_fun_ls_t_9) -> 
//│ 		                  (let rec _lh_listcomp_fun_1_0 = (fun _lh_listcomp_fun_para_1_0 -> 
//│ 		                    (match _lh_listcomp_fun_para_1_0 with
//│ 		                      | `LH_C(_lh_listcomp_fun_ls_h_1_0, _lh_listcomp_fun_ls_t_1_0) -> 
//│ 		                        (let rec _lh_listcomp_fun_1_1 = (fun _lh_listcomp_fun_para_1_1 -> 
//│ 		                          (match _lh_listcomp_fun_para_1_1 with
//│ 		                            | `LH_C(_lh_listcomp_fun_ls_h_1_1, _lh_listcomp_fun_ls_t_1_1) -> 
//│ 		                              (if ((((noFactor_d0 _lh_sieve_Wheel_0_1) _lh_sieve_arg2_1) _lh_sieve_arg3_1) _lh_listcomp_fun_ls_h_1_1) then
//│ 		                                (`LH_C(_lh_listcomp_fun_ls_h_1_1, (_lh_listcomp_fun_1_1 _lh_listcomp_fun_ls_t_1_1)))
//│ 		                              else
//│ 		                                (_lh_listcomp_fun_1_1 _lh_listcomp_fun_ls_t_1_1))
//│ 		                            | `LH_N -> 
//│ 		                              (_lh_listcomp_fun_1_0 _lh_listcomp_fun_ls_t_1_0))) in
//│ 		                          (_lh_listcomp_fun_1_1 (`LH_C((_lh_listcomp_fun_ls_h_1_0 + _lh_listcomp_fun_ls_h_9), (`LH_N)))))
//│ 		                      | `LH_N -> 
//│ 		                        (_lh_listcomp_fun_9 _lh_listcomp_fun_ls_t_9))) in
//│ 		                    (_lh_listcomp_fun_1_0 _lh_sieve_Wheel_1_1))
//│ 		                | `LH_N -> 
//│ 		                  (`LH_N))) in
//│ 		              (_lh_listcomp_fun_9 (`LH_C(_lh_sieve_Wheel_0_1, (((enumFromThenTo_d0 (_lh_sieve_Wheel_0_1 * 2)) (_lh_sieve_Wheel_0_1 * 3)) (((min_d0 (_lh_sieve_arg4_1 * _lh_sieve_arg4_1)) ((head_lz_d0 _lh_sieve_arg2_1) - 1)) * _lh_sieve_Wheel_0_1))))))) ((((sieve_d0 _lh_sieve_LH_C_1_1) (tail_lz_d0 _lh_sieve_arg2_1)) (tail_lz_d1 _lh_sieve_arg3_1)) _lh_sieve_arg4_1))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and squares_d0 _lh_squares_arg1_1 =
//│ 		  ((map_lz_d0 (fun p_1 -> 
//│ 		    (p_1 * p_1))) _lh_squares_arg1_1)
//│ 		and tail_lz_d0 ls_2_0 =
//│ 		  (match (Lazy.force ls_2_0) with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      t_2_3
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and tail_lz_d1 ls_2_2 =
//│ 		  (match (Lazy.force ls_2_2) with
//│ 		    | `LH_C(h_2_3, t_2_6) -> 
//│ 		      t_2_6
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and testWheelSieve1_nofib_d0 _lh_testWheelSieve1_nofib_arg1_1 =
//│ 		  (prime_d0 _lh_testWheelSieve1_nofib_arg1_1)
//│ 		and wheels_d0 _lh_wheels_arg1_1 =
//│ 		  (lazy (`LH_C((`Wheel(1, (`LH_C(1, (`LH_N))))), (((zipWith_lz_lz_d0 nextSize_d0) (wheels_d0 _lh_wheels_arg1_1)) _lh_wheels_arg1_1))))
//│ 		and zipWith_lz_lz_d0 f_1_3 xs_9 ys_9 =
//│ 		  (lazy (match (Lazy.force xs_9) with
//│ 		    | `LH_C(hx_8, tx_8) -> 
//│ 		      (match (Lazy.force ys_9) with
//│ 		        | `LH_C(hy_8, ty_8) -> 
//│ 		          (`LH_C(((f_1_3 hx_8) hy_8), (((zipWith_lz_lz_d0 f_1_3) tx_8) ty_8)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		(testWheelSieve1_nofib_d0 1000)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testWheelSieve1_nofib₀^1446] (hopeless to continue)
//│ 	[testWheelSieve1_nofib₀^1446 · prime₀^1133] (using original def)
//│ 		[testWheelSieve1_nofib₀^1446 · prime₀^1133 · atIndex_lz₀^1074] (using original def)
//│ 			[testWheelSieve1_nofib₀^1446 · prime₀^1133 · atIndex_lz₀^1074 · atIndex_lz₀^966] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · atIndex_lz₀^1074] (using original def)
//│ 		[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077] (using original def)
//│ 			[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · primes₀^984] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077] (using original def)
//│ 			[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · primes₀^989] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077] (using original def)
//│ 			[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · primes₀^994] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077] (using original def)
//│ 			[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · append_lz₀^1307] (using original def)
//│ 					[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · append_lz₀^1307 · append_lz₀^1036] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · append_lz₀^1307] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · enumFromThenTo₀^1358] (using original def)
//│ 					[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · enumFromThenTo₀^1358 · enumFromThenTo₀^1088] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · enumFromThenTo₀^1358] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · head_lz₀^1380] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · min₀^1372] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · noFactor₀^1311] (using original def)
//│ 					[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · noFactor₀^1311 · notDivBy₀^1020] (using original def)
//│ 						[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · noFactor₀^1311 · notDivBy₀^1020 · notDivBy₀^1266] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · noFactor₀^1311 · notDivBy₀^1020] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · sieve₀^1395] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · tail_lz₀^1398] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · sieve₀^982 · tail_lz₁^1402] (using original def)
//│ 			[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · squares₀^993] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · squares₀^993 · map_lz₀^1003] (using original def)
//│ 					[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · squares₀^993 · map_lz₀^1003 · map_lz₀^1291] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · squares₀^993 · map_lz₀^1003] (using original def)
//│ 			[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983 · nextSize₀^1056] (using original def)
//│ 					[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983 · nextSize₀^1056 · enumFromThenTo₁^1192] (using original def)
//│ 						[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983 · nextSize₀^1056 · enumFromThenTo₁^1192 · enumFromThenTo₁^1220] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983 · nextSize₀^1056 · enumFromThenTo₁^1192] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983 · wheels₀^1058] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983] (using original def)
//│ 				[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983 · zipWith_lz_lz₀^1055] (using original def)
//│ 					[testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983 · zipWith_lz_lz₀^1055 · zipWith_lz_lz₀^1430] ---> [testWheelSieve1_nofib₀^1446 · prime₀^1133 · primes₀^1077 · wheels₀^983 · zipWith_lz_lz₀^1055] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testWheelSieve1_nofib₀₀(primId⁰(1000))
//│ def testWheelSieve1_nofib₀₀(_lh_testWheelSieve1_nofib_arg1¹) = 
//│ 	prime₀₀(_lh_testWheelSieve1_nofib_arg1¹)
//│ 	where
//│ 	def prime₀₀(_lh_prime_arg1¹) = 
//│ 		atIndex_lz₀₀(_lh_prime_arg1¹, primes₀₀(_lh_prime_arg1¹))
//│ 		where
//│ 		def atIndex_lz₀₀(n¹, ls⁶) = 
//│ 			if (n¹ < 0) then error⁰ else case force⁰(ls⁶) of {
//│ 				LH_C h⁶ t⁹ => if (n¹ == 0) then h⁶ else atIndex_lz₀₀((n¹ - 1), t⁹)
//│ 				| LH_N  => error⁰}
//│ 		def primes₀₀(_lh_primes_arg1¹) = 
//│ 			lazy⁰(sieve₀₀(wheels₀₀(primes₀₀(_lh_primes_arg1¹)), primes₀₀(_lh_primes_arg1¹), squares₀₀(primes₀₀(_lh_primes_arg1¹)), _lh_primes_arg1¹))
//│ 			where
//│ 			def sieve₀₀(_lh_sieve_arg1¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_sieve_arg4¹) = 
//│ 				let _lh_matchIdent⁵ = force⁰(_lh_sieve_arg1¹)
//│ 				in case _lh_matchIdent⁵ of {
//│ 					LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {
//│ 						Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(
//│ 							let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 								LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => 
//│ 									let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 										LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => 
//│ 											let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 												LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)
//│ 												| LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ 											in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]])
//│ 										| LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ 									in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹)
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2¹), tail_lz₁₀(_lh_sieve_arg3¹), _lh_sieve_arg4¹))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def append_lz₀₀(_lh_append_lz_arg1¹, _lh_append_lz_arg2¹) = 
//│ 					let _lh_matchIdent⁴ = _lh_append_lz_arg1¹
//│ 					in case _lh_matchIdent⁴ of {
//│ 						LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)])
//│ 						| LH_N  => _lh_append_lz_arg2¹
//│ 						| _  => error⁰}
//│ 				def enumFromThenTo₀₀(a³, t¹⁰, b³) = 
//│ 					if (a³ <= b³) then [LH_C a³ enumFromThenTo₀₀(t¹⁰, ((2 * t¹⁰) - a³), b³)] else [LH_N]
//│ 				def head_lz₀₀(ls⁸) = 
//│ 					case force⁰(ls⁸) of {
//│ 						LH_C h⁸ t¹² => h⁸
//│ 						| LH_N  => error⁰}
//│ 				def min₀₀(_lh_min_arg1¹, _lh_min_arg2¹) = 
//│ 					if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ 				def noFactor₀₀(_lh_noFactor_arg1¹, _lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹) = 
//│ 					if (_lh_noFactor_arg1¹ <= 2) then [True] else notDivBy₀₀(_lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹)
//│ 					where
//│ 					def notDivBy₀₀(_lh_notDivBy_arg1¹, _lh_notDivBy_arg2¹, _lh_notDivBy_arg3¹) = 
//│ 						let _lh_matchIdent⁶ = force⁰(_lh_notDivBy_arg2¹)
//│ 						in case _lh_matchIdent⁶ of {
//│ 							LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else 
//│ 								let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1¹)
//│ 								in case _lh_matchIdent⁷ of {
//│ 									LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹))
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 				def tail_lz₀₀(ls⁹) = 
//│ 					case force⁰(ls⁹) of {
//│ 						LH_C h⁹ t¹³ => t¹³
//│ 						| LH_N  => error⁰}
//│ 				def tail_lz₁₀(ls⁷) = 
//│ 					case force⁰(ls⁷) of {
//│ 						LH_C h⁷ t¹¹ => t¹¹
//│ 						| LH_N  => error⁰}
//│ 			def squares₀₀(_lh_squares_arg1¹) = 
//│ 				map_lz₀₀((fun p¹ -> (p¹ * p¹)), _lh_squares_arg1¹)
//│ 				where
//│ 				def map_lz₀₀(f², ls⁵) = 
//│ 					lazy⁰(case force⁰(ls⁵) of {
//│ 						LH_C h⁵ t⁷ => [LH_C f²(h⁵) map_lz₀₀(f², t⁷)]
//│ 						| LH_N  => [LH_N]})
//│ 			def wheels₀₀(_lh_wheels_arg1¹) = 
//│ 				lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀(nextSize₀₀, wheels₀₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)])
//│ 				where
//│ 				def nextSize₀₀(_lh_nextSize_arg1¹, _lh_nextSize_arg2¹) = 
//│ 					case _lh_nextSize_arg1¹ of {
//│ 						Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) 
//│ 							let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 								LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => 
//│ 									let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 										LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => 
//│ 											let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 												LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)
//│ 												| LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ 											in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]])
//│ 										| LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ 									in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹)
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun⁶(enumFromThenTo₁₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))]
//│ 						| _  => error⁰}
//│ 					where
//│ 					def enumFromThenTo₁₀(a², t⁸, b²) = 
//│ 						if (a² <= b²) then [LH_C a² enumFromThenTo₁₀(t⁸, ((2 * t⁸) - a²), b²)] else [LH_N]
//│ 				def zipWith_lz_lz₀₀(f³, xs¹, ys¹) = 
//│ 					lazy⁰(case force⁰(xs¹) of {
//│ 						LH_C hx¹ tx¹ => case force⁰(ys¹) of {
//│ 							LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f²(h⁵) map_lz₀₀(f², t⁷)]: 513 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t¹¹ => t¹¹ | LH_N  => error⁰}: 821
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 984
//│ [LH_N]: 514 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t¹¹ => t¹¹ | LH_N  => error⁰}: 821
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 984
//│ [LH_N]: 533 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 727
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 868
//│ [LH_C 1 [LH_N]]: 534 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 727
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 868
//│ [Wheel 1 [LH_C 1 [LH_N]]]: 535 --->
//│ 	case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo₁₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 756
//│ 	case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2¹), tail_lz₁₀(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰}: 931
//│ [LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀(nextSize₀₀, wheels₀₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 545 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 655
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2¹), tail_lz₁₀(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 933
//│ [LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 557 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁷ => [LH_C f²(h⁵) map_lz₀₀(f², t⁷)] | LH_N  => [LH_N]}: 515
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁹ => if (n¹ == 0) then h⁶ else atIndex_lz₀₀((n¹ - 1), t⁹) | LH_N  => error⁰}: 628
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]}: 653
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t¹² => h⁸ | LH_N  => error⁰}: 944
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰}: 980
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t¹³ => t¹³ | LH_N  => error⁰}: 994
//│ [LH_C a² enumFromThenTo₁₀(t⁸, ((2 * t⁸) - a²), b²)]: 586 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 734
//│ [LH_N]: 587 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 734
//│ [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)]: 651 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 655
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2¹), tail_lz₁₀(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 933
//│ [LH_N]: 652 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 655
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2¹), tail_lz₁₀(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 933
//│ [LH_N]: 654 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 655
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2¹), tail_lz₁₀(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 933
//│ [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 704 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 727
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 868
//│ [LH_N]: 720 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 712
//│ [LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]: 721 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 712
//│ [LH_N]: 733 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 727
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 868
//│ [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo₁₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))]: 754 --->
//│ 	case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo₁₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 756
//│ 	case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2¹), tail_lz₁₀(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰}: 931
//│ [LH_C a³ enumFromThenTo₀₀(t¹⁰, ((2 * t¹⁰) - a³), b³)]: 802 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 875
//│ [LH_N]: 803 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 875
//│ [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 845 --->
//│ 	case _lh_matchIdent⁴ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 561
//│ [LH_N]: 861 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 853
//│ [LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]: 862 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 853
//│ [LH_N]: 874 --->
//│ 	case _lh_matchIdent⁴ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 561
//│ [LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]: 912 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 875
//│ ------------------
//│ case force⁰(ls⁵) of {LH_C h⁵ t⁷ => [LH_C f²(h⁵) map_lz₀₀(f², t⁷)] | LH_N  => [LH_N]}: 515 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 557
//│ case _lh_matchIdent⁴ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 561 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 845
//│ 	[LH_N]: 874
//│ case force⁰(ls⁶) of {LH_C h⁶ t⁹ => if (n¹ == 0) then h⁶ else atIndex_lz₀₀((n¹ - 1), t⁹) | LH_N  => error⁰}: 628 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 557
//│ case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]}: 653 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 557
//│ case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 655 --->
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀(nextSize₀₀, wheels₀₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 545
//│ 	[LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)]: 651
//│ 	[LH_N]: 652
//│ 	[LH_N]: 654
//│ case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 712 --->
//│ 	[LH_N]: 720
//│ 	[LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]: 721
//│ case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 727 --->
//│ 	[LH_N]: 533
//│ 	[LH_C 1 [LH_N]]: 534
//│ 	[LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 704
//│ 	[LH_N]: 733
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 734 --->
//│ 	[LH_C a² enumFromThenTo₁₀(t⁸, ((2 * t⁸) - a²), b²)]: 586
//│ 	[LH_N]: 587
//│ case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo₁₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 756 --->
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 535
//│ 	[Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo₁₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))]: 754
//│ case force⁰(ls⁷) of {LH_C h⁷ t¹¹ => t¹¹ | LH_N  => error⁰}: 821 --->
//│ 	[LH_C f²(h⁵) map_lz₀₀(f², t⁷)]: 513
//│ 	[LH_N]: 514
//│ case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 853 --->
//│ 	[LH_N]: 861
//│ 	[LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]: 862
//│ case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}: 868 --->
//│ 	[LH_N]: 533
//│ 	[LH_C 1 [LH_N]]: 534
//│ 	[LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 704
//│ 	[LH_N]: 733
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 875 --->
//│ 	[LH_C a³ enumFromThenTo₀₀(t¹⁰, ((2 * t¹⁰) - a³), b³)]: 802
//│ 	[LH_N]: 803
//│ 	[LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]: 912
//│ case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2¹), tail_lz₁₀(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰}: 931 --->
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 535
//│ 	[Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹) let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(enumFromThenTo₁₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0¹)))]: 754
//│ case _lh_matchIdent⁵ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹([LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2¹), tail_lz₁₀(_lh_sieve_arg3¹), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 933 --->
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀(nextSize₀₀, wheels₀₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 545
//│ 	[LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀(f³, tx¹, ty¹)]: 651
//│ 	[LH_N]: 652
//│ 	[LH_N]: 654
//│ case force⁰(ls⁸) of {LH_C h⁸ t¹² => h⁸ | LH_N  => error⁰}: 944 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 557
//│ case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰}: 980 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 557
//│ case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 984 --->
//│ 	[LH_C f²(h⁵) map_lz₀₀(f², t⁷)]: 513
//│ 	[LH_N]: 514
//│ case force⁰(ls⁹) of {LH_C h⁹ t¹³ => t¹³ | LH_N  => error⁰}: 994 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 557
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C a² enumFromThenTo₁₀(t⁸, ((2 * t⁸) - a²), b²)]: 586 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 734
//│ [LH_N]: 587 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 734
//│ [LH_N]: 720 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 712
//│ [LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]: 721 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 712
//│ [LH_C a³ enumFromThenTo₀₀(t¹⁰, ((2 * t¹⁰) - a³), b³)]: 802 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 875
//│ [LH_N]: 803 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 875
//│ [LH_N]: 861 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 853
//│ [LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]: 862 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 853
//│ [LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]: 912 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 875
//│ ------------------
//│ case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}: 712 --->
//│ 	[LH_N]: 720
//│ 	[LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]: 721
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2¹) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)})
//│ in _lh_listcomp_fun⁸([LH_C (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶) [LH_N]]) | LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)})
//│ in _lh_listcomp_fun⁷(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 734 --->
//│ 	[LH_C a² enumFromThenTo₁₀(t⁸, ((2 * t⁸) - a²), b²)]: 586
//│ 	[LH_N]: 587
//│ case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 853 --->
//│ 	[LH_N]: 861
//│ 	[LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]: 862
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => if noFactor₀₀(_lh_sieve_Wheel_0¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹) | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹([LH_C (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹) [LH_N]]) | LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹⁰(_lh_sieve_Wheel_1¹) | LH_N  => [LH_N]}: 875 --->
//│ 	[LH_C a³ enumFromThenTo₀₀(t¹⁰, ((2 * t¹⁰) - a³), b³)]: 802
//│ 	[LH_N]: 803
//│ 	[LH_C _lh_sieve_Wheel_0¹ enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0¹))]: 912
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testWheelSieve1_nofib₀₀(primId⁰(1000))
//│ def testWheelSieve1_nofib₀₀(_lh_testWheelSieve1_nofib_arg1²) = 
//│ 	prime₀₀(_lh_testWheelSieve1_nofib_arg1²)
//│ 	where
//│ 	def prime₀₀(_lh_prime_arg1²) = 
//│ 		atIndex_lz₀₀(_lh_prime_arg1², primes₀₀(_lh_prime_arg1²))
//│ 		where
//│ 		def atIndex_lz₀₀(n², ls¹⁴) = 
//│ 			if (n² < 0) then error⁰ else case force⁰(ls¹⁴) of {
//│ 				LH_C h⁶ t⁹ => if (n² == 0) then h⁶ else atIndex_lz₀₀((n² - 1), t⁹)
//│ 				| LH_N  => error⁰}
//│ 		def primes₀₀(_lh_primes_arg1²) = 
//│ 			lazy⁰(sieve₀₀(wheels₀₀(primes₀₀(_lh_primes_arg1²)), primes₀₀(_lh_primes_arg1²), squares₀₀(primes₀₀(_lh_primes_arg1²)), _lh_primes_arg1²))
//│ 			where
//│ 			def sieve₀₀(_lh_sieve_arg1², _lh_sieve_arg2⁶, _lh_sieve_arg3⁶, _lh_sieve_arg4²) = 
//│ 				let _lh_matchIdent¹¹ = force⁰(_lh_sieve_arg1²)
//│ 				in case _lh_matchIdent¹¹ of {
//│ 					LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {
//│ 						Wheel _lh_sieve_Wheel_0¹ _lh_sieve_Wheel_1¹ => append_lz₀₀(
//│ 							let _lh_listcomp_fun²⁹ = (fun _lh_listcomp_fun_para¹⁷ -> _lh_listcomp_fun_para¹⁷(_lh_listcomp_fun²⁹, _lh_sieve_Wheel_0¹, _lh_sieve_Wheel_1¹, _lh_sieve_arg2⁶, _lh_sieve_arg3⁶))
//│ 							in _lh_listcomp_fun²⁹(
//│ 								let _lh_listcomp_fun_ls_h¹⁶ = _lh_sieve_Wheel_0¹
//│ 								in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀((_lh_sieve_Wheel_0¹ * 2), (_lh_sieve_Wheel_0¹ * 3), (min₀₀((_lh_sieve_arg4² * _lh_sieve_arg4²), (head_lz₀₀(_lh_sieve_arg2⁶) - 1)) * _lh_sieve_Wheel_0¹))
//│ 								in (fun _lh_listcomp_fun³⁰ -> (fun _lh_sieve_Wheel_0⁶ -> (fun _lh_sieve_Wheel_1⁴ -> (fun _lh_sieve_arg2⁷ -> (fun _lh_sieve_arg3⁷ -> 
//│ 									let _lh_listcomp_fun³¹ = (fun _lh_listcomp_fun_para¹⁸ -> case _lh_listcomp_fun_para¹⁸ of {
//│ 										LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => 
//│ 											let _lh_listcomp_fun³² = (fun _lh_listcomp_fun_para¹⁹ -> _lh_listcomp_fun_para¹⁹(_lh_listcomp_fun³², _lh_sieve_Wheel_0⁶, _lh_sieve_arg2⁷, _lh_sieve_arg3⁷, _lh_listcomp_fun_ls_t¹⁰, _lh_listcomp_fun³¹))
//│ 											in _lh_listcomp_fun³²(
//│ 												let _lh_listcomp_fun_ls_h¹⁷ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h¹⁶)
//│ 												in let _lh_listcomp_fun_ls_t²¹ = (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁸ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁶ -> _lh_listcomp_fun³⁶(_lh_listcomp_fun_ls_t²³)))))))
//│ 												in (fun _lh_listcomp_fun³³ -> (fun _lh_sieve_Wheel_0⁷ -> (fun _lh_sieve_arg2⁸ -> (fun _lh_sieve_arg3⁸ -> (fun _lh_listcomp_fun_ls_t²² -> (fun _lh_listcomp_fun³⁴ -> if noFactor₀₀(_lh_sieve_Wheel_0⁷, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸, _lh_listcomp_fun_ls_h¹⁷) then [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun³³(_lh_listcomp_fun_ls_t²¹)] else _lh_listcomp_fun³³(_lh_listcomp_fun_ls_t²¹))))))))
//│ 										| LH_N  => _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t²⁰)})
//│ 									in _lh_listcomp_fun³¹(_lh_sieve_Wheel_1⁴))))))), sieve₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀(_lh_sieve_arg2⁶), tail_lz₁₀(_lh_sieve_arg3⁶), _lh_sieve_arg4²))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def append_lz₀₀(_lh_append_lz_arg1², _lh_append_lz_arg2²) = 
//│ 					let _lh_matchIdent⁸ = _lh_append_lz_arg1²
//│ 					in case _lh_matchIdent⁸ of {
//│ 						LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2²)])
//│ 						| LH_N  => _lh_append_lz_arg2²
//│ 						| _  => error⁰}
//│ 				def enumFromThenTo₀₀(a⁴, t¹⁴, b⁴) = 
//│ 					if (a⁴ <= b⁴) then 
//│ 						let _lh_listcomp_fun_ls_h¹² = a⁴
//│ 						in let _lh_listcomp_fun_ls_t¹² = enumFromThenTo₀₀(t¹⁴, ((2 * t¹⁴) - a⁴), b⁴)
//│ 						in (fun _lh_listcomp_fun¹² -> (fun _lh_sieve_Wheel_0² -> (fun _lh_sieve_Wheel_1² -> (fun _lh_sieve_arg2² -> (fun _lh_sieve_arg3² -> 
//│ 							let _lh_listcomp_fun¹³ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => 
//│ 									let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun¹⁴, _lh_sieve_Wheel_0², _lh_sieve_arg2², _lh_sieve_arg3², _lh_listcomp_fun_ls_t¹⁰, _lh_listcomp_fun¹³))
//│ 									in _lh_listcomp_fun¹⁴(
//│ 										let _lh_listcomp_fun_ls_h¹³ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h¹²)
//│ 										in let _lh_listcomp_fun_ls_t¹³ = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁵ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁵)))))))
//│ 										in (fun _lh_listcomp_fun¹⁵ -> (fun _lh_sieve_Wheel_0³ -> (fun _lh_sieve_arg2³ -> (fun _lh_sieve_arg3³ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun¹⁶ -> if noFactor₀₀(_lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_h¹³) then [LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹³)] else _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹³))))))))
//│ 								| LH_N  => _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)})
//│ 							in _lh_listcomp_fun¹³(_lh_sieve_Wheel_1²)))))) else (fun _lh_listcomp_fun¹⁹ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_Wheel_1³ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> [LH_N])))))
//│ 				def head_lz₀₀(ls¹¹) = 
//│ 					case force⁰(ls¹¹) of {
//│ 						LH_C h⁸ t¹² => h⁸
//│ 						| LH_N  => error⁰}
//│ 				def min₀₀(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def noFactor₀₀(_lh_noFactor_arg1², _lh_noFactor_arg2², _lh_noFactor_arg3², _lh_noFactor_arg4²) = 
//│ 					if (_lh_noFactor_arg1² <= 2) then [True] else notDivBy₀₀(_lh_noFactor_arg2², _lh_noFactor_arg3², _lh_noFactor_arg4²)
//│ 					where
//│ 					def notDivBy₀₀(_lh_notDivBy_arg1², _lh_notDivBy_arg2², _lh_notDivBy_arg3²) = 
//│ 						let _lh_matchIdent⁹ = force⁰(_lh_notDivBy_arg2²)
//│ 						in case _lh_matchIdent⁹ of {
//│ 							LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3²) then [True] else 
//│ 								let _lh_matchIdent¹⁰ = force⁰(_lh_notDivBy_arg1²)
//│ 								in case _lh_matchIdent¹⁰ of {
//│ 									LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3² % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3²))
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 				def tail_lz₀₀(ls¹²) = 
//│ 					case force⁰(ls¹²) of {
//│ 						LH_C h⁹ t¹³ => t¹³
//│ 						| LH_N  => error⁰}
//│ 				def tail_lz₁₀(ls¹⁰) = 
//│ 					case force⁰(ls¹⁰) of {
//│ 						LH_C h⁷ t¹¹ => t¹¹
//│ 						| LH_N  => error⁰}
//│ 			def squares₀₀(_lh_squares_arg1²) = 
//│ 				map_lz₀₀((fun p² -> (p² * p²)), _lh_squares_arg1²)
//│ 				where
//│ 				def map_lz₀₀(f⁴, ls¹³) = 
//│ 					lazy⁰(case force⁰(ls¹³) of {
//│ 						LH_C h⁵ t⁷ => [LH_C f⁴(h⁵) map_lz₀₀(f⁴, t⁷)]
//│ 						| LH_N  => [LH_N]})
//│ 			def wheels₀₀(_lh_wheels_arg1²) = 
//│ 				lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀(nextSize₀₀, wheels₀₀(_lh_wheels_arg1²), _lh_wheels_arg1²)])
//│ 				where
//│ 				def nextSize₀₀(_lh_nextSize_arg1², _lh_nextSize_arg2²) = 
//│ 					case _lh_nextSize_arg1² of {
//│ 						Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2²) 
//│ 							let _lh_listcomp_fun²⁰ = (fun _lh_listcomp_fun_para¹⁴ -> _lh_listcomp_fun_para¹⁴(_lh_listcomp_fun²⁰, _lh_nextSize_Wheel_1¹, _lh_nextSize_arg2²))
//│ 							in _lh_listcomp_fun²⁰(enumFromThenTo₁₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2² - 1) * _lh_nextSize_Wheel_0¹)))]
//│ 						| _  => error⁰}
//│ 					where
//│ 					def enumFromThenTo₁₀(a⁵, t¹⁵, b⁵) = 
//│ 						if (a⁵ <= b⁵) then 
//│ 							let _lh_listcomp_fun_ls_h¹⁴ = a⁵
//│ 							in let _lh_listcomp_fun_ls_t¹⁶ = enumFromThenTo₁₀(t¹⁵, ((2 * t¹⁵) - a⁵), b⁵)
//│ 							in (fun _lh_listcomp_fun²¹ -> (fun _lh_nextSize_Wheel_1² -> (fun _lh_nextSize_arg2³ -> 
//│ 								let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {
//│ 									LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => 
//│ 										let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹⁶ -> _lh_listcomp_fun_para¹⁶(_lh_listcomp_fun²³, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t⁷, _lh_listcomp_fun²²))
//│ 										in _lh_listcomp_fun²³(
//│ 											let _lh_listcomp_fun_ls_h¹⁵ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h¹⁴)
//│ 											in let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁶ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> _lh_listcomp_fun²⁷(_lh_listcomp_fun_ls_t¹⁹)))))
//│ 											in (fun _lh_listcomp_fun²⁴ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> if ((_lh_listcomp_fun_ls_h¹⁵ % _lh_nextSize_arg2⁴) > 0) then [LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun²⁴(_lh_listcomp_fun_ls_t¹⁷)] else _lh_listcomp_fun²⁴(_lh_listcomp_fun_ls_t¹⁷))))))
//│ 									| LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁶)})
//│ 								in _lh_listcomp_fun²²(_lh_nextSize_Wheel_1²)))) else (fun _lh_listcomp_fun²⁸ -> (fun _lh_nextSize_Wheel_1³ -> (fun _lh_nextSize_arg2⁶ -> [LH_N])))
//│ 				def zipWith_lz_lz₀₀(f⁵, xs², ys²) = 
//│ 					lazy⁰(case force⁰(xs²) of {
//│ 						LH_C hx¹ tx¹ => case force⁰(ys²) of {
//│ 							LH_C hy¹ ty¹ => [LH_C f⁵(hx¹, hy¹) zipWith_lz_lz₀₀(f⁵, tx¹, ty¹)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testWheelSieve1_nofib₀₀^1] (hopeless to continue)
//│ 	[testWheelSieve1_nofib₀₀^1 · prime₀₀^228] (using original def)
//│ 		[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · atIndex_lz₀₀^634] (using original def)
//│ 			[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · atIndex_lz₀₀^634 · atIndex_lz₀₀^345] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · atIndex_lz₀₀^634] (using original def)
//│ 		[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637] (using original def)
//│ 			[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · primes₀₀^14] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637] (using original def)
//│ 			[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · primes₀₀^19] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637] (using original def)
//│ 			[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · primes₀₀^9] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637] (using original def)
//│ 			[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · append_lz₀₀^458] (using original def)
//│ 					[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · append_lz₀₀^458 · append_lz₀₀^100] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · append_lz₀₀^458] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · enumFromThenTo₀₀^473] (using original def)
//│ 					[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · enumFromThenTo₀₀^473 · enumFromThenTo₀₀^119] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · enumFromThenTo₀₀^473] (using original def)
//│ 					[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · enumFromThenTo₀₀^473 · noFactor₀₀^164] (using original def)
//│ 						[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · enumFromThenTo₀₀^473 · noFactor₀₀^164 · notDivBy₀₀^66] (using original def)
//│ 							[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · enumFromThenTo₀₀^473 · noFactor₀₀^164 · notDivBy₀₀^66 · notDivBy₀₀^312] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · enumFromThenTo₀₀^473 · noFactor₀₀^164 · notDivBy₀₀^66] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · head_lz₀₀^495] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · min₀₀^487] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · noFactor₀₀^536] (using original def)
//│ 					[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · noFactor₀₀^536 · notDivBy₀₀^66] (using original def)
//│ 						[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · noFactor₀₀^536 · notDivBy₀₀^66 · notDivBy₀₀^312] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · noFactor₀₀^536 · notDivBy₀₀^66] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · sieve₀₀^583] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · tail_lz₀₀^586] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · sieve₀₀^7 · tail_lz₁₀^590] (using original def)
//│ 			[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · squares₀₀^18] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · squares₀₀^18 · map_lz₀₀^49] (using original def)
//│ 					[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · squares₀₀^18 · map_lz₀₀^49 · map_lz₀₀^239] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · squares₀₀^18 · map_lz₀₀^49] (using original def)
//│ 			[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8 · nextSize₀₀^85] (using original def)
//│ 					[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8 · nextSize₀₀^85 · enumFromThenTo₁₀^265] (using original def)
//│ 						[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8 · nextSize₀₀^85 · enumFromThenTo₁₀^265 · enumFromThenTo₁₀^366] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8 · nextSize₀₀^85 · enumFromThenTo₁₀^265] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8 · wheels₀₀^87] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8] (using original def)
//│ 				[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8 · zipWith_lz_lz₀₀^84] (using original def)
//│ 					[testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8 · zipWith_lz_lz₀₀^84 · zipWith_lz_lz₀₀^618] ---> [testWheelSieve1_nofib₀₀^1 · prime₀₀^228 · primes₀₀^637 · wheels₀₀^8 · zipWith_lz_lz₀₀^84] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testWheelSieve1_nofib₀₀₀(primId⁰(1000))
//│ def testWheelSieve1_nofib₀₀₀(_lh_testWheelSieve1_nofib_arg1¹) = 
//│ 	prime₀₀₀(_lh_testWheelSieve1_nofib_arg1¹)
//│ 	where
//│ 	def prime₀₀₀(_lh_prime_arg1¹) = 
//│ 		atIndex_lz₀₀₀(_lh_prime_arg1¹, primes₀₀₀(_lh_prime_arg1¹))
//│ 		where
//│ 		def atIndex_lz₀₀₀(n¹, ls⁷) = 
//│ 			if (n¹ < 0) then error⁰ else case force⁰(ls⁷) of {
//│ 				LH_C h⁷ t¹⁰ => if (n¹ == 0) then h⁷ else atIndex_lz₀₀₀((n¹ - 1), t¹⁰)
//│ 				| LH_N  => error⁰}
//│ 		def primes₀₀₀(_lh_primes_arg1¹) = 
//│ 			lazy⁰(sieve₀₀₀(wheels₀₀₀(primes₀₀₀(_lh_primes_arg1¹)), primes₀₀₀(_lh_primes_arg1¹), squares₀₀₀(primes₀₀₀(_lh_primes_arg1¹)), _lh_primes_arg1¹))
//│ 			where
//│ 			def sieve₀₀₀(_lh_sieve_arg1¹, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸, _lh_sieve_arg4¹) = 
//│ 				let _lh_matchIdent⁸ = force⁰(_lh_sieve_arg1¹)
//│ 				in case _lh_matchIdent⁸ of {
//│ 					LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {
//│ 						Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(
//│ 							let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun³⁴, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸))
//│ 							in _lh_listcomp_fun³⁴(
//│ 								let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0⁸
//│ 								in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀₀(_lh_sieve_arg2⁸) - 1)) * _lh_sieve_Wheel_0⁸))
//│ 								in (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1⁵ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> 
//│ 									let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {
//│ 										LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => 
//│ 											let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ 											in _lh_listcomp_fun³⁷(
//│ 												let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ 												in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ 												in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²))))))))
//│ 										| LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)})
//│ 									in _lh_listcomp_fun³⁶(_lh_sieve_Wheel_1⁵))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2⁸), tail_lz₁₀₀(_lh_sieve_arg3⁸), _lh_sieve_arg4¹))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def append_lz₀₀₀(_lh_append_lz_arg1¹, _lh_append_lz_arg2¹) = 
//│ 					let _lh_matchIdent⁹ = _lh_append_lz_arg1¹
//│ 					in case _lh_matchIdent⁹ of {
//│ 						LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)])
//│ 						| LH_N  => _lh_append_lz_arg2¹
//│ 						| _  => error⁰}
//│ 				def enumFromThenTo₀₀₀(a³, t¹³, b³) = 
//│ 					if (a³ <= b³) then 
//│ 						let _lh_listcomp_fun_ls_h¹⁵ = a³
//│ 						in let _lh_listcomp_fun_ls_t²⁵ = enumFromThenTo₀₀₀(t¹³, ((2 * t¹³) - a³), b³)
//│ 						in (fun _lh_listcomp_fun⁴² -> (fun _lh_sieve_Wheel_0¹² -> (fun _lh_sieve_Wheel_1⁶ -> (fun _lh_sieve_arg2¹² -> (fun _lh_sieve_arg3¹² -> 
//│ 							let _lh_listcomp_fun⁴³ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t²⁶ => 
//│ 									let _lh_listcomp_fun⁴⁴ = (fun _lh_listcomp_fun_para¹⁵ -> _lh_listcomp_fun_para¹⁵(_lh_listcomp_fun⁴⁴, _lh_sieve_Wheel_0¹², _lh_sieve_arg2¹², _lh_sieve_arg3¹², _lh_listcomp_fun_ls_t²⁶, _lh_listcomp_fun⁴³))
//│ 									in _lh_listcomp_fun⁴⁴(
//│ 										let _lh_listcomp_fun_ls_h¹⁷ = (_lh_listcomp_fun_ls_h¹⁶ + _lh_listcomp_fun_ls_h¹⁵)
//│ 										in let _lh_listcomp_fun_ls_t²⁷ = (fun _lh_listcomp_fun⁴⁵ -> (fun _lh_sieve_Wheel_0¹³ -> (fun _lh_sieve_arg2¹³ -> (fun _lh_sieve_arg3¹³ -> (fun _lh_listcomp_fun_ls_t²⁸ -> (fun _lh_listcomp_fun⁴⁶ -> _lh_listcomp_fun⁴⁶(_lh_listcomp_fun_ls_t²⁸)))))))
//│ 										in (fun _lh_listcomp_fun⁴⁷ -> (fun _lh_sieve_Wheel_0¹⁴ -> (fun _lh_sieve_arg2¹⁴ -> (fun _lh_sieve_arg3¹⁴ -> (fun _lh_listcomp_fun_ls_t²⁹ -> (fun _lh_listcomp_fun⁴⁸ -> if noFactor₀₀₀(_lh_sieve_Wheel_0¹⁴, _lh_sieve_arg2¹⁴, _lh_sieve_arg3¹⁴, _lh_listcomp_fun_ls_h¹⁷) then [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)] else _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷))))))))
//│ 								| LH_N  => _lh_listcomp_fun⁴²(_lh_listcomp_fun_ls_t²⁵)})
//│ 							in _lh_listcomp_fun⁴³(_lh_sieve_Wheel_1⁶)))))) else (fun _lh_listcomp_fun⁴⁹ -> (fun _lh_sieve_Wheel_0¹⁵ -> (fun _lh_sieve_Wheel_1⁷ -> (fun _lh_sieve_arg2¹⁵ -> (fun _lh_sieve_arg3¹⁵ -> [LH_N])))))
//│ 					where
//│ 					def noFactor₀₀₀(_lh_noFactor_arg1¹, _lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹) = 
//│ 						if (_lh_noFactor_arg1¹ <= 2) then [True] else notDivBy₀₀₀(_lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹)
//│ 						where
//│ 						def notDivBy₀₀₀(_lh_notDivBy_arg1¹, _lh_notDivBy_arg2¹, _lh_notDivBy_arg3¹) = 
//│ 							let _lh_matchIdent⁴ = force⁰(_lh_notDivBy_arg2¹)
//│ 							in case _lh_matchIdent⁴ of {
//│ 								LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else 
//│ 									let _lh_matchIdent⁵ = force⁰(_lh_notDivBy_arg1¹)
//│ 									in case _lh_matchIdent⁵ of {
//│ 										LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹))
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def head_lz₀₀₀(ls⁵) = 
//│ 					case force⁰(ls⁵) of {
//│ 						LH_C h⁵ t⁸ => h⁵
//│ 						| LH_N  => error⁰}
//│ 				def min₀₀₀(_lh_min_arg1¹, _lh_min_arg2¹) = 
//│ 					if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ 				def noFactor₀₀₁(_lh_noFactor_arg1², _lh_noFactor_arg2², _lh_noFactor_arg3², _lh_noFactor_arg4²) = 
//│ 					if (_lh_noFactor_arg1² <= 2) then [True] else notDivBy₀₀₁(_lh_noFactor_arg2², _lh_noFactor_arg3², _lh_noFactor_arg4²)
//│ 					where
//│ 					def notDivBy₀₀₁(_lh_notDivBy_arg1², _lh_notDivBy_arg2², _lh_notDivBy_arg3²) = 
//│ 						let _lh_matchIdent⁶ = force⁰(_lh_notDivBy_arg2²)
//│ 						in case _lh_matchIdent⁶ of {
//│ 							LH_C _lh_notDivBy_LH_C_0⁴ _lh_notDivBy_LH_C_1⁴ => if (_lh_notDivBy_LH_C_0⁴ > _lh_notDivBy_arg3²) then [True] else 
//│ 								let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1²)
//│ 								in case _lh_matchIdent⁷ of {
//│ 									LH_C _lh_notDivBy_LH_C_0⁵ _lh_notDivBy_LH_C_1⁵ => (((_lh_notDivBy_arg3² % _lh_notDivBy_LH_C_0⁵) > 0) && notDivBy₀₀₁(_lh_notDivBy_LH_C_1⁵, _lh_notDivBy_LH_C_1⁴, _lh_notDivBy_arg3²))
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 				def tail_lz₀₀₀(ls⁶) = 
//│ 					case force⁰(ls⁶) of {
//│ 						LH_C h⁶ t⁹ => t⁹
//│ 						| LH_N  => error⁰}
//│ 				def tail_lz₁₀₀(ls⁹) = 
//│ 					case force⁰(ls⁹) of {
//│ 						LH_C h⁹ t¹² => t¹²
//│ 						| LH_N  => error⁰}
//│ 			def squares₀₀₀(_lh_squares_arg1¹) = 
//│ 				map_lz₀₀₀((fun p¹ -> (p¹ * p¹)), _lh_squares_arg1¹)
//│ 				where
//│ 				def map_lz₀₀₀(f², ls⁸) = 
//│ 					lazy⁰(case force⁰(ls⁸) of {
//│ 						LH_C h⁸ t¹¹ => [LH_C f²(h⁸) map_lz₀₀₀(f², t¹¹)]
//│ 						| LH_N  => [LH_N]})
//│ 			def wheels₀₀₀(_lh_wheels_arg1¹) = 
//│ 				lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀₀(nextSize₀₀₀, wheels₀₀₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)])
//│ 				where
//│ 				def nextSize₀₀₀(_lh_nextSize_arg1¹, _lh_nextSize_arg2⁹) = 
//│ 					case _lh_nextSize_arg1¹ of {
//│ 						Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1⁵ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2⁹) 
//│ 							let _lh_listcomp_fun³³ = (fun _lh_listcomp_fun_para¹⁰ -> _lh_listcomp_fun_para¹⁰(_lh_listcomp_fun³³, _lh_nextSize_Wheel_1⁵, _lh_nextSize_arg2⁹))
//│ 							in _lh_listcomp_fun³³(enumFromThenTo₁₀₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2⁹ - 1) * _lh_nextSize_Wheel_0¹)))]
//│ 						| _  => error⁰}
//│ 					where
//│ 					def enumFromThenTo₁₀₀(a², t⁷, b²) = 
//│ 						if (a² <= b²) then 
//│ 							let _lh_listcomp_fun_ls_h⁹ = a²
//│ 							in let _lh_listcomp_fun_ls_t¹⁵ = enumFromThenTo₁₀₀(t⁷, ((2 * t⁷) - a²), b²)
//│ 							in (fun _lh_listcomp_fun²⁵ -> (fun _lh_nextSize_Wheel_1³ -> (fun _lh_nextSize_arg2⁵ -> 
//│ 								let _lh_listcomp_fun²⁶ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 									LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => 
//│ 										let _lh_listcomp_fun²⁷ = (fun _lh_listcomp_fun_para⁹ -> _lh_listcomp_fun_para⁹(_lh_listcomp_fun²⁷, _lh_nextSize_arg2⁵, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²⁶))
//│ 										in _lh_listcomp_fun²⁷(
//│ 											let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ 											in let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁸ -> (fun _lh_nextSize_arg2⁶ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁹ -> _lh_listcomp_fun²⁹(_lh_listcomp_fun_ls_t¹⁸)))))
//│ 											in (fun _lh_listcomp_fun³⁰ -> (fun _lh_nextSize_arg2⁷ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun³¹ -> if ((_lh_listcomp_fun_ls_h¹¹ % _lh_nextSize_arg2⁷) > 0) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)] else _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷))))))
//│ 									| LH_N  => _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁵)})
//│ 								in _lh_listcomp_fun²⁶(_lh_nextSize_Wheel_1³)))) else (fun _lh_listcomp_fun³² -> (fun _lh_nextSize_Wheel_1⁴ -> (fun _lh_nextSize_arg2⁸ -> [LH_N])))
//│ 				def zipWith_lz_lz₀₀₀(f³, xs¹, ys¹) = 
//│ 					lazy⁰(case force⁰(xs¹) of {
//│ 						LH_C hx¹ tx¹ => case force⁰(ys¹) of {
//│ 							LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)]: 700 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²⁷ = (fun _lh_listcomp_fun_para⁹ -> _lh_listcomp_fun_para⁹(_lh_listcomp_fun²⁷, _lh_nextSize_arg2⁵, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²⁶))
//│ in _lh_listcomp_fun²⁷(let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁸ -> (fun _lh_nextSize_arg2⁶ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁹ -> _lh_listcomp_fun²⁹(_lh_listcomp_fun_ls_t¹⁸)))))
//│ in (fun _lh_listcomp_fun³⁰ -> (fun _lh_nextSize_arg2⁷ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun³¹ -> if ((_lh_listcomp_fun_ls_h¹¹ % _lh_nextSize_arg2⁷) > 0) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)] else _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)))))) | LH_N  => _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁵)}: 716
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)}: 1089
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t²⁶ => let _lh_listcomp_fun⁴⁴ = (fun _lh_listcomp_fun_para¹⁵ -> _lh_listcomp_fun_para¹⁵(_lh_listcomp_fun⁴⁴, _lh_sieve_Wheel_0¹², _lh_sieve_arg2¹², _lh_sieve_arg3¹², _lh_listcomp_fun_ls_t²⁶, _lh_listcomp_fun⁴³))
//│ in _lh_listcomp_fun⁴⁴(let _lh_listcomp_fun_ls_h¹⁷ = (_lh_listcomp_fun_ls_h¹⁶ + _lh_listcomp_fun_ls_h¹⁵)
//│ in let _lh_listcomp_fun_ls_t²⁷ = (fun _lh_listcomp_fun⁴⁵ -> (fun _lh_sieve_Wheel_0¹³ -> (fun _lh_sieve_arg2¹³ -> (fun _lh_sieve_arg3¹³ -> (fun _lh_listcomp_fun_ls_t²⁸ -> (fun _lh_listcomp_fun⁴⁶ -> _lh_listcomp_fun⁴⁶(_lh_listcomp_fun_ls_t²⁸)))))))
//│ in (fun _lh_listcomp_fun⁴⁷ -> (fun _lh_sieve_Wheel_0¹⁴ -> (fun _lh_sieve_arg2¹⁴ -> (fun _lh_sieve_arg3¹⁴ -> (fun _lh_listcomp_fun_ls_t²⁹ -> (fun _lh_listcomp_fun⁴⁸ -> if noFactor₀₀₀(_lh_sieve_Wheel_0¹⁴, _lh_sieve_arg2¹⁴, _lh_sieve_arg3¹⁴, _lh_listcomp_fun_ls_h¹⁷) then [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)] else _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)))))))) | LH_N  => _lh_listcomp_fun⁴²(_lh_listcomp_fun_ls_t²⁵)}: 1270
//│ [LH_N]: 727 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²⁷ = (fun _lh_listcomp_fun_para⁹ -> _lh_listcomp_fun_para⁹(_lh_listcomp_fun²⁷, _lh_nextSize_arg2⁵, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²⁶))
//│ in _lh_listcomp_fun²⁷(let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁸ -> (fun _lh_nextSize_arg2⁶ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁹ -> _lh_listcomp_fun²⁹(_lh_listcomp_fun_ls_t¹⁸)))))
//│ in (fun _lh_listcomp_fun³⁰ -> (fun _lh_nextSize_arg2⁷ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun³¹ -> if ((_lh_listcomp_fun_ls_h¹¹ % _lh_nextSize_arg2⁷) > 0) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)] else _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)))))) | LH_N  => _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁵)}: 716
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)}: 1089
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t²⁶ => let _lh_listcomp_fun⁴⁴ = (fun _lh_listcomp_fun_para¹⁵ -> _lh_listcomp_fun_para¹⁵(_lh_listcomp_fun⁴⁴, _lh_sieve_Wheel_0¹², _lh_sieve_arg2¹², _lh_sieve_arg3¹², _lh_listcomp_fun_ls_t²⁶, _lh_listcomp_fun⁴³))
//│ in _lh_listcomp_fun⁴⁴(let _lh_listcomp_fun_ls_h¹⁷ = (_lh_listcomp_fun_ls_h¹⁶ + _lh_listcomp_fun_ls_h¹⁵)
//│ in let _lh_listcomp_fun_ls_t²⁷ = (fun _lh_listcomp_fun⁴⁵ -> (fun _lh_sieve_Wheel_0¹³ -> (fun _lh_sieve_arg2¹³ -> (fun _lh_sieve_arg3¹³ -> (fun _lh_listcomp_fun_ls_t²⁸ -> (fun _lh_listcomp_fun⁴⁶ -> _lh_listcomp_fun⁴⁶(_lh_listcomp_fun_ls_t²⁸)))))))
//│ in (fun _lh_listcomp_fun⁴⁷ -> (fun _lh_sieve_Wheel_0¹⁴ -> (fun _lh_sieve_arg2¹⁴ -> (fun _lh_sieve_arg3¹⁴ -> (fun _lh_listcomp_fun_ls_t²⁹ -> (fun _lh_listcomp_fun⁴⁸ -> if noFactor₀₀₀(_lh_sieve_Wheel_0¹⁴, _lh_sieve_arg2¹⁴, _lh_sieve_arg3¹⁴, _lh_listcomp_fun_ls_h¹⁷) then [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)] else _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)))))))) | LH_N  => _lh_listcomp_fun⁴²(_lh_listcomp_fun_ls_t²⁵)}: 1270
//│ [LH_N]: 742 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²⁷ = (fun _lh_listcomp_fun_para⁹ -> _lh_listcomp_fun_para⁹(_lh_listcomp_fun²⁷, _lh_nextSize_arg2⁵, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²⁶))
//│ in _lh_listcomp_fun²⁷(let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁸ -> (fun _lh_nextSize_arg2⁶ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁹ -> _lh_listcomp_fun²⁹(_lh_listcomp_fun_ls_t¹⁸)))))
//│ in (fun _lh_listcomp_fun³⁰ -> (fun _lh_nextSize_arg2⁷ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun³¹ -> if ((_lh_listcomp_fun_ls_h¹¹ % _lh_nextSize_arg2⁷) > 0) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)] else _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)))))) | LH_N  => _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁵)}: 716
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)}: 1089
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t²⁶ => let _lh_listcomp_fun⁴⁴ = (fun _lh_listcomp_fun_para¹⁵ -> _lh_listcomp_fun_para¹⁵(_lh_listcomp_fun⁴⁴, _lh_sieve_Wheel_0¹², _lh_sieve_arg2¹², _lh_sieve_arg3¹², _lh_listcomp_fun_ls_t²⁶, _lh_listcomp_fun⁴³))
//│ in _lh_listcomp_fun⁴⁴(let _lh_listcomp_fun_ls_h¹⁷ = (_lh_listcomp_fun_ls_h¹⁶ + _lh_listcomp_fun_ls_h¹⁵)
//│ in let _lh_listcomp_fun_ls_t²⁷ = (fun _lh_listcomp_fun⁴⁵ -> (fun _lh_sieve_Wheel_0¹³ -> (fun _lh_sieve_arg2¹³ -> (fun _lh_sieve_arg3¹³ -> (fun _lh_listcomp_fun_ls_t²⁸ -> (fun _lh_listcomp_fun⁴⁶ -> _lh_listcomp_fun⁴⁶(_lh_listcomp_fun_ls_t²⁸)))))))
//│ in (fun _lh_listcomp_fun⁴⁷ -> (fun _lh_sieve_Wheel_0¹⁴ -> (fun _lh_sieve_arg2¹⁴ -> (fun _lh_sieve_arg3¹⁴ -> (fun _lh_listcomp_fun_ls_t²⁹ -> (fun _lh_listcomp_fun⁴⁸ -> if noFactor₀₀₀(_lh_sieve_Wheel_0¹⁴, _lh_sieve_arg2¹⁴, _lh_sieve_arg3¹⁴, _lh_listcomp_fun_ls_h¹⁷) then [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)] else _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)))))))) | LH_N  => _lh_listcomp_fun⁴²(_lh_listcomp_fun_ls_t²⁵)}: 1270
//│ [LH_C 1 [LH_N]]: 743 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²⁷ = (fun _lh_listcomp_fun_para⁹ -> _lh_listcomp_fun_para⁹(_lh_listcomp_fun²⁷, _lh_nextSize_arg2⁵, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²⁶))
//│ in _lh_listcomp_fun²⁷(let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁸ -> (fun _lh_nextSize_arg2⁶ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁹ -> _lh_listcomp_fun²⁹(_lh_listcomp_fun_ls_t¹⁸)))))
//│ in (fun _lh_listcomp_fun³⁰ -> (fun _lh_nextSize_arg2⁷ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun³¹ -> if ((_lh_listcomp_fun_ls_h¹¹ % _lh_nextSize_arg2⁷) > 0) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)] else _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)))))) | LH_N  => _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁵)}: 716
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)}: 1089
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t²⁶ => let _lh_listcomp_fun⁴⁴ = (fun _lh_listcomp_fun_para¹⁵ -> _lh_listcomp_fun_para¹⁵(_lh_listcomp_fun⁴⁴, _lh_sieve_Wheel_0¹², _lh_sieve_arg2¹², _lh_sieve_arg3¹², _lh_listcomp_fun_ls_t²⁶, _lh_listcomp_fun⁴³))
//│ in _lh_listcomp_fun⁴⁴(let _lh_listcomp_fun_ls_h¹⁷ = (_lh_listcomp_fun_ls_h¹⁶ + _lh_listcomp_fun_ls_h¹⁵)
//│ in let _lh_listcomp_fun_ls_t²⁷ = (fun _lh_listcomp_fun⁴⁵ -> (fun _lh_sieve_Wheel_0¹³ -> (fun _lh_sieve_arg2¹³ -> (fun _lh_sieve_arg3¹³ -> (fun _lh_listcomp_fun_ls_t²⁸ -> (fun _lh_listcomp_fun⁴⁶ -> _lh_listcomp_fun⁴⁶(_lh_listcomp_fun_ls_t²⁸)))))))
//│ in (fun _lh_listcomp_fun⁴⁷ -> (fun _lh_sieve_Wheel_0¹⁴ -> (fun _lh_sieve_arg2¹⁴ -> (fun _lh_sieve_arg3¹⁴ -> (fun _lh_listcomp_fun_ls_t²⁹ -> (fun _lh_listcomp_fun⁴⁸ -> if noFactor₀₀₀(_lh_sieve_Wheel_0¹⁴, _lh_sieve_arg2¹⁴, _lh_sieve_arg3¹⁴, _lh_listcomp_fun_ls_h¹⁷) then [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)] else _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)))))))) | LH_N  => _lh_listcomp_fun⁴²(_lh_listcomp_fun_ls_t²⁵)}: 1270
//│ [Wheel 1 [LH_C 1 [LH_N]]]: 744 --->
//│ 	case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1⁵ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2⁹) let _lh_listcomp_fun³³ = (fun _lh_listcomp_fun_para¹⁰ -> _lh_listcomp_fun_para¹⁰(_lh_listcomp_fun³³, _lh_nextSize_Wheel_1⁵, _lh_nextSize_arg2⁹))
//│ in _lh_listcomp_fun³³(enumFromThenTo₁₀₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2⁹ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 972
//│ 	case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun³⁴, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸))
//│ in _lh_listcomp_fun³⁴(let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0⁸
//│ in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀₀(_lh_sieve_arg2⁸) - 1)) * _lh_sieve_Wheel_0⁸))
//│ in (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1⁵ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)})
//│ in _lh_listcomp_fun³⁶(_lh_sieve_Wheel_1⁵))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2⁸), tail_lz₁₀₀(_lh_sieve_arg3⁸), _lh_sieve_arg4¹)) | _  => error⁰}: 1120
//│ [LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀₀(nextSize₀₀₀, wheels₀₀₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 754 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun³⁴, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸))
//│ in _lh_listcomp_fun³⁴(let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0⁸
//│ in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀₀(_lh_sieve_arg2⁸) - 1)) * _lh_sieve_Wheel_0⁸))
//│ in (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1⁵ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)})
//│ in _lh_listcomp_fun³⁶(_lh_sieve_Wheel_1⁵))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2⁸), tail_lz₁₀₀(_lh_sieve_arg3⁸), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1122
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1316
//│ [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2⁹) let _lh_listcomp_fun³³ = (fun _lh_listcomp_fun_para¹⁰ -> _lh_listcomp_fun_para¹⁰(_lh_listcomp_fun³³, _lh_nextSize_Wheel_1⁵, _lh_nextSize_arg2⁹))
//│ in _lh_listcomp_fun³³(enumFromThenTo₁₀₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2⁹ - 1) * _lh_nextSize_Wheel_0¹)))]: 970 --->
//│ 	case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1⁵ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2⁹) let _lh_listcomp_fun³³ = (fun _lh_listcomp_fun_para¹⁰ -> _lh_listcomp_fun_para¹⁰(_lh_listcomp_fun³³, _lh_nextSize_Wheel_1⁵, _lh_nextSize_arg2⁹))
//│ in _lh_listcomp_fun³³(enumFromThenTo₁₀₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2⁹ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 972
//│ 	case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun³⁴, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸))
//│ in _lh_listcomp_fun³⁴(let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0⁸
//│ in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀₀(_lh_sieve_arg2⁸) - 1)) * _lh_sieve_Wheel_0⁸))
//│ in (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1⁵ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)})
//│ in _lh_listcomp_fun³⁶(_lh_sieve_Wheel_1⁵))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2⁸), tail_lz₁₀₀(_lh_sieve_arg3⁸), _lh_sieve_arg4¹)) | _  => error⁰}: 1120
//│ [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)]: 1071 --->
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1141
//│ [LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1137 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁸ => h⁵ | LH_N  => error⁰}: 762
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰}: 798
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁹ => t⁹ | LH_N  => error⁰}: 812
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0⁵ _lh_notDivBy_LH_C_1⁵ => (((_lh_notDivBy_arg3² % _lh_notDivBy_LH_C_0⁵) > 0) && notDivBy₀₀₁(_lh_notDivBy_LH_C_1⁵, _lh_notDivBy_LH_C_1⁴, _lh_notDivBy_arg3²)) | _  => error⁰}: 899
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t¹⁰ => if (n¹ == 0) then h⁷ else atIndex_lz₀₀₀((n¹ - 1), t¹⁰) | LH_N  => error⁰}: 934
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t¹¹ => [LH_C f²(h⁸) map_lz₀₀₀(f², t¹¹)] | LH_N  => [LH_N]}: 1159
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]}: 1314
//│ [LH_C f²(h⁸) map_lz₀₀₀(f², t¹¹)]: 1157 --->
//│ 	case _lh_matchIdent⁴ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁵ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁵ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 802
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0⁴ _lh_notDivBy_LH_C_1⁴ => if (_lh_notDivBy_LH_C_0⁴ > _lh_notDivBy_arg3²) then [True] else let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1²)
//│ in case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0⁵ _lh_notDivBy_LH_C_1⁵ => (((_lh_notDivBy_arg3² % _lh_notDivBy_LH_C_0⁵) > 0) && notDivBy₀₀₁(_lh_notDivBy_LH_C_1⁵, _lh_notDivBy_LH_C_1⁴, _lh_notDivBy_arg3²)) | _  => error⁰} | _  => error⁰}: 903
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t¹² => t¹² | LH_N  => error⁰}: 1178
//│ [LH_N]: 1158 --->
//│ 	case _lh_matchIdent⁴ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁵ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁵ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 802
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0⁴ _lh_notDivBy_LH_C_1⁴ => if (_lh_notDivBy_LH_C_0⁴ > _lh_notDivBy_arg3²) then [True] else let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1²)
//│ in case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0⁵ _lh_notDivBy_LH_C_1⁵ => (((_lh_notDivBy_arg3² % _lh_notDivBy_LH_C_0⁵) > 0) && notDivBy₀₀₁(_lh_notDivBy_LH_C_1⁵, _lh_notDivBy_LH_C_1⁴, _lh_notDivBy_arg3²)) | _  => error⁰} | _  => error⁰}: 903
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t¹² => t¹² | LH_N  => error⁰}: 1178
//│ [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)]: 1252 --->
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1141
//│ [LH_N]: 1283 --->
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1141
//│ [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)]: 1312 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun³⁴, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸))
//│ in _lh_listcomp_fun³⁴(let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0⁸
//│ in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀₀(_lh_sieve_arg2⁸) - 1)) * _lh_sieve_Wheel_0⁸))
//│ in (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1⁵ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)})
//│ in _lh_listcomp_fun³⁶(_lh_sieve_Wheel_1⁵))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2⁸), tail_lz₁₀₀(_lh_sieve_arg3⁸), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1122
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1316
//│ [LH_N]: 1313 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun³⁴, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸))
//│ in _lh_listcomp_fun³⁴(let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0⁸
//│ in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀₀(_lh_sieve_arg2⁸) - 1)) * _lh_sieve_Wheel_0⁸))
//│ in (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1⁵ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)})
//│ in _lh_listcomp_fun³⁶(_lh_sieve_Wheel_1⁵))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2⁸), tail_lz₁₀₀(_lh_sieve_arg3⁸), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1122
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1316
//│ [LH_N]: 1315 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun³⁴, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸))
//│ in _lh_listcomp_fun³⁴(let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0⁸
//│ in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀₀(_lh_sieve_arg2⁸) - 1)) * _lh_sieve_Wheel_0⁸))
//│ in (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1⁵ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)})
//│ in _lh_listcomp_fun³⁶(_lh_sieve_Wheel_1⁵))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2⁸), tail_lz₁₀₀(_lh_sieve_arg3⁸), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1122
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1316
//│ ------------------
//│ case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²⁷ = (fun _lh_listcomp_fun_para⁹ -> _lh_listcomp_fun_para⁹(_lh_listcomp_fun²⁷, _lh_nextSize_arg2⁵, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²⁶))
//│ in _lh_listcomp_fun²⁷(let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁸ -> (fun _lh_nextSize_arg2⁶ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁹ -> _lh_listcomp_fun²⁹(_lh_listcomp_fun_ls_t¹⁸)))))
//│ in (fun _lh_listcomp_fun³⁰ -> (fun _lh_nextSize_arg2⁷ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun³¹ -> if ((_lh_listcomp_fun_ls_h¹¹ % _lh_nextSize_arg2⁷) > 0) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)] else _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)))))) | LH_N  => _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁵)}: 716 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)]: 700
//│ 	[LH_N]: 727
//│ 	[LH_N]: 742
//│ 	[LH_C 1 [LH_N]]: 743
//│ case force⁰(ls⁵) of {LH_C h⁵ t⁸ => h⁵ | LH_N  => error⁰}: 762 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1137
//│ case _lh_matchIdent⁵ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰}: 798 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1137
//│ case _lh_matchIdent⁴ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁵ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁵ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 802 --->
//│ 	[LH_C f²(h⁸) map_lz₀₀₀(f², t¹¹)]: 1157
//│ 	[LH_N]: 1158
//│ case force⁰(ls⁶) of {LH_C h⁶ t⁹ => t⁹ | LH_N  => error⁰}: 812 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1137
//│ case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0⁵ _lh_notDivBy_LH_C_1⁵ => (((_lh_notDivBy_arg3² % _lh_notDivBy_LH_C_0⁵) > 0) && notDivBy₀₀₁(_lh_notDivBy_LH_C_1⁵, _lh_notDivBy_LH_C_1⁴, _lh_notDivBy_arg3²)) | _  => error⁰}: 899 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1137
//│ case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0⁴ _lh_notDivBy_LH_C_1⁴ => if (_lh_notDivBy_LH_C_0⁴ > _lh_notDivBy_arg3²) then [True] else let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1²)
//│ in case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0⁵ _lh_notDivBy_LH_C_1⁵ => (((_lh_notDivBy_arg3² % _lh_notDivBy_LH_C_0⁵) > 0) && notDivBy₀₀₁(_lh_notDivBy_LH_C_1⁵, _lh_notDivBy_LH_C_1⁴, _lh_notDivBy_arg3²)) | _  => error⁰} | _  => error⁰}: 903 --->
//│ 	[LH_C f²(h⁸) map_lz₀₀₀(f², t¹¹)]: 1157
//│ 	[LH_N]: 1158
//│ case force⁰(ls⁷) of {LH_C h⁷ t¹⁰ => if (n¹ == 0) then h⁷ else atIndex_lz₀₀₀((n¹ - 1), t¹⁰) | LH_N  => error⁰}: 934 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1137
//│ case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1⁵ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2⁹) let _lh_listcomp_fun³³ = (fun _lh_listcomp_fun_para¹⁰ -> _lh_listcomp_fun_para¹⁰(_lh_listcomp_fun³³, _lh_nextSize_Wheel_1⁵, _lh_nextSize_arg2⁹))
//│ in _lh_listcomp_fun³³(enumFromThenTo₁₀₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2⁹ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 972 --->
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 744
//│ 	[Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2⁹) let _lh_listcomp_fun³³ = (fun _lh_listcomp_fun_para¹⁰ -> _lh_listcomp_fun_para¹⁰(_lh_listcomp_fun³³, _lh_nextSize_Wheel_1⁵, _lh_nextSize_arg2⁹))
//│ in _lh_listcomp_fun³³(enumFromThenTo₁₀₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2⁹ - 1) * _lh_nextSize_Wheel_0¹)))]: 970
//│ case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)}: 1089 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)]: 700
//│ 	[LH_N]: 727
//│ 	[LH_N]: 742
//│ 	[LH_C 1 [LH_N]]: 743
//│ case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun³⁴, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸))
//│ in _lh_listcomp_fun³⁴(let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0⁸
//│ in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀₀(_lh_sieve_arg2⁸) - 1)) * _lh_sieve_Wheel_0⁸))
//│ in (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1⁵ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)})
//│ in _lh_listcomp_fun³⁶(_lh_sieve_Wheel_1⁵))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2⁸), tail_lz₁₀₀(_lh_sieve_arg3⁸), _lh_sieve_arg4¹)) | _  => error⁰}: 1120 --->
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 744
//│ 	[Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2⁹) let _lh_listcomp_fun³³ = (fun _lh_listcomp_fun_para¹⁰ -> _lh_listcomp_fun_para¹⁰(_lh_listcomp_fun³³, _lh_nextSize_Wheel_1⁵, _lh_nextSize_arg2⁹))
//│ in _lh_listcomp_fun³³(enumFromThenTo₁₀₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2⁹ - 1) * _lh_nextSize_Wheel_0¹)))]: 970
//│ case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun³⁴, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2⁸, _lh_sieve_arg3⁸))
//│ in _lh_listcomp_fun³⁴(let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0⁸
//│ in let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz₀₀₀(_lh_sieve_arg2⁸) - 1)) * _lh_sieve_Wheel_0⁸))
//│ in (fun _lh_listcomp_fun³⁵ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1⁵ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para¹³ -> _lh_listcomp_fun_para¹³(_lh_listcomp_fun³⁷, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun³⁶))
//│ in _lh_listcomp_fun³⁷(let _lh_listcomp_fun_ls_h¹⁴ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹²)
//│ in let _lh_listcomp_fun_ls_t²² = (fun _lh_listcomp_fun³⁸ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁹ -> _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t²³)))))))
//│ in (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁴ -> (fun _lh_listcomp_fun⁴¹ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹¹, _lh_sieve_arg3¹¹, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)))))))) | LH_N  => _lh_listcomp_fun³⁵(_lh_listcomp_fun_ls_t²⁰)})
//│ in _lh_listcomp_fun³⁶(_lh_sieve_Wheel_1⁵))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2⁸), tail_lz₁₀₀(_lh_sieve_arg3⁸), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1122 --->
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀₀(nextSize₀₀₀, wheels₀₀₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 754
//│ 	[LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)]: 1312
//│ 	[LH_N]: 1313
//│ 	[LH_N]: 1315
//│ case _lh_matchIdent⁹ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1141 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)]: 1071
//│ 	[LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)]: 1252
//│ 	[LH_N]: 1283
//│ case force⁰(ls⁸) of {LH_C h⁸ t¹¹ => [LH_C f²(h⁸) map_lz₀₀₀(f², t¹¹)] | LH_N  => [LH_N]}: 1159 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1137
//│ case force⁰(ls⁹) of {LH_C h⁹ t¹² => t¹² | LH_N  => error⁰}: 1178 --->
//│ 	[LH_C f²(h⁸) map_lz₀₀₀(f², t¹¹)]: 1157
//│ 	[LH_N]: 1158
//│ case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t²⁶ => let _lh_listcomp_fun⁴⁴ = (fun _lh_listcomp_fun_para¹⁵ -> _lh_listcomp_fun_para¹⁵(_lh_listcomp_fun⁴⁴, _lh_sieve_Wheel_0¹², _lh_sieve_arg2¹², _lh_sieve_arg3¹², _lh_listcomp_fun_ls_t²⁶, _lh_listcomp_fun⁴³))
//│ in _lh_listcomp_fun⁴⁴(let _lh_listcomp_fun_ls_h¹⁷ = (_lh_listcomp_fun_ls_h¹⁶ + _lh_listcomp_fun_ls_h¹⁵)
//│ in let _lh_listcomp_fun_ls_t²⁷ = (fun _lh_listcomp_fun⁴⁵ -> (fun _lh_sieve_Wheel_0¹³ -> (fun _lh_sieve_arg2¹³ -> (fun _lh_sieve_arg3¹³ -> (fun _lh_listcomp_fun_ls_t²⁸ -> (fun _lh_listcomp_fun⁴⁶ -> _lh_listcomp_fun⁴⁶(_lh_listcomp_fun_ls_t²⁸)))))))
//│ in (fun _lh_listcomp_fun⁴⁷ -> (fun _lh_sieve_Wheel_0¹⁴ -> (fun _lh_sieve_arg2¹⁴ -> (fun _lh_sieve_arg3¹⁴ -> (fun _lh_listcomp_fun_ls_t²⁹ -> (fun _lh_listcomp_fun⁴⁸ -> if noFactor₀₀₀(_lh_sieve_Wheel_0¹⁴, _lh_sieve_arg2¹⁴, _lh_sieve_arg3¹⁴, _lh_listcomp_fun_ls_h¹⁷) then [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)] else _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)))))))) | LH_N  => _lh_listcomp_fun⁴²(_lh_listcomp_fun_ls_t²⁵)}: 1270 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t¹⁷)]: 700
//│ 	[LH_N]: 727
//│ 	[LH_N]: 742
//│ 	[LH_C 1 [LH_N]]: 743
//│ case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]}: 1314 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 1137
//│ case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1316 --->
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀₀(nextSize₀₀₀, wheels₀₀₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 754
//│ 	[LH_C f³(hx¹, hy¹) zipWith_lz_lz₀₀₀(f³, tx¹, ty¹)]: 1312
//│ 	[LH_N]: 1313
//│ 	[LH_N]: 1315
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)]: 1071 --->
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1141
//│ [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)]: 1252 --->
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1141
//│ [LH_N]: 1283 --->
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1141
//│ ------------------
//│ case _lh_matchIdent⁹ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₀₀₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 1141 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t²²)]: 1071
//│ 	[LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁴⁷(_lh_listcomp_fun_ls_t²⁷)]: 1252
//│ 	[LH_N]: 1283
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testWheelSieve1_nofib₀₀₀(primId⁰(1000))
//│ def testWheelSieve1_nofib₀₀₀(_lh_testWheelSieve1_nofib_arg1²) = 
//│ 	prime₀₀₀(_lh_testWheelSieve1_nofib_arg1²)
//│ 	where
//│ 	def prime₀₀₀(_lh_prime_arg1²) = 
//│ 		atIndex_lz₀₀₀(_lh_prime_arg1², primes₀₀₀(_lh_prime_arg1²))
//│ 		where
//│ 		def atIndex_lz₀₀₀(n², ls¹²) = 
//│ 			if (n² < 0) then error⁰ else case force⁰(ls¹²) of {
//│ 				LH_C h⁷ t¹⁰ => if (n² == 0) then h⁷ else atIndex_lz₀₀₀((n² - 1), t¹⁰)
//│ 				| LH_N  => error⁰}
//│ 		def primes₀₀₀(_lh_primes_arg1²) = 
//│ 			lazy⁰(sieve₀₀₀(wheels₀₀₀(primes₀₀₀(_lh_primes_arg1²)), primes₀₀₀(_lh_primes_arg1²), squares₀₀₀(primes₀₀₀(_lh_primes_arg1²)), _lh_primes_arg1²))
//│ 			where
//│ 			def sieve₀₀₀(_lh_sieve_arg1², _lh_sieve_arg2¹⁶, _lh_sieve_arg3¹⁶, _lh_sieve_arg4²) = 
//│ 				let _lh_matchIdent¹² = force⁰(_lh_sieve_arg1²)
//│ 				in case _lh_matchIdent¹² of {
//│ 					LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {
//│ 						Wheel _lh_sieve_Wheel_0⁸ _lh_sieve_Wheel_1⁴ => append_lz₀₀₀(
//│ 							let _lh_listcomp_fun⁵¹ = (fun _lh_listcomp_fun_para¹⁷ -> _lh_listcomp_fun_para¹⁷(_lh_listcomp_fun⁵¹, _lh_sieve_Wheel_0⁸, _lh_sieve_Wheel_1⁴, _lh_sieve_arg2¹⁶, _lh_sieve_arg3¹⁶))
//│ 							in _lh_listcomp_fun⁵¹(
//│ 								let _lh_listcomp_fun_ls_h¹⁸ = _lh_sieve_Wheel_0⁸
//│ 								in let _lh_listcomp_fun_ls_t³⁰ = enumFromThenTo₀₀₀((_lh_sieve_Wheel_0⁸ * 2), (_lh_sieve_Wheel_0⁸ * 3), (min₀₀₀((_lh_sieve_arg4² * _lh_sieve_arg4²), (head_lz₀₀₀(_lh_sieve_arg2¹⁶) - 1)) * _lh_sieve_Wheel_0⁸))
//│ 								in (fun _lh_listcomp_fun⁵² -> (fun _lh_sieve_Wheel_0¹⁶ -> (fun _lh_sieve_Wheel_1⁸ -> (fun _lh_sieve_arg2¹⁷ -> (fun _lh_sieve_arg3¹⁷ -> 
//│ 									let _lh_listcomp_fun⁵³ = (fun _lh_listcomp_fun_para¹⁸ -> case _lh_listcomp_fun_para¹⁸ of {
//│ 										LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t²¹ => 
//│ 											let _lh_listcomp_fun⁵⁴ = (fun _lh_listcomp_fun_para¹⁹ -> _lh_listcomp_fun_para¹⁹(_lh_listcomp_fun⁵⁴, _lh_sieve_Wheel_0¹⁶, _lh_sieve_arg2¹⁷, _lh_sieve_arg3¹⁷, _lh_listcomp_fun_ls_t²¹, _lh_listcomp_fun⁵³))
//│ 											in _lh_listcomp_fun⁵⁴(
//│ 												let _lh_listcomp_fun_ls_h¹⁹ = (_lh_listcomp_fun_ls_h¹³ + _lh_listcomp_fun_ls_h¹⁸)
//│ 												in let _lh_listcomp_fun_ls_t³¹ = (fun _lh_listcomp_fun⁵⁵ -> (fun _lh_sieve_Wheel_0¹⁷ -> (fun _lh_sieve_arg2¹⁸ -> (fun _lh_sieve_arg3¹⁸ -> (fun _lh_listcomp_fun_ls_t³² -> (fun _lh_listcomp_fun⁵⁶ -> _lh_listcomp_fun⁵⁶(_lh_listcomp_fun_ls_t³²)))))))
//│ 												in (fun _lh_listcomp_fun⁵⁷ -> (fun _lh_sieve_Wheel_0¹⁸ -> (fun _lh_sieve_arg2¹⁹ -> (fun _lh_sieve_arg3¹⁹ -> (fun _lh_listcomp_fun_ls_t³³ -> (fun _lh_listcomp_fun⁵⁸ -> if noFactor₀₀₁(_lh_sieve_Wheel_0¹⁸, _lh_sieve_arg2¹⁹, _lh_sieve_arg3¹⁹, _lh_listcomp_fun_ls_h¹⁹) then 
//│ 													let _lh_append_lz_LH_C_0² = _lh_listcomp_fun_ls_h¹⁹
//│ 													in let _lh_append_lz_LH_C_1² = _lh_listcomp_fun⁵⁷(_lh_listcomp_fun_ls_t³¹)
//│ 													in (fun _lh_append_lz_arg2² -> lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)])) else _lh_listcomp_fun⁵⁷(_lh_listcomp_fun_ls_t³¹))))))))
//│ 										| LH_N  => _lh_listcomp_fun⁵²(_lh_listcomp_fun_ls_t³⁰)})
//│ 									in _lh_listcomp_fun⁵³(_lh_sieve_Wheel_1⁸))))))), sieve₀₀₀(_lh_sieve_LH_C_1¹, tail_lz₀₀₀(_lh_sieve_arg2¹⁶), tail_lz₁₀₀(_lh_sieve_arg3¹⁶), _lh_sieve_arg4²))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def append_lz₀₀₀(_lh_append_lz_arg1², _lh_append_lz_arg2⁵) = 
//│ 					let _lh_matchIdent¹⁵ = _lh_append_lz_arg1²
//│ 					in _lh_matchIdent¹⁵(_lh_append_lz_arg2⁵)
//│ 				def enumFromThenTo₀₀₀(a⁵, t¹⁵, b⁵) = 
//│ 					if (a⁵ <= b⁵) then 
//│ 						let _lh_listcomp_fun_ls_h²² = a⁵
//│ 						in let _lh_listcomp_fun_ls_t³⁸ = enumFromThenTo₀₀₀(t¹⁵, ((2 * t¹⁵) - a⁵), b⁵)
//│ 						in (fun _lh_listcomp_fun⁶⁷ -> (fun _lh_sieve_Wheel_0¹⁹ -> (fun _lh_sieve_Wheel_1⁹ -> (fun _lh_sieve_arg2²⁰ -> (fun _lh_sieve_arg3²⁰ -> 
//│ 							let _lh_listcomp_fun⁶⁸ = (fun _lh_listcomp_fun_para²² -> case _lh_listcomp_fun_para²² of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t²⁶ => 
//│ 									let _lh_listcomp_fun⁶⁹ = (fun _lh_listcomp_fun_para²³ -> _lh_listcomp_fun_para²³(_lh_listcomp_fun⁶⁹, _lh_sieve_Wheel_0¹⁹, _lh_sieve_arg2²⁰, _lh_sieve_arg3²⁰, _lh_listcomp_fun_ls_t²⁶, _lh_listcomp_fun⁶⁸))
//│ 									in _lh_listcomp_fun⁶⁹(
//│ 										let _lh_listcomp_fun_ls_h²³ = (_lh_listcomp_fun_ls_h¹⁶ + _lh_listcomp_fun_ls_h²²)
//│ 										in let _lh_listcomp_fun_ls_t³⁹ = (fun _lh_listcomp_fun⁷⁰ -> (fun _lh_sieve_Wheel_0²⁰ -> (fun _lh_sieve_arg2²¹ -> (fun _lh_sieve_arg3²¹ -> (fun _lh_listcomp_fun_ls_t⁴⁰ -> (fun _lh_listcomp_fun⁷¹ -> _lh_listcomp_fun⁷¹(_lh_listcomp_fun_ls_t⁴⁰)))))))
//│ 										in (fun _lh_listcomp_fun⁷² -> (fun _lh_sieve_Wheel_0²¹ -> (fun _lh_sieve_arg2²² -> (fun _lh_sieve_arg3²² -> (fun _lh_listcomp_fun_ls_t⁴¹ -> (fun _lh_listcomp_fun⁷³ -> if noFactor₀₀₀(_lh_sieve_Wheel_0²¹, _lh_sieve_arg2²², _lh_sieve_arg3²², _lh_listcomp_fun_ls_h²³) then 
//│ 											let _lh_append_lz_LH_C_0³ = _lh_listcomp_fun_ls_h²³
//│ 											in let _lh_append_lz_LH_C_1³ = _lh_listcomp_fun⁷²(_lh_listcomp_fun_ls_t³⁹)
//│ 											in (fun _lh_append_lz_arg2³ -> lazy⁰([LH_C _lh_append_lz_LH_C_0³ append_lz₀₀₀(_lh_append_lz_LH_C_1³, _lh_append_lz_arg2³)])) else _lh_listcomp_fun⁷²(_lh_listcomp_fun_ls_t³⁹))))))))
//│ 								| LH_N  => _lh_listcomp_fun⁶⁷(_lh_listcomp_fun_ls_t³⁸)})
//│ 							in _lh_listcomp_fun⁶⁸(_lh_sieve_Wheel_1⁹)))))) else (fun _lh_listcomp_fun⁷⁴ -> (fun _lh_sieve_Wheel_0²² -> (fun _lh_sieve_Wheel_1¹⁰ -> (fun _lh_sieve_arg2²³ -> (fun _lh_sieve_arg3²³ -> (fun _lh_append_lz_arg2⁴ -> _lh_append_lz_arg2⁴))))))
//│ 					where
//│ 					def noFactor₀₀₀(_lh_noFactor_arg1⁴, _lh_noFactor_arg2⁴, _lh_noFactor_arg3⁴, _lh_noFactor_arg4⁴) = 
//│ 						if (_lh_noFactor_arg1⁴ <= 2) then [True] else notDivBy₀₀₀(_lh_noFactor_arg2⁴, _lh_noFactor_arg3⁴, _lh_noFactor_arg4⁴)
//│ 						where
//│ 						def notDivBy₀₀₀(_lh_notDivBy_arg1³, _lh_notDivBy_arg2³, _lh_notDivBy_arg3³) = 
//│ 							let _lh_matchIdent¹⁰ = force⁰(_lh_notDivBy_arg2³)
//│ 							in case _lh_matchIdent¹⁰ of {
//│ 								LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3³) then [True] else 
//│ 									let _lh_matchIdent¹¹ = force⁰(_lh_notDivBy_arg1³)
//│ 									in case _lh_matchIdent¹¹ of {
//│ 										LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3³ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy₀₀₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3³))
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def head_lz₀₀₀(ls¹⁰) = 
//│ 					case force⁰(ls¹⁰) of {
//│ 						LH_C h⁵ t⁸ => h⁵
//│ 						| LH_N  => error⁰}
//│ 				def min₀₀₀(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def noFactor₀₀₁(_lh_noFactor_arg1³, _lh_noFactor_arg2³, _lh_noFactor_arg3³, _lh_noFactor_arg4³) = 
//│ 					if (_lh_noFactor_arg1³ <= 2) then [True] else notDivBy₀₀₁(_lh_noFactor_arg2³, _lh_noFactor_arg3³, _lh_noFactor_arg4³)
//│ 					where
//│ 					def notDivBy₀₀₁(_lh_notDivBy_arg1⁴, _lh_notDivBy_arg2⁴, _lh_notDivBy_arg3⁴) = 
//│ 						let _lh_matchIdent¹³ = force⁰(_lh_notDivBy_arg2⁴)
//│ 						in case _lh_matchIdent¹³ of {
//│ 							LH_C _lh_notDivBy_LH_C_0⁴ _lh_notDivBy_LH_C_1⁴ => if (_lh_notDivBy_LH_C_0⁴ > _lh_notDivBy_arg3⁴) then [True] else 
//│ 								let _lh_matchIdent¹⁴ = force⁰(_lh_notDivBy_arg1⁴)
//│ 								in case _lh_matchIdent¹⁴ of {
//│ 									LH_C _lh_notDivBy_LH_C_0⁵ _lh_notDivBy_LH_C_1⁵ => (((_lh_notDivBy_arg3⁴ % _lh_notDivBy_LH_C_0⁵) > 0) && notDivBy₀₀₁(_lh_notDivBy_LH_C_1⁵, _lh_notDivBy_LH_C_1⁴, _lh_notDivBy_arg3⁴))
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 				def tail_lz₀₀₀(ls¹³) = 
//│ 					case force⁰(ls¹³) of {
//│ 						LH_C h⁶ t⁹ => t⁹
//│ 						| LH_N  => error⁰}
//│ 				def tail_lz₁₀₀(ls¹⁴) = 
//│ 					case force⁰(ls¹⁴) of {
//│ 						LH_C h⁹ t¹² => t¹²
//│ 						| LH_N  => error⁰}
//│ 			def squares₀₀₀(_lh_squares_arg1²) = 
//│ 				map_lz₀₀₀((fun p² -> (p² * p²)), _lh_squares_arg1²)
//│ 				where
//│ 				def map_lz₀₀₀(f⁴, ls¹¹) = 
//│ 					lazy⁰(case force⁰(ls¹¹) of {
//│ 						LH_C h⁸ t¹¹ => [LH_C f⁴(h⁸) map_lz₀₀₀(f⁴, t¹¹)]
//│ 						| LH_N  => [LH_N]})
//│ 			def wheels₀₀₀(_lh_wheels_arg1²) = 
//│ 				lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz₀₀₀(nextSize₀₀₀, wheels₀₀₀(_lh_wheels_arg1²), _lh_wheels_arg1²)])
//│ 				where
//│ 				def nextSize₀₀₀(_lh_nextSize_arg1², _lh_nextSize_arg2¹⁰) = 
//│ 					case _lh_nextSize_arg1² of {
//│ 						Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1⁵ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2¹⁰) 
//│ 							let _lh_listcomp_fun⁵⁰ = (fun _lh_listcomp_fun_para¹⁶ -> _lh_listcomp_fun_para¹⁶(_lh_listcomp_fun⁵⁰, _lh_nextSize_Wheel_1⁵, _lh_nextSize_arg2¹⁰))
//│ 							in _lh_listcomp_fun⁵⁰(enumFromThenTo₁₀₀(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2¹⁰ - 1) * _lh_nextSize_Wheel_0¹)))]
//│ 						| _  => error⁰}
//│ 					where
//│ 					def enumFromThenTo₁₀₀(a⁴, t¹⁴, b⁴) = 
//│ 						if (a⁴ <= b⁴) then 
//│ 							let _lh_listcomp_fun_ls_h²⁰ = a⁴
//│ 							in let _lh_listcomp_fun_ls_t³⁴ = enumFromThenTo₁₀₀(t¹⁴, ((2 * t¹⁴) - a⁴), b⁴)
//│ 							in (fun _lh_listcomp_fun⁵⁹ -> (fun _lh_nextSize_Wheel_1⁶ -> (fun _lh_nextSize_arg2¹¹ -> 
//│ 								let _lh_listcomp_fun⁶⁰ = (fun _lh_listcomp_fun_para²⁰ -> case _lh_listcomp_fun_para²⁰ of {
//│ 									LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => 
//│ 										let _lh_listcomp_fun⁶¹ = (fun _lh_listcomp_fun_para²¹ -> _lh_listcomp_fun_para²¹(_lh_listcomp_fun⁶¹, _lh_nextSize_arg2¹¹, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun⁶⁰))
//│ 										in _lh_listcomp_fun⁶¹(
//│ 											let _lh_listcomp_fun_ls_h²¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h²⁰)
//│ 											in let _lh_listcomp_fun_ls_t³⁵ = (fun _lh_listcomp_fun⁶² -> (fun _lh_nextSize_arg2¹² -> (fun _lh_listcomp_fun_ls_t³⁶ -> (fun _lh_listcomp_fun⁶³ -> _lh_listcomp_fun⁶³(_lh_listcomp_fun_ls_t³⁶)))))
//│ 											in (fun _lh_listcomp_fun⁶⁴ -> (fun _lh_nextSize_arg2¹³ -> (fun _lh_listcomp_fun_ls_t³⁷ -> (fun _lh_listcomp_fun⁶⁵ -> if ((_lh_listcomp_fun_ls_h²¹ % _lh_nextSize_arg2¹³) > 0) then [LH_C _lh_listcomp_fun_ls_h²¹ _lh_listcomp_fun⁶⁴(_lh_listcomp_fun_ls_t³⁵)] else _lh_listcomp_fun⁶⁴(_lh_listcomp_fun_ls_t³⁵))))))
//│ 									| LH_N  => _lh_listcomp_fun⁵⁹(_lh_listcomp_fun_ls_t³⁴)})
//│ 								in _lh_listcomp_fun⁶⁰(_lh_nextSize_Wheel_1⁶)))) else (fun _lh_listcomp_fun⁶⁶ -> (fun _lh_nextSize_Wheel_1⁷ -> (fun _lh_nextSize_arg2¹⁴ -> [LH_N])))
//│ 				def zipWith_lz_lz₀₀₀(f⁵, xs², ys²) = 
//│ 					lazy⁰(case force⁰(xs²) of {
//│ 						LH_C hx¹ tx¹ => case force⁰(ys²) of {
//│ 							LH_C hy¹ ty¹ => [LH_C f⁵(hx¹, hy¹) zipWith_lz_lz₀₀₀(f⁵, tx¹, ty¹)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
