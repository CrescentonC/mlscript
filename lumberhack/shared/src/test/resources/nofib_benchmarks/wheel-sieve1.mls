:NewParser
:ParseOnly

// prime :: Int -> Int
// prime n = primes !! n
//   where
//     primes = sieve (wheels primes) primes (squares primes) n

// sieve (Wheel s ns:ws) ps qs input =
//   -- It's always the case that input*input > head ps,
//   -- but GHC doesn't know that. We do this so that stuff
//   -- isn't floated to top-level into a CAF.
//   [n' | o <- s:[s*2,s*3..(min (input*input) (head ps-1))*s],
//         n <- ns,
//         n'<- [n+o], noFactor n']
//   ++
//   sieve ws (tail ps) (tail qs) input
//   where
//   noFactor = if s<=2 then const True else notDivBy ps qs

// notDivBy (p:ps) (q:qs) n =
//   q > n || n `mod` p > 0 && notDivBy ps qs n

// squares :: [Int] -> [Int]
// squares ps = [p*p | p<-ps]

// wheels :: [Int] -> [Wheel]
// wheels ps = ws
//   where
//     ws = Wheel 1 [1] : zipWith nextSize ws ps

// nextSize (Wheel s ns) p =
//   Wheel (s*p) ns'
//   where
//   ns' = [n' | o <- [0,s..(p-1)*s],
//               n <- ns,
//               n' <- [n+o], n'`mod`p > 0]

// main = forM_ [1..100] $ const $ do
// 	[arg] <- getArgs
// 	print (prime (read arg))

// squares ps = map (\p -> p * p) ps
// min a b = if a > b then b else a
// noFactor s ps qs n = if (s<=2) then True else notDivBy ps qs n
// notDivBy (p:ps) (q:qs) n = (q > n) || (((n `mod` p) > 0) && (notDivBy ps qs n))
// nextSize (Wheel s ns) p = Wheel (s*p) [n' | o <- [0,s..((p-1)*s)], n <- ns, n' <- [n + o], (n' `mod` p) > 0]
// wheels ps = (Wheel 1 [1]):(zipWith nextSize (wheels ps) ps)
// sieve ((Wheel s ns):ws) ps qs input = [n' | o <- (s:[s*2,s*3..(min (input*input) ((head ps)-1))*s]), n <- ns, n'<- [n+o], noFactor s ps qs n'] ++ (sieve ws (tail ps) (tail qs) input)
// primes n = sieve (wheels (primes n)) (primes n) (squares (primes n)) n
// prime n = atIndex n (primes n)
// testWheelSieve1_nofib n = prime n
// testWheelSieve1_nofib $ primId 1000

:lhInHaskell
:lhGenOCaml
append_lz xs ys = case xs of {
  (x:xs) -> lazy (x:(append_lz xs ys));
  [] -> ys
}
squares ps = map_lz (\p -> p * p) ps
min a b = if a > b then b else a
noFactor s ps qs n = if (s<=2) then True else notDivBy ps qs n
notDivBy xs ys n = case (force ys) of {
  (q:qs) -> if (q > n)
            then True
            else case (force xs) of {
              (p:ps) -> (((n `mod` p) > 0) && (notDivBy ps qs n))
            }
}
nextSize (Wheel s ns) p = Wheel (s*p) [n' | o <- [0,s..((p-1)*s)], n <- ns, n' <- [n + o], (n' `mod` p) > 0]
wheels ps = lazy ((Wheel 1 [1]):(zipWith_lz_lz nextSize (wheels ps) ps))
sieve wls ps qs input = case (force wls) of {
  ((Wheel s ns):ws) ->
    append_lz [n' | o <- (s:[s*2,s*3..(min (input*input) ((head_lz ps)-1))*s]), n <- ns, n'<- [n+o], noFactor s ps qs n'] (sieve ws (tail_lz ps) (tail_lz qs) input)
}
primes n = lazy (sieve (wheels (primes n)) (primes n) (squares (primes n)) n)
prime n = atIndex_lz n (primes n)
testWheelSieve1_nofib n = prime n
testWheelSieve1_nofib $ primId 1000
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testWheelSieve1_nofib_lh^462(primId⁰(1000))
//│ def append_lz_lh(_lh_append_lz_arg1⁰, _lh_append_lz_arg2⁰) = 
//│ 	let _lh_matchIdent¹ = _lh_append_lz_arg1⁰
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_C _lh_append_lz_LH_C_0⁰ _lh_append_lz_LH_C_1⁰ => lazy⁰([LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh^341(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)])
//│ 		| LH_N  => _lh_append_lz_arg2⁰
//│ 		| _  => error⁰}
//│ def atIndex_lz_lh(n⁰, ls³) = if (n⁰ < 0) then error⁰ else case force⁰(ls³) of {
//│ 	LH_C h³ t⁴ => if (n⁰ == 0) then h³ else atIndex_lz_lh^103((n⁰ - 1), t⁴)
//│ 	| LH_N  => error⁰}
//│ def enumFromThenTo_lh(a⁰, t³, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromThenTo_lh^67(t³, ((2 * t³) - a⁰), b⁰)] else [LH_N]
//│ def head_lz_lh(ls¹) = case force⁰(ls¹) of {
//│ 	LH_C h¹ t¹ => h¹
//│ 	| LH_N  => error⁰}
//│ def map_lz_lh(f⁰, ls⁰) = lazy⁰(case force⁰(ls⁰) of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh^8(f⁰, t⁰)]
//│ 	| LH_N  => [LH_N]})
//│ def min_lh(_lh_min_arg1⁰, _lh_min_arg2⁰) = if (_lh_min_arg1⁰ > _lh_min_arg2⁰) then _lh_min_arg2⁰ else _lh_min_arg1⁰
//│ def nextSize_lh(_lh_nextSize_arg1⁰, _lh_nextSize_arg2⁰) = case _lh_nextSize_arg1⁰ of {
//│ 	Wheel _lh_nextSize_Wheel_0⁰ _lh_nextSize_Wheel_1⁰ => [Wheel (_lh_nextSize_Wheel_0⁰ * _lh_nextSize_arg2⁰) 
//│ 		let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 			LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => 
//│ 				let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 					LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => 
//│ 						let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 							LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)
//│ 							| LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ 						in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]])
//│ 					| LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ 				in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun³(enumFromThenTo_lh^315(0, _lh_nextSize_Wheel_0⁰, ((_lh_nextSize_arg2⁰ - 1) * _lh_nextSize_Wheel_0⁰)))]
//│ 	| _  => error⁰}
//│ def noFactor_lh(_lh_noFactor_arg1⁰, _lh_noFactor_arg2⁰, _lh_noFactor_arg3⁰, _lh_noFactor_arg4⁰) = if (_lh_noFactor_arg1⁰ <= 2) then [True] else notDivBy_lh^388(_lh_noFactor_arg2⁰, _lh_noFactor_arg3⁰, _lh_noFactor_arg4⁰)
//│ def notDivBy_lh(_lh_notDivBy_arg1⁰, _lh_notDivBy_arg2⁰, _lh_notDivBy_arg3⁰) = 
//│ 	let _lh_matchIdent² = force⁰(_lh_notDivBy_arg2⁰)
//│ 	in case _lh_matchIdent² of {
//│ 		LH_C _lh_notDivBy_LH_C_0⁰ _lh_notDivBy_LH_C_1⁰ => if (_lh_notDivBy_LH_C_0⁰ > _lh_notDivBy_arg3⁰) then [True] else 
//│ 			let _lh_matchIdent³ = force⁰(_lh_notDivBy_arg1⁰)
//│ 			in case _lh_matchIdent³ of {
//│ 				LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3⁰ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh^444(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3⁰))
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def prime_lh(_lh_prime_arg1⁰) = atIndex_lz_lh^411(_lh_prime_arg1⁰, primes_lh^414(_lh_prime_arg1⁰))
//│ def primes_lh(_lh_primes_arg1⁰) = lazy⁰(sieve_lh^119(wheels_lh^120(primes_lh^121(_lh_primes_arg1⁰)), primes_lh^126(_lh_primes_arg1⁰), squares_lh^130(primes_lh^131(_lh_primes_arg1⁰)), _lh_primes_arg1⁰))
//│ def sieve_lh(_lh_sieve_arg1⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_sieve_arg4⁰) = 
//│ 	let _lh_matchIdent⁰ = force⁰(_lh_sieve_arg1⁰)
//│ 	in case _lh_matchIdent⁰ of {
//│ 		LH_C _lh_sieve_LH_C_0⁰ _lh_sieve_LH_C_1⁰ => case _lh_sieve_LH_C_0⁰ of {
//│ 			Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh^149(
//│ 				let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 					LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 						let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => 
//│ 								let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 									LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh^153(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ 									| LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ 								in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]])
//│ 							| LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ 						in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰)
//│ 					| LH_N  => [LH_N]})
//│ 				in _lh_listcomp_fun⁰([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh^200((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh^214((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh^222(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh^237(_lh_sieve_LH_C_1⁰, tail_lz_lh^240(_lh_sieve_arg2⁰), tail_lz_lh^244(_lh_sieve_arg3⁰), _lh_sieve_arg4⁰))
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ def squares_lh(_lh_squares_arg1⁰) = map_lz_lh^400((fun p⁰ -> (p⁰ * p⁰)), _lh_squares_arg1⁰)
//│ def tail_lz_lh(ls²) = case force⁰(ls²) of {
//│ 	LH_C h² t² => t²
//│ 	| LH_N  => error⁰}
//│ def testWheelSieve1_nofib_lh(_lh_testWheelSieve1_nofib_arg1⁰) = prime_lh^140(_lh_testWheelSieve1_nofib_arg1⁰)
//│ def wheels_lh(_lh_wheels_arg1⁰) = lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh^370(nextSize_lh^371, wheels_lh^373(_lh_wheels_arg1⁰), _lh_wheels_arg1⁰)])
//│ def zipWith_lz_lz_lh(f¹, xs⁰, ys⁰) = lazy⁰(case force⁰(xs⁰) of {
//│ 	LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh^31(f¹, tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec atIndex_lz_lh n_0 ls_3 =
//│ 		  (if (n_0 < 0) then
//│ 		    (failwith "error")
//│ 		  else
//│ 		    (match (Lazy.force ls_3) with
//│ 		      | `LH_C(h_3, t_4) -> 
//│ 		        (if (n_0 = 0) then
//│ 		          h_3
//│ 		        else
//│ 		          ((atIndex_lz_lh (n_0 - 1)) t_4))
//│ 		      | `LH_N -> 
//│ 		        (failwith "error")));;
//│ 		let rec map_lz_lh f_0 ls_0 =
//│ 		  (lazy (match (Lazy.force ls_0) with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C((f_0 h_0), ((map_lz_lh f_0) t_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec squares_lh _lh_squares_arg1_0 =
//│ 		  ((map_lz_lh (fun p_0 -> 
//│ 		    (p_0 * p_0))) _lh_squares_arg1_0);;
//│ 		let rec append_lz_lh _lh_append_lz_arg1_0 _lh_append_lz_arg2_0 =
//│ 		  (let rec _lh_matchIdent_1 = _lh_append_lz_arg1_0 in
//│ 		    (match _lh_matchIdent_1 with
//│ 		      | `LH_C(_lh_append_lz_LH_C_0_0, _lh_append_lz_LH_C_1_0) -> 
//│ 		        (lazy (`LH_C(_lh_append_lz_LH_C_0_0, ((append_lz_lh _lh_append_lz_LH_C_1_0) _lh_append_lz_arg2_0))))
//│ 		      | `LH_N -> 
//│ 		        _lh_append_lz_arg2_0
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec min_lh _lh_min_arg1_0 _lh_min_arg2_0 =
//│ 		  (if (_lh_min_arg1_0 > _lh_min_arg2_0) then
//│ 		    _lh_min_arg2_0
//│ 		  else
//│ 		    _lh_min_arg1_0);;
//│ 		let rec tail_lz_lh ls_2 =
//│ 		  (match (Lazy.force ls_2) with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      t_2
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec notDivBy_lh _lh_notDivBy_arg1_0 _lh_notDivBy_arg2_0 _lh_notDivBy_arg3_0 =
//│ 		  (let rec _lh_matchIdent_2 = (Lazy.force _lh_notDivBy_arg2_0) in
//│ 		    (match _lh_matchIdent_2 with
//│ 		      | `LH_C(_lh_notDivBy_LH_C_0_0, _lh_notDivBy_LH_C_1_0) -> 
//│ 		        (if (_lh_notDivBy_LH_C_0_0 > _lh_notDivBy_arg3_0) then
//│ 		          true
//│ 		        else
//│ 		          (let rec _lh_matchIdent_3 = (Lazy.force _lh_notDivBy_arg1_0) in
//│ 		            (match _lh_matchIdent_3 with
//│ 		              | `LH_C(_lh_notDivBy_LH_C_0_1, _lh_notDivBy_LH_C_1_1) -> 
//│ 		                (((_lh_notDivBy_arg3_0 mod _lh_notDivBy_LH_C_0_1) > 0) && (((notDivBy_lh _lh_notDivBy_LH_C_1_1) _lh_notDivBy_LH_C_1_0) _lh_notDivBy_arg3_0))
//│ 		              | _ -> 
//│ 		                (failwith "error"))))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec noFactor_lh _lh_noFactor_arg1_0 _lh_noFactor_arg2_0 _lh_noFactor_arg3_0 _lh_noFactor_arg4_0 =
//│ 		  (if (_lh_noFactor_arg1_0 <= 2) then
//│ 		    true
//│ 		  else
//│ 		    (((notDivBy_lh _lh_noFactor_arg2_0) _lh_noFactor_arg3_0) _lh_noFactor_arg4_0));;
//│ 		let rec enumFromThenTo_lh a_0 t_3 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, (((enumFromThenTo_lh t_3) ((2 * t_3) - a_0)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec head_lz_lh ls_1 =
//│ 		  (match (Lazy.force ls_1) with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      h_1
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec sieve_lh _lh_sieve_arg1_0 _lh_sieve_arg2_0 _lh_sieve_arg3_0 _lh_sieve_arg4_0 =
//│ 		  (let rec _lh_matchIdent_0 = (Lazy.force _lh_sieve_arg1_0) in
//│ 		    (match _lh_matchIdent_0 with
//│ 		      | `LH_C(_lh_sieve_LH_C_0_0, _lh_sieve_LH_C_1_0) -> 
//│ 		        (match _lh_sieve_LH_C_0_0 with
//│ 		          | `Wheel(_lh_sieve_Wheel_0_0, _lh_sieve_Wheel_1_0) -> 
//│ 		            ((append_lz_lh (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		              (match _lh_listcomp_fun_para_0 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		                  (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		                    (match _lh_listcomp_fun_para_1 with
//│ 		                      | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                        (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		                          (match _lh_listcomp_fun_para_2 with
//│ 		                            | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		                              (if ((((noFactor_lh _lh_sieve_Wheel_0_0) _lh_sieve_arg2_0) _lh_sieve_arg3_0) _lh_listcomp_fun_ls_h_2) then
//│ 		                                (`LH_C(_lh_listcomp_fun_ls_h_2, (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		                              else
//│ 		                                (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))
//│ 		                            | `LH_N -> 
//│ 		                              (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))) in
//│ 		                          (_lh_listcomp_fun_2 (`LH_C((_lh_listcomp_fun_ls_h_1 + _lh_listcomp_fun_ls_h_0), (`LH_N)))))
//│ 		                      | `LH_N -> 
//│ 		                        (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))) in
//│ 		                    (_lh_listcomp_fun_1 _lh_sieve_Wheel_1_0))
//│ 		                | `LH_N -> 
//│ 		                  (`LH_N))) in
//│ 		              (_lh_listcomp_fun_0 (`LH_C(_lh_sieve_Wheel_0_0, (((enumFromThenTo_lh (_lh_sieve_Wheel_0_0 * 2)) (_lh_sieve_Wheel_0_0 * 3)) (((min_lh (_lh_sieve_arg4_0 * _lh_sieve_arg4_0)) ((head_lz_lh _lh_sieve_arg2_0) - 1)) * _lh_sieve_Wheel_0_0))))))) ((((sieve_lh _lh_sieve_LH_C_1_0) (tail_lz_lh _lh_sieve_arg2_0)) (tail_lz_lh _lh_sieve_arg3_0)) _lh_sieve_arg4_0))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec nextSize_lh _lh_nextSize_arg1_0 _lh_nextSize_arg2_0 =
//│ 		  (match _lh_nextSize_arg1_0 with
//│ 		    | `Wheel(_lh_nextSize_Wheel_0_0, _lh_nextSize_Wheel_1_0) -> 
//│ 		      (`Wheel((_lh_nextSize_Wheel_0_0 * _lh_nextSize_arg2_0), (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		        (match _lh_listcomp_fun_para_3 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		            (let rec _lh_listcomp_fun_4 = (fun _lh_listcomp_fun_para_4 -> 
//│ 		              (match _lh_listcomp_fun_para_4 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_4, _lh_listcomp_fun_ls_t_4) -> 
//│ 		                  (let rec _lh_listcomp_fun_5 = (fun _lh_listcomp_fun_para_5 -> 
//│ 		                    (match _lh_listcomp_fun_para_5 with
//│ 		                      | `LH_C(_lh_listcomp_fun_ls_h_5, _lh_listcomp_fun_ls_t_5) -> 
//│ 		                        (if ((_lh_listcomp_fun_ls_h_5 mod _lh_nextSize_arg2_0) > 0) then
//│ 		                          (`LH_C(_lh_listcomp_fun_ls_h_5, (_lh_listcomp_fun_5 _lh_listcomp_fun_ls_t_5)))
//│ 		                        else
//│ 		                          (_lh_listcomp_fun_5 _lh_listcomp_fun_ls_t_5))
//│ 		                      | `LH_N -> 
//│ 		                        (_lh_listcomp_fun_4 _lh_listcomp_fun_ls_t_4))) in
//│ 		                    (_lh_listcomp_fun_5 (`LH_C((_lh_listcomp_fun_ls_h_4 + _lh_listcomp_fun_ls_h_3), (`LH_N)))))
//│ 		                | `LH_N -> 
//│ 		                  (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3))) in
//│ 		              (_lh_listcomp_fun_4 _lh_nextSize_Wheel_1_0))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_3 (((enumFromThenTo_lh 0) _lh_nextSize_Wheel_0_0) ((_lh_nextSize_arg2_0 - 1) * _lh_nextSize_Wheel_0_0))))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec zipWith_lz_lz_lh f_1 xs_0 ys_0 =
//│ 		  (lazy (match (Lazy.force xs_0) with
//│ 		    | `LH_C(hx_0, tx_0) -> 
//│ 		      (match (Lazy.force ys_0) with
//│ 		        | `LH_C(hy_0, ty_0) -> 
//│ 		          (`LH_C(((f_1 hx_0) hy_0), (((zipWith_lz_lz_lh f_1) tx_0) ty_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec wheels_lh _lh_wheels_arg1_0 =
//│ 		  (lazy (`LH_C((`Wheel(1, (`LH_C(1, (`LH_N))))), (((zipWith_lz_lz_lh nextSize_lh) (wheels_lh _lh_wheels_arg1_0)) _lh_wheels_arg1_0))));;
//│ 		let rec primes_lh _lh_primes_arg1_0 =
//│ 		  (lazy ((((sieve_lh (wheels_lh (primes_lh _lh_primes_arg1_0))) (primes_lh _lh_primes_arg1_0)) (squares_lh (primes_lh _lh_primes_arg1_0))) _lh_primes_arg1_0));;
//│ 		let rec prime_lh _lh_prime_arg1_0 =
//│ 		  ((atIndex_lz_lh _lh_prime_arg1_0) (primes_lh _lh_prime_arg1_0));;
//│ 		let rec testWheelSieve1_nofib_lh _lh_testWheelSieve1_nofib_arg1_0 =
//│ 		  (prime_lh _lh_testWheelSieve1_nofib_arg1_0);;
//│ 		(testWheelSieve1_nofib_lh 1000)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52
//│ 	case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59
//│ 	case _lh_matchIdent³ of {LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3⁰ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3⁰)) | _  => error⁰}: 453
//│ 	case _lh_matchIdent² of {LH_C _lh_notDivBy_LH_C_0⁰ _lh_notDivBy_LH_C_1⁰ => if (_lh_notDivBy_LH_C_0⁰ > _lh_notDivBy_arg3⁰) then [True] else let _lh_matchIdent³ = force⁰(_lh_notDivBy_arg1⁰)
//│ in case _lh_matchIdent³ of {LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3⁰ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3⁰)) | _  => error⁰} | _  => error⁰}: 457
//│ [LH_N]: 14 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52
//│ 	case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59
//│ 	case _lh_matchIdent³ of {LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3⁰ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3⁰)) | _  => error⁰}: 453
//│ 	case _lh_matchIdent² of {LH_C _lh_notDivBy_LH_C_0⁰ _lh_notDivBy_LH_C_1⁰ => if (_lh_notDivBy_LH_C_0⁰ > _lh_notDivBy_arg3⁰) then [True] else let _lh_matchIdent³ = force⁰(_lh_notDivBy_arg1⁰)
//│ in case _lh_matchIdent³ of {LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3⁰ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3⁰)) | _  => error⁰} | _  => error⁰}: 457
//│ [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)]: 38 --->
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ 	case _lh_matchIdent⁰ of {LH_C _lh_sieve_LH_C_0⁰ _lh_sieve_LH_C_1⁰ => case _lh_sieve_LH_C_0⁰ of {Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh(_lh_sieve_LH_C_1⁰, tail_lz_lh(_lh_sieve_arg2⁰), tail_lz_lh(_lh_sieve_arg3⁰), _lh_sieve_arg4⁰)) | _  => error⁰} | _  => error⁰}: 254
//│ [LH_N]: 39 --->
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ 	case _lh_matchIdent⁰ of {LH_C _lh_sieve_LH_C_0⁰ _lh_sieve_LH_C_1⁰ => case _lh_sieve_LH_C_0⁰ of {Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh(_lh_sieve_LH_C_1⁰, tail_lz_lh(_lh_sieve_arg2⁰), tail_lz_lh(_lh_sieve_arg3⁰), _lh_sieve_arg4⁰)) | _  => error⁰} | _  => error⁰}: 254
//│ [LH_N]: 41 --->
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ 	case _lh_matchIdent⁰ of {LH_C _lh_sieve_LH_C_0⁰ _lh_sieve_LH_C_1⁰ => case _lh_sieve_LH_C_0⁰ of {Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh(_lh_sieve_LH_C_1⁰, tail_lz_lh(_lh_sieve_arg2⁰), tail_lz_lh(_lh_sieve_arg3⁰), _lh_sieve_arg4⁰)) | _  => error⁰} | _  => error⁰}: 254
//│ [LH_C a⁰ enumFromThenTo_lh(t³, ((2 * t³) - a⁰), b⁰)]: 82 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]}: 196
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰) | LH_N  => [LH_N]}: 312
//│ [LH_N]: 83 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]}: 196
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰) | LH_N  => [LH_N]}: 312
//│ [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 166 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_append_lz_LH_C_0⁰ _lh_append_lz_LH_C_1⁰ => lazy⁰([LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]) | LH_N  => _lh_append_lz_arg2⁰ | _  => error⁰}: 350
//│ [LH_N]: 182 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 174
//│ [LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]: 183 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 174
//│ [LH_N]: 195 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_append_lz_LH_C_0⁰ _lh_append_lz_LH_C_1⁰ => lazy⁰([LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]) | LH_N  => _lh_append_lz_arg2⁰ | _  => error⁰}: 350
//│ [LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]: 233 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]}: 196
//│ [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 282 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 189
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)}: 305
//│ [LH_N]: 298 --->
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 290
//│ [LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]: 299 --->
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 290
//│ [LH_N]: 311 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 189
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)}: 305
//│ [Wheel (_lh_nextSize_Wheel_0⁰ * _lh_nextSize_arg2⁰) let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(enumFromThenTo_lh(0, _lh_nextSize_Wheel_0⁰, ((_lh_nextSize_arg2⁰ - 1) * _lh_nextSize_Wheel_0⁰)))]: 332 --->
//│ 	case _lh_sieve_LH_C_0⁰ of {Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh(_lh_sieve_LH_C_1⁰, tail_lz_lh(_lh_sieve_arg2⁰), tail_lz_lh(_lh_sieve_arg3⁰), _lh_sieve_arg4⁰)) | _  => error⁰}: 252
//│ 	case _lh_nextSize_arg1⁰ of {Wheel _lh_nextSize_Wheel_0⁰ _lh_nextSize_Wheel_1⁰ => [Wheel (_lh_nextSize_Wheel_0⁰ * _lh_nextSize_arg2⁰) let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(enumFromThenTo_lh(0, _lh_nextSize_Wheel_0⁰, ((_lh_nextSize_arg2⁰ - 1) * _lh_nextSize_Wheel_0⁰)))] | _  => error⁰}: 334
//│ [LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]: 346 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁰) of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 15
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52
//│ 	case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59
//│ 	case force⁰(ls³) of {LH_C h³ t⁴ => if (n⁰ == 0) then h³ else atIndex_lz_lh((n⁰ - 1), t⁴) | LH_N  => error⁰}: 114
//│ 	case _lh_matchIdent³ of {LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3⁰ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3⁰)) | _  => error⁰}: 453
//│ 	case _lh_matchIdent² of {LH_C _lh_notDivBy_LH_C_0⁰ _lh_notDivBy_LH_C_1⁰ => if (_lh_notDivBy_LH_C_0⁰ > _lh_notDivBy_arg3⁰) then [True] else let _lh_matchIdent³ = force⁰(_lh_notDivBy_arg1⁰)
//│ in case _lh_matchIdent³ of {LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3⁰ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3⁰)) | _  => error⁰} | _  => error⁰}: 457
//│ [LH_N]: 367 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 189
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)}: 305
//│ [LH_C 1 [LH_N]]: 368 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 189
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)}: 305
//│ [Wheel 1 [LH_C 1 [LH_N]]]: 369 --->
//│ 	case _lh_sieve_LH_C_0⁰ of {Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh(_lh_sieve_LH_C_1⁰, tail_lz_lh(_lh_sieve_arg2⁰), tail_lz_lh(_lh_sieve_arg3⁰), _lh_sieve_arg4⁰)) | _  => error⁰}: 252
//│ 	case _lh_nextSize_arg1⁰ of {Wheel _lh_nextSize_Wheel_0⁰ _lh_nextSize_Wheel_1⁰ => [Wheel (_lh_nextSize_Wheel_0⁰ * _lh_nextSize_arg2⁰) let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(enumFromThenTo_lh(0, _lh_nextSize_Wheel_0⁰, ((_lh_nextSize_arg2⁰ - 1) * _lh_nextSize_Wheel_0⁰)))] | _  => error⁰}: 334
//│ [LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh(nextSize_lh, wheels_lh(_lh_wheels_arg1⁰), _lh_wheels_arg1⁰)]: 379 --->
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ 	case _lh_matchIdent⁰ of {LH_C _lh_sieve_LH_C_0⁰ _lh_sieve_LH_C_1⁰ => case _lh_sieve_LH_C_0⁰ of {Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh(_lh_sieve_LH_C_1⁰, tail_lz_lh(_lh_sieve_arg2⁰), tail_lz_lh(_lh_sieve_arg3⁰), _lh_sieve_arg4⁰)) | _  => error⁰} | _  => error⁰}: 254
//│ ------------------
//│ case force⁰(ls⁰) of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 15 --->
//│ 	[LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]: 346
//│ case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40 --->
//│ 	[LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]: 346
//│ case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42 --->
//│ 	[LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)]: 38
//│ 	[LH_N]: 39
//│ 	[LH_N]: 41
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh(nextSize_lh, wheels_lh(_lh_wheels_arg1⁰), _lh_wheels_arg1⁰)]: 379
//│ case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13
//│ 	[LH_N]: 14
//│ 	[LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]: 346
//│ case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13
//│ 	[LH_N]: 14
//│ 	[LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]: 346
//│ case force⁰(ls³) of {LH_C h³ t⁴ => if (n⁰ == 0) then h³ else atIndex_lz_lh((n⁰ - 1), t⁴) | LH_N  => error⁰}: 114 --->
//│ 	[LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]: 346
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 174 --->
//│ 	[LH_N]: 182
//│ 	[LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]: 183
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 189 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 282
//│ 	[LH_N]: 311
//│ 	[LH_N]: 367
//│ 	[LH_C 1 [LH_N]]: 368
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]}: 196 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t³, ((2 * t³) - a⁰), b⁰)]: 82
//│ 	[LH_N]: 83
//│ 	[LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]: 233
//│ case _lh_sieve_LH_C_0⁰ of {Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh(_lh_sieve_LH_C_1⁰, tail_lz_lh(_lh_sieve_arg2⁰), tail_lz_lh(_lh_sieve_arg3⁰), _lh_sieve_arg4⁰)) | _  => error⁰}: 252 --->
//│ 	[Wheel (_lh_nextSize_Wheel_0⁰ * _lh_nextSize_arg2⁰) let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(enumFromThenTo_lh(0, _lh_nextSize_Wheel_0⁰, ((_lh_nextSize_arg2⁰ - 1) * _lh_nextSize_Wheel_0⁰)))]: 332
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 369
//│ case _lh_matchIdent⁰ of {LH_C _lh_sieve_LH_C_0⁰ _lh_sieve_LH_C_1⁰ => case _lh_sieve_LH_C_0⁰ of {Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²([LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]) | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(_lh_sieve_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4⁰ * _lh_sieve_arg4⁰), (head_lz_lh(_lh_sieve_arg2⁰) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh(_lh_sieve_LH_C_1⁰, tail_lz_lh(_lh_sieve_arg2⁰), tail_lz_lh(_lh_sieve_arg3⁰), _lh_sieve_arg4⁰)) | _  => error⁰} | _  => error⁰}: 254 --->
//│ 	[LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)]: 38
//│ 	[LH_N]: 39
//│ 	[LH_N]: 41
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh(nextSize_lh, wheels_lh(_lh_wheels_arg1⁰), _lh_wheels_arg1⁰)]: 379
//│ case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 290 --->
//│ 	[LH_N]: 298
//│ 	[LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]: 299
//│ case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)}: 305 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 282
//│ 	[LH_N]: 311
//│ 	[LH_N]: 367
//│ 	[LH_C 1 [LH_N]]: 368
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰) | LH_N  => [LH_N]}: 312 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t³, ((2 * t³) - a⁰), b⁰)]: 82
//│ 	[LH_N]: 83
//│ case _lh_nextSize_arg1⁰ of {Wheel _lh_nextSize_Wheel_0⁰ _lh_nextSize_Wheel_1⁰ => [Wheel (_lh_nextSize_Wheel_0⁰ * _lh_nextSize_arg2⁰) let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(enumFromThenTo_lh(0, _lh_nextSize_Wheel_0⁰, ((_lh_nextSize_arg2⁰ - 1) * _lh_nextSize_Wheel_0⁰)))] | _  => error⁰}: 334 --->
//│ 	[Wheel (_lh_nextSize_Wheel_0⁰ * _lh_nextSize_arg2⁰) let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵([LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]) | LH_N  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)})
//│ in _lh_listcomp_fun⁴(_lh_nextSize_Wheel_1⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(enumFromThenTo_lh(0, _lh_nextSize_Wheel_0⁰, ((_lh_nextSize_arg2⁰ - 1) * _lh_nextSize_Wheel_0⁰)))]: 332
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 369
//│ case _lh_matchIdent¹ of {LH_C _lh_append_lz_LH_C_0⁰ _lh_append_lz_LH_C_1⁰ => lazy⁰([LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]) | LH_N  => _lh_append_lz_arg2⁰ | _  => error⁰}: 350 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 166
//│ 	[LH_N]: 195
//│ case _lh_matchIdent³ of {LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3⁰ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3⁰)) | _  => error⁰}: 453 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13
//│ 	[LH_N]: 14
//│ 	[LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]: 346
//│ case _lh_matchIdent² of {LH_C _lh_notDivBy_LH_C_0⁰ _lh_notDivBy_LH_C_1⁰ => if (_lh_notDivBy_LH_C_0⁰ > _lh_notDivBy_arg3⁰) then [True] else let _lh_matchIdent³ = force⁰(_lh_notDivBy_arg1⁰)
//│ in case _lh_matchIdent³ of {LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3⁰ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3⁰)) | _  => error⁰} | _  => error⁰}: 457 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13
//│ 	[LH_N]: 14
//│ 	[LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]: 346
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 166 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_append_lz_LH_C_0⁰ _lh_append_lz_LH_C_1⁰ => lazy⁰([LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]) | LH_N  => _lh_append_lz_arg2⁰ | _  => error⁰}: 350
//│ [LH_N]: 182 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 174
//│ [LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]: 183 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 174
//│ [LH_N]: 195 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_append_lz_LH_C_0⁰ _lh_append_lz_LH_C_1⁰ => lazy⁰([LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]) | LH_N  => _lh_append_lz_arg2⁰ | _  => error⁰}: 350
//│ [LH_N]: 298 --->
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 290
//│ [LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]: 299 --->
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 290
//│ ------------------
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if noFactor_lh(_lh_sieve_Wheel_0⁰, _lh_sieve_arg2⁰, _lh_sieve_arg3⁰, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 174 --->
//│ 	[LH_N]: 182
//│ 	[LH_C (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰) [LH_N]]: 183
//│ case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => if ((_lh_listcomp_fun_ls_h⁵ % _lh_nextSize_arg2⁰) > 0) then [LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] else _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵) | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 290 --->
//│ 	[LH_N]: 298
//│ 	[LH_C (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³) [LH_N]]: 299
//│ case _lh_matchIdent¹ of {LH_C _lh_append_lz_LH_C_0⁰ _lh_append_lz_LH_C_1⁰ => lazy⁰([LH_C _lh_append_lz_LH_C_0⁰ append_lz_lh(_lh_append_lz_LH_C_1⁰, _lh_append_lz_arg2⁰)]) | LH_N  => _lh_append_lz_arg2⁰ | _  => error⁰}: 350 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 166
//│ 	[LH_N]: 195
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testWheelSieve1_nofib_lh(primId⁰(1000))
//│ def append_lz_lh(_lh_append_lz_arg1¹, _lh_append_lz_arg2¹) = 
//│ 	let _lh_matchIdent⁴ = _lh_append_lz_arg1¹
//│ 	in _lh_matchIdent⁴(_lh_append_lz_arg2¹)
//│ def atIndex_lz_lh(n¹, ls⁷) = if (n¹ < 0) then error⁰ else case force⁰(ls⁷) of {
//│ 	LH_C h³ t⁴ => if (n¹ == 0) then h³ else atIndex_lz_lh((n¹ - 1), t⁴)
//│ 	| LH_N  => error⁰}
//│ def enumFromThenTo_lh(a¹, t⁵, b¹) = if (a¹ <= b¹) then [LH_C a¹ enumFromThenTo_lh(t⁵, ((2 * t⁵) - a¹), b¹)] else [LH_N]
//│ def head_lz_lh(ls⁶) = case force⁰(ls⁶) of {
//│ 	LH_C h¹ t¹ => h¹
//│ 	| LH_N  => error⁰}
//│ def map_lz_lh(f³, ls⁵) = lazy⁰(case force⁰(ls⁵) of {
//│ 	LH_C h⁰ t⁰ => [LH_C f³(h⁰) map_lz_lh(f³, t⁰)]
//│ 	| LH_N  => [LH_N]})
//│ def min_lh(_lh_min_arg1¹, _lh_min_arg2¹) = if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ def nextSize_lh(_lh_nextSize_arg1¹, _lh_nextSize_arg2¹) = case _lh_nextSize_arg1¹ of {
//│ 	Wheel _lh_nextSize_Wheel_0⁰ _lh_nextSize_Wheel_1⁰ => [Wheel (_lh_nextSize_Wheel_0⁰ * _lh_nextSize_arg2¹) 
//│ 		let _lh_listcomp_fun¹³ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 			LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => 
//│ 				let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 					LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => 
//│ 						let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun¹⁵, _lh_nextSize_arg2¹, _lh_listcomp_fun_ls_t⁴, _lh_listcomp_fun¹⁴))
//│ 						in _lh_listcomp_fun¹⁵(
//│ 							let _lh_listcomp_fun_ls_t⁹ = (fun _lh_listcomp_fun¹⁸ -> (fun _lh_nextSize_arg2³ -> (fun _lh_listcomp_fun_ls_t¹¹ -> (fun _lh_listcomp_fun¹⁹ -> _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹¹)))))
//│ 							in let _lh_listcomp_fun_ls_h⁷ = (_lh_listcomp_fun_ls_h⁴ + _lh_listcomp_fun_ls_h³)
//│ 							in (fun _lh_listcomp_fun¹⁶ -> (fun _lh_nextSize_arg2² -> (fun _lh_listcomp_fun_ls_t¹⁰ -> (fun _lh_listcomp_fun¹⁷ -> if ((_lh_listcomp_fun_ls_h⁷ % _lh_nextSize_arg2²) > 0) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t⁹)] else _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t⁹))))))
//│ 					| LH_N  => _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t³)})
//│ 				in _lh_listcomp_fun¹⁴(_lh_nextSize_Wheel_1⁰)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun¹³(enumFromThenTo_lh(0, _lh_nextSize_Wheel_0⁰, ((_lh_nextSize_arg2¹ - 1) * _lh_nextSize_Wheel_0⁰)))]
//│ 	| _  => error⁰}
//│ def noFactor_lh(_lh_noFactor_arg1¹, _lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹) = if (_lh_noFactor_arg1¹ <= 2) then [True] else notDivBy_lh(_lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹)
//│ def notDivBy_lh(_lh_notDivBy_arg1¹, _lh_notDivBy_arg2¹, _lh_notDivBy_arg3¹) = 
//│ 	let _lh_matchIdent⁶ = force⁰(_lh_notDivBy_arg2¹)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_C _lh_notDivBy_LH_C_0⁰ _lh_notDivBy_LH_C_1⁰ => if (_lh_notDivBy_LH_C_0⁰ > _lh_notDivBy_arg3¹) then [True] else 
//│ 			let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1¹)
//│ 			in case _lh_matchIdent⁷ of {
//│ 				LH_C _lh_notDivBy_LH_C_0¹ _lh_notDivBy_LH_C_1¹ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0¹) > 0) && notDivBy_lh(_lh_notDivBy_LH_C_1¹, _lh_notDivBy_LH_C_1⁰, _lh_notDivBy_arg3¹))
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def prime_lh(_lh_prime_arg1¹) = atIndex_lz_lh(_lh_prime_arg1¹, primes_lh(_lh_prime_arg1¹))
//│ def primes_lh(_lh_primes_arg1¹) = lazy⁰(sieve_lh(wheels_lh(primes_lh(_lh_primes_arg1¹)), primes_lh(_lh_primes_arg1¹), squares_lh(primes_lh(_lh_primes_arg1¹)), _lh_primes_arg1¹))
//│ def sieve_lh(_lh_sieve_arg1¹, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_sieve_arg4¹) = 
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_sieve_arg1¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_C _lh_sieve_LH_C_0⁰ _lh_sieve_LH_C_1⁰ => case _lh_sieve_LH_C_0⁰ of {
//│ 			Wheel _lh_sieve_Wheel_0⁰ _lh_sieve_Wheel_1⁰ => append_lz_lh(
//│ 				let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 					LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 						let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => 
//│ 								let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun⁸, _lh_sieve_Wheel_0⁰, _lh_sieve_arg2¹, _lh_sieve_arg3¹, _lh_listcomp_fun_ls_t¹, _lh_listcomp_fun⁷))
//│ 								in _lh_listcomp_fun⁸(
//│ 									let _lh_listcomp_fun_ls_t⁶ = (fun _lh_listcomp_fun¹¹ -> (fun _lh_sieve_Wheel_0² -> (fun _lh_sieve_arg2³ -> (fun _lh_sieve_arg3³ -> (fun _lh_listcomp_fun_ls_t⁸ -> (fun _lh_listcomp_fun¹² -> _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁸)))))))
//│ 									in let _lh_listcomp_fun_ls_h⁶ = (_lh_listcomp_fun_ls_h¹ + _lh_listcomp_fun_ls_h⁰)
//│ 									in (fun _lh_listcomp_fun⁹ -> (fun _lh_sieve_Wheel_0¹ -> (fun _lh_sieve_arg2² -> (fun _lh_sieve_arg3² -> (fun _lh_listcomp_fun_ls_t⁷ -> (fun _lh_listcomp_fun¹⁰ -> if noFactor_lh(_lh_sieve_Wheel_0¹, _lh_sieve_arg2², _lh_sieve_arg3², _lh_listcomp_fun_ls_h⁶) then 
//│ 										let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁶)
//│ 										in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h⁶
//│ 										in (fun _lh_append_lz_arg2² -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2²)])) else _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁶))))))))
//│ 							| LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁰)})
//│ 						in _lh_listcomp_fun⁷(_lh_sieve_Wheel_1⁰)
//│ 					| LH_N  => (fun _lh_append_lz_arg2³ -> _lh_append_lz_arg2³)})
//│ 				in _lh_listcomp_fun⁶([LH_C _lh_sieve_Wheel_0⁰ enumFromThenTo_lh((_lh_sieve_Wheel_0⁰ * 2), (_lh_sieve_Wheel_0⁰ * 3), (min_lh((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh(_lh_sieve_arg2¹) - 1)) * _lh_sieve_Wheel_0⁰))]), sieve_lh(_lh_sieve_LH_C_1⁰, tail_lz_lh(_lh_sieve_arg2¹), tail_lz_lh(_lh_sieve_arg3¹), _lh_sieve_arg4¹))
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ def squares_lh(_lh_squares_arg1¹) = map_lz_lh((fun p¹ -> (p¹ * p¹)), _lh_squares_arg1¹)
//│ def tail_lz_lh(ls⁴) = case force⁰(ls⁴) of {
//│ 	LH_C h² t² => t²
//│ 	| LH_N  => error⁰}
//│ def testWheelSieve1_nofib_lh(_lh_testWheelSieve1_nofib_arg1¹) = prime_lh(_lh_testWheelSieve1_nofib_arg1¹)
//│ def wheels_lh(_lh_wheels_arg1¹) = lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh(nextSize_lh, wheels_lh(_lh_wheels_arg1¹), _lh_wheels_arg1¹)])
//│ def zipWith_lz_lz_lh(f², xs¹, ys¹) = lazy⁰(case force⁰(xs¹) of {
//│ 	LH_C hx⁰ tx⁰ => case force⁰(ys¹) of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C f²(hx⁰, hy⁰) zipWith_lz_lz_lh(f², tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testWheelSieve1_nofib_lh^1] (hopeless to continue)
//│ 	[testWheelSieve1_nofib_lh^1 · prime_lh^202] (using original def)
//│ 		[testWheelSieve1_nofib_lh^1 · prime_lh^202 · atIndex_lz_lh^426] (using original def)
//│ 			[testWheelSieve1_nofib_lh^1 · prime_lh^202 · atIndex_lz_lh^426 · atIndex_lz_lh^449] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · atIndex_lz_lh^426] (using original def)
//│ 		[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429] (using original def)
//│ 			[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · primes_lh^407] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429] (using original def)
//│ 			[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · primes_lh^412] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429] (using original def)
//│ 			[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · primes_lh^417] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429] (using original def)
//│ 			[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · append_lz_lh^103] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · append_lz_lh^56] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · enumFromThenTo_lh^142] (using original def)
//│ 					[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · enumFromThenTo_lh^142 · enumFromThenTo_lh^376] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · enumFromThenTo_lh^142] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · head_lz_lh^164] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · min_lh^156] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · noFactor_lh^88] (using original def)
//│ 					[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · noFactor_lh^88 · notDivBy_lh^347] (using original def)
//│ 						[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · noFactor_lh^88 · notDivBy_lh^347 · notDivBy_lh^489] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · noFactor_lh^88 · notDivBy_lh^347] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · sieve_lh^179] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · tail_lz_lh^182] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · sieve_lh^405 · tail_lz_lh^186] (using original def)
//│ 			[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · squares_lh^416] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · squares_lh^416 · map_lz_lh^359] (using original def)
//│ 					[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · squares_lh^416 · map_lz_lh^359 · map_lz_lh^312] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · squares_lh^416 · map_lz_lh^359] (using original def)
//│ 			[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406 · nextSize_lh^330] (using original def)
//│ 					[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406 · nextSize_lh^330 · enumFromThenTo_lh^283] (using original def)
//│ 						[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406 · nextSize_lh^330 · enumFromThenTo_lh^283 · enumFromThenTo_lh^376] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406 · nextSize_lh^330 · enumFromThenTo_lh^283] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406 · wheels_lh^332] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406] (using original def)
//│ 				[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406 · zipWith_lz_lz_lh^329] (using original def)
//│ 					[testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406 · zipWith_lz_lz_lh^329 · zipWith_lz_lz_lh^25] ---> [testWheelSieve1_nofib_lh^1 · prime_lh^202 · primes_lh^429 · wheels_lh^406 · zipWith_lz_lz_lh^329] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testWheelSieve1_nofib_lh_₀(primId⁰(1000))
//│ def testWheelSieve1_nofib_lh_₀(_lh_testWheelSieve1_nofib_arg1¹) = 
//│ 	prime_lh_₀(_lh_testWheelSieve1_nofib_arg1¹)
//│ 	where
//│ 	def prime_lh_₀(_lh_prime_arg1¹) = 
//│ 		atIndex_lz_lh_₀(_lh_prime_arg1¹, primes_lh_₀(_lh_prime_arg1¹))
//│ 		where
//│ 		def atIndex_lz_lh_₀(n¹, ls⁴) = 
//│ 			if (n¹ < 0) then error⁰ else case force⁰(ls⁴) of {
//│ 				LH_C h⁴ t⁵ => if (n¹ == 0) then h⁴ else atIndex_lz_lh_₀((n¹ - 1), t⁵)
//│ 				| LH_N  => error⁰}
//│ 		def primes_lh_₀(_lh_primes_arg1¹) = 
//│ 			lazy⁰(sieve_lh_₀(wheels_lh_₀(primes_lh_₀(_lh_primes_arg1¹)), primes_lh_₀(_lh_primes_arg1¹), squares_lh_₀(primes_lh_₀(_lh_primes_arg1¹)), _lh_primes_arg1¹))
//│ 			where
//│ 			def sieve_lh_₀(_lh_sieve_arg1¹, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_sieve_arg4¹) = 
//│ 				let _lh_matchIdent⁸ = force⁰(_lh_sieve_arg1¹)
//│ 				in case _lh_matchIdent⁸ of {
//│ 					LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {
//│ 						Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(
//│ 							let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 								LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => 
//│ 									let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 										LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => 
//│ 											let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ 											in _lh_listcomp_fun²³(
//│ 												let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ 												in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ 												in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then 
//│ 													let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ 													in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ 													in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷))))))))
//│ 										| LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ 									in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹)
//│ 								| LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)})
//│ 							in _lh_listcomp_fun²¹([LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2³), tail_lz_lh_₁(_lh_sieve_arg3³), _lh_sieve_arg4¹))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def append_lz_lh_₀(_lh_append_lz_arg1², _lh_append_lz_arg2⁴) = 
//│ 					let _lh_matchIdent⁵ = _lh_append_lz_arg1²
//│ 					in _lh_matchIdent⁵(_lh_append_lz_arg2⁴)
//│ 				def append_lz_lh_₁(_lh_append_lz_arg1¹, _lh_append_lz_arg2³) = 
//│ 					let _lh_matchIdent⁴ = _lh_append_lz_arg1¹
//│ 					in _lh_matchIdent⁴(_lh_append_lz_arg2³)
//│ 				def enumFromThenTo_lh_₀(a², t⁸, b²) = 
//│ 					if (a² <= b²) then [LH_C a² enumFromThenTo_lh_₀(t⁸, ((2 * t⁸) - a²), b²)] else [LH_N]
//│ 				def head_lz_lh_₀(ls⁶) = 
//│ 					case force⁰(ls⁶) of {
//│ 						LH_C h⁶ t⁹ => h⁶
//│ 						| LH_N  => error⁰}
//│ 				def min_lh_₀(_lh_min_arg1¹, _lh_min_arg2¹) = 
//│ 					if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ 				def noFactor_lh_₀(_lh_noFactor_arg1¹, _lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹) = 
//│ 					if (_lh_noFactor_arg1¹ <= 2) then [True] else notDivBy_lh_₀(_lh_noFactor_arg2¹, _lh_noFactor_arg3¹, _lh_noFactor_arg4¹)
//│ 					where
//│ 					def notDivBy_lh_₀(_lh_notDivBy_arg1¹, _lh_notDivBy_arg2¹, _lh_notDivBy_arg3¹) = 
//│ 						let _lh_matchIdent⁶ = force⁰(_lh_notDivBy_arg2¹)
//│ 						in case _lh_matchIdent⁶ of {
//│ 							LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else 
//│ 								let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1¹)
//│ 								in case _lh_matchIdent⁷ of {
//│ 									LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_lh_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹))
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 				def tail_lz_lh_₀(ls⁵) = 
//│ 					case force⁰(ls⁵) of {
//│ 						LH_C h⁵ t⁶ => t⁶
//│ 						| LH_N  => error⁰}
//│ 				def tail_lz_lh_₁(ls⁸) = 
//│ 					case force⁰(ls⁸) of {
//│ 						LH_C h⁸ t¹¹ => t¹¹
//│ 						| LH_N  => error⁰}
//│ 			def squares_lh_₀(_lh_squares_arg1¹) = 
//│ 				map_lz_lh_₀((fun p¹ -> (p¹ * p¹)), _lh_squares_arg1¹)
//│ 				where
//│ 				def map_lz_lh_₀(f², ls⁷) = 
//│ 					lazy⁰(case force⁰(ls⁷) of {
//│ 						LH_C h⁷ t¹⁰ => [LH_C f²(h⁷) map_lz_lh_₀(f², t¹⁰)]
//│ 						| LH_N  => [LH_N]})
//│ 			def wheels_lh_₀(_lh_wheels_arg1¹) = 
//│ 				lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh_₀(nextSize_lh_₀, wheels_lh_₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)])
//│ 				where
//│ 				def nextSize_lh_₀(_lh_nextSize_arg1¹, _lh_nextSize_arg2³) = 
//│ 					case _lh_nextSize_arg1¹ of {
//│ 						Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2³) 
//│ 							let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 								LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => 
//│ 									let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 										LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => 
//│ 											let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ 											in _lh_listcomp_fun¹⁶(
//│ 												let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ 												in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ 												in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²))))))
//│ 										| LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ 									in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹)
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun¹⁴(enumFromThenTo_lh_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2³ - 1) * _lh_nextSize_Wheel_0¹)))]
//│ 						| _  => error⁰}
//│ 					where
//│ 					def enumFromThenTo_lh_₁(a¹, t⁷, b¹) = 
//│ 						if (a¹ <= b¹) then [LH_C a¹ enumFromThenTo_lh_₁(t⁷, ((2 * t⁷) - a¹), b¹)] else [LH_N]
//│ 				def zipWith_lz_lz_lh_₀(f³, xs¹, ys¹) = 
//│ 					lazy⁰(case force⁰(xs¹) of {
//│ 						LH_C hx¹ tx¹ => case force⁰(ys¹) of {
//│ 							LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)]: 558 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)}: 574
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)}: 952
//│ [LH_N]: 580 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)}: 574
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)}: 952
//│ [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2³) let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromThenTo_lh_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2³ - 1) * _lh_nextSize_Wheel_0¹)))]: 601 --->
//│ 	case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2³) let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromThenTo_lh_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2³ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 603
//│ 	case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)})
//│ in _lh_listcomp_fun²¹([LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2³), tail_lz_lh_₁(_lh_sieve_arg3³), _lh_sieve_arg4¹)) | _  => error⁰}: 1016
//│ [LH_C a¹ enumFromThenTo_lh_₁(t⁷, ((2 * t⁷) - a¹), b¹)]: 664 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 581
//│ [LH_N]: 665 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 581
//│ [LH_C a² enumFromThenTo_lh_₀(t⁸, ((2 * t⁸) - a²), b²)]: 803 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)}: 960
//│ [LH_N]: 804 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)}: 960
//│ [LH_C f²(h⁷) map_lz_lh_₀(f², t¹⁰)]: 839 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_lh_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 715
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t¹¹ => t¹¹ | LH_N  => error⁰}: 1047
//│ [LH_N]: 840 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_lh_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 715
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t¹¹ => t¹¹ | LH_N  => error⁰}: 1047
//│ [LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)]: 864 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 868
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)})
//│ in _lh_listcomp_fun²¹([LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2³), tail_lz_lh_₁(_lh_sieve_arg3³), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1018
//│ [LH_N]: 865 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 868
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)})
//│ in _lh_listcomp_fun²¹([LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2³), tail_lz_lh_₁(_lh_sieve_arg3³), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1018
//│ [LH_N]: 867 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 868
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)})
//│ in _lh_listcomp_fun²¹([LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2³), tail_lz_lh_₁(_lh_sieve_arg3³), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1018
//│ [LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)]: 930 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁴) of {LH_C h⁴ t⁵ => if (n¹ == 0) then h⁴ else atIndex_lz_lh_₀((n¹ - 1), t⁵) | LH_N  => error⁰}: 632
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁶ => t⁶ | LH_N  => error⁰}: 641
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_lh_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰}: 711
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁹ => h⁶ | LH_N  => error⁰}: 825
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t¹⁰ => [LH_C f²(h⁷) map_lz_lh_₀(f², t¹⁰)] | LH_N  => [LH_N]}: 841
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]}: 866
//│ [LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]: 997 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)}: 960
//│ [LH_N]: 1027 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)}: 574
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)}: 952
//│ [LH_C 1 [LH_N]]: 1028 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)}: 574
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)}: 952
//│ [Wheel 1 [LH_C 1 [LH_N]]]: 1029 --->
//│ 	case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2³) let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromThenTo_lh_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2³ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 603
//│ 	case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)})
//│ in _lh_listcomp_fun²¹([LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2³), tail_lz_lh_₁(_lh_sieve_arg3³), _lh_sieve_arg4¹)) | _  => error⁰}: 1016
//│ [LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh_₀(nextSize_lh_₀, wheels_lh_₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 1039 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 868
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)})
//│ in _lh_listcomp_fun²¹([LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2³), tail_lz_lh_₁(_lh_sieve_arg3³), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1018
//│ ------------------
//│ case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)}: 574 --->
//│ 	DeadCodeProd
//│ 	[LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)]: 558
//│ 	[LH_N]: 580
//│ 	[LH_N]: 1027
//│ 	[LH_C 1 [LH_N]]: 1028
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 581 --->
//│ 	[LH_C a¹ enumFromThenTo_lh_₁(t⁷, ((2 * t⁷) - a¹), b¹)]: 664
//│ 	[LH_N]: 665
//│ case _lh_nextSize_arg1¹ of {Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2³) let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromThenTo_lh_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2³ - 1) * _lh_nextSize_Wheel_0¹)))] | _  => error⁰}: 603 --->
//│ 	[Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2³) let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromThenTo_lh_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2³ - 1) * _lh_nextSize_Wheel_0¹)))]: 601
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 1029
//│ case force⁰(ls⁴) of {LH_C h⁴ t⁵ => if (n¹ == 0) then h⁴ else atIndex_lz_lh_₀((n¹ - 1), t⁵) | LH_N  => error⁰}: 632 --->
//│ 	DeadCodeProd
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)]: 930
//│ case force⁰(ls⁵) of {LH_C h⁵ t⁶ => t⁶ | LH_N  => error⁰}: 641 --->
//│ 	DeadCodeProd
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)]: 930
//│ case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_lh_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰}: 711 --->
//│ 	DeadCodeProd
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)]: 930
//│ case _lh_matchIdent⁶ of {LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3¹) then [True] else let _lh_matchIdent⁷ = force⁰(_lh_notDivBy_arg1¹)
//│ in case _lh_matchIdent⁷ of {LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3¹ % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_lh_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3¹)) | _  => error⁰} | _  => error⁰}: 715 --->
//│ 	[LH_C f²(h⁷) map_lz_lh_₀(f², t¹⁰)]: 839
//│ 	[LH_N]: 840
//│ case force⁰(ls⁶) of {LH_C h⁶ t⁹ => h⁶ | LH_N  => error⁰}: 825 --->
//│ 	DeadCodeProd
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)]: 930
//│ case force⁰(ls⁷) of {LH_C h⁷ t¹⁰ => [LH_C f²(h⁷) map_lz_lh_₀(f², t¹⁰)] | LH_N  => [LH_N]}: 841 --->
//│ 	DeadCodeProd
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)]: 930
//│ case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]}: 866 --->
//│ 	DeadCodeProd
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)]: 930
//│ case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 868 --->
//│ 	[LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)]: 864
//│ 	[LH_N]: 865
//│ 	[LH_N]: 867
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh_₀(nextSize_lh_₀, wheels_lh_₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 1039
//│ case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)}: 952 --->
//│ 	DeadCodeProd
//│ 	[LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)]: 558
//│ 	[LH_N]: 580
//│ 	[LH_N]: 1027
//│ 	[LH_C 1 [LH_N]]: 1028
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)}: 960 --->
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁸, ((2 * t⁸) - a²), b²)]: 803
//│ 	[LH_N]: 804
//│ 	[LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]: 997
//│ case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)})
//│ in _lh_listcomp_fun²¹([LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2³), tail_lz_lh_₁(_lh_sieve_arg3³), _lh_sieve_arg4¹)) | _  => error⁰}: 1016 --->
//│ 	[Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2³) let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromThenTo_lh_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2³ - 1) * _lh_nextSize_Wheel_0¹)))]: 601
//│ 	[Wheel 1 [LH_C 1 [LH_N]]]: 1029
//│ case _lh_matchIdent⁸ of {LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)})
//│ in _lh_listcomp_fun²¹([LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2³), tail_lz_lh_₁(_lh_sieve_arg3³), _lh_sieve_arg4¹)) | _  => error⁰} | _  => error⁰}: 1018 --->
//│ 	[LH_C f³(hx¹, hy¹) zipWith_lz_lz_lh_₀(f³, tx¹, ty¹)]: 864
//│ 	[LH_N]: 865
//│ 	[LH_N]: 867
//│ 	[LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh_₀(nextSize_lh_₀, wheels_lh_₀(_lh_wheels_arg1¹), _lh_wheels_arg1¹)]: 1039
//│ case force⁰(ls⁸) of {LH_C h⁸ t¹¹ => t¹¹ | LH_N  => error⁰}: 1047 --->
//│ 	[LH_C f²(h⁷) map_lz_lh_₀(f², t¹⁰)]: 839
//│ 	[LH_N]: 840
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C a¹ enumFromThenTo_lh_₁(t⁷, ((2 * t⁷) - a¹), b¹)]: 664 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 581
//│ [LH_N]: 665 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 581
//│ [LH_C a² enumFromThenTo_lh_₀(t⁸, ((2 * t⁸) - a²), b²)]: 803 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)}: 960
//│ [LH_N]: 804 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)}: 960
//│ [LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]: 997 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)}: 960
//│ ------------------
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun¹⁶, _lh_nextSize_arg2³, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁶(let _lh_listcomp_fun_ls_t¹² = (fun _lh_listcomp_fun¹⁷ -> (fun _lh_nextSize_arg2⁴ -> (fun _lh_listcomp_fun_ls_t¹³ -> (fun _lh_listcomp_fun¹⁸ -> _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹³)))))
//│ in let _lh_listcomp_fun_ls_h⁸ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h⁶)
//│ in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_nextSize_arg2⁵ -> (fun _lh_listcomp_fun_ls_t¹⁴ -> (fun _lh_listcomp_fun²⁰ -> if ((_lh_listcomp_fun_ls_h⁸ % _lh_nextSize_arg2⁵) > 0) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹²)))))) | LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹⁵(_lh_nextSize_Wheel_1¹) | LH_N  => [LH_N]}: 581 --->
//│ 	[LH_C a¹ enumFromThenTo_lh_₁(t⁷, ((2 * t⁷) - a¹), b¹)]: 664
//│ 	[LH_N]: 665
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t¹⁵ => let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_listcomp_fun²³, _lh_sieve_Wheel_0³, _lh_sieve_arg2³, _lh_sieve_arg3³, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun²²))
//│ in _lh_listcomp_fun²³(let _lh_listcomp_fun_ls_t¹⁷ = (fun _lh_listcomp_fun²⁴ -> (fun _lh_sieve_Wheel_0⁴ -> (fun _lh_sieve_arg2⁴ -> (fun _lh_sieve_arg3⁴ -> (fun _lh_listcomp_fun_ls_t¹⁸ -> (fun _lh_listcomp_fun²⁵ -> _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t¹⁸)))))))
//│ in let _lh_listcomp_fun_ls_h¹¹ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h⁹)
//│ in (fun _lh_listcomp_fun²⁶ -> (fun _lh_sieve_Wheel_0⁵ -> (fun _lh_sieve_arg2⁵ -> (fun _lh_sieve_arg3⁵ -> (fun _lh_listcomp_fun_ls_t¹⁹ -> (fun _lh_listcomp_fun²⁷ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁵, _lh_sieve_arg2⁵, _lh_sieve_arg3⁵, _lh_listcomp_fun_ls_h¹¹) then let _lh_append_lz_LH_C_1¹ = _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)
//│ in let _lh_append_lz_LH_C_0¹ = _lh_listcomp_fun_ls_h¹¹
//│ in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_lh_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2⁵)])) else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t¹⁷)))))))) | LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁵)})
//│ in _lh_listcomp_fun²²(_lh_sieve_Wheel_1¹) | LH_N  => (fun _lh_append_lz_arg2⁶ -> _lh_append_lz_arg2⁶)}: 960 --->
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁸, ((2 * t⁸) - a²), b²)]: 803
//│ 	[LH_N]: 804
//│ 	[LH_C _lh_sieve_Wheel_0³ enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4¹ * _lh_sieve_arg4¹), (head_lz_lh_₀(_lh_sieve_arg2³) - 1)) * _lh_sieve_Wheel_0³))]: 997
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testWheelSieve1_nofib_lh_₀(primId⁰(1000))
//│ def testWheelSieve1_nofib_lh_₀(_lh_testWheelSieve1_nofib_arg1²) = 
//│ 	prime_lh_₀(_lh_testWheelSieve1_nofib_arg1²)
//│ 	where
//│ 	def prime_lh_₀(_lh_prime_arg1²) = 
//│ 		atIndex_lz_lh_₀(_lh_prime_arg1², primes_lh_₀(_lh_prime_arg1²))
//│ 		where
//│ 		def atIndex_lz_lh_₀(n², ls¹³) = 
//│ 			if (n² < 0) then error⁰ else case force⁰(ls¹³) of {
//│ 				LH_C h⁴ t⁵ => if (n² == 0) then h⁴ else atIndex_lz_lh_₀((n² - 1), t⁵)
//│ 				| LH_N  => error⁰}
//│ 		def primes_lh_₀(_lh_primes_arg1²) = 
//│ 			lazy⁰(sieve_lh_₀(wheels_lh_₀(primes_lh_₀(_lh_primes_arg1²)), primes_lh_₀(_lh_primes_arg1²), squares_lh_₀(primes_lh_₀(_lh_primes_arg1²)), _lh_primes_arg1²))
//│ 			where
//│ 			def sieve_lh_₀(_lh_sieve_arg1², _lh_sieve_arg2⁶, _lh_sieve_arg3⁶, _lh_sieve_arg4²) = 
//│ 				let _lh_matchIdent⁹ = force⁰(_lh_sieve_arg1²)
//│ 				in case _lh_matchIdent⁹ of {
//│ 					LH_C _lh_sieve_LH_C_0¹ _lh_sieve_LH_C_1¹ => case _lh_sieve_LH_C_0¹ of {
//│ 						Wheel _lh_sieve_Wheel_0³ _lh_sieve_Wheel_1¹ => append_lz_lh_₁(
//│ 							let _lh_listcomp_fun²⁸ = (fun _lh_listcomp_fun_para¹² -> _lh_listcomp_fun_para¹²(_lh_listcomp_fun²⁸, _lh_sieve_Wheel_0³, _lh_sieve_Wheel_1¹, _lh_sieve_arg2⁶, _lh_sieve_arg3⁶))
//│ 							in _lh_listcomp_fun²⁸(
//│ 								let _lh_listcomp_fun_ls_t²⁰ = enumFromThenTo_lh_₀((_lh_sieve_Wheel_0³ * 2), (_lh_sieve_Wheel_0³ * 3), (min_lh_₀((_lh_sieve_arg4² * _lh_sieve_arg4²), (head_lz_lh_₀(_lh_sieve_arg2⁶) - 1)) * _lh_sieve_Wheel_0³))
//│ 								in let _lh_listcomp_fun_ls_h¹² = _lh_sieve_Wheel_0³
//│ 								in (fun _lh_listcomp_fun²⁹ -> (fun _lh_sieve_Wheel_0⁶ -> (fun _lh_sieve_Wheel_1² -> (fun _lh_sieve_arg2⁷ -> (fun _lh_sieve_arg3⁷ -> 
//│ 									let _lh_listcomp_fun³⁰ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {
//│ 										LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => 
//│ 											let _lh_listcomp_fun³¹ = (fun _lh_listcomp_fun_para¹⁴ -> _lh_listcomp_fun_para¹⁴(_lh_listcomp_fun³¹, _lh_sieve_Wheel_0⁶, _lh_sieve_arg2⁷, _lh_sieve_arg3⁷, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun³⁰))
//│ 											in _lh_listcomp_fun³¹(
//│ 												let _lh_listcomp_fun_ls_t²¹ = (fun _lh_listcomp_fun³² -> (fun _lh_sieve_Wheel_0⁷ -> (fun _lh_sieve_arg2⁸ -> (fun _lh_sieve_arg3⁸ -> (fun _lh_listcomp_fun_ls_t²² -> (fun _lh_listcomp_fun³³ -> _lh_listcomp_fun³³(_lh_listcomp_fun_ls_t²²)))))))
//│ 												in let _lh_listcomp_fun_ls_h¹³ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h¹²)
//│ 												in (fun _lh_listcomp_fun³⁴ -> (fun _lh_sieve_Wheel_0⁸ -> (fun _lh_sieve_arg2⁹ -> (fun _lh_sieve_arg3⁹ -> (fun _lh_listcomp_fun_ls_t²³ -> (fun _lh_listcomp_fun³⁵ -> if noFactor_lh_₀(_lh_sieve_Wheel_0⁸, _lh_sieve_arg2⁹, _lh_sieve_arg3⁹, _lh_listcomp_fun_ls_h¹³) then 
//│ 													let _lh_append_lz_LH_C_1² = _lh_listcomp_fun³⁴(_lh_listcomp_fun_ls_t²¹)
//│ 													in let _lh_append_lz_LH_C_0² = _lh_listcomp_fun_ls_h¹³
//│ 													in (fun _lh_append_lz_arg2⁷ -> lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz_lh_₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2⁷)])) else _lh_listcomp_fun³⁴(_lh_listcomp_fun_ls_t²¹))))))))
//│ 										| LH_N  => _lh_listcomp_fun²⁹(_lh_listcomp_fun_ls_t²⁰)})
//│ 									in _lh_listcomp_fun³⁰(_lh_sieve_Wheel_1²))))))), sieve_lh_₀(_lh_sieve_LH_C_1¹, tail_lz_lh_₀(_lh_sieve_arg2⁶), tail_lz_lh_₁(_lh_sieve_arg3⁶), _lh_sieve_arg4²))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def append_lz_lh_₀(_lh_append_lz_arg1³, _lh_append_lz_arg2⁸) = 
//│ 					let _lh_matchIdent¹² = _lh_append_lz_arg1³
//│ 					in _lh_matchIdent¹²(_lh_append_lz_arg2⁸)
//│ 				def append_lz_lh_₁(_lh_append_lz_arg1⁴, _lh_append_lz_arg2¹¹) = 
//│ 					let _lh_matchIdent¹³ = _lh_append_lz_arg1⁴
//│ 					in _lh_matchIdent¹³(_lh_append_lz_arg2¹¹)
//│ 				def enumFromThenTo_lh_₀(a³, t¹², b³) = 
//│ 					if (a³ <= b³) then 
//│ 						let _lh_listcomp_fun_ls_t²⁴ = enumFromThenTo_lh_₀(t¹², ((2 * t¹²) - a³), b³)
//│ 						in let _lh_listcomp_fun_ls_h¹⁴ = a³
//│ 						in (fun _lh_listcomp_fun³⁷ -> (fun _lh_sieve_Wheel_0⁹ -> (fun _lh_sieve_Wheel_1³ -> (fun _lh_sieve_arg2¹⁰ -> (fun _lh_sieve_arg3¹⁰ -> 
//│ 							let _lh_listcomp_fun³⁸ = (fun _lh_listcomp_fun_para¹⁶ -> case _lh_listcomp_fun_para¹⁶ of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁶ => 
//│ 									let _lh_listcomp_fun³⁹ = (fun _lh_listcomp_fun_para¹⁷ -> _lh_listcomp_fun_para¹⁷(_lh_listcomp_fun³⁹, _lh_sieve_Wheel_0⁹, _lh_sieve_arg2¹⁰, _lh_sieve_arg3¹⁰, _lh_listcomp_fun_ls_t¹⁶, _lh_listcomp_fun³⁸))
//│ 									in _lh_listcomp_fun³⁹(
//│ 										let _lh_listcomp_fun_ls_t²⁵ = (fun _lh_listcomp_fun⁴⁰ -> (fun _lh_sieve_Wheel_0¹⁰ -> (fun _lh_sieve_arg2¹¹ -> (fun _lh_sieve_arg3¹¹ -> (fun _lh_listcomp_fun_ls_t²⁶ -> (fun _lh_listcomp_fun⁴¹ -> _lh_listcomp_fun⁴¹(_lh_listcomp_fun_ls_t²⁶)))))))
//│ 										in let _lh_listcomp_fun_ls_h¹⁵ = (_lh_listcomp_fun_ls_h¹⁰ + _lh_listcomp_fun_ls_h¹⁴)
//│ 										in (fun _lh_listcomp_fun⁴² -> (fun _lh_sieve_Wheel_0¹¹ -> (fun _lh_sieve_arg2¹² -> (fun _lh_sieve_arg3¹² -> (fun _lh_listcomp_fun_ls_t²⁷ -> (fun _lh_listcomp_fun⁴³ -> if noFactor_lh_₀(_lh_sieve_Wheel_0¹¹, _lh_sieve_arg2¹², _lh_sieve_arg3¹², _lh_listcomp_fun_ls_h¹⁵) then 
//│ 											let _lh_append_lz_LH_C_1³ = _lh_listcomp_fun⁴²(_lh_listcomp_fun_ls_t²⁵)
//│ 											in let _lh_append_lz_LH_C_0³ = _lh_listcomp_fun_ls_h¹⁵
//│ 											in (fun _lh_append_lz_arg2⁹ -> lazy⁰([LH_C _lh_append_lz_LH_C_0³ append_lz_lh_₀(_lh_append_lz_LH_C_1³, _lh_append_lz_arg2⁹)])) else _lh_listcomp_fun⁴²(_lh_listcomp_fun_ls_t²⁵))))))))
//│ 								| LH_N  => _lh_listcomp_fun³⁷(_lh_listcomp_fun_ls_t²⁴)})
//│ 							in _lh_listcomp_fun³⁸(_lh_sieve_Wheel_1³)))))) else (fun _lh_listcomp_fun⁴⁴ -> (fun _lh_sieve_Wheel_0¹² -> (fun _lh_sieve_Wheel_1⁴ -> (fun _lh_sieve_arg2¹³ -> (fun _lh_sieve_arg3¹³ -> (fun _lh_append_lz_arg2¹⁰ -> _lh_append_lz_arg2¹⁰))))))
//│ 				def head_lz_lh_₀(ls¹²) = 
//│ 					case force⁰(ls¹²) of {
//│ 						LH_C h⁶ t⁹ => h⁶
//│ 						| LH_N  => error⁰}
//│ 				def min_lh_₀(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def noFactor_lh_₀(_lh_noFactor_arg1², _lh_noFactor_arg2², _lh_noFactor_arg3², _lh_noFactor_arg4²) = 
//│ 					if (_lh_noFactor_arg1² <= 2) then [True] else notDivBy_lh_₀(_lh_noFactor_arg2², _lh_noFactor_arg3², _lh_noFactor_arg4²)
//│ 					where
//│ 					def notDivBy_lh_₀(_lh_notDivBy_arg1², _lh_notDivBy_arg2², _lh_notDivBy_arg3²) = 
//│ 						let _lh_matchIdent¹⁰ = force⁰(_lh_notDivBy_arg2²)
//│ 						in case _lh_matchIdent¹⁰ of {
//│ 							LH_C _lh_notDivBy_LH_C_0² _lh_notDivBy_LH_C_1² => if (_lh_notDivBy_LH_C_0² > _lh_notDivBy_arg3²) then [True] else 
//│ 								let _lh_matchIdent¹¹ = force⁰(_lh_notDivBy_arg1²)
//│ 								in case _lh_matchIdent¹¹ of {
//│ 									LH_C _lh_notDivBy_LH_C_0³ _lh_notDivBy_LH_C_1³ => (((_lh_notDivBy_arg3² % _lh_notDivBy_LH_C_0³) > 0) && notDivBy_lh_₀(_lh_notDivBy_LH_C_1³, _lh_notDivBy_LH_C_1², _lh_notDivBy_arg3²))
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 				def tail_lz_lh_₀(ls¹⁰) = 
//│ 					case force⁰(ls¹⁰) of {
//│ 						LH_C h⁵ t⁶ => t⁶
//│ 						| LH_N  => error⁰}
//│ 				def tail_lz_lh_₁(ls¹¹) = 
//│ 					case force⁰(ls¹¹) of {
//│ 						LH_C h⁸ t¹¹ => t¹¹
//│ 						| LH_N  => error⁰}
//│ 			def squares_lh_₀(_lh_squares_arg1²) = 
//│ 				map_lz_lh_₀((fun p² -> (p² * p²)), _lh_squares_arg1²)
//│ 				where
//│ 				def map_lz_lh_₀(f⁴, ls⁹) = 
//│ 					lazy⁰(case force⁰(ls⁹) of {
//│ 						LH_C h⁷ t¹⁰ => [LH_C f⁴(h⁷) map_lz_lh_₀(f⁴, t¹⁰)]
//│ 						| LH_N  => [LH_N]})
//│ 			def wheels_lh_₀(_lh_wheels_arg1²) = 
//│ 				lazy⁰([LH_C [Wheel 1 [LH_C 1 [LH_N]]] zipWith_lz_lz_lh_₀(nextSize_lh_₀, wheels_lh_₀(_lh_wheels_arg1²), _lh_wheels_arg1²)])
//│ 				where
//│ 				def nextSize_lh_₀(_lh_nextSize_arg1², _lh_nextSize_arg2⁶) = 
//│ 					case _lh_nextSize_arg1² of {
//│ 						Wheel _lh_nextSize_Wheel_0¹ _lh_nextSize_Wheel_1¹ => [Wheel (_lh_nextSize_Wheel_0¹ * _lh_nextSize_arg2⁶) 
//│ 							let _lh_listcomp_fun³⁶ = (fun _lh_listcomp_fun_para¹⁵ -> _lh_listcomp_fun_para¹⁵(_lh_listcomp_fun³⁶, _lh_nextSize_Wheel_1¹, _lh_nextSize_arg2⁶))
//│ 							in _lh_listcomp_fun³⁶(enumFromThenTo_lh_₁(0, _lh_nextSize_Wheel_0¹, ((_lh_nextSize_arg2⁶ - 1) * _lh_nextSize_Wheel_0¹)))]
//│ 						| _  => error⁰}
//│ 					where
//│ 					def enumFromThenTo_lh_₁(a⁴, t¹³, b⁴) = 
//│ 						if (a⁴ <= b⁴) then 
//│ 							let _lh_listcomp_fun_ls_t²⁸ = enumFromThenTo_lh_₁(t¹³, ((2 * t¹³) - a⁴), b⁴)
//│ 							in let _lh_listcomp_fun_ls_h¹⁶ = a⁴
//│ 							in (fun _lh_listcomp_fun⁴⁵ -> (fun _lh_nextSize_Wheel_1² -> (fun _lh_nextSize_arg2⁷ -> 
//│ 								let _lh_listcomp_fun⁴⁶ = (fun _lh_listcomp_fun_para¹⁸ -> case _lh_listcomp_fun_para¹⁸ of {
//│ 									LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t¹¹ => 
//│ 										let _lh_listcomp_fun⁴⁷ = (fun _lh_listcomp_fun_para¹⁹ -> _lh_listcomp_fun_para¹⁹(_lh_listcomp_fun⁴⁷, _lh_nextSize_arg2⁷, _lh_listcomp_fun_ls_t¹¹, _lh_listcomp_fun⁴⁶))
//│ 										in _lh_listcomp_fun⁴⁷(
//│ 											let _lh_listcomp_fun_ls_t²⁹ = (fun _lh_listcomp_fun⁴⁸ -> (fun _lh_nextSize_arg2⁸ -> (fun _lh_listcomp_fun_ls_t³⁰ -> (fun _lh_listcomp_fun⁴⁹ -> _lh_listcomp_fun⁴⁹(_lh_listcomp_fun_ls_t³⁰)))))
//│ 											in let _lh_listcomp_fun_ls_h¹⁷ = (_lh_listcomp_fun_ls_h⁷ + _lh_listcomp_fun_ls_h¹⁶)
//│ 											in (fun _lh_listcomp_fun⁵⁰ -> (fun _lh_nextSize_arg2⁹ -> (fun _lh_listcomp_fun_ls_t³¹ -> (fun _lh_listcomp_fun⁵¹ -> if ((_lh_listcomp_fun_ls_h¹⁷ % _lh_nextSize_arg2⁹) > 0) then [LH_C _lh_listcomp_fun_ls_h¹⁷ _lh_listcomp_fun⁵⁰(_lh_listcomp_fun_ls_t²⁹)] else _lh_listcomp_fun⁵⁰(_lh_listcomp_fun_ls_t²⁹))))))
//│ 									| LH_N  => _lh_listcomp_fun⁴⁵(_lh_listcomp_fun_ls_t²⁸)})
//│ 								in _lh_listcomp_fun⁴⁶(_lh_nextSize_Wheel_1²)))) else (fun _lh_listcomp_fun⁵² -> (fun _lh_nextSize_Wheel_1³ -> (fun _lh_nextSize_arg2¹⁰ -> [LH_N])))
//│ 				def zipWith_lz_lz_lh_₀(f⁵, xs², ys²) = 
//│ 					lazy⁰(case force⁰(xs²) of {
//│ 						LH_C hx¹ tx¹ => case force⁰(ys²) of {
//│ 							LH_C hy¹ ty¹ => [LH_C f⁵(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁵, tx¹, ty¹)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
