:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
-----------------------------
-- Figure 1. CSPs in Haskell.
-----------------------------
type Var = Int
type Value = Int
data Assign = Assign Var Value deriving (Eq, Ord, Show)
type Relation = Assign -> Assign -> Bool
data CSP = CSP Int Int Relation
type State = [Assign]
flip f x y = f y x
all p [] = True
all p (h:t) = if p h then all p t else False
abs x = if x > 0 then x else (0 - x)
nubBy eq []             =  []
nubBy eq (x:xs)         =  x : nubBy eq (filter (\y -> not (eq x y)) xs)
deleteBy                :: (a -> a -> Bool) -> a -> [a] -> [a]
deleteBy _  _ []        = []
deleteBy eq x (y:ys)    = if eq x y then ys else y : deleteBy eq x ys
unionBy eq xs ys        = xs ++ foldl (flip (deleteBy eq)) (nubBy eq ys) xs
union xs ys = unionBy (\a b -> polyEq a b) xs ys
compareTuple2 (a, b) (c, d) = a <= c
qsort le []     r = r
qsort le [x]    r = x:r
qsort le (x:xs) r = qpart le x xs [] [] r
qpart le x [] rlt rge r =
    rqsort le rlt (x:rqsort le rge r)
qpart le x (y:ys) rlt rge r =
    if le x y then
    qpart le x ys rlt (y:rge) r
    else
    qpart le x ys (y:rlt) rge r
rqsort le []     r = r
rqsort le [x]    r = x:r
rqsort le (x:xs) r = rqpart le x xs [] [] r
rqpart le x [] rle rgt r =
    qsort le rle (x:qsort le rgt r)
rqpart le x (y:ys) rle rgt r =
    if le y x then
    rqpart le x ys (y:rle) rgt r
    else
    rqpart le x ys rle (y:rgt) r
notElem x [] = True
notElem x (h:t) = if polyEq x h then False else (notElem x t)
fst (a, b) = a
snd (a, b) = b
null [] = True
null (h:t) = False
level :: Assign -> Var
level (Assign var val) = var
value :: Assign -> Value
value (Assign var val) = val
maxLevel :: State -> Var
maxLevel [] = 0
maxLevel ((Assign var val):_) = var
complete :: CSP -> State -> Bool
complete (CSP vars vals rel) s = (maxLevel s) == vars
generate :: CSP -> [State]
generate (CSP vars vals rel) = g vals vars
  where g vals 0 = [[]]
        g vals var = [ (Assign var val):st | val <- [1..vals], st <- g vals (var-1) ]
inconsistencies :: CSP -> State -> [(Var,Var)]
inconsistencies (CSP vars vals rel) as = [ (level a, level b) | a <- as, b <- reverse as, a > b, not (rel a b) ]
consistent :: CSP -> State -> Bool
consistent csp = null . (inconsistencies csp)
test :: CSP -> [State] -> [State]
test csp = filter (consistent csp)
solver :: CSP -> [State]
solver csp  = test csp (generate csp)
safe (Assign i m) (Assign j n) = (m /= n) && ((abs (i - j)) /= (abs (m - n)))
queens :: Int -> CSP
queens n = CSP n n safe
-------------------------------
-- Figure 2.  Trees in Haskell.
-------------------------------
data Tree a = Node a [Tree a]
label :: Tree a -> a
label (Node lab _) = lab
type Transform a b = Tree a -> Tree b
mapTree  :: (a -> b) -> Transform a b
mapTree f (Node a cs) = Node (f a) (map (mapTree f) cs)
foldTree :: (a -> [b] -> b) -> Tree a -> b
foldTree f (Node a cs) = f a (map (foldTree f) cs)
filterTree :: (a -> Bool) -> Transform a a
filterTree p = let f = \a cs -> Node a (filter (p . label) cs) in foldTree f
prune :: (a -> Bool) -> Transform a a
prune p = filterTree (not . p)
leaves :: Tree a -> [a]
leaves (Node leaf []) = [leaf]
leaves (Node _ cs) = concat (map leaves cs)
initTree :: (a -> [a]) -> a -> Tree a
initTree f a = Node a (map (initTree f) (f a))
--------------------------------------------------
-- Figure 3.  Simple backtracking solver for CSPs.
--------------------------------------------------
mkTree :: CSP -> Tree State
mkTree (CSP vars vals rel) =
  let next = \ss -> [ (Assign ((maxLevel ss) + 1) j):ss | (maxLevel ss) < vars, j <- [1..vals] ] in
  initTree next []
earliestInconsistency :: CSP -> State -> Maybe (Var,Var)
earliestInconsistency (CSP vars vals rel) [] = Nothing
earliestInconsistency (CSP vars vals rel) (a:as) =
        case filter (not . rel a) (reverse as) of
          [] -> Nothing
          (b:_) -> Just (level a, level b)
labelInconsistencies :: CSP -> Transform State (State,Maybe (Var,Var))
labelInconsistencies csp =
  let f = \s -> (s,earliestInconsistency csp s) in
  mapTree f
btsolver0 :: CSP -> [State]
btsolver0 csp =
  (filter (complete csp) . leaves . (mapTree fst) . prune ((\x -> x /= Nothing) . snd)
                                            . (labelInconsistencies csp) .  mkTree) csp
-----------------------------------------------
-- Figure 6. Conflict-directed solving of CSPs.
-----------------------------------------------
data ConflictSet = Known [Var] | Unknown deriving Eq
knownConflict :: ConflictSet -> Bool
knownConflict (Known (a:as)) = True
knownConflict _              = False
knownSolution :: ConflictSet -> Bool
knownSolution (Known []) = True
knownSolution _          = False
checkComplete :: CSP -> State -> ConflictSet
checkComplete csp s = if complete csp s then Known [] else Unknown
type Labeler = CSP -> Transform State (State, ConflictSet)
search :: Labeler -> CSP -> [State]
search labeler csp =
  (map fst . filter (knownSolution . snd) . leaves . prune (knownConflict . snd) . labeler csp . mkTree) csp
bt :: Labeler
bt csp =
  let f = \s -> (s, case (earliestInconsistency csp s) of {Nothing    -> checkComplete csp s; Just (a,b) -> Known [a,b]}) in
  mapTree f
btsolver :: CSP -> [State]
btsolver = search bt
-------------------------------------
-- Figure 7. Randomization heuristic.
-------------------------------------
hrandom :: Int -> Transform a a
hrandom seed (Node a cs) = let seed' = random seed in Node a (randomList seed' (zipWith_lz_nl hrandom (randoms seed') cs))
btr :: Int -> Labeler
btr seed csp = bt csp . hrandom seed
---------------------------------------------
-- Support for random numbers (not in paper).
---------------------------------------------
random2 :: Int -> Int
random2 n =
  let hi = n `div` 127773 in
  let lo = n `mod` 127773 in
  let test = 16807 * lo - 2836 * hi in
  if test > 0 then test else test + 2147483647
randoms :: Int -> [Int]
randoms = iterate random2
random :: Int -> Int
random n = (994108973 * n + 994108973)
randomList :: Int -> [a] -> [a]
randomList i as = map snd (qsort (\a b -> compareTuple2 a b) (zip_lz_nl (randoms i) as) [])
-------------------------
-- Figure 8. Backmarking.
-------------------------
type Table = [Row]       -- indexed by Var
type Row = [ConflictSet] -- indexed by Value
bm :: Labeler
bm csp = mapTree fst . lookupCache csp . cacheChecks csp (emptyTable csp)
emptyTable :: CSP -> Table
emptyTable (CSP vars vals rel) = []:[[Unknown | m <- [1..vals]] | n <- [1..vars]]
cacheChecks :: CSP -> Table -> Transform State (State, Table)
cacheChecks csp tbl (Node s cs) =
  Node (s, tbl) (map (cacheChecks csp (fillTable s csp (tail tbl))) cs)
fillTable :: State -> CSP -> Table -> Table
fillTable [] csp tbl = tbl
fillTable ((Assign var' val'):as) (CSP vars vals rel) tbl =
  let f = \cs varval -> case varval of { (var, val) -> if (polyEq cs Unknown) && (not (rel (Assign var' val') (Assign var val))) then Known [var',var] else cs } in
  zipWith (zipWith f) tbl [[(var,val) | val <- [1..vals]] | var <- [var'+1..vars]]
lookupCache :: CSP -> Transform (State, Table) ((State, ConflictSet), Table)
lookupCache csp t = mapTree (f csp) t
  where f csp ([], tbl)      = (([], Unknown), tbl)
        f csp ((a:as), tbl) =
          let tableEntry = atIndex (value a-1) (head tbl) in
          let cs = (if polyEq tableEntry Unknown then checkComplete csp (a:as) else tableEntry) in
          ((a:as, cs), tbl)
--------------------------------------------
-- Figure 10. Conflict-directed backjumping.
--------------------------------------------
bjbt :: Labeler
bjbt csp = bj csp . bt csp
bjbt' :: Labeler
bjbt' csp = bj' csp . bt csp
bj :: CSP -> Transform (State, ConflictSet) (State, ConflictSet)
bj csp = foldTree f
  where f (a, Known cs) chs = Node (a,Known cs) chs
        f (a, Unknown)  chs = Node (a,Known (combine (map label chs) [])) chs
combine :: [(State, ConflictSet)] -> [Var] -> [Var]
combine []                  acc = acc
combine ((s, Known cs):css) acc =
  if notElem (maxLevel s) cs then cs else combine css (union cs acc)
bj' :: CSP -> Transform (State, ConflictSet) (State, ConflictSet)
bj' csp = foldTree f
  where f (a, Known cs) chs = Node (a,Known cs) chs
        f (a, Unknown) chs =
          let cs' = Known (combine (map label chs) []) in
          if knownConflict cs' then Node (a,cs') [] else Node (a,cs') chs
-------------------------------
-- Figure 11. Forward checking.
-------------------------------
fc :: Labeler
fc csp = domainWipeOut csp . lookupCache csp . cacheChecks csp (emptyTable csp)
collect :: [ConflictSet] -> [Var]
collect [] = []
collect (Known cs:css) = union cs (collect css)
domainWipeOut :: CSP -> Transform ((State, ConflictSet), Table) (State, ConflictSet)
domainWipeOut (CSP vars vals rel) t = mapTree f t
  where
    f ((as, cs), tbl) =
      let wipedDomains = ([vs | vs <- tbl, all (knownConflict) vs]) in
      let cs' = if null wipedDomains then cs else Known (collect (head wipedDomains)) in
      (as, cs')
try n algorithm = length (search algorithm (queens n))
testConstraints_nofib n = map (try n) [bt, bm, bjbt, bjbt', fc]
testConstraints_nofib $ primId 5
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testConstraints_nofib_lh^1185(primId⁰(5))
//│ def abs_lh(_lh_abs_arg1⁰) = if (_lh_abs_arg1⁰ > 0) then _lh_abs_arg1⁰ else (0 - _lh_abs_arg1⁰)
//│ def all_lh(_lh_all_arg1⁰, _lh_all_arg2⁰) = case _lh_all_arg2⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh^382(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False]
//│ 	| _  => error⁰}
//│ def atIndex_lh(n⁰, ls⁶) = if (n⁰ < 0) then error⁰ else case ls⁶ of {
//│ 	LH_C h⁷ t⁷ => if (n⁰ == 0) then h⁷ else atIndex_lh^141((n⁰ - 1), t⁷)
//│ 	| LH_N  => error⁰}
//│ def bj'_lh(_lh_bj'_arg1⁰) = 
//│ 	let f⁷ = (fun _lh_f_arg1² -> (fun _lh_f_arg2¹ -> case _lh_f_arg1² of {
//│ 		LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {
//│ 			Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]
//│ 			| Unknown  => 
//│ 				let cs'¹ = [Known combine_lh^855(map_lh^856(label_lh^857, _lh_f_arg2¹), [LH_N])]
//│ 				in if knownConflict_lh^865(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}))
//│ 	in foldTree_lh^886(f⁷)
//│ def bj_lh(_lh_bj_arg1⁰) = 
//│ 	let f⁵ = (fun _lh_f_arg1⁰ -> (fun _lh_f_arg2⁰ -> case _lh_f_arg1⁰ of {
//│ 		LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {
//│ 			Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]
//│ 			| Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh^525(map_lh^526(label_lh^527, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}))
//│ 	in foldTree_lh^544(f⁵)
//│ def bjbt'_lh(_lh_bjbt'_arg1⁰, _lh_funcomp_x⁷) = bj'_lh^836(_lh_bjbt'_arg1⁰, bt_lh^839(_lh_bjbt'_arg1⁰, _lh_funcomp_x⁷))
//│ def bjbt_lh(_lh_bjbt_arg1⁰, _lh_funcomp_x³) = bj_lh^393(_lh_bjbt_arg1⁰, bt_lh^396(_lh_bjbt_arg1⁰, _lh_funcomp_x³))
//│ def bm_lh(_lh_bm_arg1⁰, _lh_funcomp_x⁰) = (fun _lh_funcomp_x¹ -> mapTree_lh^251(fst_lh^252, lookupCache_lh^254(_lh_bm_arg1⁰, _lh_funcomp_x¹)))(cacheChecks_lh^261(_lh_bm_arg1⁰, emptyTable_lh^264(_lh_bm_arg1⁰), _lh_funcomp_x⁰))
//│ def bt_lh(_lh_bt_arg1⁰) = 
//│ 	let f⁴ = (fun s⁰ -> [LH_P2 s⁰ 
//│ 		let _lh_matchIdent⁰ = earliestInconsistency_lh^427(_lh_bt_arg1⁰, s⁰)
//│ 		in case _lh_matchIdent⁰ of {
//│ 			Nothing  => checkComplete_lh^433(_lh_bt_arg1⁰, s⁰)
//│ 			| Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {
//│ 				LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]]
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}])
//│ 	in mapTree_lh^452(f⁴)
//│ def cacheChecks_lh(_lh_cacheChecks_arg1⁰, _lh_cacheChecks_arg2⁰, _lh_cacheChecks_arg3⁰) = case _lh_cacheChecks_arg3⁰ of {
//│ 	Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh^228(cacheChecks_lh^229(_lh_cacheChecks_arg1⁰, fillTable_lh^232(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh^237(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]
//│ 	| _  => error⁰}
//│ def checkComplete_lh(_lh_checkComplete_arg1⁰, _lh_checkComplete_arg2⁰) = if complete_lh^891(_lh_checkComplete_arg1⁰, _lh_checkComplete_arg2⁰) then [Known [LH_N]] else [Unknown]
//│ def collect_lh(_lh_collect_arg1⁰) = case _lh_collect_arg1⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {
//│ 		Known _lh_collect_Known_0⁰ => union_lh^293(_lh_collect_Known_0⁰, collect_lh^296(_lh_collect_LH_C_1⁰))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def combine_lh(_lh_combine_arg1⁰, _lh_combine_arg2⁰) = case _lh_combine_arg1⁰ of {
//│ 	LH_N  => _lh_combine_arg2⁰
//│ 	| LH_C _lh_combine_LH_C_0⁰ _lh_combine_LH_C_1⁰ => case _lh_combine_LH_C_0⁰ of {
//│ 		LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {
//│ 			Known _lh_combine_Known_0⁰ => if notElem_lh^695(maxLevel_lh^696(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh^703(_lh_combine_LH_C_1⁰, union_lh^706(_lh_combine_Known_0⁰, _lh_combine_arg2⁰))
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def complete_lh(_lh_complete_arg1⁰, _lh_complete_arg2⁰) = case _lh_complete_arg1⁰ of {
//│ 	CSP _lh_complete_CSP_0⁰ _lh_complete_CSP_1⁰ _lh_complete_CSP_2⁰ => (maxLevel_lh^681(_lh_complete_arg2⁰) == _lh_complete_CSP_0⁰)
//│ 	| _  => error⁰}
//│ def concat_lh(lss⁰) = case lss⁰ of {
//│ 	LH_C h⁸ t⁸ => mappend_lh^157(h⁸, concat_lh^160(t⁸))
//│ 	| LH_N  => [LH_N]}
//│ def deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_arg3⁰) = case _lh_deleteBy_arg3⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_deleteBy_LH_C_0⁰ _lh_deleteBy_LH_C_1⁰ => if _lh_deleteBy_arg1⁰(_lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_0⁰) then _lh_deleteBy_LH_C_1⁰ else [LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh^1118(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]
//│ 	| _  => error⁰}
//│ def domainWipeOut_lh(_lh_domainWipeOut_arg1⁰, _lh_domainWipeOut_arg2⁰) = case _lh_domainWipeOut_arg1⁰ of {
//│ 	CSP _lh_domainWipeOut_CSP_0⁰ _lh_domainWipeOut_CSP_1⁰ _lh_domainWipeOut_CSP_2⁰ => 
//│ 		let f⁶ = (fun _lh_f_arg1¹ -> case _lh_f_arg1¹ of {
//│ 			LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {
//│ 				LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => 
//│ 					let wipedDomains⁰ = 	
//│ 						let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 							LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh^569(knownConflict_lh^570, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ 					in let cs'⁰ = if null_lh^590(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh^594(head_lh^595(wipedDomains⁰))]
//│ 					in [LH_P2 _lh_f_LH_P2_0² cs'⁰]
//│ 				| _  => error⁰}
//│ 			| _  => error⁰})
//│ 		in mapTree_lh^611(f⁶, _lh_domainWipeOut_arg2⁰)
//│ 	| _  => error⁰}
//│ def earliestInconsistency_lh(_lh_earliestInconsistency_arg1⁰, _lh_earliestInconsistency_arg2⁰) = case _lh_earliestInconsistency_arg1⁰ of {
//│ 	CSP _lh_earliestInconsistency_CSP_0⁰ _lh_earliestInconsistency_CSP_1⁰ _lh_earliestInconsistency_CSP_2⁰ => case _lh_earliestInconsistency_arg2⁰ of {
//│ 		LH_N  => [Nothing]
//│ 		| LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => 
//│ 			let _lh_matchIdent¹ = filter_lh^465((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh^475(_lh_earliestInconsistency_LH_C_1⁰))
//│ 			in case _lh_matchIdent¹ of {
//│ 				LH_N  => [Nothing]
//│ 				| LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh^481(_lh_earliestInconsistency_LH_C_0⁰) level_lh^484(_lh_earliestInconsistency_LH_C_0¹)]]
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def emptyTable_lh(_lh_emptyTable_arg1⁰) = case _lh_emptyTable_arg1⁰ of {
//│ 	CSP _lh_emptyTable_CSP_0⁰ _lh_emptyTable_CSP_1⁰ _lh_emptyTable_CSP_2⁰ => [LH_C [LH_N] 
//│ 		let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C 
//│ 				let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 					LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 					| LH_N  => [LH_N]})
//│ 				in _lh_listcomp_fun¹(enumFromTo_lh^198(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁰(enumFromTo_lh^213(1, _lh_emptyTable_CSP_0⁰))]
//│ 	| _  => error⁰}
//│ def enumFromTo_lh(a⁰, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromTo_lh^91((a⁰ + 1), b⁰)] else [LH_N]
//│ def fc_lh(_lh_fc_arg1⁰, _lh_funcomp_x⁴) = (fun _lh_funcomp_x⁵ -> domainWipeOut_lh^404(_lh_fc_arg1⁰, lookupCache_lh^407(_lh_fc_arg1⁰, _lh_funcomp_x⁵)))(cacheChecks_lh^414(_lh_fc_arg1⁰, emptyTable_lh^417(_lh_fc_arg1⁰), _lh_funcomp_x⁴))
//│ def fillTable_lh(_lh_fillTable_arg1⁰, _lh_fillTable_arg2⁰, _lh_fillTable_arg3⁰) = case _lh_fillTable_arg1⁰ of {
//│ 	LH_N  => _lh_fillTable_arg3⁰
//│ 	| LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {
//│ 		Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {
//│ 			CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => 
//│ 				let f⁹ = (fun cs¹ -> (fun varval⁰ -> 
//│ 					let _lh_matchIdent² = varval⁰
//│ 					in case _lh_matchIdent² of {
//│ 						LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹
//│ 						| _  => error⁰}))
//│ 				in zipWith_lh^993(zipWith_lh^994(f⁹), _lh_fillTable_arg3⁰, 
//│ 					let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 						LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C 
//│ 							let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 								LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun⁵(enumFromTo_lh^1013(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun⁴(enumFromTo_lh^1028((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰)))
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def filterTree_lh(_lh_filterTree_arg1⁰) = 
//│ 	let f⁸ = (fun a³ -> (fun cs⁰ -> [Node a³ filter_lh^908((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh^910(_lh_funcomp_x⁸))), cs⁰)]))
//│ 	in foldTree_lh^921(f⁸)
//│ def filter_lh(f¹, ls¹) = case ls¹ of {
//│ 	LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh^20(f¹, t¹)] else filter_lh^26(f¹, t¹)
//│ 	| LH_N  => [LH_N]}
//│ def flip_lh(_lh_flip_arg1⁰, _lh_flip_arg2⁰, _lh_flip_arg3⁰) = _lh_flip_arg1⁰(_lh_flip_arg3⁰, _lh_flip_arg2⁰)
//│ def foldTree_lh(_lh_foldTree_arg1⁰, _lh_foldTree_arg2⁰) = case _lh_foldTree_arg2⁰ of {
//│ 	Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh^553(foldTree_lh^554(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰))
//│ 	| _  => error⁰}
//│ def foldl_lh(f², i⁰, ls²) = case ls² of {
//│ 	LH_C h² t² => foldl_lh^37(f², f²(i⁰, h²), t²)
//│ 	| LH_N  => i⁰}
//│ def fst_lh(_lh_fst_arg1⁰) = case _lh_fst_arg1⁰ of {
//│ 	LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰
//│ 	| _  => error⁰}
//│ def head_lh(ls³) = case ls³ of {
//│ 	LH_C h³ t³ => h³
//│ 	| LH_N  => error⁰}
//│ def initTree_lh(_lh_initTree_arg1⁰, _lh_initTree_arg2⁰) = [Node _lh_initTree_arg2⁰ map_lh^943(initTree_lh^944(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]
//│ def knownConflict_lh(_lh_knownConflict_arg1⁰) = case _lh_knownConflict_arg1⁰ of {
//│ 	Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {
//│ 		LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True]
//│ 		| _  => [False]}
//│ 	| _  => [False]}
//│ def knownSolution_lh(_lh_knownSolution_arg1⁰) = case _lh_knownSolution_arg1⁰ of {
//│ 	Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {
//│ 		LH_N  => [True]
//│ 		| _  => [False]}
//│ 	| _  => [False]}
//│ def label_lh(_lh_label_arg1⁰) = case _lh_label_arg1⁰ of {
//│ 	Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰
//│ 	| _  => error⁰}
//│ def leaves_lh(_lh_leaves_arg1⁰) = case _lh_leaves_arg1⁰ of {
//│ 	Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {
//│ 		LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]]
//│ 		| _  => concat_lh^318(map_lh^319(leaves_lh^320, _lh_leaves_Node_1⁰))}
//│ 	| _  => error⁰}
//│ def length_lh(ls⁵) = case ls⁵ of {
//│ 	LH_C h⁵ t⁵ => (1 + length_lh^109(t⁵))
//│ 	| LH_N  => 0}
//│ def level_lh(_lh_level_arg1⁰) = case _lh_level_arg1⁰ of {
//│ 	Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰
//│ 	| _  => error⁰}
//│ def lookupCache_lh(_lh_lookupCache_arg1⁰, _lh_lookupCache_arg2⁰) = 
//│ 	let f¹⁰ = (fun _lh_f_arg1³ -> (fun _lh_f_arg2² -> case _lh_f_arg2² of {
//│ 		LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {
//│ 			LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]
//│ 			| LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => 
//│ 				let tableEntry⁰ = atIndex_lh^1057((value_lh^1059(_lh_f_LH_C_0⁰) - 1), head_lh^1066(_lh_f_LH_P2_1⁴))
//│ 				in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh^1075(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ 				in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}))
//│ 	in mapTree_lh^1099(f¹⁰(_lh_lookupCache_arg1⁰), _lh_lookupCache_arg2⁰)
//│ def mapTree_lh(_lh_mapTree_arg1⁰, _lh_mapTree_arg2⁰) = case _lh_mapTree_arg2⁰ of {
//│ 	Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh^930(mapTree_lh^931(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]
//│ 	| _  => error⁰}
//│ def map_lh(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh^5(f⁰, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh^118(t⁶, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def maxLevel_lh(_lh_maxLevel_arg1⁰) = case _lh_maxLevel_arg1⁰ of {
//│ 	LH_N  => 0
//│ 	| LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {
//│ 		Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def mkTree_lh(_lh_mkTree_arg1⁰) = case _lh_mkTree_arg1⁰ of {
//│ 	CSP _lh_mkTree_CSP_0⁰ _lh_mkTree_CSP_1⁰ _lh_mkTree_CSP_2⁰ => 
//│ 		let next⁰ = (fun ss⁰ -> if (maxLevel_lh^723(ss⁰) < _lh_mkTree_CSP_0⁰) then 
//│ 			let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C [Assign (maxLevel_lh^731(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 				| LH_N  => [LH_N]})
//│ 			in _lh_listcomp_fun³(enumFromTo_lh^749(1, _lh_mkTree_CSP_1⁰)) else [LH_N])
//│ 		in initTree_lh^759(next⁰, [LH_N])
//│ 	| _  => error⁰}
//│ def notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_arg2⁰) = case _lh_notElem_arg2⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh^776(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def nubBy_lh(_lh_nubBy_arg1⁰, _lh_nubBy_arg2⁰) = case _lh_nubBy_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh^815(_lh_nubBy_arg1⁰, filter_lh^818((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]
//│ 	| _  => error⁰}
//│ def null_lh(_lh_null_arg1⁰) = case _lh_null_arg1⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False]
//│ 	| _  => error⁰}
//│ def prune_lh(_lh_prune_arg1⁰) = filterTree_lh^273((fun _lh_funcomp_x² -> not⁰(_lh_prune_arg1⁰(_lh_funcomp_x²))))
//│ def queens_lh(_lh_queens_arg1⁰) = [CSP _lh_queens_arg1⁰ _lh_queens_arg1⁰ safe_lh^676]
//│ def reverse_helper_lh(ls⁸, a¹) = case ls⁸ of {
//│ 	LH_C h⁹ t⁹ => reverse_helper_lh^174(t⁹, [LH_C h⁹ a¹])
//│ 	| LH_N  => a¹}
//│ def reverse_lh(ls⁷) = reverse_helper_lh^167(ls⁷, [LH_N])
//│ def safe_lh(_lh_safe_arg1⁰, _lh_safe_arg2⁰) = case _lh_safe_arg1⁰ of {
//│ 	Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {
//│ 		Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh^637((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh^645((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹))))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def search_lh(_lh_search_arg1⁰, _lh_search_arg2⁰) = (fun _lh_funcomp_x⁹ -> (fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> (fun _lh_funcomp_x¹² -> (fun _lh_funcomp_x¹³ -> map_lh^1137(fst_lh^1138, filter_lh^1140((fun _lh_funcomp_x¹⁴ -> knownSolution_lh^1141(snd_lh^1142(_lh_funcomp_x¹⁴))), _lh_funcomp_x¹³)))(leaves_lh^1152(_lh_funcomp_x¹²)))(prune_lh^1157((fun _lh_funcomp_x¹⁵ -> knownConflict_lh^1158(snd_lh^1159(_lh_funcomp_x¹⁵))), _lh_funcomp_x¹¹)))(_lh_search_arg1⁰(_lh_search_arg2⁰, _lh_funcomp_x¹⁰)))(mkTree_lh^1176(_lh_funcomp_x⁹)))(_lh_search_arg2⁰)
//│ def snd_lh(_lh_snd_arg1⁰) = case _lh_snd_arg1⁰ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def tail_lh(ls⁴) = case ls⁴ of {
//│ 	LH_C h⁴ t⁴ => t⁴
//│ 	| LH_N  => error⁰}
//│ def testConstraints_nofib_lh(_lh_testConstraints_nofib_arg1⁰) = map_lh^498(try_lh^499(_lh_testConstraints_nofib_arg1⁰), [LH_C bt_lh^503 [LH_C bm_lh^504 [LH_C bjbt_lh^505 [LH_C bjbt'_lh^506 [LH_C fc_lh^507 [LH_N]]]]]])
//│ def try_lh(_lh_try_arg1⁰, _lh_try_arg2⁰) = length_lh^351(search_lh^352(_lh_try_arg2⁰, queens_lh^355(_lh_try_arg1⁰)))
//│ def unionBy_lh(_lh_unionBy_arg1⁰, _lh_unionBy_arg2⁰, _lh_unionBy_arg3⁰) = mappend_lh^329(_lh_unionBy_arg2⁰, foldl_lh^332(flip_lh^333(deleteBy_lh^334(_lh_unionBy_arg1⁰)), nubBy_lh^339(_lh_unionBy_arg1⁰, _lh_unionBy_arg3⁰), _lh_unionBy_arg2⁰))
//│ def union_lh(_lh_union_arg1⁰, _lh_union_arg2⁰) = unionBy_lh^362((fun a² -> (fun b¹ -> polyEq⁰(a², b¹))), _lh_union_arg1⁰, _lh_union_arg2⁰)
//│ def value_lh(_lh_value_arg1⁰) = case _lh_value_arg1⁰ of {
//│ 	Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰
//│ 	| _  => error⁰}
//│ def zipWith_lh(f³, xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C hx⁰ tx⁰ => case ys⁰ of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh^60(f³, tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec maxLevel_lh _lh_maxLevel_arg1_0 =
//│ 		  (match _lh_maxLevel_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      0
//│ 		    | `LH_C(_lh_maxLevel_LH_C_0_0, _lh_maxLevel_LH_C_1_0) -> 
//│ 		      (match _lh_maxLevel_LH_C_0_0 with
//│ 		        | `Assign(_lh_maxLevel_Assign_0_0, _lh_maxLevel_Assign_1_0) -> 
//│ 		          _lh_maxLevel_Assign_0_0
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec complete_lh _lh_complete_arg1_0 _lh_complete_arg2_0 =
//│ 		  (match _lh_complete_arg1_0 with
//│ 		    | `CSP(_lh_complete_CSP_0_0, _lh_complete_CSP_1_0, _lh_complete_CSP_2_0) -> 
//│ 		      ((maxLevel_lh _lh_complete_arg2_0) = _lh_complete_CSP_0_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec checkComplete_lh _lh_checkComplete_arg1_0 _lh_checkComplete_arg2_0 =
//│ 		  (if ((complete_lh _lh_checkComplete_arg1_0) _lh_checkComplete_arg2_0) then
//│ 		    (`Known((`LH_N)))
//│ 		  else
//│ 		    (`Unknown));;
//│ 		let rec filter_lh f_1 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (if (f_1 h_1) then
//│ 		        (`LH_C(h_1, ((filter_lh f_1) t_1)))
//│ 		      else
//│ 		        ((filter_lh f_1) t_1))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec level_lh _lh_level_arg1_0 =
//│ 		  (match _lh_level_arg1_0 with
//│ 		    | `Assign(_lh_level_Assign_0_0, _lh_level_Assign_1_0) -> 
//│ 		      _lh_level_Assign_0_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec reverse_helper_lh ls_8 a_1 =
//│ 		  (match ls_8 with
//│ 		    | `LH_C(h_9, t_9) -> 
//│ 		      ((reverse_helper_lh t_9) (`LH_C(h_9, a_1)))
//│ 		    | `LH_N -> 
//│ 		      a_1);;
//│ 		let rec reverse_lh ls_7 =
//│ 		  ((reverse_helper_lh ls_7) (`LH_N));;
//│ 		let rec earliestInconsistency_lh _lh_earliestInconsistency_arg1_0 _lh_earliestInconsistency_arg2_0 =
//│ 		  (match _lh_earliestInconsistency_arg1_0 with
//│ 		    | `CSP(_lh_earliestInconsistency_CSP_0_0, _lh_earliestInconsistency_CSP_1_0, _lh_earliestInconsistency_CSP_2_0) -> 
//│ 		      (match _lh_earliestInconsistency_arg2_0 with
//│ 		        | `LH_N -> 
//│ 		          (`Nothing)
//│ 		        | `LH_C(_lh_earliestInconsistency_LH_C_0_0, _lh_earliestInconsistency_LH_C_1_0) -> 
//│ 		          (let rec _lh_matchIdent_1 = ((filter_lh (fun _lh_funcomp_x_6 -> 
//│ 		            (not ((_lh_earliestInconsistency_CSP_2_0 _lh_earliestInconsistency_LH_C_0_0) _lh_funcomp_x_6)))) (reverse_lh _lh_earliestInconsistency_LH_C_1_0)) in
//│ 		            (match _lh_matchIdent_1 with
//│ 		              | `LH_N -> 
//│ 		                (`Nothing)
//│ 		              | `LH_C(_lh_earliestInconsistency_LH_C_0_1, _lh_earliestInconsistency_LH_C_1_1) -> 
//│ 		                (`Just((`LH_P2((level_lh _lh_earliestInconsistency_LH_C_0_0), (level_lh _lh_earliestInconsistency_LH_C_0_1)))))
//│ 		              | _ -> 
//│ 		                (failwith "error")))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh f_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C((f_0 h_0), ((map_lh f_0) t_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec mapTree_lh _lh_mapTree_arg1_0 _lh_mapTree_arg2_0 =
//│ 		  (match _lh_mapTree_arg2_0 with
//│ 		    | `Node(_lh_mapTree_Node_0_0, _lh_mapTree_Node_1_0) -> 
//│ 		      (`Node((_lh_mapTree_arg1_0 _lh_mapTree_Node_0_0), ((map_lh (mapTree_lh _lh_mapTree_arg1_0)) _lh_mapTree_Node_1_0)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec bt_lh _lh_bt_arg1_0 =
//│ 		  (let rec f_4 = (fun s_0 -> 
//│ 		    (`LH_P2(s_0, (let rec _lh_matchIdent_0 = ((earliestInconsistency_lh _lh_bt_arg1_0) s_0) in
//│ 		      (match _lh_matchIdent_0 with
//│ 		        | `Nothing -> 
//│ 		          ((checkComplete_lh _lh_bt_arg1_0) s_0)
//│ 		        | `Just(_lh_bt_Just_0_0) -> 
//│ 		          (match _lh_bt_Just_0_0 with
//│ 		            | `LH_P2(_lh_bt_LH_P2_0_0, _lh_bt_LH_P2_1_0) -> 
//│ 		              (`Known((`LH_C(_lh_bt_LH_P2_0_0, (`LH_C(_lh_bt_LH_P2_1_0, (`LH_N)))))))
//│ 		            | _ -> 
//│ 		              (failwith "error"))
//│ 		        | _ -> 
//│ 		          (failwith "error")))))) in
//│ 		    (mapTree_lh f_4));;
//│ 		let rec label_lh _lh_label_arg1_0 =
//│ 		  (match _lh_label_arg1_0 with
//│ 		    | `Node(_lh_label_Node_0_0, _lh_label_Node_1_0) -> 
//│ 		      _lh_label_Node_0_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec flip_lh _lh_flip_arg1_0 _lh_flip_arg2_0 _lh_flip_arg3_0 =
//│ 		  ((_lh_flip_arg1_0 _lh_flip_arg3_0) _lh_flip_arg2_0);;
//│ 		let rec deleteBy_lh _lh_deleteBy_arg1_0 _lh_deleteBy_arg2_0 _lh_deleteBy_arg3_0 =
//│ 		  (match _lh_deleteBy_arg3_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_deleteBy_LH_C_0_0, _lh_deleteBy_LH_C_1_0) -> 
//│ 		      (if ((_lh_deleteBy_arg1_0 _lh_deleteBy_arg2_0) _lh_deleteBy_LH_C_0_0) then
//│ 		        _lh_deleteBy_LH_C_1_0
//│ 		      else
//│ 		        (`LH_C(_lh_deleteBy_LH_C_0_0, (((deleteBy_lh _lh_deleteBy_arg1_0) _lh_deleteBy_arg2_0) _lh_deleteBy_LH_C_1_0))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec foldl_lh f_2 i_0 ls_2 =
//│ 		  (match ls_2 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (((foldl_lh f_2) ((f_2 i_0) h_2)) t_2)
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec mappend_lh xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      (`LH_C(h_6, ((mappend_lh t_6) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec nubBy_lh _lh_nubBy_arg1_0 _lh_nubBy_arg2_0 =
//│ 		  (match _lh_nubBy_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_nubBy_LH_C_0_0, _lh_nubBy_LH_C_1_0) -> 
//│ 		      (`LH_C(_lh_nubBy_LH_C_0_0, ((nubBy_lh _lh_nubBy_arg1_0) ((filter_lh (fun y_0 -> 
//│ 		        (not ((_lh_nubBy_arg1_0 _lh_nubBy_LH_C_0_0) y_0)))) _lh_nubBy_LH_C_1_0))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec unionBy_lh _lh_unionBy_arg1_0 _lh_unionBy_arg2_0 _lh_unionBy_arg3_0 =
//│ 		  ((mappend_lh _lh_unionBy_arg2_0) (((foldl_lh (flip_lh (deleteBy_lh _lh_unionBy_arg1_0))) ((nubBy_lh _lh_unionBy_arg1_0) _lh_unionBy_arg3_0)) _lh_unionBy_arg2_0));;
//│ 		let rec union_lh _lh_union_arg1_0 _lh_union_arg2_0 =
//│ 		  (((unionBy_lh (fun a_2 b_1 -> 
//│ 		    (a_2 = b_1))) _lh_union_arg1_0) _lh_union_arg2_0);;
//│ 		let rec notElem_lh _lh_notElem_arg1_0 _lh_notElem_arg2_0 =
//│ 		  (match _lh_notElem_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_notElem_LH_C_0_0, _lh_notElem_LH_C_1_0) -> 
//│ 		      (if (_lh_notElem_arg1_0 = _lh_notElem_LH_C_0_0) then
//│ 		        false
//│ 		      else
//│ 		        ((notElem_lh _lh_notElem_arg1_0) _lh_notElem_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec combine_lh _lh_combine_arg1_0 _lh_combine_arg2_0 =
//│ 		  (match _lh_combine_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      _lh_combine_arg2_0
//│ 		    | `LH_C(_lh_combine_LH_C_0_0, _lh_combine_LH_C_1_0) -> 
//│ 		      (match _lh_combine_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_combine_LH_P2_0_0, _lh_combine_LH_P2_1_0) -> 
//│ 		          (match _lh_combine_LH_P2_1_0 with
//│ 		            | `Known(_lh_combine_Known_0_0) -> 
//│ 		              (if ((notElem_lh (maxLevel_lh _lh_combine_LH_P2_0_0)) _lh_combine_Known_0_0) then
//│ 		                _lh_combine_Known_0_0
//│ 		              else
//│ 		                ((combine_lh _lh_combine_LH_C_1_0) ((union_lh _lh_combine_Known_0_0) _lh_combine_arg2_0)))
//│ 		            | _ -> 
//│ 		              (failwith "error"))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec foldTree_lh _lh_foldTree_arg1_0 _lh_foldTree_arg2_0 =
//│ 		  (match _lh_foldTree_arg2_0 with
//│ 		    | `Node(_lh_foldTree_Node_0_0, _lh_foldTree_Node_1_0) -> 
//│ 		      ((_lh_foldTree_arg1_0 _lh_foldTree_Node_0_0) ((map_lh (foldTree_lh _lh_foldTree_arg1_0)) _lh_foldTree_Node_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec bj_lh _lh_bj_arg1_0 =
//│ 		  (let rec f_5 = (fun _lh_f_arg1_0 _lh_f_arg2_0 -> 
//│ 		    (match _lh_f_arg1_0 with
//│ 		      | `LH_P2(_lh_f_LH_P2_0_0, _lh_f_LH_P2_1_0) -> 
//│ 		        (match _lh_f_LH_P2_1_0 with
//│ 		          | `Known(_lh_f_Known_0_0) -> 
//│ 		            (`Node((`LH_P2(_lh_f_LH_P2_0_0, (`Known(_lh_f_Known_0_0)))), _lh_f_arg2_0))
//│ 		          | `Unknown -> 
//│ 		            (`Node((`LH_P2(_lh_f_LH_P2_0_0, (`Known(((combine_lh ((map_lh label_lh) _lh_f_arg2_0)) (`LH_N)))))), _lh_f_arg2_0))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error"))) in
//│ 		    (foldTree_lh f_5));;
//│ 		let rec bjbt_lh _lh_bjbt_arg1_0 _lh_funcomp_x_3 =
//│ 		  ((bj_lh _lh_bjbt_arg1_0) ((bt_lh _lh_bjbt_arg1_0) _lh_funcomp_x_3));;
//│ 		let rec abs_lh _lh_abs_arg1_0 =
//│ 		  (if (_lh_abs_arg1_0 > 0) then
//│ 		    _lh_abs_arg1_0
//│ 		  else
//│ 		    (0 - _lh_abs_arg1_0));;
//│ 		let rec safe_lh _lh_safe_arg1_0 _lh_safe_arg2_0 =
//│ 		  (match _lh_safe_arg1_0 with
//│ 		    | `Assign(_lh_safe_Assign_0_0, _lh_safe_Assign_1_0) -> 
//│ 		      (match _lh_safe_arg2_0 with
//│ 		        | `Assign(_lh_safe_Assign_0_1, _lh_safe_Assign_1_1) -> 
//│ 		          ((_lh_safe_Assign_1_0 <> _lh_safe_Assign_1_1) && ((abs_lh (_lh_safe_Assign_0_0 - _lh_safe_Assign_0_1)) <> (abs_lh (_lh_safe_Assign_1_0 - _lh_safe_Assign_1_1))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec queens_lh _lh_queens_arg1_0 =
//│ 		  (`CSP(_lh_queens_arg1_0, _lh_queens_arg1_0, safe_lh));;
//│ 		let rec length_lh ls_5 =
//│ 		  (match ls_5 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      (1 + (length_lh t_5))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec filterTree_lh _lh_filterTree_arg1_0 =
//│ 		  (let rec f_8 = (fun a_3 cs_0 -> 
//│ 		    (`Node(a_3, ((filter_lh (fun _lh_funcomp_x_8 -> 
//│ 		      (_lh_filterTree_arg1_0 (label_lh _lh_funcomp_x_8)))) cs_0)))) in
//│ 		    (foldTree_lh f_8));;
//│ 		let rec prune_lh _lh_prune_arg1_0 =
//│ 		  (filterTree_lh (fun _lh_funcomp_x_2 -> 
//│ 		    (not (_lh_prune_arg1_0 _lh_funcomp_x_2))));;
//│ 		let rec concat_lh lss_0 =
//│ 		  (match lss_0 with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      ((mappend_lh h_8) (concat_lh t_8))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec leaves_lh _lh_leaves_arg1_0 =
//│ 		  (match _lh_leaves_arg1_0 with
//│ 		    | `Node(_lh_leaves_Node_0_0, _lh_leaves_Node_1_0) -> 
//│ 		      (match _lh_leaves_Node_1_0 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_C(_lh_leaves_Node_0_0, (`LH_N)))
//│ 		        | _ -> 
//│ 		          (concat_lh ((map_lh leaves_lh) _lh_leaves_Node_1_0)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec snd_lh _lh_snd_arg1_0 =
//│ 		  (match _lh_snd_arg1_0 with
//│ 		    | `LH_P2(_lh_snd_LH_P2_0_0, _lh_snd_LH_P2_1_0) -> 
//│ 		      _lh_snd_LH_P2_1_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec enumFromTo_lh a_0 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, ((enumFromTo_lh (a_0 + 1)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec initTree_lh _lh_initTree_arg1_0 _lh_initTree_arg2_0 =
//│ 		  (`Node(_lh_initTree_arg2_0, ((map_lh (initTree_lh _lh_initTree_arg1_0)) (_lh_initTree_arg1_0 _lh_initTree_arg2_0))));;
//│ 		let rec mkTree_lh _lh_mkTree_arg1_0 =
//│ 		  (match _lh_mkTree_arg1_0 with
//│ 		    | `CSP(_lh_mkTree_CSP_0_0, _lh_mkTree_CSP_1_0, _lh_mkTree_CSP_2_0) -> 
//│ 		      (let rec next_0 = (fun ss_0 -> 
//│ 		        (if ((maxLevel_lh ss_0) < _lh_mkTree_CSP_0_0) then
//│ 		          (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		            (match _lh_listcomp_fun_para_3 with
//│ 		              | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		                (`LH_C((`LH_C((`Assign(((maxLevel_lh ss_0) + 1), _lh_listcomp_fun_ls_h_3)), ss_0)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		              | `LH_N -> 
//│ 		                (`LH_N))) in
//│ 		            (_lh_listcomp_fun_3 ((enumFromTo_lh 1) _lh_mkTree_CSP_1_0)))
//│ 		        else
//│ 		          (`LH_N))) in
//│ 		        ((initTree_lh next_0) (`LH_N)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec knownConflict_lh _lh_knownConflict_arg1_0 =
//│ 		  (match _lh_knownConflict_arg1_0 with
//│ 		    | `Known(_lh_knownConflict_Known_0_0) -> 
//│ 		      (match _lh_knownConflict_Known_0_0 with
//│ 		        | `LH_C(_lh_knownConflict_LH_C_0_0, _lh_knownConflict_LH_C_1_0) -> 
//│ 		          true
//│ 		        | _ -> 
//│ 		          false)
//│ 		    | _ -> 
//│ 		      false);;
//│ 		let rec fst_lh _lh_fst_arg1_0 =
//│ 		  (match _lh_fst_arg1_0 with
//│ 		    | `LH_P2(_lh_fst_LH_P2_0_0, _lh_fst_LH_P2_1_0) -> 
//│ 		      _lh_fst_LH_P2_0_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec knownSolution_lh _lh_knownSolution_arg1_0 =
//│ 		  (match _lh_knownSolution_arg1_0 with
//│ 		    | `Known(_lh_knownSolution_Known_0_0) -> 
//│ 		      (match _lh_knownSolution_Known_0_0 with
//│ 		        | `LH_N -> 
//│ 		          true
//│ 		        | _ -> 
//│ 		          false)
//│ 		    | _ -> 
//│ 		      false);;
//│ 		let rec search_lh _lh_search_arg1_0 _lh_search_arg2_0 =
//│ 		  ((fun _lh_funcomp_x_9 -> 
//│ 		    ((fun _lh_funcomp_x_1_0 -> 
//│ 		      ((fun _lh_funcomp_x_1_1 -> 
//│ 		        ((fun _lh_funcomp_x_1_2 -> 
//│ 		          ((fun _lh_funcomp_x_1_3 -> 
//│ 		            ((map_lh fst_lh) ((filter_lh (fun _lh_funcomp_x_1_4 -> 
//│ 		              (knownSolution_lh (snd_lh _lh_funcomp_x_1_4)))) _lh_funcomp_x_1_3))) (leaves_lh _lh_funcomp_x_1_2))) ((prune_lh (fun _lh_funcomp_x_1_5 -> 
//│ 		          (knownConflict_lh (snd_lh _lh_funcomp_x_1_5)))) _lh_funcomp_x_1_1))) ((_lh_search_arg1_0 _lh_search_arg2_0) _lh_funcomp_x_1_0))) (mkTree_lh _lh_funcomp_x_9))) _lh_search_arg2_0);;
//│ 		let rec try_lh _lh_try_arg1_0 _lh_try_arg2_0 =
//│ 		  (length_lh ((search_lh _lh_try_arg2_0) (queens_lh _lh_try_arg1_0)));;
//│ 		let rec zipWith_lh f_3 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(hx_0, tx_0) -> 
//│ 		      (match ys_0 with
//│ 		        | `LH_C(hy_0, ty_0) -> 
//│ 		          (`LH_C(((f_3 hx_0) hy_0), (((zipWith_lh f_3) tx_0) ty_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec fillTable_lh _lh_fillTable_arg1_0 _lh_fillTable_arg2_0 _lh_fillTable_arg3_0 =
//│ 		  (match _lh_fillTable_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      _lh_fillTable_arg3_0
//│ 		    | `LH_C(_lh_fillTable_LH_C_0_0, _lh_fillTable_LH_C_1_0) -> 
//│ 		      (match _lh_fillTable_LH_C_0_0 with
//│ 		        | `Assign(_lh_fillTable_Assign_0_0, _lh_fillTable_Assign_1_0) -> 
//│ 		          (match _lh_fillTable_arg2_0 with
//│ 		            | `CSP(_lh_fillTable_CSP_0_0, _lh_fillTable_CSP_1_0, _lh_fillTable_CSP_2_0) -> 
//│ 		              (let rec f_9 = (fun cs_1 varval_0 -> 
//│ 		                (let rec _lh_matchIdent_2 = varval_0 in
//│ 		                  (match _lh_matchIdent_2 with
//│ 		                    | `LH_P2(_lh_fillTable_LH_P2_0_0, _lh_fillTable_LH_P2_1_0) -> 
//│ 		                      (if ((cs_1 = (`Unknown)) && (not ((_lh_fillTable_CSP_2_0 (`Assign(_lh_fillTable_Assign_0_0, _lh_fillTable_Assign_1_0))) (`Assign(_lh_fillTable_LH_P2_0_0, _lh_fillTable_LH_P2_1_0))))) then
//│ 		                        (`Known((`LH_C(_lh_fillTable_Assign_0_0, (`LH_C(_lh_fillTable_LH_P2_0_0, (`LH_N)))))))
//│ 		                      else
//│ 		                        cs_1)
//│ 		                    | _ -> 
//│ 		                      (failwith "error")))) in
//│ 		                (((zipWith_lh (zipWith_lh f_9)) _lh_fillTable_arg3_0) (let rec _lh_listcomp_fun_4 = (fun _lh_listcomp_fun_para_4 -> 
//│ 		                  (match _lh_listcomp_fun_para_4 with
//│ 		                    | `LH_C(_lh_listcomp_fun_ls_h_4, _lh_listcomp_fun_ls_t_4) -> 
//│ 		                      (`LH_C((let rec _lh_listcomp_fun_5 = (fun _lh_listcomp_fun_para_5 -> 
//│ 		                        (match _lh_listcomp_fun_para_5 with
//│ 		                          | `LH_C(_lh_listcomp_fun_ls_h_5, _lh_listcomp_fun_ls_t_5) -> 
//│ 		                            (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_4, _lh_listcomp_fun_ls_h_5)), (_lh_listcomp_fun_5 _lh_listcomp_fun_ls_t_5)))
//│ 		                          | `LH_N -> 
//│ 		                            (`LH_N))) in
//│ 		                        (_lh_listcomp_fun_5 ((enumFromTo_lh 1) _lh_fillTable_CSP_1_0))), (_lh_listcomp_fun_4 _lh_listcomp_fun_ls_t_4)))
//│ 		                    | `LH_N -> 
//│ 		                      (`LH_N))) in
//│ 		                  (_lh_listcomp_fun_4 ((enumFromTo_lh (_lh_fillTable_Assign_0_0 + 1)) _lh_fillTable_CSP_0_0)))))
//│ 		            | _ -> 
//│ 		              (failwith "error"))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec tail_lh ls_4 =
//│ 		  (match ls_4 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      t_4
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec cacheChecks_lh _lh_cacheChecks_arg1_0 _lh_cacheChecks_arg2_0 _lh_cacheChecks_arg3_0 =
//│ 		  (match _lh_cacheChecks_arg3_0 with
//│ 		    | `Node(_lh_cacheChecks_Node_0_0, _lh_cacheChecks_Node_1_0) -> 
//│ 		      (`Node((`LH_P2(_lh_cacheChecks_Node_0_0, _lh_cacheChecks_arg2_0)), ((map_lh ((cacheChecks_lh _lh_cacheChecks_arg1_0) (((fillTable_lh _lh_cacheChecks_Node_0_0) _lh_cacheChecks_arg1_0) (tail_lh _lh_cacheChecks_arg2_0)))) _lh_cacheChecks_Node_1_0)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec emptyTable_lh _lh_emptyTable_arg1_0 =
//│ 		  (match _lh_emptyTable_arg1_0 with
//│ 		    | `CSP(_lh_emptyTable_CSP_0_0, _lh_emptyTable_CSP_1_0, _lh_emptyTable_CSP_2_0) -> 
//│ 		      (`LH_C((`LH_N), (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		        (match _lh_listcomp_fun_para_0 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		            (`LH_C((let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		              (match _lh_listcomp_fun_para_1 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                  (`LH_C((`Unknown), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		                | `LH_N -> 
//│ 		                  (`LH_N))) in
//│ 		              (_lh_listcomp_fun_1 ((enumFromTo_lh 1) _lh_emptyTable_CSP_1_0))), (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_0 ((enumFromTo_lh 1) _lh_emptyTable_CSP_0_0)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec value_lh _lh_value_arg1_0 =
//│ 		  (match _lh_value_arg1_0 with
//│ 		    | `Assign(_lh_value_Assign_0_0, _lh_value_Assign_1_0) -> 
//│ 		      _lh_value_Assign_1_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec head_lh ls_3 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      h_3
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec atIndex_lh n_0 ls_6 =
//│ 		  (if (n_0 < 0) then
//│ 		    (failwith "error")
//│ 		  else
//│ 		    (match ls_6 with
//│ 		      | `LH_C(h_7, t_7) -> 
//│ 		        (if (n_0 = 0) then
//│ 		          h_7
//│ 		        else
//│ 		          ((atIndex_lh (n_0 - 1)) t_7))
//│ 		      | `LH_N -> 
//│ 		        (failwith "error")));;
//│ 		let rec lookupCache_lh _lh_lookupCache_arg1_0 _lh_lookupCache_arg2_0 =
//│ 		  (let rec f_1_0 = (fun _lh_f_arg1_3 _lh_f_arg2_2 -> 
//│ 		    (match _lh_f_arg2_2 with
//│ 		      | `LH_P2(_lh_f_LH_P2_0_4, _lh_f_LH_P2_1_4) -> 
//│ 		        (match _lh_f_LH_P2_0_4 with
//│ 		          | `LH_N -> 
//│ 		            (`LH_P2((`LH_P2((`LH_N), (`Unknown))), _lh_f_LH_P2_1_4))
//│ 		          | `LH_C(_lh_f_LH_C_0_0, _lh_f_LH_C_1_0) -> 
//│ 		            (let rec tableEntry_0 = ((atIndex_lh ((value_lh _lh_f_LH_C_0_0) - 1)) (head_lh _lh_f_LH_P2_1_4)) in
//│ 		              (let rec cs_2 = (if (tableEntry_0 = (`Unknown)) then
//│ 		                ((checkComplete_lh _lh_f_arg1_3) (`LH_C(_lh_f_LH_C_0_0, _lh_f_LH_C_1_0)))
//│ 		              else
//│ 		                tableEntry_0) in
//│ 		                (`LH_P2((`LH_P2((`LH_C(_lh_f_LH_C_0_0, _lh_f_LH_C_1_0)), cs_2)), _lh_f_LH_P2_1_4))))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error"))) in
//│ 		    ((mapTree_lh (f_1_0 _lh_lookupCache_arg1_0)) _lh_lookupCache_arg2_0));;
//│ 		let rec bm_lh _lh_bm_arg1_0 _lh_funcomp_x_0 =
//│ 		  ((fun _lh_funcomp_x_1 -> 
//│ 		    ((mapTree_lh fst_lh) ((lookupCache_lh _lh_bm_arg1_0) _lh_funcomp_x_1))) (((cacheChecks_lh _lh_bm_arg1_0) (emptyTable_lh _lh_bm_arg1_0)) _lh_funcomp_x_0));;
//│ 		let rec collect_lh _lh_collect_arg1_0 =
//│ 		  (match _lh_collect_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_collect_LH_C_0_0, _lh_collect_LH_C_1_0) -> 
//│ 		      (match _lh_collect_LH_C_0_0 with
//│ 		        | `Known(_lh_collect_Known_0_0) -> 
//│ 		          ((union_lh _lh_collect_Known_0_0) (collect_lh _lh_collect_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec all_lh _lh_all_arg1_0 _lh_all_arg2_0 =
//│ 		  (match _lh_all_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_all_LH_C_0_0, _lh_all_LH_C_1_0) -> 
//│ 		      (if (_lh_all_arg1_0 _lh_all_LH_C_0_0) then
//│ 		        ((all_lh _lh_all_arg1_0) _lh_all_LH_C_1_0)
//│ 		      else
//│ 		        false)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec null_lh _lh_null_arg1_0 =
//│ 		  (match _lh_null_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_null_LH_C_0_0, _lh_null_LH_C_1_0) -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec domainWipeOut_lh _lh_domainWipeOut_arg1_0 _lh_domainWipeOut_arg2_0 =
//│ 		  (match _lh_domainWipeOut_arg1_0 with
//│ 		    | `CSP(_lh_domainWipeOut_CSP_0_0, _lh_domainWipeOut_CSP_1_0, _lh_domainWipeOut_CSP_2_0) -> 
//│ 		      (let rec f_6 = (fun _lh_f_arg1_1 -> 
//│ 		        (match _lh_f_arg1_1 with
//│ 		          | `LH_P2(_lh_f_LH_P2_0_1, _lh_f_LH_P2_1_1) -> 
//│ 		            (match _lh_f_LH_P2_0_1 with
//│ 		              | `LH_P2(_lh_f_LH_P2_0_2, _lh_f_LH_P2_1_2) -> 
//│ 		                (let rec wipedDomains_0 = (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		                  (match _lh_listcomp_fun_para_2 with
//│ 		                    | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		                      (if ((all_lh knownConflict_lh) _lh_listcomp_fun_ls_h_2) then
//│ 		                        (`LH_C(_lh_listcomp_fun_ls_h_2, (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		                      else
//│ 		                        (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))
//│ 		                    | `LH_N -> 
//│ 		                      (`LH_N))) in
//│ 		                  (_lh_listcomp_fun_2 _lh_f_LH_P2_1_1)) in
//│ 		                  (let rec cs'_0 = (if (null_lh wipedDomains_0) then
//│ 		                    _lh_f_LH_P2_1_2
//│ 		                  else
//│ 		                    (`Known((collect_lh (head_lh wipedDomains_0))))) in
//│ 		                    (`LH_P2(_lh_f_LH_P2_0_2, cs'_0))))
//│ 		              | _ -> 
//│ 		                (failwith "error"))
//│ 		          | _ -> 
//│ 		            (failwith "error"))) in
//│ 		        ((mapTree_lh f_6) _lh_domainWipeOut_arg2_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec fc_lh _lh_fc_arg1_0 _lh_funcomp_x_4 =
//│ 		  ((fun _lh_funcomp_x_5 -> 
//│ 		    ((domainWipeOut_lh _lh_fc_arg1_0) ((lookupCache_lh _lh_fc_arg1_0) _lh_funcomp_x_5))) (((cacheChecks_lh _lh_fc_arg1_0) (emptyTable_lh _lh_fc_arg1_0)) _lh_funcomp_x_4));;
//│ 		let rec bj'_lh _lh_bj'_arg1_0 =
//│ 		  (let rec f_7 = (fun _lh_f_arg1_2 _lh_f_arg2_1 -> 
//│ 		    (match _lh_f_arg1_2 with
//│ 		      | `LH_P2(_lh_f_LH_P2_0_3, _lh_f_LH_P2_1_3) -> 
//│ 		        (match _lh_f_LH_P2_1_3 with
//│ 		          | `Known(_lh_f_Known_0_1) -> 
//│ 		            (`Node((`LH_P2(_lh_f_LH_P2_0_3, (`Known(_lh_f_Known_0_1)))), _lh_f_arg2_1))
//│ 		          | `Unknown -> 
//│ 		            (let rec cs'_1 = (`Known(((combine_lh ((map_lh label_lh) _lh_f_arg2_1)) (`LH_N)))) in
//│ 		              (if (knownConflict_lh cs'_1) then
//│ 		                (`Node((`LH_P2(_lh_f_LH_P2_0_3, cs'_1)), (`LH_N)))
//│ 		              else
//│ 		                (`Node((`LH_P2(_lh_f_LH_P2_0_3, cs'_1)), _lh_f_arg2_1))))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error"))) in
//│ 		    (foldTree_lh f_7));;
//│ 		let rec bjbt'_lh _lh_bjbt'_arg1_0 _lh_funcomp_x_7 =
//│ 		  ((bj'_lh _lh_bjbt'_arg1_0) ((bt_lh _lh_bjbt'_arg1_0) _lh_funcomp_x_7));;
//│ 		let rec testConstraints_nofib_lh _lh_testConstraints_nofib_arg1_0 =
//│ 		  ((map_lh (try_lh _lh_testConstraints_nofib_arg1_0)) (`LH_C(bt_lh, (`LH_C(bm_lh, (`LH_C(bjbt_lh, (`LH_C(bjbt'_lh, (`LH_C(fc_lh, (`LH_N))))))))))));;
//│ 		(testConstraints_nofib_lh 5)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => (1 + length_lh(t⁵)) | LH_N  => 0}: 114
//│ 	case lss⁰ of {LH_C h⁸ t⁸ => mappend_lh(h⁸, concat_lh(t⁸)) | LH_N  => [LH_N]}: 165
//│ 	case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))}: 325
//│ 	case _lh_combine_arg1⁰ of {LH_N  => _lh_combine_arg2⁰ | LH_C _lh_combine_LH_C_0⁰ _lh_combine_LH_C_1⁰ => case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 718
//│ [LH_N]: 11 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => (1 + length_lh(t⁵)) | LH_N  => 0}: 114
//│ 	case lss⁰ of {LH_C h⁸ t⁸ => mappend_lh(h⁸, concat_lh(t⁸)) | LH_N  => [LH_N]}: 165
//│ 	case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))}: 325
//│ 	case _lh_combine_arg1⁰ of {LH_N  => _lh_combine_arg2⁰ | LH_C _lh_combine_LH_C_0⁰ _lh_combine_LH_C_1⁰ => case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 718
//│ [LH_C h¹ filter_lh(f¹, t¹)]: 25 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))}: 325
//│ 	case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰}: 490
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ [LH_N]: 32 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))}: 325
//│ 	case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰}: 490
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 71
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 83
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => if (n⁰ == 0) then h⁷ else atIndex_lh((n⁰ - 1), t⁷) | LH_N  => error⁰}: 152
//│ 	case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰}: 301
//│ 	case _lh_collect_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 303
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 390
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]}: 584
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_N]: 68 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 71
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 83
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => if (n⁰ == 0) then h⁷ else atIndex_lh((n⁰ - 1), t⁷) | LH_N  => error⁰}: 152
//│ 	case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰}: 301
//│ 	case _lh_collect_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 303
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 390
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]}: 584
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_N]: 70 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 71
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 83
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => if (n⁰ == 0) then h⁷ else atIndex_lh((n⁰ - 1), t⁷) | LH_N  => error⁰}: 152
//│ 	case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰}: 301
//│ 	case _lh_collect_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 303
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 390
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]}: 584
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 100 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 195
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 210
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 746
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1010
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]}: 1025
//│ [LH_N]: 101 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 195
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 210
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 746
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1010
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]}: 1025
//│ [LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 164 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 170 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ [LH_C h⁹ a¹]: 179 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ [LH_N]: 186 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => if (n⁰ == 0) then h⁷ else atIndex_lh((n⁰ - 1), t⁷) | LH_N  => error⁰}: 152
//│ 	case _lh_collect_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 303
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 390
//│ [Unknown]: 189 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰}: 301
//│ 	case _lh_collect_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 303
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 390
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 71
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => if (n⁰ == 0) then h⁷ else atIndex_lh((n⁰ - 1), t⁷) | LH_N  => error⁰}: 152
//│ 	case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰}: 301
//│ 	case _lh_collect_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 303
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 390
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]}: 584
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_N]: 194 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 71
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => if (n⁰ == 0) then h⁷ else atIndex_lh((n⁰ - 1), t⁷) | LH_N  => error⁰}: 152
//│ 	case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰}: 301
//│ 	case _lh_collect_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 303
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 390
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]}: 584
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 71
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 83
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]}: 584
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_N]: 209 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 71
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 83
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]}: 584
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]: 220 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 83
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]}: 584
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 291 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ [LH_N]: 316 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ [LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 441 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]: 442 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]: 443 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]]: 444 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Nothing]: 464 --->
//│ 	case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}: 448
//│ [Nothing]: 480 --->
//│ 	case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}: 448
//│ [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]: 487 --->
//│ 	case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰}: 446
//│ [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]]: 488 --->
//│ 	case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}: 448
//│ [LH_N]: 508 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ [LH_C fc_lh [LH_N]]: 509 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ [LH_C bjbt'_lh [LH_C fc_lh [LH_N]]]: 510 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ [LH_C bjbt_lh [LH_C bjbt'_lh [LH_C fc_lh [LH_N]]]]: 511 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ [LH_C bm_lh [LH_C bjbt_lh [LH_C bjbt'_lh [LH_C fc_lh [LH_N]]]]]: 512 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ [LH_C bt_lh [LH_C bm_lh [LH_C bjbt_lh [LH_C bjbt'_lh [LH_C fc_lh [LH_N]]]]]]: 513 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ [Known _lh_f_Known_0⁰]: 520 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 532 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]: 534 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 578 --->
//│ 	DeadCodeCons
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case _lh_null_arg1⁰ of {LH_N  => [True] | LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False] | _  => error⁰}: 625
//│ [LH_N]: 583 --->
//│ 	DeadCodeCons
//│ 	case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78
//│ 	case _lh_null_arg1⁰ of {LH_N  => [True] | LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False] | _  => error⁰}: 625
//│ [Known collect_lh(head_lh(wipedDomains⁰))]: 599 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [CSP _lh_queens_arg1⁰ _lh_queens_arg1⁰ safe_lh]: 677 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_emptyTable_arg1⁰ of {CSP _lh_emptyTable_CSP_0⁰ _lh_emptyTable_CSP_1⁰ _lh_emptyTable_CSP_2⁰ => [LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))] | _  => error⁰}: 222
//│ 	case _lh_earliestInconsistency_arg1⁰ of {CSP _lh_earliestInconsistency_CSP_0⁰ _lh_earliestInconsistency_CSP_1⁰ _lh_earliestInconsistency_CSP_2⁰ => case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰} | _  => error⁰}: 495
//│ 	case _lh_domainWipeOut_arg1⁰ of {CSP _lh_domainWipeOut_CSP_0⁰ _lh_domainWipeOut_CSP_1⁰ _lh_domainWipeOut_CSP_2⁰ => let f⁶ = (fun _lh_f_arg1¹ -> case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰})
//│ in mapTree_lh(f⁶, _lh_domainWipeOut_arg2⁰) | _  => error⁰}: 618
//│ 	case _lh_complete_arg1⁰ of {CSP _lh_complete_CSP_0⁰ _lh_complete_CSP_1⁰ _lh_complete_CSP_2⁰ => (maxLevel_lh(_lh_complete_arg2⁰) == _lh_complete_CSP_0⁰) | _  => error⁰}: 688
//│ 	case _lh_mkTree_arg1⁰ of {CSP _lh_mkTree_CSP_0⁰ _lh_mkTree_CSP_1⁰ _lh_mkTree_CSP_2⁰ => let next⁰ = (fun ss⁰ -> if (maxLevel_lh(ss⁰) < _lh_mkTree_CSP_0⁰) then let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(enumFromTo_lh(1, _lh_mkTree_CSP_1⁰)) else [LH_N])
//│ in initTree_lh(next⁰, [LH_N]) | _  => error⁰}: 766
//│ 	case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰}: 1042
//│ [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_C [LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 744 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ [LH_N]: 745 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ [LH_N]: 756 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ [LH_N]: 762 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 813 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_deleteBy_arg3⁰ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0⁰ _lh_deleteBy_LH_C_1⁰ => if _lh_deleteBy_arg1⁰(_lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_0⁰) then _lh_deleteBy_LH_C_1⁰ else [LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)] | _  => error⁰}: 1128
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_deleteBy_arg3⁰ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0⁰ _lh_deleteBy_LH_C_1⁰ => if _lh_deleteBy_arg1⁰(_lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_0⁰) then _lh_deleteBy_LH_C_1⁰ else [LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)] | _  => error⁰}: 1128
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Known _lh_f_Known_0¹]: 851 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 862 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]: 864 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 871 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))}: 325
//│ [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 896 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ [Known [LH_N]]: 897 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [Unknown]: 898 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰]: 972 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]: 976 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ [LH_N]: 982 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]: 983 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]: 984 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]]: 985 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰}: 301
//│ 	case _lh_collect_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 303
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 390
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵]: 1004 --->
//│ 	case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}: 989
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 1008 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 69
//│ 	case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}: 989
//│ [LH_N]: 1009 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 69
//│ 	case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}: 989
//│ [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 1023 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 69
//│ [LH_N]: 1024 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 69
//│ [LH_N]: 1052 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [Unknown]: 1053 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311
//│ 	case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539
//│ 	case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714
//│ 	case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810
//│ 	case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881
//│ [LH_P2 [LH_N] [Unknown]]: 1054 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1080 --->
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_N]: 1110 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_deleteBy_arg3⁰ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0⁰ _lh_deleteBy_LH_C_1⁰ => if _lh_deleteBy_arg1⁰(_lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_0⁰) then _lh_deleteBy_LH_C_1⁰ else [LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)] | _  => error⁰}: 1128
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ [LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49
//│ 	case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182
//│ 	case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247
//│ 	case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309
//│ 	case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327
//│ 	case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460
//│ 	case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493
//│ 	case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541
//│ 	case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562
//│ 	case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607
//│ 	case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609
//│ 	case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655
//│ 	case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663
//│ 	case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670
//│ 	case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672
//│ 	case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716
//│ 	case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783
//│ 	case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802
//│ 	case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808
//│ 	case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883
//│ 	case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905
//│ 	case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939
//│ 	case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044
//│ 	case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046
//│ 	case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094
//│ 	case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096
//│ 	case _lh_deleteBy_arg3⁰ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0⁰ _lh_deleteBy_LH_C_1⁰ => if _lh_deleteBy_arg1⁰(_lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_0⁰) then _lh_deleteBy_LH_C_1⁰ else [LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)] | _  => error⁰}: 1128
//│ 	case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135
//│ ------------------
//│ case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ 	[LH_C h¹ filter_lh(f¹, t¹)]: 25
//│ 	[LH_N]: 32
//│ 	[LH_N]: 508
//│ 	[LH_C fc_lh [LH_N]]: 509
//│ 	[LH_C bjbt'_lh [LH_C fc_lh [LH_N]]]: 510
//│ 	[LH_C bjbt_lh [LH_C bjbt'_lh [LH_C fc_lh [LH_N]]]]: 511
//│ 	[LH_C bm_lh [LH_C bjbt_lh [LH_C bjbt'_lh [LH_C fc_lh [LH_N]]]]]: 512
//│ 	[LH_C bt_lh [LH_C bm_lh [LH_C bjbt_lh [LH_C bjbt'_lh [LH_C fc_lh [LH_N]]]]]]: 513
//│ 	[LH_C [LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 744
//│ 	[LH_N]: 745
//│ 	[LH_N]: 756
//│ 	[LH_N]: 871
//│ case ls¹ of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lh(f¹, t¹)] else filter_lh(f¹, t¹) | LH_N  => [LH_N]}: 33 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ 	[LH_C h¹ filter_lh(f¹, t¹)]: 25
//│ 	[LH_N]: 32
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_N]: 170
//│ 	[LH_C h⁹ a¹]: 179
//│ 	[LH_N]: 316
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 49 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_N]: 291
//│ 	[LH_N]: 441
//│ 	[LH_C _lh_bt_LH_P2_1⁰ [LH_N]]: 442
//│ 	[LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]: 443
//│ 	[LH_N]: 532
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_N]: 862
//│ 	[LH_N]: 896
//│ 	[LH_N]: 982
//│ 	[LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]: 983
//│ 	[LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]: 984
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 69 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 1008
//│ 	[LH_N]: 1009
//│ 	[LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 1023
//│ 	[LH_N]: 1024
//│ case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 71 --->
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208
//│ 	[LH_N]: 209
//│ case ls³ of {LH_C h³ t³ => h³ | LH_N  => error⁰}: 78 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208
//│ 	[LH_N]: 209
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]: 220
//│ 	[LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 578
//│ 	[LH_N]: 583
//│ case ls⁴ of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 83 --->
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208
//│ 	[LH_N]: 209
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]: 220
//│ case ls⁵ of {LH_C h⁵ t⁵ => (1 + length_lh(t⁵)) | LH_N  => 0}: 114 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ case xs¹ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys¹)] | LH_N  => ys¹}: 125 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_N]: 291
//│ 	[LH_N]: 316
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_N]: 441
//│ 	[LH_C _lh_bt_LH_P2_1⁰ [LH_N]]: 442
//│ 	[LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]: 443
//│ 	[LH_N]: 532
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_N]: 862
//│ 	[LH_N]: 896
//│ 	[LH_N]: 982
//│ 	[LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]: 983
//│ 	[LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]: 984
//│ 	[LH_N]: 1052
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case ls⁶ of {LH_C h⁷ t⁷ => if (n⁰ == 0) then h⁷ else atIndex_lh((n⁰ - 1), t⁷) | LH_N  => error⁰}: 152 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[LH_N]: 186
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ case lss⁰ of {LH_C h⁸ t⁸ => mappend_lh(h⁸, concat_lh(t⁸)) | LH_N  => [LH_N]}: 165 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ case ls⁸ of {LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a¹]) | LH_N  => a¹}: 182 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_N]: 316
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_N]: 1052
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 195 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 100
//│ 	[LH_N]: 101
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 210 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 100
//│ 	[LH_N]: 101
//│ case _lh_emptyTable_arg1⁰ of {CSP _lh_emptyTable_CSP_0⁰ _lh_emptyTable_CSP_1⁰ _lh_emptyTable_CSP_2⁰ => [LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))] | _  => error⁰}: 222 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[CSP _lh_queens_arg1⁰ _lh_queens_arg1⁰ safe_lh]: 677
//│ case _lh_cacheChecks_arg3⁰ of {Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)] | _  => error⁰}: 247 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰}: 301 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[Unknown]: 189
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]]: 985
//│ case _lh_collect_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 303 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[LH_N]: 186
//│ 	[Unknown]: 189
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]]: 985
//│ case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]}: 309 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_N]: 291
//│ 	[LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]: 443
//│ 	[LH_N]: 532
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_N]: 862
//│ 	[LH_N]: 896
//│ 	[LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]: 984
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_knownSolution_arg1⁰ of {Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 311 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[Unknown]: 189
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208
//│ 	[LH_N]: 209
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]: 220
//│ 	[Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]]: 444
//│ 	[Known _lh_f_Known_0⁰]: 520
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]: 534
//│ 	[Known collect_lh(head_lh(wipedDomains⁰))]: 599
//│ 	[Known _lh_f_Known_0¹]: 851
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]: 864
//│ 	[Known [LH_N]]: 897
//│ 	[Unknown]: 898
//│ 	[Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]]: 985
//│ 	[Unknown]: 1053
//│ case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))}: 325 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ 	[LH_C h¹ filter_lh(f¹, t¹)]: 25
//│ 	[LH_N]: 32
//│ 	[LH_N]: 871
//│ case _lh_leaves_arg1⁰ of {Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]] | _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))} | _  => error⁰}: 327 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 390 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[LH_N]: 186
//│ 	[Unknown]: 189
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]]: 985
//│ case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰}: 446 --->
//│ 	[LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]: 487
//│ case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}: 448 --->
//│ 	[Nothing]: 464
//│ 	[Nothing]: 480
//│ 	[Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]]: 488
//│ case _lh_label_arg1⁰ of {Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰ | _  => error⁰}: 460 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰}: 490 --->
//│ 	[LH_C h¹ filter_lh(f¹, t¹)]: 25
//│ 	[LH_N]: 32
//│ case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰}: 493 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_earliestInconsistency_arg1⁰ of {CSP _lh_earliestInconsistency_CSP_0⁰ _lh_earliestInconsistency_CSP_1⁰ _lh_earliestInconsistency_CSP_2⁰ => case _lh_earliestInconsistency_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => let _lh_matchIdent¹ = filter_lh((fun _lh_funcomp_x⁶ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x⁶))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ in case _lh_matchIdent¹ of {LH_N  => [Nothing] | LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]] | _  => error⁰} | _  => error⁰} | _  => error⁰}: 495 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[CSP _lh_queens_arg1⁰ _lh_queens_arg1⁰ safe_lh]: 677
//│ case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰}: 539 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[Unknown]: 189
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208
//│ 	[LH_N]: 209
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]: 220
//│ 	[Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]]: 444
//│ 	[Known _lh_f_Known_0⁰]: 520
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]: 534
//│ 	[Known collect_lh(head_lh(wipedDomains⁰))]: 599
//│ 	[Known _lh_f_Known_0¹]: 851
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]: 864
//│ 	[Known [LH_N]]: 897
//│ 	[Unknown]: 898
//│ 	[Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]]: 985
//│ 	[Unknown]: 1053
//│ case _lh_f_arg1⁰ of {LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰] | _  => error⁰} | _  => error⁰}: 541 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_foldTree_arg2⁰ of {Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1⁰(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1⁰), _lh_foldTree_Node_1⁰)) | _  => error⁰}: 562 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]}: 584 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208
//│ 	[LH_N]: 209
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]: 220
//│ case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰}: 607 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰}: 609 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_domainWipeOut_arg1⁰ of {CSP _lh_domainWipeOut_CSP_0⁰ _lh_domainWipeOut_CSP_1⁰ _lh_domainWipeOut_CSP_2⁰ => let f⁶ = (fun _lh_f_arg1¹ -> case _lh_f_arg1¹ of {LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let wipedDomains⁰ = let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_f_LH_P2_1¹)
//│ in let cs'⁰ = if null_lh(wipedDomains⁰) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains⁰))]
//│ in [LH_P2 _lh_f_LH_P2_0² cs'⁰] | _  => error⁰} | _  => error⁰})
//│ in mapTree_lh(f⁶, _lh_domainWipeOut_arg2⁰) | _  => error⁰}: 618 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[CSP _lh_queens_arg1⁰ _lh_queens_arg1⁰ safe_lh]: 677
//│ case _lh_null_arg1⁰ of {LH_N  => [True] | LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False] | _  => error⁰}: 625 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 578
//│ 	[LH_N]: 583
//│ case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰}: 655 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]: 976
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_safe_arg1⁰ of {Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2⁰ of {Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹)))) | _  => error⁰} | _  => error⁰}: 657 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰]: 972
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 663 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰}: 670 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_maxLevel_arg1⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰ | _  => error⁰} | _  => error⁰}: 672 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1080
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_complete_arg1⁰ of {CSP _lh_complete_CSP_0⁰ _lh_complete_CSP_1⁰ _lh_complete_CSP_2⁰ => (maxLevel_lh(_lh_complete_arg2⁰) == _lh_complete_CSP_0⁰) | _  => error⁰}: 688 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[CSP _lh_queens_arg1⁰ _lh_queens_arg1⁰ safe_lh]: 677
//│ case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰}: 714 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[Unknown]: 189
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208
//│ 	[LH_N]: 209
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]: 220
//│ 	[Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]]: 444
//│ 	[Known _lh_f_Known_0⁰]: 520
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]: 534
//│ 	[Known collect_lh(head_lh(wipedDomains⁰))]: 599
//│ 	[Known _lh_f_Known_0¹]: 851
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]: 864
//│ 	[Known [LH_N]]: 897
//│ 	[Unknown]: 898
//│ 	[Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]]: 985
//│ 	[Unknown]: 1053
//│ case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰}: 716 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_combine_arg1⁰ of {LH_N  => _lh_combine_arg2⁰ | LH_C _lh_combine_LH_C_0⁰ _lh_combine_LH_C_1⁰ => case _lh_combine_LH_C_0⁰ of {LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2⁰)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 718 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 746 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 100
//│ 	[LH_N]: 101
//│ case _lh_mkTree_arg1⁰ of {CSP _lh_mkTree_CSP_0⁰ _lh_mkTree_CSP_1⁰ _lh_mkTree_CSP_2⁰ => let next⁰ = (fun ss⁰ -> if (maxLevel_lh(ss⁰) < _lh_mkTree_CSP_0⁰) then let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(enumFromTo_lh(1, _lh_mkTree_CSP_1⁰)) else [LH_N])
//│ in initTree_lh(next⁰, [LH_N]) | _  => error⁰}: 766 --->
//│ 	[CSP _lh_queens_arg1⁰ _lh_queens_arg1⁰ safe_lh]: 677
//│ case _lh_notElem_arg2⁰ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1⁰, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1⁰, _lh_notElem_LH_C_1⁰) | _  => error⁰}: 783 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_N]: 291
//│ 	[LH_N]: 441
//│ 	[LH_C _lh_bt_LH_P2_1⁰ [LH_N]]: 442
//│ 	[LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]: 443
//│ 	[LH_N]: 532
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_N]: 862
//│ 	[LH_N]: 896
//│ 	[LH_N]: 982
//│ 	[LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]: 983
//│ 	[LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]: 984
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_fst_arg1⁰ of {LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰ | _  => error⁰}: 802 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]}: 808 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_N]: 291
//│ 	[LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]: 443
//│ 	[LH_N]: 532
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_N]: 862
//│ 	[LH_N]: 896
//│ 	[LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]: 984
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_knownConflict_arg1⁰ of {Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True] | _  => [False]} | _  => [False]}: 810 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[Unknown]: 189
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208
//│ 	[LH_N]: 209
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]: 220
//│ 	[Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]]: 444
//│ 	[Known _lh_f_Known_0⁰]: 520
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]: 534
//│ 	[Known collect_lh(head_lh(wipedDomains⁰))]: 599
//│ 	[Known _lh_f_Known_0¹]: 851
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]: 864
//│ 	[Known [LH_N]]: 897
//│ 	[Unknown]: 898
//│ 	[Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]]: 985
//│ 	[Unknown]: 1053
//│ case _lh_nubBy_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))] | _  => error⁰}: 833 --->
//│ 	[LH_C h¹ filter_lh(f¹, t¹)]: 25
//│ 	[LH_N]: 32
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_N]: 291
//│ 	[LH_N]: 532
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_N]: 862
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰}: 881 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lh(f³, tx⁰, ty⁰)]: 67
//│ 	[LH_N]: 68
//│ 	[LH_N]: 70
//│ 	[Unknown]: 189
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 193
//│ 	[LH_N]: 194
//│ 	[LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 208
//│ 	[LH_N]: 209
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]: 220
//│ 	[Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]]: 444
//│ 	[Known _lh_f_Known_0⁰]: 520
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]: 534
//│ 	[Known collect_lh(head_lh(wipedDomains⁰))]: 599
//│ 	[Known _lh_f_Known_0¹]: 851
//│ 	[Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]: 864
//│ 	[Known [LH_N]]: 897
//│ 	[Unknown]: 898
//│ 	[Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]]: 985
//│ 	[Unknown]: 1053
//│ case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹] | Unknown  => let cs'¹ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2¹), [LH_N])]
//│ in if knownConflict_lh(cs'¹) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹] | _  => error⁰} | _  => error⁰}: 883 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_value_arg1⁰ of {Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰ | _  => error⁰}: 905 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_mapTree_arg2⁰ of {Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)] | _  => error⁰}: 939 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}: 989 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵]: 1004
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 1008
//│ 	[LH_N]: 1009
//│ case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1010 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 100
//│ 	[LH_N]: 101
//│ case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]}: 1025 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 100
//│ 	[LH_N]: 101
//│ case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰}: 1042 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[CSP _lh_queens_arg1⁰ _lh_queens_arg1⁰ safe_lh]: 677
//│ case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰}: 1044 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_fillTable_arg1⁰ of {LH_N  => _lh_fillTable_arg3⁰ | LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2⁰ of {CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => let f⁹ = (fun cs¹ -> (fun varval⁰ -> let _lh_matchIdent² = varval⁰
//│ in case _lh_matchIdent² of {LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs¹, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs¹ | _  => error⁰}))
//│ in zipWith_lh(zipWith_lh(f⁹), _lh_fillTable_arg3⁰, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁵(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1046 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰}: 1094 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_f_arg2² of {LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴] | LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => let tableEntry⁰ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ in let cs² = if polyEq⁰(tableEntry⁰, [Unknown]) then checkComplete_lh(_lh_f_arg1³, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry⁰
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴] | _  => error⁰} | _  => error⁰}: 1096 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_deleteBy_arg3⁰ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0⁰ _lh_deleteBy_LH_C_1⁰ => if _lh_deleteBy_arg1⁰(_lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_0⁰) then _lh_deleteBy_LH_C_1⁰ else [LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)] | _  => error⁰}: 1128 --->
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ case _lh_level_arg1⁰ of {Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰ | _  => error⁰}: 1135 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁶ mappend_lh(t⁶, ys¹)]: 123
//│ 	[LH_N]: 164
//│ 	[LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰]: 227
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2⁰] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1⁰, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1⁰, tail_lh(_lh_cacheChecks_arg2⁰))), _lh_cacheChecks_Node_1⁰)]: 245
//│ 	[LH_C _lh_leaves_Node_0⁰ [LH_N]]: 317
//│ 	[LH_P2 s⁰ let _lh_matchIdent⁰ = earliestInconsistency_lh(_lh_bt_arg1⁰, s⁰)
//│ in case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}]: 450
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]]: 521
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2⁰]: 523
//│ 	[LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]]: 535
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁰), [LH_N])]] _lh_f_arg2⁰]: 537
//│ 	[LH_P2 _lh_f_LH_P2_0² cs'⁰]: 603
//│ 	[Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³]: 738
//│ 	[LH_C [Assign (maxLevel_lh(ss⁰) + 1) _lh_listcomp_fun_ls_h³] ss⁰]: 740
//│ 	[LH_N]: 762
//│ 	[LH_N]: 813
//│ 	[LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1⁰, filter_lh((fun y⁰ -> not⁰(_lh_nubBy_arg1⁰(_lh_nubBy_LH_C_0⁰, y⁰))), _lh_nubBy_LH_C_1⁰))]: 831
//│ 	[LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]]: 852
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2¹]: 854
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 870
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] [LH_N]]: 872
//│ 	[LH_P2 _lh_f_LH_P2_0³ cs'¹]: 875
//│ 	[Node [LH_P2 _lh_f_LH_P2_0³ cs'¹] _lh_f_arg2¹]: 877
//│ 	[Node a³ filter_lh((fun _lh_funcomp_x⁸ -> _lh_filterTree_arg1⁰(label_lh(_lh_funcomp_x⁸))), cs⁰)]: 918
//│ 	[Node _lh_mapTree_arg1⁰(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1⁰), _lh_mapTree_Node_1⁰)]: 937
//│ 	[Node _lh_initTree_arg2⁰ map_lh(initTree_lh(_lh_initTree_arg1⁰), _lh_initTree_arg1⁰(_lh_initTree_arg2⁰))]: 952
//│ 	[LH_N]: 1052
//│ 	[LH_P2 [LH_N] [Unknown]]: 1054
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]: 1056
//│ 	[LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]: 1086
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²]: 1088
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs²] _lh_f_LH_P2_1⁴]: 1090
//│ 	[LH_N]: 1110
//│ 	[LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1⁰, _lh_deleteBy_arg2⁰, _lh_deleteBy_LH_C_1⁰)]: 1125
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [Nothing]: 464 --->
//│ 	case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}: 448
//│ [Nothing]: 480 --->
//│ 	case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}: 448
//│ [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]: 487 --->
//│ 	case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰}: 446
//│ [Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]]: 488 --->
//│ 	case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}: 448
//│ ------------------
//│ case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰}: 446 --->
//│ 	[LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]: 487
//│ case _lh_matchIdent⁰ of {Nothing  => checkComplete_lh(_lh_bt_arg1⁰, s⁰) | Just _lh_bt_Just_0⁰ => case _lh_bt_Just_0⁰ of {LH_P2 _lh_bt_LH_P2_0⁰ _lh_bt_LH_P2_1⁰ => [Known [LH_C _lh_bt_LH_P2_0⁰ [LH_C _lh_bt_LH_P2_1⁰ [LH_N]]]] | _  => error⁰} | _  => error⁰}: 448 --->
//│ 	[Nothing]: 464
//│ 	[Nothing]: 480
//│ 	[Just [LH_P2 level_lh(_lh_earliestInconsistency_LH_C_0⁰) level_lh(_lh_earliestInconsistency_LH_C_0¹)]]: 488
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testConstraints_nofib_lh(primId⁰(5))
//│ def abs_lh(_lh_abs_arg1¹) = if (_lh_abs_arg1¹ > 0) then _lh_abs_arg1¹ else (0 - _lh_abs_arg1¹)
//│ def all_lh(_lh_all_arg1¹, _lh_all_arg2¹) = case _lh_all_arg2¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1¹(_lh_all_LH_C_0⁰) then all_lh(_lh_all_arg1¹, _lh_all_LH_C_1⁰) else [False]
//│ 	| _  => error⁰}
//│ def atIndex_lh(n¹, ls¹¹) = if (n¹ < 0) then error⁰ else case ls¹¹ of {
//│ 	LH_C h⁷ t⁷ => if (n¹ == 0) then h⁷ else atIndex_lh((n¹ - 1), t⁷)
//│ 	| LH_N  => error⁰}
//│ def bj'_lh(_lh_bj'_arg1¹) = 
//│ 	let f¹⁹ = (fun _lh_f_arg1⁷ -> (fun _lh_f_arg2⁵ -> case _lh_f_arg1⁷ of {
//│ 		LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => case _lh_f_LH_P2_1³ of {
//│ 			Known _lh_f_Known_0¹ => [Node [LH_P2 _lh_f_LH_P2_0³ [Known _lh_f_Known_0¹]] _lh_f_arg2⁵]
//│ 			| Unknown  => 
//│ 				let cs'³ = [Known combine_lh(map_lh(label_lh, _lh_f_arg2⁵), [LH_N])]
//│ 				in if knownConflict_lh(cs'³) then [Node [LH_P2 _lh_f_LH_P2_0³ cs'³] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0³ cs'³] _lh_f_arg2⁵]
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}))
//│ 	in foldTree_lh(f¹⁹)
//│ def bj_lh(_lh_bj_arg1¹) = 
//│ 	let f¹⁴ = (fun _lh_f_arg1⁵ -> (fun _lh_f_arg2³ -> case _lh_f_arg1⁵ of {
//│ 		LH_P2 _lh_f_LH_P2_0⁰ _lh_f_LH_P2_1⁰ => case _lh_f_LH_P2_1⁰ of {
//│ 			Known _lh_f_Known_0⁰ => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known _lh_f_Known_0⁰]] _lh_f_arg2³]
//│ 			| Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁰ [Known combine_lh(map_lh(label_lh, _lh_f_arg2³), [LH_N])]] _lh_f_arg2³]
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}))
//│ 	in foldTree_lh(f¹⁴)
//│ def bjbt'_lh(_lh_bjbt'_arg1¹, _lh_funcomp_x²¹) = bj'_lh(_lh_bjbt'_arg1¹, bt_lh(_lh_bjbt'_arg1¹, _lh_funcomp_x²¹))
//│ def bjbt_lh(_lh_bjbt_arg1¹, _lh_funcomp_x²²) = bj_lh(_lh_bjbt_arg1¹, bt_lh(_lh_bjbt_arg1¹, _lh_funcomp_x²²))
//│ def bm_lh(_lh_bm_arg1¹, _lh_funcomp_x¹⁷) = (fun _lh_funcomp_x¹⁸ -> mapTree_lh(fst_lh, lookupCache_lh(_lh_bm_arg1¹, _lh_funcomp_x¹⁸)))(cacheChecks_lh(_lh_bm_arg1¹, emptyTable_lh(_lh_bm_arg1¹), _lh_funcomp_x¹⁷))
//│ def bt_lh(_lh_bt_arg1⁴) = 
//│ 	let f²¹ = (fun s⁴ -> [LH_P2 s⁴ 
//│ 		let _lh_matchIdent⁵ = earliestInconsistency_lh(_lh_bt_arg1⁴, s⁴)
//│ 		in _lh_matchIdent⁵(_lh_bt_arg1⁴, s⁴)])
//│ 	in mapTree_lh(f²¹)
//│ def cacheChecks_lh(_lh_cacheChecks_arg1¹, _lh_cacheChecks_arg2¹, _lh_cacheChecks_arg3¹) = case _lh_cacheChecks_arg3¹ of {
//│ 	Node _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_Node_1⁰ => [Node [LH_P2 _lh_cacheChecks_Node_0⁰ _lh_cacheChecks_arg2¹] map_lh(cacheChecks_lh(_lh_cacheChecks_arg1¹, fillTable_lh(_lh_cacheChecks_Node_0⁰, _lh_cacheChecks_arg1¹, tail_lh(_lh_cacheChecks_arg2¹))), _lh_cacheChecks_Node_1⁰)]
//│ 	| _  => error⁰}
//│ def checkComplete_lh(_lh_checkComplete_arg1¹, _lh_checkComplete_arg2¹) = if complete_lh(_lh_checkComplete_arg1¹, _lh_checkComplete_arg2¹) then [Known [LH_N]] else [Unknown]
//│ def collect_lh(_lh_collect_arg1¹) = case _lh_collect_arg1¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_collect_LH_C_0⁰ _lh_collect_LH_C_1⁰ => case _lh_collect_LH_C_0⁰ of {
//│ 		Known _lh_collect_Known_0⁰ => union_lh(_lh_collect_Known_0⁰, collect_lh(_lh_collect_LH_C_1⁰))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def combine_lh(_lh_combine_arg1¹, _lh_combine_arg2¹) = case _lh_combine_arg1¹ of {
//│ 	LH_N  => _lh_combine_arg2¹
//│ 	| LH_C _lh_combine_LH_C_0⁰ _lh_combine_LH_C_1⁰ => case _lh_combine_LH_C_0⁰ of {
//│ 		LH_P2 _lh_combine_LH_P2_0⁰ _lh_combine_LH_P2_1⁰ => case _lh_combine_LH_P2_1⁰ of {
//│ 			Known _lh_combine_Known_0⁰ => if notElem_lh(maxLevel_lh(_lh_combine_LH_P2_0⁰), _lh_combine_Known_0⁰) then _lh_combine_Known_0⁰ else combine_lh(_lh_combine_LH_C_1⁰, union_lh(_lh_combine_Known_0⁰, _lh_combine_arg2¹))
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def complete_lh(_lh_complete_arg1¹, _lh_complete_arg2¹) = case _lh_complete_arg1¹ of {
//│ 	CSP _lh_complete_CSP_0⁰ _lh_complete_CSP_1⁰ _lh_complete_CSP_2⁰ => (maxLevel_lh(_lh_complete_arg2¹) == _lh_complete_CSP_0⁰)
//│ 	| _  => error⁰}
//│ def concat_lh(lss¹) = case lss¹ of {
//│ 	LH_C h⁸ t⁸ => mappend_lh(h⁸, concat_lh(t⁸))
//│ 	| LH_N  => [LH_N]}
//│ def deleteBy_lh(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_arg3¹) = case _lh_deleteBy_arg3¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_deleteBy_LH_C_0⁰ _lh_deleteBy_LH_C_1⁰ => if _lh_deleteBy_arg1¹(_lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_0⁰) then _lh_deleteBy_LH_C_1⁰ else [LH_C _lh_deleteBy_LH_C_0⁰ deleteBy_lh(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1⁰)]
//│ 	| _  => error⁰}
//│ def domainWipeOut_lh(_lh_domainWipeOut_arg1¹, _lh_domainWipeOut_arg2¹) = case _lh_domainWipeOut_arg1¹ of {
//│ 	CSP _lh_domainWipeOut_CSP_0⁰ _lh_domainWipeOut_CSP_1⁰ _lh_domainWipeOut_CSP_2⁰ => 
//│ 		let f¹² = (fun _lh_f_arg1⁴ -> case _lh_f_arg1⁴ of {
//│ 			LH_P2 _lh_f_LH_P2_0¹ _lh_f_LH_P2_1¹ => case _lh_f_LH_P2_0¹ of {
//│ 				LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => 
//│ 					let wipedDomains¹ = 	
//│ 						let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 							LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if all_lh(knownConflict_lh, _lh_listcomp_fun_ls_h²) then [LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t²)
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun⁸(_lh_f_LH_P2_1¹)
//│ 					in let cs'² = if null_lh(wipedDomains¹) then _lh_f_LH_P2_1² else [Known collect_lh(head_lh(wipedDomains¹))]
//│ 					in [LH_P2 _lh_f_LH_P2_0² cs'²]
//│ 				| _  => error⁰}
//│ 			| _  => error⁰})
//│ 		in mapTree_lh(f¹², _lh_domainWipeOut_arg2¹)
//│ 	| _  => error⁰}
//│ def earliestInconsistency_lh(_lh_earliestInconsistency_arg1¹, _lh_earliestInconsistency_arg2¹) = case _lh_earliestInconsistency_arg1¹ of {
//│ 	CSP _lh_earliestInconsistency_CSP_0⁰ _lh_earliestInconsistency_CSP_1⁰ _lh_earliestInconsistency_CSP_2⁰ => case _lh_earliestInconsistency_arg2¹ of {
//│ 		LH_N  => (fun _lh_bt_arg1¹ -> (fun s¹ -> checkComplete_lh(_lh_bt_arg1¹, s¹)))
//│ 		| LH_C _lh_earliestInconsistency_LH_C_0⁰ _lh_earliestInconsistency_LH_C_1⁰ => 
//│ 			let _lh_matchIdent⁴ = filter_lh((fun _lh_funcomp_x²³ -> not⁰(_lh_earliestInconsistency_CSP_2⁰(_lh_earliestInconsistency_LH_C_0⁰, _lh_funcomp_x²³))), reverse_lh(_lh_earliestInconsistency_LH_C_1⁰))
//│ 			in case _lh_matchIdent⁴ of {
//│ 				LH_N  => (fun _lh_bt_arg1² -> (fun s² -> checkComplete_lh(_lh_bt_arg1², s²)))
//│ 				| LH_C _lh_earliestInconsistency_LH_C_0¹ _lh_earliestInconsistency_LH_C_1¹ => 
//│ 					let _lh_bt_Just_0¹ = 	
//│ 						let _lh_bt_LH_P2_1¹ = level_lh(_lh_earliestInconsistency_LH_C_0¹)
//│ 						in let _lh_bt_LH_P2_0¹ = level_lh(_lh_earliestInconsistency_LH_C_0⁰)
//│ 						in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ 					in (fun _lh_bt_arg1³ -> (fun s³ -> _lh_bt_Just_0¹))
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def emptyTable_lh(_lh_emptyTable_arg1¹) = case _lh_emptyTable_arg1¹ of {
//│ 	CSP _lh_emptyTable_CSP_0⁰ _lh_emptyTable_CSP_1⁰ _lh_emptyTable_CSP_2⁰ => [LH_C [LH_N] 
//│ 		let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C 
//│ 				let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 					LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [Unknown] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t¹)]
//│ 					| LH_N  => [LH_N]})
//│ 				in _lh_listcomp_fun⁷(enumFromTo_lh(1, _lh_emptyTable_CSP_1⁰)) _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁰)]
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁶(enumFromTo_lh(1, _lh_emptyTable_CSP_0⁰))]
//│ 	| _  => error⁰}
//│ def enumFromTo_lh(a⁴, b²) = if (a⁴ <= b²) then [LH_C a⁴ enumFromTo_lh((a⁴ + 1), b²)] else [LH_N]
//│ def fc_lh(_lh_fc_arg1¹, _lh_funcomp_x¹⁹) = (fun _lh_funcomp_x²⁰ -> domainWipeOut_lh(_lh_fc_arg1¹, lookupCache_lh(_lh_fc_arg1¹, _lh_funcomp_x²⁰)))(cacheChecks_lh(_lh_fc_arg1¹, emptyTable_lh(_lh_fc_arg1¹), _lh_funcomp_x¹⁹))
//│ def fillTable_lh(_lh_fillTable_arg1¹, _lh_fillTable_arg2¹, _lh_fillTable_arg3¹) = case _lh_fillTable_arg1¹ of {
//│ 	LH_N  => _lh_fillTable_arg3¹
//│ 	| LH_C _lh_fillTable_LH_C_0⁰ _lh_fillTable_LH_C_1⁰ => case _lh_fillTable_LH_C_0⁰ of {
//│ 		Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰ => case _lh_fillTable_arg2¹ of {
//│ 			CSP _lh_fillTable_CSP_0⁰ _lh_fillTable_CSP_1⁰ _lh_fillTable_CSP_2⁰ => 
//│ 				let f¹³ = (fun cs³ -> (fun varval¹ -> 
//│ 					let _lh_matchIdent³ = varval¹
//│ 					in case _lh_matchIdent³ of {
//│ 						LH_P2 _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁰([Assign _lh_fillTable_Assign_0⁰ _lh_fillTable_Assign_1⁰], [Assign _lh_fillTable_LH_P2_0⁰ _lh_fillTable_LH_P2_1⁰]))) then [Known [LH_C _lh_fillTable_Assign_0⁰ [LH_C _lh_fillTable_LH_P2_0⁰ [LH_N]]]] else cs³
//│ 						| _  => error⁰}))
//│ 				in zipWith_lh(zipWith_lh(f¹³), _lh_fillTable_arg3¹, 
//│ 					let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 						LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C 
//│ 							let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 								LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)]
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun¹⁰(enumFromTo_lh(1, _lh_fillTable_CSP_1⁰)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)]
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun⁹(enumFromTo_lh((_lh_fillTable_Assign_0⁰ + 1), _lh_fillTable_CSP_0⁰)))
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def filterTree_lh(_lh_filterTree_arg1¹) = 
//│ 	let f¹⁸ = (fun a⁶ -> (fun cs⁵ -> [Node a⁶ filter_lh((fun _lh_funcomp_x²⁴ -> _lh_filterTree_arg1¹(label_lh(_lh_funcomp_x²⁴))), cs⁵)]))
//│ 	in foldTree_lh(f¹⁸)
//│ def filter_lh(f²⁰, ls¹⁶) = case ls¹⁶ of {
//│ 	LH_C h¹ t¹ => if f²⁰(h¹) then [LH_C h¹ filter_lh(f²⁰, t¹)] else filter_lh(f²⁰, t¹)
//│ 	| LH_N  => [LH_N]}
//│ def flip_lh(_lh_flip_arg1¹, _lh_flip_arg2¹, _lh_flip_arg3¹) = _lh_flip_arg1¹(_lh_flip_arg3¹, _lh_flip_arg2¹)
//│ def foldTree_lh(_lh_foldTree_arg1¹, _lh_foldTree_arg2¹) = case _lh_foldTree_arg2¹ of {
//│ 	Node _lh_foldTree_Node_0⁰ _lh_foldTree_Node_1⁰ => _lh_foldTree_arg1¹(_lh_foldTree_Node_0⁰, map_lh(foldTree_lh(_lh_foldTree_arg1¹), _lh_foldTree_Node_1⁰))
//│ 	| _  => error⁰}
//│ def foldl_lh(f¹⁵, i¹, ls¹³) = case ls¹³ of {
//│ 	LH_C h² t² => foldl_lh(f¹⁵, f¹⁵(i¹, h²), t²)
//│ 	| LH_N  => i¹}
//│ def fst_lh(_lh_fst_arg1¹) = case _lh_fst_arg1¹ of {
//│ 	LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰
//│ 	| _  => error⁰}
//│ def head_lh(ls¹⁴) = case ls¹⁴ of {
//│ 	LH_C h³ t³ => h³
//│ 	| LH_N  => error⁰}
//│ def initTree_lh(_lh_initTree_arg1¹, _lh_initTree_arg2¹) = [Node _lh_initTree_arg2¹ map_lh(initTree_lh(_lh_initTree_arg1¹), _lh_initTree_arg1¹(_lh_initTree_arg2¹))]
//│ def knownConflict_lh(_lh_knownConflict_arg1¹) = case _lh_knownConflict_arg1¹ of {
//│ 	Known _lh_knownConflict_Known_0⁰ => case _lh_knownConflict_Known_0⁰ of {
//│ 		LH_C _lh_knownConflict_LH_C_0⁰ _lh_knownConflict_LH_C_1⁰ => [True]
//│ 		| _  => [False]}
//│ 	| _  => [False]}
//│ def knownSolution_lh(_lh_knownSolution_arg1¹) = case _lh_knownSolution_arg1¹ of {
//│ 	Known _lh_knownSolution_Known_0⁰ => case _lh_knownSolution_Known_0⁰ of {
//│ 		LH_N  => [True]
//│ 		| _  => [False]}
//│ 	| _  => [False]}
//│ def label_lh(_lh_label_arg1¹) = case _lh_label_arg1¹ of {
//│ 	Node _lh_label_Node_0⁰ _lh_label_Node_1⁰ => _lh_label_Node_0⁰
//│ 	| _  => error⁰}
//│ def leaves_lh(_lh_leaves_arg1¹) = case _lh_leaves_arg1¹ of {
//│ 	Node _lh_leaves_Node_0⁰ _lh_leaves_Node_1⁰ => case _lh_leaves_Node_1⁰ of {
//│ 		LH_N  => [LH_C _lh_leaves_Node_0⁰ [LH_N]]
//│ 		| _  => concat_lh(map_lh(leaves_lh, _lh_leaves_Node_1⁰))}
//│ 	| _  => error⁰}
//│ def length_lh(ls¹⁰) = case ls¹⁰ of {
//│ 	LH_C h⁵ t⁵ => (1 + length_lh(t⁵))
//│ 	| LH_N  => 0}
//│ def level_lh(_lh_level_arg1¹) = case _lh_level_arg1¹ of {
//│ 	Assign _lh_level_Assign_0⁰ _lh_level_Assign_1⁰ => _lh_level_Assign_0⁰
//│ 	| _  => error⁰}
//│ def lookupCache_lh(_lh_lookupCache_arg1¹, _lh_lookupCache_arg2¹) = 
//│ 	let f¹⁶ = (fun _lh_f_arg1⁶ -> (fun _lh_f_arg2⁴ -> case _lh_f_arg2⁴ of {
//│ 		LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴ => case _lh_f_LH_P2_0⁴ of {
//│ 			LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁴]
//│ 			| LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰ => 
//│ 				let tableEntry¹ = atIndex_lh((value_lh(_lh_f_LH_C_0⁰) - 1), head_lh(_lh_f_LH_P2_1⁴))
//│ 				in let cs⁴ = if polyEq⁰(tableEntry¹, [Unknown]) then checkComplete_lh(_lh_f_arg1⁶, [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰]) else tableEntry¹
//│ 				in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0⁰ _lh_f_LH_C_1⁰] cs⁴] _lh_f_LH_P2_1⁴]
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}))
//│ 	in mapTree_lh(f¹⁶(_lh_lookupCache_arg1¹), _lh_lookupCache_arg2¹)
//│ def mapTree_lh(_lh_mapTree_arg1¹, _lh_mapTree_arg2¹) = case _lh_mapTree_arg2¹ of {
//│ 	Node _lh_mapTree_Node_0⁰ _lh_mapTree_Node_1⁰ => [Node _lh_mapTree_arg1¹(_lh_mapTree_Node_0⁰) map_lh(mapTree_lh(_lh_mapTree_arg1¹), _lh_mapTree_Node_1⁰)]
//│ 	| _  => error⁰}
//│ def map_lh(f¹⁷, ls¹⁵) = case ls¹⁵ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f¹⁷(h⁰) map_lh(f¹⁷, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh(xs³, ys³) = case xs³ of {
//│ 	LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh(t⁶, ys³)]
//│ 	| LH_N  => ys³}
//│ def maxLevel_lh(_lh_maxLevel_arg1¹) = case _lh_maxLevel_arg1¹ of {
//│ 	LH_N  => 0
//│ 	| LH_C _lh_maxLevel_LH_C_0⁰ _lh_maxLevel_LH_C_1⁰ => case _lh_maxLevel_LH_C_0⁰ of {
//│ 		Assign _lh_maxLevel_Assign_0⁰ _lh_maxLevel_Assign_1⁰ => _lh_maxLevel_Assign_0⁰
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def mkTree_lh(_lh_mkTree_arg1¹) = case _lh_mkTree_arg1¹ of {
//│ 	CSP _lh_mkTree_CSP_0⁰ _lh_mkTree_CSP_1⁰ _lh_mkTree_CSP_2⁰ => 
//│ 		let next¹ = (fun ss¹ -> if (maxLevel_lh(ss¹) < _lh_mkTree_CSP_0⁰) then 
//│ 			let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C [Assign (maxLevel_lh(ss¹) + 1) _lh_listcomp_fun_ls_h³] ss¹] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t³)]
//│ 				| LH_N  => [LH_N]})
//│ 			in _lh_listcomp_fun¹¹(enumFromTo_lh(1, _lh_mkTree_CSP_1⁰)) else [LH_N])
//│ 		in initTree_lh(next¹, [LH_N])
//│ 	| _  => error⁰}
//│ def notElem_lh(_lh_notElem_arg1¹, _lh_notElem_arg2¹) = case _lh_notElem_arg2¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_notElem_LH_C_0⁰ _lh_notElem_LH_C_1⁰ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0⁰) then [False] else notElem_lh(_lh_notElem_arg1¹, _lh_notElem_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def nubBy_lh(_lh_nubBy_arg1¹, _lh_nubBy_arg2¹) = case _lh_nubBy_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_nubBy_LH_C_0⁰ _lh_nubBy_LH_C_1⁰ => [LH_C _lh_nubBy_LH_C_0⁰ nubBy_lh(_lh_nubBy_arg1¹, filter_lh((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0⁰, y¹))), _lh_nubBy_LH_C_1⁰))]
//│ 	| _  => error⁰}
//│ def null_lh(_lh_null_arg1¹) = case _lh_null_arg1¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False]
//│ 	| _  => error⁰}
//│ def prune_lh(_lh_prune_arg1¹) = filterTree_lh((fun _lh_funcomp_x¹⁶ -> not⁰(_lh_prune_arg1¹(_lh_funcomp_x¹⁶))))
//│ def queens_lh(_lh_queens_arg1¹) = [CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh]
//│ def reverse_helper_lh(ls¹⁷, a⁷) = case ls¹⁷ of {
//│ 	LH_C h⁹ t⁹ => reverse_helper_lh(t⁹, [LH_C h⁹ a⁷])
//│ 	| LH_N  => a⁷}
//│ def reverse_lh(ls⁹) = reverse_helper_lh(ls⁹, [LH_N])
//│ def safe_lh(_lh_safe_arg1¹, _lh_safe_arg2¹) = case _lh_safe_arg1¹ of {
//│ 	Assign _lh_safe_Assign_0⁰ _lh_safe_Assign_1⁰ => case _lh_safe_arg2¹ of {
//│ 		Assign _lh_safe_Assign_0¹ _lh_safe_Assign_1¹ => ((_lh_safe_Assign_1⁰ /= _lh_safe_Assign_1¹) && (abs_lh((_lh_safe_Assign_0⁰ - _lh_safe_Assign_0¹)) /= abs_lh((_lh_safe_Assign_1⁰ - _lh_safe_Assign_1¹))))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def search_lh(_lh_search_arg1¹, _lh_search_arg2¹) = (fun _lh_funcomp_x²⁵ -> (fun _lh_funcomp_x²⁶ -> (fun _lh_funcomp_x²⁷ -> (fun _lh_funcomp_x²⁸ -> (fun _lh_funcomp_x²⁹ -> map_lh(fst_lh, filter_lh((fun _lh_funcomp_x³⁰ -> knownSolution_lh(snd_lh(_lh_funcomp_x³⁰))), _lh_funcomp_x²⁹)))(leaves_lh(_lh_funcomp_x²⁸)))(prune_lh((fun _lh_funcomp_x³¹ -> knownConflict_lh(snd_lh(_lh_funcomp_x³¹))), _lh_funcomp_x²⁷)))(_lh_search_arg1¹(_lh_search_arg2¹, _lh_funcomp_x²⁶)))(mkTree_lh(_lh_funcomp_x²⁵)))(_lh_search_arg2¹)
//│ def snd_lh(_lh_snd_arg1¹) = case _lh_snd_arg1¹ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def tail_lh(ls¹²) = case ls¹² of {
//│ 	LH_C h⁴ t⁴ => t⁴
//│ 	| LH_N  => error⁰}
//│ def testConstraints_nofib_lh(_lh_testConstraints_nofib_arg1¹) = map_lh(try_lh(_lh_testConstraints_nofib_arg1¹), [LH_C bt_lh [LH_C bm_lh [LH_C bjbt_lh [LH_C bjbt'_lh [LH_C fc_lh [LH_N]]]]]])
//│ def try_lh(_lh_try_arg1¹, _lh_try_arg2¹) = length_lh(search_lh(_lh_try_arg2¹, queens_lh(_lh_try_arg1¹)))
//│ def unionBy_lh(_lh_unionBy_arg1¹, _lh_unionBy_arg2¹, _lh_unionBy_arg3¹) = mappend_lh(_lh_unionBy_arg2¹, foldl_lh(flip_lh(deleteBy_lh(_lh_unionBy_arg1¹)), nubBy_lh(_lh_unionBy_arg1¹, _lh_unionBy_arg3¹), _lh_unionBy_arg2¹))
//│ def union_lh(_lh_union_arg1¹, _lh_union_arg2¹) = unionBy_lh((fun a⁵ -> (fun b³ -> polyEq⁰(a⁵, b³))), _lh_union_arg1¹, _lh_union_arg2¹)
//│ def value_lh(_lh_value_arg1¹) = case _lh_value_arg1¹ of {
//│ 	Assign _lh_value_Assign_0⁰ _lh_value_Assign_1⁰ => _lh_value_Assign_1⁰
//│ 	| _  => error⁰}
//│ def zipWith_lh(f¹¹, xs², ys²) = case xs² of {
//│ 	LH_C hx⁰ tx⁰ => case ys² of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C f¹¹(hx⁰, hy⁰) zipWith_lh(f¹¹, tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testConstraints_nofib_lh^1] (hopeless to continue)
//│ 	[testConstraints_nofib_lh^1 · bjbt'_lh^344] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · combine_lh^241] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · maxLevel_lh^234] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · notElem_lh^233] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · notElem_lh^233 · notElem_lh^1117] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · notElem_lh^233] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · deleteBy_lh^109] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · deleteBy_lh^109 · deleteBy_lh^672] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · deleteBy_lh^109] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · flip_lh^108] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · foldl_lh^107] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · foldl_lh^107 · foldl_lh^773] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · foldl_lh^107] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · mappend_lh^104] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · mappend_lh^104 · mappend_lh^890] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · mappend_lh^104] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010] (using original def)
//│ 								[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010 · filter_lh^1132] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010] (using original def)
//│ 								[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010 · filter_lh^1138] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · nubBy_lh^1007] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · combine_lh^1057 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · foldTree_lh^1088] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · foldTree_lh^1088 · foldTree_lh^1172] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · foldTree_lh^1088] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · foldTree_lh^1088 · map_lh^1171] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · foldTree_lh^1088 · map_lh^1171 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · foldTree_lh^1088 · map_lh^1171] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · knownConflict_lh^1067] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · label_lh^1059] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · map_lh^1058] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · map_lh^1058 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bj'_lh^218 · map_lh^1058] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · checkComplete_lh^716] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · checkComplete_lh^716 · complete_lh^514] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · checkComplete_lh^716 · complete_lh^514 · maxLevel_lh^612] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · checkComplete_lh^738] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · checkComplete_lh^738 · complete_lh^514] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · checkComplete_lh^738 · complete_lh^514 · maxLevel_lh^612] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · filter_lh^723] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · filter_lh^723 · filter_lh^1132] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · filter_lh^723] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · filter_lh^723 · filter_lh^1138] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · filter_lh^723] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · level_lh^745] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · level_lh^748] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · reverse_lh^733] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · reverse_lh^733 · reverse_helper_lh^37] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · reverse_lh^733 · reverse_helper_lh^37 · reverse_helper_lh^1184] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · earliestInconsistency_lh^1149 · reverse_lh^733 · reverse_helper_lh^37] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · mapTree_lh^1162] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · mapTree_lh^1162 · mapTree_lh^1098] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · mapTree_lh^1162] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · mapTree_lh^1162 · map_lh^1097] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · mapTree_lh^1162 · map_lh^1097 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bjbt'_lh^344 · bt_lh^221 · mapTree_lh^1162 · map_lh^1097] (using original def)
//│ 	[testConstraints_nofib_lh^1 · bjbt_lh^343] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · combine_lh^241] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · maxLevel_lh^234] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · notElem_lh^233] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · notElem_lh^233 · notElem_lh^1117] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · notElem_lh^233] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · deleteBy_lh^109] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · deleteBy_lh^109 · deleteBy_lh^672] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · deleteBy_lh^109] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · flip_lh^108] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · foldl_lh^107] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · foldl_lh^107 · foldl_lh^773] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · foldl_lh^107] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · mappend_lh^104] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · mappend_lh^104 · mappend_lh^890] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · mappend_lh^104] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010] (using original def)
//│ 								[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010 · filter_lh^1132] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010] (using original def)
//│ 								[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010 · filter_lh^1138] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010] (using original def)
//│ 							[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114 · nubBy_lh^1007] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · combine_lh^639 · union_lh^244 · unionBy_lh^699 · nubBy_lh^114] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · foldTree_lh^658] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · foldTree_lh^658 · foldTree_lh^1172] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · foldTree_lh^658] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · foldTree_lh^658 · map_lh^1171] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · foldTree_lh^658 · map_lh^1171 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · foldTree_lh^658 · map_lh^1171] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · label_lh^641] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · map_lh^640] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · map_lh^640 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bj_lh^454 · map_lh^640] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · checkComplete_lh^716] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · checkComplete_lh^716 · complete_lh^514] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · checkComplete_lh^716 · complete_lh^514 · maxLevel_lh^612] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · checkComplete_lh^738] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · checkComplete_lh^738 · complete_lh^514] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · checkComplete_lh^738 · complete_lh^514 · maxLevel_lh^612] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · filter_lh^723] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · filter_lh^723 · filter_lh^1132] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · filter_lh^723] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · filter_lh^723 · filter_lh^1138] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · filter_lh^723] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · level_lh^745] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · level_lh^748] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · reverse_lh^733] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · reverse_lh^733 · reverse_helper_lh^37] (using original def)
//│ 						[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · reverse_lh^733 · reverse_helper_lh^37 · reverse_helper_lh^1184] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · earliestInconsistency_lh^1149 · reverse_lh^733 · reverse_helper_lh^37] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · mapTree_lh^1162] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · mapTree_lh^1162 · mapTree_lh^1098] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · mapTree_lh^1162] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · mapTree_lh^1162 · map_lh^1097] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · mapTree_lh^1162 · map_lh^1097 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bjbt_lh^343 · bt_lh^457 · mapTree_lh^1162 · map_lh^1097] (using original def)
//│ 	[testConstraints_nofib_lh^1 · bm_lh^342] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · cacheChecks_lh^492] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · enumFromTo_lh^417] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · enumFromTo_lh^417 · enumFromTo_lh^182] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · enumFromTo_lh^417] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · enumFromTo_lh^432] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · enumFromTo_lh^432 · enumFromTo_lh^182] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · enumFromTo_lh^432] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · zipWith_lh^397] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · zipWith_lh^397 · zipWith_lh^13] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · zipWith_lh^397] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · zipWith_lh^398] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · zipWith_lh^398 · zipWith_lh^13] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · fillTable_lh^495 · zipWith_lh^398] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · map_lh^491] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · map_lh^491 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · map_lh^491] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · cacheChecks_lh^164 · tail_lh^500] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bm_lh^342 · emptyTable_lh^167] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · emptyTable_lh^167 · enumFromTo_lh^56] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · emptyTable_lh^167 · enumFromTo_lh^56 · enumFromTo_lh^182] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · emptyTable_lh^167 · enumFromTo_lh^56] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · emptyTable_lh^167 · enumFromTo_lh^71] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · emptyTable_lh^167 · enumFromTo_lh^71 · enumFromTo_lh^182] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · emptyTable_lh^167 · enumFromTo_lh^71] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bm_lh^342 · fst_lh^155] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · atIndex_lh^801] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · atIndex_lh^801 · atIndex_lh^139] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · atIndex_lh^801] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · checkComplete_lh^819] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · checkComplete_lh^819 · complete_lh^514] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · checkComplete_lh^819 · complete_lh^514 · maxLevel_lh^612] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · head_lh^810] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · mapTree_lh^843] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · mapTree_lh^843 · mapTree_lh^1098] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · mapTree_lh^843] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · mapTree_lh^843 · map_lh^1097] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · mapTree_lh^843 · map_lh^1097 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · mapTree_lh^843 · map_lh^1097] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · lookupCache_lh^157 · value_lh^803] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bm_lh^342 · mapTree_lh^154] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · mapTree_lh^154 · mapTree_lh^1098] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · mapTree_lh^154] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bm_lh^342 · mapTree_lh^154 · map_lh^1097] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bm_lh^342 · mapTree_lh^154 · map_lh^1097 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bm_lh^342 · mapTree_lh^154 · map_lh^1097] (using original def)
//│ 	[testConstraints_nofib_lh^1 · bt_lh^341] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · checkComplete_lh^716] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · checkComplete_lh^716 · complete_lh^514] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · checkComplete_lh^716 · complete_lh^514 · maxLevel_lh^612] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · checkComplete_lh^738] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · checkComplete_lh^738 · complete_lh^514] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · checkComplete_lh^738 · complete_lh^514 · maxLevel_lh^612] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · filter_lh^723] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · filter_lh^723 · filter_lh^1132] ---> [testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · filter_lh^723] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · filter_lh^723 · filter_lh^1138] ---> [testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · filter_lh^723] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · level_lh^745] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · level_lh^748] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · reverse_lh^733] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · reverse_lh^733 · reverse_helper_lh^37] (using original def)
//│ 					[testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · reverse_lh^733 · reverse_helper_lh^37 · reverse_helper_lh^1184] ---> [testConstraints_nofib_lh^1 · bt_lh^341 · earliestInconsistency_lh^1149 · reverse_lh^733 · reverse_helper_lh^37] (using original def)
//│ 		[testConstraints_nofib_lh^1 · bt_lh^341 · mapTree_lh^1162] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bt_lh^341 · mapTree_lh^1162 · mapTree_lh^1098] ---> [testConstraints_nofib_lh^1 · bt_lh^341 · mapTree_lh^1162] (using original def)
//│ 			[testConstraints_nofib_lh^1 · bt_lh^341 · mapTree_lh^1162 · map_lh^1097] (using original def)
//│ 				[testConstraints_nofib_lh^1 · bt_lh^341 · mapTree_lh^1162 · map_lh^1097 · map_lh^904] ---> [testConstraints_nofib_lh^1 · bt_lh^341 · mapTree_lh^1162 · map_lh^1097] (using original def)
//│ 	[testConstraints_nofib_lh^1 · fc_lh^345] (using original def)
//│ 		[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · cacheChecks_lh^492] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · enumFromTo_lh^417] (using original def)
//│ 					[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · enumFromTo_lh^417 · enumFromTo_lh^182] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · enumFromTo_lh^417] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · enumFromTo_lh^432] (using original def)
//│ 					[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · enumFromTo_lh^432 · enumFromTo_lh^182] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · enumFromTo_lh^432] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · zipWith_lh^397] (using original def)
//│ 					[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · zipWith_lh^397 · zipWith_lh^13] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · zipWith_lh^397] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · zipWith_lh^398] (using original def)
//│ 					[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · zipWith_lh^398 · zipWith_lh^13] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · fillTable_lh^495 · zipWith_lh^398] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · map_lh^491] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · map_lh^491 · map_lh^904] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · map_lh^491] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · cacheChecks_lh^206 · tail_lh^500] (using original def)
//│ 		[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · all_lh^263] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · all_lh^263 · all_lh^1033] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · all_lh^263] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · collect_lh^928] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925] (using original def)
//│ 					[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699] (using original def)
//│ 						[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · deleteBy_lh^109] (using original def)
//│ 							[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · deleteBy_lh^109 · deleteBy_lh^672] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · deleteBy_lh^109] (using original def)
//│ 						[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · flip_lh^108] (using original def)
//│ 						[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · foldl_lh^107] (using original def)
//│ 							[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · foldl_lh^107 · foldl_lh^773] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · foldl_lh^107] (using original def)
//│ 						[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · mappend_lh^104] (using original def)
//│ 							[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · mappend_lh^104 · mappend_lh^890] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · mappend_lh^104] (using original def)
//│ 						[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · nubBy_lh^114] (using original def)
//│ 							[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010] (using original def)
//│ 								[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010 · filter_lh^1132] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010] (using original def)
//│ 								[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010 · filter_lh^1138] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · nubBy_lh^114 · filter_lh^1010] (using original def)
//│ 							[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · nubBy_lh^114 · nubBy_lh^1007] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · collect_lh^288 · union_lh^925 · unionBy_lh^699 · nubBy_lh^114] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · head_lh^289] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · knownConflict_lh^264] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · mapTree_lh^305] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · mapTree_lh^305 · mapTree_lh^1098] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · mapTree_lh^305] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · mapTree_lh^305 · map_lh^1097] (using original def)
//│ 					[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · mapTree_lh^305 · map_lh^1097 · map_lh^904] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · mapTree_lh^305 · map_lh^1097] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · domainWipeOut_lh^196 · null_lh^284] (using original def)
//│ 		[testConstraints_nofib_lh^1 · fc_lh^345 · emptyTable_lh^209] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · emptyTable_lh^209 · enumFromTo_lh^56] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · emptyTable_lh^209 · enumFromTo_lh^56 · enumFromTo_lh^182] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · emptyTable_lh^209 · enumFromTo_lh^56] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · emptyTable_lh^209 · enumFromTo_lh^71] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · emptyTable_lh^209 · enumFromTo_lh^71 · enumFromTo_lh^182] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · emptyTable_lh^209 · enumFromTo_lh^71] (using original def)
//│ 		[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · atIndex_lh^801] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · atIndex_lh^801 · atIndex_lh^139] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · atIndex_lh^801] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · checkComplete_lh^819] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · checkComplete_lh^819 · complete_lh^514] (using original def)
//│ 					[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · checkComplete_lh^819 · complete_lh^514 · maxLevel_lh^612] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · head_lh^810] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · mapTree_lh^843] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · mapTree_lh^843 · mapTree_lh^1098] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · mapTree_lh^843] (using original def)
//│ 				[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · mapTree_lh^843 · map_lh^1097] (using original def)
//│ 					[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · mapTree_lh^843 · map_lh^1097 · map_lh^904] ---> [testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · mapTree_lh^843 · map_lh^1097] (using original def)
//│ 			[testConstraints_nofib_lh^1 · fc_lh^345 · lookupCache_lh^199 · value_lh^803] (using original def)
//│ 	[testConstraints_nofib_lh^1 · map_lh^336] (using original def)
//│ 		[testConstraints_nofib_lh^1 · map_lh^336 · map_lh^904] ---> [testConstraints_nofib_lh^1 · map_lh^336] (using original def)
//│ 	[testConstraints_nofib_lh^1 · try_lh^337] (using original def)
//│ 		[testConstraints_nofib_lh^1 · try_lh^337 · length_lh^93] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · length_lh^93 · length_lh^86] ---> [testConstraints_nofib_lh^1 · try_lh^337 · length_lh^93] (using original def)
//│ 		[testConstraints_nofib_lh^1 · try_lh^337 · queens_lh^97] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · queens_lh^97 · safe_lh^874] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · queens_lh^97 · safe_lh^874 · abs_lh^535] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · queens_lh^97 · safe_lh^874 · abs_lh^543] (using original def)
//│ 		[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · filter_lh^959] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · filter_lh^959 · filter_lh^1132] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · filter_lh^959] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · filter_lh^959 · filter_lh^1138] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · filter_lh^959] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · fst_lh^957] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · knownConflict_lh^977] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · knownSolution_lh^960] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · concat_lh^325] (using original def)
//│ 					[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · concat_lh^325 · concat_lh^881] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · concat_lh^325] (using original def)
//│ 					[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · concat_lh^325 · mappend_lh^878] (using original def)
//│ 						[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · concat_lh^325 · mappend_lh^878 · mappend_lh^890] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · concat_lh^325 · mappend_lh^878] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · leaves_lh^327] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · map_lh^326] (using original def)
//│ 					[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · map_lh^326 · map_lh^904] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · leaves_lh^971 · map_lh^326] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · map_lh^956] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · map_lh^956 · map_lh^904] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · map_lh^956] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · enumFromTo_lh^586] (using original def)
//│ 					[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · enumFromTo_lh^586 · enumFromTo_lh^182] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · enumFromTo_lh^586] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · initTree_lh^596] (using original def)
//│ 					[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · initTree_lh^596 · initTree_lh^688] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · initTree_lh^596] (using original def)
//│ 					[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · initTree_lh^596 · map_lh^687] (using original def)
//│ 						[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · initTree_lh^596 · map_lh^687 · map_lh^904] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · initTree_lh^596 · map_lh^687] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · maxLevel_lh^560] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · mkTree_lh^995 · maxLevel_lh^568] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976] (using original def)
//│ 				[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28] (using original def)
//│ 					[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · filter_lh^938] (using original def)
//│ 						[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · filter_lh^938 · filter_lh^1132] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · filter_lh^938] (using original def)
//│ 						[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · filter_lh^938 · filter_lh^1138] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · filter_lh^938] (using original def)
//│ 					[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · foldTree_lh^951] (using original def)
//│ 						[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · foldTree_lh^951 · foldTree_lh^1172] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · foldTree_lh^951] (using original def)
//│ 						[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · foldTree_lh^951 · map_lh^1171] (using original def)
//│ 							[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · foldTree_lh^951 · map_lh^1171 · map_lh^904] ---> [testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · foldTree_lh^951 · map_lh^1171] (using original def)
//│ 					[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · prune_lh^976 · filterTree_lh^28 · label_lh^940] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · snd_lh^961] (using original def)
//│ 			[testConstraints_nofib_lh^1 · try_lh^337 · search_lh^94 · snd_lh^978] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testConstraints_nofib_lh_₀(primId⁰(5))
//│ def testConstraints_nofib_lh_₀(_lh_testConstraints_nofib_arg1¹) = 
//│ 	map_lh_₁₃(try_lh_₀(_lh_testConstraints_nofib_arg1¹), [LH_C bt_lh_₂ [LH_C bm_lh_₀ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]]])
//│ 	where
//│ 	def bjbt'_lh_₀(_lh_bjbt'_arg1¹, _lh_funcomp_x³²) = 
//│ 		bj'_lh_₀(_lh_bjbt'_arg1¹, bt_lh_₀(_lh_bjbt'_arg1¹, _lh_funcomp_x³²))
//│ 		where
//│ 		def bj'_lh_₀(_lh_bj'_arg1¹) = 
//│ 			let f²¹ = (fun _lh_f_arg1⁴ -> (fun _lh_f_arg2³ -> case _lh_f_arg1⁴ of {
//│ 				LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => case _lh_f_LH_P2_1⁵ of {
//│ 					Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³]
//│ 					| Unknown  => 
//│ 						let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ 						in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³]
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}))
//│ 			in foldTree_lh_₀(f²¹)
//│ 			where
//│ 			def combine_lh_₀(_lh_combine_arg1¹, _lh_combine_arg2¹) = 
//│ 				case _lh_combine_arg1¹ of {
//│ 					LH_N  => _lh_combine_arg2¹
//│ 					| LH_C _lh_combine_LH_C_0¹ _lh_combine_LH_C_1¹ => case _lh_combine_LH_C_0¹ of {
//│ 						LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {
//│ 							Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹))
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def maxLevel_lh_₀(_lh_maxLevel_arg1⁷) = 
//│ 					case _lh_maxLevel_arg1⁷ of {
//│ 						LH_N  => 0
//│ 						| LH_C _lh_maxLevel_LH_C_0⁷ _lh_maxLevel_LH_C_1⁷ => case _lh_maxLevel_LH_C_0⁷ of {
//│ 							Assign _lh_maxLevel_Assign_0⁷ _lh_maxLevel_Assign_1⁷ => _lh_maxLevel_Assign_0⁷
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_arg2²) = 
//│ 					case _lh_notElem_arg2² of {
//│ 						LH_N  => [True]
//│ 						| LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²)
//│ 						| _  => error⁰}
//│ 				def union_lh_₀(_lh_union_arg1¹, _lh_union_arg2¹) = 
//│ 					unionBy_lh_₀((fun a⁸ -> (fun b⁵ -> polyEq⁰(a⁸, b⁵))), _lh_union_arg1¹, _lh_union_arg2¹)
//│ 					where
//│ 					def unionBy_lh_₀(_lh_unionBy_arg1³, _lh_unionBy_arg2³, _lh_unionBy_arg3³) = 
//│ 						mappend_lh_₀(_lh_unionBy_arg2³, foldl_lh_₀(flip_lh_₀(deleteBy_lh_₀(_lh_unionBy_arg1³)), nubBy_lh_₀(_lh_unionBy_arg1³, _lh_unionBy_arg3³), _lh_unionBy_arg2³))
//│ 						where
//│ 						def deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_arg3³) = 
//│ 							case _lh_deleteBy_arg3³ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_deleteBy_LH_C_0³ _lh_deleteBy_LH_C_1³ => if _lh_deleteBy_arg1³(_lh_deleteBy_arg2³, _lh_deleteBy_LH_C_0³) then _lh_deleteBy_LH_C_1³ else [LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]
//│ 								| _  => error⁰}
//│ 						def flip_lh_₀(_lh_flip_arg1², _lh_flip_arg2², _lh_flip_arg3²) = 
//│ 							_lh_flip_arg1²(_lh_flip_arg3², _lh_flip_arg2²)
//│ 						def foldl_lh_₀(f¹⁸, i², ls¹⁶) = 
//│ 							case ls¹⁶ of {
//│ 								LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷)
//│ 								| LH_N  => i²}
//│ 						def mappend_lh_₀(xs³, ys³) = 
//│ 							case xs³ of {
//│ 								LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)]
//│ 								| LH_N  => ys³}
//│ 						def nubBy_lh_₀(_lh_nubBy_arg1³, _lh_nubBy_arg2³) = 
//│ 							case _lh_nubBy_arg2³ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]
//│ 								| _  => error⁰}
//│ 							where
//│ 							def filter_lh_₀(f³², ls²⁷) = 
//│ 								case ls²⁷ of {
//│ 									LH_C h²⁸ t²⁸ => if f³²(h²⁸) then [LH_C h²⁸ filter_lh_₀(f³², t²⁸)] else filter_lh_₀(f³², t²⁸)
//│ 									| LH_N  => [LH_N]}
//│ 			def foldTree_lh_₀(_lh_foldTree_arg1³, _lh_foldTree_arg2³) = 
//│ 				case _lh_foldTree_arg2³ of {
//│ 					Node _lh_foldTree_Node_0³ _lh_foldTree_Node_1³ => _lh_foldTree_arg1³(_lh_foldTree_Node_0³, map_lh_₀(foldTree_lh_₀(_lh_foldTree_arg1³), _lh_foldTree_Node_1³))
//│ 					| _  => error⁰}
//│ 				where
//│ 				def map_lh_₀(f³⁸, ls³⁵) = 
//│ 					case ls³⁵ of {
//│ 						LH_C h³⁷ t³⁷ => [LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)]
//│ 						| LH_N  => [LH_N]}
//│ 			def knownConflict_lh_₀(_lh_knownConflict_arg1³) = 
//│ 				case _lh_knownConflict_arg1³ of {
//│ 					Known _lh_knownConflict_Known_0³ => case _lh_knownConflict_Known_0³ of {
//│ 						LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True]
//│ 						| _  => [False]}
//│ 					| _  => [False]}
//│ 			def label_lh_₀(_lh_label_arg1²) = 
//│ 				case _lh_label_arg1² of {
//│ 					Node _lh_label_Node_0² _lh_label_Node_1² => _lh_label_Node_0²
//│ 					| _  => error⁰}
//│ 			def map_lh_₁(f¹³, ls¹²) = 
//│ 				case ls¹² of {
//│ 					LH_C h¹³ t¹³ => [LH_C f¹³(h¹³) map_lh_₁(f¹³, t¹³)]
//│ 					| LH_N  => [LH_N]}
//│ 		def bt_lh_₀(_lh_bt_arg1¹⁴) = 
//│ 			let f⁴⁴ = (fun s¹⁴ -> [LH_P2 s¹⁴ 
//│ 				let _lh_matchIdent⁸ = earliestInconsistency_lh_₀(_lh_bt_arg1¹⁴, s¹⁴)
//│ 				in _lh_matchIdent⁸(_lh_bt_arg1¹⁴, s¹⁴)])
//│ 			in mapTree_lh_₀(f⁴⁴)
//│ 			where
//│ 			def earliestInconsistency_lh_₀(_lh_earliestInconsistency_arg1¹, _lh_earliestInconsistency_arg2¹) = 
//│ 				case _lh_earliestInconsistency_arg1¹ of {
//│ 					CSP _lh_earliestInconsistency_CSP_0¹ _lh_earliestInconsistency_CSP_1¹ _lh_earliestInconsistency_CSP_2¹ => case _lh_earliestInconsistency_arg2¹ of {
//│ 						LH_N  => (fun _lh_bt_arg1⁵ -> (fun s⁵ -> checkComplete_lh_₀(_lh_bt_arg1⁵, s⁵)))
//│ 						| LH_C _lh_earliestInconsistency_LH_C_0² _lh_earliestInconsistency_LH_C_1² => 
//│ 							let _lh_matchIdent⁵ = filter_lh_₁((fun _lh_funcomp_x²⁵ -> not⁰(_lh_earliestInconsistency_CSP_2¹(_lh_earliestInconsistency_LH_C_0², _lh_funcomp_x²⁵))), reverse_lh_₀(_lh_earliestInconsistency_LH_C_1²))
//│ 							in case _lh_matchIdent⁵ of {
//│ 								LH_N  => (fun _lh_bt_arg1⁶ -> (fun s⁶ -> checkComplete_lh_₁(_lh_bt_arg1⁶, s⁶)))
//│ 								| LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => 
//│ 									let _lh_bt_Just_0¹ = 	
//│ 										let _lh_bt_LH_P2_1¹ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ 										in let _lh_bt_LH_P2_0¹ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ 										in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ 									in (fun _lh_bt_arg1⁷ -> (fun s⁷ -> _lh_bt_Just_0¹))
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def checkComplete_lh_₀(_lh_checkComplete_arg1³, _lh_checkComplete_arg2³) = 
//│ 					if complete_lh_₀(_lh_checkComplete_arg1³, _lh_checkComplete_arg2³) then [Known [LH_N]] else [Unknown]
//│ 					where
//│ 					def complete_lh_₀(_lh_complete_arg1², _lh_complete_arg2²) = 
//│ 						case _lh_complete_arg1² of {
//│ 							CSP _lh_complete_CSP_0² _lh_complete_CSP_1² _lh_complete_CSP_2² => (maxLevel_lh_₁(_lh_complete_arg2²) == _lh_complete_CSP_0²)
//│ 							| _  => error⁰}
//│ 						where
//│ 						def maxLevel_lh_₁(_lh_maxLevel_arg1¹⁰) = 
//│ 							case _lh_maxLevel_arg1¹⁰ of {
//│ 								LH_N  => 0
//│ 								| LH_C _lh_maxLevel_LH_C_0¹⁰ _lh_maxLevel_LH_C_1¹⁰ => case _lh_maxLevel_LH_C_0¹⁰ of {
//│ 									Assign _lh_maxLevel_Assign_0¹⁰ _lh_maxLevel_Assign_1¹⁰ => _lh_maxLevel_Assign_0¹⁰
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def checkComplete_lh_₁(_lh_checkComplete_arg1², _lh_checkComplete_arg2²) = 
//│ 					if complete_lh_₁(_lh_checkComplete_arg1², _lh_checkComplete_arg2²) then [Known [LH_N]] else [Unknown]
//│ 					where
//│ 					def complete_lh_₁(_lh_complete_arg1⁵, _lh_complete_arg2⁵) = 
//│ 						case _lh_complete_arg1⁵ of {
//│ 							CSP _lh_complete_CSP_0⁵ _lh_complete_CSP_1⁵ _lh_complete_CSP_2⁵ => (maxLevel_lh_₂(_lh_complete_arg2⁵) == _lh_complete_CSP_0⁵)
//│ 							| _  => error⁰}
//│ 						where
//│ 						def maxLevel_lh_₂(_lh_maxLevel_arg1⁶) = 
//│ 							case _lh_maxLevel_arg1⁶ of {
//│ 								LH_N  => 0
//│ 								| LH_C _lh_maxLevel_LH_C_0⁶ _lh_maxLevel_LH_C_1⁶ => case _lh_maxLevel_LH_C_0⁶ of {
//│ 									Assign _lh_maxLevel_Assign_0⁶ _lh_maxLevel_Assign_1⁶ => _lh_maxLevel_Assign_0⁶
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def filter_lh_₁(f¹⁷, ls¹⁵) = 
//│ 					case ls¹⁵ of {
//│ 						LH_C h¹⁶ t¹⁶ => if f¹⁷(h¹⁶) then [LH_C h¹⁶ filter_lh_₁(f¹⁷, t¹⁶)] else filter_lh_₁(f¹⁷, t¹⁶)
//│ 						| LH_N  => [LH_N]}
//│ 				def level_lh_₀(_lh_level_arg1⁴) = 
//│ 					case _lh_level_arg1⁴ of {
//│ 						Assign _lh_level_Assign_0⁴ _lh_level_Assign_1⁴ => _lh_level_Assign_0⁴
//│ 						| _  => error⁰}
//│ 				def level_lh_₁(_lh_level_arg1⁵) = 
//│ 					case _lh_level_arg1⁵ of {
//│ 						Assign _lh_level_Assign_0⁵ _lh_level_Assign_1⁵ => _lh_level_Assign_0⁵
//│ 						| _  => error⁰}
//│ 				def reverse_lh_₀(ls⁵¹) = 
//│ 					reverse_helper_lh_₀(ls⁵¹, [LH_N])
//│ 					where
//│ 					def reverse_helper_lh_₀(ls³⁹, a¹⁴) = 
//│ 						case ls³⁹ of {
//│ 							LH_C h⁴⁰ t⁴⁰ => reverse_helper_lh_₀(t⁴⁰, [LH_C h⁴⁰ a¹⁴])
//│ 							| LH_N  => a¹⁴}
//│ 			def mapTree_lh_₀(_lh_mapTree_arg1³, _lh_mapTree_arg2³) = 
//│ 				case _lh_mapTree_arg2³ of {
//│ 					Node _lh_mapTree_Node_0³ _lh_mapTree_Node_1³ => [Node _lh_mapTree_arg1³(_lh_mapTree_Node_0³) map_lh_₂(mapTree_lh_₀(_lh_mapTree_arg1³), _lh_mapTree_Node_1³)]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def map_lh_₂(f³⁴, ls²⁹) = 
//│ 					case ls²⁹ of {
//│ 						LH_C h³⁰ t³⁰ => [LH_C f³⁴(h³⁰) map_lh_₂(f³⁴, t³⁰)]
//│ 						| LH_N  => [LH_N]}
//│ 	def bjbt_lh_₀(_lh_bjbt_arg1¹, _lh_funcomp_x²⁹) = 
//│ 		bj_lh_₀(_lh_bjbt_arg1¹, bt_lh_₁(_lh_bjbt_arg1¹, _lh_funcomp_x²⁹))
//│ 		where
//│ 		def bj_lh_₀(_lh_bj_arg1¹) = 
//│ 			let f²⁸ = (fun _lh_f_arg1⁶ -> (fun _lh_f_arg2⁴ -> case _lh_f_arg1⁶ of {
//│ 				LH_P2 _lh_f_LH_P2_0⁸ _lh_f_LH_P2_1⁸ => case _lh_f_LH_P2_1⁸ of {
//│ 					Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴]
//│ 					| Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴]
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}))
//│ 			in foldTree_lh_₁(f²⁸)
//│ 			where
//│ 			def combine_lh_₁(_lh_combine_arg1², _lh_combine_arg2²) = 
//│ 				case _lh_combine_arg1² of {
//│ 					LH_N  => _lh_combine_arg2²
//│ 					| LH_C _lh_combine_LH_C_0² _lh_combine_LH_C_1² => case _lh_combine_LH_C_0² of {
//│ 						LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {
//│ 							Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²))
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def maxLevel_lh_₃(_lh_maxLevel_arg1¹) = 
//│ 					case _lh_maxLevel_arg1¹ of {
//│ 						LH_N  => 0
//│ 						| LH_C _lh_maxLevel_LH_C_0¹ _lh_maxLevel_LH_C_1¹ => case _lh_maxLevel_LH_C_0¹ of {
//│ 							Assign _lh_maxLevel_Assign_0¹ _lh_maxLevel_Assign_1¹ => _lh_maxLevel_Assign_0¹
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_arg2¹) = 
//│ 					case _lh_notElem_arg2¹ of {
//│ 						LH_N  => [True]
//│ 						| LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹)
//│ 						| _  => error⁰}
//│ 				def union_lh_₁(_lh_union_arg1², _lh_union_arg2²) = 
//│ 					unionBy_lh_₁((fun a¹² -> (fun b⁹ -> polyEq⁰(a¹², b⁹))), _lh_union_arg1², _lh_union_arg2²)
//│ 					where
//│ 					def unionBy_lh_₁(_lh_unionBy_arg1², _lh_unionBy_arg2², _lh_unionBy_arg3²) = 
//│ 						mappend_lh_₁(_lh_unionBy_arg2², foldl_lh_₁(flip_lh_₁(deleteBy_lh_₁(_lh_unionBy_arg1²)), nubBy_lh_₁(_lh_unionBy_arg1², _lh_unionBy_arg3²), _lh_unionBy_arg2²))
//│ 						where
//│ 						def deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_arg3²) = 
//│ 							case _lh_deleteBy_arg3² of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_deleteBy_LH_C_0² _lh_deleteBy_LH_C_1² => if _lh_deleteBy_arg1²(_lh_deleteBy_arg2², _lh_deleteBy_LH_C_0²) then _lh_deleteBy_LH_C_1² else [LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]
//│ 								| _  => error⁰}
//│ 						def flip_lh_₁(_lh_flip_arg1¹, _lh_flip_arg2¹, _lh_flip_arg3¹) = 
//│ 							_lh_flip_arg1¹(_lh_flip_arg3¹, _lh_flip_arg2¹)
//│ 						def foldl_lh_₁(f¹², i¹, ls¹¹) = 
//│ 							case ls¹¹ of {
//│ 								LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²)
//│ 								| LH_N  => i¹}
//│ 						def mappend_lh_₁(xs⁹, ys⁹) = 
//│ 							case xs⁹ of {
//│ 								LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)]
//│ 								| LH_N  => ys⁹}
//│ 						def nubBy_lh_₁(_lh_nubBy_arg1¹, _lh_nubBy_arg2¹) = 
//│ 							case _lh_nubBy_arg2¹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]
//│ 								| _  => error⁰}
//│ 							where
//│ 							def filter_lh_₂(f⁵², ls⁴⁹) = 
//│ 								case ls⁴⁹ of {
//│ 									LH_C h⁵³ t⁵³ => if f⁵²(h⁵³) then [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)] else filter_lh_₂(f⁵², t⁵³)
//│ 									| LH_N  => [LH_N]}
//│ 			def foldTree_lh_₁(_lh_foldTree_arg1¹, _lh_foldTree_arg2¹) = 
//│ 				case _lh_foldTree_arg2¹ of {
//│ 					Node _lh_foldTree_Node_0¹ _lh_foldTree_Node_1¹ => _lh_foldTree_arg1¹(_lh_foldTree_Node_0¹, map_lh_₃(foldTree_lh_₁(_lh_foldTree_arg1¹), _lh_foldTree_Node_1¹))
//│ 					| _  => error⁰}
//│ 				where
//│ 				def map_lh_₃(f⁴⁸, ls⁴⁴) = 
//│ 					case ls⁴⁴ of {
//│ 						LH_C h⁴⁸ t⁴⁸ => [LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)]
//│ 						| LH_N  => [LH_N]}
//│ 			def label_lh_₁(_lh_label_arg1³) = 
//│ 				case _lh_label_arg1³ of {
//│ 					Node _lh_label_Node_0³ _lh_label_Node_1³ => _lh_label_Node_0³
//│ 					| _  => error⁰}
//│ 			def map_lh_₄(f⁵¹, ls⁴⁸) = 
//│ 				case ls⁴⁸ of {
//│ 					LH_C h⁵² t⁵² => [LH_C f⁵¹(h⁵²) map_lh_₄(f⁵¹, t⁵²)]
//│ 					| LH_N  => [LH_N]}
//│ 		def bt_lh_₁(_lh_bt_arg1¹⁵) = 
//│ 			let f⁴⁶ = (fun s¹⁵ -> [LH_P2 s¹⁵ 
//│ 				let _lh_matchIdent⁹ = earliestInconsistency_lh_₁(_lh_bt_arg1¹⁵, s¹⁵)
//│ 				in _lh_matchIdent⁹(_lh_bt_arg1¹⁵, s¹⁵)])
//│ 			in mapTree_lh_₁(f⁴⁶)
//│ 			where
//│ 			def earliestInconsistency_lh_₁(_lh_earliestInconsistency_arg1³, _lh_earliestInconsistency_arg2³) = 
//│ 				case _lh_earliestInconsistency_arg1³ of {
//│ 					CSP _lh_earliestInconsistency_CSP_0³ _lh_earliestInconsistency_CSP_1³ _lh_earliestInconsistency_CSP_2³ => case _lh_earliestInconsistency_arg2³ of {
//│ 						LH_N  => (fun _lh_bt_arg1¹¹ -> (fun s¹¹ -> checkComplete_lh_₂(_lh_bt_arg1¹¹, s¹¹)))
//│ 						| LH_C _lh_earliestInconsistency_LH_C_0⁶ _lh_earliestInconsistency_LH_C_1⁶ => 
//│ 							let _lh_matchIdent⁷ = filter_lh_₃((fun _lh_funcomp_x³¹ -> not⁰(_lh_earliestInconsistency_CSP_2³(_lh_earliestInconsistency_LH_C_0⁶, _lh_funcomp_x³¹))), reverse_lh_₁(_lh_earliestInconsistency_LH_C_1⁶))
//│ 							in case _lh_matchIdent⁷ of {
//│ 								LH_N  => (fun _lh_bt_arg1¹² -> (fun s¹² -> checkComplete_lh_₃(_lh_bt_arg1¹², s¹²)))
//│ 								| LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => 
//│ 									let _lh_bt_Just_0³ = 	
//│ 										let _lh_bt_LH_P2_1³ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ 										in let _lh_bt_LH_P2_0³ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ 										in [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]
//│ 									in (fun _lh_bt_arg1¹³ -> (fun s¹³ -> _lh_bt_Just_0³))
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def checkComplete_lh_₂(_lh_checkComplete_arg1⁸, _lh_checkComplete_arg2⁸) = 
//│ 					if complete_lh_₂(_lh_checkComplete_arg1⁸, _lh_checkComplete_arg2⁸) then [Known [LH_N]] else [Unknown]
//│ 					where
//│ 					def complete_lh_₂(_lh_complete_arg1⁸, _lh_complete_arg2⁸) = 
//│ 						case _lh_complete_arg1⁸ of {
//│ 							CSP _lh_complete_CSP_0⁸ _lh_complete_CSP_1⁸ _lh_complete_CSP_2⁸ => (maxLevel_lh_₄(_lh_complete_arg2⁸) == _lh_complete_CSP_0⁸)
//│ 							| _  => error⁰}
//│ 						where
//│ 						def maxLevel_lh_₄(_lh_maxLevel_arg1²) = 
//│ 							case _lh_maxLevel_arg1² of {
//│ 								LH_N  => 0
//│ 								| LH_C _lh_maxLevel_LH_C_0² _lh_maxLevel_LH_C_1² => case _lh_maxLevel_LH_C_0² of {
//│ 									Assign _lh_maxLevel_Assign_0² _lh_maxLevel_Assign_1² => _lh_maxLevel_Assign_0²
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def checkComplete_lh_₃(_lh_checkComplete_arg1⁶, _lh_checkComplete_arg2⁶) = 
//│ 					if complete_lh_₃(_lh_checkComplete_arg1⁶, _lh_checkComplete_arg2⁶) then [Known [LH_N]] else [Unknown]
//│ 					where
//│ 					def complete_lh_₃(_lh_complete_arg1⁶, _lh_complete_arg2⁶) = 
//│ 						case _lh_complete_arg1⁶ of {
//│ 							CSP _lh_complete_CSP_0⁶ _lh_complete_CSP_1⁶ _lh_complete_CSP_2⁶ => (maxLevel_lh_₅(_lh_complete_arg2⁶) == _lh_complete_CSP_0⁶)
//│ 							| _  => error⁰}
//│ 						where
//│ 						def maxLevel_lh_₅(_lh_maxLevel_arg1⁸) = 
//│ 							case _lh_maxLevel_arg1⁸ of {
//│ 								LH_N  => 0
//│ 								| LH_C _lh_maxLevel_LH_C_0⁸ _lh_maxLevel_LH_C_1⁸ => case _lh_maxLevel_LH_C_0⁸ of {
//│ 									Assign _lh_maxLevel_Assign_0⁸ _lh_maxLevel_Assign_1⁸ => _lh_maxLevel_Assign_0⁸
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def filter_lh_₃(f¹⁵, ls¹⁴) = 
//│ 					case ls¹⁴ of {
//│ 						LH_C h¹⁵ t¹⁵ => if f¹⁵(h¹⁵) then [LH_C h¹⁵ filter_lh_₃(f¹⁵, t¹⁵)] else filter_lh_₃(f¹⁵, t¹⁵)
//│ 						| LH_N  => [LH_N]}
//│ 				def level_lh_₂(_lh_level_arg1⁶) = 
//│ 					case _lh_level_arg1⁶ of {
//│ 						Assign _lh_level_Assign_0⁶ _lh_level_Assign_1⁶ => _lh_level_Assign_0⁶
//│ 						| _  => error⁰}
//│ 				def level_lh_₃(_lh_level_arg1¹) = 
//│ 					case _lh_level_arg1¹ of {
//│ 						Assign _lh_level_Assign_0¹ _lh_level_Assign_1¹ => _lh_level_Assign_0¹
//│ 						| _  => error⁰}
//│ 				def reverse_lh_₁(ls⁴⁵) = 
//│ 					reverse_helper_lh_₁(ls⁴⁵, [LH_N])
//│ 					where
//│ 					def reverse_helper_lh_₁(ls⁹, a⁴) = 
//│ 						case ls⁹ of {
//│ 							LH_C h¹⁰ t¹⁰ => reverse_helper_lh_₁(t¹⁰, [LH_C h¹⁰ a⁴])
//│ 							| LH_N  => a⁴}
//│ 			def mapTree_lh_₁(_lh_mapTree_arg1⁵, _lh_mapTree_arg2⁵) = 
//│ 				case _lh_mapTree_arg2⁵ of {
//│ 					Node _lh_mapTree_Node_0⁵ _lh_mapTree_Node_1⁵ => [Node _lh_mapTree_arg1⁵(_lh_mapTree_Node_0⁵) map_lh_₅(mapTree_lh_₁(_lh_mapTree_arg1⁵), _lh_mapTree_Node_1⁵)]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def map_lh_₅(f³⁷, ls³³) = 
//│ 					case ls³³ of {
//│ 						LH_C h³⁵ t³⁵ => [LH_C f³⁷(h³⁵) map_lh_₅(f³⁷, t³⁵)]
//│ 						| LH_N  => [LH_N]}
//│ 	def bm_lh_₀(_lh_bm_arg1¹, _lh_funcomp_x²⁶) = 
//│ 		(fun _lh_funcomp_x²⁷ -> mapTree_lh_₃(fst_lh_₀, lookupCache_lh_₀(_lh_bm_arg1¹, _lh_funcomp_x²⁷)))(cacheChecks_lh_₀(_lh_bm_arg1¹, emptyTable_lh_₀(_lh_bm_arg1¹), _lh_funcomp_x²⁶))
//│ 		where
//│ 		def cacheChecks_lh_₀(_lh_cacheChecks_arg1², _lh_cacheChecks_arg2², _lh_cacheChecks_arg3²) = 
//│ 			case _lh_cacheChecks_arg3² of {
//│ 				Node _lh_cacheChecks_Node_0² _lh_cacheChecks_Node_1² => [Node [LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²] map_lh_₆(cacheChecks_lh_₀(_lh_cacheChecks_arg1², fillTable_lh_₀(_lh_cacheChecks_Node_0², _lh_cacheChecks_arg1², tail_lh_₀(_lh_cacheChecks_arg2²))), _lh_cacheChecks_Node_1²)]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def fillTable_lh_₀(_lh_fillTable_arg1¹, _lh_fillTable_arg2¹, _lh_fillTable_arg3¹) = 
//│ 				case _lh_fillTable_arg1¹ of {
//│ 					LH_N  => _lh_fillTable_arg3¹
//│ 					| LH_C _lh_fillTable_LH_C_0¹ _lh_fillTable_LH_C_1¹ => case _lh_fillTable_LH_C_0¹ of {
//│ 						Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹ => case _lh_fillTable_arg2¹ of {
//│ 							CSP _lh_fillTable_CSP_0¹ _lh_fillTable_CSP_1¹ _lh_fillTable_CSP_2¹ => 
//│ 								let f²³ = (fun cs³ -> (fun varval¹ -> 
//│ 									let _lh_matchIdent⁴ = varval¹
//│ 									in case _lh_matchIdent⁴ of {
//│ 										LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³
//│ 										| _  => error⁰}))
//│ 								in zipWith_lh_₀(zipWith_lh_₁(f²³), _lh_fillTable_arg3¹, 
//│ 									let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 										LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C 
//│ 											let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 												LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]
//│ 												| LH_N  => [LH_N]})
//│ 											in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]
//│ 										| LH_N  => [LH_N]})
//│ 									in _lh_listcomp_fun⁷(enumFromTo_lh_₁((_lh_fillTable_Assign_0¹ + 1), _lh_fillTable_CSP_0¹)))
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def enumFromTo_lh_₀(a⁵, b²) = 
//│ 					if (a⁵ <= b²) then [LH_C a⁵ enumFromTo_lh_₀((a⁵ + 1), b²)] else [LH_N]
//│ 				def enumFromTo_lh_₁(a⁷, b⁴) = 
//│ 					if (a⁷ <= b⁴) then [LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁴)] else [LH_N]
//│ 				def zipWith_lh_₀(f⁴¹, xs⁵, ys⁵) = 
//│ 					case xs⁵ of {
//│ 						LH_C hx² tx² => case ys⁵ of {
//│ 							LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]}
//│ 				def zipWith_lh_₁(f⁴², xs⁶, ys⁶) = 
//│ 					case xs⁶ of {
//│ 						LH_C hx³ tx³ => case ys⁶ of {
//│ 							LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]}
//│ 			def map_lh_₆(f²⁰, ls¹⁸) = 
//│ 				case ls¹⁸ of {
//│ 					LH_C h¹⁹ t¹⁹ => [LH_C f²⁰(h¹⁹) map_lh_₆(f²⁰, t¹⁹)]
//│ 					| LH_N  => [LH_N]}
//│ 			def tail_lh_₀(ls⁴³) = 
//│ 				case ls⁴³ of {
//│ 					LH_C h⁴⁷ t⁴⁷ => t⁴⁷
//│ 					| LH_N  => error⁰}
//│ 		def emptyTable_lh_₀(_lh_emptyTable_arg1¹) = 
//│ 			case _lh_emptyTable_arg1¹ of {
//│ 				CSP _lh_emptyTable_CSP_0¹ _lh_emptyTable_CSP_1¹ _lh_emptyTable_CSP_2¹ => [LH_C [LH_N] 
//│ 					let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 						LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C 
//│ 							let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)]
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)]
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun⁹(enumFromTo_lh_₃(1, _lh_emptyTable_CSP_0¹))]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def enumFromTo_lh_₂(a⁶, b³) = 
//│ 				if (a⁶ <= b³) then [LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b³)] else [LH_N]
//│ 			def enumFromTo_lh_₃(a¹⁶, b¹¹) = 
//│ 				if (a¹⁶ <= b¹¹) then [LH_C a¹⁶ enumFromTo_lh_₃((a¹⁶ + 1), b¹¹)] else [LH_N]
//│ 		def fst_lh_₀(_lh_fst_arg1²) = 
//│ 			case _lh_fst_arg1² of {
//│ 				LH_P2 _lh_fst_LH_P2_0² _lh_fst_LH_P2_1² => _lh_fst_LH_P2_0²
//│ 				| _  => error⁰}
//│ 		def lookupCache_lh_₀(_lh_lookupCache_arg1¹, _lh_lookupCache_arg2¹) = 
//│ 			let f³³ = (fun _lh_f_arg1⁷ -> (fun _lh_f_arg2⁵ -> case _lh_f_arg2⁵ of {
//│ 				LH_P2 _lh_f_LH_P2_0⁹ _lh_f_LH_P2_1⁹ => case _lh_f_LH_P2_0⁹ of {
//│ 					LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹]
//│ 					| LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => 
//│ 						let tableEntry¹ = atIndex_lh_₀((value_lh_₀(_lh_f_LH_C_0¹) - 1), head_lh_₀(_lh_f_LH_P2_1⁹))
//│ 						in let cs⁴ = if polyEq⁰(tableEntry¹, [Unknown]) then checkComplete_lh_₄(_lh_f_arg1⁷, [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]) else tableEntry¹
//│ 						in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹]
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}))
//│ 			in mapTree_lh_₂(f³³(_lh_lookupCache_arg1¹), _lh_lookupCache_arg2¹)
//│ 			where
//│ 			def atIndex_lh_₀(n², ls⁴⁰) = 
//│ 				if (n² < 0) then error⁰ else case ls⁴⁰ of {
//│ 					LH_C h⁴² t⁴² => if (n² == 0) then h⁴² else atIndex_lh_₀((n² - 1), t⁴²)
//│ 					| LH_N  => error⁰}
//│ 			def checkComplete_lh_₄(_lh_checkComplete_arg1⁴, _lh_checkComplete_arg2⁴) = 
//│ 				if complete_lh_₄(_lh_checkComplete_arg1⁴, _lh_checkComplete_arg2⁴) then [Known [LH_N]] else [Unknown]
//│ 				where
//│ 				def complete_lh_₄(_lh_complete_arg1⁷, _lh_complete_arg2⁷) = 
//│ 					case _lh_complete_arg1⁷ of {
//│ 						CSP _lh_complete_CSP_0⁷ _lh_complete_CSP_1⁷ _lh_complete_CSP_2⁷ => (maxLevel_lh_₆(_lh_complete_arg2⁷) == _lh_complete_CSP_0⁷)
//│ 						| _  => error⁰}
//│ 					where
//│ 					def maxLevel_lh_₆(_lh_maxLevel_arg1¹¹) = 
//│ 						case _lh_maxLevel_arg1¹¹ of {
//│ 							LH_N  => 0
//│ 							| LH_C _lh_maxLevel_LH_C_0¹¹ _lh_maxLevel_LH_C_1¹¹ => case _lh_maxLevel_LH_C_0¹¹ of {
//│ 								Assign _lh_maxLevel_Assign_0¹¹ _lh_maxLevel_Assign_1¹¹ => _lh_maxLevel_Assign_0¹¹
//│ 								| _  => error⁰}
//│ 							| _  => error⁰}
//│ 			def head_lh_₀(ls³⁴) = 
//│ 				case ls³⁴ of {
//│ 					LH_C h³⁶ t³⁶ => h³⁶
//│ 					| LH_N  => error⁰}
//│ 			def mapTree_lh_₂(_lh_mapTree_arg1⁷, _lh_mapTree_arg2⁷) = 
//│ 				case _lh_mapTree_arg2⁷ of {
//│ 					Node _lh_mapTree_Node_0⁷ _lh_mapTree_Node_1⁷ => [Node _lh_mapTree_arg1⁷(_lh_mapTree_Node_0⁷) map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1⁷), _lh_mapTree_Node_1⁷)]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def map_lh_₇(f¹¹, ls¹⁰) = 
//│ 					case ls¹⁰ of {
//│ 						LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)]
//│ 						| LH_N  => [LH_N]}
//│ 			def value_lh_₀(_lh_value_arg1²) = 
//│ 				case _lh_value_arg1² of {
//│ 					Assign _lh_value_Assign_0² _lh_value_Assign_1² => _lh_value_Assign_1²
//│ 					| _  => error⁰}
//│ 		def mapTree_lh_₃(_lh_mapTree_arg1¹, _lh_mapTree_arg2¹) = 
//│ 			case _lh_mapTree_arg2¹ of {
//│ 				Node _lh_mapTree_Node_0¹ _lh_mapTree_Node_1¹ => [Node _lh_mapTree_arg1¹(_lh_mapTree_Node_0¹) map_lh_₈(mapTree_lh_₃(_lh_mapTree_arg1¹), _lh_mapTree_Node_1¹)]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def map_lh_₈(f¹⁴, ls¹³) = 
//│ 				case ls¹³ of {
//│ 					LH_C h¹⁴ t¹⁴ => [LH_C f¹⁴(h¹⁴) map_lh_₈(f¹⁴, t¹⁴)]
//│ 					| LH_N  => [LH_N]}
//│ 	def bt_lh_₂(_lh_bt_arg1⁴) = 
//│ 		let f¹⁶ = (fun s⁴ -> [LH_P2 s⁴ 
//│ 			let _lh_matchIdent³ = earliestInconsistency_lh_₂(_lh_bt_arg1⁴, s⁴)
//│ 			in _lh_matchIdent³(_lh_bt_arg1⁴, s⁴)])
//│ 		in mapTree_lh_₄(f¹⁶)
//│ 		where
//│ 		def earliestInconsistency_lh_₂(_lh_earliestInconsistency_arg1², _lh_earliestInconsistency_arg2²) = 
//│ 			case _lh_earliestInconsistency_arg1² of {
//│ 				CSP _lh_earliestInconsistency_CSP_0² _lh_earliestInconsistency_CSP_1² _lh_earliestInconsistency_CSP_2² => case _lh_earliestInconsistency_arg2² of {
//│ 					LH_N  => (fun _lh_bt_arg1⁸ -> (fun s⁸ -> checkComplete_lh_₅(_lh_bt_arg1⁸, s⁸)))
//│ 					| LH_C _lh_earliestInconsistency_LH_C_0⁴ _lh_earliestInconsistency_LH_C_1⁴ => 
//│ 						let _lh_matchIdent⁶ = filter_lh_₄((fun _lh_funcomp_x²⁸ -> not⁰(_lh_earliestInconsistency_CSP_2²(_lh_earliestInconsistency_LH_C_0⁴, _lh_funcomp_x²⁸))), reverse_lh_₂(_lh_earliestInconsistency_LH_C_1⁴))
//│ 						in case _lh_matchIdent⁶ of {
//│ 							LH_N  => (fun _lh_bt_arg1⁹ -> (fun s⁹ -> checkComplete_lh_₆(_lh_bt_arg1⁹, s⁹)))
//│ 							| LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => 
//│ 								let _lh_bt_Just_0² = 	
//│ 									let _lh_bt_LH_P2_1² = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ 									in let _lh_bt_LH_P2_0² = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ 									in [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]
//│ 								in (fun _lh_bt_arg1¹⁰ -> (fun s¹⁰ -> _lh_bt_Just_0²))
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def checkComplete_lh_₅(_lh_checkComplete_arg1⁵, _lh_checkComplete_arg2⁵) = 
//│ 				if complete_lh_₅(_lh_checkComplete_arg1⁵, _lh_checkComplete_arg2⁵) then [Known [LH_N]] else [Unknown]
//│ 				where
//│ 				def complete_lh_₅(_lh_complete_arg1³, _lh_complete_arg2³) = 
//│ 					case _lh_complete_arg1³ of {
//│ 						CSP _lh_complete_CSP_0³ _lh_complete_CSP_1³ _lh_complete_CSP_2³ => (maxLevel_lh_₇(_lh_complete_arg2³) == _lh_complete_CSP_0³)
//│ 						| _  => error⁰}
//│ 					where
//│ 					def maxLevel_lh_₇(_lh_maxLevel_arg1¹²) = 
//│ 						case _lh_maxLevel_arg1¹² of {
//│ 							LH_N  => 0
//│ 							| LH_C _lh_maxLevel_LH_C_0¹² _lh_maxLevel_LH_C_1¹² => case _lh_maxLevel_LH_C_0¹² of {
//│ 								Assign _lh_maxLevel_Assign_0¹² _lh_maxLevel_Assign_1¹² => _lh_maxLevel_Assign_0¹²
//│ 								| _  => error⁰}
//│ 							| _  => error⁰}
//│ 			def checkComplete_lh_₆(_lh_checkComplete_arg1¹, _lh_checkComplete_arg2¹) = 
//│ 				if complete_lh_₆(_lh_checkComplete_arg1¹, _lh_checkComplete_arg2¹) then [Known [LH_N]] else [Unknown]
//│ 				where
//│ 				def complete_lh_₆(_lh_complete_arg1¹, _lh_complete_arg2¹) = 
//│ 					case _lh_complete_arg1¹ of {
//│ 						CSP _lh_complete_CSP_0¹ _lh_complete_CSP_1¹ _lh_complete_CSP_2¹ => (maxLevel_lh_₈(_lh_complete_arg2¹) == _lh_complete_CSP_0¹)
//│ 						| _  => error⁰}
//│ 					where
//│ 					def maxLevel_lh_₈(_lh_maxLevel_arg1⁵) = 
//│ 						case _lh_maxLevel_arg1⁵ of {
//│ 							LH_N  => 0
//│ 							| LH_C _lh_maxLevel_LH_C_0⁵ _lh_maxLevel_LH_C_1⁵ => case _lh_maxLevel_LH_C_0⁵ of {
//│ 								Assign _lh_maxLevel_Assign_0⁵ _lh_maxLevel_Assign_1⁵ => _lh_maxLevel_Assign_0⁵
//│ 								| _  => error⁰}
//│ 							| _  => error⁰}
//│ 			def filter_lh_₄(f⁴⁰, ls³⁷) = 
//│ 				case ls³⁷ of {
//│ 					LH_C h³⁹ t³⁹ => if f⁴⁰(h³⁹) then [LH_C h³⁹ filter_lh_₄(f⁴⁰, t³⁹)] else filter_lh_₄(f⁴⁰, t³⁹)
//│ 					| LH_N  => [LH_N]}
//│ 			def level_lh_₄(_lh_level_arg1²) = 
//│ 				case _lh_level_arg1² of {
//│ 					Assign _lh_level_Assign_0² _lh_level_Assign_1² => _lh_level_Assign_0²
//│ 					| _  => error⁰}
//│ 			def level_lh_₅(_lh_level_arg1³) = 
//│ 				case _lh_level_arg1³ of {
//│ 					Assign _lh_level_Assign_0³ _lh_level_Assign_1³ => _lh_level_Assign_0³
//│ 					| _  => error⁰}
//│ 			def reverse_lh_₂(ls³⁸) = 
//│ 				reverse_helper_lh_₂(ls³⁸, [LH_N])
//│ 				where
//│ 				def reverse_helper_lh_₂(ls⁴¹, a¹⁵) = 
//│ 					case ls⁴¹ of {
//│ 						LH_C h⁴⁵ t⁴⁵ => reverse_helper_lh_₂(t⁴⁵, [LH_C h⁴⁵ a¹⁵])
//│ 						| LH_N  => a¹⁵}
//│ 		def mapTree_lh_₄(_lh_mapTree_arg1⁴, _lh_mapTree_arg2⁴) = 
//│ 			case _lh_mapTree_arg2⁴ of {
//│ 				Node _lh_mapTree_Node_0⁴ _lh_mapTree_Node_1⁴ => [Node _lh_mapTree_arg1⁴(_lh_mapTree_Node_0⁴) map_lh_₉(mapTree_lh_₄(_lh_mapTree_arg1⁴), _lh_mapTree_Node_1⁴)]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def map_lh_₉(f³⁵, ls³¹) = 
//│ 				case ls³¹ of {
//│ 					LH_C h³³ t³³ => [LH_C f³⁵(h³³) map_lh_₉(f³⁵, t³³)]
//│ 					| LH_N  => [LH_N]}
//│ 	def fc_lh_₀(_lh_fc_arg1¹, _lh_funcomp_x²³) = 
//│ 		(fun _lh_funcomp_x²⁴ -> domainWipeOut_lh_₀(_lh_fc_arg1¹, lookupCache_lh_₁(_lh_fc_arg1¹, _lh_funcomp_x²⁴)))(cacheChecks_lh_₁(_lh_fc_arg1¹, emptyTable_lh_₁(_lh_fc_arg1¹), _lh_funcomp_x²³))
//│ 		where
//│ 		def cacheChecks_lh_₁(_lh_cacheChecks_arg1¹, _lh_cacheChecks_arg2¹, _lh_cacheChecks_arg3¹) = 
//│ 			case _lh_cacheChecks_arg3¹ of {
//│ 				Node _lh_cacheChecks_Node_0¹ _lh_cacheChecks_Node_1¹ => [Node [LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹] map_lh_₁₀(cacheChecks_lh_₁(_lh_cacheChecks_arg1¹, fillTable_lh_₁(_lh_cacheChecks_Node_0¹, _lh_cacheChecks_arg1¹, tail_lh_₁(_lh_cacheChecks_arg2¹))), _lh_cacheChecks_Node_1¹)]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def fillTable_lh_₁(_lh_fillTable_arg1², _lh_fillTable_arg2², _lh_fillTable_arg3²) = 
//│ 				case _lh_fillTable_arg1² of {
//│ 					LH_N  => _lh_fillTable_arg3²
//│ 					| LH_C _lh_fillTable_LH_C_0² _lh_fillTable_LH_C_1² => case _lh_fillTable_LH_C_0² of {
//│ 						Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1² => case _lh_fillTable_arg2² of {
//│ 							CSP _lh_fillTable_CSP_0² _lh_fillTable_CSP_1² _lh_fillTable_CSP_2² => 
//│ 								let f⁴⁷ = (fun cs⁵ -> (fun varval² -> 
//│ 									let _lh_matchIdent¹⁰ = varval²
//│ 									in case _lh_matchIdent¹⁰ of {
//│ 										LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵
//│ 										| _  => error⁰}))
//│ 								in zipWith_lh_₂(zipWith_lh_₃(f⁴⁷), _lh_fillTable_arg3², 
//│ 									let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {
//│ 										LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C 
//│ 											let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {
//│ 												LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)]
//│ 												| LH_N  => [LH_N]})
//│ 											in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)]
//│ 										| LH_N  => [LH_N]})
//│ 									in _lh_listcomp_fun¹⁴(enumFromTo_lh_₅((_lh_fillTable_Assign_0² + 1), _lh_fillTable_CSP_0²)))
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def enumFromTo_lh_₄(a⁹, b⁶) = 
//│ 					if (a⁹ <= b⁶) then [LH_C a⁹ enumFromTo_lh_₄((a⁹ + 1), b⁶)] else [LH_N]
//│ 				def enumFromTo_lh_₅(a¹⁰, b⁷) = 
//│ 					if (a¹⁰ <= b⁷) then [LH_C a¹⁰ enumFromTo_lh_₅((a¹⁰ + 1), b⁷)] else [LH_N]
//│ 				def zipWith_lh_₂(f⁴³, xs⁸, ys⁸) = 
//│ 					case xs⁸ of {
//│ 						LH_C hx⁴ tx⁴ => case ys⁸ of {
//│ 							LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]}
//│ 				def zipWith_lh_₃(f²⁶, xs², ys²) = 
//│ 					case xs² of {
//│ 						LH_C hx¹ tx¹ => case ys² of {
//│ 							LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]}
//│ 			def map_lh_₁₀(f²⁵, ls²⁰) = 
//│ 				case ls²⁰ of {
//│ 					LH_C h²¹ t²¹ => [LH_C f²⁵(h²¹) map_lh_₁₀(f²⁵, t²¹)]
//│ 					| LH_N  => [LH_N]}
//│ 			def tail_lh_₁(ls²¹) = 
//│ 				case ls²¹ of {
//│ 					LH_C h²² t²² => t²²
//│ 					| LH_N  => error⁰}
//│ 		def domainWipeOut_lh_₀(_lh_domainWipeOut_arg1¹, _lh_domainWipeOut_arg2¹) = 
//│ 			case _lh_domainWipeOut_arg1¹ of {
//│ 				CSP _lh_domainWipeOut_CSP_0¹ _lh_domainWipeOut_CSP_1¹ _lh_domainWipeOut_CSP_2¹ => 
//│ 					let f²² = (fun _lh_f_arg1⁵ -> case _lh_f_arg1⁵ of {
//│ 						LH_P2 _lh_f_LH_P2_0⁶ _lh_f_LH_P2_1⁶ => case _lh_f_LH_P2_0⁶ of {
//│ 							LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => 
//│ 								let wipedDomains¹ = 	
//│ 									let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 										LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)
//│ 										| LH_N  => [LH_N]})
//│ 									in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ 								in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ 								in [LH_P2 _lh_f_LH_P2_0⁷ cs'³]
//│ 							| _  => error⁰}
//│ 						| _  => error⁰})
//│ 					in mapTree_lh_₅(f²², _lh_domainWipeOut_arg2¹)
//│ 				| _  => error⁰}
//│ 			where
//│ 			def all_lh_₀(_lh_all_arg1¹, _lh_all_arg2¹) = 
//│ 				case _lh_all_arg2¹ of {
//│ 					LH_N  => [True]
//│ 					| LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₀(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False]
//│ 					| _  => error⁰}
//│ 			def collect_lh_₀(_lh_collect_arg1¹) = 
//│ 				case _lh_collect_arg1¹ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_collect_LH_C_0¹ _lh_collect_LH_C_1¹ => case _lh_collect_LH_C_0¹ of {
//│ 						Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def union_lh_₂(_lh_union_arg1³, _lh_union_arg2³) = 
//│ 					unionBy_lh_₂((fun a¹⁸ -> (fun b¹³ -> polyEq⁰(a¹⁸, b¹³))), _lh_union_arg1³, _lh_union_arg2³)
//│ 					where
//│ 					def unionBy_lh_₂(_lh_unionBy_arg1¹, _lh_unionBy_arg2¹, _lh_unionBy_arg3¹) = 
//│ 						mappend_lh_₂(_lh_unionBy_arg2¹, foldl_lh_₂(flip_lh_₂(deleteBy_lh_₂(_lh_unionBy_arg1¹)), nubBy_lh_₂(_lh_unionBy_arg1¹, _lh_unionBy_arg3¹), _lh_unionBy_arg2¹))
//│ 						where
//│ 						def deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_arg3¹) = 
//│ 							case _lh_deleteBy_arg3¹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_deleteBy_LH_C_0¹ _lh_deleteBy_LH_C_1¹ => if _lh_deleteBy_arg1¹(_lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_0¹) then _lh_deleteBy_LH_C_1¹ else [LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)]
//│ 								| _  => error⁰}
//│ 						def flip_lh_₂(_lh_flip_arg1³, _lh_flip_arg2³, _lh_flip_arg3³) = 
//│ 							_lh_flip_arg1³(_lh_flip_arg3³, _lh_flip_arg2³)
//│ 						def foldl_lh_₂(f³⁰, i³, ls²⁵) = 
//│ 							case ls²⁵ of {
//│ 								LH_C h²⁶ t²⁶ => foldl_lh_₂(f³⁰, f³⁰(i³, h²⁶), t²⁶)
//│ 								| LH_N  => i³}
//│ 						def mappend_lh_₂(xs⁴, ys⁴) = 
//│ 							case xs⁴ of {
//│ 								LH_C h⁴¹ t⁴¹ => [LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)]
//│ 								| LH_N  => ys⁴}
//│ 						def nubBy_lh_₂(_lh_nubBy_arg1², _lh_nubBy_arg2²) = 
//│ 							case _lh_nubBy_arg2² of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))]
//│ 								| _  => error⁰}
//│ 							where
//│ 							def filter_lh_₅(f¹⁹, ls¹⁷) = 
//│ 								case ls¹⁷ of {
//│ 									LH_C h¹⁸ t¹⁸ => if f¹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)] else filter_lh_₅(f¹⁹, t¹⁸)
//│ 									| LH_N  => [LH_N]}
//│ 			def head_lh_₁(ls⁴⁷) = 
//│ 				case ls⁴⁷ of {
//│ 					LH_C h⁵⁰ t⁵⁰ => h⁵⁰
//│ 					| LH_N  => error⁰}
//│ 			def knownConflict_lh_₁(_lh_knownConflict_arg1²) = 
//│ 				case _lh_knownConflict_arg1² of {
//│ 					Known _lh_knownConflict_Known_0² => case _lh_knownConflict_Known_0² of {
//│ 						LH_C _lh_knownConflict_LH_C_0² _lh_knownConflict_LH_C_1² => [True]
//│ 						| _  => [False]}
//│ 					| _  => [False]}
//│ 			def mapTree_lh_₅(_lh_mapTree_arg1⁶, _lh_mapTree_arg2⁶) = 
//│ 				case _lh_mapTree_arg2⁶ of {
//│ 					Node _lh_mapTree_Node_0⁶ _lh_mapTree_Node_1⁶ => [Node _lh_mapTree_arg1⁶(_lh_mapTree_Node_0⁶) map_lh_₁₁(mapTree_lh_₅(_lh_mapTree_arg1⁶), _lh_mapTree_Node_1⁶)]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def map_lh_₁₁(f³⁹, ls³⁶) = 
//│ 					case ls³⁶ of {
//│ 						LH_C h³⁸ t³⁸ => [LH_C f³⁹(h³⁸) map_lh_₁₁(f³⁹, t³⁸)]
//│ 						| LH_N  => [LH_N]}
//│ 			def null_lh_₀(_lh_null_arg1¹) = 
//│ 				case _lh_null_arg1¹ of {
//│ 					LH_N  => [True]
//│ 					| LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False]
//│ 					| _  => error⁰}
//│ 		def emptyTable_lh_₁(_lh_emptyTable_arg1²) = 
//│ 			case _lh_emptyTable_arg1² of {
//│ 				CSP _lh_emptyTable_CSP_0² _lh_emptyTable_CSP_1² _lh_emptyTable_CSP_2² => [LH_C [LH_N] 
//│ 					let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 						LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C 
//│ 							let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)]
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun¹¹(enumFromTo_lh_₇(1, _lh_emptyTable_CSP_0²))]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def enumFromTo_lh_₆(a¹³, b¹⁰) = 
//│ 				if (a¹³ <= b¹⁰) then [LH_C a¹³ enumFromTo_lh_₆((a¹³ + 1), b¹⁰)] else [LH_N]
//│ 			def enumFromTo_lh_₇(a¹⁷, b¹²) = 
//│ 				if (a¹⁷ <= b¹²) then [LH_C a¹⁷ enumFromTo_lh_₇((a¹⁷ + 1), b¹²)] else [LH_N]
//│ 		def lookupCache_lh_₁(_lh_lookupCache_arg1², _lh_lookupCache_arg2²) = 
//│ 			let f⁵⁰ = (fun _lh_f_arg1⁸ -> (fun _lh_f_arg2⁶ -> case _lh_f_arg2⁶ of {
//│ 				LH_P2 _lh_f_LH_P2_0¹⁰ _lh_f_LH_P2_1¹⁰ => case _lh_f_LH_P2_0¹⁰ of {
//│ 					LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰]
//│ 					| LH_C _lh_f_LH_C_0² _lh_f_LH_C_1² => 
//│ 						let tableEntry² = atIndex_lh_₁((value_lh_₁(_lh_f_LH_C_0²) - 1), head_lh_₂(_lh_f_LH_P2_1¹⁰))
//│ 						in let cs⁶ = if polyEq⁰(tableEntry², [Unknown]) then checkComplete_lh_₇(_lh_f_arg1⁸, [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]) else tableEntry²
//│ 						in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰]
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}))
//│ 			in mapTree_lh_₆(f⁵⁰(_lh_lookupCache_arg1²), _lh_lookupCache_arg2²)
//│ 			where
//│ 			def atIndex_lh_₁(n¹, ls³⁰) = 
//│ 				if (n¹ < 0) then error⁰ else case ls³⁰ of {
//│ 					LH_C h³¹ t³¹ => if (n¹ == 0) then h³¹ else atIndex_lh_₁((n¹ - 1), t³¹)
//│ 					| LH_N  => error⁰}
//│ 			def checkComplete_lh_₇(_lh_checkComplete_arg1⁷, _lh_checkComplete_arg2⁷) = 
//│ 				if complete_lh_₇(_lh_checkComplete_arg1⁷, _lh_checkComplete_arg2⁷) then [Known [LH_N]] else [Unknown]
//│ 				where
//│ 				def complete_lh_₇(_lh_complete_arg1⁴, _lh_complete_arg2⁴) = 
//│ 					case _lh_complete_arg1⁴ of {
//│ 						CSP _lh_complete_CSP_0⁴ _lh_complete_CSP_1⁴ _lh_complete_CSP_2⁴ => (maxLevel_lh_₉(_lh_complete_arg2⁴) == _lh_complete_CSP_0⁴)
//│ 						| _  => error⁰}
//│ 					where
//│ 					def maxLevel_lh_₉(_lh_maxLevel_arg1⁴) = 
//│ 						case _lh_maxLevel_arg1⁴ of {
//│ 							LH_N  => 0
//│ 							| LH_C _lh_maxLevel_LH_C_0⁴ _lh_maxLevel_LH_C_1⁴ => case _lh_maxLevel_LH_C_0⁴ of {
//│ 								Assign _lh_maxLevel_Assign_0⁴ _lh_maxLevel_Assign_1⁴ => _lh_maxLevel_Assign_0⁴
//│ 								| _  => error⁰}
//│ 							| _  => error⁰}
//│ 			def head_lh_₂(ls²³) = 
//│ 				case ls²³ of {
//│ 					LH_C h²⁴ t²⁴ => h²⁴
//│ 					| LH_N  => error⁰}
//│ 			def mapTree_lh_₆(_lh_mapTree_arg1², _lh_mapTree_arg2²) = 
//│ 				case _lh_mapTree_arg2² of {
//│ 					Node _lh_mapTree_Node_0² _lh_mapTree_Node_1² => [Node _lh_mapTree_arg1²(_lh_mapTree_Node_0²) map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1²), _lh_mapTree_Node_1²)]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def map_lh_₁₂(f³⁶, ls³²) = 
//│ 					case ls³² of {
//│ 						LH_C h³⁴ t³⁴ => [LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)]
//│ 						| LH_N  => [LH_N]}
//│ 			def value_lh_₁(_lh_value_arg1¹) = 
//│ 				case _lh_value_arg1¹ of {
//│ 					Assign _lh_value_Assign_0¹ _lh_value_Assign_1¹ => _lh_value_Assign_1¹
//│ 					| _  => error⁰}
//│ 	def map_lh_₁₃(f²⁴, ls¹⁹) = 
//│ 		case ls¹⁹ of {
//│ 			LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)]
//│ 			| LH_N  => [LH_N]}
//│ 	def try_lh_₀(_lh_try_arg1¹, _lh_try_arg2¹) = 
//│ 		length_lh_₀(search_lh_₀(_lh_try_arg2¹, queens_lh_₀(_lh_try_arg1¹)))
//│ 		where
//│ 		def length_lh_₀(ls²⁸) = 
//│ 			case ls²⁸ of {
//│ 				LH_C h²⁹ t²⁹ => (1 + length_lh_₀(t²⁹))
//│ 				| LH_N  => 0}
//│ 		def queens_lh_₀(_lh_queens_arg1¹) = 
//│ 			[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]
//│ 			where
//│ 			def safe_lh_₀(_lh_safe_arg1¹, _lh_safe_arg2¹) = 
//│ 				case _lh_safe_arg1¹ of {
//│ 					Assign _lh_safe_Assign_0² _lh_safe_Assign_1² => case _lh_safe_arg2¹ of {
//│ 						Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³))))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def abs_lh_₀(_lh_abs_arg1²) = 
//│ 					if (_lh_abs_arg1² > 0) then _lh_abs_arg1² else (0 - _lh_abs_arg1²)
//│ 				def abs_lh_₁(_lh_abs_arg1¹) = 
//│ 					if (_lh_abs_arg1¹ > 0) then _lh_abs_arg1¹ else (0 - _lh_abs_arg1¹)
//│ 		def search_lh_₀(_lh_search_arg1¹, _lh_search_arg2¹) = 
//│ 			(fun _lh_funcomp_x¹⁶ -> (fun _lh_funcomp_x¹⁷ -> (fun _lh_funcomp_x¹⁸ -> (fun _lh_funcomp_x¹⁹ -> (fun _lh_funcomp_x²⁰ -> map_lh_₁₅(fst_lh_₁, filter_lh_₆((fun _lh_funcomp_x²¹ -> knownSolution_lh_₀(snd_lh_₀(_lh_funcomp_x²¹))), _lh_funcomp_x²⁰)))(leaves_lh_₀(_lh_funcomp_x¹⁹)))(prune_lh_₀((fun _lh_funcomp_x²² -> knownConflict_lh_₂(snd_lh_₁(_lh_funcomp_x²²))), _lh_funcomp_x¹⁸)))(_lh_search_arg1¹(_lh_search_arg2¹, _lh_funcomp_x¹⁷)))(mkTree_lh_₀(_lh_funcomp_x¹⁶)))(_lh_search_arg2¹)
//│ 			where
//│ 			def filter_lh_₆(f³¹, ls²⁶) = 
//│ 				case ls²⁶ of {
//│ 					LH_C h²⁷ t²⁷ => if f³¹(h²⁷) then [LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)] else filter_lh_₆(f³¹, t²⁷)
//│ 					| LH_N  => [LH_N]}
//│ 			def fst_lh_₁(_lh_fst_arg1¹) = 
//│ 				case _lh_fst_arg1¹ of {
//│ 					LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹
//│ 					| _  => error⁰}
//│ 			def knownConflict_lh_₂(_lh_knownConflict_arg1¹) = 
//│ 				case _lh_knownConflict_arg1¹ of {
//│ 					Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {
//│ 						LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True]
//│ 						| _  => [False]}
//│ 					| _  => [False]}
//│ 			def knownSolution_lh_₀(_lh_knownSolution_arg1¹) = 
//│ 				case _lh_knownSolution_arg1¹ of {
//│ 					Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {
//│ 						LH_N  => [True]
//│ 						| _  => [False]}
//│ 					| _  => [False]}
//│ 			def leaves_lh_₀(_lh_leaves_arg1¹) = 
//│ 				case _lh_leaves_arg1¹ of {
//│ 					Node _lh_leaves_Node_0¹ _lh_leaves_Node_1¹ => case _lh_leaves_Node_1¹ of {
//│ 						LH_N  => [LH_C _lh_leaves_Node_0¹ [LH_N]]
//│ 						| _  => concat_lh_₀(map_lh_₁₄(leaves_lh_₀, _lh_leaves_Node_1¹))}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def concat_lh_₀(lss¹) = 
//│ 					case lss¹ of {
//│ 						LH_C h⁴³ t⁴³ => mappend_lh_₃(h⁴³, concat_lh_₀(t⁴³))
//│ 						| LH_N  => [LH_N]}
//│ 					where
//│ 					def mappend_lh_₃(xs⁷, ys⁷) = 
//│ 						case xs⁷ of {
//│ 							LH_C h⁴⁴ t⁴⁴ => [LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys⁷)]
//│ 							| LH_N  => ys⁷}
//│ 				def map_lh_₁₄(f²⁹, ls²⁴) = 
//│ 					case ls²⁴ of {
//│ 						LH_C h²⁵ t²⁵ => [LH_C f²⁹(h²⁵) map_lh_₁₄(f²⁹, t²⁵)]
//│ 						| LH_N  => [LH_N]}
//│ 			def map_lh_₁₅(f⁴⁹, ls⁴⁶) = 
//│ 				case ls⁴⁶ of {
//│ 					LH_C h⁴⁹ t⁴⁹ => [LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)]
//│ 					| LH_N  => [LH_N]}
//│ 			def mkTree_lh_₀(_lh_mkTree_arg1¹) = 
//│ 				case _lh_mkTree_arg1¹ of {
//│ 					CSP _lh_mkTree_CSP_0¹ _lh_mkTree_CSP_1¹ _lh_mkTree_CSP_2¹ => 
//│ 						let next¹ = (fun ss¹ -> if (maxLevel_lh_₁₀(ss¹) < _lh_mkTree_CSP_0¹) then 
//│ 							let _lh_listcomp_fun¹³ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)]
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun¹³(enumFromTo_lh_₈(1, _lh_mkTree_CSP_1¹)) else [LH_N])
//│ 						in initTree_lh_₀(next¹, [LH_N])
//│ 					| _  => error⁰}
//│ 				where
//│ 				def enumFromTo_lh_₈(a¹¹, b⁸) = 
//│ 					if (a¹¹ <= b⁸) then [LH_C a¹¹ enumFromTo_lh_₈((a¹¹ + 1), b⁸)] else [LH_N]
//│ 				def initTree_lh_₀(_lh_initTree_arg1¹, _lh_initTree_arg2¹) = 
//│ 					[Node _lh_initTree_arg2¹ map_lh_₁₆(initTree_lh_₀(_lh_initTree_arg1¹), _lh_initTree_arg1¹(_lh_initTree_arg2¹))]
//│ 					where
//│ 					def map_lh_₁₆(f⁵³, ls⁵⁰) = 
//│ 						case ls⁵⁰ of {
//│ 							LH_C h⁵⁴ t⁵⁴ => [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)]
//│ 							| LH_N  => [LH_N]}
//│ 				def maxLevel_lh_₁₀(_lh_maxLevel_arg1⁹) = 
//│ 					case _lh_maxLevel_arg1⁹ of {
//│ 						LH_N  => 0
//│ 						| LH_C _lh_maxLevel_LH_C_0⁹ _lh_maxLevel_LH_C_1⁹ => case _lh_maxLevel_LH_C_0⁹ of {
//│ 							Assign _lh_maxLevel_Assign_0⁹ _lh_maxLevel_Assign_1⁹ => _lh_maxLevel_Assign_0⁹
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def maxLevel_lh_₁₁(_lh_maxLevel_arg1³) = 
//│ 					case _lh_maxLevel_arg1³ of {
//│ 						LH_N  => 0
//│ 						| LH_C _lh_maxLevel_LH_C_0³ _lh_maxLevel_LH_C_1³ => case _lh_maxLevel_LH_C_0³ of {
//│ 							Assign _lh_maxLevel_Assign_0³ _lh_maxLevel_Assign_1³ => _lh_maxLevel_Assign_0³
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 			def prune_lh_₀(_lh_prune_arg1¹) = 
//│ 				filterTree_lh_₀((fun _lh_funcomp_x³⁰ -> not⁰(_lh_prune_arg1¹(_lh_funcomp_x³⁰))))
//│ 				where
//│ 				def filterTree_lh_₀(_lh_filterTree_arg1¹) = 
//│ 					let f⁵⁴ = (fun a¹⁹ -> (fun cs⁷ -> [Node a¹⁹ filter_lh_₇((fun _lh_funcomp_x³³ -> _lh_filterTree_arg1¹(label_lh_₂(_lh_funcomp_x³³))), cs⁷)]))
//│ 					in foldTree_lh_₂(f⁵⁴)
//│ 					where
//│ 					def filter_lh_₇(f²⁷, ls²²) = 
//│ 						case ls²² of {
//│ 							LH_C h²³ t²³ => if f²⁷(h²³) then [LH_C h²³ filter_lh_₇(f²⁷, t²³)] else filter_lh_₇(f²⁷, t²³)
//│ 							| LH_N  => [LH_N]}
//│ 					def foldTree_lh_₂(_lh_foldTree_arg1², _lh_foldTree_arg2²) = 
//│ 						case _lh_foldTree_arg2² of {
//│ 							Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def map_lh_₁₇(f⁴⁵, ls⁴²) = 
//│ 							case ls⁴² of {
//│ 								LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)]
//│ 								| LH_N  => [LH_N]}
//│ 					def label_lh_₂(_lh_label_arg1¹) = 
//│ 						case _lh_label_arg1¹ of {
//│ 							Node _lh_label_Node_0¹ _lh_label_Node_1¹ => _lh_label_Node_0¹
//│ 							| _  => error⁰}
//│ 			def snd_lh_₀(_lh_snd_arg1²) = 
//│ 				case _lh_snd_arg1² of {
//│ 					LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1²
//│ 					| _  => error⁰}
//│ 			def snd_lh_₁(_lh_snd_arg1¹) = 
//│ 				case _lh_snd_arg1¹ of {
//│ 					LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 					| _  => error⁰}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C h¹⁰ a⁴]: 1212 --->
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => if f¹⁵(h¹⁵) then [LH_C h¹⁵ filter_lh_₃(f¹⁵, t¹⁵)] else filter_lh_₃(f¹⁵, t¹⁵) | LH_N  => [LH_N]}: 1337
//│ [LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)]: 1227 --->
//│ 	case ls¹³ of {LH_C h¹⁴ t¹⁴ => [LH_C f¹⁴(h¹⁴) map_lh_₈(f¹⁴, t¹⁴)] | LH_N  => [LH_N]}: 1307
//│ [LH_N]: 1228 --->
//│ 	case ls¹³ of {LH_C h¹⁴ t¹⁴ => [LH_C f¹⁴(h¹⁴) map_lh_₈(f¹⁴, t¹⁴)] | LH_N  => [LH_N]}: 1307
//│ [LH_N]: 1254 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ [Known [LH_N]]: 1255 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [Unknown]: 1256 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_C f¹³(h¹³) map_lh_₁(f¹³, t¹³)]: 1291 --->
//│ 	case _lh_combine_arg1¹ of {LH_N  => _lh_combine_arg2¹ | LH_C _lh_combine_LH_C_0¹ _lh_combine_LH_C_1¹ => case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1580
//│ [LH_N]: 1292 --->
//│ 	case _lh_combine_arg1¹ of {LH_N  => _lh_combine_arg2¹ | LH_C _lh_combine_LH_C_0¹ _lh_combine_LH_C_1¹ => case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1580
//│ [LH_C f¹⁴(h¹⁴) map_lh_₈(f¹⁴, t¹⁴)]: 1305 --->
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ [LH_N]: 1306 --->
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ [LH_C h¹⁵ filter_lh_₃(f¹⁵, t¹⁵)]: 1329 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁷ of {LH_N  => (fun _lh_bt_arg1¹² -> (fun s¹² -> checkComplete_lh_₃(_lh_bt_arg1¹², s¹²))) | LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => let _lh_bt_Just_0³ = let _lh_bt_LH_P2_1³ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ in let _lh_bt_LH_P2_0³ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ in [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]
//│ in (fun _lh_bt_arg1¹³ -> (fun s¹³ -> _lh_bt_Just_0³)) | _  => error⁰}: 3294
//│ [LH_N]: 1336 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁷ of {LH_N  => (fun _lh_bt_arg1¹² -> (fun s¹² -> checkComplete_lh_₃(_lh_bt_arg1¹², s¹²))) | LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => let _lh_bt_Just_0³ = let _lh_bt_LH_P2_1³ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ in let _lh_bt_LH_P2_0³ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ in [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]
//│ in (fun _lh_bt_arg1¹³ -> (fun s¹³ -> _lh_bt_Just_0³)) | _  => error⁰}: 3294
//│ [Node _lh_mapTree_arg1¹(_lh_mapTree_Node_0¹) map_lh_₈(mapTree_lh_₃(_lh_mapTree_arg1¹), _lh_mapTree_Node_1¹)]: 1351 --->
//│ 	case _lh_foldTree_arg2² of {Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²)) | _  => error⁰}: 2923
//│ [LH_N]: 1357 --->
//│ 	DeadCodeCons
//│ 	case _lh_deleteBy_arg3¹ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0¹ _lh_deleteBy_LH_C_1¹ => if _lh_deleteBy_arg1¹(_lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_0¹) then _lh_deleteBy_LH_C_1¹ else [LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)] | _  => error⁰}: 1375
//│ 	case ls¹⁷ of {LH_C h¹⁸ t¹⁸ => if f¹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)] else filter_lh_₅(f¹⁹, t¹⁸) | LH_N  => [LH_N]}: 1510
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_nubBy_arg2² of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))] | _  => error⁰}: 3556
//│ [LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)]: 1372 --->
//│ 	DeadCodeCons
//│ 	case _lh_deleteBy_arg3¹ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0¹ _lh_deleteBy_LH_C_1¹ => if _lh_deleteBy_arg1¹(_lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_0¹) then _lh_deleteBy_LH_C_1¹ else [LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)] | _  => error⁰}: 1375
//│ 	case ls¹⁷ of {LH_C h¹⁸ t¹⁸ => if f¹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)] else filter_lh_₅(f¹⁹, t¹⁸) | LH_N  => [LH_N]}: 1510
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_nubBy_arg2² of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))] | _  => error⁰}: 3556
//│ [Node _lh_mapTree_arg1²(_lh_mapTree_Node_0²) map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1²), _lh_mapTree_Node_1²)]: 1390 --->
//│ 	case _lh_mapTree_arg2⁶ of {Node _lh_mapTree_Node_0⁶ _lh_mapTree_Node_1⁶ => [Node _lh_mapTree_arg1⁶(_lh_mapTree_Node_0⁶) map_lh_₁₁(mapTree_lh_₅(_lh_mapTree_arg1⁶), _lh_mapTree_Node_1⁶)] | _  => error⁰}: 3839
//│ [LH_P2 s⁴ let _lh_matchIdent³ = earliestInconsistency_lh_₂(_lh_bt_arg1⁴, s⁴)
//│ in _lh_matchIdent³(_lh_bt_arg1⁴, s⁴)]: 1429 --->
//│ 	DeadCodeCons
//│ 	case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905
//│ [LH_C h¹⁶ filter_lh_₁(f¹⁷, t¹⁶)]: 1455 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁵ of {LH_N  => (fun _lh_bt_arg1⁶ -> (fun s⁶ -> checkComplete_lh_₁(_lh_bt_arg1⁶, s⁶))) | LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => let _lh_bt_Just_0¹ = let _lh_bt_LH_P2_1¹ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ in let _lh_bt_LH_P2_0¹ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ in (fun _lh_bt_arg1⁷ -> (fun s⁷ -> _lh_bt_Just_0¹)) | _  => error⁰}: 2661
//│ [LH_N]: 1462 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁵ of {LH_N  => (fun _lh_bt_arg1⁶ -> (fun s⁶ -> checkComplete_lh_₁(_lh_bt_arg1⁶, s⁶))) | LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => let _lh_bt_Just_0¹ = let _lh_bt_LH_P2_1¹ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ in let _lh_bt_LH_P2_0¹ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ in (fun _lh_bt_arg1⁷ -> (fun s⁷ -> _lh_bt_Just_0¹)) | _  => error⁰}: 2661
//│ [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)]: 1502 --->
//│ 	case ls¹⁷ of {LH_C h¹⁸ t¹⁸ => if f¹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)] else filter_lh_₅(f¹⁹, t¹⁸) | LH_N  => [LH_N]}: 1510
//│ 	case _lh_nubBy_arg2² of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))] | _  => error⁰}: 3556
//│ [LH_N]: 1509 --->
//│ 	case ls¹⁷ of {LH_C h¹⁸ t¹⁸ => if f¹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)] else filter_lh_₅(f¹⁹, t¹⁸) | LH_N  => [LH_N]}: 1510
//│ 	case _lh_nubBy_arg2² of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))] | _  => error⁰}: 3556
//│ [LH_C a⁵ enumFromTo_lh_₀((a⁵ + 1), b²)]: 1528 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 1788
//│ [LH_N]: 1529 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 1788
//│ [LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b³)]: 1548 --->
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]}: 1857
//│ [LH_N]: 1549 --->
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]}: 1857
//│ [LH_C f²⁰(h¹⁹) map_lh_₆(f²⁰, t¹⁹)]: 1592 --->
//│ 	case ls¹⁰ of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 1229
//│ [LH_N]: 1593 --->
//│ 	case ls¹⁰ of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 1229
//│ [Known _lh_f_Known_0²]: 1601 --->
//│ 	DeadCodeCons
//│ 	case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰}: 1576
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]]: 1602 --->
//│ 	DeadCodeCons
//│ 	case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰}: 1578
//│ 	case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905
//│ [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³]: 1604 --->
//│ 	DeadCodeCons
//│ 	case _lh_foldTree_arg2² of {Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²)) | _  => error⁰}: 2923
//│ 	case _lh_label_arg1² of {Node _lh_label_Node_0² _lh_label_Node_1² => _lh_label_Node_0² | _  => error⁰}: 3389
//│ [LH_N]: 1612 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ 	case _lh_nubBy_arg2³ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))] | _  => error⁰}: 4136
//│ [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]: 1614 --->
//│ 	DeadCodeCons
//│ 	case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰}: 1576
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ 	case _lh_knownConflict_arg1³ of {Known _lh_knownConflict_Known_0³ => case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]} | _  => [False]}: 3887
//│ [LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1620 --->
//│ 	DeadCodeCons
//│ 	case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰}: 1578
//│ 	case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905
//│ [LH_N]: 1621 --->
//│ 	DeadCodeCons
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]]: 1622 --->
//│ 	DeadCodeCons
//│ 	case _lh_foldTree_arg2² of {Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²)) | _  => error⁰}: 2923
//│ 	case _lh_label_arg1² of {Node _lh_label_Node_0² _lh_label_Node_1² => _lh_label_Node_0² | _  => error⁰}: 3389
//│ [LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1625 --->
//│ 	DeadCodeCons
//│ 	case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰}: 1578
//│ 	case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905
//│ [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³]: 1627 --->
//│ 	DeadCodeCons
//│ 	case _lh_foldTree_arg2² of {Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²)) | _  => error⁰}: 2923
//│ 	case _lh_label_arg1² of {Node _lh_label_Node_0² _lh_label_Node_1² => _lh_label_Node_0² | _  => error⁰}: 3389
//│ [LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹]: 1653 --->
//│ 	case _lh_f_arg2⁶ of {LH_P2 _lh_f_LH_P2_0¹⁰ _lh_f_LH_P2_1¹⁰ => case _lh_f_LH_P2_0¹⁰ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰] | LH_C _lh_f_LH_C_0² _lh_f_LH_C_1² => let tableEntry² = atIndex_lh_₁((value_lh_₁(_lh_f_LH_C_0²) - 1), head_lh_₂(_lh_f_LH_P2_1¹⁰))
//│ in let cs⁶ = if polyEq⁰(tableEntry², [Unknown]) then checkComplete_lh_₇(_lh_f_arg1⁸, [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]) else tableEntry²
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰] | _  => error⁰} | _  => error⁰}: 3976
//│ [Node [LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹] map_lh_₁₀(cacheChecks_lh_₁(_lh_cacheChecks_arg1¹, fillTable_lh_₁(_lh_cacheChecks_Node_0¹, _lh_cacheChecks_arg1¹, tail_lh_₁(_lh_cacheChecks_arg2¹))), _lh_cacheChecks_Node_1¹)]: 1671 --->
//│ 	case _lh_mapTree_arg2² of {Node _lh_mapTree_Node_0² _lh_mapTree_Node_1² => [Node _lh_mapTree_arg1²(_lh_mapTree_Node_0²) map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1²), _lh_mapTree_Node_1²)] | _  => error⁰}: 1392
//│ [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 1690 --->
//│ 	DeadCodeCons
//│ 	case _lh_null_arg1¹ of {LH_N  => [True] | LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False] | _  => error⁰}: 1204
//│ 	case ls⁴⁷ of {LH_C h⁵⁰ t⁵⁰ => h⁵⁰ | LH_N  => error⁰}: 3928
//│ [LH_N]: 1695 --->
//│ 	DeadCodeCons
//│ 	case _lh_null_arg1¹ of {LH_N  => [True] | LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False] | _  => error⁰}: 1204
//│ 	case ls⁴⁷ of {LH_C h⁵⁰ t⁵⁰ => h⁵⁰ | LH_N  => error⁰}: 3928
//│ [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]: 1711 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_P2 _lh_f_LH_P2_0⁷ cs'³]: 1715 --->
//│ 	DeadCodeCons
//│ 	case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905
//│ [Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹]: 1750 --->
//│ 	case _lh_safe_arg1¹ of {Assign _lh_safe_Assign_0² _lh_safe_Assign_1² => case _lh_safe_arg2¹ of {Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³)))) | _  => error⁰} | _  => error⁰}: 3643
//│ [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]: 1754 --->
//│ 	case _lh_safe_arg2¹ of {Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³)))) | _  => error⁰}: 3641
//│ [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]: 1762 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]]: 1763 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸]: 1782 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}: 1767
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1786 --->
//│ 	case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]}: 3318
//│ [LH_N]: 1787 --->
//│ 	case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]}: 3318
//│ [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1801 --->
//│ 	case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]}: 3127
//│ [LH_N]: 1802 --->
//│ 	case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]}: 3127
//│ [LH_N]: 1848 --->
//│ 	DeadCodeCons
//│ 	case ls⁴⁰ of {LH_C h⁴² t⁴² => if (n² == 0) then h⁴² else atIndex_lh_₀((n² - 1), t⁴²) | LH_N  => error⁰}: 3205
//│ [Unknown]: 1851 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)]: 1855 --->
//│ 	DeadCodeCons
//│ 	case ls⁴⁰ of {LH_C h⁴² t⁴² => if (n² == 0) then h⁴² else atIndex_lh_₀((n² - 1), t⁴²) | LH_N  => error⁰}: 3205
//│ 	case xs⁶ of {LH_C hx³ tx³ => case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3320
//│ [LH_N]: 1856 --->
//│ 	DeadCodeCons
//│ 	case ls⁴⁰ of {LH_C h⁴² t⁴² => if (n² == 0) then h⁴² else atIndex_lh_₀((n² - 1), t⁴²) | LH_N  => error⁰}: 3205
//│ 	case xs⁶ of {LH_C hx³ tx³ => case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3320
//│ [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)]: 1870 --->
//│ 	DeadCodeCons
//│ 	case ls³⁴ of {LH_C h³⁶ t³⁶ => h³⁶ | LH_N  => error⁰}: 2886
//│ 	case xs⁵ of {LH_C hx² tx² => case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3129
//│ 	case ls⁴³ of {LH_C h⁴⁷ t⁴⁷ => t⁴⁷ | LH_N  => error⁰}: 3765
//│ [LH_N]: 1871 --->
//│ 	DeadCodeCons
//│ 	case ls³⁴ of {LH_C h³⁶ t³⁶ => h³⁶ | LH_N  => error⁰}: 2886
//│ 	case xs⁵ of {LH_C hx² tx² => case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3129
//│ 	case ls⁴³ of {LH_C h⁴⁷ t⁴⁷ => t⁴⁷ | LH_N  => error⁰}: 3765
//│ [LH_C [LH_N] let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹(enumFromTo_lh_₃(1, _lh_emptyTable_CSP_0¹))]: 1882 --->
//│ 	DeadCodeCons
//│ 	case ls³⁴ of {LH_C h³⁶ t³⁶ => h³⁶ | LH_N  => error⁰}: 2886
//│ 	case ls⁴³ of {LH_C h⁴⁷ t⁴⁷ => t⁴⁷ | LH_N  => error⁰}: 3765
//│ [LH_N]: 1896 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ [Known [LH_N]]: 1897 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [Unknown]: 1898 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [LH_C f²⁵(h²¹) map_lh_₁₀(f²⁵, t²¹)]: 1911 --->
//│ 	case ls³² of {LH_C h³⁴ t³⁴ => [LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)] | LH_N  => [LH_N]}: 2786
//│ [LH_N]: 1912 --->
//│ 	case ls³² of {LH_C h³⁴ t³⁴ => [LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)] | LH_N  => [LH_N]}: 2786
//│ [LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁴)]: 1942 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 1803
//│ [LH_N]: 1943 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 1803
//│ [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)]: 1984 --->
//│ 	DeadCodeCons
//│ 	case xs² of {LH_C hx¹ tx¹ => case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1988
//│ 	case ls³⁰ of {LH_C h³¹ t³¹ => if (n¹ == 0) then h³¹ else atIndex_lh_₁((n¹ - 1), t³¹) | LH_N  => error⁰}: 2577
//│ 	case _lh_collect_arg1¹ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0¹ _lh_collect_LH_C_1¹ => case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰} | _  => error⁰}: 2729
//│ 	case _lh_all_arg2¹ of {LH_N  => [True] | LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₀(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False] | _  => error⁰}: 3496
//│ [LH_N]: 1985 --->
//│ 	DeadCodeCons
//│ 	case xs² of {LH_C hx¹ tx¹ => case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1988
//│ 	case ls³⁰ of {LH_C h³¹ t³¹ => if (n¹ == 0) then h³¹ else atIndex_lh_₁((n¹ - 1), t³¹) | LH_N  => error⁰}: 2577
//│ 	case _lh_collect_arg1¹ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0¹ _lh_collect_LH_C_1¹ => case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰} | _  => error⁰}: 2729
//│ 	case _lh_all_arg2¹ of {LH_N  => [True] | LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₀(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False] | _  => error⁰}: 3496
//│ [LH_N]: 1987 --->
//│ 	DeadCodeCons
//│ 	case xs² of {LH_C hx¹ tx¹ => case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1988
//│ 	case ls³⁰ of {LH_C h³¹ t³¹ => if (n¹ == 0) then h³¹ else atIndex_lh_₁((n¹ - 1), t³¹) | LH_N  => error⁰}: 2577
//│ 	case _lh_collect_arg1¹ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0¹ _lh_collect_LH_C_1¹ => case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰} | _  => error⁰}: 2729
//│ 	case _lh_all_arg2¹ of {LH_N  => [True] | LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₀(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False] | _  => error⁰}: 3496
//│ [LH_C h²³ filter_lh_₇(f²⁷, t²³)]: 2002 --->
//│ 	DeadCodeCons
//│ 	case ls²⁴ of {LH_C h²⁵ t²⁵ => [LH_C f²⁹(h²⁵) map_lh_₁₄(f²⁹, t²⁵)] | LH_N  => [LH_N]}: 2077
//│ 	case _lh_leaves_Node_1¹ of {LH_N  => [LH_C _lh_leaves_Node_0¹ [LH_N]] | _  => concat_lh_₀(map_lh_₁₄(leaves_lh_₀, _lh_leaves_Node_1¹))}: 2211
//│ [LH_N]: 2009 --->
//│ 	DeadCodeCons
//│ 	case ls²⁴ of {LH_C h²⁵ t²⁵ => [LH_C f²⁹(h²⁵) map_lh_₁₄(f²⁹, t²⁵)] | LH_N  => [LH_N]}: 2077
//│ 	case _lh_leaves_Node_1¹ of {LH_N  => [LH_C _lh_leaves_Node_0¹ [LH_N]] | _  => concat_lh_₀(map_lh_₁₄(leaves_lh_₀, _lh_leaves_Node_1¹))}: 2211
//│ [Known _lh_f_Known_0³]: 2017 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰}: 2604
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]]: 2018 --->
//│ 	DeadCodeCons
//│ 	case _lh_combine_LH_C_0² of {LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰} | _  => error⁰}: 2606
//│ 	case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905
//│ [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴]: 2020 --->
//│ 	DeadCodeCons
//│ 	case _lh_foldTree_arg2² of {Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²)) | _  => error⁰}: 2923
//│ 	case _lh_label_arg1³ of {Node _lh_label_Node_0³ _lh_label_Node_1³ => _lh_label_Node_0³ | _  => error⁰}: 4214
//│ [LH_N]: 2029 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_nubBy_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))] | _  => error⁰}: 2986
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]: 2031 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰}: 2604
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]]: 2032 --->
//│ 	DeadCodeCons
//│ 	case _lh_combine_LH_C_0² of {LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰} | _  => error⁰}: 2606
//│ 	case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905
//│ [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴]: 2034 --->
//│ 	DeadCodeCons
//│ 	case _lh_foldTree_arg2² of {Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²)) | _  => error⁰}: 2923
//│ 	case _lh_label_arg1³ of {Node _lh_label_Node_0³ _lh_label_Node_1³ => _lh_label_Node_0³ | _  => error⁰}: 4214
//│ [LH_C f²⁹(h²⁵) map_lh_₁₄(f²⁹, t²⁵)]: 2075 --->
//│ 	case lss¹ of {LH_C h⁴³ t⁴³ => mappend_lh_₃(h⁴³, concat_lh_₀(t⁴³)) | LH_N  => [LH_N]}: 3338
//│ [LH_N]: 2076 --->
//│ 	case lss¹ of {LH_C h⁴³ t⁴³ => mappend_lh_₃(h⁴³, concat_lh_₀(t⁴³)) | LH_N  => [LH_N]}: 3338
//│ [LH_C a⁹ enumFromTo_lh_₄((a⁹ + 1), b⁶)]: 2095 --->
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]}: 3717
//│ [LH_N]: 2096 --->
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]}: 3717
//│ [LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)]: 2141 --->
//│ 	case ls⁴⁶ of {LH_C h⁴⁹ t⁴⁹ => [LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)] | LH_N  => [LH_N]}: 3878
//│ [LH_N]: 2148 --->
//│ 	case ls⁴⁶ of {LH_C h⁴⁹ t⁴⁹ => [LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)] | LH_N  => [LH_N]}: 3878
//│ [LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²]: 2155 --->
//│ 	case _lh_f_arg2⁵ of {LH_P2 _lh_f_LH_P2_0⁹ _lh_f_LH_P2_1⁹ => case _lh_f_LH_P2_0⁹ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹] | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => let tableEntry¹ = atIndex_lh_₀((value_lh_₀(_lh_f_LH_C_0¹) - 1), head_lh_₀(_lh_f_LH_P2_1⁹))
//│ in let cs⁴ = if polyEq⁰(tableEntry¹, [Unknown]) then checkComplete_lh_₄(_lh_f_arg1⁷, [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]) else tableEntry¹
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 2287
//│ [Node [LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²] map_lh_₆(cacheChecks_lh_₀(_lh_cacheChecks_arg1², fillTable_lh_₀(_lh_cacheChecks_Node_0², _lh_cacheChecks_arg1², tail_lh_₀(_lh_cacheChecks_arg2²))), _lh_cacheChecks_Node_1²)]: 2173 --->
//│ 	case _lh_mapTree_arg2⁷ of {Node _lh_mapTree_Node_0⁷ _lh_mapTree_Node_1⁷ => [Node _lh_mapTree_arg1⁷(_lh_mapTree_Node_0⁷) map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1⁷), _lh_mapTree_Node_1⁷)] | _  => error⁰}: 4071
//│ [LH_C a¹⁰ enumFromTo_lh_₅((a¹⁰ + 1), b⁷)]: 2194 --->
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]}: 3732
//│ [LH_N]: 2195 --->
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]}: 3732
//│ [LH_N]: 2202 --->
//│ 	case ls²⁶ of {LH_C h²⁷ t²⁷ => if f³¹(h²⁷) then [LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)] else filter_lh_₆(f³¹, t²⁷) | LH_N  => [LH_N]}: 2149
//│ 	case xs⁷ of {LH_C h⁴⁴ t⁴⁴ => [LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys⁷)] | LH_N  => ys⁷}: 3349
//│ [LH_C _lh_leaves_Node_0¹ [LH_N]]: 2203 --->
//│ 	case ls²⁶ of {LH_C h²⁷ t²⁷ => if f³¹(h²⁷) then [LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)] else filter_lh_₆(f³¹, t²⁷) | LH_N  => [LH_N]}: 2149
//│ 	case xs⁷ of {LH_C h⁴⁴ t⁴⁴ => [LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys⁷)] | LH_N  => ys⁷}: 3349
//│ [LH_C h²⁸ filter_lh_₀(f³², t²⁸)]: 2230 --->
//│ 	case ls²⁷ of {LH_C h²⁸ t²⁸ => if f³²(h²⁸) then [LH_C h²⁸ filter_lh_₀(f³², t²⁸)] else filter_lh_₀(f³², t²⁸) | LH_N  => [LH_N]}: 2238
//│ 	case _lh_nubBy_arg2³ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))] | _  => error⁰}: 4136
//│ [LH_N]: 2237 --->
//│ 	case ls²⁷ of {LH_C h²⁸ t²⁸ => if f³²(h²⁸) then [LH_C h²⁸ filter_lh_₀(f³², t²⁸)] else filter_lh_₀(f³², t²⁸) | LH_N  => [LH_N]}: 2238
//│ 	case _lh_nubBy_arg2³ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))] | _  => error⁰}: 4136
//│ [Unknown]: 2244 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_P2 [LH_N] [Unknown]]: 2245 --->
//│ 	DeadCodeCons
//│ 	case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905
//│ [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹]: 2247 --->
//│ 	case _lh_fst_arg1² of {LH_P2 _lh_fst_LH_P2_0² _lh_fst_LH_P2_1² => _lh_fst_LH_P2_0² | _  => error⁰}: 4036
//│ [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]: 2271 --->
//│ 	case _lh_maxLevel_arg1¹¹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹¹ _lh_maxLevel_LH_C_1¹¹ => case _lh_maxLevel_LH_C_0¹¹ of {Assign _lh_maxLevel_Assign_0¹¹ _lh_maxLevel_Assign_1¹¹ => _lh_maxLevel_Assign_0¹¹ | _  => error⁰} | _  => error⁰}: 3435
//│ [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴]: 2279 --->
//│ 	DeadCodeCons
//│ 	case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905
//│ [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹]: 2281 --->
//│ 	case _lh_fst_arg1² of {LH_P2 _lh_fst_LH_P2_0² _lh_fst_LH_P2_1² => _lh_fst_LH_P2_0² | _  => error⁰}: 4036
//│ [Node _lh_mapTree_arg1³(_lh_mapTree_Node_0³) map_lh_₂(mapTree_lh_₀(_lh_mapTree_arg1³), _lh_mapTree_Node_1³)]: 2417 --->
//│ 	case _lh_foldTree_arg2³ of {Node _lh_foldTree_Node_0³ _lh_foldTree_Node_1³ => _lh_foldTree_arg1³(_lh_foldTree_Node_0³, map_lh_₀(foldTree_lh_₀(_lh_foldTree_arg1³), _lh_foldTree_Node_1³)) | _  => error⁰}: 3241
//│ [LH_N]: 2437 --->
//│ 	DeadCodeCons
//│ 	case ls³⁰ of {LH_C h³¹ t³¹ => if (n¹ == 0) then h³¹ else atIndex_lh_₁((n¹ - 1), t³¹) | LH_N  => error⁰}: 2577
//│ 	case _lh_collect_arg1¹ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0¹ _lh_collect_LH_C_1¹ => case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰} | _  => error⁰}: 2729
//│ 	case _lh_all_arg2¹ of {LH_N  => [True] | LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₀(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False] | _  => error⁰}: 3496
//│ [Unknown]: 2440 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰}: 2727
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ 	case _lh_knownConflict_arg1² of {Known _lh_knownConflict_Known_0² => case _lh_knownConflict_Known_0² of {LH_C _lh_knownConflict_LH_C_0² _lh_knownConflict_LH_C_1² => [True] | _  => [False]} | _  => [False]}: 3226
//│ [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)]: 2444 --->
//│ 	DeadCodeCons
//│ 	case xs² of {LH_C hx¹ tx¹ => case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1988
//│ 	case ls³⁰ of {LH_C h³¹ t³¹ => if (n¹ == 0) then h³¹ else atIndex_lh_₁((n¹ - 1), t³¹) | LH_N  => error⁰}: 2577
//│ 	case _lh_collect_arg1¹ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0¹ _lh_collect_LH_C_1¹ => case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰} | _  => error⁰}: 2729
//│ 	case _lh_all_arg2¹ of {LH_N  => [True] | LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₀(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False] | _  => error⁰}: 3496
//│ [LH_N]: 2445 --->
//│ 	DeadCodeCons
//│ 	case xs² of {LH_C hx¹ tx¹ => case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1988
//│ 	case ls³⁰ of {LH_C h³¹ t³¹ => if (n¹ == 0) then h³¹ else atIndex_lh_₁((n¹ - 1), t³¹) | LH_N  => error⁰}: 2577
//│ 	case _lh_collect_arg1¹ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0¹ _lh_collect_LH_C_1¹ => case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰} | _  => error⁰}: 2729
//│ 	case _lh_all_arg2¹ of {LH_N  => [True] | LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₀(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False] | _  => error⁰}: 3496
//│ [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 2459 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]}: 1696
//│ 	case ls²¹ of {LH_C h²² t²² => t²² | LH_N  => error⁰}: 1968
//│ 	case ls²³ of {LH_C h²⁴ t²⁴ => h²⁴ | LH_N  => error⁰}: 2064
//│ 	case xs⁸ of {LH_C hx⁴ tx⁴ => case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3370
//│ [LH_N]: 2460 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]}: 1696
//│ 	case ls²¹ of {LH_C h²² t²² => t²² | LH_N  => error⁰}: 1968
//│ 	case ls²³ of {LH_C h²⁴ t²⁴ => h²⁴ | LH_N  => error⁰}: 2064
//│ 	case xs⁸ of {LH_C hx⁴ tx⁴ => case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3370
//│ [LH_C [LH_N] let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₇(1, _lh_emptyTable_CSP_0²))]: 2471 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]}: 1696
//│ 	case ls²¹ of {LH_C h²² t²² => t²² | LH_N  => error⁰}: 1968
//│ 	case ls²³ of {LH_C h²⁴ t²⁴ => h²⁴ | LH_N  => error⁰}: 2064
//│ [LH_N]: 2497 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ [Known [LH_N]]: 2498 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [Unknown]: 2499 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [LH_C a¹¹ enumFromTo_lh_₈((a¹¹ + 1), b⁸)]: 2518 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)] | LH_N  => [LH_N]}: 2694
//│ [LH_N]: 2519 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)] | LH_N  => [LH_N]}: 2694
//│ [LH_C f³⁴(h³⁰) map_lh_₂(f³⁴, t³⁰)]: 2540 --->
//│ 	case ls³⁵ of {LH_C h³⁷ t³⁷ => [LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)] | LH_N  => [LH_N]}: 2937
//│ [LH_N]: 2541 --->
//│ 	case ls³⁵ of {LH_C h³⁷ t³⁷ => [LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)] | LH_N  => [LH_N]}: 2937
//│ [LH_N]: 2650 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]: 2651 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]: 2652 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]: 2653 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686 --->
//│ 	DeadCodeCons
//│ 	case _lh_maxLevel_LH_C_0¹ of {Assign _lh_maxLevel_Assign_0¹ _lh_maxLevel_Assign_1¹ => _lh_maxLevel_Assign_0¹ | _  => error⁰}: 1315
//│ 	case _lh_maxLevel_LH_C_0² of {Assign _lh_maxLevel_Assign_0² _lh_maxLevel_Assign_1² => _lh_maxLevel_Assign_0² | _  => error⁰}: 1441
//│ 	case _lh_maxLevel_LH_C_0³ of {Assign _lh_maxLevel_Assign_0³ _lh_maxLevel_Assign_1³ => _lh_maxLevel_Assign_0³ | _  => error⁰}: 1471
//│ 	case _lh_maxLevel_LH_C_0⁴ of {Assign _lh_maxLevel_Assign_0⁴ _lh_maxLevel_Assign_1⁴ => _lh_maxLevel_Assign_0⁴ | _  => error⁰}: 1646
//│ 	case _lh_fillTable_LH_C_0¹ of {Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹ => case _lh_fillTable_arg2¹ of {CSP _lh_fillTable_CSP_0¹ _lh_fillTable_CSP_1¹ _lh_fillTable_CSP_2¹ => let f²³ = (fun cs³ -> (fun varval¹ -> let _lh_matchIdent⁴ = varval¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}))
//│ in zipWith_lh_₀(zipWith_lh_₁(f²³), _lh_fillTable_arg3¹, let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(enumFromTo_lh_₁((_lh_fillTable_Assign_0¹ + 1), _lh_fillTable_CSP_0¹))) | _  => error⁰} | _  => error⁰}: 1822
//│ 	case _lh_level_arg1¹ of {Assign _lh_level_Assign_0¹ _lh_level_Assign_1¹ => _lh_level_Assign_0¹ | _  => error⁰}: 1831
//│ 	case _lh_level_arg1² of {Assign _lh_level_Assign_0² _lh_level_Assign_1² => _lh_level_Assign_0² | _  => error⁰}: 1889
//│ 	case _lh_maxLevel_LH_C_0⁵ of {Assign _lh_maxLevel_Assign_0⁵ _lh_maxLevel_Assign_1⁵ => _lh_maxLevel_Assign_0⁵ | _  => error⁰}: 2105
//│ 	case _lh_level_arg1³ of {Assign _lh_level_Assign_0³ _lh_level_Assign_1³ => _lh_level_Assign_0³ | _  => error⁰}: 2129
//│ 	case _lh_value_arg1¹ of {Assign _lh_value_Assign_0¹ _lh_value_Assign_1¹ => _lh_value_Assign_1¹ | _  => error⁰}: 2218
//│ 	case _lh_maxLevel_LH_C_0⁶ of {Assign _lh_maxLevel_Assign_0⁶ _lh_maxLevel_Assign_1⁶ => _lh_maxLevel_Assign_0⁶ | _  => error⁰}: 2332
//│ 	case _lh_level_arg1⁴ of {Assign _lh_level_Assign_0⁴ _lh_level_Assign_1⁴ => _lh_level_Assign_0⁴ | _  => error⁰}: 2425
//│ 	case _lh_maxLevel_LH_C_0⁷ of {Assign _lh_maxLevel_Assign_0⁷ _lh_maxLevel_Assign_1⁷ => _lh_maxLevel_Assign_0⁷ | _  => error⁰}: 2432
//│ 	case _lh_level_arg1⁵ of {Assign _lh_level_Assign_0⁵ _lh_level_Assign_1⁵ => _lh_level_Assign_0⁵ | _  => error⁰}: 2490
//│ 	case _lh_maxLevel_LH_C_0⁸ of {Assign _lh_maxLevel_Assign_0⁸ _lh_maxLevel_Assign_1⁸ => _lh_maxLevel_Assign_0⁸ | _  => error⁰}: 3138
//│ 	case _lh_maxLevel_LH_C_0⁹ of {Assign _lh_maxLevel_Assign_0⁹ _lh_maxLevel_Assign_1⁹ => _lh_maxLevel_Assign_0⁹ | _  => error⁰}: 3159
//│ 	case _lh_maxLevel_LH_C_0¹⁰ of {Assign _lh_maxLevel_Assign_0¹⁰ _lh_maxLevel_Assign_1¹⁰ => _lh_maxLevel_Assign_0¹⁰ | _  => error⁰}: 3168
//│ 	case _lh_maxLevel_LH_C_0¹¹ of {Assign _lh_maxLevel_Assign_0¹¹ _lh_maxLevel_Assign_1¹¹ => _lh_maxLevel_Assign_0¹¹ | _  => error⁰}: 3433
//│ 	case _lh_safe_arg2¹ of {Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³)))) | _  => error⁰}: 3641
//│ 	case _lh_safe_arg1¹ of {Assign _lh_safe_Assign_0² _lh_safe_Assign_1² => case _lh_safe_arg2¹ of {Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³)))) | _  => error⁰} | _  => error⁰}: 3643
//│ 	case _lh_fillTable_LH_C_0² of {Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1² => case _lh_fillTable_arg2² of {CSP _lh_fillTable_CSP_0² _lh_fillTable_CSP_1² _lh_fillTable_CSP_2² => let f⁴⁷ = (fun cs⁵ -> (fun varval² -> let _lh_matchIdent¹⁰ = varval²
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}))
//│ in zipWith_lh_₂(zipWith_lh_₃(f⁴⁷), _lh_fillTable_arg3², let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromTo_lh_₅((_lh_fillTable_Assign_0² + 1), _lh_fillTable_CSP_0²))) | _  => error⁰} | _  => error⁰}: 3751
//│ 	case _lh_value_arg1² of {Assign _lh_value_Assign_0² _lh_value_Assign_1² => _lh_value_Assign_1² | _  => error⁰}: 3818
//│ 	case _lh_level_arg1⁶ of {Assign _lh_level_Assign_0⁶ _lh_level_Assign_1⁶ => _lh_level_Assign_0⁶ | _  => error⁰}: 3845
//│ 	case _lh_maxLevel_LH_C_0¹² of {Assign _lh_maxLevel_Assign_0¹² _lh_maxLevel_Assign_1¹² => _lh_maxLevel_Assign_0¹² | _  => error⁰}: 4005
//│ [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688 --->
//│ 	DeadCodeCons
//│ 	case ls⁹ of {LH_C h¹⁰ t¹⁰ => reverse_helper_lh_₁(t¹⁰, [LH_C h¹⁰ a⁴]) | LH_N  => a⁴}: 1215
//│ 	case _lh_maxLevel_arg1¹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹ _lh_maxLevel_LH_C_1¹ => case _lh_maxLevel_LH_C_0¹ of {Assign _lh_maxLevel_Assign_0¹ _lh_maxLevel_Assign_1¹ => _lh_maxLevel_Assign_0¹ | _  => error⁰} | _  => error⁰}: 1317
//│ 	case _lh_maxLevel_arg1² of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0² _lh_maxLevel_LH_C_1² => case _lh_maxLevel_LH_C_0² of {Assign _lh_maxLevel_Assign_0² _lh_maxLevel_Assign_1² => _lh_maxLevel_Assign_0² | _  => error⁰} | _  => error⁰}: 1443
//│ 	case _lh_maxLevel_arg1³ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0³ _lh_maxLevel_LH_C_1³ => case _lh_maxLevel_LH_C_0³ of {Assign _lh_maxLevel_Assign_0³ _lh_maxLevel_Assign_1³ => _lh_maxLevel_Assign_0³ | _  => error⁰} | _  => error⁰}: 1473
//│ 	case _lh_fillTable_arg1¹ of {LH_N  => _lh_fillTable_arg3¹ | LH_C _lh_fillTable_LH_C_0¹ _lh_fillTable_LH_C_1¹ => case _lh_fillTable_LH_C_0¹ of {Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹ => case _lh_fillTable_arg2¹ of {CSP _lh_fillTable_CSP_0¹ _lh_fillTable_CSP_1¹ _lh_fillTable_CSP_2¹ => let f²³ = (fun cs³ -> (fun varval¹ -> let _lh_matchIdent⁴ = varval¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}))
//│ in zipWith_lh_₀(zipWith_lh_₁(f²³), _lh_fillTable_arg3¹, let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(enumFromTo_lh_₁((_lh_fillTable_Assign_0¹ + 1), _lh_fillTable_CSP_0¹))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1824
//│ 	case _lh_maxLevel_arg1⁵ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁵ _lh_maxLevel_LH_C_1⁵ => case _lh_maxLevel_LH_C_0⁵ of {Assign _lh_maxLevel_Assign_0⁵ _lh_maxLevel_Assign_1⁵ => _lh_maxLevel_Assign_0⁵ | _  => error⁰} | _  => error⁰}: 2107
//│ 	case _lh_f_LH_P2_0⁹ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹] | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => let tableEntry¹ = atIndex_lh_₀((value_lh_₀(_lh_f_LH_C_0¹) - 1), head_lh_₀(_lh_f_LH_P2_1⁹))
//│ in let cs⁴ = if polyEq⁰(tableEntry¹, [Unknown]) then checkComplete_lh_₄(_lh_f_arg1⁷, [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]) else tableEntry¹
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹] | _  => error⁰}: 2285
//│ 	case _lh_maxLevel_arg1⁶ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁶ _lh_maxLevel_LH_C_1⁶ => case _lh_maxLevel_LH_C_0⁶ of {Assign _lh_maxLevel_Assign_0⁶ _lh_maxLevel_Assign_1⁶ => _lh_maxLevel_Assign_0⁶ | _  => error⁰} | _  => error⁰}: 2334
//│ 	case _lh_maxLevel_arg1⁷ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁷ _lh_maxLevel_LH_C_1⁷ => case _lh_maxLevel_LH_C_0⁷ of {Assign _lh_maxLevel_Assign_0⁷ _lh_maxLevel_Assign_1⁷ => _lh_maxLevel_Assign_0⁷ | _  => error⁰} | _  => error⁰}: 2434
//│ 	case _lh_earliestInconsistency_arg2¹ of {LH_N  => (fun _lh_bt_arg1⁵ -> (fun s⁵ -> checkComplete_lh_₀(_lh_bt_arg1⁵, s⁵))) | LH_C _lh_earliestInconsistency_LH_C_0² _lh_earliestInconsistency_LH_C_1² => let _lh_matchIdent⁵ = filter_lh_₁((fun _lh_funcomp_x²⁵ -> not⁰(_lh_earliestInconsistency_CSP_2¹(_lh_earliestInconsistency_LH_C_0², _lh_funcomp_x²⁵))), reverse_lh_₀(_lh_earliestInconsistency_LH_C_1²))
//│ in case _lh_matchIdent⁵ of {LH_N  => (fun _lh_bt_arg1⁶ -> (fun s⁶ -> checkComplete_lh_₁(_lh_bt_arg1⁶, s⁶))) | LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => let _lh_bt_Just_0¹ = let _lh_bt_LH_P2_1¹ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ in let _lh_bt_LH_P2_0¹ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ in (fun _lh_bt_arg1⁷ -> (fun s⁷ -> _lh_bt_Just_0¹)) | _  => error⁰} | _  => error⁰}: 2664
//│ 	case _lh_earliestInconsistency_arg2² of {LH_N  => (fun _lh_bt_arg1⁸ -> (fun s⁸ -> checkComplete_lh_₅(_lh_bt_arg1⁸, s⁸))) | LH_C _lh_earliestInconsistency_LH_C_0⁴ _lh_earliestInconsistency_LH_C_1⁴ => let _lh_matchIdent⁶ = filter_lh_₄((fun _lh_funcomp_x²⁸ -> not⁰(_lh_earliestInconsistency_CSP_2²(_lh_earliestInconsistency_LH_C_0⁴, _lh_funcomp_x²⁸))), reverse_lh_₂(_lh_earliestInconsistency_LH_C_1⁴))
//│ in case _lh_matchIdent⁶ of {LH_N  => (fun _lh_bt_arg1⁹ -> (fun s⁹ -> checkComplete_lh_₆(_lh_bt_arg1⁹, s⁹))) | LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => let _lh_bt_Just_0² = let _lh_bt_LH_P2_1² = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ in let _lh_bt_LH_P2_0² = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ in [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]
//│ in (fun _lh_bt_arg1¹⁰ -> (fun s¹⁰ -> _lh_bt_Just_0²)) | _  => error⁰} | _  => error⁰}: 2878
//│ 	case ls³⁹ of {LH_C h⁴⁰ t⁴⁰ => reverse_helper_lh_₀(t⁴⁰, [LH_C h⁴⁰ a¹⁴]) | LH_N  => a¹⁴}: 3096
//│ 	case _lh_maxLevel_arg1⁸ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁸ _lh_maxLevel_LH_C_1⁸ => case _lh_maxLevel_LH_C_0⁸ of {Assign _lh_maxLevel_Assign_0⁸ _lh_maxLevel_Assign_1⁸ => _lh_maxLevel_Assign_0⁸ | _  => error⁰} | _  => error⁰}: 3140
//│ 	case _lh_maxLevel_arg1⁹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁹ _lh_maxLevel_LH_C_1⁹ => case _lh_maxLevel_LH_C_0⁹ of {Assign _lh_maxLevel_Assign_0⁹ _lh_maxLevel_Assign_1⁹ => _lh_maxLevel_Assign_0⁹ | _  => error⁰} | _  => error⁰}: 3161
//│ 	case _lh_maxLevel_arg1¹⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹⁰ _lh_maxLevel_LH_C_1¹⁰ => case _lh_maxLevel_LH_C_0¹⁰ of {Assign _lh_maxLevel_Assign_0¹⁰ _lh_maxLevel_Assign_1¹⁰ => _lh_maxLevel_Assign_0¹⁰ | _  => error⁰} | _  => error⁰}: 3170
//│ 	case _lh_earliestInconsistency_arg2³ of {LH_N  => (fun _lh_bt_arg1¹¹ -> (fun s¹¹ -> checkComplete_lh_₂(_lh_bt_arg1¹¹, s¹¹))) | LH_C _lh_earliestInconsistency_LH_C_0⁶ _lh_earliestInconsistency_LH_C_1⁶ => let _lh_matchIdent⁷ = filter_lh_₃((fun _lh_funcomp_x³¹ -> not⁰(_lh_earliestInconsistency_CSP_2³(_lh_earliestInconsistency_LH_C_0⁶, _lh_funcomp_x³¹))), reverse_lh_₁(_lh_earliestInconsistency_LH_C_1⁶))
//│ in case _lh_matchIdent⁷ of {LH_N  => (fun _lh_bt_arg1¹² -> (fun s¹² -> checkComplete_lh_₃(_lh_bt_arg1¹², s¹²))) | LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => let _lh_bt_Just_0³ = let _lh_bt_LH_P2_1³ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ in let _lh_bt_LH_P2_0³ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ in [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]
//│ in (fun _lh_bt_arg1¹³ -> (fun s¹³ -> _lh_bt_Just_0³)) | _  => error⁰} | _  => error⁰}: 3297
//│ 	case ls⁴¹ of {LH_C h⁴⁵ t⁴⁵ => reverse_helper_lh_₂(t⁴⁵, [LH_C h⁴⁵ a¹⁵]) | LH_N  => a¹⁵}: 3383
//│ 	case _lh_fillTable_arg1² of {LH_N  => _lh_fillTable_arg3² | LH_C _lh_fillTable_LH_C_0² _lh_fillTable_LH_C_1² => case _lh_fillTable_LH_C_0² of {Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1² => case _lh_fillTable_arg2² of {CSP _lh_fillTable_CSP_0² _lh_fillTable_CSP_1² _lh_fillTable_CSP_2² => let f⁴⁷ = (fun cs⁵ -> (fun varval² -> let _lh_matchIdent¹⁰ = varval²
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}))
//│ in zipWith_lh_₂(zipWith_lh_₃(f⁴⁷), _lh_fillTable_arg3², let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromTo_lh_₅((_lh_fillTable_Assign_0² + 1), _lh_fillTable_CSP_0²))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 3753
//│ 	case _lh_f_LH_P2_0¹⁰ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰] | LH_C _lh_f_LH_C_0² _lh_f_LH_C_1² => let tableEntry² = atIndex_lh_₁((value_lh_₁(_lh_f_LH_C_0²) - 1), head_lh_₂(_lh_f_LH_P2_1¹⁰))
//│ in let cs⁶ = if polyEq⁰(tableEntry², [Unknown]) then checkComplete_lh_₇(_lh_f_arg1⁸, [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]) else tableEntry²
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰] | _  => error⁰}: 3974
//│ 	case _lh_maxLevel_arg1¹² of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹² _lh_maxLevel_LH_C_1¹² => case _lh_maxLevel_LH_C_0¹² of {Assign _lh_maxLevel_Assign_0¹² _lh_maxLevel_Assign_1¹² => _lh_maxLevel_Assign_0¹² | _  => error⁰} | _  => error⁰}: 4007
//│ [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)]: 2692 --->
//│ 	case ls⁵⁰ of {LH_C h⁵⁴ t⁵⁴ => [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)] | LH_N  => [LH_N]}: 4171
//│ [LH_N]: 2693 --->
//│ 	case ls⁵⁰ of {LH_C h⁵⁴ t⁵⁴ => [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)] | LH_N  => [LH_N]}: 4171
//│ [LH_N]: 2704 --->
//│ 	case ls⁵⁰ of {LH_C h⁵⁴ t⁵⁴ => [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)] | LH_N  => [LH_N]}: 4171
//│ [LH_N]: 2710 --->
//│ 	DeadCodeCons
//│ 	case ls⁹ of {LH_C h¹⁰ t¹⁰ => reverse_helper_lh_₁(t¹⁰, [LH_C h¹⁰ a⁴]) | LH_N  => a⁴}: 1215
//│ 	case _lh_maxLevel_arg1¹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹ _lh_maxLevel_LH_C_1¹ => case _lh_maxLevel_LH_C_0¹ of {Assign _lh_maxLevel_Assign_0¹ _lh_maxLevel_Assign_1¹ => _lh_maxLevel_Assign_0¹ | _  => error⁰} | _  => error⁰}: 1317
//│ 	case _lh_maxLevel_arg1² of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0² _lh_maxLevel_LH_C_1² => case _lh_maxLevel_LH_C_0² of {Assign _lh_maxLevel_Assign_0² _lh_maxLevel_Assign_1² => _lh_maxLevel_Assign_0² | _  => error⁰} | _  => error⁰}: 1443
//│ 	case _lh_maxLevel_arg1³ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0³ _lh_maxLevel_LH_C_1³ => case _lh_maxLevel_LH_C_0³ of {Assign _lh_maxLevel_Assign_0³ _lh_maxLevel_Assign_1³ => _lh_maxLevel_Assign_0³ | _  => error⁰} | _  => error⁰}: 1473
//│ 	case _lh_fillTable_arg1¹ of {LH_N  => _lh_fillTable_arg3¹ | LH_C _lh_fillTable_LH_C_0¹ _lh_fillTable_LH_C_1¹ => case _lh_fillTable_LH_C_0¹ of {Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹ => case _lh_fillTable_arg2¹ of {CSP _lh_fillTable_CSP_0¹ _lh_fillTable_CSP_1¹ _lh_fillTable_CSP_2¹ => let f²³ = (fun cs³ -> (fun varval¹ -> let _lh_matchIdent⁴ = varval¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}))
//│ in zipWith_lh_₀(zipWith_lh_₁(f²³), _lh_fillTable_arg3¹, let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(enumFromTo_lh_₁((_lh_fillTable_Assign_0¹ + 1), _lh_fillTable_CSP_0¹))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1824
//│ 	case _lh_maxLevel_arg1⁵ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁵ _lh_maxLevel_LH_C_1⁵ => case _lh_maxLevel_LH_C_0⁵ of {Assign _lh_maxLevel_Assign_0⁵ _lh_maxLevel_Assign_1⁵ => _lh_maxLevel_Assign_0⁵ | _  => error⁰} | _  => error⁰}: 2107
//│ 	case _lh_f_LH_P2_0⁹ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹] | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => let tableEntry¹ = atIndex_lh_₀((value_lh_₀(_lh_f_LH_C_0¹) - 1), head_lh_₀(_lh_f_LH_P2_1⁹))
//│ in let cs⁴ = if polyEq⁰(tableEntry¹, [Unknown]) then checkComplete_lh_₄(_lh_f_arg1⁷, [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]) else tableEntry¹
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹] | _  => error⁰}: 2285
//│ 	case _lh_maxLevel_arg1⁶ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁶ _lh_maxLevel_LH_C_1⁶ => case _lh_maxLevel_LH_C_0⁶ of {Assign _lh_maxLevel_Assign_0⁶ _lh_maxLevel_Assign_1⁶ => _lh_maxLevel_Assign_0⁶ | _  => error⁰} | _  => error⁰}: 2334
//│ 	case _lh_maxLevel_arg1⁷ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁷ _lh_maxLevel_LH_C_1⁷ => case _lh_maxLevel_LH_C_0⁷ of {Assign _lh_maxLevel_Assign_0⁷ _lh_maxLevel_Assign_1⁷ => _lh_maxLevel_Assign_0⁷ | _  => error⁰} | _  => error⁰}: 2434
//│ 	case _lh_earliestInconsistency_arg2¹ of {LH_N  => (fun _lh_bt_arg1⁵ -> (fun s⁵ -> checkComplete_lh_₀(_lh_bt_arg1⁵, s⁵))) | LH_C _lh_earliestInconsistency_LH_C_0² _lh_earliestInconsistency_LH_C_1² => let _lh_matchIdent⁵ = filter_lh_₁((fun _lh_funcomp_x²⁵ -> not⁰(_lh_earliestInconsistency_CSP_2¹(_lh_earliestInconsistency_LH_C_0², _lh_funcomp_x²⁵))), reverse_lh_₀(_lh_earliestInconsistency_LH_C_1²))
//│ in case _lh_matchIdent⁵ of {LH_N  => (fun _lh_bt_arg1⁶ -> (fun s⁶ -> checkComplete_lh_₁(_lh_bt_arg1⁶, s⁶))) | LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => let _lh_bt_Just_0¹ = let _lh_bt_LH_P2_1¹ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ in let _lh_bt_LH_P2_0¹ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ in (fun _lh_bt_arg1⁷ -> (fun s⁷ -> _lh_bt_Just_0¹)) | _  => error⁰} | _  => error⁰}: 2664
//│ 	case _lh_earliestInconsistency_arg2² of {LH_N  => (fun _lh_bt_arg1⁸ -> (fun s⁸ -> checkComplete_lh_₅(_lh_bt_arg1⁸, s⁸))) | LH_C _lh_earliestInconsistency_LH_C_0⁴ _lh_earliestInconsistency_LH_C_1⁴ => let _lh_matchIdent⁶ = filter_lh_₄((fun _lh_funcomp_x²⁸ -> not⁰(_lh_earliestInconsistency_CSP_2²(_lh_earliestInconsistency_LH_C_0⁴, _lh_funcomp_x²⁸))), reverse_lh_₂(_lh_earliestInconsistency_LH_C_1⁴))
//│ in case _lh_matchIdent⁶ of {LH_N  => (fun _lh_bt_arg1⁹ -> (fun s⁹ -> checkComplete_lh_₆(_lh_bt_arg1⁹, s⁹))) | LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => let _lh_bt_Just_0² = let _lh_bt_LH_P2_1² = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ in let _lh_bt_LH_P2_0² = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ in [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]
//│ in (fun _lh_bt_arg1¹⁰ -> (fun s¹⁰ -> _lh_bt_Just_0²)) | _  => error⁰} | _  => error⁰}: 2878
//│ 	case ls³⁹ of {LH_C h⁴⁰ t⁴⁰ => reverse_helper_lh_₀(t⁴⁰, [LH_C h⁴⁰ a¹⁴]) | LH_N  => a¹⁴}: 3096
//│ 	case _lh_maxLevel_arg1⁸ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁸ _lh_maxLevel_LH_C_1⁸ => case _lh_maxLevel_LH_C_0⁸ of {Assign _lh_maxLevel_Assign_0⁸ _lh_maxLevel_Assign_1⁸ => _lh_maxLevel_Assign_0⁸ | _  => error⁰} | _  => error⁰}: 3140
//│ 	case _lh_maxLevel_arg1⁹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁹ _lh_maxLevel_LH_C_1⁹ => case _lh_maxLevel_LH_C_0⁹ of {Assign _lh_maxLevel_Assign_0⁹ _lh_maxLevel_Assign_1⁹ => _lh_maxLevel_Assign_0⁹ | _  => error⁰} | _  => error⁰}: 3161
//│ 	case _lh_maxLevel_arg1¹⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹⁰ _lh_maxLevel_LH_C_1¹⁰ => case _lh_maxLevel_LH_C_0¹⁰ of {Assign _lh_maxLevel_Assign_0¹⁰ _lh_maxLevel_Assign_1¹⁰ => _lh_maxLevel_Assign_0¹⁰ | _  => error⁰} | _  => error⁰}: 3170
//│ 	case _lh_earliestInconsistency_arg2³ of {LH_N  => (fun _lh_bt_arg1¹¹ -> (fun s¹¹ -> checkComplete_lh_₂(_lh_bt_arg1¹¹, s¹¹))) | LH_C _lh_earliestInconsistency_LH_C_0⁶ _lh_earliestInconsistency_LH_C_1⁶ => let _lh_matchIdent⁷ = filter_lh_₃((fun _lh_funcomp_x³¹ -> not⁰(_lh_earliestInconsistency_CSP_2³(_lh_earliestInconsistency_LH_C_0⁶, _lh_funcomp_x³¹))), reverse_lh_₁(_lh_earliestInconsistency_LH_C_1⁶))
//│ in case _lh_matchIdent⁷ of {LH_N  => (fun _lh_bt_arg1¹² -> (fun s¹² -> checkComplete_lh_₃(_lh_bt_arg1¹², s¹²))) | LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => let _lh_bt_Just_0³ = let _lh_bt_LH_P2_1³ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ in let _lh_bt_LH_P2_0³ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ in [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]
//│ in (fun _lh_bt_arg1¹³ -> (fun s¹³ -> _lh_bt_Just_0³)) | _  => error⁰} | _  => error⁰}: 3297
//│ 	case ls⁴¹ of {LH_C h⁴⁵ t⁴⁵ => reverse_helper_lh_₂(t⁴⁵, [LH_C h⁴⁵ a¹⁵]) | LH_N  => a¹⁵}: 3383
//│ 	case _lh_fillTable_arg1² of {LH_N  => _lh_fillTable_arg3² | LH_C _lh_fillTable_LH_C_0² _lh_fillTable_LH_C_1² => case _lh_fillTable_LH_C_0² of {Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1² => case _lh_fillTable_arg2² of {CSP _lh_fillTable_CSP_0² _lh_fillTable_CSP_1² _lh_fillTable_CSP_2² => let f⁴⁷ = (fun cs⁵ -> (fun varval² -> let _lh_matchIdent¹⁰ = varval²
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}))
//│ in zipWith_lh_₂(zipWith_lh_₃(f⁴⁷), _lh_fillTable_arg3², let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromTo_lh_₅((_lh_fillTable_Assign_0² + 1), _lh_fillTable_CSP_0²))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 3753
//│ 	case _lh_f_LH_P2_0¹⁰ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰] | LH_C _lh_f_LH_C_0² _lh_f_LH_C_1² => let tableEntry² = atIndex_lh_₁((value_lh_₁(_lh_f_LH_C_0²) - 1), head_lh_₂(_lh_f_LH_P2_1¹⁰))
//│ in let cs⁶ = if polyEq⁰(tableEntry², [Unknown]) then checkComplete_lh_₇(_lh_f_arg1⁸, [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]) else tableEntry²
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰] | _  => error⁰}: 3974
//│ 	case _lh_maxLevel_arg1¹² of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹² _lh_maxLevel_LH_C_1¹² => case _lh_maxLevel_LH_C_0¹² of {Assign _lh_maxLevel_Assign_0¹² _lh_maxLevel_Assign_1¹² => _lh_maxLevel_Assign_0¹² | _  => error⁰} | _  => error⁰}: 4007
//│ [LH_N]: 2717 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_nubBy_arg2² of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))] | _  => error⁰}: 3556
//│ [CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747 --->
//│ 	DeadCodeCons
//│ 	case _lh_domainWipeOut_arg1¹ of {CSP _lh_domainWipeOut_CSP_0¹ _lh_domainWipeOut_CSP_1¹ _lh_domainWipeOut_CSP_2¹ => let f²² = (fun _lh_f_arg1⁵ -> case _lh_f_arg1⁵ of {LH_P2 _lh_f_LH_P2_0⁶ _lh_f_LH_P2_1⁶ => case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰} | _  => error⁰})
//│ in mapTree_lh_₅(f²², _lh_domainWipeOut_arg2¹) | _  => error⁰}: 1730
//│ 	case _lh_fillTable_arg2¹ of {CSP _lh_fillTable_CSP_0¹ _lh_fillTable_CSP_1¹ _lh_fillTable_CSP_2¹ => let f²³ = (fun cs³ -> (fun varval¹ -> let _lh_matchIdent⁴ = varval¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}))
//│ in zipWith_lh_₀(zipWith_lh_₁(f²³), _lh_fillTable_arg3¹, let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(enumFromTo_lh_₁((_lh_fillTable_Assign_0¹ + 1), _lh_fillTable_CSP_0¹))) | _  => error⁰}: 1820
//│ 	case _lh_emptyTable_arg1¹ of {CSP _lh_emptyTable_CSP_0¹ _lh_emptyTable_CSP_1¹ _lh_emptyTable_CSP_2¹ => [LH_C [LH_N] let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹(enumFromTo_lh_₃(1, _lh_emptyTable_CSP_0¹))] | _  => error⁰}: 1884
//│ 	case _lh_emptyTable_arg1² of {CSP _lh_emptyTable_CSP_0² _lh_emptyTable_CSP_1² _lh_emptyTable_CSP_2² => [LH_C [LH_N] let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₇(1, _lh_emptyTable_CSP_0²))] | _  => error⁰}: 2473
//│ 	case _lh_complete_arg1¹ of {CSP _lh_complete_CSP_0¹ _lh_complete_CSP_1¹ _lh_complete_CSP_2¹ => (maxLevel_lh_₈(_lh_complete_arg2¹) == _lh_complete_CSP_0¹) | _  => error⁰}: 2484
//│ 	case _lh_earliestInconsistency_arg1¹ of {CSP _lh_earliestInconsistency_CSP_0¹ _lh_earliestInconsistency_CSP_1¹ _lh_earliestInconsistency_CSP_2¹ => case _lh_earliestInconsistency_arg2¹ of {LH_N  => (fun _lh_bt_arg1⁵ -> (fun s⁵ -> checkComplete_lh_₀(_lh_bt_arg1⁵, s⁵))) | LH_C _lh_earliestInconsistency_LH_C_0² _lh_earliestInconsistency_LH_C_1² => let _lh_matchIdent⁵ = filter_lh_₁((fun _lh_funcomp_x²⁵ -> not⁰(_lh_earliestInconsistency_CSP_2¹(_lh_earliestInconsistency_LH_C_0², _lh_funcomp_x²⁵))), reverse_lh_₀(_lh_earliestInconsistency_LH_C_1²))
//│ in case _lh_matchIdent⁵ of {LH_N  => (fun _lh_bt_arg1⁶ -> (fun s⁶ -> checkComplete_lh_₁(_lh_bt_arg1⁶, s⁶))) | LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => let _lh_bt_Just_0¹ = let _lh_bt_LH_P2_1¹ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ in let _lh_bt_LH_P2_0¹ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ in (fun _lh_bt_arg1⁷ -> (fun s⁷ -> _lh_bt_Just_0¹)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2666
//│ 	case _lh_mkTree_arg1¹ of {CSP _lh_mkTree_CSP_0¹ _lh_mkTree_CSP_1¹ _lh_mkTree_CSP_2¹ => let next¹ = (fun ss¹ -> if (maxLevel_lh_₁₀(ss¹) < _lh_mkTree_CSP_0¹) then let _lh_listcomp_fun¹³ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹³(enumFromTo_lh_₈(1, _lh_mkTree_CSP_1¹)) else [LH_N])
//│ in initTree_lh_₀(next¹, [LH_N]) | _  => error⁰}: 2714
//│ 	case _lh_earliestInconsistency_arg1² of {CSP _lh_earliestInconsistency_CSP_0² _lh_earliestInconsistency_CSP_1² _lh_earliestInconsistency_CSP_2² => case _lh_earliestInconsistency_arg2² of {LH_N  => (fun _lh_bt_arg1⁸ -> (fun s⁸ -> checkComplete_lh_₅(_lh_bt_arg1⁸, s⁸))) | LH_C _lh_earliestInconsistency_LH_C_0⁴ _lh_earliestInconsistency_LH_C_1⁴ => let _lh_matchIdent⁶ = filter_lh_₄((fun _lh_funcomp_x²⁸ -> not⁰(_lh_earliestInconsistency_CSP_2²(_lh_earliestInconsistency_LH_C_0⁴, _lh_funcomp_x²⁸))), reverse_lh_₂(_lh_earliestInconsistency_LH_C_1⁴))
//│ in case _lh_matchIdent⁶ of {LH_N  => (fun _lh_bt_arg1⁹ -> (fun s⁹ -> checkComplete_lh_₆(_lh_bt_arg1⁹, s⁹))) | LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => let _lh_bt_Just_0² = let _lh_bt_LH_P2_1² = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ in let _lh_bt_LH_P2_0² = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ in [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]
//│ in (fun _lh_bt_arg1¹⁰ -> (fun s¹⁰ -> _lh_bt_Just_0²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2880
//│ 	case _lh_complete_arg1² of {CSP _lh_complete_CSP_0² _lh_complete_CSP_1² _lh_complete_CSP_2² => (maxLevel_lh_₁(_lh_complete_arg2²) == _lh_complete_CSP_0²) | _  => error⁰}: 3051
//│ 	case _lh_complete_arg1³ of {CSP _lh_complete_CSP_0³ _lh_complete_CSP_1³ _lh_complete_CSP_2³ => (maxLevel_lh_₇(_lh_complete_arg2³) == _lh_complete_CSP_0³) | _  => error⁰}: 3151
//│ 	case _lh_earliestInconsistency_arg1³ of {CSP _lh_earliestInconsistency_CSP_0³ _lh_earliestInconsistency_CSP_1³ _lh_earliestInconsistency_CSP_2³ => case _lh_earliestInconsistency_arg2³ of {LH_N  => (fun _lh_bt_arg1¹¹ -> (fun s¹¹ -> checkComplete_lh_₂(_lh_bt_arg1¹¹, s¹¹))) | LH_C _lh_earliestInconsistency_LH_C_0⁶ _lh_earliestInconsistency_LH_C_1⁶ => let _lh_matchIdent⁷ = filter_lh_₃((fun _lh_funcomp_x³¹ -> not⁰(_lh_earliestInconsistency_CSP_2³(_lh_earliestInconsistency_LH_C_0⁶, _lh_funcomp_x³¹))), reverse_lh_₁(_lh_earliestInconsistency_LH_C_1⁶))
//│ in case _lh_matchIdent⁷ of {LH_N  => (fun _lh_bt_arg1¹² -> (fun s¹² -> checkComplete_lh_₃(_lh_bt_arg1¹², s¹²))) | LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => let _lh_bt_Just_0³ = let _lh_bt_LH_P2_1³ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ in let _lh_bt_LH_P2_0³ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ in [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]
//│ in (fun _lh_bt_arg1¹³ -> (fun s¹³ -> _lh_bt_Just_0³)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 3299
//│ 	case _lh_complete_arg1⁴ of {CSP _lh_complete_CSP_0⁴ _lh_complete_CSP_1⁴ _lh_complete_CSP_2⁴ => (maxLevel_lh_₉(_lh_complete_arg2⁴) == _lh_complete_CSP_0⁴) | _  => error⁰}: 3532
//│ 	case _lh_fillTable_arg2² of {CSP _lh_fillTable_CSP_0² _lh_fillTable_CSP_1² _lh_fillTable_CSP_2² => let f⁴⁷ = (fun cs⁵ -> (fun varval² -> let _lh_matchIdent¹⁰ = varval²
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}))
//│ in zipWith_lh_₂(zipWith_lh_₃(f⁴⁷), _lh_fillTable_arg3², let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromTo_lh_₅((_lh_fillTable_Assign_0² + 1), _lh_fillTable_CSP_0²))) | _  => error⁰}: 3749
//│ 	case _lh_complete_arg1⁵ of {CSP _lh_complete_CSP_0⁵ _lh_complete_CSP_1⁵ _lh_complete_CSP_2⁵ => (maxLevel_lh_₂(_lh_complete_arg2⁵) == _lh_complete_CSP_0⁵) | _  => error⁰}: 3856
//│ 	case _lh_complete_arg1⁶ of {CSP _lh_complete_CSP_0⁶ _lh_complete_CSP_1⁶ _lh_complete_CSP_2⁶ => (maxLevel_lh_₅(_lh_complete_arg2⁶) == _lh_complete_CSP_0⁶) | _  => error⁰}: 4030
//│ 	case _lh_complete_arg1⁷ of {CSP _lh_complete_CSP_0⁷ _lh_complete_CSP_1⁷ _lh_complete_CSP_2⁷ => (maxLevel_lh_₆(_lh_complete_arg2⁷) == _lh_complete_CSP_0⁷) | _  => error⁰}: 4098
//│ 	case _lh_complete_arg1⁸ of {CSP _lh_complete_CSP_0⁸ _lh_complete_CSP_1⁸ _lh_complete_CSP_2⁸ => (maxLevel_lh_₄(_lh_complete_arg2⁸) == _lh_complete_CSP_0⁸) | _  => error⁰}: 4202
//│ [LH_C h³² mappend_lh_₀(t³², ys³)]: 2756 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case ls²⁷ of {LH_C h²⁸ t²⁸ => if f³²(h²⁸) then [LH_C h²⁸ filter_lh_₀(f³², t²⁸)] else filter_lh_₀(f³², t²⁸) | LH_N  => [LH_N]}: 2238
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ 	case _lh_nubBy_arg2³ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))] | _  => error⁰}: 4136
//│ [LH_C f³⁵(h³³) map_lh_₉(f³⁵, t³³)]: 2770 --->
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ [LH_N]: 2771 --->
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ [LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)]: 2784 --->
//│ 	case ls³⁶ of {LH_C h³⁸ t³⁸ => [LH_C f³⁹(h³⁸) map_lh_₁₁(f³⁹, t³⁸)] | LH_N  => [LH_N]}: 2962
//│ [LH_N]: 2785 --->
//│ 	case ls³⁶ of {LH_C h³⁸ t³⁸ => [LH_C f³⁹(h³⁸) map_lh_₁₁(f³⁹, t³⁸)] | LH_N  => [LH_N]}: 2962
//│ [LH_C f³⁷(h³⁵) map_lh_₅(f³⁷, t³⁵)]: 2798 --->
//│ 	case ls⁴⁴ of {LH_C h⁴⁸ t⁴⁸ => [LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)] | LH_N  => [LH_N]}: 3778
//│ [LH_N]: 2799 --->
//│ 	case ls⁴⁴ of {LH_C h⁴⁸ t⁴⁸ => [LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)] | LH_N  => [LH_N]}: 3778
//│ [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]: 2866 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]: 2867 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)]: 2935 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹³ t¹³ => [LH_C f¹³(h¹³) map_lh_₁(f¹³, t¹³)] | LH_N  => [LH_N]}: 1293
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ [LH_N]: 2936 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹³ t¹³ => [LH_C f¹³(h¹³) map_lh_₁(f¹³, t¹³)] | LH_N  => [LH_N]}: 1293
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ [LH_C f³⁹(h³⁸) map_lh_₁₁(f³⁹, t³⁸)]: 2960 --->
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ [LH_N]: 2961 --->
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ [LH_N]: 2966 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_nubBy_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))] | _  => error⁰}: 2986
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_deleteBy_arg3² of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0² _lh_deleteBy_LH_C_1² => if _lh_deleteBy_arg1²(_lh_deleteBy_arg2², _lh_deleteBy_LH_C_0²) then _lh_deleteBy_LH_C_1² else [LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)] | _  => error⁰}: 3578
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ 	case ls⁴⁹ of {LH_C h⁵³ t⁵³ => if f⁵²(h⁵³) then [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)] else filter_lh_₂(f⁵², t⁵³) | LH_N  => [LH_N]}: 4157
//│ [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]: 2984 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_nubBy_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))] | _  => error⁰}: 2986
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_deleteBy_arg3² of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0² _lh_deleteBy_LH_C_1² => if _lh_deleteBy_arg1²(_lh_deleteBy_arg2², _lh_deleteBy_LH_C_0²) then _lh_deleteBy_LH_C_1² else [LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)] | _  => error⁰}: 3578
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ 	case ls⁴⁹ of {LH_C h⁵³ t⁵³ => if f⁵²(h⁵³) then [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)] else filter_lh_₂(f⁵², t⁵³) | LH_N  => [LH_N]}: 4157
//│ [LH_N]: 2994 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ [Known [LH_N]]: 2995 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [Unknown]: 2996 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_C h³⁹ filter_lh_₄(f⁴⁰, t³⁹)]: 3010 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁶ of {LH_N  => (fun _lh_bt_arg1⁹ -> (fun s⁹ -> checkComplete_lh_₆(_lh_bt_arg1⁹, s⁹))) | LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => let _lh_bt_Just_0² = let _lh_bt_LH_P2_1² = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ in let _lh_bt_LH_P2_0² = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ in [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]
//│ in (fun _lh_bt_arg1¹⁰ -> (fun s¹⁰ -> _lh_bt_Just_0²)) | _  => error⁰}: 2875
//│ [LH_N]: 3017 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁶ of {LH_N  => (fun _lh_bt_arg1⁹ -> (fun s⁹ -> checkComplete_lh_₆(_lh_bt_arg1⁹, s⁹))) | LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => let _lh_bt_Just_0² = let _lh_bt_LH_P2_1² = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ in let _lh_bt_LH_P2_0² = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ in [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]
//│ in (fun _lh_bt_arg1¹⁰ -> (fun s¹⁰ -> _lh_bt_Just_0²)) | _  => error⁰}: 2875
//│ [LH_N]: 3024 --->
//│ 	case ls³⁷ of {LH_C h³⁹ t³⁹ => if f⁴⁰(h³⁹) then [LH_C h³⁹ filter_lh_₄(f⁴⁰, t³⁹)] else filter_lh_₄(f⁴⁰, t³⁹) | LH_N  => [LH_N]}: 3018
//│ [LH_C a¹³ enumFromTo_lh_₆((a¹³ + 1), b¹⁰)]: 3082 --->
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]}: 2446
//│ [LH_N]: 3083 --->
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]}: 2446
//│ [LH_C h⁴⁰ a¹⁴]: 3093 --->
//│ 	case ls¹⁵ of {LH_C h¹⁶ t¹⁶ => if f¹⁷(h¹⁶) then [LH_C h¹⁶ filter_lh_₁(f¹⁷, t¹⁶)] else filter_lh_₁(f¹⁷, t¹⁶) | LH_N  => [LH_N]}: 1463
//│ [LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)]: 3106 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁷ of {LH_C h¹⁸ t¹⁸ => if f¹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)] else filter_lh_₅(f¹⁹, t¹⁸) | LH_N  => [LH_N]}: 1510
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_nubBy_arg2² of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))] | _  => error⁰}: 3556
//│ [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)]: 3125 --->
//│ 	DeadCodeCons
//│ 	case ls³⁴ of {LH_C h³⁶ t³⁶ => h³⁶ | LH_N  => error⁰}: 2886
//│ 	case xs⁵ of {LH_C hx² tx² => case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3129
//│ 	case ls⁴³ of {LH_C h⁴⁷ t⁴⁷ => t⁴⁷ | LH_N  => error⁰}: 3765
//│ [LH_N]: 3126 --->
//│ 	DeadCodeCons
//│ 	case ls³⁴ of {LH_C h³⁶ t³⁶ => h³⁶ | LH_N  => error⁰}: 2886
//│ 	case xs⁵ of {LH_C hx² tx² => case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3129
//│ 	case ls⁴³ of {LH_C h⁴⁷ t⁴⁷ => t⁴⁷ | LH_N  => error⁰}: 3765
//│ [LH_N]: 3128 --->
//│ 	DeadCodeCons
//│ 	case ls³⁴ of {LH_C h³⁶ t³⁶ => h³⁶ | LH_N  => error⁰}: 2886
//│ 	case xs⁵ of {LH_C hx² tx² => case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3129
//│ 	case ls⁴³ of {LH_C h⁴⁷ t⁴⁷ => t⁴⁷ | LH_N  => error⁰}: 3765
//│ [LH_N]: 3214 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ [Known [LH_N]]: 3215 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [Unknown]: 3216 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_N]: 3283 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ [LH_C _lh_bt_LH_P2_1³ [LH_N]]: 3284 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]: 3285 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]: 3286 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)]: 3316 --->
//│ 	DeadCodeCons
//│ 	case ls⁴⁰ of {LH_C h⁴² t⁴² => if (n² == 0) then h⁴² else atIndex_lh_₀((n² - 1), t⁴²) | LH_N  => error⁰}: 3205
//│ 	case xs⁶ of {LH_C hx³ tx³ => case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3320
//│ [LH_N]: 3317 --->
//│ 	DeadCodeCons
//│ 	case ls⁴⁰ of {LH_C h⁴² t⁴² => if (n² == 0) then h⁴² else atIndex_lh_₀((n² - 1), t⁴²) | LH_N  => error⁰}: 3205
//│ 	case xs⁶ of {LH_C hx³ tx³ => case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3320
//│ [LH_N]: 3319 --->
//│ 	DeadCodeCons
//│ 	case ls⁴⁰ of {LH_C h⁴² t⁴² => if (n² == 0) then h⁴² else atIndex_lh_₀((n² - 1), t⁴²) | LH_N  => error⁰}: 3205
//│ 	case xs⁶ of {LH_C hx³ tx³ => case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3320
//│ [LH_N]: 3337 --->
//│ 	case ls²⁶ of {LH_C h²⁷ t²⁷ => if f³¹(h²⁷) then [LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)] else filter_lh_₆(f³¹, t²⁷) | LH_N  => [LH_N]}: 2149
//│ 	case xs⁷ of {LH_C h⁴⁴ t⁴⁴ => [LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys⁷)] | LH_N  => ys⁷}: 3349
//│ [LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys⁷)]: 3347 --->
//│ 	case ls²⁶ of {LH_C h²⁷ t²⁷ => if f³¹(h²⁷) then [LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)] else filter_lh_₆(f³¹, t²⁷) | LH_N  => [LH_N]}: 2149
//│ 	case xs⁷ of {LH_C h⁴⁴ t⁴⁴ => [LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys⁷)] | LH_N  => ys⁷}: 3349
//│ [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)]: 3366 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]}: 1696
//│ 	case ls²¹ of {LH_C h²² t²² => t²² | LH_N  => error⁰}: 1968
//│ 	case ls²³ of {LH_C h²⁴ t²⁴ => h²⁴ | LH_N  => error⁰}: 2064
//│ 	case xs⁸ of {LH_C hx⁴ tx⁴ => case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3370
//│ [LH_N]: 3367 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]}: 1696
//│ 	case ls²¹ of {LH_C h²² t²² => t²² | LH_N  => error⁰}: 1968
//│ 	case ls²³ of {LH_C h²⁴ t²⁴ => h²⁴ | LH_N  => error⁰}: 2064
//│ 	case xs⁸ of {LH_C hx⁴ tx⁴ => case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3370
//│ [LH_N]: 3369 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]}: 1696
//│ 	case ls²¹ of {LH_C h²² t²² => t²² | LH_N  => error⁰}: 1968
//│ 	case ls²³ of {LH_C h²⁴ t²⁴ => h²⁴ | LH_N  => error⁰}: 2064
//│ 	case xs⁸ of {LH_C hx⁴ tx⁴ => case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3370
//│ [LH_C h⁴⁵ a¹⁵]: 3380 --->
//│ 	case ls³⁷ of {LH_C h³⁹ t³⁹ => if f⁴⁰(h³⁹) then [LH_C h³⁹ filter_lh_₄(f⁴⁰, t³⁹)] else filter_lh_₄(f⁴⁰, t³⁹) | LH_N  => [LH_N]}: 3018
//│ [LH_N]: 3401 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C fc_lh_₀ [LH_N]]: 3402 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]: 3403 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]: 3404 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C bm_lh_₀ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]]: 3405 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C bt_lh_₂ [LH_C bm_lh_₀ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]]]: 3406 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_P2 s¹⁴ let _lh_matchIdent⁸ = earliestInconsistency_lh_₀(_lh_bt_arg1¹⁴, s¹⁴)
//│ in _lh_matchIdent⁸(_lh_bt_arg1¹⁴, s¹⁴)]: 3421 --->
//│ 	case _lh_f_arg1⁴ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰} | _  => error⁰}: 1633
//│ [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)]: 3446 --->
//│ 	case ls²² of {LH_C h²³ t²³ => if f²⁷(h²³) then [LH_C h²³ filter_lh_₇(f²⁷, t²³)] else filter_lh_₇(f²⁷, t²³) | LH_N  => [LH_N]}: 2010
//│ [LH_N]: 3447 --->
//│ 	case ls²² of {LH_C h²³ t²³ => if f²⁷(h²³) then [LH_C h²³ filter_lh_₇(f²⁷, t²³)] else filter_lh_₇(f²⁷, t²³) | LH_N  => [LH_N]}: 2010
//│ [LH_P2 s¹⁵ let _lh_matchIdent⁹ = earliestInconsistency_lh_₁(_lh_bt_arg1¹⁵, s¹⁵)
//│ in _lh_matchIdent⁹(_lh_bt_arg1¹⁵, s¹⁵)]: 3463 --->
//│ 	case _lh_f_arg1⁶ of {LH_P2 _lh_f_LH_P2_0⁸ _lh_f_LH_P2_1⁸ => case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰} | _  => error⁰}: 2038
//│ [Node _lh_initTree_arg2¹ map_lh_₁₆(initTree_lh_₀(_lh_initTree_arg1¹), _lh_initTree_arg1¹(_lh_initTree_arg2¹))]: 3480 --->
//│ 	case _lh_cacheChecks_arg3¹ of {Node _lh_cacheChecks_Node_0¹ _lh_cacheChecks_Node_1¹ => [Node [LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹] map_lh_₁₀(cacheChecks_lh_₁(_lh_cacheChecks_arg1¹, fillTable_lh_₁(_lh_cacheChecks_Node_0¹, _lh_cacheChecks_arg1¹, tail_lh_₁(_lh_cacheChecks_arg2¹))), _lh_cacheChecks_Node_1¹)] | _  => error⁰}: 1673
//│ 	case _lh_cacheChecks_arg3² of {Node _lh_cacheChecks_Node_0² _lh_cacheChecks_Node_1² => [Node [LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²] map_lh_₆(cacheChecks_lh_₀(_lh_cacheChecks_arg1², fillTable_lh_₀(_lh_cacheChecks_Node_0², _lh_cacheChecks_arg1², tail_lh_₀(_lh_cacheChecks_arg2²))), _lh_cacheChecks_Node_1²)] | _  => error⁰}: 2175
//│ 	case _lh_mapTree_arg2³ of {Node _lh_mapTree_Node_0³ _lh_mapTree_Node_1³ => [Node _lh_mapTree_arg1³(_lh_mapTree_Node_0³) map_lh_₂(mapTree_lh_₀(_lh_mapTree_arg1³), _lh_mapTree_Node_1³)] | _  => error⁰}: 2419
//│ 	case _lh_mapTree_arg2⁴ of {Node _lh_mapTree_Node_0⁴ _lh_mapTree_Node_1⁴ => [Node _lh_mapTree_arg1⁴(_lh_mapTree_Node_0⁴) map_lh_₉(mapTree_lh_₄(_lh_mapTree_arg1⁴), _lh_mapTree_Node_1⁴)] | _  => error⁰}: 3520
//│ 	case _lh_mapTree_arg2⁵ of {Node _lh_mapTree_Node_0⁵ _lh_mapTree_Node_1⁵ => [Node _lh_mapTree_arg1⁵(_lh_mapTree_Node_0⁵) map_lh_₅(mapTree_lh_₁(_lh_mapTree_arg1⁵), _lh_mapTree_Node_1⁵)] | _  => error⁰}: 3659
//│ [Node _lh_mapTree_arg1⁴(_lh_mapTree_Node_0⁴) map_lh_₉(mapTree_lh_₄(_lh_mapTree_arg1⁴), _lh_mapTree_Node_1⁴)]: 3518 --->
//│ 	case _lh_foldTree_arg2² of {Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²)) | _  => error⁰}: 2923
//│ [LH_N]: 3536 --->
//│ 	DeadCodeCons
//│ 	case _lh_deleteBy_arg3¹ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0¹ _lh_deleteBy_LH_C_1¹ => if _lh_deleteBy_arg1¹(_lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_0¹) then _lh_deleteBy_LH_C_1¹ else [LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)] | _  => error⁰}: 1375
//│ 	case ls¹⁷ of {LH_C h¹⁸ t¹⁸ => if f¹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)] else filter_lh_₅(f¹⁹, t¹⁸) | LH_N  => [LH_N]}: 1510
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_nubBy_arg2² of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))] | _  => error⁰}: 3556
//│ [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))]: 3554 --->
//│ 	DeadCodeCons
//│ 	case _lh_deleteBy_arg3¹ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0¹ _lh_deleteBy_LH_C_1¹ => if _lh_deleteBy_arg1¹(_lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_0¹) then _lh_deleteBy_LH_C_1¹ else [LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)] | _  => error⁰}: 1375
//│ 	case ls¹⁷ of {LH_C h¹⁸ t¹⁸ => if f¹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)] else filter_lh_₅(f¹⁹, t¹⁸) | LH_N  => [LH_N]}: 1510
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_nubBy_arg2² of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))] | _  => error⁰}: 3556
//│ [LH_N]: 3560 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_nubBy_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))] | _  => error⁰}: 2986
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_deleteBy_arg3² of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0² _lh_deleteBy_LH_C_1² => if _lh_deleteBy_arg1²(_lh_deleteBy_arg2², _lh_deleteBy_LH_C_0²) then _lh_deleteBy_LH_C_1² else [LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)] | _  => error⁰}: 3578
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ 	case ls⁴⁹ of {LH_C h⁵³ t⁵³ => if f⁵²(h⁵³) then [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)] else filter_lh_₂(f⁵², t⁵³) | LH_N  => [LH_N]}: 4157
//│ [LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]: 3575 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_nubBy_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))] | _  => error⁰}: 2986
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_deleteBy_arg3² of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0² _lh_deleteBy_LH_C_1² => if _lh_deleteBy_arg1²(_lh_deleteBy_arg2², _lh_deleteBy_LH_C_0²) then _lh_deleteBy_LH_C_1² else [LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)] | _  => error⁰}: 3578
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ 	case ls⁴⁹ of {LH_C h⁵³ t⁵³ => if f⁵²(h⁵³) then [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)] else filter_lh_₂(f⁵², t⁵³) | LH_N  => [LH_N]}: 4157
//│ [LH_C a¹⁶ enumFromTo_lh_₃((a¹⁶ + 1), b¹¹)]: 3597 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]}: 1872
//│ [LH_N]: 3598 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]}: 1872
//│ [LH_N]: 3607 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ [Known [LH_N]]: 3608 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ [Unknown]: 3609 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ [Node _lh_mapTree_arg1⁵(_lh_mapTree_Node_0⁵) map_lh_₅(mapTree_lh_₁(_lh_mapTree_arg1⁵), _lh_mapTree_Node_1⁵)]: 3657 --->
//│ 	case _lh_foldTree_arg2¹ of {Node _lh_foldTree_Node_0¹ _lh_foldTree_Node_1¹ => _lh_foldTree_arg1¹(_lh_foldTree_Node_0¹, map_lh_₃(foldTree_lh_₁(_lh_foldTree_arg1¹), _lh_foldTree_Node_1¹)) | _  => error⁰}: 2324
//│ [Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²]: 3679 --->
//│ 	case _lh_safe_arg1¹ of {Assign _lh_safe_Assign_0² _lh_safe_Assign_1² => case _lh_safe_arg2¹ of {Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³)))) | _  => error⁰} | _  => error⁰}: 3643
//│ [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]: 3683 --->
//│ 	case _lh_safe_arg2¹ of {Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³)))) | _  => error⁰}: 3641
//│ [LH_N]: 3689 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case ls²⁵ of {LH_C h²⁶ t²⁶ => foldl_lh_₂(f³⁰, f³⁰(i³, h²⁶), t²⁶) | LH_N  => i³}: 2122
//│ 	case xs⁴ of {LH_C h⁴¹ t⁴¹ => [LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)] | LH_N  => ys⁴}: 3108
//│ [LH_C _lh_fillTable_LH_P2_0² [LH_N]]: 3690 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls²⁵ of {LH_C h²⁶ t²⁶ => foldl_lh_₂(f³⁰, f³⁰(i³, h²⁶), t²⁶) | LH_N  => i³}: 2122
//│ 	case xs⁴ of {LH_C h⁴¹ t⁴¹ => [LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)] | LH_N  => ys⁴}: 3108
//│ [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]: 3691 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case ls²⁵ of {LH_C h²⁶ t²⁶ => foldl_lh_₂(f³⁰, f³⁰(i³, h²⁶), t²⁶) | LH_N  => i³}: 2122
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case xs⁴ of {LH_C h⁴¹ t⁴¹ => [LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)] | LH_N  => ys⁴}: 3108
//│ 	case _lh_knownConflict_Known_0² of {LH_C _lh_knownConflict_LH_C_0² _lh_knownConflict_LH_C_1² => [True] | _  => [False]}: 3224
//│ [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]]: 3692 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰}: 2727
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ 	case _lh_knownConflict_arg1² of {Known _lh_knownConflict_Known_0² => case _lh_knownConflict_Known_0² of {LH_C _lh_knownConflict_LH_C_0² _lh_knownConflict_LH_C_1² => [True] | _  => [False]} | _  => [False]}: 3226
//│ [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵]: 3711 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}: 3696
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)]: 3715 --->
//│ 	case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]}: 1986
//│ [LH_N]: 3716 --->
//│ 	case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]}: 1986
//│ [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)]: 3730 --->
//│ 	case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 3368
//│ [LH_N]: 3731 --->
//│ 	case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 3368
//│ [LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)]: 3776 --->
//│ 	DeadCodeCons
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ 	case ls⁴⁸ of {LH_C h⁵² t⁵² => [LH_C f⁵¹(h⁵²) map_lh_₄(f⁵¹, t⁵²)] | LH_N  => [LH_N]}: 4112
//│ [LH_N]: 3777 --->
//│ 	DeadCodeCons
//│ 	case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448
//│ 	case ls⁴⁸ of {LH_C h⁵² t⁵² => [LH_C f⁵¹(h⁵²) map_lh_₄(f⁵¹, t⁵²)] | LH_N  => [LH_N]}: 4112
//│ [LH_N]: 3793 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case ls²⁷ of {LH_C h²⁸ t²⁸ => if f³²(h²⁸) then [LH_C h²⁸ filter_lh_₀(f³², t²⁸)] else filter_lh_₀(f³², t²⁸) | LH_N  => [LH_N]}: 2238
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_deleteBy_arg3³ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0³ _lh_deleteBy_LH_C_1³ => if _lh_deleteBy_arg1³(_lh_deleteBy_arg2³, _lh_deleteBy_LH_C_0³) then _lh_deleteBy_LH_C_1³ else [LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)] | _  => error⁰}: 3811
//│ 	case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ 	case _lh_nubBy_arg2³ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))] | _  => error⁰}: 4136
//│ [LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case ls²⁷ of {LH_C h²⁸ t²⁸ => if f³²(h²⁸) then [LH_C h²⁸ filter_lh_₀(f³², t²⁸)] else filter_lh_₀(f³², t²⁸) | LH_N  => [LH_N]}: 2238
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_deleteBy_arg3³ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0³ _lh_deleteBy_LH_C_1³ => if _lh_deleteBy_arg1³(_lh_deleteBy_arg2³, _lh_deleteBy_LH_C_0³) then _lh_deleteBy_LH_C_1³ else [LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)] | _  => error⁰}: 3811
//│ 	case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ 	case _lh_nubBy_arg2³ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))] | _  => error⁰}: 4136
//│ [LH_N]: 3823 --->
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => if f¹⁵(h¹⁵) then [LH_C h¹⁵ filter_lh_₃(f¹⁵, t¹⁵)] else filter_lh_₃(f¹⁵, t¹⁵) | LH_N  => [LH_N]}: 1337
//│ [Node _lh_mapTree_arg1⁶(_lh_mapTree_Node_0⁶) map_lh_₁₁(mapTree_lh_₅(_lh_mapTree_arg1⁶), _lh_mapTree_Node_1⁶)]: 3837 --->
//│ 	case _lh_foldTree_arg2² of {Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²)) | _  => error⁰}: 2923
//│ [LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)]: 3876 --->
//│ 	case ls²⁸ of {LH_C h²⁹ t²⁹ => (1 + length_lh_₀(t²⁹)) | LH_N  => 0}: 2309
//│ [LH_N]: 3877 --->
//│ 	case ls²⁸ of {LH_C h²⁹ t²⁹ => (1 + length_lh_₀(t²⁹)) | LH_N  => 0}: 2309
//│ [Unknown]: 3933 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_P2 [LH_N] [Unknown]]: 3934 --->
//│ 	case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰}: 1719
//│ [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰]: 3936 --->
//│ 	case _lh_f_arg1⁵ of {LH_P2 _lh_f_LH_P2_0⁶ _lh_f_LH_P2_1⁶ => case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰} | _  => error⁰}: 1721
//│ [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]: 3960 --->
//│ 	case _lh_maxLevel_arg1⁴ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁴ _lh_maxLevel_LH_C_1⁴ => case _lh_maxLevel_LH_C_0⁴ of {Assign _lh_maxLevel_Assign_0⁴ _lh_maxLevel_Assign_1⁴ => _lh_maxLevel_Assign_0⁴ | _  => error⁰} | _  => error⁰}: 1648
//│ [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶]: 3968 --->
//│ 	case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰}: 1719
//│ [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰]: 3970 --->
//│ 	case _lh_f_arg1⁵ of {LH_P2 _lh_f_LH_P2_0⁶ _lh_f_LH_P2_1⁶ => case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰} | _  => error⁰}: 1721
//│ [LH_N]: 3994 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ [Known [LH_N]]: 3995 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [Unknown]: 3996 --->
//│ 	DeadCodeCons
//│ 	case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551
//│ 	case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065
//│ [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)]: 4016 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_nubBy_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))] | _  => error⁰}: 2986
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ 	case ls⁴⁹ of {LH_C h⁵³ t⁵³ => if f⁵²(h⁵³) then [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)] else filter_lh_₂(f⁵², t⁵³) | LH_N  => [LH_N]}: 4157
//│ [LH_C a¹⁷ enumFromTo_lh_₇((a¹⁷ + 1), b¹²)]: 4053 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 2461
//│ [LH_N]: 4054 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 2461
//│ [Node _lh_mapTree_arg1⁷(_lh_mapTree_Node_0⁷) map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1⁷), _lh_mapTree_Node_1⁷)]: 4069 --->
//│ 	case _lh_mapTree_arg2¹ of {Node _lh_mapTree_Node_0¹ _lh_mapTree_Node_1¹ => [Node _lh_mapTree_arg1¹(_lh_mapTree_Node_0¹) map_lh_₈(mapTree_lh_₃(_lh_mapTree_arg1¹), _lh_mapTree_Node_1¹)] | _  => error⁰}: 1353
//│ [LH_C f⁵¹(h⁵²) map_lh_₄(f⁵¹, t⁵²)]: 4110 --->
//│ 	case _lh_combine_arg1² of {LH_N  => _lh_combine_arg2² | LH_C _lh_combine_LH_C_0² _lh_combine_LH_C_1² => case _lh_combine_LH_C_0² of {LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2608
//│ [LH_N]: 4111 --->
//│ 	case _lh_combine_arg1² of {LH_N  => _lh_combine_arg2² | LH_C _lh_combine_LH_C_0² _lh_combine_LH_C_1² => case _lh_combine_LH_C_0² of {LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2608
//│ [LH_N]: 4116 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case ls²⁷ of {LH_C h²⁸ t²⁸ => if f³²(h²⁸) then [LH_C h²⁸ filter_lh_₀(f³², t²⁸)] else filter_lh_₀(f³², t²⁸) | LH_N  => [LH_N]}: 2238
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_deleteBy_arg3³ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0³ _lh_deleteBy_LH_C_1³ => if _lh_deleteBy_arg1³(_lh_deleteBy_arg2³, _lh_deleteBy_LH_C_0³) then _lh_deleteBy_LH_C_1³ else [LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)] | _  => error⁰}: 3811
//│ 	case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ 	case _lh_nubBy_arg2³ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))] | _  => error⁰}: 4136
//│ [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134 --->
//│ 	DeadCodeCons
//│ 	case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488
//│ 	case ls²⁷ of {LH_C h²⁸ t²⁸ => if f³²(h²⁸) then [LH_C h²⁸ filter_lh_₀(f³², t²⁸)] else filter_lh_₀(f³², t²⁸) | LH_N  => [LH_N]}: 2238
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case _lh_deleteBy_arg3³ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0³ _lh_deleteBy_LH_C_1³ => if _lh_deleteBy_arg1³(_lh_deleteBy_arg2³, _lh_deleteBy_LH_C_0³) then _lh_deleteBy_LH_C_1³ else [LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)] | _  => error⁰}: 3811
//│ 	case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885
//│ 	case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922
//│ 	case _lh_nubBy_arg2³ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))] | _  => error⁰}: 4136
//│ [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)]: 4149 --->
//│ 	case _lh_nubBy_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))] | _  => error⁰}: 2986
//│ 	case ls⁴⁹ of {LH_C h⁵³ t⁵³ => if f⁵²(h⁵³) then [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)] else filter_lh_₂(f⁵², t⁵³) | LH_N  => [LH_N]}: 4157
//│ [LH_N]: 4156 --->
//│ 	case _lh_nubBy_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))] | _  => error⁰}: 2986
//│ 	case ls⁴⁹ of {LH_C h⁵³ t⁵³ => if f⁵²(h⁵³) then [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)] else filter_lh_₂(f⁵², t⁵³) | LH_N  => [LH_N]}: 4157
//│ [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)]: 4169 --->
//│ 	case ls¹⁸ of {LH_C h¹⁹ t¹⁹ => [LH_C f²⁰(h¹⁹) map_lh_₆(f²⁰, t¹⁹)] | LH_N  => [LH_N]}: 1594
//│ 	case ls²⁰ of {LH_C h²¹ t²¹ => [LH_C f²⁵(h²¹) map_lh_₁₀(f²⁵, t²¹)] | LH_N  => [LH_N]}: 1913
//│ 	case ls²⁹ of {LH_C h³⁰ t³⁰ => [LH_C f³⁴(h³⁰) map_lh_₂(f³⁴, t³⁰)] | LH_N  => [LH_N]}: 2542
//│ 	case ls³¹ of {LH_C h³³ t³³ => [LH_C f³⁵(h³³) map_lh_₉(f³⁵, t³³)] | LH_N  => [LH_N]}: 2772
//│ 	case ls³³ of {LH_C h³⁵ t³⁵ => [LH_C f³⁷(h³⁵) map_lh_₅(f³⁷, t³⁵)] | LH_N  => [LH_N]}: 2800
//│ [LH_N]: 4170 --->
//│ 	case ls¹⁸ of {LH_C h¹⁹ t¹⁹ => [LH_C f²⁰(h¹⁹) map_lh_₆(f²⁰, t¹⁹)] | LH_N  => [LH_N]}: 1594
//│ 	case ls²⁰ of {LH_C h²¹ t²¹ => [LH_C f²⁵(h²¹) map_lh_₁₀(f²⁵, t²¹)] | LH_N  => [LH_N]}: 1913
//│ 	case ls²⁹ of {LH_C h³⁰ t³⁰ => [LH_C f³⁴(h³⁰) map_lh_₂(f³⁴, t³⁰)] | LH_N  => [LH_N]}: 2542
//│ 	case ls³¹ of {LH_C h³³ t³³ => [LH_C f³⁵(h³³) map_lh_₉(f³⁵, t³³)] | LH_N  => [LH_N]}: 2772
//│ 	case ls³³ of {LH_C h³⁵ t³⁵ => [LH_C f³⁷(h³⁵) map_lh_₅(f³⁷, t³⁵)] | LH_N  => [LH_N]}: 2800
//│ [Node a¹⁹ filter_lh_₇((fun _lh_funcomp_x³³ -> _lh_filterTree_arg1¹(label_lh_₂(_lh_funcomp_x³³))), cs⁷)]: 4185 --->
//│ 	DeadCodeCons
//│ 	case _lh_leaves_arg1¹ of {Node _lh_leaves_Node_0¹ _lh_leaves_Node_1¹ => case _lh_leaves_Node_1¹ of {LH_N  => [LH_C _lh_leaves_Node_0¹ [LH_N]] | _  => concat_lh_₀(map_lh_₁₄(leaves_lh_₀, _lh_leaves_Node_1¹))} | _  => error⁰}: 2213
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => _lh_label_Node_0¹ | _  => error⁰}: 3057
//│ [LH_N]: 4208 --->
//│ 	case ls¹⁵ of {LH_C h¹⁶ t¹⁶ => if f¹⁷(h¹⁶) then [LH_C h¹⁶ filter_lh_₁(f¹⁷, t¹⁶)] else filter_lh_₁(f¹⁷, t¹⁶) | LH_N  => [LH_N]}: 1463
//│ [LH_N]: 4221 --->
//│ 	DeadCodeCons
//│ 	case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245
//│ 	case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962
//│ 	case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549
//│ 	case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063
//│ 	case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018
//│ [Known [LH_N]]: 4222 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ [Unknown]: 4223 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ ------------------
//│ case _lh_null_arg1¹ of {LH_N  => [True] | LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False] | _  => error⁰}: 1204 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 1690
//│ 	[LH_N]: 1695
//│ case ls⁹ of {LH_C h¹⁰ t¹⁰ => reverse_helper_lh_₁(t¹⁰, [LH_C h¹⁰ a⁴]) | LH_N  => a⁴}: 1215 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case ls¹⁰ of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 1229 --->
//│ 	[LH_C f²⁰(h¹⁹) map_lh_₆(f²⁰, t¹⁹)]: 1592
//│ 	[LH_N]: 1593
//│ case ls¹¹ of {LH_C h¹² t¹² => foldl_lh_₁(f¹², f¹²(i¹, h¹²), t¹²) | LH_N  => i¹}: 1245 --->
//│ 	[LH_N]: 2029
//│ 	[LH_N]: 2966
//│ 	[LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]: 2984
//│ 	[LH_N]: 3283
//│ 	[LH_C _lh_bt_LH_P2_1³ [LH_N]]: 3284
//│ 	[LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]: 3285
//│ 	[LH_N]: 3560
//│ 	[LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]: 3575
//│ 	[LH_N]: 3607
//│ 	[LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)]: 4016
//│ 	[LH_N]: 4221
//│ case ls¹² of {LH_C h¹³ t¹³ => [LH_C f¹³(h¹³) map_lh_₁(f¹³, t¹³)] | LH_N  => [LH_N]}: 1293 --->
//│ 	[LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)]: 2935
//│ 	[LH_N]: 2936
//│ case ls¹³ of {LH_C h¹⁴ t¹⁴ => [LH_C f¹⁴(h¹⁴) map_lh_₈(f¹⁴, t¹⁴)] | LH_N  => [LH_N]}: 1307 --->
//│ 	[LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)]: 1227
//│ 	[LH_N]: 1228
//│ case _lh_maxLevel_LH_C_0¹ of {Assign _lh_maxLevel_Assign_0¹ _lh_maxLevel_Assign_1¹ => _lh_maxLevel_Assign_0¹ | _  => error⁰}: 1315 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1¹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹ _lh_maxLevel_LH_C_1¹ => case _lh_maxLevel_LH_C_0¹ of {Assign _lh_maxLevel_Assign_0¹ _lh_maxLevel_Assign_1¹ => _lh_maxLevel_Assign_0¹ | _  => error⁰} | _  => error⁰}: 1317 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => if f¹⁵(h¹⁵) then [LH_C h¹⁵ filter_lh_₃(f¹⁵, t¹⁵)] else filter_lh_₃(f¹⁵, t¹⁵) | LH_N  => [LH_N]}: 1337 --->
//│ 	[LH_C h¹⁰ a⁴]: 1212
//│ 	[LH_N]: 3823
//│ case _lh_mapTree_arg2¹ of {Node _lh_mapTree_Node_0¹ _lh_mapTree_Node_1¹ => [Node _lh_mapTree_arg1¹(_lh_mapTree_Node_0¹) map_lh_₈(mapTree_lh_₃(_lh_mapTree_arg1¹), _lh_mapTree_Node_1¹)] | _  => error⁰}: 1353 --->
//│ 	[Node _lh_mapTree_arg1⁷(_lh_mapTree_Node_0⁷) map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1⁷), _lh_mapTree_Node_1⁷)]: 4069
//│ case _lh_deleteBy_arg3¹ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0¹ _lh_deleteBy_LH_C_1¹ => if _lh_deleteBy_arg1¹(_lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_0¹) then _lh_deleteBy_LH_C_1¹ else [LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)] | _  => error⁰}: 1375 --->
//│ 	[LH_N]: 1357
//│ 	[LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)]: 1372
//│ 	[LH_N]: 3536
//│ 	[LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))]: 3554
//│ case _lh_mapTree_arg2² of {Node _lh_mapTree_Node_0² _lh_mapTree_Node_1² => [Node _lh_mapTree_arg1²(_lh_mapTree_Node_0²) map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1²), _lh_mapTree_Node_1²)] | _  => error⁰}: 1392 --->
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹] map_lh_₁₀(cacheChecks_lh_₁(_lh_cacheChecks_arg1¹, fillTable_lh_₁(_lh_cacheChecks_Node_0¹, _lh_cacheChecks_arg1¹, tail_lh_₁(_lh_cacheChecks_arg2¹))), _lh_cacheChecks_Node_1¹)]: 1671
//│ case _lh_maxLevel_LH_C_0² of {Assign _lh_maxLevel_Assign_0² _lh_maxLevel_Assign_1² => _lh_maxLevel_Assign_0² | _  => error⁰}: 1441 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1² of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0² _lh_maxLevel_LH_C_1² => case _lh_maxLevel_LH_C_0² of {Assign _lh_maxLevel_Assign_0² _lh_maxLevel_Assign_1² => _lh_maxLevel_Assign_0² | _  => error⁰} | _  => error⁰}: 1443 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case ls¹⁵ of {LH_C h¹⁶ t¹⁶ => if f¹⁷(h¹⁶) then [LH_C h¹⁶ filter_lh_₁(f¹⁷, t¹⁶)] else filter_lh_₁(f¹⁷, t¹⁶) | LH_N  => [LH_N]}: 1463 --->
//│ 	[LH_C h⁴⁰ a¹⁴]: 3093
//│ 	[LH_N]: 4208
//│ case _lh_maxLevel_LH_C_0³ of {Assign _lh_maxLevel_Assign_0³ _lh_maxLevel_Assign_1³ => _lh_maxLevel_Assign_0³ | _  => error⁰}: 1471 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1³ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0³ _lh_maxLevel_LH_C_1³ => case _lh_maxLevel_LH_C_0³ of {Assign _lh_maxLevel_Assign_0³ _lh_maxLevel_Assign_1³ => _lh_maxLevel_Assign_0³ | _  => error⁰} | _  => error⁰}: 1473 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case ls¹⁶ of {LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f¹⁸, f¹⁸(i², h¹⁷), t¹⁷) | LH_N  => i²}: 1488 --->
//│ 	[LH_N]: 1612
//│ 	[LH_N]: 1896
//│ 	[LH_N]: 2497
//│ 	[LH_N]: 2650
//│ 	[LH_C _lh_bt_LH_P2_1¹ [LH_N]]: 2651
//│ 	[LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]: 2652
//│ 	[LH_C h³² mappend_lh_₀(t³², ys³)]: 2756
//│ 	[LH_N]: 3793
//│ 	[LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808
//│ 	[LH_N]: 4116
//│ 	[LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134
//│ case ls¹⁷ of {LH_C h¹⁸ t¹⁸ => if f¹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)] else filter_lh_₅(f¹⁹, t¹⁸) | LH_N  => [LH_N]}: 1510 --->
//│ 	[LH_N]: 1357
//│ 	[LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)]: 1372
//│ 	[LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)]: 1502
//│ 	[LH_N]: 1509
//│ 	[LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)]: 3106
//│ 	[LH_N]: 3536
//│ 	[LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))]: 3554
//│ case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰}: 1576 --->
//│ 	[Known _lh_f_Known_0²]: 1601
//│ 	[Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]: 1614
//│ case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰}: 1578 --->
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]]: 1602
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1620
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1625
//│ case _lh_combine_arg1¹ of {LH_N  => _lh_combine_arg2¹ | LH_C _lh_combine_LH_C_0¹ _lh_combine_LH_C_1¹ => case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1580 --->
//│ 	[LH_C f¹³(h¹³) map_lh_₁(f¹³, t¹³)]: 1291
//│ 	[LH_N]: 1292
//│ case ls¹⁸ of {LH_C h¹⁹ t¹⁹ => [LH_C f²⁰(h¹⁹) map_lh_₆(f²⁰, t¹⁹)] | LH_N  => [LH_N]}: 1594 --->
//│ 	[LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)]: 4169
//│ 	[LH_N]: 4170
//│ case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631 --->
//│ 	[Known [LH_N]]: 1897
//│ 	[Unknown]: 1898
//│ 	[Known [LH_N]]: 2498
//│ 	[Unknown]: 2499
//│ 	[Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]: 2653
//│ case _lh_f_arg1⁴ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰} | _  => error⁰}: 1633 --->
//│ 	[LH_P2 s¹⁴ let _lh_matchIdent⁸ = earliestInconsistency_lh_₀(_lh_bt_arg1¹⁴, s¹⁴)
//│ in _lh_matchIdent⁸(_lh_bt_arg1¹⁴, s¹⁴)]: 3421
//│ case _lh_maxLevel_LH_C_0⁴ of {Assign _lh_maxLevel_Assign_0⁴ _lh_maxLevel_Assign_1⁴ => _lh_maxLevel_Assign_0⁴ | _  => error⁰}: 1646 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1⁴ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁴ _lh_maxLevel_LH_C_1⁴ => case _lh_maxLevel_LH_C_0⁴ of {Assign _lh_maxLevel_Assign_0⁴ _lh_maxLevel_Assign_1⁴ => _lh_maxLevel_Assign_0⁴ | _  => error⁰} | _  => error⁰}: 1648 --->
//│ 	[LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]: 3960
//│ case _lh_cacheChecks_arg3¹ of {Node _lh_cacheChecks_Node_0¹ _lh_cacheChecks_Node_1¹ => [Node [LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹] map_lh_₁₀(cacheChecks_lh_₁(_lh_cacheChecks_arg1¹, fillTable_lh_₁(_lh_cacheChecks_Node_0¹, _lh_cacheChecks_arg1¹, tail_lh_₁(_lh_cacheChecks_arg2¹))), _lh_cacheChecks_Node_1¹)] | _  => error⁰}: 1673 --->
//│ 	[Node _lh_initTree_arg2¹ map_lh_₁₆(initTree_lh_₀(_lh_initTree_arg1¹), _lh_initTree_arg1¹(_lh_initTree_arg2¹))]: 3480
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]}: 1696 --->
//│ 	[LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 2459
//│ 	[LH_N]: 2460
//│ 	[LH_C [LH_N] let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₇(1, _lh_emptyTable_CSP_0²))]: 2471
//│ 	[LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)]: 3366
//│ 	[LH_N]: 3367
//│ 	[LH_N]: 3369
//│ case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰}: 1719 --->
//│ 	[LH_P2 [LH_N] [Unknown]]: 3934
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶]: 3968
//│ case _lh_f_arg1⁵ of {LH_P2 _lh_f_LH_P2_0⁶ _lh_f_LH_P2_1⁶ => case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰} | _  => error⁰}: 1721 --->
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰]: 3936
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰]: 3970
//│ case _lh_domainWipeOut_arg1¹ of {CSP _lh_domainWipeOut_CSP_0¹ _lh_domainWipeOut_CSP_1¹ _lh_domainWipeOut_CSP_2¹ => let f²² = (fun _lh_f_arg1⁵ -> case _lh_f_arg1⁵ of {LH_P2 _lh_f_LH_P2_0⁶ _lh_f_LH_P2_1⁶ => case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰} | _  => error⁰})
//│ in mapTree_lh_₅(f²², _lh_domainWipeOut_arg2¹) | _  => error⁰}: 1730 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}: 1767 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸]: 1782
//│ case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 1788 --->
//│ 	[LH_C a⁵ enumFromTo_lh_₀((a⁵ + 1), b²)]: 1528
//│ 	[LH_N]: 1529
//│ case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 1803 --->
//│ 	[LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁴)]: 1942
//│ 	[LH_N]: 1943
//│ case _lh_fillTable_arg2¹ of {CSP _lh_fillTable_CSP_0¹ _lh_fillTable_CSP_1¹ _lh_fillTable_CSP_2¹ => let f²³ = (fun cs³ -> (fun varval¹ -> let _lh_matchIdent⁴ = varval¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}))
//│ in zipWith_lh_₀(zipWith_lh_₁(f²³), _lh_fillTable_arg3¹, let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(enumFromTo_lh_₁((_lh_fillTable_Assign_0¹ + 1), _lh_fillTable_CSP_0¹))) | _  => error⁰}: 1820 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_fillTable_LH_C_0¹ of {Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹ => case _lh_fillTable_arg2¹ of {CSP _lh_fillTable_CSP_0¹ _lh_fillTable_CSP_1¹ _lh_fillTable_CSP_2¹ => let f²³ = (fun cs³ -> (fun varval¹ -> let _lh_matchIdent⁴ = varval¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}))
//│ in zipWith_lh_₀(zipWith_lh_₁(f²³), _lh_fillTable_arg3¹, let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(enumFromTo_lh_₁((_lh_fillTable_Assign_0¹ + 1), _lh_fillTable_CSP_0¹))) | _  => error⁰} | _  => error⁰}: 1822 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_fillTable_arg1¹ of {LH_N  => _lh_fillTable_arg3¹ | LH_C _lh_fillTable_LH_C_0¹ _lh_fillTable_LH_C_1¹ => case _lh_fillTable_LH_C_0¹ of {Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹ => case _lh_fillTable_arg2¹ of {CSP _lh_fillTable_CSP_0¹ _lh_fillTable_CSP_1¹ _lh_fillTable_CSP_2¹ => let f²³ = (fun cs³ -> (fun varval¹ -> let _lh_matchIdent⁴ = varval¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}))
//│ in zipWith_lh_₀(zipWith_lh_₁(f²³), _lh_fillTable_arg3¹, let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(enumFromTo_lh_₁((_lh_fillTable_Assign_0¹ + 1), _lh_fillTable_CSP_0¹))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1824 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_level_arg1¹ of {Assign _lh_level_Assign_0¹ _lh_level_Assign_1¹ => _lh_level_Assign_0¹ | _  => error⁰}: 1831 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844 --->
//│ 	[LH_N]: 3401
//│ 	[LH_C fc_lh_₀ [LH_N]]: 3402
//│ 	[LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]: 3403
//│ 	[LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]: 3404
//│ 	[LH_C bm_lh_₀ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]]: 3405
//│ 	[LH_C bt_lh_₂ [LH_C bm_lh_₀ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]]]: 3406
//│ case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]}: 1857 --->
//│ 	[LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b³)]: 1548
//│ 	[LH_N]: 1549
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]}: 1872 --->
//│ 	[LH_C a¹⁶ enumFromTo_lh_₃((a¹⁶ + 1), b¹¹)]: 3597
//│ 	[LH_N]: 3598
//│ case _lh_emptyTable_arg1¹ of {CSP _lh_emptyTable_CSP_0¹ _lh_emptyTable_CSP_1¹ _lh_emptyTable_CSP_2¹ => [LH_C [LH_N] let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹(enumFromTo_lh_₃(1, _lh_emptyTable_CSP_0¹))] | _  => error⁰}: 1884 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_level_arg1² of {Assign _lh_level_Assign_0² _lh_level_Assign_1² => _lh_level_Assign_0² | _  => error⁰}: 1889 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case ls²⁰ of {LH_C h²¹ t²¹ => [LH_C f²⁵(h²¹) map_lh_₁₀(f²⁵, t²¹)] | LH_N  => [LH_N]}: 1913 --->
//│ 	[LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)]: 4169
//│ 	[LH_N]: 4170
//│ case _lh_notElem_arg2¹ of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1¹, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1¹, _lh_notElem_LH_C_1¹) | _  => error⁰}: 1962 --->
//│ 	[LH_N]: 2029
//│ 	[LH_N]: 2966
//│ 	[LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]: 2984
//│ 	[LH_N]: 3283
//│ 	[LH_C _lh_bt_LH_P2_1³ [LH_N]]: 3284
//│ 	[LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]: 3285
//│ 	[LH_N]: 3560
//│ 	[LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]: 3575
//│ 	[LH_N]: 3607
//│ 	[LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)]: 4016
//│ 	[LH_N]: 4221
//│ case ls²¹ of {LH_C h²² t²² => t²² | LH_N  => error⁰}: 1968 --->
//│ 	[LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 2459
//│ 	[LH_N]: 2460
//│ 	[LH_C [LH_N] let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₇(1, _lh_emptyTable_CSP_0²))]: 2471
//│ 	[LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)]: 3366
//│ 	[LH_N]: 3367
//│ 	[LH_N]: 3369
//│ case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]}: 1986 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)]: 3715
//│ 	[LH_N]: 3716
//│ case xs² of {LH_C hx¹ tx¹ => case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1988 --->
//│ 	[LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)]: 1984
//│ 	[LH_N]: 1985
//│ 	[LH_N]: 1987
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)]: 2444
//│ 	[LH_N]: 2445
//│ case ls²² of {LH_C h²³ t²³ => if f²⁷(h²³) then [LH_C h²³ filter_lh_₇(f²⁷, t²³)] else filter_lh_₇(f²⁷, t²³) | LH_N  => [LH_N]}: 2010 --->
//│ 	[LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)]: 3446
//│ 	[LH_N]: 3447
//│ case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036 --->
//│ 	[Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]: 3286
//│ 	[Known [LH_N]]: 3608
//│ 	[Unknown]: 3609
//│ 	[Known [LH_N]]: 4222
//│ 	[Unknown]: 4223
//│ case _lh_f_arg1⁶ of {LH_P2 _lh_f_LH_P2_0⁸ _lh_f_LH_P2_1⁸ => case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰} | _  => error⁰}: 2038 --->
//│ 	[LH_P2 s¹⁵ let _lh_matchIdent⁹ = earliestInconsistency_lh_₁(_lh_bt_arg1¹⁵, s¹⁵)
//│ in _lh_matchIdent⁹(_lh_bt_arg1¹⁵, s¹⁵)]: 3463
//│ case ls²³ of {LH_C h²⁴ t²⁴ => h²⁴ | LH_N  => error⁰}: 2064 --->
//│ 	[LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 2459
//│ 	[LH_N]: 2460
//│ 	[LH_C [LH_N] let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₇(1, _lh_emptyTable_CSP_0²))]: 2471
//│ 	[LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)]: 3366
//│ 	[LH_N]: 3367
//│ 	[LH_N]: 3369
//│ case ls²⁴ of {LH_C h²⁵ t²⁵ => [LH_C f²⁹(h²⁵) map_lh_₁₄(f²⁹, t²⁵)] | LH_N  => [LH_N]}: 2077 --->
//│ 	[LH_C h²³ filter_lh_₇(f²⁷, t²³)]: 2002
//│ 	[LH_N]: 2009
//│ case _lh_maxLevel_LH_C_0⁵ of {Assign _lh_maxLevel_Assign_0⁵ _lh_maxLevel_Assign_1⁵ => _lh_maxLevel_Assign_0⁵ | _  => error⁰}: 2105 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1⁵ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁵ _lh_maxLevel_LH_C_1⁵ => case _lh_maxLevel_LH_C_0⁵ of {Assign _lh_maxLevel_Assign_0⁵ _lh_maxLevel_Assign_1⁵ => _lh_maxLevel_Assign_0⁵ | _  => error⁰} | _  => error⁰}: 2107 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case ls²⁵ of {LH_C h²⁶ t²⁶ => foldl_lh_₂(f³⁰, f³⁰(i³, h²⁶), t²⁶) | LH_N  => i³}: 2122 --->
//│ 	[LH_N]: 3689
//│ 	[LH_C _lh_fillTable_LH_P2_0² [LH_N]]: 3690
//│ 	[LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]: 3691
//│ case _lh_level_arg1³ of {Assign _lh_level_Assign_0³ _lh_level_Assign_1³ => _lh_level_Assign_0³ | _  => error⁰}: 2129 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case ls²⁶ of {LH_C h²⁷ t²⁷ => if f³¹(h²⁷) then [LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)] else filter_lh_₆(f³¹, t²⁷) | LH_N  => [LH_N]}: 2149 --->
//│ 	[LH_N]: 2202
//│ 	[LH_C _lh_leaves_Node_0¹ [LH_N]]: 2203
//│ 	[LH_N]: 3337
//│ 	[LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys⁷)]: 3347
//│ case _lh_cacheChecks_arg3² of {Node _lh_cacheChecks_Node_0² _lh_cacheChecks_Node_1² => [Node [LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²] map_lh_₆(cacheChecks_lh_₀(_lh_cacheChecks_arg1², fillTable_lh_₀(_lh_cacheChecks_Node_0², _lh_cacheChecks_arg1², tail_lh_₀(_lh_cacheChecks_arg2²))), _lh_cacheChecks_Node_1²)] | _  => error⁰}: 2175 --->
//│ 	[Node _lh_initTree_arg2¹ map_lh_₁₆(initTree_lh_₀(_lh_initTree_arg1¹), _lh_initTree_arg1¹(_lh_initTree_arg2¹))]: 3480
//│ case _lh_leaves_Node_1¹ of {LH_N  => [LH_C _lh_leaves_Node_0¹ [LH_N]] | _  => concat_lh_₀(map_lh_₁₄(leaves_lh_₀, _lh_leaves_Node_1¹))}: 2211 --->
//│ 	[LH_C h²³ filter_lh_₇(f²⁷, t²³)]: 2002
//│ 	[LH_N]: 2009
//│ case _lh_leaves_arg1¹ of {Node _lh_leaves_Node_0¹ _lh_leaves_Node_1¹ => case _lh_leaves_Node_1¹ of {LH_N  => [LH_C _lh_leaves_Node_0¹ [LH_N]] | _  => concat_lh_₀(map_lh_₁₄(leaves_lh_₀, _lh_leaves_Node_1¹))} | _  => error⁰}: 2213 --->
//│ 	[Node a¹⁹ filter_lh_₇((fun _lh_funcomp_x³³ -> _lh_filterTree_arg1¹(label_lh_₂(_lh_funcomp_x³³))), cs⁷)]: 4185
//│ case _lh_value_arg1¹ of {Assign _lh_value_Assign_0¹ _lh_value_Assign_1¹ => _lh_value_Assign_1¹ | _  => error⁰}: 2218 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case ls²⁷ of {LH_C h²⁸ t²⁸ => if f³²(h²⁸) then [LH_C h²⁸ filter_lh_₀(f³², t²⁸)] else filter_lh_₀(f³², t²⁸) | LH_N  => [LH_N]}: 2238 --->
//│ 	[LH_C h²⁸ filter_lh_₀(f³², t²⁸)]: 2230
//│ 	[LH_N]: 2237
//│ 	[LH_C h³² mappend_lh_₀(t³², ys³)]: 2756
//│ 	[LH_N]: 3793
//│ 	[LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808
//│ 	[LH_N]: 4116
//│ 	[LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134
//│ case _lh_f_LH_P2_0⁹ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹] | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => let tableEntry¹ = atIndex_lh_₀((value_lh_₀(_lh_f_LH_C_0¹) - 1), head_lh_₀(_lh_f_LH_P2_1⁹))
//│ in let cs⁴ = if polyEq⁰(tableEntry¹, [Unknown]) then checkComplete_lh_₄(_lh_f_arg1⁷, [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]) else tableEntry¹
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹] | _  => error⁰}: 2285 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_f_arg2⁵ of {LH_P2 _lh_f_LH_P2_0⁹ _lh_f_LH_P2_1⁹ => case _lh_f_LH_P2_0⁹ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹] | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => let tableEntry¹ = atIndex_lh_₀((value_lh_₀(_lh_f_LH_C_0¹) - 1), head_lh_₀(_lh_f_LH_P2_1⁹))
//│ in let cs⁴ = if polyEq⁰(tableEntry¹, [Unknown]) then checkComplete_lh_₄(_lh_f_arg1⁷, [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]) else tableEntry¹
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 2287 --->
//│ 	[LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²]: 2155
//│ case ls²⁸ of {LH_C h²⁹ t²⁹ => (1 + length_lh_₀(t²⁹)) | LH_N  => 0}: 2309 --->
//│ 	[LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)]: 3876
//│ 	[LH_N]: 3877
//│ case _lh_foldTree_arg2¹ of {Node _lh_foldTree_Node_0¹ _lh_foldTree_Node_1¹ => _lh_foldTree_arg1¹(_lh_foldTree_Node_0¹, map_lh_₃(foldTree_lh_₁(_lh_foldTree_arg1¹), _lh_foldTree_Node_1¹)) | _  => error⁰}: 2324 --->
//│ 	[Node _lh_mapTree_arg1⁵(_lh_mapTree_Node_0⁵) map_lh_₅(mapTree_lh_₁(_lh_mapTree_arg1⁵), _lh_mapTree_Node_1⁵)]: 3657
//│ case _lh_maxLevel_LH_C_0⁶ of {Assign _lh_maxLevel_Assign_0⁶ _lh_maxLevel_Assign_1⁶ => _lh_maxLevel_Assign_0⁶ | _  => error⁰}: 2332 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1⁶ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁶ _lh_maxLevel_LH_C_1⁶ => case _lh_maxLevel_LH_C_0⁶ of {Assign _lh_maxLevel_Assign_0⁶ _lh_maxLevel_Assign_1⁶ => _lh_maxLevel_Assign_0⁶ | _  => error⁰} | _  => error⁰}: 2334 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_mapTree_arg2³ of {Node _lh_mapTree_Node_0³ _lh_mapTree_Node_1³ => [Node _lh_mapTree_arg1³(_lh_mapTree_Node_0³) map_lh_₂(mapTree_lh_₀(_lh_mapTree_arg1³), _lh_mapTree_Node_1³)] | _  => error⁰}: 2419 --->
//│ 	[Node _lh_initTree_arg2¹ map_lh_₁₆(initTree_lh_₀(_lh_initTree_arg1¹), _lh_initTree_arg1¹(_lh_initTree_arg2¹))]: 3480
//│ case _lh_level_arg1⁴ of {Assign _lh_level_Assign_0⁴ _lh_level_Assign_1⁴ => _lh_level_Assign_0⁴ | _  => error⁰}: 2425 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_LH_C_0⁷ of {Assign _lh_maxLevel_Assign_0⁷ _lh_maxLevel_Assign_1⁷ => _lh_maxLevel_Assign_0⁷ | _  => error⁰}: 2432 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1⁷ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁷ _lh_maxLevel_LH_C_1⁷ => case _lh_maxLevel_LH_C_0⁷ of {Assign _lh_maxLevel_Assign_0⁷ _lh_maxLevel_Assign_1⁷ => _lh_maxLevel_Assign_0⁷ | _  => error⁰} | _  => error⁰}: 2434 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]}: 2446 --->
//│ 	[LH_C a¹³ enumFromTo_lh_₆((a¹³ + 1), b¹⁰)]: 3082
//│ 	[LH_N]: 3083
//│ case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 2461 --->
//│ 	[LH_C a¹⁷ enumFromTo_lh_₇((a¹⁷ + 1), b¹²)]: 4053
//│ 	[LH_N]: 4054
//│ case _lh_emptyTable_arg1² of {CSP _lh_emptyTable_CSP_0² _lh_emptyTable_CSP_1² _lh_emptyTable_CSP_2² => [LH_C [LH_N] let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₇(1, _lh_emptyTable_CSP_0²))] | _  => error⁰}: 2473 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_complete_arg1¹ of {CSP _lh_complete_CSP_0¹ _lh_complete_CSP_1¹ _lh_complete_CSP_2¹ => (maxLevel_lh_₈(_lh_complete_arg2¹) == _lh_complete_CSP_0¹) | _  => error⁰}: 2484 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_level_arg1⁵ of {Assign _lh_level_Assign_0⁵ _lh_level_Assign_1⁵ => _lh_level_Assign_0⁵ | _  => error⁰}: 2490 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case ls²⁹ of {LH_C h³⁰ t³⁰ => [LH_C f³⁴(h³⁰) map_lh_₂(f³⁴, t³⁰)] | LH_N  => [LH_N]}: 2542 --->
//│ 	[LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)]: 4169
//│ 	[LH_N]: 4170
//│ case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]}: 2549 --->
//│ 	[LH_N]: 1254
//│ 	[LH_N]: 1357
//│ 	[LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)]: 1372
//│ 	[LH_N]: 1612
//│ 	[LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]: 1762
//│ 	[LH_N]: 1896
//│ 	[LH_N]: 2029
//│ 	[LH_N]: 2497
//│ 	[LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]: 2652
//│ 	[LH_N]: 2717
//│ 	[LH_C h³² mappend_lh_₀(t³², ys³)]: 2756
//│ 	[LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]: 2866
//│ 	[LH_N]: 2966
//│ 	[LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]: 2984
//│ 	[LH_N]: 2994
//│ 	[LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)]: 3106
//│ 	[LH_N]: 3214
//│ 	[LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]: 3285
//│ 	[LH_N]: 3536
//│ 	[LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))]: 3554
//│ 	[LH_N]: 3560
//│ 	[LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]: 3575
//│ 	[LH_N]: 3607
//│ 	[LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]: 3691
//│ 	[LH_N]: 3793
//│ 	[LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808
//│ 	[LH_N]: 3994
//│ 	[LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)]: 4016
//│ 	[LH_N]: 4116
//│ 	[LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134
//│ 	[LH_N]: 4221
//│ case _lh_knownConflict_arg1¹ of {Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True] | _  => [False]} | _  => [False]}: 2551 --->
//│ 	[Known [LH_N]]: 1255
//│ 	[Unknown]: 1256
//│ 	[Known _lh_f_Known_0²]: 1601
//│ 	[Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]: 1614
//│ 	[Known collect_lh_₀(head_lh_₁(wipedDomains¹))]: 1711
//│ 	[Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]]: 1763
//│ 	[Unknown]: 1851
//│ 	[Known _lh_f_Known_0³]: 2017
//│ 	[Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]: 2031
//│ 	[Unknown]: 2244
//│ 	[Unknown]: 2440
//│ 	[Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]: 2867
//│ 	[Known [LH_N]]: 2995
//│ 	[Unknown]: 2996
//│ 	[Known [LH_N]]: 3215
//│ 	[Unknown]: 3216
//│ 	[Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]]: 3692
//│ 	[Unknown]: 3933
//│ 	[Known [LH_N]]: 3995
//│ 	[Unknown]: 3996
//│ case ls³⁰ of {LH_C h³¹ t³¹ => if (n¹ == 0) then h³¹ else atIndex_lh_₁((n¹ - 1), t³¹) | LH_N  => error⁰}: 2577 --->
//│ 	[LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)]: 1984
//│ 	[LH_N]: 1985
//│ 	[LH_N]: 1987
//│ 	[LH_N]: 2437
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)]: 2444
//│ 	[LH_N]: 2445
//│ case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰}: 2604 --->
//│ 	[Known _lh_f_Known_0³]: 2017
//│ 	[Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]: 2031
//│ case _lh_combine_LH_C_0² of {LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰} | _  => error⁰}: 2606 --->
//│ 	[LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]]: 2018
//│ 	[LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]]: 2032
//│ case _lh_combine_arg1² of {LH_N  => _lh_combine_arg2² | LH_C _lh_combine_LH_C_0² _lh_combine_LH_C_1² => case _lh_combine_LH_C_0² of {LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2608 --->
//│ 	[LH_C f⁵¹(h⁵²) map_lh_₄(f⁵¹, t⁵²)]: 4110
//│ 	[LH_N]: 4111
//│ case _lh_matchIdent⁵ of {LH_N  => (fun _lh_bt_arg1⁶ -> (fun s⁶ -> checkComplete_lh_₁(_lh_bt_arg1⁶, s⁶))) | LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => let _lh_bt_Just_0¹ = let _lh_bt_LH_P2_1¹ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ in let _lh_bt_LH_P2_0¹ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ in (fun _lh_bt_arg1⁷ -> (fun s⁷ -> _lh_bt_Just_0¹)) | _  => error⁰}: 2661 --->
//│ 	[LH_C h¹⁶ filter_lh_₁(f¹⁷, t¹⁶)]: 1455
//│ 	[LH_N]: 1462
//│ case _lh_earliestInconsistency_arg2¹ of {LH_N  => (fun _lh_bt_arg1⁵ -> (fun s⁵ -> checkComplete_lh_₀(_lh_bt_arg1⁵, s⁵))) | LH_C _lh_earliestInconsistency_LH_C_0² _lh_earliestInconsistency_LH_C_1² => let _lh_matchIdent⁵ = filter_lh_₁((fun _lh_funcomp_x²⁵ -> not⁰(_lh_earliestInconsistency_CSP_2¹(_lh_earliestInconsistency_LH_C_0², _lh_funcomp_x²⁵))), reverse_lh_₀(_lh_earliestInconsistency_LH_C_1²))
//│ in case _lh_matchIdent⁵ of {LH_N  => (fun _lh_bt_arg1⁶ -> (fun s⁶ -> checkComplete_lh_₁(_lh_bt_arg1⁶, s⁶))) | LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => let _lh_bt_Just_0¹ = let _lh_bt_LH_P2_1¹ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ in let _lh_bt_LH_P2_0¹ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ in (fun _lh_bt_arg1⁷ -> (fun s⁷ -> _lh_bt_Just_0¹)) | _  => error⁰} | _  => error⁰}: 2664 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_earliestInconsistency_arg1¹ of {CSP _lh_earliestInconsistency_CSP_0¹ _lh_earliestInconsistency_CSP_1¹ _lh_earliestInconsistency_CSP_2¹ => case _lh_earliestInconsistency_arg2¹ of {LH_N  => (fun _lh_bt_arg1⁵ -> (fun s⁵ -> checkComplete_lh_₀(_lh_bt_arg1⁵, s⁵))) | LH_C _lh_earliestInconsistency_LH_C_0² _lh_earliestInconsistency_LH_C_1² => let _lh_matchIdent⁵ = filter_lh_₁((fun _lh_funcomp_x²⁵ -> not⁰(_lh_earliestInconsistency_CSP_2¹(_lh_earliestInconsistency_LH_C_0², _lh_funcomp_x²⁵))), reverse_lh_₀(_lh_earliestInconsistency_LH_C_1²))
//│ in case _lh_matchIdent⁵ of {LH_N  => (fun _lh_bt_arg1⁶ -> (fun s⁶ -> checkComplete_lh_₁(_lh_bt_arg1⁶, s⁶))) | LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => let _lh_bt_Just_0¹ = let _lh_bt_LH_P2_1¹ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ in let _lh_bt_LH_P2_0¹ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ in [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]
//│ in (fun _lh_bt_arg1⁷ -> (fun s⁷ -> _lh_bt_Just_0¹)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2666 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)] | LH_N  => [LH_N]}: 2694 --->
//│ 	[LH_C a¹¹ enumFromTo_lh_₈((a¹¹ + 1), b⁸)]: 2518
//│ 	[LH_N]: 2519
//│ case _lh_mkTree_arg1¹ of {CSP _lh_mkTree_CSP_0¹ _lh_mkTree_CSP_1¹ _lh_mkTree_CSP_2¹ => let next¹ = (fun ss¹ -> if (maxLevel_lh_₁₀(ss¹) < _lh_mkTree_CSP_0¹) then let _lh_listcomp_fun¹³ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹³(enumFromTo_lh_₈(1, _lh_mkTree_CSP_1¹)) else [LH_N])
//│ in initTree_lh_₀(next¹, [LH_N]) | _  => error⁰}: 2714 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰}: 2727 --->
//│ 	[Unknown]: 2440
//│ 	[Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]]: 3692
//│ case _lh_collect_arg1¹ of {LH_N  => [LH_N] | LH_C _lh_collect_LH_C_0¹ _lh_collect_LH_C_1¹ => case _lh_collect_LH_C_0¹ of {Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹)) | _  => error⁰} | _  => error⁰}: 2729 --->
//│ 	[LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)]: 1984
//│ 	[LH_N]: 1985
//│ 	[LH_N]: 1987
//│ 	[LH_N]: 2437
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)]: 2444
//│ 	[LH_N]: 2445
//│ case xs³ of {LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys³)] | LH_N  => ys³}: 2758 --->
//│ 	[LH_N]: 1612
//│ 	[LH_N]: 1896
//│ 	[LH_N]: 2497
//│ 	[LH_N]: 2650
//│ 	[LH_C _lh_bt_LH_P2_1¹ [LH_N]]: 2651
//│ 	[LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]: 2652
//│ 	[LH_C h³² mappend_lh_₀(t³², ys³)]: 2756
//│ 	[LH_N]: 3793
//│ 	[LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808
//│ 	[LH_N]: 4116
//│ 	[LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134
//│ case ls³¹ of {LH_C h³³ t³³ => [LH_C f³⁵(h³³) map_lh_₉(f³⁵, t³³)] | LH_N  => [LH_N]}: 2772 --->
//│ 	[LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)]: 4169
//│ 	[LH_N]: 4170
//│ case ls³² of {LH_C h³⁴ t³⁴ => [LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)] | LH_N  => [LH_N]}: 2786 --->
//│ 	[LH_C f²⁵(h²¹) map_lh_₁₀(f²⁵, t²¹)]: 1911
//│ 	[LH_N]: 1912
//│ case ls³³ of {LH_C h³⁵ t³⁵ => [LH_C f³⁷(h³⁵) map_lh_₅(f³⁷, t³⁵)] | LH_N  => [LH_N]}: 2800 --->
//│ 	[LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)]: 4169
//│ 	[LH_N]: 4170
//│ case _lh_matchIdent⁶ of {LH_N  => (fun _lh_bt_arg1⁹ -> (fun s⁹ -> checkComplete_lh_₆(_lh_bt_arg1⁹, s⁹))) | LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => let _lh_bt_Just_0² = let _lh_bt_LH_P2_1² = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ in let _lh_bt_LH_P2_0² = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ in [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]
//│ in (fun _lh_bt_arg1¹⁰ -> (fun s¹⁰ -> _lh_bt_Just_0²)) | _  => error⁰}: 2875 --->
//│ 	[LH_C h³⁹ filter_lh_₄(f⁴⁰, t³⁹)]: 3010
//│ 	[LH_N]: 3017
//│ case _lh_earliestInconsistency_arg2² of {LH_N  => (fun _lh_bt_arg1⁸ -> (fun s⁸ -> checkComplete_lh_₅(_lh_bt_arg1⁸, s⁸))) | LH_C _lh_earliestInconsistency_LH_C_0⁴ _lh_earliestInconsistency_LH_C_1⁴ => let _lh_matchIdent⁶ = filter_lh_₄((fun _lh_funcomp_x²⁸ -> not⁰(_lh_earliestInconsistency_CSP_2²(_lh_earliestInconsistency_LH_C_0⁴, _lh_funcomp_x²⁸))), reverse_lh_₂(_lh_earliestInconsistency_LH_C_1⁴))
//│ in case _lh_matchIdent⁶ of {LH_N  => (fun _lh_bt_arg1⁹ -> (fun s⁹ -> checkComplete_lh_₆(_lh_bt_arg1⁹, s⁹))) | LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => let _lh_bt_Just_0² = let _lh_bt_LH_P2_1² = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ in let _lh_bt_LH_P2_0² = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ in [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]
//│ in (fun _lh_bt_arg1¹⁰ -> (fun s¹⁰ -> _lh_bt_Just_0²)) | _  => error⁰} | _  => error⁰}: 2878 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_earliestInconsistency_arg1² of {CSP _lh_earliestInconsistency_CSP_0² _lh_earliestInconsistency_CSP_1² _lh_earliestInconsistency_CSP_2² => case _lh_earliestInconsistency_arg2² of {LH_N  => (fun _lh_bt_arg1⁸ -> (fun s⁸ -> checkComplete_lh_₅(_lh_bt_arg1⁸, s⁸))) | LH_C _lh_earliestInconsistency_LH_C_0⁴ _lh_earliestInconsistency_LH_C_1⁴ => let _lh_matchIdent⁶ = filter_lh_₄((fun _lh_funcomp_x²⁸ -> not⁰(_lh_earliestInconsistency_CSP_2²(_lh_earliestInconsistency_LH_C_0⁴, _lh_funcomp_x²⁸))), reverse_lh_₂(_lh_earliestInconsistency_LH_C_1⁴))
//│ in case _lh_matchIdent⁶ of {LH_N  => (fun _lh_bt_arg1⁹ -> (fun s⁹ -> checkComplete_lh_₆(_lh_bt_arg1⁹, s⁹))) | LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => let _lh_bt_Just_0² = let _lh_bt_LH_P2_1² = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ in let _lh_bt_LH_P2_0² = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ in [Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]
//│ in (fun _lh_bt_arg1¹⁰ -> (fun s¹⁰ -> _lh_bt_Just_0²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2880 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case ls³⁴ of {LH_C h³⁶ t³⁶ => h³⁶ | LH_N  => error⁰}: 2886 --->
//│ 	[LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)]: 1870
//│ 	[LH_N]: 1871
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹(enumFromTo_lh_₃(1, _lh_emptyTable_CSP_0¹))]: 1882
//│ 	[LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)]: 3125
//│ 	[LH_N]: 3126
//│ 	[LH_N]: 3128
//│ case _lh_foldTree_arg2² of {Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1²(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1²), _lh_foldTree_Node_1²)) | _  => error⁰}: 2923 --->
//│ 	[Node _lh_mapTree_arg1¹(_lh_mapTree_Node_0¹) map_lh_₈(mapTree_lh_₃(_lh_mapTree_arg1¹), _lh_mapTree_Node_1¹)]: 1351
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³]: 1604
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]]: 1622
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³]: 1627
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴]: 2020
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴]: 2034
//│ 	[Node _lh_mapTree_arg1⁴(_lh_mapTree_Node_0⁴) map_lh_₉(mapTree_lh_₄(_lh_mapTree_arg1⁴), _lh_mapTree_Node_1⁴)]: 3518
//│ 	[Node _lh_mapTree_arg1⁶(_lh_mapTree_Node_0⁶) map_lh_₁₁(mapTree_lh_₅(_lh_mapTree_arg1⁶), _lh_mapTree_Node_1⁶)]: 3837
//│ case ls³⁵ of {LH_C h³⁷ t³⁷ => [LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)] | LH_N  => [LH_N]}: 2937 --->
//│ 	[LH_C f³⁴(h³⁰) map_lh_₂(f³⁴, t³⁰)]: 2540
//│ 	[LH_N]: 2541
//│ case ls³⁶ of {LH_C h³⁸ t³⁸ => [LH_C f³⁹(h³⁸) map_lh_₁₁(f³⁹, t³⁸)] | LH_N  => [LH_N]}: 2962 --->
//│ 	[LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)]: 2784
//│ 	[LH_N]: 2785
//│ case _lh_nubBy_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))] | _  => error⁰}: 2986 --->
//│ 	[LH_N]: 2029
//│ 	[LH_N]: 2966
//│ 	[LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]: 2984
//│ 	[LH_N]: 3560
//│ 	[LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]: 3575
//│ 	[LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)]: 4016
//│ 	[LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)]: 4149
//│ 	[LH_N]: 4156
//│ case ls³⁷ of {LH_C h³⁹ t³⁹ => if f⁴⁰(h³⁹) then [LH_C h³⁹ filter_lh_₄(f⁴⁰, t³⁹)] else filter_lh_₄(f⁴⁰, t³⁹) | LH_N  => [LH_N]}: 3018 --->
//│ 	[LH_N]: 3024
//│ 	[LH_C h⁴⁵ a¹⁵]: 3380
//│ case _lh_complete_arg1² of {CSP _lh_complete_CSP_0² _lh_complete_CSP_1² _lh_complete_CSP_2² => (maxLevel_lh_₁(_lh_complete_arg2²) == _lh_complete_CSP_0²) | _  => error⁰}: 3051 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => _lh_label_Node_0¹ | _  => error⁰}: 3057 --->
//│ 	[Node a¹⁹ filter_lh_₇((fun _lh_funcomp_x³³ -> _lh_filterTree_arg1¹(label_lh_₂(_lh_funcomp_x³³))), cs⁷)]: 4185
//│ case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]}: 3063 --->
//│ 	[LH_N]: 1254
//│ 	[LH_N]: 1357
//│ 	[LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)]: 1372
//│ 	[LH_N]: 1612
//│ 	[LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]: 1762
//│ 	[LH_N]: 1896
//│ 	[LH_N]: 2029
//│ 	[LH_N]: 2497
//│ 	[LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]: 2652
//│ 	[LH_N]: 2717
//│ 	[LH_C h³² mappend_lh_₀(t³², ys³)]: 2756
//│ 	[LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]: 2866
//│ 	[LH_N]: 2966
//│ 	[LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]: 2984
//│ 	[LH_N]: 2994
//│ 	[LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)]: 3106
//│ 	[LH_N]: 3214
//│ 	[LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]: 3285
//│ 	[LH_N]: 3536
//│ 	[LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))]: 3554
//│ 	[LH_N]: 3560
//│ 	[LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]: 3575
//│ 	[LH_N]: 3607
//│ 	[LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]: 3691
//│ 	[LH_N]: 3793
//│ 	[LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808
//│ 	[LH_N]: 3994
//│ 	[LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)]: 4016
//│ 	[LH_N]: 4116
//│ 	[LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134
//│ 	[LH_N]: 4221
//│ case _lh_knownSolution_arg1¹ of {Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {LH_N  => [True] | _  => [False]} | _  => [False]}: 3065 --->
//│ 	[Known [LH_N]]: 1255
//│ 	[Unknown]: 1256
//│ 	[Known _lh_f_Known_0²]: 1601
//│ 	[Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]: 1614
//│ 	[Known collect_lh_₀(head_lh_₁(wipedDomains¹))]: 1711
//│ 	[Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]]: 1763
//│ 	[Unknown]: 1851
//│ 	[Known _lh_f_Known_0³]: 2017
//│ 	[Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]: 2031
//│ 	[Unknown]: 2244
//│ 	[Unknown]: 2440
//│ 	[Known [LH_C _lh_bt_LH_P2_0² [LH_C _lh_bt_LH_P2_1² [LH_N]]]]: 2867
//│ 	[Known [LH_N]]: 2995
//│ 	[Unknown]: 2996
//│ 	[Known [LH_N]]: 3215
//│ 	[Unknown]: 3216
//│ 	[Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]]: 3692
//│ 	[Unknown]: 3933
//│ 	[Known [LH_N]]: 3995
//│ 	[Unknown]: 3996
//│ case ls³⁹ of {LH_C h⁴⁰ t⁴⁰ => reverse_helper_lh_₀(t⁴⁰, [LH_C h⁴⁰ a¹⁴]) | LH_N  => a¹⁴}: 3096 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case xs⁴ of {LH_C h⁴¹ t⁴¹ => [LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)] | LH_N  => ys⁴}: 3108 --->
//│ 	[LH_N]: 3689
//│ 	[LH_C _lh_fillTable_LH_P2_0² [LH_N]]: 3690
//│ 	[LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]: 3691
//│ case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]}: 3127 --->
//│ 	[LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1801
//│ 	[LH_N]: 1802
//│ case xs⁵ of {LH_C hx² tx² => case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3129 --->
//│ 	[LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)]: 1870
//│ 	[LH_N]: 1871
//│ 	[LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)]: 3125
//│ 	[LH_N]: 3126
//│ 	[LH_N]: 3128
//│ case _lh_maxLevel_LH_C_0⁸ of {Assign _lh_maxLevel_Assign_0⁸ _lh_maxLevel_Assign_1⁸ => _lh_maxLevel_Assign_0⁸ | _  => error⁰}: 3138 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1⁸ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁸ _lh_maxLevel_LH_C_1⁸ => case _lh_maxLevel_LH_C_0⁸ of {Assign _lh_maxLevel_Assign_0⁸ _lh_maxLevel_Assign_1⁸ => _lh_maxLevel_Assign_0⁸ | _  => error⁰} | _  => error⁰}: 3140 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_complete_arg1³ of {CSP _lh_complete_CSP_0³ _lh_complete_CSP_1³ _lh_complete_CSP_2³ => (maxLevel_lh_₇(_lh_complete_arg2³) == _lh_complete_CSP_0³) | _  => error⁰}: 3151 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_maxLevel_LH_C_0⁹ of {Assign _lh_maxLevel_Assign_0⁹ _lh_maxLevel_Assign_1⁹ => _lh_maxLevel_Assign_0⁹ | _  => error⁰}: 3159 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1⁹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁹ _lh_maxLevel_LH_C_1⁹ => case _lh_maxLevel_LH_C_0⁹ of {Assign _lh_maxLevel_Assign_0⁹ _lh_maxLevel_Assign_1⁹ => _lh_maxLevel_Assign_0⁹ | _  => error⁰} | _  => error⁰}: 3161 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_maxLevel_LH_C_0¹⁰ of {Assign _lh_maxLevel_Assign_0¹⁰ _lh_maxLevel_Assign_1¹⁰ => _lh_maxLevel_Assign_0¹⁰ | _  => error⁰}: 3168 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1¹⁰ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹⁰ _lh_maxLevel_LH_C_1¹⁰ => case _lh_maxLevel_LH_C_0¹⁰ of {Assign _lh_maxLevel_Assign_0¹⁰ _lh_maxLevel_Assign_1¹⁰ => _lh_maxLevel_Assign_0¹⁰ | _  => error⁰} | _  => error⁰}: 3170 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case ls⁴⁰ of {LH_C h⁴² t⁴² => if (n² == 0) then h⁴² else atIndex_lh_₀((n² - 1), t⁴²) | LH_N  => error⁰}: 3205 --->
//│ 	[LH_N]: 1848
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)]: 1855
//│ 	[LH_N]: 1856
//│ 	[LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)]: 3316
//│ 	[LH_N]: 3317
//│ 	[LH_N]: 3319
//│ case _lh_knownConflict_Known_0² of {LH_C _lh_knownConflict_LH_C_0² _lh_knownConflict_LH_C_1² => [True] | _  => [False]}: 3224 --->
//│ 	[LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]: 3691
//│ case _lh_knownConflict_arg1² of {Known _lh_knownConflict_Known_0² => case _lh_knownConflict_Known_0² of {LH_C _lh_knownConflict_LH_C_0² _lh_knownConflict_LH_C_1² => [True] | _  => [False]} | _  => [False]}: 3226 --->
//│ 	[Unknown]: 2440
//│ 	[Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]]: 3692
//│ case _lh_foldTree_arg2³ of {Node _lh_foldTree_Node_0³ _lh_foldTree_Node_1³ => _lh_foldTree_arg1³(_lh_foldTree_Node_0³, map_lh_₀(foldTree_lh_₀(_lh_foldTree_arg1³), _lh_foldTree_Node_1³)) | _  => error⁰}: 3241 --->
//│ 	[Node _lh_mapTree_arg1³(_lh_mapTree_Node_0³) map_lh_₂(mapTree_lh_₀(_lh_mapTree_arg1³), _lh_mapTree_Node_1³)]: 2417
//│ case _lh_matchIdent⁷ of {LH_N  => (fun _lh_bt_arg1¹² -> (fun s¹² -> checkComplete_lh_₃(_lh_bt_arg1¹², s¹²))) | LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => let _lh_bt_Just_0³ = let _lh_bt_LH_P2_1³ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ in let _lh_bt_LH_P2_0³ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ in [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]
//│ in (fun _lh_bt_arg1¹³ -> (fun s¹³ -> _lh_bt_Just_0³)) | _  => error⁰}: 3294 --->
//│ 	[LH_C h¹⁵ filter_lh_₃(f¹⁵, t¹⁵)]: 1329
//│ 	[LH_N]: 1336
//│ case _lh_earliestInconsistency_arg2³ of {LH_N  => (fun _lh_bt_arg1¹¹ -> (fun s¹¹ -> checkComplete_lh_₂(_lh_bt_arg1¹¹, s¹¹))) | LH_C _lh_earliestInconsistency_LH_C_0⁶ _lh_earliestInconsistency_LH_C_1⁶ => let _lh_matchIdent⁷ = filter_lh_₃((fun _lh_funcomp_x³¹ -> not⁰(_lh_earliestInconsistency_CSP_2³(_lh_earliestInconsistency_LH_C_0⁶, _lh_funcomp_x³¹))), reverse_lh_₁(_lh_earliestInconsistency_LH_C_1⁶))
//│ in case _lh_matchIdent⁷ of {LH_N  => (fun _lh_bt_arg1¹² -> (fun s¹² -> checkComplete_lh_₃(_lh_bt_arg1¹², s¹²))) | LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => let _lh_bt_Just_0³ = let _lh_bt_LH_P2_1³ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ in let _lh_bt_LH_P2_0³ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ in [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]
//│ in (fun _lh_bt_arg1¹³ -> (fun s¹³ -> _lh_bt_Just_0³)) | _  => error⁰} | _  => error⁰}: 3297 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_earliestInconsistency_arg1³ of {CSP _lh_earliestInconsistency_CSP_0³ _lh_earliestInconsistency_CSP_1³ _lh_earliestInconsistency_CSP_2³ => case _lh_earliestInconsistency_arg2³ of {LH_N  => (fun _lh_bt_arg1¹¹ -> (fun s¹¹ -> checkComplete_lh_₂(_lh_bt_arg1¹¹, s¹¹))) | LH_C _lh_earliestInconsistency_LH_C_0⁶ _lh_earliestInconsistency_LH_C_1⁶ => let _lh_matchIdent⁷ = filter_lh_₃((fun _lh_funcomp_x³¹ -> not⁰(_lh_earliestInconsistency_CSP_2³(_lh_earliestInconsistency_LH_C_0⁶, _lh_funcomp_x³¹))), reverse_lh_₁(_lh_earliestInconsistency_LH_C_1⁶))
//│ in case _lh_matchIdent⁷ of {LH_N  => (fun _lh_bt_arg1¹² -> (fun s¹² -> checkComplete_lh_₃(_lh_bt_arg1¹², s¹²))) | LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => let _lh_bt_Just_0³ = let _lh_bt_LH_P2_1³ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ in let _lh_bt_LH_P2_0³ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ in [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]
//│ in (fun _lh_bt_arg1¹³ -> (fun s¹³ -> _lh_bt_Just_0³)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 3299 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]}: 3318 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1786
//│ 	[LH_N]: 1787
//│ case xs⁶ of {LH_C hx³ tx³ => case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3320 --->
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)]: 1855
//│ 	[LH_N]: 1856
//│ 	[LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)]: 3316
//│ 	[LH_N]: 3317
//│ 	[LH_N]: 3319
//│ case _lh_fst_arg1¹ of {LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹ | _  => error⁰}: 3327 --->
//│ 	[LH_P2 s⁴ let _lh_matchIdent³ = earliestInconsistency_lh_₂(_lh_bt_arg1⁴, s⁴)
//│ in _lh_matchIdent³(_lh_bt_arg1⁴, s⁴)]: 1429
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]]: 1602
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1620
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1625
//│ 	[LH_P2 _lh_f_LH_P2_0⁷ cs'³]: 1715
//│ 	[LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]]: 2018
//│ 	[LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]]: 2032
//│ 	[LH_P2 [LH_N] [Unknown]]: 2245
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴]: 2279
//│ case lss¹ of {LH_C h⁴³ t⁴³ => mappend_lh_₃(h⁴³, concat_lh_₀(t⁴³)) | LH_N  => [LH_N]}: 3338 --->
//│ 	[LH_C f²⁹(h²⁵) map_lh_₁₄(f²⁹, t²⁵)]: 2075
//│ 	[LH_N]: 2076
//│ case xs⁷ of {LH_C h⁴⁴ t⁴⁴ => [LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys⁷)] | LH_N  => ys⁷}: 3349 --->
//│ 	[LH_N]: 2202
//│ 	[LH_C _lh_leaves_Node_0¹ [LH_N]]: 2203
//│ 	[LH_N]: 3337
//│ 	[LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys⁷)]: 3347
//│ case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 3368 --->
//│ 	[LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)]: 3730
//│ 	[LH_N]: 3731
//│ case xs⁸ of {LH_C hx⁴ tx⁴ => case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 3370 --->
//│ 	[LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 2459
//│ 	[LH_N]: 2460
//│ 	[LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)]: 3366
//│ 	[LH_N]: 3367
//│ 	[LH_N]: 3369
//│ case ls⁴¹ of {LH_C h⁴⁵ t⁴⁵ => reverse_helper_lh_₂(t⁴⁵, [LH_C h⁴⁵ a¹⁵]) | LH_N  => a¹⁵}: 3383 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_label_arg1² of {Node _lh_label_Node_0² _lh_label_Node_1² => _lh_label_Node_0² | _  => error⁰}: 3389 --->
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³]: 1604
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]]: 1622
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³]: 1627
//│ case _lh_maxLevel_LH_C_0¹¹ of {Assign _lh_maxLevel_Assign_0¹¹ _lh_maxLevel_Assign_1¹¹ => _lh_maxLevel_Assign_0¹¹ | _  => error⁰}: 3433 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1¹¹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹¹ _lh_maxLevel_LH_C_1¹¹ => case _lh_maxLevel_LH_C_0¹¹ of {Assign _lh_maxLevel_Assign_0¹¹ _lh_maxLevel_Assign_1¹¹ => _lh_maxLevel_Assign_0¹¹ | _  => error⁰} | _  => error⁰}: 3435 --->
//│ 	[LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]: 2271
//│ case ls⁴² of {LH_C h⁴⁶ t⁴⁶ => [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)] | LH_N  => [LH_N]}: 3448 --->
//│ 	[LH_C f¹⁴(h¹⁴) map_lh_₈(f¹⁴, t¹⁴)]: 1305
//│ 	[LH_N]: 1306
//│ 	[LH_N]: 1621
//│ 	[LH_C f³⁵(h³³) map_lh_₉(f³⁵, t³³)]: 2770
//│ 	[LH_N]: 2771
//│ 	[LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)]: 2935
//│ 	[LH_N]: 2936
//│ 	[LH_C f³⁹(h³⁸) map_lh_₁₁(f³⁹, t³⁸)]: 2960
//│ 	[LH_N]: 2961
//│ 	[LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)]: 3776
//│ 	[LH_N]: 3777
//│ case _lh_all_arg2¹ of {LH_N  => [True] | LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₀(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False] | _  => error⁰}: 3496 --->
//│ 	[LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)]: 1984
//│ 	[LH_N]: 1985
//│ 	[LH_N]: 1987
//│ 	[LH_N]: 2437
//│ 	[LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)]: 2444
//│ 	[LH_N]: 2445
//│ case _lh_mapTree_arg2⁴ of {Node _lh_mapTree_Node_0⁴ _lh_mapTree_Node_1⁴ => [Node _lh_mapTree_arg1⁴(_lh_mapTree_Node_0⁴) map_lh_₉(mapTree_lh_₄(_lh_mapTree_arg1⁴), _lh_mapTree_Node_1⁴)] | _  => error⁰}: 3520 --->
//│ 	[Node _lh_initTree_arg2¹ map_lh_₁₆(initTree_lh_₀(_lh_initTree_arg1¹), _lh_initTree_arg1¹(_lh_initTree_arg2¹))]: 3480
//│ case _lh_complete_arg1⁴ of {CSP _lh_complete_CSP_0⁴ _lh_complete_CSP_1⁴ _lh_complete_CSP_2⁴ => (maxLevel_lh_₉(_lh_complete_arg2⁴) == _lh_complete_CSP_0⁴) | _  => error⁰}: 3532 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_nubBy_arg2² of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))] | _  => error⁰}: 3556 --->
//│ 	[LH_N]: 1357
//│ 	[LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1¹, _lh_deleteBy_arg2¹, _lh_deleteBy_LH_C_1¹)]: 1372
//│ 	[LH_C h¹⁸ filter_lh_₅(f¹⁹, t¹⁸)]: 1502
//│ 	[LH_N]: 1509
//│ 	[LH_N]: 2717
//│ 	[LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys⁴)]: 3106
//│ 	[LH_N]: 3536
//│ 	[LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1², filter_lh_₅((fun y² -> not⁰(_lh_nubBy_arg1²(_lh_nubBy_LH_C_0², y²))), _lh_nubBy_LH_C_1²))]: 3554
//│ case _lh_deleteBy_arg3² of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0² _lh_deleteBy_LH_C_1² => if _lh_deleteBy_arg1²(_lh_deleteBy_arg2², _lh_deleteBy_LH_C_0²) then _lh_deleteBy_LH_C_1² else [LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)] | _  => error⁰}: 3578 --->
//│ 	[LH_N]: 2966
//│ 	[LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]: 2984
//│ 	[LH_N]: 3560
//│ 	[LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]: 3575
//│ case _lh_safe_arg2¹ of {Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³)))) | _  => error⁰}: 3641 --->
//│ 	DeadCodeProd
//│ 	[Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]: 1754
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ 	[Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]: 3683
//│ case _lh_safe_arg1¹ of {Assign _lh_safe_Assign_0² _lh_safe_Assign_1² => case _lh_safe_arg2¹ of {Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³)))) | _  => error⁰} | _  => error⁰}: 3643 --->
//│ 	DeadCodeProd
//│ 	[Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹]: 1750
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ 	[Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²]: 3679
//│ case _lh_mapTree_arg2⁵ of {Node _lh_mapTree_Node_0⁵ _lh_mapTree_Node_1⁵ => [Node _lh_mapTree_arg1⁵(_lh_mapTree_Node_0⁵) map_lh_₅(mapTree_lh_₁(_lh_mapTree_arg1⁵), _lh_mapTree_Node_1⁵)] | _  => error⁰}: 3659 --->
//│ 	[Node _lh_initTree_arg2¹ map_lh_₁₆(initTree_lh_₀(_lh_initTree_arg1¹), _lh_initTree_arg1¹(_lh_initTree_arg2¹))]: 3480
//│ case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}: 3696 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵]: 3711
//│ case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]}: 3717 --->
//│ 	[LH_C a⁹ enumFromTo_lh_₄((a⁹ + 1), b⁶)]: 2095
//│ 	[LH_N]: 2096
//│ case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]}: 3732 --->
//│ 	[LH_C a¹⁰ enumFromTo_lh_₅((a¹⁰ + 1), b⁷)]: 2194
//│ 	[LH_N]: 2195
//│ case _lh_fillTable_arg2² of {CSP _lh_fillTable_CSP_0² _lh_fillTable_CSP_1² _lh_fillTable_CSP_2² => let f⁴⁷ = (fun cs⁵ -> (fun varval² -> let _lh_matchIdent¹⁰ = varval²
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}))
//│ in zipWith_lh_₂(zipWith_lh_₃(f⁴⁷), _lh_fillTable_arg3², let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromTo_lh_₅((_lh_fillTable_Assign_0² + 1), _lh_fillTable_CSP_0²))) | _  => error⁰}: 3749 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_fillTable_LH_C_0² of {Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1² => case _lh_fillTable_arg2² of {CSP _lh_fillTable_CSP_0² _lh_fillTable_CSP_1² _lh_fillTable_CSP_2² => let f⁴⁷ = (fun cs⁵ -> (fun varval² -> let _lh_matchIdent¹⁰ = varval²
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}))
//│ in zipWith_lh_₂(zipWith_lh_₃(f⁴⁷), _lh_fillTable_arg3², let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromTo_lh_₅((_lh_fillTable_Assign_0² + 1), _lh_fillTable_CSP_0²))) | _  => error⁰} | _  => error⁰}: 3751 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_fillTable_arg1² of {LH_N  => _lh_fillTable_arg3² | LH_C _lh_fillTable_LH_C_0² _lh_fillTable_LH_C_1² => case _lh_fillTable_LH_C_0² of {Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1² => case _lh_fillTable_arg2² of {CSP _lh_fillTable_CSP_0² _lh_fillTable_CSP_1² _lh_fillTable_CSP_2² => let f⁴⁷ = (fun cs⁵ -> (fun varval² -> let _lh_matchIdent¹⁰ = varval²
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}))
//│ in zipWith_lh_₂(zipWith_lh_₃(f⁴⁷), _lh_fillTable_arg3², let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁴(enumFromTo_lh_₅((_lh_fillTable_Assign_0² + 1), _lh_fillTable_CSP_0²))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 3753 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 3760 --->
//│ 	[LH_P2 s⁴ let _lh_matchIdent³ = earliestInconsistency_lh_₂(_lh_bt_arg1⁴, s⁴)
//│ in _lh_matchIdent³(_lh_bt_arg1⁴, s⁴)]: 1429
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]]: 1602
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1620
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1625
//│ 	[LH_P2 _lh_f_LH_P2_0⁷ cs'³]: 1715
//│ 	[LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]]: 2018
//│ 	[LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]]: 2032
//│ 	[LH_P2 [LH_N] [Unknown]]: 2245
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴]: 2279
//│ case ls⁴³ of {LH_C h⁴⁷ t⁴⁷ => t⁴⁷ | LH_N  => error⁰}: 3765 --->
//│ 	[LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)]: 1870
//│ 	[LH_N]: 1871
//│ 	[LH_C [LH_N] let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁹(enumFromTo_lh_₃(1, _lh_emptyTable_CSP_0¹))]: 1882
//│ 	[LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)]: 3125
//│ 	[LH_N]: 3126
//│ 	[LH_N]: 3128
//│ case ls⁴⁴ of {LH_C h⁴⁸ t⁴⁸ => [LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)] | LH_N  => [LH_N]}: 3778 --->
//│ 	[LH_C f³⁷(h³⁵) map_lh_₅(f³⁷, t³⁵)]: 2798
//│ 	[LH_N]: 2799
//│ case _lh_deleteBy_arg3³ of {LH_N  => [LH_N] | LH_C _lh_deleteBy_LH_C_0³ _lh_deleteBy_LH_C_1³ => if _lh_deleteBy_arg1³(_lh_deleteBy_arg2³, _lh_deleteBy_LH_C_0³) then _lh_deleteBy_LH_C_1³ else [LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)] | _  => error⁰}: 3811 --->
//│ 	[LH_N]: 3793
//│ 	[LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808
//│ 	[LH_N]: 4116
//│ 	[LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134
//│ case _lh_value_arg1² of {Assign _lh_value_Assign_0² _lh_value_Assign_1² => _lh_value_Assign_1² | _  => error⁰}: 3818 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_mapTree_arg2⁶ of {Node _lh_mapTree_Node_0⁶ _lh_mapTree_Node_1⁶ => [Node _lh_mapTree_arg1⁶(_lh_mapTree_Node_0⁶) map_lh_₁₁(mapTree_lh_₅(_lh_mapTree_arg1⁶), _lh_mapTree_Node_1⁶)] | _  => error⁰}: 3839 --->
//│ 	[Node _lh_mapTree_arg1²(_lh_mapTree_Node_0²) map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1²), _lh_mapTree_Node_1²)]: 1390
//│ case _lh_level_arg1⁶ of {Assign _lh_level_Assign_0⁶ _lh_level_Assign_1⁶ => _lh_level_Assign_0⁶ | _  => error⁰}: 3845 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_complete_arg1⁵ of {CSP _lh_complete_CSP_0⁵ _lh_complete_CSP_1⁵ _lh_complete_CSP_2⁵ => (maxLevel_lh_₂(_lh_complete_arg2⁵) == _lh_complete_CSP_0⁵) | _  => error⁰}: 3856 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case ls⁴⁶ of {LH_C h⁴⁹ t⁴⁹ => [LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)] | LH_N  => [LH_N]}: 3878 --->
//│ 	[LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)]: 2141
//│ 	[LH_N]: 2148
//│ case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]}: 3885 --->
//│ 	[LH_N]: 1612
//│ 	[LH_N]: 1896
//│ 	[LH_N]: 2497
//│ 	[LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]: 2652
//│ 	[LH_C h³² mappend_lh_₀(t³², ys³)]: 2756
//│ 	[LH_N]: 3793
//│ 	[LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808
//│ 	[LH_N]: 4116
//│ 	[LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134
//│ case _lh_knownConflict_arg1³ of {Known _lh_knownConflict_Known_0³ => case _lh_knownConflict_Known_0³ of {LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True] | _  => [False]} | _  => [False]}: 3887 --->
//│ 	[Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]: 1614
//│ case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 3905 --->
//│ 	[LH_P2 s⁴ let _lh_matchIdent³ = earliestInconsistency_lh_₂(_lh_bt_arg1⁴, s⁴)
//│ in _lh_matchIdent³(_lh_bt_arg1⁴, s⁴)]: 1429
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]]: 1602
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1620
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ cs'²]: 1625
//│ 	[LH_P2 _lh_f_LH_P2_0⁷ cs'³]: 1715
//│ 	[LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]]: 2018
//│ 	[LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]]: 2032
//│ 	[LH_P2 [LH_N] [Unknown]]: 2245
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴]: 2279
//│ case _lh_notElem_arg2² of {LH_N  => [True] | LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1², _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1², _lh_notElem_LH_C_1²) | _  => error⁰}: 3922 --->
//│ 	[LH_N]: 1612
//│ 	[LH_N]: 1896
//│ 	[LH_N]: 2497
//│ 	[LH_N]: 2650
//│ 	[LH_C _lh_bt_LH_P2_1¹ [LH_N]]: 2651
//│ 	[LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]: 2652
//│ 	[LH_C h³² mappend_lh_₀(t³², ys³)]: 2756
//│ 	[LH_N]: 3793
//│ 	[LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808
//│ 	[LH_N]: 4116
//│ 	[LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134
//│ case ls⁴⁷ of {LH_C h⁵⁰ t⁵⁰ => h⁵⁰ | LH_N  => error⁰}: 3928 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 1690
//│ 	[LH_N]: 1695
//│ case _lh_f_LH_P2_0¹⁰ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰] | LH_C _lh_f_LH_C_0² _lh_f_LH_C_1² => let tableEntry² = atIndex_lh_₁((value_lh_₁(_lh_f_LH_C_0²) - 1), head_lh_₂(_lh_f_LH_P2_1¹⁰))
//│ in let cs⁶ = if polyEq⁰(tableEntry², [Unknown]) then checkComplete_lh_₇(_lh_f_arg1⁸, [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]) else tableEntry²
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰] | _  => error⁰}: 3974 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case _lh_f_arg2⁶ of {LH_P2 _lh_f_LH_P2_0¹⁰ _lh_f_LH_P2_1¹⁰ => case _lh_f_LH_P2_0¹⁰ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰] | LH_C _lh_f_LH_C_0² _lh_f_LH_C_1² => let tableEntry² = atIndex_lh_₁((value_lh_₁(_lh_f_LH_C_0²) - 1), head_lh_₂(_lh_f_LH_P2_1¹⁰))
//│ in let cs⁶ = if polyEq⁰(tableEntry², [Unknown]) then checkComplete_lh_₇(_lh_f_arg1⁸, [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]) else tableEntry²
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰] | _  => error⁰} | _  => error⁰}: 3976 --->
//│ 	[LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹]: 1653
//│ case _lh_maxLevel_LH_C_0¹² of {Assign _lh_maxLevel_Assign_0¹² _lh_maxLevel_Assign_1¹² => _lh_maxLevel_Assign_0¹² | _  => error⁰}: 4005 --->
//│ 	[Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³]: 2686
//│ case _lh_maxLevel_arg1¹² of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹² _lh_maxLevel_LH_C_1¹² => case _lh_maxLevel_LH_C_0¹² of {Assign _lh_maxLevel_Assign_0¹² _lh_maxLevel_Assign_1¹² => _lh_maxLevel_Assign_0¹² | _  => error⁰} | _  => error⁰}: 4007 --->
//│ 	[LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹]: 2688
//│ 	[LH_N]: 2710
//│ case xs⁹ of {LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)] | LH_N  => ys⁹}: 4018 --->
//│ 	[LH_N]: 2029
//│ 	[LH_N]: 2966
//│ 	[LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]: 2984
//│ 	[LH_N]: 3283
//│ 	[LH_C _lh_bt_LH_P2_1³ [LH_N]]: 3284
//│ 	[LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]: 3285
//│ 	[LH_N]: 3560
//│ 	[LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]: 3575
//│ 	[LH_N]: 3607
//│ 	[LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)]: 4016
//│ 	[LH_N]: 4221
//│ case _lh_complete_arg1⁶ of {CSP _lh_complete_CSP_0⁶ _lh_complete_CSP_1⁶ _lh_complete_CSP_2⁶ => (maxLevel_lh_₅(_lh_complete_arg2⁶) == _lh_complete_CSP_0⁶) | _  => error⁰}: 4030 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_fst_arg1² of {LH_P2 _lh_fst_LH_P2_0² _lh_fst_LH_P2_1² => _lh_fst_LH_P2_0² | _  => error⁰}: 4036 --->
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹]: 2247
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹]: 2281
//│ case _lh_mapTree_arg2⁷ of {Node _lh_mapTree_Node_0⁷ _lh_mapTree_Node_1⁷ => [Node _lh_mapTree_arg1⁷(_lh_mapTree_Node_0⁷) map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1⁷), _lh_mapTree_Node_1⁷)] | _  => error⁰}: 4071 --->
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²] map_lh_₆(cacheChecks_lh_₀(_lh_cacheChecks_arg1², fillTable_lh_₀(_lh_cacheChecks_Node_0², _lh_cacheChecks_arg1², tail_lh_₀(_lh_cacheChecks_arg2²))), _lh_cacheChecks_Node_1²)]: 2173
//│ case _lh_complete_arg1⁷ of {CSP _lh_complete_CSP_0⁷ _lh_complete_CSP_1⁷ _lh_complete_CSP_2⁷ => (maxLevel_lh_₆(_lh_complete_arg2⁷) == _lh_complete_CSP_0⁷) | _  => error⁰}: 4098 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case ls⁴⁸ of {LH_C h⁵² t⁵² => [LH_C f⁵¹(h⁵²) map_lh_₄(f⁵¹, t⁵²)] | LH_N  => [LH_N]}: 4112 --->
//│ 	[LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)]: 3776
//│ 	[LH_N]: 3777
//│ case _lh_nubBy_arg2³ of {LH_N  => [LH_N] | LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))] | _  => error⁰}: 4136 --->
//│ 	[LH_N]: 1612
//│ 	[LH_C h²⁸ filter_lh_₀(f³², t²⁸)]: 2230
//│ 	[LH_N]: 2237
//│ 	[LH_C h³² mappend_lh_₀(t³², ys³)]: 2756
//│ 	[LH_N]: 3793
//│ 	[LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1³, _lh_deleteBy_arg2³, _lh_deleteBy_LH_C_1³)]: 3808
//│ 	[LH_N]: 4116
//│ 	[LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1³, filter_lh_₀((fun y³ -> not⁰(_lh_nubBy_arg1³(_lh_nubBy_LH_C_0³, y³))), _lh_nubBy_LH_C_1³))]: 4134
//│ case ls⁴⁹ of {LH_C h⁵³ t⁵³ => if f⁵²(h⁵³) then [LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)] else filter_lh_₂(f⁵², t⁵³) | LH_N  => [LH_N]}: 4157 --->
//│ 	[LH_N]: 2966
//│ 	[LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1¹, filter_lh_₂((fun y¹ -> not⁰(_lh_nubBy_arg1¹(_lh_nubBy_LH_C_0¹, y¹))), _lh_nubBy_LH_C_1¹))]: 2984
//│ 	[LH_N]: 3560
//│ 	[LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1², _lh_deleteBy_arg2², _lh_deleteBy_LH_C_1²)]: 3575
//│ 	[LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys⁹)]: 4016
//│ 	[LH_C h⁵³ filter_lh_₂(f⁵², t⁵³)]: 4149
//│ 	[LH_N]: 4156
//│ case ls⁵⁰ of {LH_C h⁵⁴ t⁵⁴ => [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)] | LH_N  => [LH_N]}: 4171 --->
//│ 	[LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)]: 2692
//│ 	[LH_N]: 2693
//│ 	[LH_N]: 2704
//│ case _lh_complete_arg1⁸ of {CSP _lh_complete_CSP_0⁸ _lh_complete_CSP_1⁸ _lh_complete_CSP_2⁸ => (maxLevel_lh_₄(_lh_complete_arg2⁸) == _lh_complete_CSP_0⁸) | _  => error⁰}: 4202 --->
//│ 	[CSP _lh_queens_arg1¹ _lh_queens_arg1¹ safe_lh_₀]: 2747
//│ case _lh_label_arg1³ of {Node _lh_label_Node_0³ _lh_label_Node_1³ => _lh_label_Node_0³ | _  => error⁰}: 4214 --->
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴]: 2020
//│ 	[Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴]: 2034
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C h¹⁰ a⁴]: 1212 --->
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => if f¹⁵(h¹⁵) then [LH_C h¹⁵ filter_lh_₃(f¹⁵, t¹⁵)] else filter_lh_₃(f¹⁵, t¹⁵) | LH_N  => [LH_N]}: 1337
//│ [LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)]: 1227 --->
//│ 	case ls¹³ of {LH_C h¹⁴ t¹⁴ => [LH_C f¹⁴(h¹⁴) map_lh_₈(f¹⁴, t¹⁴)] | LH_N  => [LH_N]}: 1307
//│ [LH_N]: 1228 --->
//│ 	case ls¹³ of {LH_C h¹⁴ t¹⁴ => [LH_C f¹⁴(h¹⁴) map_lh_₈(f¹⁴, t¹⁴)] | LH_N  => [LH_N]}: 1307
//│ [LH_C f¹³(h¹³) map_lh_₁(f¹³, t¹³)]: 1291 --->
//│ 	case _lh_combine_arg1¹ of {LH_N  => _lh_combine_arg2¹ | LH_C _lh_combine_LH_C_0¹ _lh_combine_LH_C_1¹ => case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1580
//│ [LH_N]: 1292 --->
//│ 	case _lh_combine_arg1¹ of {LH_N  => _lh_combine_arg2¹ | LH_C _lh_combine_LH_C_0¹ _lh_combine_LH_C_1¹ => case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1580
//│ [Node _lh_mapTree_arg1²(_lh_mapTree_Node_0²) map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1²), _lh_mapTree_Node_1²)]: 1390 --->
//│ 	case _lh_mapTree_arg2⁶ of {Node _lh_mapTree_Node_0⁶ _lh_mapTree_Node_1⁶ => [Node _lh_mapTree_arg1⁶(_lh_mapTree_Node_0⁶) map_lh_₁₁(mapTree_lh_₅(_lh_mapTree_arg1⁶), _lh_mapTree_Node_1⁶)] | _  => error⁰}: 3839
//│ [LH_C a⁵ enumFromTo_lh_₀((a⁵ + 1), b²)]: 1528 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 1788
//│ [LH_N]: 1529 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 1788
//│ [LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b³)]: 1548 --->
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]}: 1857
//│ [LH_N]: 1549 --->
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]}: 1857
//│ [LH_C f²⁰(h¹⁹) map_lh_₆(f²⁰, t¹⁹)]: 1592 --->
//│ 	case ls¹⁰ of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 1229
//│ [LH_N]: 1593 --->
//│ 	case ls¹⁰ of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 1229
//│ [LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹]: 1653 --->
//│ 	case _lh_f_arg2⁶ of {LH_P2 _lh_f_LH_P2_0¹⁰ _lh_f_LH_P2_1¹⁰ => case _lh_f_LH_P2_0¹⁰ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰] | LH_C _lh_f_LH_C_0² _lh_f_LH_C_1² => let tableEntry² = atIndex_lh_₁((value_lh_₁(_lh_f_LH_C_0²) - 1), head_lh_₂(_lh_f_LH_P2_1¹⁰))
//│ in let cs⁶ = if polyEq⁰(tableEntry², [Unknown]) then checkComplete_lh_₇(_lh_f_arg1⁸, [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]) else tableEntry²
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰] | _  => error⁰} | _  => error⁰}: 3976
//│ [Node [LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹] map_lh_₁₀(cacheChecks_lh_₁(_lh_cacheChecks_arg1¹, fillTable_lh_₁(_lh_cacheChecks_Node_0¹, _lh_cacheChecks_arg1¹, tail_lh_₁(_lh_cacheChecks_arg2¹))), _lh_cacheChecks_Node_1¹)]: 1671 --->
//│ 	case _lh_mapTree_arg2² of {Node _lh_mapTree_Node_0² _lh_mapTree_Node_1² => [Node _lh_mapTree_arg1²(_lh_mapTree_Node_0²) map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1²), _lh_mapTree_Node_1²)] | _  => error⁰}: 1392
//│ [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸]: 1782 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}: 1767
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1786 --->
//│ 	case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]}: 3318
//│ [LH_N]: 1787 --->
//│ 	case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]}: 3318
//│ [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1801 --->
//│ 	case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]}: 3127
//│ [LH_N]: 1802 --->
//│ 	case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]}: 3127
//│ [Known [LH_N]]: 1897 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [Unknown]: 1898 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [LH_C f²⁵(h²¹) map_lh_₁₀(f²⁵, t²¹)]: 1911 --->
//│ 	case ls³² of {LH_C h³⁴ t³⁴ => [LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)] | LH_N  => [LH_N]}: 2786
//│ [LH_N]: 1912 --->
//│ 	case ls³² of {LH_C h³⁴ t³⁴ => [LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)] | LH_N  => [LH_N]}: 2786
//│ [LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁴)]: 1942 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 1803
//│ [LH_N]: 1943 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 1803
//│ [LH_C f²⁹(h²⁵) map_lh_₁₄(f²⁹, t²⁵)]: 2075 --->
//│ 	case lss¹ of {LH_C h⁴³ t⁴³ => mappend_lh_₃(h⁴³, concat_lh_₀(t⁴³)) | LH_N  => [LH_N]}: 3338
//│ [LH_N]: 2076 --->
//│ 	case lss¹ of {LH_C h⁴³ t⁴³ => mappend_lh_₃(h⁴³, concat_lh_₀(t⁴³)) | LH_N  => [LH_N]}: 3338
//│ [LH_C a⁹ enumFromTo_lh_₄((a⁹ + 1), b⁶)]: 2095 --->
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]}: 3717
//│ [LH_N]: 2096 --->
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]}: 3717
//│ [LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)]: 2141 --->
//│ 	case ls⁴⁶ of {LH_C h⁴⁹ t⁴⁹ => [LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)] | LH_N  => [LH_N]}: 3878
//│ [LH_N]: 2148 --->
//│ 	case ls⁴⁶ of {LH_C h⁴⁹ t⁴⁹ => [LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)] | LH_N  => [LH_N]}: 3878
//│ [LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²]: 2155 --->
//│ 	case _lh_f_arg2⁵ of {LH_P2 _lh_f_LH_P2_0⁹ _lh_f_LH_P2_1⁹ => case _lh_f_LH_P2_0⁹ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹] | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => let tableEntry¹ = atIndex_lh_₀((value_lh_₀(_lh_f_LH_C_0¹) - 1), head_lh_₀(_lh_f_LH_P2_1⁹))
//│ in let cs⁴ = if polyEq⁰(tableEntry¹, [Unknown]) then checkComplete_lh_₄(_lh_f_arg1⁷, [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]) else tableEntry¹
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 2287
//│ [Node [LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²] map_lh_₆(cacheChecks_lh_₀(_lh_cacheChecks_arg1², fillTable_lh_₀(_lh_cacheChecks_Node_0², _lh_cacheChecks_arg1², tail_lh_₀(_lh_cacheChecks_arg2²))), _lh_cacheChecks_Node_1²)]: 2173 --->
//│ 	case _lh_mapTree_arg2⁷ of {Node _lh_mapTree_Node_0⁷ _lh_mapTree_Node_1⁷ => [Node _lh_mapTree_arg1⁷(_lh_mapTree_Node_0⁷) map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1⁷), _lh_mapTree_Node_1⁷)] | _  => error⁰}: 4071
//│ [LH_C a¹⁰ enumFromTo_lh_₅((a¹⁰ + 1), b⁷)]: 2194 --->
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]}: 3732
//│ [LH_N]: 2195 --->
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]}: 3732
//│ [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹]: 2247 --->
//│ 	case _lh_fst_arg1² of {LH_P2 _lh_fst_LH_P2_0² _lh_fst_LH_P2_1² => _lh_fst_LH_P2_0² | _  => error⁰}: 4036
//│ [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]: 2271 --->
//│ 	case _lh_maxLevel_arg1¹¹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹¹ _lh_maxLevel_LH_C_1¹¹ => case _lh_maxLevel_LH_C_0¹¹ of {Assign _lh_maxLevel_Assign_0¹¹ _lh_maxLevel_Assign_1¹¹ => _lh_maxLevel_Assign_0¹¹ | _  => error⁰} | _  => error⁰}: 3435
//│ [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹]: 2281 --->
//│ 	case _lh_fst_arg1² of {LH_P2 _lh_fst_LH_P2_0² _lh_fst_LH_P2_1² => _lh_fst_LH_P2_0² | _  => error⁰}: 4036
//│ [Node _lh_mapTree_arg1³(_lh_mapTree_Node_0³) map_lh_₂(mapTree_lh_₀(_lh_mapTree_arg1³), _lh_mapTree_Node_1³)]: 2417 --->
//│ 	case _lh_foldTree_arg2³ of {Node _lh_foldTree_Node_0³ _lh_foldTree_Node_1³ => _lh_foldTree_arg1³(_lh_foldTree_Node_0³, map_lh_₀(foldTree_lh_₀(_lh_foldTree_arg1³), _lh_foldTree_Node_1³)) | _  => error⁰}: 3241
//│ [Known [LH_N]]: 2498 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [Unknown]: 2499 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [LH_C a¹¹ enumFromTo_lh_₈((a¹¹ + 1), b⁸)]: 2518 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)] | LH_N  => [LH_N]}: 2694
//│ [LH_N]: 2519 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)] | LH_N  => [LH_N]}: 2694
//│ [LH_C f³⁴(h³⁰) map_lh_₂(f³⁴, t³⁰)]: 2540 --->
//│ 	case ls³⁵ of {LH_C h³⁷ t³⁷ => [LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)] | LH_N  => [LH_N]}: 2937
//│ [LH_N]: 2541 --->
//│ 	case ls³⁵ of {LH_C h³⁷ t³⁷ => [LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)] | LH_N  => [LH_N]}: 2937
//│ [Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]: 2653 --->
//│ 	case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631
//│ [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)]: 2692 --->
//│ 	case ls⁵⁰ of {LH_C h⁵⁴ t⁵⁴ => [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)] | LH_N  => [LH_N]}: 4171
//│ [LH_N]: 2693 --->
//│ 	case ls⁵⁰ of {LH_C h⁵⁴ t⁵⁴ => [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)] | LH_N  => [LH_N]}: 4171
//│ [LH_N]: 2704 --->
//│ 	case ls⁵⁰ of {LH_C h⁵⁴ t⁵⁴ => [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)] | LH_N  => [LH_N]}: 4171
//│ [LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)]: 2784 --->
//│ 	case ls³⁶ of {LH_C h³⁸ t³⁸ => [LH_C f³⁹(h³⁸) map_lh_₁₁(f³⁹, t³⁸)] | LH_N  => [LH_N]}: 2962
//│ [LH_N]: 2785 --->
//│ 	case ls³⁶ of {LH_C h³⁸ t³⁸ => [LH_C f³⁹(h³⁸) map_lh_₁₁(f³⁹, t³⁸)] | LH_N  => [LH_N]}: 2962
//│ [LH_C f³⁷(h³⁵) map_lh_₅(f³⁷, t³⁵)]: 2798 --->
//│ 	case ls⁴⁴ of {LH_C h⁴⁸ t⁴⁸ => [LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)] | LH_N  => [LH_N]}: 3778
//│ [LH_N]: 2799 --->
//│ 	case ls⁴⁴ of {LH_C h⁴⁸ t⁴⁸ => [LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)] | LH_N  => [LH_N]}: 3778
//│ [LH_N]: 3024 --->
//│ 	case ls³⁷ of {LH_C h³⁹ t³⁹ => if f⁴⁰(h³⁹) then [LH_C h³⁹ filter_lh_₄(f⁴⁰, t³⁹)] else filter_lh_₄(f⁴⁰, t³⁹) | LH_N  => [LH_N]}: 3018
//│ [LH_C a¹³ enumFromTo_lh_₆((a¹³ + 1), b¹⁰)]: 3082 --->
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]}: 2446
//│ [LH_N]: 3083 --->
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]}: 2446
//│ [LH_C h⁴⁰ a¹⁴]: 3093 --->
//│ 	case ls¹⁵ of {LH_C h¹⁶ t¹⁶ => if f¹⁷(h¹⁶) then [LH_C h¹⁶ filter_lh_₁(f¹⁷, t¹⁶)] else filter_lh_₁(f¹⁷, t¹⁶) | LH_N  => [LH_N]}: 1463
//│ [Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]: 3286 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ [LH_C h⁴⁵ a¹⁵]: 3380 --->
//│ 	case ls³⁷ of {LH_C h³⁹ t³⁹ => if f⁴⁰(h³⁹) then [LH_C h³⁹ filter_lh_₄(f⁴⁰, t³⁹)] else filter_lh_₄(f⁴⁰, t³⁹) | LH_N  => [LH_N]}: 3018
//│ [LH_N]: 3401 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C fc_lh_₀ [LH_N]]: 3402 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]: 3403 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]: 3404 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C bm_lh_₀ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]]: 3405 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_C bt_lh_₂ [LH_C bm_lh_₀ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]]]: 3406 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844
//│ [LH_P2 s¹⁴ let _lh_matchIdent⁸ = earliestInconsistency_lh_₀(_lh_bt_arg1¹⁴, s¹⁴)
//│ in _lh_matchIdent⁸(_lh_bt_arg1¹⁴, s¹⁴)]: 3421 --->
//│ 	case _lh_f_arg1⁴ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰} | _  => error⁰}: 1633
//│ [LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)]: 3446 --->
//│ 	case ls²² of {LH_C h²³ t²³ => if f²⁷(h²³) then [LH_C h²³ filter_lh_₇(f²⁷, t²³)] else filter_lh_₇(f²⁷, t²³) | LH_N  => [LH_N]}: 2010
//│ [LH_N]: 3447 --->
//│ 	case ls²² of {LH_C h²³ t²³ => if f²⁷(h²³) then [LH_C h²³ filter_lh_₇(f²⁷, t²³)] else filter_lh_₇(f²⁷, t²³) | LH_N  => [LH_N]}: 2010
//│ [LH_P2 s¹⁵ let _lh_matchIdent⁹ = earliestInconsistency_lh_₁(_lh_bt_arg1¹⁵, s¹⁵)
//│ in _lh_matchIdent⁹(_lh_bt_arg1¹⁵, s¹⁵)]: 3463 --->
//│ 	case _lh_f_arg1⁶ of {LH_P2 _lh_f_LH_P2_0⁸ _lh_f_LH_P2_1⁸ => case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰} | _  => error⁰}: 2038
//│ [LH_C a¹⁶ enumFromTo_lh_₃((a¹⁶ + 1), b¹¹)]: 3597 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]}: 1872
//│ [LH_N]: 3598 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]}: 1872
//│ [Known [LH_N]]: 3608 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ [Unknown]: 3609 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ [Node _lh_mapTree_arg1⁵(_lh_mapTree_Node_0⁵) map_lh_₅(mapTree_lh_₁(_lh_mapTree_arg1⁵), _lh_mapTree_Node_1⁵)]: 3657 --->
//│ 	case _lh_foldTree_arg2¹ of {Node _lh_foldTree_Node_0¹ _lh_foldTree_Node_1¹ => _lh_foldTree_arg1¹(_lh_foldTree_Node_0¹, map_lh_₃(foldTree_lh_₁(_lh_foldTree_arg1¹), _lh_foldTree_Node_1¹)) | _  => error⁰}: 2324
//│ [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵]: 3711 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}: 3696
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)]: 3715 --->
//│ 	case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]}: 1986
//│ [LH_N]: 3716 --->
//│ 	case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]}: 1986
//│ [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)]: 3730 --->
//│ 	case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 3368
//│ [LH_N]: 3731 --->
//│ 	case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 3368
//│ [LH_N]: 3823 --->
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => if f¹⁵(h¹⁵) then [LH_C h¹⁵ filter_lh_₃(f¹⁵, t¹⁵)] else filter_lh_₃(f¹⁵, t¹⁵) | LH_N  => [LH_N]}: 1337
//│ [LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)]: 3876 --->
//│ 	case ls²⁸ of {LH_C h²⁹ t²⁹ => (1 + length_lh_₀(t²⁹)) | LH_N  => 0}: 2309
//│ [LH_N]: 3877 --->
//│ 	case ls²⁸ of {LH_C h²⁹ t²⁹ => (1 + length_lh_₀(t²⁹)) | LH_N  => 0}: 2309
//│ [LH_P2 [LH_N] [Unknown]]: 3934 --->
//│ 	case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰}: 1719
//│ [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰]: 3936 --->
//│ 	case _lh_f_arg1⁵ of {LH_P2 _lh_f_LH_P2_0⁶ _lh_f_LH_P2_1⁶ => case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰} | _  => error⁰}: 1721
//│ [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]: 3960 --->
//│ 	case _lh_maxLevel_arg1⁴ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁴ _lh_maxLevel_LH_C_1⁴ => case _lh_maxLevel_LH_C_0⁴ of {Assign _lh_maxLevel_Assign_0⁴ _lh_maxLevel_Assign_1⁴ => _lh_maxLevel_Assign_0⁴ | _  => error⁰} | _  => error⁰}: 1648
//│ [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶]: 3968 --->
//│ 	case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰}: 1719
//│ [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰]: 3970 --->
//│ 	case _lh_f_arg1⁵ of {LH_P2 _lh_f_LH_P2_0⁶ _lh_f_LH_P2_1⁶ => case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰} | _  => error⁰}: 1721
//│ [LH_C a¹⁷ enumFromTo_lh_₇((a¹⁷ + 1), b¹²)]: 4053 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 2461
//│ [LH_N]: 4054 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 2461
//│ [Node _lh_mapTree_arg1⁷(_lh_mapTree_Node_0⁷) map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1⁷), _lh_mapTree_Node_1⁷)]: 4069 --->
//│ 	case _lh_mapTree_arg2¹ of {Node _lh_mapTree_Node_0¹ _lh_mapTree_Node_1¹ => [Node _lh_mapTree_arg1¹(_lh_mapTree_Node_0¹) map_lh_₈(mapTree_lh_₃(_lh_mapTree_arg1¹), _lh_mapTree_Node_1¹)] | _  => error⁰}: 1353
//│ [LH_C f⁵¹(h⁵²) map_lh_₄(f⁵¹, t⁵²)]: 4110 --->
//│ 	case _lh_combine_arg1² of {LH_N  => _lh_combine_arg2² | LH_C _lh_combine_LH_C_0² _lh_combine_LH_C_1² => case _lh_combine_LH_C_0² of {LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2608
//│ [LH_N]: 4111 --->
//│ 	case _lh_combine_arg1² of {LH_N  => _lh_combine_arg2² | LH_C _lh_combine_LH_C_0² _lh_combine_LH_C_1² => case _lh_combine_LH_C_0² of {LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2608
//│ [LH_N]: 4208 --->
//│ 	case ls¹⁵ of {LH_C h¹⁶ t¹⁶ => if f¹⁷(h¹⁶) then [LH_C h¹⁶ filter_lh_₁(f¹⁷, t¹⁶)] else filter_lh_₁(f¹⁷, t¹⁶) | LH_N  => [LH_N]}: 1463
//│ [Known [LH_N]]: 4222 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ [Unknown]: 4223 --->
//│ 	case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036
//│ ------------------
//│ case ls¹⁰ of {LH_C h¹¹ t¹¹ => [LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)] | LH_N  => [LH_N]}: 1229 --->
//│ 	[LH_C f²⁰(h¹⁹) map_lh_₆(f²⁰, t¹⁹)]: 1592
//│ 	[LH_N]: 1593
//│ case ls¹³ of {LH_C h¹⁴ t¹⁴ => [LH_C f¹⁴(h¹⁴) map_lh_₈(f¹⁴, t¹⁴)] | LH_N  => [LH_N]}: 1307 --->
//│ 	[LH_C f¹¹(h¹¹) map_lh_₇(f¹¹, t¹¹)]: 1227
//│ 	[LH_N]: 1228
//│ case ls¹⁴ of {LH_C h¹⁵ t¹⁵ => if f¹⁵(h¹⁵) then [LH_C h¹⁵ filter_lh_₃(f¹⁵, t¹⁵)] else filter_lh_₃(f¹⁵, t¹⁵) | LH_N  => [LH_N]}: 1337 --->
//│ 	[LH_C h¹⁰ a⁴]: 1212
//│ 	[LH_N]: 3823
//│ case _lh_mapTree_arg2¹ of {Node _lh_mapTree_Node_0¹ _lh_mapTree_Node_1¹ => [Node _lh_mapTree_arg1¹(_lh_mapTree_Node_0¹) map_lh_₈(mapTree_lh_₃(_lh_mapTree_arg1¹), _lh_mapTree_Node_1¹)] | _  => error⁰}: 1353 --->
//│ 	[Node _lh_mapTree_arg1⁷(_lh_mapTree_Node_0⁷) map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1⁷), _lh_mapTree_Node_1⁷)]: 4069
//│ case _lh_mapTree_arg2² of {Node _lh_mapTree_Node_0² _lh_mapTree_Node_1² => [Node _lh_mapTree_arg1²(_lh_mapTree_Node_0²) map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1²), _lh_mapTree_Node_1²)] | _  => error⁰}: 1392 --->
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹] map_lh_₁₀(cacheChecks_lh_₁(_lh_cacheChecks_arg1¹, fillTable_lh_₁(_lh_cacheChecks_Node_0¹, _lh_cacheChecks_arg1¹, tail_lh_₁(_lh_cacheChecks_arg2¹))), _lh_cacheChecks_Node_1¹)]: 1671
//│ case ls¹⁵ of {LH_C h¹⁶ t¹⁶ => if f¹⁷(h¹⁶) then [LH_C h¹⁶ filter_lh_₁(f¹⁷, t¹⁶)] else filter_lh_₁(f¹⁷, t¹⁶) | LH_N  => [LH_N]}: 1463 --->
//│ 	[LH_C h⁴⁰ a¹⁴]: 3093
//│ 	[LH_N]: 4208
//│ case _lh_combine_arg1¹ of {LH_N  => _lh_combine_arg2¹ | LH_C _lh_combine_LH_C_0¹ _lh_combine_LH_C_1¹ => case _lh_combine_LH_C_0¹ of {LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1¹, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2¹)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1580 --->
//│ 	[LH_C f¹³(h¹³) map_lh_₁(f¹³, t¹³)]: 1291
//│ 	[LH_N]: 1292
//│ case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰}: 1631 --->
//│ 	[Known [LH_N]]: 1897
//│ 	[Unknown]: 1898
//│ 	[Known [LH_N]]: 2498
//│ 	[Unknown]: 2499
//│ 	[Known [LH_C _lh_bt_LH_P2_0¹ [LH_C _lh_bt_LH_P2_1¹ [LH_N]]]]: 2653
//│ case _lh_f_arg1⁴ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => case _lh_f_LH_P2_1⁵ of {Known _lh_f_Known_0² => [Node [LH_P2 _lh_f_LH_P2_0⁵ [Known _lh_f_Known_0²]] _lh_f_arg2³] | Unknown  => let cs'² = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2³), [LH_N])]
//│ in if knownConflict_lh_₀(cs'²) then [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0⁵ cs'²] _lh_f_arg2³] | _  => error⁰} | _  => error⁰}: 1633 --->
//│ 	[LH_P2 s¹⁴ let _lh_matchIdent⁸ = earliestInconsistency_lh_₀(_lh_bt_arg1¹⁴, s¹⁴)
//│ in _lh_matchIdent⁸(_lh_bt_arg1¹⁴, s¹⁴)]: 3421
//│ case _lh_maxLevel_arg1⁴ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0⁴ _lh_maxLevel_LH_C_1⁴ => case _lh_maxLevel_LH_C_0⁴ of {Assign _lh_maxLevel_Assign_0⁴ _lh_maxLevel_Assign_1⁴ => _lh_maxLevel_Assign_0⁴ | _  => error⁰} | _  => error⁰}: 1648 --->
//│ 	[LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]: 3960
//│ case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰}: 1719 --->
//│ 	[LH_P2 [LH_N] [Unknown]]: 3934
//│ 	[LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶]: 3968
//│ case _lh_f_arg1⁵ of {LH_P2 _lh_f_LH_P2_0⁶ _lh_f_LH_P2_1⁶ => case _lh_f_LH_P2_0⁶ of {LH_P2 _lh_f_LH_P2_0⁷ _lh_f_LH_P2_1⁷ => let wipedDomains¹ = let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁶(_lh_f_LH_P2_1⁶)
//│ in let cs'³ = if null_lh_₀(wipedDomains¹) then _lh_f_LH_P2_1⁷ else [Known collect_lh_₀(head_lh_₁(wipedDomains¹))]
//│ in [LH_P2 _lh_f_LH_P2_0⁷ cs'³] | _  => error⁰} | _  => error⁰}: 1721 --->
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰]: 3936
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰]: 3970
//│ case _lh_matchIdent⁴ of {LH_P2 _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹ => if (polyEq⁰(cs³, [Unknown]) && not⁰(_lh_fillTable_CSP_2¹([Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹], [Assign _lh_fillTable_LH_P2_0¹ _lh_fillTable_LH_P2_1¹]))) then [Known [LH_C _lh_fillTable_Assign_0¹ [LH_C _lh_fillTable_LH_P2_0¹ [LH_N]]]] else cs³ | _  => error⁰}: 1767 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸]: 1782
//│ case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 1788 --->
//│ 	[LH_C a⁵ enumFromTo_lh_₀((a⁵ + 1), b²)]: 1528
//│ 	[LH_N]: 1529
//│ case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 1803 --->
//│ 	[LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁴)]: 1942
//│ 	[LH_N]: 1943
//│ case ls¹⁹ of {LH_C h²⁰ t²⁰ => [LH_C f²⁴(h²⁰) map_lh_₁₃(f²⁴, t²⁰)] | LH_N  => [LH_N]}: 1844 --->
//│ 	[LH_N]: 3401
//│ 	[LH_C fc_lh_₀ [LH_N]]: 3402
//│ 	[LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]: 3403
//│ 	[LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]: 3404
//│ 	[LH_C bm_lh_₀ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]]: 3405
//│ 	[LH_C bt_lh_₂ [LH_C bm_lh_₀ [LH_C bjbt_lh_₀ [LH_C bjbt'_lh_₀ [LH_C fc_lh_₀ [LH_N]]]]]]: 3406
//│ case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]}: 1857 --->
//│ 	[LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b³)]: 1548
//│ 	[LH_N]: 1549
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => [LH_C let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [Unknown] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1¹)) _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)] | LH_N  => [LH_N]}: 1872 --->
//│ 	[LH_C a¹⁶ enumFromTo_lh_₃((a¹⁶ + 1), b¹¹)]: 3597
//│ 	[LH_N]: 3598
//│ case ys² of {LH_C hy¹ ty¹ => [LH_C f²⁶(hx¹, hy¹) zipWith_lh_₃(f²⁶, tx¹, ty¹)] | LH_N  => [LH_N]}: 1986 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)]: 3715
//│ 	[LH_N]: 3716
//│ case ls²² of {LH_C h²³ t²³ => if f²⁷(h²³) then [LH_C h²³ filter_lh_₇(f²⁷, t²³)] else filter_lh_₇(f²⁷, t²³) | LH_N  => [LH_N]}: 2010 --->
//│ 	[LH_C f⁴⁵(h⁴⁶) map_lh_₁₇(f⁴⁵, t⁴⁶)]: 3446
//│ 	[LH_N]: 3447
//│ case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰}: 2036 --->
//│ 	[Known [LH_C _lh_bt_LH_P2_0³ [LH_C _lh_bt_LH_P2_1³ [LH_N]]]]: 3286
//│ 	[Known [LH_N]]: 3608
//│ 	[Unknown]: 3609
//│ 	[Known [LH_N]]: 4222
//│ 	[Unknown]: 4223
//│ case _lh_f_arg1⁶ of {LH_P2 _lh_f_LH_P2_0⁸ _lh_f_LH_P2_1⁸ => case _lh_f_LH_P2_1⁸ of {Known _lh_f_Known_0³ => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known _lh_f_Known_0³]] _lh_f_arg2⁴] | Unknown  => [Node [LH_P2 _lh_f_LH_P2_0⁸ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2⁴), [LH_N])]] _lh_f_arg2⁴] | _  => error⁰} | _  => error⁰}: 2038 --->
//│ 	[LH_P2 s¹⁵ let _lh_matchIdent⁹ = earliestInconsistency_lh_₁(_lh_bt_arg1¹⁵, s¹⁵)
//│ in _lh_matchIdent⁹(_lh_bt_arg1¹⁵, s¹⁵)]: 3463
//│ case _lh_f_arg2⁵ of {LH_P2 _lh_f_LH_P2_0⁹ _lh_f_LH_P2_1⁹ => case _lh_f_LH_P2_0⁹ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹] | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => let tableEntry¹ = atIndex_lh_₀((value_lh_₀(_lh_f_LH_C_0¹) - 1), head_lh_₀(_lh_f_LH_P2_1⁹))
//│ in let cs⁴ = if polyEq⁰(tableEntry¹, [Unknown]) then checkComplete_lh_₄(_lh_f_arg1⁷, [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]) else tableEntry¹
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹] | _  => error⁰} | _  => error⁰}: 2287 --->
//│ 	[LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²]: 2155
//│ case ls²⁸ of {LH_C h²⁹ t²⁹ => (1 + length_lh_₀(t²⁹)) | LH_N  => 0}: 2309 --->
//│ 	[LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)]: 3876
//│ 	[LH_N]: 3877
//│ case _lh_foldTree_arg2¹ of {Node _lh_foldTree_Node_0¹ _lh_foldTree_Node_1¹ => _lh_foldTree_arg1¹(_lh_foldTree_Node_0¹, map_lh_₃(foldTree_lh_₁(_lh_foldTree_arg1¹), _lh_foldTree_Node_1¹)) | _  => error⁰}: 2324 --->
//│ 	[Node _lh_mapTree_arg1⁵(_lh_mapTree_Node_0⁵) map_lh_₅(mapTree_lh_₁(_lh_mapTree_arg1⁵), _lh_mapTree_Node_1⁵)]: 3657
//│ case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]}: 2446 --->
//│ 	[LH_C a¹³ enumFromTo_lh_₆((a¹³ + 1), b¹⁰)]: 3082
//│ 	[LH_N]: 3083
//│ case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => [LH_C [Unknown] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹²(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1²)) _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 2461 --->
//│ 	[LH_C a¹⁷ enumFromTo_lh_₇((a¹⁷ + 1), b¹²)]: 4053
//│ 	[LH_N]: 4054
//│ case _lh_combine_arg1² of {LH_N  => _lh_combine_arg2² | LH_C _lh_combine_LH_C_0² _lh_combine_LH_C_1² => case _lh_combine_LH_C_0² of {LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1², union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 2608 --->
//│ 	[LH_C f⁵¹(h⁵²) map_lh_₄(f⁵¹, t⁵²)]: 4110
//│ 	[LH_N]: 4111
//│ case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)] | LH_N  => [LH_N]}: 2694 --->
//│ 	[LH_C a¹¹ enumFromTo_lh_₈((a¹¹ + 1), b⁸)]: 2518
//│ 	[LH_N]: 2519
//│ case ls³² of {LH_C h³⁴ t³⁴ => [LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)] | LH_N  => [LH_N]}: 2786 --->
//│ 	[LH_C f²⁵(h²¹) map_lh_₁₀(f²⁵, t²¹)]: 1911
//│ 	[LH_N]: 1912
//│ case ls³⁵ of {LH_C h³⁷ t³⁷ => [LH_C f³⁸(h³⁷) map_lh_₀(f³⁸, t³⁷)] | LH_N  => [LH_N]}: 2937 --->
//│ 	[LH_C f³⁴(h³⁰) map_lh_₂(f³⁴, t³⁰)]: 2540
//│ 	[LH_N]: 2541
//│ case ls³⁶ of {LH_C h³⁸ t³⁸ => [LH_C f³⁹(h³⁸) map_lh_₁₁(f³⁹, t³⁸)] | LH_N  => [LH_N]}: 2962 --->
//│ 	[LH_C f³⁶(h³⁴) map_lh_₁₂(f³⁶, t³⁴)]: 2784
//│ 	[LH_N]: 2785
//│ case ls³⁷ of {LH_C h³⁹ t³⁹ => if f⁴⁰(h³⁹) then [LH_C h³⁹ filter_lh_₄(f⁴⁰, t³⁹)] else filter_lh_₄(f⁴⁰, t³⁹) | LH_N  => [LH_N]}: 3018 --->
//│ 	[LH_N]: 3024
//│ 	[LH_C h⁴⁵ a¹⁵]: 3380
//│ case ys⁵ of {LH_C hy² ty² => [LH_C f⁴¹(hx², hy²) zipWith_lh_₀(f⁴¹, tx², ty²)] | LH_N  => [LH_N]}: 3127 --->
//│ 	[LH_C let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1¹)) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1801
//│ 	[LH_N]: 1802
//│ case _lh_foldTree_arg2³ of {Node _lh_foldTree_Node_0³ _lh_foldTree_Node_1³ => _lh_foldTree_arg1³(_lh_foldTree_Node_0³, map_lh_₀(foldTree_lh_₀(_lh_foldTree_arg1³), _lh_foldTree_Node_1³)) | _  => error⁰}: 3241 --->
//│ 	[Node _lh_mapTree_arg1³(_lh_mapTree_Node_0³) map_lh_₂(mapTree_lh_₀(_lh_mapTree_arg1³), _lh_mapTree_Node_1³)]: 2417
//│ case ys⁶ of {LH_C hy³ ty³ => [LH_C f⁴²(hx³, hy³) zipWith_lh_₁(f⁴², tx³, ty³)] | LH_N  => [LH_N]}: 3318 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1786
//│ 	[LH_N]: 1787
//│ case lss¹ of {LH_C h⁴³ t⁴³ => mappend_lh_₃(h⁴³, concat_lh_₀(t⁴³)) | LH_N  => [LH_N]}: 3338 --->
//│ 	[LH_C f²⁹(h²⁵) map_lh_₁₄(f²⁹, t²⁵)]: 2075
//│ 	[LH_N]: 2076
//│ case ys⁸ of {LH_C hy⁴ ty⁴ => [LH_C f⁴³(hx⁴, hy⁴) zipWith_lh_₂(f⁴³, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 3368 --->
//│ 	[LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)]: 3730
//│ 	[LH_N]: 3731
//│ case _lh_maxLevel_arg1¹¹ of {LH_N  => 0 | LH_C _lh_maxLevel_LH_C_0¹¹ _lh_maxLevel_LH_C_1¹¹ => case _lh_maxLevel_LH_C_0¹¹ of {Assign _lh_maxLevel_Assign_0¹¹ _lh_maxLevel_Assign_1¹¹ => _lh_maxLevel_Assign_0¹¹ | _  => error⁰} | _  => error⁰}: 3435 --->
//│ 	[LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹]: 2271
//│ case _lh_matchIdent¹⁰ of {LH_P2 _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1² => if (polyEq⁰(cs⁵, [Unknown]) && not⁰(_lh_fillTable_CSP_2²([Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1²], [Assign _lh_fillTable_LH_P2_0² _lh_fillTable_LH_P2_1²]))) then [Known [LH_C _lh_fillTable_Assign_0² [LH_C _lh_fillTable_LH_P2_0² [LH_N]]]] else cs⁵ | _  => error⁰}: 3696 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵]: 3711
//│ case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]}: 3717 --->
//│ 	[LH_C a⁹ enumFromTo_lh_₄((a⁹ + 1), b⁶)]: 2095
//│ 	[LH_N]: 2096
//│ case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_t¹⁴ => [LH_C let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁵(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1²)) _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁴)] | LH_N  => [LH_N]}: 3732 --->
//│ 	[LH_C a¹⁰ enumFromTo_lh_₅((a¹⁰ + 1), b⁷)]: 2194
//│ 	[LH_N]: 2195
//│ case ls⁴⁴ of {LH_C h⁴⁸ t⁴⁸ => [LH_C f⁴⁸(h⁴⁸) map_lh_₃(f⁴⁸, t⁴⁸)] | LH_N  => [LH_N]}: 3778 --->
//│ 	[LH_C f³⁷(h³⁵) map_lh_₅(f³⁷, t³⁵)]: 2798
//│ 	[LH_N]: 2799
//│ case _lh_mapTree_arg2⁶ of {Node _lh_mapTree_Node_0⁶ _lh_mapTree_Node_1⁶ => [Node _lh_mapTree_arg1⁶(_lh_mapTree_Node_0⁶) map_lh_₁₁(mapTree_lh_₅(_lh_mapTree_arg1⁶), _lh_mapTree_Node_1⁶)] | _  => error⁰}: 3839 --->
//│ 	[Node _lh_mapTree_arg1²(_lh_mapTree_Node_0²) map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1²), _lh_mapTree_Node_1²)]: 1390
//│ case ls⁴⁶ of {LH_C h⁴⁹ t⁴⁹ => [LH_C f⁴⁹(h⁴⁹) map_lh_₁₅(f⁴⁹, t⁴⁹)] | LH_N  => [LH_N]}: 3878 --->
//│ 	[LH_C h²⁷ filter_lh_₆(f³¹, t²⁷)]: 2141
//│ 	[LH_N]: 2148
//│ case _lh_f_arg2⁶ of {LH_P2 _lh_f_LH_P2_0¹⁰ _lh_f_LH_P2_1¹⁰ => case _lh_f_LH_P2_0¹⁰ of {LH_N  => [LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1¹⁰] | LH_C _lh_f_LH_C_0² _lh_f_LH_C_1² => let tableEntry² = atIndex_lh_₁((value_lh_₁(_lh_f_LH_C_0²) - 1), head_lh_₂(_lh_f_LH_P2_1¹⁰))
//│ in let cs⁶ = if polyEq⁰(tableEntry², [Unknown]) then checkComplete_lh_₇(_lh_f_arg1⁸, [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]) else tableEntry²
//│ in [LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²] cs⁶] _lh_f_LH_P2_1¹⁰] | _  => error⁰} | _  => error⁰}: 3976 --->
//│ 	[LH_P2 _lh_cacheChecks_Node_0¹ _lh_cacheChecks_arg2¹]: 1653
//│ case _lh_fst_arg1² of {LH_P2 _lh_fst_LH_P2_0² _lh_fst_LH_P2_1² => _lh_fst_LH_P2_0² | _  => error⁰}: 4036 --->
//│ 	[LH_P2 [LH_P2 [LH_N] [Unknown]] _lh_f_LH_P2_1⁹]: 2247
//│ 	[LH_P2 [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs⁴] _lh_f_LH_P2_1⁹]: 2281
//│ case _lh_mapTree_arg2⁷ of {Node _lh_mapTree_Node_0⁷ _lh_mapTree_Node_1⁷ => [Node _lh_mapTree_arg1⁷(_lh_mapTree_Node_0⁷) map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1⁷), _lh_mapTree_Node_1⁷)] | _  => error⁰}: 4071 --->
//│ 	[Node [LH_P2 _lh_cacheChecks_Node_0² _lh_cacheChecks_arg2²] map_lh_₆(cacheChecks_lh_₀(_lh_cacheChecks_arg1², fillTable_lh_₀(_lh_cacheChecks_Node_0², _lh_cacheChecks_arg1², tail_lh_₀(_lh_cacheChecks_arg2²))), _lh_cacheChecks_Node_1²)]: 2173
//│ case ls⁵⁰ of {LH_C h⁵⁴ t⁵⁴ => [LH_C f⁵³(h⁵⁴) map_lh_₁₆(f⁵³, t⁵⁴)] | LH_N  => [LH_N]}: 4171 --->
//│ 	[LH_C [LH_C [Assign (maxLevel_lh_₁₁(ss¹) + 1) _lh_listcomp_fun_ls_h¹³] ss¹] _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹³)]: 2692
//│ 	[LH_N]: 2693
//│ 	[LH_N]: 2704
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testConstraints_nofib_lh_₀(primId⁰(5))
//│ def testConstraints_nofib_lh_₀(_lh_testConstraints_nofib_arg1²) = 
//│ 	map_lh_₁₃(try_lh_₀(_lh_testConstraints_nofib_arg1²), 
//│ 		let t⁶⁵ = 	
//│ 			let t⁶⁶ = 	
//│ 				let t⁶⁷ = 	
//│ 					let t⁶⁸ = 	
//│ 						let t⁶⁹ = (fun f¹¹⁸ -> [LH_N])
//│ 						in let h⁶⁸ = fc_lh_₀
//│ 						in (fun f¹¹⁷ -> [LH_C f¹¹⁷(h⁶⁸) map_lh_₁₃(f¹¹⁷, t⁶⁹)])
//│ 					in let h⁶⁷ = bjbt'_lh_₀
//│ 					in (fun f¹¹⁶ -> [LH_C f¹¹⁶(h⁶⁷) map_lh_₁₃(f¹¹⁶, t⁶⁸)])
//│ 				in let h⁶⁶ = bjbt_lh_₀
//│ 				in (fun f¹¹⁵ -> [LH_C f¹¹⁵(h⁶⁶) map_lh_₁₃(f¹¹⁵, t⁶⁷)])
//│ 			in let h⁶⁵ = bm_lh_₀
//│ 			in (fun f¹¹⁴ -> [LH_C f¹¹⁴(h⁶⁵) map_lh_₁₃(f¹¹⁴, t⁶⁶)])
//│ 		in let h⁶⁴ = bt_lh_₂
//│ 		in (fun f¹¹³ -> [LH_C f¹¹³(h⁶⁴) map_lh_₁₃(f¹¹³, t⁶⁵)]))
//│ 	where
//│ 	def bjbt'_lh_₀(_lh_bjbt'_arg1², _lh_funcomp_x³⁹) = 
//│ 		bj'_lh_₀(_lh_bjbt'_arg1², bt_lh_₀(_lh_bjbt'_arg1², _lh_funcomp_x³⁹))
//│ 		where
//│ 		def bj'_lh_₀(_lh_bj'_arg1²) = 
//│ 			let f⁵⁵ = (fun _lh_f_arg1⁹ -> (fun _lh_f_arg2⁷ -> _lh_f_arg1⁹(_lh_f_arg2⁷)))
//│ 			in foldTree_lh_₀(f⁵⁵)
//│ 			where
//│ 			def combine_lh_₀(_lh_combine_arg1⁴, _lh_combine_arg2⁶) = 
//│ 				_lh_combine_arg1⁴(_lh_combine_arg2⁶)
//│ 				where
//│ 				def maxLevel_lh_₀(_lh_maxLevel_arg1¹³) = 
//│ 					case _lh_maxLevel_arg1¹³ of {
//│ 						LH_N  => 0
//│ 						| LH_C _lh_maxLevel_LH_C_0⁷ _lh_maxLevel_LH_C_1⁷ => case _lh_maxLevel_LH_C_0⁷ of {
//│ 							Assign _lh_maxLevel_Assign_0⁷ _lh_maxLevel_Assign_1⁷ => _lh_maxLevel_Assign_0⁷
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def notElem_lh_₀(_lh_notElem_arg1⁴, _lh_notElem_arg2⁴) = 
//│ 					case _lh_notElem_arg2⁴ of {
//│ 						LH_N  => [True]
//│ 						| LH_C _lh_notElem_LH_C_0² _lh_notElem_LH_C_1² => if polyEq⁰(_lh_notElem_arg1⁴, _lh_notElem_LH_C_0²) then [False] else notElem_lh_₀(_lh_notElem_arg1⁴, _lh_notElem_LH_C_1²)
//│ 						| _  => error⁰}
//│ 				def union_lh_₀(_lh_union_arg1⁵, _lh_union_arg2⁵) = 
//│ 					unionBy_lh_₀((fun a²⁹ -> (fun b¹⁹ -> polyEq⁰(a²⁹, b¹⁹))), _lh_union_arg1⁵, _lh_union_arg2⁵)
//│ 					where
//│ 					def unionBy_lh_₀(_lh_unionBy_arg1⁵, _lh_unionBy_arg2⁵, _lh_unionBy_arg3⁵) = 
//│ 						mappend_lh_₀(_lh_unionBy_arg2⁵, foldl_lh_₀(flip_lh_₀(deleteBy_lh_₀(_lh_unionBy_arg1⁵)), nubBy_lh_₀(_lh_unionBy_arg1⁵, _lh_unionBy_arg3⁵), _lh_unionBy_arg2⁵))
//│ 						where
//│ 						def deleteBy_lh_₀(_lh_deleteBy_arg1⁴, _lh_deleteBy_arg2⁴, _lh_deleteBy_arg3⁴) = 
//│ 							case _lh_deleteBy_arg3⁴ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_deleteBy_LH_C_0³ _lh_deleteBy_LH_C_1³ => if _lh_deleteBy_arg1⁴(_lh_deleteBy_arg2⁴, _lh_deleteBy_LH_C_0³) then _lh_deleteBy_LH_C_1³ else [LH_C _lh_deleteBy_LH_C_0³ deleteBy_lh_₀(_lh_deleteBy_arg1⁴, _lh_deleteBy_arg2⁴, _lh_deleteBy_LH_C_1³)]
//│ 								| _  => error⁰}
//│ 						def flip_lh_₀(_lh_flip_arg1⁶, _lh_flip_arg2⁶, _lh_flip_arg3⁶) = 
//│ 							_lh_flip_arg1⁶(_lh_flip_arg3⁶, _lh_flip_arg2⁶)
//│ 						def foldl_lh_₀(f⁹³, i⁶, ls⁷³) = 
//│ 							case ls⁷³ of {
//│ 								LH_C h¹⁷ t¹⁷ => foldl_lh_₀(f⁹³, f⁹³(i⁶, h¹⁷), t¹⁷)
//│ 								| LH_N  => i⁶}
//│ 						def mappend_lh_₀(xs¹², ys¹²) = 
//│ 							case xs¹² of {
//│ 								LH_C h³² t³² => [LH_C h³² mappend_lh_₀(t³², ys¹²)]
//│ 								| LH_N  => ys¹²}
//│ 						def nubBy_lh_₀(_lh_nubBy_arg1⁴, _lh_nubBy_arg2⁴) = 
//│ 							case _lh_nubBy_arg2⁴ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_nubBy_LH_C_0³ _lh_nubBy_LH_C_1³ => [LH_C _lh_nubBy_LH_C_0³ nubBy_lh_₀(_lh_nubBy_arg1⁴, filter_lh_₀((fun y⁴ -> not⁰(_lh_nubBy_arg1⁴(_lh_nubBy_LH_C_0³, y⁴))), _lh_nubBy_LH_C_1³))]
//│ 								| _  => error⁰}
//│ 							where
//│ 							def filter_lh_₀(f⁶⁶, ls⁶¹) = 
//│ 								case ls⁶¹ of {
//│ 									LH_C h²⁸ t²⁸ => if f⁶⁶(h²⁸) then [LH_C h²⁸ filter_lh_₀(f⁶⁶, t²⁸)] else filter_lh_₀(f⁶⁶, t²⁸)
//│ 									| LH_N  => [LH_N]}
//│ 			def foldTree_lh_₀(_lh_foldTree_arg1⁶, _lh_foldTree_arg2⁶) = 
//│ 				_lh_foldTree_arg2⁶(_lh_foldTree_arg1⁶)
//│ 				where
//│ 				def map_lh_₀(f⁸⁰, ls⁶⁷) = 
//│ 					ls⁶⁷(f⁸⁰)
//│ 			def knownConflict_lh_₀(_lh_knownConflict_arg1⁶) = 
//│ 				case _lh_knownConflict_arg1⁶ of {
//│ 					Known _lh_knownConflict_Known_0³ => case _lh_knownConflict_Known_0³ of {
//│ 						LH_C _lh_knownConflict_LH_C_0³ _lh_knownConflict_LH_C_1³ => [True]
//│ 						| _  => [False]}
//│ 					| _  => [False]}
//│ 			def label_lh_₀(_lh_label_arg1⁵) = 
//│ 				case _lh_label_arg1⁵ of {
//│ 					Node _lh_label_Node_0² _lh_label_Node_1² => _lh_label_Node_0²
//│ 					| _  => error⁰}
//│ 			def map_lh_₁(f⁹², ls⁷²) = 
//│ 				case ls⁷² of {
//│ 					LH_C h¹³ t¹³ => 
//│ 						let _lh_combine_LH_C_1³ = map_lh_₁(f⁹², t¹³)
//│ 						in let _lh_combine_LH_C_0³ = f⁹²(h¹³)
//│ 						in (fun _lh_combine_arg2⁴ -> case _lh_combine_LH_C_0³ of {
//│ 							LH_P2 _lh_combine_LH_P2_0¹ _lh_combine_LH_P2_1¹ => case _lh_combine_LH_P2_1¹ of {
//│ 								Known _lh_combine_Known_0¹ => if notElem_lh_₀(maxLevel_lh_₀(_lh_combine_LH_P2_0¹), _lh_combine_Known_0¹) then _lh_combine_Known_0¹ else combine_lh_₀(_lh_combine_LH_C_1³, union_lh_₀(_lh_combine_Known_0¹, _lh_combine_arg2⁴))
//│ 								| _  => error⁰}
//│ 							| _  => error⁰})
//│ 					| LH_N  => (fun _lh_combine_arg2⁵ -> _lh_combine_arg2⁵)}
//│ 		def bt_lh_₀(_lh_bt_arg1²⁴) = 
//│ 			let f⁹⁴ = (fun s²⁴ -> 
//│ 				let _lh_f_LH_P2_1¹² = 	
//│ 					let _lh_matchIdent¹⁶ = earliestInconsistency_lh_₀(_lh_bt_arg1²⁴, s²⁴)
//│ 					in _lh_matchIdent¹⁶(_lh_bt_arg1²⁴, s²⁴)
//│ 				in let _lh_f_LH_P2_0¹⁹ = s²⁴
//│ 				in (fun _lh_f_arg2¹⁷ -> _lh_f_LH_P2_1¹²(_lh_f_LH_P2_0¹⁹, _lh_f_arg2¹⁷)))
//│ 			in mapTree_lh_₀(f⁹⁴)
//│ 			where
//│ 			def earliestInconsistency_lh_₀(_lh_earliestInconsistency_arg1⁶, _lh_earliestInconsistency_arg2⁶) = 
//│ 				case _lh_earliestInconsistency_arg1⁶ of {
//│ 					CSP _lh_earliestInconsistency_CSP_0¹ _lh_earliestInconsistency_CSP_1¹ _lh_earliestInconsistency_CSP_2¹ => case _lh_earliestInconsistency_arg2⁶ of {
//│ 						LH_N  => (fun _lh_bt_arg1²⁵ -> (fun s²⁵ -> checkComplete_lh_₀(_lh_bt_arg1²⁵, s²⁵)))
//│ 						| LH_C _lh_earliestInconsistency_LH_C_0² _lh_earliestInconsistency_LH_C_1² => 
//│ 							let _lh_matchIdent¹⁷ = filter_lh_₁((fun _lh_funcomp_x³⁸ -> not⁰(_lh_earliestInconsistency_CSP_2¹(_lh_earliestInconsistency_LH_C_0², _lh_funcomp_x³⁸))), reverse_lh_₀(_lh_earliestInconsistency_LH_C_1²))
//│ 							in case _lh_matchIdent¹⁷ of {
//│ 								LH_N  => (fun _lh_bt_arg1²⁶ -> (fun s²⁶ -> checkComplete_lh_₁(_lh_bt_arg1²⁶, s²⁶)))
//│ 								| LH_C _lh_earliestInconsistency_LH_C_0³ _lh_earliestInconsistency_LH_C_1³ => 
//│ 									let _lh_bt_Just_0⁶ = 	
//│ 										let _lh_bt_LH_P2_1⁶ = level_lh_₀(_lh_earliestInconsistency_LH_C_0³)
//│ 										in let _lh_bt_LH_P2_0⁶ = level_lh_₁(_lh_earliestInconsistency_LH_C_0²)
//│ 										in let _lh_f_Known_0⁸ = [LH_C _lh_bt_LH_P2_0⁶ [LH_C _lh_bt_LH_P2_1⁶ [LH_N]]]
//│ 										in (fun _lh_f_LH_P2_0²⁰ -> (fun _lh_f_arg2¹⁹ -> [Node [LH_P2 _lh_f_LH_P2_0²⁰ [Known _lh_f_Known_0⁸]] _lh_f_arg2¹⁹]))
//│ 									in (fun _lh_bt_arg1²⁷ -> (fun s²⁷ -> _lh_bt_Just_0⁶))
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def checkComplete_lh_₀(_lh_checkComplete_arg1⁹, _lh_checkComplete_arg2⁹) = 
//│ 					if complete_lh_₀(_lh_checkComplete_arg1⁹, _lh_checkComplete_arg2⁹) then 
//│ 						let _lh_f_Known_0⁴ = [LH_N]
//│ 						in (fun _lh_f_LH_P2_0¹¹ -> (fun _lh_f_arg2⁹ -> [Node [LH_P2 _lh_f_LH_P2_0¹¹ [Known _lh_f_Known_0⁴]] _lh_f_arg2⁹])) else (fun _lh_f_LH_P2_0¹² -> (fun _lh_f_arg2¹⁰ -> 
//│ 						let cs'⁴ = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2¹⁰), [LH_N])]
//│ 						in if knownConflict_lh_₀(cs'⁴) then [Node [LH_P2 _lh_f_LH_P2_0¹² cs'⁴] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0¹² cs'⁴] _lh_f_arg2¹⁰]))
//│ 					where
//│ 					def complete_lh_₀(_lh_complete_arg1¹⁴, _lh_complete_arg2¹⁴) = 
//│ 						case _lh_complete_arg1¹⁴ of {
//│ 							CSP _lh_complete_CSP_0² _lh_complete_CSP_1² _lh_complete_CSP_2² => (maxLevel_lh_₁(_lh_complete_arg2¹⁴) == _lh_complete_CSP_0²)
//│ 							| _  => error⁰}
//│ 						where
//│ 						def maxLevel_lh_₁(_lh_maxLevel_arg1¹⁴) = 
//│ 							case _lh_maxLevel_arg1¹⁴ of {
//│ 								LH_N  => 0
//│ 								| LH_C _lh_maxLevel_LH_C_0¹⁰ _lh_maxLevel_LH_C_1¹⁰ => case _lh_maxLevel_LH_C_0¹⁰ of {
//│ 									Assign _lh_maxLevel_Assign_0¹⁰ _lh_maxLevel_Assign_1¹⁰ => _lh_maxLevel_Assign_0¹⁰
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def checkComplete_lh_₁(_lh_checkComplete_arg1¹³, _lh_checkComplete_arg2¹³) = 
//│ 					if complete_lh_₁(_lh_checkComplete_arg1¹³, _lh_checkComplete_arg2¹³) then 
//│ 						let _lh_f_Known_0⁶ = [LH_N]
//│ 						in (fun _lh_f_LH_P2_0¹⁵ -> (fun _lh_f_arg2¹³ -> [Node [LH_P2 _lh_f_LH_P2_0¹⁵ [Known _lh_f_Known_0⁶]] _lh_f_arg2¹³])) else (fun _lh_f_LH_P2_0¹⁶ -> (fun _lh_f_arg2¹⁴ -> 
//│ 						let cs'⁵ = [Known combine_lh_₀(map_lh_₁(label_lh_₀, _lh_f_arg2¹⁴), [LH_N])]
//│ 						in if knownConflict_lh_₀(cs'⁵) then [Node [LH_P2 _lh_f_LH_P2_0¹⁶ cs'⁵] [LH_N]] else [Node [LH_P2 _lh_f_LH_P2_0¹⁶ cs'⁵] _lh_f_arg2¹⁴]))
//│ 					where
//│ 					def complete_lh_₁(_lh_complete_arg1¹¹, _lh_complete_arg2¹¹) = 
//│ 						case _lh_complete_arg1¹¹ of {
//│ 							CSP _lh_complete_CSP_0⁵ _lh_complete_CSP_1⁵ _lh_complete_CSP_2⁵ => (maxLevel_lh_₂(_lh_complete_arg2¹¹) == _lh_complete_CSP_0⁵)
//│ 							| _  => error⁰}
//│ 						where
//│ 						def maxLevel_lh_₂(_lh_maxLevel_arg1¹⁷) = 
//│ 							case _lh_maxLevel_arg1¹⁷ of {
//│ 								LH_N  => 0
//│ 								| LH_C _lh_maxLevel_LH_C_0⁶ _lh_maxLevel_LH_C_1⁶ => case _lh_maxLevel_LH_C_0⁶ of {
//│ 									Assign _lh_maxLevel_Assign_0⁶ _lh_maxLevel_Assign_1⁶ => _lh_maxLevel_Assign_0⁶
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def filter_lh_₁(f¹¹², ls⁸²) = 
//│ 					ls⁸²(f¹¹²)
//│ 				def level_lh_₀(_lh_level_arg1⁸) = 
//│ 					case _lh_level_arg1⁸ of {
//│ 						Assign _lh_level_Assign_0⁴ _lh_level_Assign_1⁴ => _lh_level_Assign_0⁴
//│ 						| _  => error⁰}
//│ 				def level_lh_₁(_lh_level_arg1¹²) = 
//│ 					case _lh_level_arg1¹² of {
//│ 						Assign _lh_level_Assign_0⁵ _lh_level_Assign_1⁵ => _lh_level_Assign_0⁵
//│ 						| _  => error⁰}
//│ 				def reverse_lh_₀(ls⁷⁸) = 
//│ 					reverse_helper_lh_₀(ls⁷⁸, (fun f¹⁰⁶ -> [LH_N]))
//│ 					where
//│ 					def reverse_helper_lh_₀(ls⁵⁵, a²¹) = 
//│ 						case ls⁵⁵ of {
//│ 							LH_C h⁴⁰ t⁴⁰ => reverse_helper_lh_₀(t⁴⁰, 
//│ 								let t⁵⁵ = a²¹
//│ 								in let h⁵⁵ = h⁴⁰
//│ 								in (fun f⁶¹ -> if f⁶¹(h⁵⁵) then [LH_C h⁵⁵ filter_lh_₁(f⁶¹, t⁵⁵)] else filter_lh_₁(f⁶¹, t⁵⁵)))
//│ 							| LH_N  => a²¹}
//│ 			def mapTree_lh_₀(_lh_mapTree_arg1¹⁵, _lh_mapTree_arg2¹³) = 
//│ 				case _lh_mapTree_arg2¹³ of {
//│ 					Node _lh_mapTree_Node_0³ _lh_mapTree_Node_1³ => 
//│ 						let _lh_foldTree_Node_1⁴ = map_lh_₂(mapTree_lh_₀(_lh_mapTree_arg1¹⁵), _lh_mapTree_Node_1³)
//│ 						in let _lh_foldTree_Node_0⁴ = _lh_mapTree_arg1¹⁵(_lh_mapTree_Node_0³)
//│ 						in (fun _lh_foldTree_arg1⁷ -> _lh_foldTree_arg1⁷(_lh_foldTree_Node_0⁴, map_lh_₀(foldTree_lh_₀(_lh_foldTree_arg1⁷), _lh_foldTree_Node_1⁴)))
//│ 					| _  => error⁰}
//│ 				where
//│ 				def map_lh_₂(f⁸⁹, ls⁷⁰) = 
//│ 					case ls⁷⁰ of {
//│ 						LH_C h³⁰ t³⁰ => 
//│ 							let t⁶⁰ = map_lh_₂(f⁸⁹, t³⁰)
//│ 							in let h⁶⁰ = f⁸⁹(h³⁰)
//│ 							in (fun f⁹⁰ -> [LH_C f⁹⁰(h⁶⁰) map_lh_₀(f⁹⁰, t⁶⁰)])
//│ 						| LH_N  => (fun f⁹¹ -> [LH_N])}
//│ 	def bjbt_lh_₀(_lh_bjbt_arg1², _lh_funcomp_x³⁵) = 
//│ 		bj_lh_₀(_lh_bjbt_arg1², bt_lh_₁(_lh_bjbt_arg1², _lh_funcomp_x³⁵))
//│ 		where
//│ 		def bj_lh_₀(_lh_bj_arg1²) = 
//│ 			let f⁵⁷ = (fun _lh_f_arg1¹⁰ -> (fun _lh_f_arg2⁸ -> _lh_f_arg1¹⁰(_lh_f_arg2⁸)))
//│ 			in foldTree_lh_₁(f⁵⁷)
//│ 			where
//│ 			def combine_lh_₁(_lh_combine_arg1³, _lh_combine_arg2³) = 
//│ 				_lh_combine_arg1³(_lh_combine_arg2³)
//│ 				where
//│ 				def maxLevel_lh_₃(_lh_maxLevel_arg1¹⁵) = 
//│ 					case _lh_maxLevel_arg1¹⁵ of {
//│ 						LH_N  => 0
//│ 						| LH_C _lh_maxLevel_LH_C_0¹ _lh_maxLevel_LH_C_1¹ => case _lh_maxLevel_LH_C_0¹ of {
//│ 							Assign _lh_maxLevel_Assign_0¹ _lh_maxLevel_Assign_1¹ => _lh_maxLevel_Assign_0¹
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def notElem_lh_₁(_lh_notElem_arg1³, _lh_notElem_arg2³) = 
//│ 					case _lh_notElem_arg2³ of {
//│ 						LH_N  => [True]
//│ 						| LH_C _lh_notElem_LH_C_0¹ _lh_notElem_LH_C_1¹ => if polyEq⁰(_lh_notElem_arg1³, _lh_notElem_LH_C_0¹) then [False] else notElem_lh_₁(_lh_notElem_arg1³, _lh_notElem_LH_C_1¹)
//│ 						| _  => error⁰}
//│ 				def union_lh_₁(_lh_union_arg1⁴, _lh_union_arg2⁴) = 
//│ 					unionBy_lh_₁((fun a²⁰ -> (fun b¹⁴ -> polyEq⁰(a²⁰, b¹⁴))), _lh_union_arg1⁴, _lh_union_arg2⁴)
//│ 					where
//│ 					def unionBy_lh_₁(_lh_unionBy_arg1⁴, _lh_unionBy_arg2⁴, _lh_unionBy_arg3⁴) = 
//│ 						mappend_lh_₁(_lh_unionBy_arg2⁴, foldl_lh_₁(flip_lh_₁(deleteBy_lh_₁(_lh_unionBy_arg1⁴)), nubBy_lh_₁(_lh_unionBy_arg1⁴, _lh_unionBy_arg3⁴), _lh_unionBy_arg2⁴))
//│ 						where
//│ 						def deleteBy_lh_₁(_lh_deleteBy_arg1⁶, _lh_deleteBy_arg2⁶, _lh_deleteBy_arg3⁶) = 
//│ 							case _lh_deleteBy_arg3⁶ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_deleteBy_LH_C_0² _lh_deleteBy_LH_C_1² => if _lh_deleteBy_arg1⁶(_lh_deleteBy_arg2⁶, _lh_deleteBy_LH_C_0²) then _lh_deleteBy_LH_C_1² else [LH_C _lh_deleteBy_LH_C_0² deleteBy_lh_₁(_lh_deleteBy_arg1⁶, _lh_deleteBy_arg2⁶, _lh_deleteBy_LH_C_1²)]
//│ 								| _  => error⁰}
//│ 						def flip_lh_₁(_lh_flip_arg1⁵, _lh_flip_arg2⁵, _lh_flip_arg3⁵) = 
//│ 							_lh_flip_arg1⁵(_lh_flip_arg3⁵, _lh_flip_arg2⁵)
//│ 						def foldl_lh_₁(f⁶⁴, i⁵, ls⁵⁸) = 
//│ 							case ls⁵⁸ of {
//│ 								LH_C h¹² t¹² => foldl_lh_₁(f⁶⁴, f⁶⁴(i⁵, h¹²), t¹²)
//│ 								| LH_N  => i⁵}
//│ 						def mappend_lh_₁(xs¹¹, ys¹¹) = 
//│ 							case xs¹¹ of {
//│ 								LH_C h⁵¹ t⁵¹ => [LH_C h⁵¹ mappend_lh_₁(t⁵¹, ys¹¹)]
//│ 								| LH_N  => ys¹¹}
//│ 						def nubBy_lh_₁(_lh_nubBy_arg1⁵, _lh_nubBy_arg2⁵) = 
//│ 							case _lh_nubBy_arg2⁵ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_nubBy_LH_C_0¹ _lh_nubBy_LH_C_1¹ => [LH_C _lh_nubBy_LH_C_0¹ nubBy_lh_₁(_lh_nubBy_arg1⁵, filter_lh_₂((fun y⁵ -> not⁰(_lh_nubBy_arg1⁵(_lh_nubBy_LH_C_0¹, y⁵))), _lh_nubBy_LH_C_1¹))]
//│ 								| _  => error⁰}
//│ 							where
//│ 							def filter_lh_₂(f¹³³, ls⁹⁰) = 
//│ 								case ls⁹⁰ of {
//│ 									LH_C h⁵³ t⁵³ => if f¹³³(h⁵³) then [LH_C h⁵³ filter_lh_₂(f¹³³, t⁵³)] else filter_lh_₂(f¹³³, t⁵³)
//│ 									| LH_N  => [LH_N]}
//│ 			def foldTree_lh_₁(_lh_foldTree_arg1⁴, _lh_foldTree_arg2⁴) = 
//│ 				_lh_foldTree_arg2⁴(_lh_foldTree_arg1⁴)
//│ 				where
//│ 				def map_lh_₃(f¹¹¹, ls⁸¹) = 
//│ 					ls⁸¹(f¹¹¹)
//│ 			def label_lh_₁(_lh_label_arg1⁶) = 
//│ 				case _lh_label_arg1⁶ of {
//│ 					Node _lh_label_Node_0³ _lh_label_Node_1³ => _lh_label_Node_0³
//│ 					| _  => error⁰}
//│ 			def map_lh_₄(f¹¹⁹, ls⁸⁴) = 
//│ 				case ls⁸⁴ of {
//│ 					LH_C h⁵² t⁵² => 
//│ 						let _lh_combine_LH_C_1⁴ = map_lh_₄(f¹¹⁹, t⁵²)
//│ 						in let _lh_combine_LH_C_0⁴ = f¹¹⁹(h⁵²)
//│ 						in (fun _lh_combine_arg2⁷ -> case _lh_combine_LH_C_0⁴ of {
//│ 							LH_P2 _lh_combine_LH_P2_0² _lh_combine_LH_P2_1² => case _lh_combine_LH_P2_1² of {
//│ 								Known _lh_combine_Known_0² => if notElem_lh_₁(maxLevel_lh_₃(_lh_combine_LH_P2_0²), _lh_combine_Known_0²) then _lh_combine_Known_0² else combine_lh_₁(_lh_combine_LH_C_1⁴, union_lh_₁(_lh_combine_Known_0², _lh_combine_arg2⁷))
//│ 								| _  => error⁰}
//│ 							| _  => error⁰})
//│ 					| LH_N  => (fun _lh_combine_arg2⁸ -> _lh_combine_arg2⁸)}
//│ 		def bt_lh_₁(_lh_bt_arg1²⁰) = 
//│ 			let f⁸¹ = (fun s²⁰ -> 
//│ 				let _lh_f_LH_P2_1¹¹ = 	
//│ 					let _lh_matchIdent¹⁴ = earliestInconsistency_lh_₁(_lh_bt_arg1²⁰, s²⁰)
//│ 					in _lh_matchIdent¹⁴(_lh_bt_arg1²⁰, s²⁰)
//│ 				in let _lh_f_LH_P2_0¹⁷ = s²⁰
//│ 				in (fun _lh_f_arg2¹⁵ -> _lh_f_LH_P2_1¹¹(_lh_f_LH_P2_0¹⁷, _lh_f_arg2¹⁵)))
//│ 			in mapTree_lh_₁(f⁸¹)
//│ 			where
//│ 			def earliestInconsistency_lh_₁(_lh_earliestInconsistency_arg1⁵, _lh_earliestInconsistency_arg2⁵) = 
//│ 				case _lh_earliestInconsistency_arg1⁵ of {
//│ 					CSP _lh_earliestInconsistency_CSP_0³ _lh_earliestInconsistency_CSP_1³ _lh_earliestInconsistency_CSP_2³ => case _lh_earliestInconsistency_arg2⁵ of {
//│ 						LH_N  => (fun _lh_bt_arg1²¹ -> (fun s²¹ -> checkComplete_lh_₂(_lh_bt_arg1²¹, s²¹)))
//│ 						| LH_C _lh_earliestInconsistency_LH_C_0⁶ _lh_earliestInconsistency_LH_C_1⁶ => 
//│ 							let _lh_matchIdent¹⁵ = filter_lh_₃((fun _lh_funcomp_x³⁷ -> not⁰(_lh_earliestInconsistency_CSP_2³(_lh_earliestInconsistency_LH_C_0⁶, _lh_funcomp_x³⁷))), reverse_lh_₁(_lh_earliestInconsistency_LH_C_1⁶))
//│ 							in case _lh_matchIdent¹⁵ of {
//│ 								LH_N  => (fun _lh_bt_arg1²² -> (fun s²² -> checkComplete_lh_₃(_lh_bt_arg1²², s²²)))
//│ 								| LH_C _lh_earliestInconsistency_LH_C_0⁷ _lh_earliestInconsistency_LH_C_1⁷ => 
//│ 									let _lh_bt_Just_0⁵ = 	
//│ 										let _lh_bt_LH_P2_1⁵ = level_lh_₂(_lh_earliestInconsistency_LH_C_0⁷)
//│ 										in let _lh_bt_LH_P2_0⁵ = level_lh_₃(_lh_earliestInconsistency_LH_C_0⁶)
//│ 										in let _lh_f_Known_0⁷ = [LH_C _lh_bt_LH_P2_0⁵ [LH_C _lh_bt_LH_P2_1⁵ [LH_N]]]
//│ 										in (fun _lh_f_LH_P2_0¹⁸ -> (fun _lh_f_arg2¹⁶ -> [Node [LH_P2 _lh_f_LH_P2_0¹⁸ [Known _lh_f_Known_0⁷]] _lh_f_arg2¹⁶]))
//│ 									in (fun _lh_bt_arg1²³ -> (fun s²³ -> _lh_bt_Just_0⁵))
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def checkComplete_lh_₂(_lh_checkComplete_arg1¹⁵, _lh_checkComplete_arg2¹⁵) = 
//│ 					if complete_lh_₂(_lh_checkComplete_arg1¹⁵, _lh_checkComplete_arg2¹⁵) then 
//│ 						let _lh_f_Known_0⁹ = [LH_N]
//│ 						in (fun _lh_f_LH_P2_0²¹ -> (fun _lh_f_arg2²⁰ -> [Node [LH_P2 _lh_f_LH_P2_0²¹ [Known _lh_f_Known_0⁹]] _lh_f_arg2²⁰])) else (fun _lh_f_LH_P2_0²² -> (fun _lh_f_arg2²¹ -> [Node [LH_P2 _lh_f_LH_P2_0²² [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2²¹), [LH_N])]] _lh_f_arg2²¹]))
//│ 					where
//│ 					def complete_lh_₂(_lh_complete_arg1¹⁶, _lh_complete_arg2¹⁶) = 
//│ 						case _lh_complete_arg1¹⁶ of {
//│ 							CSP _lh_complete_CSP_0⁸ _lh_complete_CSP_1⁸ _lh_complete_CSP_2⁸ => (maxLevel_lh_₄(_lh_complete_arg2¹⁶) == _lh_complete_CSP_0⁸)
//│ 							| _  => error⁰}
//│ 						where
//│ 						def maxLevel_lh_₄(_lh_maxLevel_arg1¹⁸) = 
//│ 							case _lh_maxLevel_arg1¹⁸ of {
//│ 								LH_N  => 0
//│ 								| LH_C _lh_maxLevel_LH_C_0² _lh_maxLevel_LH_C_1² => case _lh_maxLevel_LH_C_0² of {
//│ 									Assign _lh_maxLevel_Assign_0² _lh_maxLevel_Assign_1² => _lh_maxLevel_Assign_0²
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def checkComplete_lh_₃(_lh_checkComplete_arg1¹¹, _lh_checkComplete_arg2¹¹) = 
//│ 					if complete_lh_₃(_lh_checkComplete_arg1¹¹, _lh_checkComplete_arg2¹¹) then 
//│ 						let _lh_f_Known_0⁵ = [LH_N]
//│ 						in (fun _lh_f_LH_P2_0¹³ -> (fun _lh_f_arg2¹¹ -> [Node [LH_P2 _lh_f_LH_P2_0¹³ [Known _lh_f_Known_0⁵]] _lh_f_arg2¹¹])) else (fun _lh_f_LH_P2_0¹⁴ -> (fun _lh_f_arg2¹² -> [Node [LH_P2 _lh_f_LH_P2_0¹⁴ [Known combine_lh_₁(map_lh_₄(label_lh_₁, _lh_f_arg2¹²), [LH_N])]] _lh_f_arg2¹²]))
//│ 					where
//│ 					def complete_lh_₃(_lh_complete_arg1¹², _lh_complete_arg2¹²) = 
//│ 						case _lh_complete_arg1¹² of {
//│ 							CSP _lh_complete_CSP_0⁶ _lh_complete_CSP_1⁶ _lh_complete_CSP_2⁶ => (maxLevel_lh_₅(_lh_complete_arg2¹²) == _lh_complete_CSP_0⁶)
//│ 							| _  => error⁰}
//│ 						where
//│ 						def maxLevel_lh_₅(_lh_maxLevel_arg1²³) = 
//│ 							case _lh_maxLevel_arg1²³ of {
//│ 								LH_N  => 0
//│ 								| LH_C _lh_maxLevel_LH_C_0⁸ _lh_maxLevel_LH_C_1⁸ => case _lh_maxLevel_LH_C_0⁸ of {
//│ 									Assign _lh_maxLevel_Assign_0⁸ _lh_maxLevel_Assign_1⁸ => _lh_maxLevel_Assign_0⁸
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 				def filter_lh_₃(f⁶⁰, ls⁵³) = 
//│ 					ls⁵³(f⁶⁰)
//│ 				def level_lh_₂(_lh_level_arg1⁹) = 
//│ 					case _lh_level_arg1⁹ of {
//│ 						Assign _lh_level_Assign_0⁶ _lh_level_Assign_1⁶ => _lh_level_Assign_0⁶
//│ 						| _  => error⁰}
//│ 				def level_lh_₃(_lh_level_arg1¹⁰) = 
//│ 					case _lh_level_arg1¹⁰ of {
//│ 						Assign _lh_level_Assign_0¹ _lh_level_Assign_1¹ => _lh_level_Assign_0¹
//│ 						| _  => error⁰}
//│ 				def reverse_lh_₁(ls⁸⁸) = 
//│ 					reverse_helper_lh_₁(ls⁸⁸, (fun f¹²⁶ -> [LH_N]))
//│ 					where
//│ 					def reverse_helper_lh_₁(ls⁶⁴, a²⁵) = 
//│ 						case ls⁶⁴ of {
//│ 							LH_C h¹⁰ t¹⁰ => reverse_helper_lh_₁(t¹⁰, 
//│ 								let t⁵⁷ = a²⁵
//│ 								in let h⁵⁷ = h¹⁰
//│ 								in (fun f⁷² -> if f⁷²(h⁵⁷) then [LH_C h⁵⁷ filter_lh_₃(f⁷², t⁵⁷)] else filter_lh_₃(f⁷², t⁵⁷)))
//│ 							| LH_N  => a²⁵}
//│ 			def mapTree_lh_₁(_lh_mapTree_arg1¹⁸, _lh_mapTree_arg2¹⁴) = 
//│ 				case _lh_mapTree_arg2¹⁴ of {
//│ 					Node _lh_mapTree_Node_0⁵ _lh_mapTree_Node_1⁵ => 
//│ 						let _lh_foldTree_Node_1⁵ = map_lh_₅(mapTree_lh_₁(_lh_mapTree_arg1¹⁸), _lh_mapTree_Node_1⁵)
//│ 						in let _lh_foldTree_Node_0⁵ = _lh_mapTree_arg1¹⁸(_lh_mapTree_Node_0⁵)
//│ 						in (fun _lh_foldTree_arg1⁸ -> _lh_foldTree_arg1⁸(_lh_foldTree_Node_0⁵, map_lh_₃(foldTree_lh_₁(_lh_foldTree_arg1⁸), _lh_foldTree_Node_1⁵)))
//│ 					| _  => error⁰}
//│ 				where
//│ 				def map_lh_₅(f¹⁰², ls⁷⁷) = 
//│ 					case ls⁷⁷ of {
//│ 						LH_C h³⁵ t³⁵ => 
//│ 							let t⁶¹ = map_lh_₅(f¹⁰², t³⁵)
//│ 							in let h⁶¹ = f¹⁰²(h³⁵)
//│ 							in (fun f¹⁰³ -> [LH_C f¹⁰³(h⁶¹) map_lh_₃(f¹⁰³, t⁶¹)])
//│ 						| LH_N  => (fun f¹⁰⁴ -> [LH_N])}
//│ 	def bm_lh_₀(_lh_bm_arg1², _lh_funcomp_x⁴⁸) = 
//│ 		(fun _lh_funcomp_x⁴⁹ -> mapTree_lh_₃(fst_lh_₀, lookupCache_lh_₀(_lh_bm_arg1², _lh_funcomp_x⁴⁹)))(cacheChecks_lh_₀(_lh_bm_arg1², emptyTable_lh_₀(_lh_bm_arg1²), _lh_funcomp_x⁴⁸))
//│ 		where
//│ 		def cacheChecks_lh_₀(_lh_cacheChecks_arg1⁴, _lh_cacheChecks_arg2⁴, _lh_cacheChecks_arg3⁴) = 
//│ 			case _lh_cacheChecks_arg3⁴ of {
//│ 				Node _lh_cacheChecks_Node_0² _lh_cacheChecks_Node_1² => 
//│ 					let _lh_mapTree_Node_1¹⁰ = map_lh_₆(cacheChecks_lh_₀(_lh_cacheChecks_arg1⁴, fillTable_lh_₀(_lh_cacheChecks_Node_0², _lh_cacheChecks_arg1⁴, tail_lh_₀(_lh_cacheChecks_arg2⁴))), _lh_cacheChecks_Node_1²)
//│ 					in let _lh_mapTree_Node_0¹⁰ = 	
//│ 						let _lh_f_LH_P2_1²⁰ = _lh_cacheChecks_arg2⁴
//│ 						in let _lh_f_LH_P2_0²⁸ = _lh_cacheChecks_Node_0²
//│ 						in (fun _lh_f_arg1¹⁴ -> case _lh_f_LH_P2_0²⁸ of {
//│ 							LH_N  => 
//│ 								let _lh_fst_LH_P2_0³ = [LH_P2 [LH_N] [Unknown]]
//│ 								in _lh_fst_LH_P2_0³
//│ 							| LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => 
//│ 								let tableEntry⁴ = atIndex_lh_₀((value_lh_₀(_lh_f_LH_C_0¹) - 1), head_lh_₀(_lh_f_LH_P2_1²⁰))
//│ 								in let cs¹⁴ = if polyEq⁰(tableEntry⁴, [Unknown]) then checkComplete_lh_₄(_lh_f_arg1¹⁴, 
//│ 									let _lh_maxLevel_LH_C_0¹⁴ = _lh_f_LH_C_0¹
//│ 									in (fun _lh_dummy⁷ -> case _lh_maxLevel_LH_C_0¹⁴ of {
//│ 										Assign _lh_maxLevel_Assign_0¹¹ _lh_maxLevel_Assign_1¹¹ => _lh_maxLevel_Assign_0¹¹
//│ 										| _  => error⁰})) else tableEntry⁴
//│ 								in let _lh_fst_LH_P2_0⁴ = [LH_P2 [LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹] cs¹⁴]
//│ 								in _lh_fst_LH_P2_0⁴
//│ 							| _  => error⁰})
//│ 					in (fun _lh_mapTree_arg1¹⁶ -> 
//│ 						let _lh_mapTree_Node_1¹¹ = map_lh_₇(mapTree_lh_₂(_lh_mapTree_arg1¹⁶), _lh_mapTree_Node_1¹⁰)
//│ 						in let _lh_mapTree_Node_0¹¹ = _lh_mapTree_arg1¹⁶(_lh_mapTree_Node_0¹⁰)
//│ 						in (fun _lh_mapTree_arg1¹⁷ -> [Node _lh_mapTree_arg1¹⁷(_lh_mapTree_Node_0¹¹) map_lh_₈(mapTree_lh_₃(_lh_mapTree_arg1¹⁷), _lh_mapTree_Node_1¹¹)]))
//│ 				| _  => error⁰}
//│ 			where
//│ 			def fillTable_lh_₀(_lh_fillTable_arg1⁴, _lh_fillTable_arg2⁴, _lh_fillTable_arg3⁴) = 
//│ 				case _lh_fillTable_arg1⁴ of {
//│ 					LH_N  => _lh_fillTable_arg3⁴
//│ 					| LH_C _lh_fillTable_LH_C_0¹ _lh_fillTable_LH_C_1¹ => case _lh_fillTable_LH_C_0¹ of {
//│ 						Assign _lh_fillTable_Assign_0¹ _lh_fillTable_Assign_1¹ => case _lh_fillTable_arg2⁴ of {
//│ 							CSP _lh_fillTable_CSP_0¹ _lh_fillTable_CSP_1¹ _lh_fillTable_CSP_2¹ => 
//│ 								let f¹²⁷ = (fun cs¹³ -> (fun varval⁴ -> 
//│ 									let _lh_matchIdent¹⁸ = varval⁴
//│ 									in _lh_matchIdent¹⁸(_lh_fillTable_Assign_0¹, _lh_fillTable_Assign_1¹, _lh_fillTable_CSP_2¹, cs¹³)))
//│ 								in zipWith_lh_₀(zipWith_lh_₁(f¹²⁷), _lh_fillTable_arg3⁴, 
//│ 									let _lh_listcomp_fun⁴⁴ = (fun _lh_listcomp_fun_para²⁶ -> _lh_listcomp_fun_para²⁶(_lh_fillTable_CSP_1¹, _lh_listcomp_fun⁴⁴))
//│ 									in _lh_listcomp_fun⁴⁴(enumFromTo_lh_₁((_lh_fillTable_Assign_0¹ + 1), _lh_fillTable_CSP_0¹)))
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def enumFromTo_lh_₀(a²⁷, b¹⁸) = 
//│ 					if (a²⁷ <= b¹⁸) then 
//│ 						let _lh_listcomp_fun_ls_t¹⁹ = enumFromTo_lh_₀((a²⁷ + 1), b¹⁸)
//│ 						in let _lh_listcomp_fun_ls_h¹⁹ = a²⁷
//│ 						in (fun _lh_listcomp_fun_ls_h²⁰ -> (fun _lh_listcomp_fun²⁴ -> 
//│ 							let ty⁶ = _lh_listcomp_fun²⁴(_lh_listcomp_fun_ls_t¹⁹)
//│ 							in let hy⁶ = 	
//│ 								let _lh_fillTable_LH_P2_1⁴ = _lh_listcomp_fun_ls_h¹⁹
//│ 								in let _lh_fillTable_LH_P2_0⁴ = _lh_listcomp_fun_ls_h²⁰
//│ 								in (fun _lh_fillTable_Assign_0⁴ -> (fun _lh_fillTable_Assign_1⁴ -> (fun _lh_fillTable_CSP_2⁴ -> (fun cs¹⁰ -> if (polyEq⁰(cs¹⁰, [Unknown]) && not⁰(_lh_fillTable_CSP_2⁴([Assign _lh_fillTable_Assign_0⁴ _lh_fillTable_Assign_1⁴], [Assign _lh_fillTable_LH_P2_0⁴ _lh_fillTable_LH_P2_1⁴]))) then [Known [LH_C _lh_fillTable_Assign_0⁴ [LH_C _lh_fillTable_LH_P2_0⁴ [LH_N]]]] else cs¹⁰))))
//│ 							in (fun f⁷⁷ -> (fun hx⁷ -> (fun tx⁷ -> [LH_C f⁷⁷(hx⁷, hy⁶) zipWith_lh_₁(f⁷⁷, tx⁷, ty⁶)]))))) else (fun _lh_listcomp_fun_ls_h²¹ -> (fun _lh_listcomp_fun²⁵ -> (fun f⁷⁸ -> (fun hx⁸ -> (fun tx⁸ -> [LH_N])))))
//│ 				def enumFromTo_lh_₁(a³⁰, b²⁰) = 
//│ 					if (a³⁰ <= b²⁰) then 
//│ 						let _lh_listcomp_fun_ls_t²⁰ = enumFromTo_lh_₁((a³⁰ + 1), b²⁰)
//│ 						in let _lh_listcomp_fun_ls_h²² = a³⁰
//│ 						in (fun _lh_fillTable_CSP_1³ -> (fun _lh_listcomp_fun²⁷ -> 
//│ 							let ty⁷ = _lh_listcomp_fun²⁷(_lh_listcomp_fun_ls_t²⁰)
//│ 							in let hy⁷ = 	
//│ 								let _lh_listcomp_fun²⁸ = (fun _lh_listcomp_fun_para¹⁹ -> _lh_listcomp_fun_para¹⁹(_lh_listcomp_fun_ls_h²², _lh_listcomp_fun²⁸))
//│ 								in _lh_listcomp_fun²⁸(enumFromTo_lh_₀(1, _lh_fillTable_CSP_1³))
//│ 							in (fun f⁹⁵ -> (fun hx⁹ -> (fun tx⁹ -> [LH_C f⁹⁵(hx⁹, hy⁷) zipWith_lh_₀(f⁹⁵, tx⁹, ty⁷)]))))) else (fun _lh_fillTable_CSP_1⁴ -> (fun _lh_listcomp_fun²⁹ -> (fun f⁹⁶ -> (fun hx¹⁰ -> (fun tx¹⁰ -> [LH_N])))))
//│ 				def zipWith_lh_₀(f⁷⁵, xs¹³, ys¹³) = 
//│ 					case xs¹³ of {
//│ 						LH_C hx² tx² => ys¹³(f⁷⁵, hx², tx²)
//│ 						| LH_N  => [LH_N]}
//│ 				def zipWith_lh_₁(f¹⁰⁵, xs¹⁶, ys¹⁶) = 
//│ 					case xs¹⁶ of {
//│ 						LH_C hx³ tx³ => ys¹⁶(f¹⁰⁵, hx³, tx³)
//│ 						| LH_N  => [LH_N]}
//│ 			def map_lh_₆(f⁸³, ls⁶⁸) = 
//│ 				case ls⁶⁸ of {
//│ 					LH_C h¹⁹ t¹⁹ => 
//│ 						let t⁵⁸ = map_lh_₆(f⁸³, t¹⁹)
//│ 						in let h⁵⁸ = f⁸³(h¹⁹)
//│ 						in (fun f⁸⁴ -> 
//│ 							let t⁵⁹ = map_lh_₇(f⁸⁴, t⁵⁸)
//│ 							in let h⁵⁹ = f⁸⁴(h⁵⁸)
//│ 							in (fun f⁸⁵ -> [LH_C f⁸⁵(h⁵⁹) map_lh_₈(f⁸⁵, t⁵⁹)]))
//│ 					| LH_N  => (fun f⁸⁶ -> (fun f⁸⁷ -> [LH_N]))}
//│ 			def tail_lh_₀(ls⁵⁴) = 
//│ 				case ls⁵⁴ of {
//│ 					LH_C h⁴⁷ t⁴⁷ => t⁴⁷
//│ 					| LH_N  => error⁰}
//│ 		def emptyTable_lh_₀(_lh_emptyTable_arg1³) = 
//│ 			case _lh_emptyTable_arg1³ of {
//│ 				CSP _lh_emptyTable_CSP_0¹ _lh_emptyTable_CSP_1¹ _lh_emptyTable_CSP_2¹ => [LH_C [LH_N] 
//│ 					let _lh_listcomp_fun²⁶ = (fun _lh_listcomp_fun_para¹⁸ -> _lh_listcomp_fun_para¹⁸(_lh_emptyTable_CSP_1¹, _lh_listcomp_fun²⁶))
//│ 					in _lh_listcomp_fun²⁶(enumFromTo_lh_₃(1, _lh_emptyTable_CSP_0¹))]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def enumFromTo_lh_₂(a²⁶, b¹⁷) = 
//│ 				if (a²⁶ <= b¹⁷) then 
//│ 					let _lh_listcomp_fun_ls_t¹⁸ = enumFromTo_lh_₂((a²⁶ + 1), b¹⁷)
//│ 					in (fun _lh_listcomp_fun²² -> [LH_C [Unknown] _lh_listcomp_fun²²(_lh_listcomp_fun_ls_t¹⁸)]) else (fun _lh_listcomp_fun²³ -> [LH_N])
//│ 			def enumFromTo_lh_₃(a³³, b²³) = 
//│ 				if (a³³ <= b²³) then 
//│ 					let _lh_listcomp_fun_ls_t²³ = enumFromTo_lh_₃((a³³ + 1), b²³)
//│ 					in (fun _lh_emptyTable_CSP_1⁵ -> (fun _lh_listcomp_fun³⁶ -> [LH_C 
//│ 						let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para²² -> _lh_listcomp_fun_para²²(_lh_listcomp_fun³⁷))
//│ 						in _lh_listcomp_fun³⁷(enumFromTo_lh_₂(1, _lh_emptyTable_CSP_1⁵)) _lh_listcomp_fun³⁶(_lh_listcomp_fun_ls_t²³)])) else (fun _lh_emptyTable_CSP_1⁶ -> (fun _lh_listcomp_fun³⁸ -> [LH_N]))
//│ 		def fst_lh_₀(_lh_fst_arg1³) = 
//│ 			_lh_fst_arg1³
//│ 		def lookupCache_lh_₀(_lh_lookupCache_arg1⁴, _lh_lookupCache_arg2⁴) = 
//│ 			let f¹³⁷ = (fun _lh_f_arg1¹⁵ -> (fun _lh_f_arg2²² -> _lh_f_arg2²²(_lh_f_arg1¹⁵)))
//│ 			in mapTree_lh_₂(f¹³⁷(_lh_lookupCache_arg1⁴), _lh_lookupCache_arg2⁴)
//│ 			where
//│ 			def atIndex_lh_₀(n³, ls⁷⁴) = 
//│ 				if (n³ < 0) then error⁰ else case ls⁷⁴ of {
//│ 					LH_C h⁴² t⁴² => if (n³ == 0) then h⁴² else atIndex_lh_₀((n³ - 1), t⁴²)
//│ 					| LH_N  => error⁰}
//│ 			def checkComplete_lh_₄(_lh_checkComplete_arg1¹⁴, _lh_checkComplete_arg2¹⁴) = 
//│ 				if complete_lh_₄(_lh_checkComplete_arg1¹⁴, _lh_checkComplete_arg2¹⁴) then [Known [LH_N]] else [Unknown]
//│ 				where
//│ 				def complete_lh_₄(_lh_complete_arg1¹⁵, _lh_complete_arg2¹⁵) = 
//│ 					case _lh_complete_arg1¹⁵ of {
//│ 						CSP _lh_complete_CSP_0⁷ _lh_complete_CSP_1⁷ _lh_complete_CSP_2⁷ => (maxLevel_lh_₆(_lh_complete_arg2¹⁵) == _lh_complete_CSP_0⁷)
//│ 						| _  => error⁰}
//│ 					where
//│ 					def maxLevel_lh_₆(_lh_maxLevel_arg1¹⁶) = 
//│ 						_lh_maxLevel_arg1¹⁶(99)
//│ 			def head_lh_₀(ls⁸⁷) = 
//│ 				case ls⁸⁷ of {
//│ 					LH_C h³⁶ t³⁶ => h³⁶
//│ 					| LH_N  => error⁰}
//│ 			def mapTree_lh_₂(_lh_mapTree_arg1¹⁴, _lh_mapTree_arg2¹²) = 
//│ 				_lh_mapTree_arg2¹²(_lh_mapTree_arg1¹⁴)
//│ 				where
//│ 				def map_lh_₇(f⁶⁵, ls⁵⁹) = 
//│ 					ls⁵⁹(f⁶⁵)
//│ 			def value_lh_₀(_lh_value_arg1⁴) = 
//│ 				case _lh_value_arg1⁴ of {
//│ 					Assign _lh_value_Assign_0² _lh_value_Assign_1² => _lh_value_Assign_1²
//│ 					| _  => error⁰}
//│ 		def mapTree_lh_₃(_lh_mapTree_arg1¹⁰, _lh_mapTree_arg2¹⁰) = 
//│ 			_lh_mapTree_arg2¹⁰(_lh_mapTree_arg1¹⁰)
//│ 			where
//│ 			def map_lh_₈(f¹³⁶, ls⁹⁴) = 
//│ 				ls⁹⁴(f¹³⁶)
//│ 	def bt_lh_₂(_lh_bt_arg1¹⁹) = 
//│ 		let f⁷⁶ = (fun s¹⁹ -> [LH_P2 s¹⁹ 
//│ 			let _lh_matchIdent¹³ = earliestInconsistency_lh_₂(_lh_bt_arg1¹⁹, s¹⁹)
//│ 			in _lh_matchIdent¹³(_lh_bt_arg1¹⁹, s¹⁹)])
//│ 		in mapTree_lh_₄(f⁷⁶)
//│ 		where
//│ 		def earliestInconsistency_lh_₂(_lh_earliestInconsistency_arg1⁴, _lh_earliestInconsistency_arg2⁴) = 
//│ 			case _lh_earliestInconsistency_arg1⁴ of {
//│ 				CSP _lh_earliestInconsistency_CSP_0² _lh_earliestInconsistency_CSP_1² _lh_earliestInconsistency_CSP_2² => case _lh_earliestInconsistency_arg2⁴ of {
//│ 					LH_N  => (fun _lh_bt_arg1¹⁶ -> (fun s¹⁶ -> checkComplete_lh_₅(_lh_bt_arg1¹⁶, s¹⁶)))
//│ 					| LH_C _lh_earliestInconsistency_LH_C_0⁴ _lh_earliestInconsistency_LH_C_1⁴ => 
//│ 						let _lh_matchIdent¹² = filter_lh_₄((fun _lh_funcomp_x³⁴ -> not⁰(_lh_earliestInconsistency_CSP_2²(_lh_earliestInconsistency_LH_C_0⁴, _lh_funcomp_x³⁴))), reverse_lh_₂(_lh_earliestInconsistency_LH_C_1⁴))
//│ 						in case _lh_matchIdent¹² of {
//│ 							LH_N  => (fun _lh_bt_arg1¹⁷ -> (fun s¹⁷ -> checkComplete_lh_₆(_lh_bt_arg1¹⁷, s¹⁷)))
//│ 							| LH_C _lh_earliestInconsistency_LH_C_0⁵ _lh_earliestInconsistency_LH_C_1⁵ => 
//│ 								let _lh_bt_Just_0⁴ = 	
//│ 									let _lh_bt_LH_P2_1⁴ = level_lh_₄(_lh_earliestInconsistency_LH_C_0⁵)
//│ 									in let _lh_bt_LH_P2_0⁴ = level_lh_₅(_lh_earliestInconsistency_LH_C_0⁴)
//│ 									in [Known [LH_C _lh_bt_LH_P2_0⁴ [LH_C _lh_bt_LH_P2_1⁴ [LH_N]]]]
//│ 								in (fun _lh_bt_arg1¹⁸ -> (fun s¹⁸ -> _lh_bt_Just_0⁴))
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def checkComplete_lh_₅(_lh_checkComplete_arg1¹², _lh_checkComplete_arg2¹²) = 
//│ 				if complete_lh_₅(_lh_checkComplete_arg1¹², _lh_checkComplete_arg2¹²) then [Known [LH_N]] else [Unknown]
//│ 				where
//│ 				def complete_lh_₅(_lh_complete_arg1¹³, _lh_complete_arg2¹³) = 
//│ 					case _lh_complete_arg1¹³ of {
//│ 						CSP _lh_complete_CSP_0³ _lh_complete_CSP_1³ _lh_complete_CSP_2³ => (maxLevel_lh_₇(_lh_complete_arg2¹³) == _lh_complete_CSP_0³)
//│ 						| _  => error⁰}
//│ 					where
//│ 					def maxLevel_lh_₇(_lh_maxLevel_arg1²⁰) = 
//│ 						case _lh_maxLevel_arg1²⁰ of {
//│ 							LH_N  => 0
//│ 							| LH_C _lh_maxLevel_LH_C_0¹² _lh_maxLevel_LH_C_1¹² => case _lh_maxLevel_LH_C_0¹² of {
//│ 								Assign _lh_maxLevel_Assign_0¹² _lh_maxLevel_Assign_1¹² => _lh_maxLevel_Assign_0¹²
//│ 								| _  => error⁰}
//│ 							| _  => error⁰}
//│ 			def checkComplete_lh_₆(_lh_checkComplete_arg1¹⁶, _lh_checkComplete_arg2¹⁶) = 
//│ 				if complete_lh_₆(_lh_checkComplete_arg1¹⁶, _lh_checkComplete_arg2¹⁶) then [Known [LH_N]] else [Unknown]
//│ 				where
//│ 				def complete_lh_₆(_lh_complete_arg1⁹, _lh_complete_arg2⁹) = 
//│ 					case _lh_complete_arg1⁹ of {
//│ 						CSP _lh_complete_CSP_0¹ _lh_complete_CSP_1¹ _lh_complete_CSP_2¹ => (maxLevel_lh_₈(_lh_complete_arg2⁹) == _lh_complete_CSP_0¹)
//│ 						| _  => error⁰}
//│ 					where
//│ 					def maxLevel_lh_₈(_lh_maxLevel_arg1²²) = 
//│ 						case _lh_maxLevel_arg1²² of {
//│ 							LH_N  => 0
//│ 							| LH_C _lh_maxLevel_LH_C_0⁵ _lh_maxLevel_LH_C_1⁵ => case _lh_maxLevel_LH_C_0⁵ of {
//│ 								Assign _lh_maxLevel_Assign_0⁵ _lh_maxLevel_Assign_1⁵ => _lh_maxLevel_Assign_0⁵
//│ 								| _  => error⁰}
//│ 							| _  => error⁰}
//│ 			def filter_lh_₄(f⁹⁸, ls⁷⁵) = 
//│ 				ls⁷⁵(f⁹⁸)
//│ 			def level_lh_₄(_lh_level_arg1⁷) = 
//│ 				case _lh_level_arg1⁷ of {
//│ 					Assign _lh_level_Assign_0² _lh_level_Assign_1² => _lh_level_Assign_0²
//│ 					| _  => error⁰}
//│ 			def level_lh_₅(_lh_level_arg1¹¹) = 
//│ 				case _lh_level_arg1¹¹ of {
//│ 					Assign _lh_level_Assign_0³ _lh_level_Assign_1³ => _lh_level_Assign_0³
//│ 					| _  => error⁰}
//│ 			def reverse_lh_₂(ls⁹¹) = 
//│ 				reverse_helper_lh_₂(ls⁹¹, (fun f¹³⁴ -> [LH_N]))
//│ 				where
//│ 				def reverse_helper_lh_₂(ls⁶³, a²²) = 
//│ 					case ls⁶³ of {
//│ 						LH_C h⁴⁵ t⁴⁵ => reverse_helper_lh_₂(t⁴⁵, 
//│ 							let t⁵⁶ = a²²
//│ 							in let h⁵⁶ = h⁴⁵
//│ 							in (fun f⁶⁸ -> if f⁶⁸(h⁵⁶) then [LH_C h⁵⁶ filter_lh_₄(f⁶⁸, t⁵⁶)] else filter_lh_₄(f⁶⁸, t⁵⁶)))
//│ 						| LH_N  => a²²}
//│ 		def mapTree_lh_₄(_lh_mapTree_arg1¹¹, _lh_mapTree_arg2¹¹) = 
//│ 			case _lh_mapTree_arg2¹¹ of {
//│ 				Node _lh_mapTree_Node_0⁴ _lh_mapTree_Node_1⁴ => [Node _lh_mapTree_arg1¹¹(_lh_mapTree_Node_0⁴) map_lh_₉(mapTree_lh_₄(_lh_mapTree_arg1¹¹), _lh_mapTree_Node_1⁴)]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def map_lh_₉(f⁶², ls⁵⁶) = 
//│ 				case ls⁵⁶ of {
//│ 					LH_C h³³ t³³ => [LH_C f⁶²(h³³) map_lh_₉(f⁶², t³³)]
//│ 					| LH_N  => [LH_N]}
//│ 	def fc_lh_₀(_lh_fc_arg1², _lh_funcomp_x⁵⁰) = 
//│ 		(fun _lh_funcomp_x⁵¹ -> domainWipeOut_lh_₀(_lh_fc_arg1², lookupCache_lh_₁(_lh_fc_arg1², _lh_funcomp_x⁵¹)))(cacheChecks_lh_₁(_lh_fc_arg1², emptyTable_lh_₁(_lh_fc_arg1²), _lh_funcomp_x⁵⁰))
//│ 		where
//│ 		def cacheChecks_lh_₁(_lh_cacheChecks_arg1³, _lh_cacheChecks_arg2³, _lh_cacheChecks_arg3³) = 
//│ 			case _lh_cacheChecks_arg3³ of {
//│ 				Node _lh_cacheChecks_Node_0¹ _lh_cacheChecks_Node_1¹ => 
//│ 					let _lh_mapTree_Node_1⁸ = map_lh_₁₀(cacheChecks_lh_₁(_lh_cacheChecks_arg1³, fillTable_lh_₁(_lh_cacheChecks_Node_0¹, _lh_cacheChecks_arg1³, tail_lh_₁(_lh_cacheChecks_arg2³))), _lh_cacheChecks_Node_1¹)
//│ 					in let _lh_mapTree_Node_0⁸ = 	
//│ 						let _lh_f_LH_P2_1¹³ = _lh_cacheChecks_arg2³
//│ 						in let _lh_f_LH_P2_0²³ = _lh_cacheChecks_Node_0¹
//│ 						in (fun _lh_f_arg1¹³ -> case _lh_f_LH_P2_0²³ of {
//│ 							LH_N  => 
//│ 								let _lh_f_LH_P2_1¹⁴ = _lh_f_LH_P2_1¹³
//│ 								in let _lh_f_LH_P2_0²⁴ = 	
//│ 									let _lh_f_LH_P2_1¹⁵ = [Unknown]
//│ 									in let _lh_f_LH_P2_0²⁵ = [LH_N]
//│ 									in (fun _lh_f_LH_P2_1¹⁶ -> 
//│ 										let wipedDomains² = 	
//│ 											let _lh_listcomp_fun³⁹ = (fun _lh_listcomp_fun_para²³ -> case _lh_listcomp_fun_para²³ of {
//│ 												LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun³⁹(_lh_listcomp_fun_ls_t⁶)
//│ 												| LH_N  => [LH_N]})
//│ 											in _lh_listcomp_fun³⁹(_lh_f_LH_P2_1¹⁶)
//│ 										in let cs'⁶ = if null_lh_₀(wipedDomains²) then _lh_f_LH_P2_1¹⁵ else [Known collect_lh_₀(head_lh_₁(wipedDomains²))]
//│ 										in [LH_P2 _lh_f_LH_P2_0²⁵ cs'⁶])
//│ 								in (fun _lh_dummy⁴ -> _lh_f_LH_P2_0²⁴(_lh_f_LH_P2_1¹⁴))
//│ 							| LH_C _lh_f_LH_C_0² _lh_f_LH_C_1² => 
//│ 								let tableEntry³ = atIndex_lh_₁((value_lh_₁(_lh_f_LH_C_0²) - 1), head_lh_₂(_lh_f_LH_P2_1¹³))
//│ 								in let cs¹² = if polyEq⁰(tableEntry³, [Unknown]) then checkComplete_lh_₇(_lh_f_arg1¹³, 
//│ 									let _lh_maxLevel_LH_C_0¹³ = _lh_f_LH_C_0²
//│ 									in (fun _lh_dummy⁵ -> case _lh_maxLevel_LH_C_0¹³ of {
//│ 										Assign _lh_maxLevel_Assign_0⁴ _lh_maxLevel_Assign_1⁴ => _lh_maxLevel_Assign_0⁴
//│ 										| _  => error⁰})) else tableEntry³
//│ 								in let _lh_f_LH_P2_1¹⁷ = _lh_f_LH_P2_1¹³
//│ 								in let _lh_f_LH_P2_0²⁶ = 	
//│ 									let _lh_f_LH_P2_1¹⁸ = cs¹²
//│ 									in let _lh_f_LH_P2_0²⁷ = [LH_C _lh_f_LH_C_0² _lh_f_LH_C_1²]
//│ 									in (fun _lh_f_LH_P2_1¹⁹ -> 
//│ 										let wipedDomains³ = 	
//│ 											let _lh_listcomp_fun⁴⁰ = (fun _lh_listcomp_fun_para²⁴ -> case _lh_listcomp_fun_para²⁴ of {
//│ 												LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => if all_lh_₀(knownConflict_lh_₁, _lh_listcomp_fun_ls_h⁶) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t⁶)
//│ 												| LH_N  => [LH_N]})
//│ 											in _lh_listcomp_fun⁴⁰(_lh_f_LH_P2_1¹⁹)
//│ 										in let cs'⁷ = if null_lh_₀(wipedDomains³) then _lh_f_LH_P2_1¹⁸ else [Known collect_lh_₀(head_lh_₁(wipedDomains³))]
//│ 										in [LH_P2 _lh_f_LH_P2_0²⁷ cs'⁷])
//│ 								in (fun _lh_dummy⁶ -> _lh_f_LH_P2_0²⁶(_lh_f_LH_P2_1¹⁷))
//│ 							| _  => error⁰})
//│ 					in (fun _lh_mapTree_arg1¹² -> 
//│ 						let _lh_mapTree_Node_1⁹ = map_lh_₁₂(mapTree_lh_₆(_lh_mapTree_arg1¹²), _lh_mapTree_Node_1⁸)
//│ 						in let _lh_mapTree_Node_0⁹ = _lh_mapTree_arg1¹²(_lh_mapTree_Node_0⁸)
//│ 						in (fun _lh_mapTree_arg1¹³ -> [Node _lh_mapTree_arg1¹³(_lh_mapTree_Node_0⁹) map_lh_₁₁(mapTree_lh_₅(_lh_mapTree_arg1¹³), _lh_mapTree_Node_1⁹)]))
//│ 				| _  => error⁰}
//│ 			where
//│ 			def fillTable_lh_₁(_lh_fillTable_arg1³, _lh_fillTable_arg2³, _lh_fillTable_arg3³) = 
//│ 				case _lh_fillTable_arg1³ of {
//│ 					LH_N  => _lh_fillTable_arg3³
//│ 					| LH_C _lh_fillTable_LH_C_0² _lh_fillTable_LH_C_1² => case _lh_fillTable_LH_C_0² of {
//│ 						Assign _lh_fillTable_Assign_0² _lh_fillTable_Assign_1² => case _lh_fillTable_arg2³ of {
//│ 							CSP _lh_fillTable_CSP_0² _lh_fillTable_CSP_1² _lh_fillTable_CSP_2² => 
//│ 								let f⁵⁶ = (fun cs⁸ -> (fun varval³ -> 
//│ 									let _lh_matchIdent¹¹ = varval³
//│ 									in _lh_matchIdent¹¹(_lh_fillTable_Assign_0², _lh_fillTable_Assign_1², _lh_fillTable_CSP_2², cs⁸)))
//│ 								in zipWith_lh_₂(zipWith_lh_₃(f⁵⁶), _lh_fillTable_arg3³, 
//│ 									let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹⁶ -> _lh_listcomp_fun_para¹⁶(_lh_fillTable_CSP_1², _lh_listcomp_fun¹⁶))
//│ 									in _lh_listcomp_fun¹⁶(enumFromTo_lh_₅((_lh_fillTable_Assign_0² + 1), _lh_fillTable_CSP_0²)))
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def enumFromTo_lh_₄(a²³, b¹⁵) = 
//│ 					if (a²³ <= b¹⁵) then 
//│ 						let _lh_listcomp_fun_ls_t¹⁶ = enumFromTo_lh_₄((a²³ + 1), b¹⁵)
//│ 						in let _lh_listcomp_fun_ls_h¹⁶ = a²³
//│ 						in (fun _lh_listcomp_fun_ls_h¹⁷ -> (fun _lh_listcomp_fun¹⁷ -> 
//│ 							let ty⁵ = _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹⁶)
//│ 							in let hy⁵ = 	
//│ 								let _lh_fillTable_LH_P2_1³ = _lh_listcomp_fun_ls_h¹⁶
//│ 								in let _lh_fillTable_LH_P2_0³ = _lh_listcomp_fun_ls_h¹⁷
//│ 								in (fun _lh_fillTable_Assign_0³ -> (fun _lh_fillTable_Assign_1³ -> (fun _lh_fillTable_CSP_2³ -> (fun cs⁹ -> if (polyEq⁰(cs⁹, [Unknown]) && not⁰(_lh_fillTable_CSP_2³([Assign _lh_fillTable_Assign_0³ _lh_fillTable_Assign_1³], [Assign _lh_fillTable_LH_P2_0³ _lh_fillTable_LH_P2_1³]))) then [Known [LH_C _lh_fillTable_Assign_0³ [LH_C _lh_fillTable_LH_P2_0³ [LH_N]]]] else cs⁹))))
//│ 							in (fun f⁶⁹ -> (fun hx⁵ -> (fun tx⁵ -> [LH_C f⁶⁹(hx⁵, hy⁵) zipWith_lh_₃(f⁶⁹, tx⁵, ty⁵)]))))) else (fun _lh_listcomp_fun_ls_h¹⁸ -> (fun _lh_listcomp_fun¹⁸ -> (fun f⁷⁰ -> (fun hx⁶ -> (fun tx⁶ -> [LH_N])))))
//│ 				def enumFromTo_lh_₅(a³², b²²) = 
//│ 					if (a³² <= b²²) then 
//│ 						let _lh_listcomp_fun_ls_t²² = enumFromTo_lh_₅((a³² + 1), b²²)
//│ 						in let _lh_listcomp_fun_ls_h²³ = a³²
//│ 						in (fun _lh_fillTable_CSP_1⁵ -> (fun _lh_listcomp_fun³³ -> 
//│ 							let ty⁸ = _lh_listcomp_fun³³(_lh_listcomp_fun_ls_t²²)
//│ 							in let hy⁸ = 	
//│ 								let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para²¹ -> _lh_listcomp_fun_para²¹(_lh_listcomp_fun_ls_h²³, _lh_listcomp_fun³⁴))
//│ 								in _lh_listcomp_fun³⁴(enumFromTo_lh_₄(1, _lh_fillTable_CSP_1⁵))
//│ 							in (fun f¹⁰⁰ -> (fun hx¹¹ -> (fun tx¹¹ -> [LH_C f¹⁰⁰(hx¹¹, hy⁸) zipWith_lh_₂(f¹⁰⁰, tx¹¹, ty⁸)]))))) else (fun _lh_fillTable_CSP_1⁶ -> (fun _lh_listcomp_fun³⁵ -> (fun f¹⁰¹ -> (fun hx¹² -> (fun tx¹² -> [LH_N])))))
//│ 				def zipWith_lh_₂(f⁷⁹, xs¹⁵, ys¹⁵) = 
//│ 					case xs¹⁵ of {
//│ 						LH_C hx⁴ tx⁴ => ys¹⁵(f⁷⁹, hx⁴, tx⁴)
//│ 						| LH_N  => [LH_N]}
//│ 				def zipWith_lh_₃(f¹²⁰, xs¹⁷, ys¹⁷) = 
//│ 					case xs¹⁷ of {
//│ 						LH_C hx¹ tx¹ => ys¹⁷(f¹²⁰, hx¹, tx¹)
//│ 						| LH_N  => [LH_N]}
//│ 			def map_lh_₁₀(f¹²⁸, ls⁸⁹) = 
//│ 				case ls⁸⁹ of {
//│ 					LH_C h²¹ t²¹ => 
//│ 						let t⁷² = map_lh_₁₀(f¹²⁸, t²¹)
//│ 						in let h⁷¹ = f¹²⁸(h²¹)
//│ 						in (fun f¹²⁹ -> 
//│ 							let t⁷³ = map_lh_₁₂(f¹²⁹, t⁷²)
//│ 							in let h⁷² = f¹²⁹(h⁷¹)
//│ 							in (fun f¹³⁰ -> [LH_C f¹³⁰(h⁷²) map_lh_₁₁(f¹³⁰, t⁷³)]))
//│ 					| LH_N  => (fun f¹³¹ -> (fun f¹³² -> [LH_N]))}
//│ 			def tail_lh_₁(ls⁷¹) = 
//│ 				case ls⁷¹ of {
//│ 					LH_C h²² t²² => t²²
//│ 					| LH_N  => error⁰}
//│ 		def domainWipeOut_lh_₀(_lh_domainWipeOut_arg1², _lh_domainWipeOut_arg2²) = 
//│ 			case _lh_domainWipeOut_arg1² of {
//│ 				CSP _lh_domainWipeOut_CSP_0¹ _lh_domainWipeOut_CSP_1¹ _lh_domainWipeOut_CSP_2¹ => 
//│ 					let f⁵⁸ = (fun _lh_f_arg1¹¹ -> _lh_f_arg1¹¹(99))
//│ 					in mapTree_lh_₅(f⁵⁸, _lh_domainWipeOut_arg2²)
//│ 				| _  => error⁰}
//│ 			where
//│ 			def all_lh_₀(_lh_all_arg1², _lh_all_arg2²) = 
//│ 				case _lh_all_arg2² of {
//│ 					LH_N  => [True]
//│ 					| LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1²(_lh_all_LH_C_0¹) then all_lh_₀(_lh_all_arg1², _lh_all_LH_C_1¹) else [False]
//│ 					| _  => error⁰}
//│ 			def collect_lh_₀(_lh_collect_arg1²) = 
//│ 				case _lh_collect_arg1² of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_collect_LH_C_0¹ _lh_collect_LH_C_1¹ => case _lh_collect_LH_C_0¹ of {
//│ 						Known _lh_collect_Known_0¹ => union_lh_₂(_lh_collect_Known_0¹, collect_lh_₀(_lh_collect_LH_C_1¹))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def union_lh_₂(_lh_union_arg1⁶, _lh_union_arg2⁶) = 
//│ 					unionBy_lh_₂((fun a³⁵ -> (fun b²⁵ -> polyEq⁰(a³⁵, b²⁵))), _lh_union_arg1⁶, _lh_union_arg2⁶)
//│ 					where
//│ 					def unionBy_lh_₂(_lh_unionBy_arg1⁶, _lh_unionBy_arg2⁶, _lh_unionBy_arg3⁶) = 
//│ 						mappend_lh_₂(_lh_unionBy_arg2⁶, foldl_lh_₂(flip_lh_₂(deleteBy_lh_₂(_lh_unionBy_arg1⁶)), nubBy_lh_₂(_lh_unionBy_arg1⁶, _lh_unionBy_arg3⁶), _lh_unionBy_arg2⁶))
//│ 						where
//│ 						def deleteBy_lh_₂(_lh_deleteBy_arg1⁵, _lh_deleteBy_arg2⁵, _lh_deleteBy_arg3⁵) = 
//│ 							case _lh_deleteBy_arg3⁵ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_deleteBy_LH_C_0¹ _lh_deleteBy_LH_C_1¹ => if _lh_deleteBy_arg1⁵(_lh_deleteBy_arg2⁵, _lh_deleteBy_LH_C_0¹) then _lh_deleteBy_LH_C_1¹ else [LH_C _lh_deleteBy_LH_C_0¹ deleteBy_lh_₂(_lh_deleteBy_arg1⁵, _lh_deleteBy_arg2⁵, _lh_deleteBy_LH_C_1¹)]
//│ 								| _  => error⁰}
//│ 						def flip_lh_₂(_lh_flip_arg1⁴, _lh_flip_arg2⁴, _lh_flip_arg3⁴) = 
//│ 							_lh_flip_arg1⁴(_lh_flip_arg3⁴, _lh_flip_arg2⁴)
//│ 						def foldl_lh_₂(f⁵⁹, i⁴, ls⁵²) = 
//│ 							case ls⁵² of {
//│ 								LH_C h²⁶ t²⁶ => foldl_lh_₂(f⁵⁹, f⁵⁹(i⁴, h²⁶), t²⁶)
//│ 								| LH_N  => i⁴}
//│ 						def mappend_lh_₂(xs¹⁴, ys¹⁴) = 
//│ 							case xs¹⁴ of {
//│ 								LH_C h⁴¹ t⁴¹ => [LH_C h⁴¹ mappend_lh_₂(t⁴¹, ys¹⁴)]
//│ 								| LH_N  => ys¹⁴}
//│ 						def nubBy_lh_₂(_lh_nubBy_arg1⁶, _lh_nubBy_arg2⁶) = 
//│ 							case _lh_nubBy_arg2⁶ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_nubBy_LH_C_0² _lh_nubBy_LH_C_1² => [LH_C _lh_nubBy_LH_C_0² nubBy_lh_₂(_lh_nubBy_arg1⁶, filter_lh_₅((fun y⁶ -> not⁰(_lh_nubBy_arg1⁶(_lh_nubBy_LH_C_0², y⁶))), _lh_nubBy_LH_C_1²))]
//│ 								| _  => error⁰}
//│ 							where
//│ 							def filter_lh_₅(f⁹⁹, ls⁷⁶) = 
//│ 								case ls⁷⁶ of {
//│ 									LH_C h¹⁸ t¹⁸ => if f⁹⁹(h¹⁸) then [LH_C h¹⁸ filter_lh_₅(f⁹⁹, t¹⁸)] else filter_lh_₅(f⁹⁹, t¹⁸)
//│ 									| LH_N  => [LH_N]}
//│ 			def head_lh_₁(ls⁸⁵) = 
//│ 				case ls⁸⁵ of {
//│ 					LH_C h⁵⁰ t⁵⁰ => h⁵⁰
//│ 					| LH_N  => error⁰}
//│ 			def knownConflict_lh_₁(_lh_knownConflict_arg1⁴) = 
//│ 				case _lh_knownConflict_arg1⁴ of {
//│ 					Known _lh_knownConflict_Known_0² => case _lh_knownConflict_Known_0² of {
//│ 						LH_C _lh_knownConflict_LH_C_0² _lh_knownConflict_LH_C_1² => [True]
//│ 						| _  => [False]}
//│ 					| _  => [False]}
//│ 			def mapTree_lh_₅(_lh_mapTree_arg1⁹, _lh_mapTree_arg2⁹) = 
//│ 				_lh_mapTree_arg2⁹(_lh_mapTree_arg1⁹)
//│ 				where
//│ 				def map_lh_₁₁(f⁶⁷, ls⁶²) = 
//│ 					ls⁶²(f⁶⁷)
//│ 			def null_lh_₀(_lh_null_arg1²) = 
//│ 				case _lh_null_arg1² of {
//│ 					LH_N  => [True]
//│ 					| LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False]
//│ 					| _  => error⁰}
//│ 		def emptyTable_lh_₁(_lh_emptyTable_arg1⁴) = 
//│ 			case _lh_emptyTable_arg1⁴ of {
//│ 				CSP _lh_emptyTable_CSP_0² _lh_emptyTable_CSP_1² _lh_emptyTable_CSP_2² => [LH_C [LH_N] 
//│ 					let _lh_listcomp_fun⁴¹ = (fun _lh_listcomp_fun_para²⁵ -> _lh_listcomp_fun_para²⁵(_lh_emptyTable_CSP_1², _lh_listcomp_fun⁴¹))
//│ 					in _lh_listcomp_fun⁴¹(enumFromTo_lh_₇(1, _lh_emptyTable_CSP_0²))]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def enumFromTo_lh_₆(a²⁴, b¹⁶) = 
//│ 				if (a²⁴ <= b¹⁶) then 
//│ 					let _lh_listcomp_fun_ls_t¹⁷ = enumFromTo_lh_₆((a²⁴ + 1), b¹⁶)
//│ 					in (fun _lh_listcomp_fun¹⁹ -> [LH_C [Unknown] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁷)]) else (fun _lh_listcomp_fun²⁰ -> [LH_N])
//│ 			def enumFromTo_lh_₇(a³¹, b²¹) = 
//│ 				if (a³¹ <= b²¹) then 
//│ 					let _lh_listcomp_fun_ls_t²¹ = enumFromTo_lh_₇((a³¹ + 1), b²¹)
//│ 					in (fun _lh_emptyTable_CSP_1³ -> (fun _lh_listcomp_fun³⁰ -> [LH_C 
//│ 						let _lh_listcomp_fun³¹ = (fun _lh_listcomp_fun_para²⁰ -> _lh_listcomp_fun_para²⁰(_lh_listcomp_fun³¹))
//│ 						in _lh_listcomp_fun³¹(enumFromTo_lh_₆(1, _lh_emptyTable_CSP_1³)) _lh_listcomp_fun³⁰(_lh_listcomp_fun_ls_t²¹)])) else (fun _lh_emptyTable_CSP_1⁴ -> (fun _lh_listcomp_fun³² -> [LH_N]))
//│ 		def lookupCache_lh_₁(_lh_lookupCache_arg1³, _lh_lookupCache_arg2³) = 
//│ 			let f⁹⁷ = (fun _lh_f_arg1¹² -> (fun _lh_f_arg2¹⁸ -> _lh_f_arg2¹⁸(_lh_f_arg1¹²)))
//│ 			in mapTree_lh_₆(f⁹⁷(_lh_lookupCache_arg1³), _lh_lookupCache_arg2³)
//│ 			where
//│ 			def atIndex_lh_₁(n⁴, ls⁹²) = 
//│ 				if (n⁴ < 0) then error⁰ else case ls⁹² of {
//│ 					LH_C h³¹ t³¹ => if (n⁴ == 0) then h³¹ else atIndex_lh_₁((n⁴ - 1), t³¹)
//│ 					| LH_N  => error⁰}
//│ 			def checkComplete_lh_₇(_lh_checkComplete_arg1¹⁰, _lh_checkComplete_arg2¹⁰) = 
//│ 				if complete_lh_₇(_lh_checkComplete_arg1¹⁰, _lh_checkComplete_arg2¹⁰) then [Known [LH_N]] else [Unknown]
//│ 				where
//│ 				def complete_lh_₇(_lh_complete_arg1¹⁰, _lh_complete_arg2¹⁰) = 
//│ 					case _lh_complete_arg1¹⁰ of {
//│ 						CSP _lh_complete_CSP_0⁴ _lh_complete_CSP_1⁴ _lh_complete_CSP_2⁴ => (maxLevel_lh_₉(_lh_complete_arg2¹⁰) == _lh_complete_CSP_0⁴)
//│ 						| _  => error⁰}
//│ 					where
//│ 					def maxLevel_lh_₉(_lh_maxLevel_arg1¹⁹) = 
//│ 						_lh_maxLevel_arg1¹⁹(99)
//│ 			def head_lh_₂(ls⁶⁰) = 
//│ 				case ls⁶⁰ of {
//│ 					LH_C h²⁴ t²⁴ => h²⁴
//│ 					| LH_N  => error⁰}
//│ 			def mapTree_lh_₆(_lh_mapTree_arg1⁸, _lh_mapTree_arg2⁸) = 
//│ 				_lh_mapTree_arg2⁸(_lh_mapTree_arg1⁸)
//│ 				where
//│ 				def map_lh_₁₂(f⁸⁸, ls⁶⁹) = 
//│ 					ls⁶⁹(f⁸⁸)
//│ 			def value_lh_₁(_lh_value_arg1³) = 
//│ 				case _lh_value_arg1³ of {
//│ 					Assign _lh_value_Assign_0¹ _lh_value_Assign_1¹ => _lh_value_Assign_1¹
//│ 					| _  => error⁰}
//│ 	def map_lh_₁₃(f⁷⁴, ls⁶⁶) = 
//│ 		ls⁶⁶(f⁷⁴)
//│ 	def try_lh_₀(_lh_try_arg1², _lh_try_arg2²) = 
//│ 		length_lh_₀(search_lh_₀(_lh_try_arg2², queens_lh_₀(_lh_try_arg1²)))
//│ 		where
//│ 		def length_lh_₀(ls⁸³) = 
//│ 			ls⁸³(99)
//│ 		def queens_lh_₀(_lh_queens_arg1²) = 
//│ 			[CSP _lh_queens_arg1² _lh_queens_arg1² safe_lh_₀]
//│ 			where
//│ 			def safe_lh_₀(_lh_safe_arg1², _lh_safe_arg2²) = 
//│ 				case _lh_safe_arg1² of {
//│ 					Assign _lh_safe_Assign_0² _lh_safe_Assign_1² => case _lh_safe_arg2² of {
//│ 						Assign _lh_safe_Assign_0³ _lh_safe_Assign_1³ => ((_lh_safe_Assign_1² /= _lh_safe_Assign_1³) && (abs_lh_₀((_lh_safe_Assign_0² - _lh_safe_Assign_0³)) /= abs_lh_₁((_lh_safe_Assign_1² - _lh_safe_Assign_1³))))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def abs_lh_₀(_lh_abs_arg1³) = 
//│ 					if (_lh_abs_arg1³ > 0) then _lh_abs_arg1³ else (0 - _lh_abs_arg1³)
//│ 				def abs_lh_₁(_lh_abs_arg1⁴) = 
//│ 					if (_lh_abs_arg1⁴ > 0) then _lh_abs_arg1⁴ else (0 - _lh_abs_arg1⁴)
//│ 		def search_lh_₀(_lh_search_arg1², _lh_search_arg2²) = 
//│ 			(fun _lh_funcomp_x⁴¹ -> (fun _lh_funcomp_x⁴² -> (fun _lh_funcomp_x⁴³ -> (fun _lh_funcomp_x⁴⁴ -> (fun _lh_funcomp_x⁴⁵ -> map_lh_₁₅(fst_lh_₁, filter_lh_₆((fun _lh_funcomp_x⁴⁶ -> knownSolution_lh_₀(snd_lh_₀(_lh_funcomp_x⁴⁶))), _lh_funcomp_x⁴⁵)))(leaves_lh_₀(_lh_funcomp_x⁴⁴)))(prune_lh_₀((fun _lh_funcomp_x⁴⁷ -> knownConflict_lh_₂(snd_lh_₁(_lh_funcomp_x⁴⁷))), _lh_funcomp_x⁴³)))(_lh_search_arg1²(_lh_search_arg2², _lh_funcomp_x⁴²)))(mkTree_lh_₀(_lh_funcomp_x⁴¹)))(_lh_search_arg2²)
//│ 			where
//│ 			def filter_lh_₆(f¹⁰⁸, ls⁸⁰) = 
//│ 				case ls⁸⁰ of {
//│ 					LH_C h²⁷ t²⁷ => if f¹⁰⁸(h²⁷) then 
//│ 						let t⁶³ = filter_lh_₆(f¹⁰⁸, t²⁷)
//│ 						in let h⁶³ = h²⁷
//│ 						in (fun f¹⁰⁹ -> 
//│ 							let t⁶⁴ = map_lh_₁₅(f¹⁰⁹, t⁶³)
//│ 							in (fun _lh_dummy² -> (1 + length_lh_₀(t⁶⁴)))) else filter_lh_₆(f¹⁰⁸, t²⁷)
//│ 					| LH_N  => (fun f¹¹⁰ -> (fun _lh_dummy³ -> 0))}
//│ 			def fst_lh_₁(_lh_fst_arg1⁴) = 
//│ 				case _lh_fst_arg1⁴ of {
//│ 					LH_P2 _lh_fst_LH_P2_0¹ _lh_fst_LH_P2_1¹ => _lh_fst_LH_P2_0¹
//│ 					| _  => error⁰}
//│ 			def knownConflict_lh_₂(_lh_knownConflict_arg1⁵) = 
//│ 				case _lh_knownConflict_arg1⁵ of {
//│ 					Known _lh_knownConflict_Known_0¹ => case _lh_knownConflict_Known_0¹ of {
//│ 						LH_C _lh_knownConflict_LH_C_0¹ _lh_knownConflict_LH_C_1¹ => [True]
//│ 						| _  => [False]}
//│ 					| _  => [False]}
//│ 			def knownSolution_lh_₀(_lh_knownSolution_arg1²) = 
//│ 				case _lh_knownSolution_arg1² of {
//│ 					Known _lh_knownSolution_Known_0¹ => case _lh_knownSolution_Known_0¹ of {
//│ 						LH_N  => [True]
//│ 						| _  => [False]}
//│ 					| _  => [False]}
//│ 			def leaves_lh_₀(_lh_leaves_arg1²) = 
//│ 				case _lh_leaves_arg1² of {
//│ 					Node _lh_leaves_Node_0¹ _lh_leaves_Node_1¹ => case _lh_leaves_Node_1¹ of {
//│ 						LH_N  => [LH_C _lh_leaves_Node_0¹ [LH_N]]
//│ 						| _  => concat_lh_₀(map_lh_₁₄(leaves_lh_₀, _lh_leaves_Node_1¹))}
//│ 					| _  => error⁰}
//│ 				where
//│ 				def concat_lh_₀(lss²) = 
//│ 					lss²(99)
//│ 					where
//│ 					def mappend_lh_₃(xs¹⁰, ys¹⁰) = 
//│ 						case xs¹⁰ of {
//│ 							LH_C h⁴⁴ t⁴⁴ => [LH_C h⁴⁴ mappend_lh_₃(t⁴⁴, ys¹⁰)]
//│ 							| LH_N  => ys¹⁰}
//│ 				def map_lh_₁₄(f¹⁰⁷, ls⁷⁹) = 
//│ 					case ls⁷⁹ of {
//│ 						LH_C h²⁵ t²⁵ => 
//│ 							let t⁶² = map_lh_₁₄(f¹⁰⁷, t²⁵)
//│ 							in let h⁶² = f¹⁰⁷(h²⁵)
//│ 							in (fun _lh_dummy⁰ -> mappend_lh_₃(h⁶², concat_lh_₀(t⁶²)))
//│ 						| LH_N  => (fun _lh_dummy¹ -> [LH_N])}
//│ 			def map_lh_₁₅(f⁶³, ls⁵⁷) = 
//│ 				ls⁵⁷(f⁶³)
//│ 			def mkTree_lh_₀(_lh_mkTree_arg1²) = 
//│ 				case _lh_mkTree_arg1² of {
//│ 					CSP _lh_mkTree_CSP_0¹ _lh_mkTree_CSP_1¹ _lh_mkTree_CSP_2¹ => 
//│ 						let next² = (fun ss² -> if (maxLevel_lh_₁₀(ss²) < _lh_mkTree_CSP_0¹) then 
//│ 							let _lh_listcomp_fun²¹ = (fun _lh_listcomp_fun_para¹⁷ -> _lh_listcomp_fun_para¹⁷(_lh_listcomp_fun²¹, ss²))
//│ 							in _lh_listcomp_fun²¹(enumFromTo_lh_₈(1, _lh_mkTree_CSP_1¹)) else (fun f⁷¹ -> [LH_N]))
//│ 						in initTree_lh_₀(next², [LH_N])
//│ 					| _  => error⁰}
//│ 				where
//│ 				def enumFromTo_lh_₈(a³⁴, b²⁴) = 
//│ 					if (a³⁴ <= b²⁴) then 
//│ 						let _lh_listcomp_fun_ls_t²⁴ = enumFromTo_lh_₈((a³⁴ + 1), b²⁴)
//│ 						in let _lh_listcomp_fun_ls_h²⁴ = a³⁴
//│ 						in (fun _lh_listcomp_fun⁴² -> (fun ss³ -> 
//│ 							let t⁷¹ = _lh_listcomp_fun⁴²(_lh_listcomp_fun_ls_t²⁴)
//│ 							in let h⁷⁰ = [LH_C [Assign (maxLevel_lh_₁₁(ss³) + 1) _lh_listcomp_fun_ls_h²⁴] ss³]
//│ 							in (fun f¹²⁴ -> [LH_C f¹²⁴(h⁷⁰) map_lh_₁₆(f¹²⁴, t⁷¹)]))) else (fun _lh_listcomp_fun⁴³ -> (fun ss⁴ -> (fun f¹²⁵ -> [LH_N])))
//│ 				def initTree_lh_₀(_lh_initTree_arg1², _lh_initTree_arg2²) = 
//│ 					[Node _lh_initTree_arg2² map_lh_₁₆(initTree_lh_₀(_lh_initTree_arg1²), _lh_initTree_arg1²(_lh_initTree_arg2²))]
//│ 					where
//│ 					def map_lh_₁₆(f¹³⁵, ls⁹³) = 
//│ 						ls⁹³(f¹³⁵)
//│ 				def maxLevel_lh_₁₀(_lh_maxLevel_arg1²¹) = 
//│ 					case _lh_maxLevel_arg1²¹ of {
//│ 						LH_N  => 0
//│ 						| LH_C _lh_maxLevel_LH_C_0⁹ _lh_maxLevel_LH_C_1⁹ => case _lh_maxLevel_LH_C_0⁹ of {
//│ 							Assign _lh_maxLevel_Assign_0⁹ _lh_maxLevel_Assign_1⁹ => _lh_maxLevel_Assign_0⁹
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 				def maxLevel_lh_₁₁(_lh_maxLevel_arg1²⁴) = 
//│ 					case _lh_maxLevel_arg1²⁴ of {
//│ 						LH_N  => 0
//│ 						| LH_C _lh_maxLevel_LH_C_0³ _lh_maxLevel_LH_C_1³ => case _lh_maxLevel_LH_C_0³ of {
//│ 							Assign _lh_maxLevel_Assign_0³ _lh_maxLevel_Assign_1³ => _lh_maxLevel_Assign_0³
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 			def prune_lh_₀(_lh_prune_arg1²) = 
//│ 				filterTree_lh_₀((fun _lh_funcomp_x⁴⁰ -> not⁰(_lh_prune_arg1²(_lh_funcomp_x⁴⁰))))
//│ 				where
//│ 				def filterTree_lh_₀(_lh_filterTree_arg1²) = 
//│ 					let f⁸² = (fun a²⁸ -> (fun cs¹¹ -> [Node a²⁸ filter_lh_₇((fun _lh_funcomp_x³⁶ -> _lh_filterTree_arg1²(label_lh_₂(_lh_funcomp_x³⁶))), cs¹¹)]))
//│ 					in foldTree_lh_₂(f⁸²)
//│ 					where
//│ 					def filter_lh_₇(f⁷³, ls⁶⁵) = 
//│ 						ls⁶⁵(f⁷³)
//│ 					def foldTree_lh_₂(_lh_foldTree_arg1⁵, _lh_foldTree_arg2⁵) = 
//│ 						case _lh_foldTree_arg2⁵ of {
//│ 							Node _lh_foldTree_Node_0² _lh_foldTree_Node_1² => _lh_foldTree_arg1⁵(_lh_foldTree_Node_0², map_lh_₁₇(foldTree_lh_₂(_lh_foldTree_arg1⁵), _lh_foldTree_Node_1²))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def map_lh_₁₇(f¹²¹, ls⁸⁶) = 
//│ 							case ls⁸⁶ of {
//│ 								LH_C h⁴⁶ t⁴⁶ => 
//│ 									let t⁷⁰ = map_lh_₁₇(f¹²¹, t⁴⁶)
//│ 									in let h⁶⁹ = f¹²¹(h⁴⁶)
//│ 									in (fun f¹²² -> if f¹²²(h⁶⁹) then [LH_C h⁶⁹ filter_lh_₇(f¹²², t⁷⁰)] else filter_lh_₇(f¹²², t⁷⁰))
//│ 								| LH_N  => (fun f¹²³ -> [LH_N])}
//│ 					def label_lh_₂(_lh_label_arg1⁴) = 
//│ 						case _lh_label_arg1⁴ of {
//│ 							Node _lh_label_Node_0¹ _lh_label_Node_1¹ => _lh_label_Node_0¹
//│ 							| _  => error⁰}
//│ 			def snd_lh_₀(_lh_snd_arg1³) = 
//│ 				case _lh_snd_arg1³ of {
//│ 					LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1²
//│ 					| _  => error⁰}
//│ 			def snd_lh_₁(_lh_snd_arg1⁴) = 
//│ 				case _lh_snd_arg1⁴ of {
//│ 					LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 					| _  => error⁰}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
