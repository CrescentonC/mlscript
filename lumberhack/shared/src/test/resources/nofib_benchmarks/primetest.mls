:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
drop_lz n ls = case (force ls) of
                  [] -> lazy []
                  (h:t) -> if n > 0 then (drop_lz (n - 1) t) else t
even k = (k `mod` 2) == 0
splitAt_lz n ls = (take_lz n ls, drop_lz n ls)
int_val_of_char x = (int_of_char x) - 48
int_val_of_string s = f s 0
  where
    f [] a = a
    f (h:t) a = f t ((10*a) + (int_val_of_char h))
break p [] = ([], [])
break p (x:xs) = if p x then ([], (x:xs)) else case (break p xs) of { (ys, zs) -> ((x:ys), zs) }
lines s = case break (\x -> polyEq x '|') s of
                  (l, s') -> (l:(case s' of { [] -> []; _:s'' -> lines s'' }))
divmod a b = ((a `div` b), (a `mod` b))
process :: [String] -> [String]
process x = doInput (randomInts 111 47) x
doInput :: State -> [String] -> [String]
doInput state []     = []
doInput state (l:ls) = doLine l (\state -> doInput state ls) state
doLine :: String -> (State -> [String]) -> State -> [String]
doLine cs cont rs =
  let n = (int_val_of_string cs) in
  case (multiTest 100 rs n) of
    (t,rs') -> (if t then ("Probably prime": (cont rs')) else ("Composite": (cont rs')))
type State = [Int]
---------------------
makeNumber :: Integer -> [Integer] -> Integer
makeNumber b = foldl (\a -> \x -> (a * b) + x) 0
chop :: Integer -> Integer -> [Integer]
chop b =
  let chop' = (\a -> \n -> (case (n `divmod` b) of { (q,r) -> if n == 0 then a else chop' (r:a) q }))
  in
  chop' []
powerMod :: Integer -> Integer -> Integer -> Integer
powerMod a 0 m = 1
powerMod a b m =
  let a' = (mod a m) in
  let f = \a -> \b -> \c ->
          let g = (\a -> \b -> if even b then g ((a*a) `mod` m) (b `div` 2) else f a (b-1) ((a*c) `mod` m)) in
          if b == 0 then c else g a b
  in
  f a' (b-1) a'
-- log2 :: Integer -> Integer
log2 x = (length . chop 2) x
--------------------------
randomInts :: Int -> Int -> [Int]
randomInts s1 s2 = if (1 <= s1) && (s1 <= 2147483562) then
                   if (1 <= s2) && (s2 <= 2147483398) then rands s1 s2
                   else error "randomInts: Bad second seed."
                   else error "randomInts: Bad first seed."
rands :: Int -> Int -> [Int]
rands s1 s2 =
    let k    = (s1 `div` 53668) in
    let s1'  = ((40014 * (s1 - (k * 53668))) - (k * 12211)) in
    let s1'' = (if s1' < 0 then s1' + 2147483563 else s1') in
    let k'   = (s2 `div` 52774) in
    let s2'  = ((40692 * (s2 - (k' * 52774))) - (k' * 3791)) in
    let s2'' = (if s2' < 0 then s2' + 2147483399 else s2') in
    let z    = (s1'' - s2'') in
    if z < 1 then lazy ((z + 2147483562) : (rands s1'' s2'')) else lazy (z : (rands s1'' s2''))
--------------------------
multiTest :: Int -> [Int] -> Integer -> (Bool, [Int])
multiTest k rs n =
  let mTest = \k -> \rs ->
                  if k == 0 then
                    (True, rs)
                  else
                    case (singleTest n (findKQ n) rs) of { (t, rs') ->
                    if t then mTest (k-1) rs' else (False, rs') }
  in
  if ((n <= 1) || (even n)) then (n==2, rs) else mTest k rs
findKQ :: Integer -> (Integer, Integer)
findKQ n = f (0, (n-1))
  where
    f (k,q) = case (q `divmod` 2) of { (d,r) -> if r == 0 then f (k+1, d) else (k, q) }
singleTest :: Integer -> (Integer, Integer) -> [Int] -> (Bool, [Int])
singleTest n kq rs
  = case (random (n-2) rs) of { (x, rs') -> (singleTestX n kq (2+x), rs') }
singleTestX n (k, q) x =
  let square = (\x -> (x*x) `mod` n) in
  let witness = \ls -> case ls of {
    [] -> False;
    (t:ts) -> if t == (n-1) then True else (if t == 1 then False else witness ts)
  }
  in
  case (take_lz (k) (iterate square (powerMod x q n))) of {
    (t:ts) -> (t == 1) || (t == (n-1)) || witness ts
  }
random :: Integer -> [Int] -> (Integer, [Int])
random n rs =
  let ns        = (chop 65536 n) in
  case (splitAt_lz (length ns) rs) of { (rs1,rs2) -> (makeNumber 65536 (uniform ns rs1), rs2) }
uniform :: [Integer] -> [Int] -> [Integer]
uniform [n]    [r]    = [(r) `mod` n]
uniform (n:ns) (r:rs) =
  let t = ((r) `mod` (n+1)) in
  if t == n then t: (uniform ns rs)
            else t: (map (\x -> ((x) `mod` 65536)) rs)
---------------------
testPrimetest_nofib dummy = 
  let cts = primId "24|48|47|1317|8901" in
  process (lines cts)
testPrimetest_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testPrimetest_nofib_₀^2928(primId⁰(0))
//│ def break_₀(_lh_break_arg1¹, _lh_break_arg2¹) = case _lh_break_arg2¹ of {
//│ 	LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 	| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]] else 
//│ 		let _lh_matchIdent¹⁶ = break_₀^2331(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ 		in case _lh_matchIdent¹⁶ of {
//│ 			LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def chop_₀(_lh_chop_arg1¹) = 
//│ 	let chop'¹ = (fun a⁹ -> (fun n⁹ -> 
//│ 		let _lh_matchIdent²⁰ = divmod_₁^2446(n⁹, _lh_chop_arg1¹)
//│ 		in case _lh_matchIdent²⁰ of {
//│ 			LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁹ == 0) then a⁹ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁹], _lh_chop_LH_P2_0¹)
//│ 			| _  => error⁰}))
//│ 	in chop'¹([LH_N])
//│ def divmod_₀(_lh_divmod_arg1², _lh_divmod_arg2²) = [LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]
//│ def divmod_₁(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ def doInput_₀(_lh_doInput_arg1¹, _lh_doInput_arg2¹) = case _lh_doInput_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀^2378(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀^2381(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹)
//│ 	| _  => error⁰}
//│ def doLine_₀(_lh_doLine_arg1¹, _lh_doLine_arg2¹, _lh_doLine_arg3¹) = 
//│ 	let n⁸ = int_val_of_string_₀^2233(_lh_doLine_arg1¹)
//│ 	in let _lh_matchIdent¹⁵ = multiTest_₀^2236(100, _lh_doLine_arg3¹, n⁸)
//│ 	in case _lh_matchIdent¹⁵ of {
//│ 		LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)]
//│ 		| _  => error⁰}
//│ def drop_lz_₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = 
//│ 	let _lh_matchIdent²¹ = force⁰(_lh_drop_lz_arg2¹)
//│ 	in case _lh_matchIdent²¹ of {
//│ 		LH_N  => lazy⁰([LH_N])
//│ 		| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀^2498((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹
//│ 		| _  => error⁰}
//│ def even_₀(_lh_even_arg1¹) = ((_lh_even_arg1¹ % 2) == 0)
//│ def even_₁(_lh_even_arg1²) = ((_lh_even_arg1² % 2) == 0)
//│ def findKQ_₀(_lh_findKQ_arg1¹) = 
//│ 	let f¹⁵ = (fun _lh_f_arg1² -> case _lh_f_arg1² of {
//│ 		LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => 
//│ 			let _lh_matchIdent¹⁹ = divmod_₀^2395(_lh_f_LH_P2_1², 2)
//│ 			in case _lh_matchIdent¹⁹ of {
//│ 				LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹⁵([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²]
//│ 				| _  => error⁰}
//│ 		| _  => error⁰})
//│ 	in f¹⁵([LH_P2 0 (_lh_findKQ_arg1¹ - 1)])
//│ def foldl_₀(f²⁰, i³, ls²⁵) = case ls²⁵ of {
//│ 	LH_C h²⁴ t²⁹ => foldl_₀^2764(f²⁰, f²⁰(i³, h²⁴), t²⁹)
//│ 	| LH_N  => i³}
//│ def int_val_of_char_₀(_lh_int_val_of_char_arg1¹) = (int_of_char⁰(_lh_int_val_of_char_arg1¹) - 48)
//│ def int_val_of_string_₀(_lh_int_val_of_string_arg1¹) = 
//│ 	let f¹⁸ = (fun _lh_f_arg1³ -> (fun _lh_f_arg2¹ -> case _lh_f_arg1³ of {
//│ 		LH_N  => _lh_f_arg2¹
//│ 		| LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀^2621(_lh_f_LH_C_0¹)))
//│ 		| _  => error⁰}))
//│ 	in f¹⁸(_lh_int_val_of_string_arg1¹, 0)
//│ def iterate_₀(f¹⁶, x⁹) = lazy⁰([LH_C x⁹ iterate_₀^2516(f¹⁶, f¹⁶(x⁹))])
//│ def length_₀(ls²²) = case ls²² of {
//│ 	LH_C h²² t²⁷ => (1 + length_₀^2641(t²⁷))
//│ 	| LH_N  => 0}
//│ def lines_₀(_lh_lines_arg1¹) = 
//│ 	let _lh_matchIdent¹⁷ = break_₀^2350((fun x⁸ -> polyEq⁰(x⁸, '|')), _lh_lines_arg1¹)
//│ 	in case _lh_matchIdent¹⁷ of {
//│ 		LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ 
//│ 			let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ 			in case _lh_matchIdent¹⁸ of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀^2365(_lh_lines_LH_C_1¹)
//│ 				| _  => error⁰}]
//│ 		| _  => error⁰}
//│ def makeNumber_₀(_lh_makeNumber_arg1¹) = foldl_₀^2912((fun a¹² -> (fun x¹⁴ -> ((a¹² * _lh_makeNumber_arg1¹) + x¹⁴))), 0)
//│ def map_₀(f¹⁹, ls²⁴) = case ls²⁴ of {
//│ 	LH_C h²³ t²⁸ => [LH_C f¹⁹(h²³) map_₀^2753(f¹⁹, t²⁸)]
//│ 	| LH_N  => [LH_N]}
//│ def multiTest_₀(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹, _lh_multiTest_arg3¹) = 
//│ 	let mTest¹ = (fun k³ -> (fun rs¹ -> if (k³ == 0) then [LH_P2 [True] rs¹] else 
//│ 		let _lh_matchIdent¹⁴ = singleTest_₀^2175(_lh_multiTest_arg3¹, findKQ_₀^2178(_lh_multiTest_arg3¹), rs¹)
//│ 		in case _lh_matchIdent¹⁴ of {
//│ 			LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k³ - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹]
//│ 			| _  => error⁰}))
//│ 	in if ((_lh_multiTest_arg3¹ <= 1) || even_₀^2212(_lh_multiTest_arg3¹)) then [LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹] else mTest¹(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹)
//│ def powerMod_₀(_lh_powerMod_arg1¹, _lh_powerMod_arg2¹, _lh_powerMod_arg3¹) = case _lh_powerMod_arg2¹ of {
//│ 	0  => 1
//│ 	| _  => 
//│ 		let a'¹ = (_lh_powerMod_arg1¹ mod _lh_powerMod_arg3¹)
//│ 		in let f¹⁷ = (fun a¹⁰ -> (fun b⁴ -> (fun c¹ -> 
//│ 			let g¹ = (fun a¹¹ -> (fun b⁵ -> if even_₁^2534(b⁵) then g¹(((a¹¹ * a¹¹) % _lh_powerMod_arg3¹), div⁰(b⁵, 2)) else f¹⁷(a¹¹, (b⁵ - 1), ((a¹¹ * c¹) % _lh_powerMod_arg3¹))))
//│ 			in if (b⁴ == 0) then c¹ else g¹(a¹⁰, b⁴))))
//│ 		in f¹⁷(a'¹, (_lh_powerMod_arg2¹ - 1), a'¹)}
//│ def process_₀(_lh_process_arg1¹) = doInput_₀^2309(randomInts_₀^2310(111, 47), _lh_process_arg1¹)
//│ def randomInts_₀(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) = if ((1 <= _lh_randomInts_arg1¹) && (_lh_randomInts_arg1¹ <= 2147483562)) then if ((1 <= _lh_randomInts_arg2¹) && (_lh_randomInts_arg2¹ <= 2147483398)) then rands_₀^2042(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ def random_₀(_lh_random_arg1¹, _lh_random_arg2¹) = 
//│ 	let ns¹ = chop_₀^1986(65536, _lh_random_arg1¹)
//│ 	in let _lh_matchIdent¹³ = splitAt_lz_₀^1991(length_₀^1992(ns¹), _lh_random_arg2¹)
//│ 	in case _lh_matchIdent¹³ of {
//│ 		LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀^1999(65536, uniform_₀^2002(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]
//│ 		| _  => error⁰}
//│ def rands_₀(_lh_rands_arg1¹, _lh_rands_arg2¹) = 
//│ 	let k² = div⁰(_lh_rands_arg1¹, 53668)
//│ 	in let s1'¹ = ((40014 * (_lh_rands_arg1¹ - (k² * 53668))) - (k² * 12211))
//│ 	in let s1''¹ = if (s1'¹ < 0) then (s1'¹ + 2147483563) else s1'¹
//│ 	in let k'¹ = div⁰(_lh_rands_arg2¹, 52774)
//│ 	in let s2'¹ = ((40692 * (_lh_rands_arg2¹ - (k'¹ * 52774))) - (k'¹ * 3791))
//│ 	in let s2''¹ = if (s2'¹ < 0) then (s2'¹ + 2147483399) else s2'¹
//│ 	in let z¹ = (s1''¹ - s2''¹)
//│ 	in if (z¹ < 1) then lazy⁰([LH_C (z¹ + 2147483562) rands_₀^1847(s1''¹, s2''¹)]) else lazy⁰([LH_C z¹ rands_₀^1856(s1''¹, s2''¹)])
//│ def singleTestX_₀(_lh_singleTestX_arg1¹, _lh_singleTestX_arg2¹, _lh_singleTestX_arg3¹) = case _lh_singleTestX_arg2¹ of {
//│ 	LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => 
//│ 		let square¹ = (fun x¹⁰ -> ((x¹⁰ * x¹⁰) % _lh_singleTestX_arg1¹))
//│ 		in let witness¹ = (fun ls²³ -> 
//│ 			let _lh_matchIdent²² = ls²³
//│ 			in case _lh_matchIdent²² of {
//│ 				LH_N  => [False]
//│ 				| LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²)
//│ 				| _  => error⁰})
//│ 		in let _lh_matchIdent²³ = take_lz_₁^2687(_lh_singleTestX_LH_P2_0¹, iterate_₀^2690(square¹, powerMod_₀^2693(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ 		in case _lh_matchIdent²³ of {
//│ 			LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def singleTest_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, _lh_singleTest_arg3¹) = 
//│ 	let _lh_matchIdent¹² = random_₀^1873((_lh_singleTest_arg1¹ - 2), _lh_singleTest_arg3¹)
//│ 	in case _lh_matchIdent¹² of {
//│ 		LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀^1883(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]
//│ 		| _  => error⁰}
//│ def splitAt_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = [LH_P2 take_lz_₀^2736(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀^2741(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ def take_lz_₀(n⁷, ls²¹) = if (n⁷ > 0) then case force⁰(ls²¹) of {
//│ 	LH_C h²¹ t²⁶ => [LH_C h²¹ take_lz_₀^1970((n⁷ - 1), t²⁶)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz_₁(n⁶, ls²⁰) = if (n⁶ > 0) then case force⁰(ls²⁰) of {
//│ 	LH_C h²⁰ t²⁵ => [LH_C h²⁰ take_lz_₁^1731((n⁶ - 1), t²⁵)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testPrimetest_nofib_₀(_lh_testPrimetest_nofib_arg1¹) = 
//│ 	let cts¹ = primId⁰([LH_C '2' [LH_C '4' [LH_C '|' [LH_C '4' [LH_C '8' [LH_C '|' [LH_C '4' [LH_C '7' [LH_C '|' [LH_C '1' [LH_C '3' [LH_C '1' [LH_C '7' [LH_C '|' [LH_C '8' [LH_C '9' [LH_C '0' [LH_C '1' [LH_N]]]]]]]]]]]]]]]]]]])
//│ 	in process_₀^1954(lines_₀^1955(cts¹))
//│ def uniform_₀(_lh_uniform_arg1¹, _lh_uniform_arg2¹) = case _lh_uniform_arg1¹ of {
//│ 	LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {
//│ 		LH_N  => case _lh_uniform_arg2¹ of {
//│ 			LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {
//│ 				LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]
//│ 				| _  => case _lh_uniform_arg2¹ of {
//│ 					LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => 
//│ 						let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 						in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀^2807(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀^2814((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)]
//│ 					| _  => error⁰}}
//│ 			| _  => case _lh_uniform_arg2¹ of {
//│ 				LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => 
//│ 					let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 					in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀^2846(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀^2853((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)]
//│ 				| _  => error⁰}}
//│ 		| _  => case _lh_uniform_arg2¹ of {
//│ 			LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => 
//│ 				let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 				in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀^2885(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀^2892((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)]
//│ 			| _  => error⁰}}
//│ 	| _  => error⁰}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec break__d0 _lh_break_arg1_1 _lh_break_arg2_1 =
//│ 		  (match _lh_break_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_P2((`LH_N), (`LH_N)))
//│ 		    | `LH_C(_lh_break_LH_C_0_1, _lh_break_LH_C_1_1) -> 
//│ 		      (if (_lh_break_arg1_1 _lh_break_LH_C_0_1) then
//│ 		        (`LH_P2((`LH_N), (`LH_C(_lh_break_LH_C_0_1, _lh_break_LH_C_1_1))))
//│ 		      else
//│ 		        (let rec _lh_matchIdent_1_6 = ((break__d0 _lh_break_arg1_1) _lh_break_LH_C_1_1) in
//│ 		          (match _lh_matchIdent_1_6 with
//│ 		            | `LH_P2(_lh_break_LH_P2_0_1, _lh_break_LH_P2_1_1) -> 
//│ 		              (`LH_P2((`LH_C(_lh_break_LH_C_0_1, _lh_break_LH_P2_0_1)), _lh_break_LH_P2_1_1))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and chop__d0 _lh_chop_arg1_1 =
//│ 		  (let rec chop'_1 = (fun a_9 n_9 -> 
//│ 		    (let rec _lh_matchIdent_2_0 = ((divmod__d1 n_9) _lh_chop_arg1_1) in
//│ 		      (match _lh_matchIdent_2_0 with
//│ 		        | `LH_P2(_lh_chop_LH_P2_0_1, _lh_chop_LH_P2_1_1) -> 
//│ 		          (if (n_9 = 0) then
//│ 		            a_9
//│ 		          else
//│ 		            ((chop'_1 (`LH_C(_lh_chop_LH_P2_1_1, a_9))) _lh_chop_LH_P2_0_1))
//│ 		        | _ -> 
//│ 		          (failwith "error")))) in
//│ 		    (chop'_1 (`LH_N)))
//│ 		and divmod__d0 _lh_divmod_arg1_2 _lh_divmod_arg2_2 =
//│ 		  (`LH_P2((_lh_divmod_arg1_2 / _lh_divmod_arg2_2), (_lh_divmod_arg1_2 mod _lh_divmod_arg2_2)))
//│ 		and divmod__d1 _lh_divmod_arg1_1 _lh_divmod_arg2_1 =
//│ 		  (`LH_P2((_lh_divmod_arg1_1 / _lh_divmod_arg2_1), (_lh_divmod_arg1_1 mod _lh_divmod_arg2_1)))
//│ 		and doInput__d0 _lh_doInput_arg1_1 _lh_doInput_arg2_1 =
//│ 		  (match _lh_doInput_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_doInput_LH_C_0_1, _lh_doInput_LH_C_1_1) -> 
//│ 		      (((doLine__d0 _lh_doInput_LH_C_0_1) (fun state_1 -> 
//│ 		        ((doInput__d0 state_1) _lh_doInput_LH_C_1_1))) _lh_doInput_arg1_1)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and doLine__d0 _lh_doLine_arg1_1 _lh_doLine_arg2_1 _lh_doLine_arg3_1 =
//│ 		  (let rec n_8 = (int_val_of_string__d0 _lh_doLine_arg1_1) in
//│ 		    (let rec _lh_matchIdent_1_5 = (((multiTest__d0 100) _lh_doLine_arg3_1) n_8) in
//│ 		      (match _lh_matchIdent_1_5 with
//│ 		        | `LH_P2(_lh_doLine_LH_P2_0_1, _lh_doLine_LH_P2_1_1) -> 
//│ 		          (if _lh_doLine_LH_P2_0_1 then
//│ 		            (`LH_C((`LH_C('P', (`LH_C('r', (`LH_C('o', (`LH_C('b', (`LH_C('a', (`LH_C('b', (`LH_C('l', (`LH_C('y', (`LH_C(' ', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('m', (`LH_C('e', (`LH_N))))))))))))))))))))))))))))), (_lh_doLine_arg2_1 _lh_doLine_LH_P2_1_1)))
//│ 		          else
//│ 		            (`LH_C((`LH_C('C', (`LH_C('o', (`LH_C('m', (`LH_C('p', (`LH_C('o', (`LH_C('s', (`LH_C('i', (`LH_C('t', (`LH_C('e', (`LH_N))))))))))))))))))), (_lh_doLine_arg2_1 _lh_doLine_LH_P2_1_1))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		and drop_lz__d0 _lh_drop_lz_arg1_1 _lh_drop_lz_arg2_1 =
//│ 		  (let rec _lh_matchIdent_2_1 = (Lazy.force _lh_drop_lz_arg2_1) in
//│ 		    (match _lh_matchIdent_2_1 with
//│ 		      | `LH_N -> 
//│ 		        (lazy (`LH_N))
//│ 		      | `LH_C(_lh_drop_lz_LH_C_0_1, _lh_drop_lz_LH_C_1_1) -> 
//│ 		        (if (_lh_drop_lz_arg1_1 > 0) then
//│ 		          ((drop_lz__d0 (_lh_drop_lz_arg1_1 - 1)) _lh_drop_lz_LH_C_1_1)
//│ 		        else
//│ 		          _lh_drop_lz_LH_C_1_1)
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and even__d0 _lh_even_arg1_1 =
//│ 		  ((_lh_even_arg1_1 mod 2) = 0)
//│ 		and even__d1 _lh_even_arg1_2 =
//│ 		  ((_lh_even_arg1_2 mod 2) = 0)
//│ 		and findKQ__d0 _lh_findKQ_arg1_1 =
//│ 		  (let rec f_1_5 = (fun _lh_f_arg1_2 -> 
//│ 		    (match _lh_f_arg1_2 with
//│ 		      | `LH_P2(_lh_f_LH_P2_0_2, _lh_f_LH_P2_1_2) -> 
//│ 		        (let rec _lh_matchIdent_1_9 = ((divmod__d0 _lh_f_LH_P2_1_2) 2) in
//│ 		          (match _lh_matchIdent_1_9 with
//│ 		            | `LH_P2(_lh_f_LH_P2_0_3, _lh_f_LH_P2_1_3) -> 
//│ 		              (if (_lh_f_LH_P2_1_3 = 0) then
//│ 		                (f_1_5 (`LH_P2((_lh_f_LH_P2_0_2 + 1), _lh_f_LH_P2_0_3)))
//│ 		              else
//│ 		                (`LH_P2(_lh_f_LH_P2_0_2, _lh_f_LH_P2_1_2)))
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error"))) in
//│ 		    (f_1_5 (`LH_P2(0, (_lh_findKQ_arg1_1 - 1)))))
//│ 		and foldl__d0 f_2_0 i_3 ls_2_5 =
//│ 		  (match ls_2_5 with
//│ 		    | `LH_C(h_2_4, t_2_9) -> 
//│ 		      (((foldl__d0 f_2_0) ((f_2_0 i_3) h_2_4)) t_2_9)
//│ 		    | `LH_N -> 
//│ 		      i_3)
//│ 		and int_val_of_char__d0 _lh_int_val_of_char_arg1_1 =
//│ 		  ((int_of_char _lh_int_val_of_char_arg1_1) - 48)
//│ 		and int_val_of_string__d0 _lh_int_val_of_string_arg1_1 =
//│ 		  (let rec f_1_8 = (fun _lh_f_arg1_3 _lh_f_arg2_1 -> 
//│ 		    (match _lh_f_arg1_3 with
//│ 		      | `LH_N -> 
//│ 		        _lh_f_arg2_1
//│ 		      | `LH_C(_lh_f_LH_C_0_1, _lh_f_LH_C_1_1) -> 
//│ 		        ((f_1_8 _lh_f_LH_C_1_1) ((10 * _lh_f_arg2_1) + (int_val_of_char__d0 _lh_f_LH_C_0_1)))
//│ 		      | _ -> 
//│ 		        (failwith "error"))) in
//│ 		    ((f_1_8 _lh_int_val_of_string_arg1_1) 0))
//│ 		and iterate__d0 f_1_6 x_9 =
//│ 		  (lazy (`LH_C(x_9, ((iterate__d0 f_1_6) (f_1_6 x_9)))))
//│ 		and length__d0 ls_2_2 =
//│ 		  (match ls_2_2 with
//│ 		    | `LH_C(h_2_2, t_2_7) -> 
//│ 		      (1 + (length__d0 t_2_7))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and lines__d0 _lh_lines_arg1_1 =
//│ 		  (let rec _lh_matchIdent_1_7 = ((break__d0 (fun x_8 -> 
//│ 		    (x_8 = '|'))) _lh_lines_arg1_1) in
//│ 		    (match _lh_matchIdent_1_7 with
//│ 		      | `LH_P2(_lh_lines_LH_P2_0_1, _lh_lines_LH_P2_1_1) -> 
//│ 		        (`LH_C(_lh_lines_LH_P2_0_1, (let rec _lh_matchIdent_1_8 = _lh_lines_LH_P2_1_1 in
//│ 		          (match _lh_matchIdent_1_8 with
//│ 		            | `LH_N -> 
//│ 		              (`LH_N)
//│ 		            | `LH_C(_lh_lines_LH_C_0_1, _lh_lines_LH_C_1_1) -> 
//│ 		              (lines__d0 _lh_lines_LH_C_1_1)
//│ 		            | _ -> 
//│ 		              (failwith "error")))))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and makeNumber__d0 _lh_makeNumber_arg1_1 =
//│ 		  ((foldl__d0 (fun a_1_2 x_1_4 -> 
//│ 		    ((a_1_2 * _lh_makeNumber_arg1_1) + x_1_4))) 0)
//│ 		and map__d0 f_1_9 ls_2_4 =
//│ 		  (match ls_2_4 with
//│ 		    | `LH_C(h_2_3, t_2_8) -> 
//│ 		      (`LH_C((f_1_9 h_2_3), ((map__d0 f_1_9) t_2_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and multiTest__d0 _lh_multiTest_arg1_1 _lh_multiTest_arg2_1 _lh_multiTest_arg3_1 =
//│ 		  (let rec mTest_1 = (fun k_3 rs_1 -> 
//│ 		    (if (k_3 = 0) then
//│ 		      (`LH_P2(true, rs_1))
//│ 		    else
//│ 		      (let rec _lh_matchIdent_1_4 = (((singleTest__d0 _lh_multiTest_arg3_1) (findKQ__d0 _lh_multiTest_arg3_1)) rs_1) in
//│ 		        (match _lh_matchIdent_1_4 with
//│ 		          | `LH_P2(_lh_multiTest_LH_P2_0_1, _lh_multiTest_LH_P2_1_1) -> 
//│ 		            (if _lh_multiTest_LH_P2_0_1 then
//│ 		              ((mTest_1 (k_3 - 1)) _lh_multiTest_LH_P2_1_1)
//│ 		            else
//│ 		              (`LH_P2(false, _lh_multiTest_LH_P2_1_1)))
//│ 		          | _ -> 
//│ 		            (failwith "error"))))) in
//│ 		    (if ((_lh_multiTest_arg3_1 <= 1) || (even__d0 _lh_multiTest_arg3_1)) then
//│ 		      (`LH_P2((_lh_multiTest_arg3_1 = 2), _lh_multiTest_arg2_1))
//│ 		    else
//│ 		      ((mTest_1 _lh_multiTest_arg1_1) _lh_multiTest_arg2_1)))
//│ 		and powerMod__d0 _lh_powerMod_arg1_1 _lh_powerMod_arg2_1 _lh_powerMod_arg3_1 =
//│ 		  (match _lh_powerMod_arg2_1 with
//│ 		    | 0 -> 
//│ 		      1
//│ 		    | _ -> 
//│ 		      (let rec a'_1 = (_lh_powerMod_arg1_1 mod _lh_powerMod_arg3_1) in
//│ 		        (let rec f_1_7 = (fun a_1_0 b_4 c_1 -> 
//│ 		          (let rec g_1 = (fun a_1_1 b_5 -> 
//│ 		            (if (even__d1 b_5) then
//│ 		              ((g_1 ((a_1_1 * a_1_1) mod _lh_powerMod_arg3_1)) (b_5 / 2))
//│ 		            else
//│ 		              (((f_1_7 a_1_1) (b_5 - 1)) ((a_1_1 * c_1) mod _lh_powerMod_arg3_1)))) in
//│ 		            (if (b_4 = 0) then
//│ 		              c_1
//│ 		            else
//│ 		              ((g_1 a_1_0) b_4)))) in
//│ 		          (((f_1_7 a'_1) (_lh_powerMod_arg2_1 - 1)) a'_1))))
//│ 		and process__d0 _lh_process_arg1_1 =
//│ 		  ((doInput__d0 ((randomInts__d0 111) 47)) _lh_process_arg1_1)
//│ 		and randomInts__d0 _lh_randomInts_arg1_1 _lh_randomInts_arg2_1 =
//│ 		  (if ((1 <= _lh_randomInts_arg1_1) && (_lh_randomInts_arg1_1 <= 2147483562)) then
//│ 		    (if ((1 <= _lh_randomInts_arg2_1) && (_lh_randomInts_arg2_1 <= 2147483398)) then
//│ 		      ((rands__d0 _lh_randomInts_arg1_1) _lh_randomInts_arg2_1)
//│ 		    else
//│ 		      ((failwith "error") (`LH_C('r', (`LH_C('a', (`LH_C('n', (`LH_C('d', (`LH_C('o', (`LH_C('m', (`LH_C('I', (`LH_C('n', (`LH_C('t', (`LH_C('s', (`LH_C(':', (`LH_C(' ', (`LH_C('B', (`LH_C('a', (`LH_C('d', (`LH_C(' ', (`LH_C('s', (`LH_C('e', (`LH_C('c', (`LH_C('o', (`LH_C('n', (`LH_C('d', (`LH_C(' ', (`LH_C('s', (`LH_C('e', (`LH_C('e', (`LH_C('d', (`LH_C('.', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		  else
//│ 		    ((failwith "error") (`LH_C('r', (`LH_C('a', (`LH_C('n', (`LH_C('d', (`LH_C('o', (`LH_C('m', (`LH_C('I', (`LH_C('n', (`LH_C('t', (`LH_C('s', (`LH_C(':', (`LH_C(' ', (`LH_C('B', (`LH_C('a', (`LH_C('d', (`LH_C(' ', (`LH_C('f', (`LH_C('i', (`LH_C('r', (`LH_C('s', (`LH_C('t', (`LH_C(' ', (`LH_C('s', (`LH_C('e', (`LH_C('e', (`LH_C('d', (`LH_C('.', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		and random__d0 _lh_random_arg1_1 _lh_random_arg2_1 =
//│ 		  (let rec ns_1 = ((chop__d0 65536) _lh_random_arg1_1) in
//│ 		    (let rec _lh_matchIdent_1_3 = ((splitAt_lz__d0 (length__d0 ns_1)) _lh_random_arg2_1) in
//│ 		      (match _lh_matchIdent_1_3 with
//│ 		        | `LH_P2(_lh_random_LH_P2_0_1, _lh_random_LH_P2_1_1) -> 
//│ 		          (`LH_P2(((makeNumber__d0 65536) ((uniform__d0 ns_1) _lh_random_LH_P2_0_1)), _lh_random_LH_P2_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		and rands__d0 _lh_rands_arg1_1 _lh_rands_arg2_1 =
//│ 		  (let rec k_2 = (_lh_rands_arg1_1 / 53668) in
//│ 		    (let rec s1'_1 = ((40014 * (_lh_rands_arg1_1 - (k_2 * 53668))) - (k_2 * 12211)) in
//│ 		      (let rec s1''_1 = (if (s1'_1 < 0) then
//│ 		        (s1'_1 + 2147483563)
//│ 		      else
//│ 		        s1'_1) in
//│ 		        (let rec k'_1 = (_lh_rands_arg2_1 / 52774) in
//│ 		          (let rec s2'_1 = ((40692 * (_lh_rands_arg2_1 - (k'_1 * 52774))) - (k'_1 * 3791)) in
//│ 		            (let rec s2''_1 = (if (s2'_1 < 0) then
//│ 		              (s2'_1 + 2147483399)
//│ 		            else
//│ 		              s2'_1) in
//│ 		              (let rec z_1 = (s1''_1 - s2''_1) in
//│ 		                (if (z_1 < 1) then
//│ 		                  (lazy (`LH_C((z_1 + 2147483562), ((rands__d0 s1''_1) s2''_1))))
//│ 		                else
//│ 		                  (lazy (`LH_C(z_1, ((rands__d0 s1''_1) s2''_1))))))))))))
//│ 		and singleTestX__d0 _lh_singleTestX_arg1_1 _lh_singleTestX_arg2_1 _lh_singleTestX_arg3_1 =
//│ 		  (match _lh_singleTestX_arg2_1 with
//│ 		    | `LH_P2(_lh_singleTestX_LH_P2_0_1, _lh_singleTestX_LH_P2_1_1) -> 
//│ 		      (let rec square_1 = (fun x_1_0 -> 
//│ 		        ((x_1_0 * x_1_0) mod _lh_singleTestX_arg1_1)) in
//│ 		        (let rec witness_1 = (fun ls_2_3 -> 
//│ 		          (let rec _lh_matchIdent_2_2 = ls_2_3 in
//│ 		            (match _lh_matchIdent_2_2 with
//│ 		              | `LH_N -> 
//│ 		                false
//│ 		              | `LH_C(_lh_singleTestX_LH_C_0_2, _lh_singleTestX_LH_C_1_2) -> 
//│ 		                (if (_lh_singleTestX_LH_C_0_2 = (_lh_singleTestX_arg1_1 - 1)) then
//│ 		                  true
//│ 		                else
//│ 		                  (if (_lh_singleTestX_LH_C_0_2 = 1) then
//│ 		                    false
//│ 		                  else
//│ 		                    (witness_1 _lh_singleTestX_LH_C_1_2)))
//│ 		              | _ -> 
//│ 		                (failwith "error")))) in
//│ 		          (let rec _lh_matchIdent_2_3 = ((take_lz__d1 _lh_singleTestX_LH_P2_0_1) ((iterate__d0 square_1) (((powerMod__d0 _lh_singleTestX_arg3_1) _lh_singleTestX_LH_P2_1_1) _lh_singleTestX_arg1_1))) in
//│ 		            (match _lh_matchIdent_2_3 with
//│ 		              | `LH_C(_lh_singleTestX_LH_C_0_3, _lh_singleTestX_LH_C_1_3) -> 
//│ 		                (((_lh_singleTestX_LH_C_0_3 = 1) || (_lh_singleTestX_LH_C_0_3 = (_lh_singleTestX_arg1_1 - 1))) || (witness_1 _lh_singleTestX_LH_C_1_3))
//│ 		              | _ -> 
//│ 		                (failwith "error")))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and singleTest__d0 _lh_singleTest_arg1_1 _lh_singleTest_arg2_1 _lh_singleTest_arg3_1 =
//│ 		  (let rec _lh_matchIdent_1_2 = ((random__d0 (_lh_singleTest_arg1_1 - 2)) _lh_singleTest_arg3_1) in
//│ 		    (match _lh_matchIdent_1_2 with
//│ 		      | `LH_P2(_lh_singleTest_LH_P2_0_1, _lh_singleTest_LH_P2_1_1) -> 
//│ 		        (`LH_P2((((singleTestX__d0 _lh_singleTest_arg1_1) _lh_singleTest_arg2_1) (2 + _lh_singleTest_LH_P2_0_1)), _lh_singleTest_LH_P2_1_1))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and splitAt_lz__d0 _lh_splitAt_lz_arg1_1 _lh_splitAt_lz_arg2_1 =
//│ 		  (`LH_P2(((take_lz__d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1), ((drop_lz__d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1)))
//│ 		and take_lz__d0 n_7 ls_2_1 =
//│ 		  (if (n_7 > 0) then
//│ 		    (match (Lazy.force ls_2_1) with
//│ 		      | `LH_C(h_2_1, t_2_6) -> 
//│ 		        (`LH_C(h_2_1, ((take_lz__d0 (n_7 - 1)) t_2_6)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take_lz__d1 n_6 ls_2_0 =
//│ 		  (if (n_6 > 0) then
//│ 		    (match (Lazy.force ls_2_0) with
//│ 		      | `LH_C(h_2_0, t_2_5) -> 
//│ 		        (`LH_C(h_2_0, ((take_lz__d1 (n_6 - 1)) t_2_5)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testPrimetest_nofib__d0 _lh_testPrimetest_nofib_arg1_1 =
//│ 		  (let rec cts_1 = (`LH_C('2', (`LH_C('4', (`LH_C('|', (`LH_C('4', (`LH_C('8', (`LH_C('|', (`LH_C('4', (`LH_C('7', (`LH_C('|', (`LH_C('1', (`LH_C('3', (`LH_C('1', (`LH_C('7', (`LH_C('|', (`LH_C('8', (`LH_C('9', (`LH_C('0', (`LH_C('1', (`LH_N))))))))))))))))))))))))))))))))))))) in
//│ 		    (process__d0 (lines__d0 cts_1)))
//│ 		and uniform__d0 _lh_uniform_arg1_1 _lh_uniform_arg2_1 =
//│ 		  (match _lh_uniform_arg1_1 with
//│ 		    | `LH_C(_lh_uniform_LH_C_0_5, _lh_uniform_LH_C_1_5) -> 
//│ 		      (match _lh_uniform_LH_C_1_5 with
//│ 		        | `LH_N -> 
//│ 		          (match _lh_uniform_arg2_1 with
//│ 		            | `LH_C(_lh_uniform_LH_C_0_6, _lh_uniform_LH_C_1_6) -> 
//│ 		              (match _lh_uniform_LH_C_1_6 with
//│ 		                | `LH_N -> 
//│ 		                  (`LH_C((_lh_uniform_LH_C_0_6 mod _lh_uniform_LH_C_0_5), (`LH_N)))
//│ 		                | _ -> 
//│ 		                  (match _lh_uniform_arg2_1 with
//│ 		                    | `LH_C(_lh_uniform_LH_C_0_7, _lh_uniform_LH_C_1_7) -> 
//│ 		                      (let rec t_3_0 = (_lh_uniform_LH_C_0_7 mod (_lh_uniform_LH_C_0_5 + 1)) in
//│ 		                        (if (t_3_0 = _lh_uniform_LH_C_0_5) then
//│ 		                          (`LH_C(t_3_0, ((uniform__d0 _lh_uniform_LH_C_1_5) _lh_uniform_LH_C_1_7)))
//│ 		                        else
//│ 		                          (`LH_C(t_3_0, ((map__d0 (fun x_1_1 -> 
//│ 		                            (x_1_1 mod 65536))) _lh_uniform_LH_C_1_7)))))
//│ 		                    | _ -> 
//│ 		                      (failwith "error")))
//│ 		            | _ -> 
//│ 		              (match _lh_uniform_arg2_1 with
//│ 		                | `LH_C(_lh_uniform_LH_C_0_8, _lh_uniform_LH_C_1_8) -> 
//│ 		                  (let rec t_3_1 = (_lh_uniform_LH_C_0_8 mod (_lh_uniform_LH_C_0_5 + 1)) in
//│ 		                    (if (t_3_1 = _lh_uniform_LH_C_0_5) then
//│ 		                      (`LH_C(t_3_1, ((uniform__d0 _lh_uniform_LH_C_1_5) _lh_uniform_LH_C_1_8)))
//│ 		                    else
//│ 		                      (`LH_C(t_3_1, ((map__d0 (fun x_1_2 -> 
//│ 		                        (x_1_2 mod 65536))) _lh_uniform_LH_C_1_8)))))
//│ 		                | _ -> 
//│ 		                  (failwith "error")))
//│ 		        | _ -> 
//│ 		          (match _lh_uniform_arg2_1 with
//│ 		            | `LH_C(_lh_uniform_LH_C_0_9, _lh_uniform_LH_C_1_9) -> 
//│ 		              (let rec t_3_2 = (_lh_uniform_LH_C_0_9 mod (_lh_uniform_LH_C_0_5 + 1)) in
//│ 		                (if (t_3_2 = _lh_uniform_LH_C_0_5) then
//│ 		                  (`LH_C(t_3_2, ((uniform__d0 _lh_uniform_LH_C_1_5) _lh_uniform_LH_C_1_9)))
//│ 		                else
//│ 		                  (`LH_C(t_3_2, ((map__d0 (fun x_1_3 -> 
//│ 		                    (x_1_3 mod 65536))) _lh_uniform_LH_C_1_9)))))
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		(testPrimetest_nofib__d0 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1719 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁹ == 0) then a⁹ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁹], _lh_chop_LH_P2_0¹) | _  => error⁰}: 2467
//│ [LH_C h²⁰ take_lz_₁((n⁶ - 1), t²⁵)]: 1740 --->
//│ 	case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 2684
//│ 	case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 2727
//│ [LH_N]: 1741 --->
//│ 	case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 2684
//│ 	case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 2727
//│ [LH_N]: 1743 --->
//│ 	case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 2684
//│ 	case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 2727
//│ [LH_C (z¹ + 2147483562) rands_₀(s1''¹, s2''¹)]: 1852 --->
//│ 	case force⁰(ls²¹) of {LH_C h²¹ t²⁶ => [LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1981
//│ 	case _lh_matchIdent²¹ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 2510
//│ [LH_C z¹ rands_₀(s1''¹, s2''¹)]: 1861 --->
//│ 	case force⁰(ls²¹) of {LH_C h²¹ t²⁶ => [LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1981
//│ 	case _lh_matchIdent²¹ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 2510
//│ [LH_P2 singleTestX_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]: 1895 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k³ - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹] | _  => error⁰}: 2200
//│ [LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]: 1912 --->
//│ 	case _lh_matchIdent¹⁹ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹⁵([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰}: 2420
//│ [LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)]: 1979 --->
//│ 	case ls²⁴ of {LH_C h²³ t²⁸ => [LH_C f¹⁹(h²³) map_₀(f¹⁹, t²⁸)] | LH_N  => [LH_N]}: 2760
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}: 2828
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}}: 2829
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}: 2867
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}}: 2868
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}: 2906
//│ [LH_N]: 1980 --->
//│ 	case ls²⁴ of {LH_C h²³ t²⁸ => [LH_C f¹⁹(h²³) map_₀(f¹⁹, t²⁸)] | LH_N  => [LH_N]}: 2760
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}: 2828
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}}: 2829
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}: 2867
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}}: 2868
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}: 2906
//│ [LH_N]: 1982 --->
//│ 	case ls²⁴ of {LH_C h²³ t²⁸ => [LH_C f¹⁹(h²³) map_₀(f¹⁹, t²⁸)] | LH_N  => [LH_N]}: 2760
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}: 2828
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}}: 2829
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}: 2867
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}}: 2868
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}: 2906
//│ [LH_P2 makeNumber_₀(65536, uniform_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]: 2009 --->
//│ 	case _lh_matchIdent¹² of {LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹] | _  => error⁰}: 1897
//│ [LH_P2 [True] rs¹]: 2174 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 2303
//│ [LH_P2 [False] _lh_multiTest_LH_P2_1¹]: 2197 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 2303
//│ [LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹]: 2222 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 2303
//│ [LH_N]: 2320 --->
//│ 	case _lh_f_arg1³ of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 2627
//│ [LH_N]: 2321 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 2369
//│ [LH_P2 [LH_N] [LH_N]]: 2322 --->
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 2343
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}] | _  => error⁰}: 2373
//│ [LH_N]: 2326 --->
//│ 	case _lh_f_arg1³ of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 2627
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 2329 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 2369
//│ [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 2330 --->
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 2343
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}] | _  => error⁰}: 2373
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]: 2339 --->
//│ 	case _lh_f_arg1³ of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 2627
//│ [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 2341 --->
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 2343
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}] | _  => error⁰}: 2373
//│ [LH_N]: 2364 --->
//│ 	case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 2391
//│ [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}]: 2371 --->
//│ 	case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 2391
//│ [LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]: 2413 --->
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let _lh_matchIdent¹⁹ = divmod_₀(_lh_f_LH_P2_1², 2)
//│ in case _lh_matchIdent¹⁹ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹⁵([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 2423
//│ [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²]: 2417 --->
//│ 	case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x¹⁰ -> ((x¹⁰ * x¹⁰) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls²³ -> let _lh_matchIdent²² = ls²³
//│ in case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent²³ = take_lz_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀(square¹, powerMod_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 2732
//│ [LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 2432 --->
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let _lh_matchIdent¹⁹ = divmod_₀(_lh_f_LH_P2_1², 2)
//│ in case _lh_matchIdent¹⁹ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹⁵([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 2423
//│ [LH_C _lh_chop_LH_P2_1¹ a⁹]: 2461 --->
//│ 	case ls²² of {LH_C h²² t²⁷ => (1 + length_₀(t²⁷)) | LH_N  => 0}: 2646
//│ 	case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}}: 2907
//│ 	case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}} | _  => error⁰}: 2909
//│ [LH_N]: 2472 --->
//│ 	case ls²² of {LH_C h²² t²⁷ => (1 + length_₀(t²⁷)) | LH_N  => 0}: 2646
//│ 	case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}}: 2907
//│ 	case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}} | _  => error⁰}: 2909
//│ [LH_N]: 2491 --->
//│ 	case force⁰(ls²¹) of {LH_C h²¹ t²⁶ => [LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1981
//│ 	case _lh_matchIdent²¹ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 2510
//│ [LH_C x⁹ iterate_₀(f¹⁶, f¹⁶(x⁹))]: 2523 --->
//│ 	case force⁰(ls²⁰) of {LH_C h²⁰ t²⁵ => [LH_C h²⁰ take_lz_₁((n⁶ - 1), t²⁵)] | LH_N  => [LH_N]}: 1742
//│ [LH_P2 take_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 2746 --->
//│ 	case _lh_matchIdent¹³ of {LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀(65536, uniform_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹] | _  => error⁰}: 2011
//│ [LH_C f¹⁹(h²³) map_₀(f¹⁹, t²⁸)]: 2758 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_N]: 2759 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_N]: 2789 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]: 2790 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)]: 2812 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)]: 2824 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)]: 2851 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)]: 2863 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)]: 2890 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)]: 2902 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ ------------------
//│ case force⁰(ls²⁰) of {LH_C h²⁰ t²⁵ => [LH_C h²⁰ take_lz_₁((n⁶ - 1), t²⁵)] | LH_N  => [LH_N]}: 1742 --->
//│ 	[LH_C x⁹ iterate_₀(f¹⁶, f¹⁶(x⁹))]: 2523
//│ case _lh_matchIdent¹² of {LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹] | _  => error⁰}: 1897 --->
//│ 	[LH_P2 makeNumber_₀(65536, uniform_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]: 2009
//│ case force⁰(ls²¹) of {LH_C h²¹ t²⁶ => [LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1981 --->
//│ 	DeadCodeProd
//│ 	[LH_C (z¹ + 2147483562) rands_₀(s1''¹, s2''¹)]: 1852
//│ 	[LH_C z¹ rands_₀(s1''¹, s2''¹)]: 1861
//│ 	[LH_N]: 2491
//│ case _lh_matchIdent¹³ of {LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀(65536, uniform_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹] | _  => error⁰}: 2011 --->
//│ 	[LH_P2 take_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 2746
//│ case _lh_matchIdent¹⁴ of {LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k³ - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹] | _  => error⁰}: 2200 --->
//│ 	[LH_P2 singleTestX_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]: 1895
//│ case _lh_matchIdent¹⁵ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 2303 --->
//│ 	[LH_P2 [True] rs¹]: 2174
//│ 	[LH_P2 [False] _lh_multiTest_LH_P2_1¹]: 2197
//│ 	[LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹]: 2222
//│ case _lh_matchIdent¹⁶ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 2343 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 2322
//│ 	[LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 2330
//│ 	[LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 2341
//│ case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 2369 --->
//│ 	[LH_N]: 2321
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 2329
//│ case _lh_matchIdent¹⁷ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}] | _  => error⁰}: 2373 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 2322
//│ 	[LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 2330
//│ 	[LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 2341
//│ case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 2391 --->
//│ 	[LH_N]: 2364
//│ 	[LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}]: 2371
//│ case _lh_matchIdent¹⁹ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹⁵([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰}: 2420 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]: 1912
//│ case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let _lh_matchIdent¹⁹ = divmod_₀(_lh_f_LH_P2_1², 2)
//│ in case _lh_matchIdent¹⁹ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹⁵([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 2423 --->
//│ 	[LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]: 2413
//│ 	[LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 2432
//│ case _lh_matchIdent²⁰ of {LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁹ == 0) then a⁹ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁹], _lh_chop_LH_P2_0¹) | _  => error⁰}: 2467 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1719
//│ case _lh_matchIdent²¹ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 2510 --->
//│ 	DeadCodeProd
//│ 	[LH_C (z¹ + 2147483562) rands_₀(s1''¹, s2''¹)]: 1852
//│ 	[LH_C z¹ rands_₀(s1''¹, s2''¹)]: 1861
//│ 	[LH_N]: 2491
//│ case _lh_f_arg1³ of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 2627 --->
//│ 	[LH_N]: 2320
//│ 	[LH_N]: 2326
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]: 2339
//│ case ls²² of {LH_C h²² t²⁷ => (1 + length_₀(t²⁷)) | LH_N  => 0}: 2646 --->
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁹]: 2461
//│ 	[LH_N]: 2472
//│ case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 2684 --->
//│ 	[LH_C h²⁰ take_lz_₁((n⁶ - 1), t²⁵)]: 1740
//│ 	[LH_N]: 1741
//│ 	[LH_N]: 1743
//│ case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 2727 --->
//│ 	[LH_C h²⁰ take_lz_₁((n⁶ - 1), t²⁵)]: 1740
//│ 	[LH_N]: 1741
//│ 	[LH_N]: 1743
//│ case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x¹⁰ -> ((x¹⁰ * x¹⁰) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls²³ -> let _lh_matchIdent²² = ls²³
//│ in case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent²³ = take_lz_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀(square¹, powerMod_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 2732 --->
//│ 	[LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²]: 2417
//│ case ls²⁴ of {LH_C h²³ t²⁸ => [LH_C f¹⁹(h²³) map_₀(f¹⁹, t²⁸)] | LH_N  => [LH_N]}: 2760 --->
//│ 	[LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)]: 1979
//│ 	[LH_N]: 1980
//│ 	[LH_N]: 1982
//│ case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776 --->
//│ 	[LH_C f¹⁹(h²³) map_₀(f¹⁹, t²⁸)]: 2758
//│ 	[LH_N]: 2759
//│ 	[LH_N]: 2789
//│ 	[LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]: 2790
//│ 	[LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)]: 2812
//│ 	[LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)]: 2824
//│ 	[LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)]: 2851
//│ 	[LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)]: 2863
//│ 	[LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)]: 2890
//│ 	[LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)]: 2902
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}: 2828 --->
//│ 	[LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)]: 1979
//│ 	[LH_N]: 1980
//│ 	[LH_N]: 1982
//│ case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}}: 2829 --->
//│ 	[LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)]: 1979
//│ 	[LH_N]: 1980
//│ 	[LH_N]: 1982
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}: 2867 --->
//│ 	[LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)]: 1979
//│ 	[LH_N]: 1980
//│ 	[LH_N]: 1982
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}}: 2868 --->
//│ 	[LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)]: 1979
//│ 	[LH_N]: 1980
//│ 	[LH_N]: 1982
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}: 2906 --->
//│ 	[LH_C h²¹ take_lz_₀((n⁷ - 1), t²⁶)]: 1979
//│ 	[LH_N]: 1980
//│ 	[LH_N]: 1982
//│ case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}}: 2907 --->
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁹]: 2461
//│ 	[LH_N]: 2472
//│ case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}} | _  => error⁰}: 2909 --->
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁹]: 2461
//│ 	[LH_N]: 2472
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1719 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁹ == 0) then a⁹ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁹], _lh_chop_LH_P2_0¹) | _  => error⁰}: 2467
//│ [LH_P2 singleTestX_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]: 1895 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k³ - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹] | _  => error⁰}: 2200
//│ [LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]: 1912 --->
//│ 	case _lh_matchIdent¹⁹ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹⁵([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰}: 2420
//│ [LH_P2 makeNumber_₀(65536, uniform_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]: 2009 --->
//│ 	case _lh_matchIdent¹² of {LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹] | _  => error⁰}: 1897
//│ [LH_P2 [True] rs¹]: 2174 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 2303
//│ [LH_P2 [False] _lh_multiTest_LH_P2_1¹]: 2197 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 2303
//│ [LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹]: 2222 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 2303
//│ [LH_N]: 2320 --->
//│ 	case _lh_f_arg1³ of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 2627
//│ [LH_N]: 2321 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 2369
//│ [LH_N]: 2326 --->
//│ 	case _lh_f_arg1³ of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 2627
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 2329 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 2369
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]: 2339 --->
//│ 	case _lh_f_arg1³ of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 2627
//│ [LH_N]: 2364 --->
//│ 	case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 2391
//│ [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}]: 2371 --->
//│ 	case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 2391
//│ [LH_C x⁹ iterate_₀(f¹⁶, f¹⁶(x⁹))]: 2523 --->
//│ 	case force⁰(ls²⁰) of {LH_C h²⁰ t²⁵ => [LH_C h²⁰ take_lz_₁((n⁶ - 1), t²⁵)] | LH_N  => [LH_N]}: 1742
//│ [LH_P2 take_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 2746 --->
//│ 	case _lh_matchIdent¹³ of {LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀(65536, uniform_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹] | _  => error⁰}: 2011
//│ [LH_C f¹⁹(h²³) map_₀(f¹⁹, t²⁸)]: 2758 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_N]: 2759 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_N]: 2789 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]: 2790 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)]: 2812 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)]: 2824 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)]: 2851 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)]: 2863 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)]: 2890 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ [LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)]: 2902 --->
//│ 	case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776
//│ ------------------
//│ case force⁰(ls²⁰) of {LH_C h²⁰ t²⁵ => [LH_C h²⁰ take_lz_₁((n⁶ - 1), t²⁵)] | LH_N  => [LH_N]}: 1742 --->
//│ 	[LH_C x⁹ iterate_₀(f¹⁶, f¹⁶(x⁹))]: 2523
//│ case _lh_matchIdent¹² of {LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹] | _  => error⁰}: 1897 --->
//│ 	[LH_P2 makeNumber_₀(65536, uniform_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]: 2009
//│ case _lh_matchIdent¹³ of {LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀(65536, uniform_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹] | _  => error⁰}: 2011 --->
//│ 	[LH_P2 take_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 2746
//│ case _lh_matchIdent¹⁴ of {LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k³ - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹] | _  => error⁰}: 2200 --->
//│ 	[LH_P2 singleTestX_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]: 1895
//│ case _lh_matchIdent¹⁵ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 2303 --->
//│ 	[LH_P2 [True] rs¹]: 2174
//│ 	[LH_P2 [False] _lh_multiTest_LH_P2_1¹]: 2197
//│ 	[LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹]: 2222
//│ case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 2369 --->
//│ 	[LH_N]: 2321
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 2329
//│ case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 2391 --->
//│ 	[LH_N]: 2364
//│ 	[LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁸ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀(_lh_lines_LH_C_1¹) | _  => error⁰}]: 2371
//│ case _lh_matchIdent¹⁹ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹⁵([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰}: 2420 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]: 1912
//│ case _lh_matchIdent²⁰ of {LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁹ == 0) then a⁹ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁹], _lh_chop_LH_P2_0¹) | _  => error⁰}: 2467 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1719
//│ case _lh_f_arg1³ of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 2627 --->
//│ 	[LH_N]: 2320
//│ 	[LH_N]: 2326
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]: 2339
//│ case ls²⁵ of {LH_C h²⁴ t²⁹ => foldl_₀(f²⁰, f²⁰(i³, h²⁴), t²⁹) | LH_N  => i³}: 2776 --->
//│ 	[LH_C f¹⁹(h²³) map_₀(f¹⁹, t²⁸)]: 2758
//│ 	[LH_N]: 2759
//│ 	[LH_N]: 2789
//│ 	[LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]: 2790
//│ 	[LH_C t³⁰ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)]: 2812
//│ 	[LH_C t³⁰ map_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)]: 2824
//│ 	[LH_C t³¹ uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)]: 2851
//│ 	[LH_C t³¹ map_₀((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)]: 2863
//│ 	[LH_C t³² uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)]: 2890
//│ 	[LH_C t³² map_₀((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)]: 2902
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPrimetest_nofib_₀(primId⁰(0))
//│ def break_₀(_lh_break_arg1², _lh_break_arg2²) = case _lh_break_arg2² of {
//│ 	LH_N  => [LH_P2 (fun _lh_f_arg2³ -> (fun f³⁸ -> _lh_f_arg2³)) (fun _lh_dummy⁰ -> (fun _lh_doInput_arg1⁴ -> [LH_N]))]
//│ 	| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1²(_lh_break_LH_C_0¹) then [LH_P2 (fun _lh_f_arg2⁴ -> (fun f³⁹ -> _lh_f_arg2⁴)) 
//│ 		let _lh_lines_LH_C_1² = _lh_break_LH_C_1¹
//│ 		in (fun _lh_dummy¹ -> lines_₀(_lh_lines_LH_C_1²))] else 
//│ 		let _lh_matchIdent³⁵ = break_₀(_lh_break_arg1², _lh_break_LH_C_1¹)
//│ 		in case _lh_matchIdent³⁵ of {
//│ 			LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 
//│ 				let _lh_f_LH_C_1² = _lh_break_LH_P2_0¹
//│ 				in let _lh_f_LH_C_0² = _lh_break_LH_C_0¹
//│ 				in (fun _lh_f_arg2⁵ -> (fun f⁴⁰ -> f⁴⁰(_lh_f_LH_C_1², ((10 * _lh_f_arg2⁵) + int_val_of_char_₀(_lh_f_LH_C_0²))))) _lh_break_LH_P2_1¹]
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def chop_₀(_lh_chop_arg1²) = 
//│ 	let chop'² = (fun a¹⁵ -> (fun n¹² -> 
//│ 		let _lh_matchIdent²⁵ = divmod_₁(n¹², _lh_chop_arg1²)
//│ 		in _lh_matchIdent²⁵(a¹⁵, chop'², n¹²)))
//│ 	in chop'²([LH_N])
//│ def divmod_₀(_lh_divmod_arg1⁴, _lh_divmod_arg2⁴) = 
//│ 	let _lh_f_LH_P2_1⁴ = (_lh_divmod_arg1⁴ % _lh_divmod_arg2⁴)
//│ 	in let _lh_f_LH_P2_0⁴ = div⁰(_lh_divmod_arg1⁴, _lh_divmod_arg2⁴)
//│ 	in (fun _lh_f_LH_P2_0⁵ -> (fun _lh_f_LH_P2_1⁵ -> (fun f³⁷ -> if (_lh_f_LH_P2_1⁴ == 0) then f³⁷([LH_P2 (_lh_f_LH_P2_0⁵ + 1) _lh_f_LH_P2_0⁴]) else [LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵])))
//│ def divmod_₁(_lh_divmod_arg1³, _lh_divmod_arg2³) = 
//│ 	let _lh_chop_LH_P2_1² = (_lh_divmod_arg1³ % _lh_divmod_arg2³)
//│ 	in let _lh_chop_LH_P2_0² = div⁰(_lh_divmod_arg1³, _lh_divmod_arg2³)
//│ 	in (fun a¹⁶ -> (fun chop'³ -> (fun n¹⁴ -> if (n¹⁴ == 0) then a¹⁶ else chop'³([LH_C _lh_chop_LH_P2_1² a¹⁶], _lh_chop_LH_P2_0²))))
//│ def doInput_₀(_lh_doInput_arg1², _lh_doInput_arg2²) = _lh_doInput_arg2²(_lh_doInput_arg1²)
//│ def doLine_₀(_lh_doLine_arg1², _lh_doLine_arg2², _lh_doLine_arg3²) = 
//│ 	let n¹¹ = int_val_of_string_₀(_lh_doLine_arg1²)
//│ 	in let _lh_matchIdent²⁴ = multiTest_₀(100, _lh_doLine_arg3², n¹¹)
//│ 	in _lh_matchIdent²⁴(_lh_doLine_arg2²)
//│ def drop_lz_₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 	let _lh_matchIdent²⁶ = force⁰(_lh_drop_lz_arg2²)
//│ 	in case _lh_matchIdent²⁶ of {
//│ 		LH_N  => lazy⁰([LH_N])
//│ 		| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1² > 0) then drop_lz_₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹
//│ 		| _  => error⁰}
//│ def even_₀(_lh_even_arg1⁴) = ((_lh_even_arg1⁴ % 2) == 0)
//│ def even_₁(_lh_even_arg1³) = ((_lh_even_arg1³ % 2) == 0)
//│ def findKQ_₀(_lh_findKQ_arg1²) = 
//│ 	let f³⁶ = (fun _lh_f_arg1⁵ -> case _lh_f_arg1⁵ of {
//│ 		LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => 
//│ 			let _lh_matchIdent³⁴ = divmod_₀(_lh_f_LH_P2_1², 2)
//│ 			in _lh_matchIdent³⁴(_lh_f_LH_P2_0², _lh_f_LH_P2_1², f³⁶)
//│ 		| _  => error⁰})
//│ 	in f³⁶([LH_P2 0 (_lh_findKQ_arg1² - 1)])
//│ def foldl_₀(f²¹, i⁴, ls²⁷) = ls²⁷(f²¹, i⁴)
//│ def int_val_of_char_₀(_lh_int_val_of_char_arg1²) = (int_of_char⁰(_lh_int_val_of_char_arg1²) - 48)
//│ def int_val_of_string_₀(_lh_int_val_of_string_arg1²) = 
//│ 	let f³⁵ = (fun _lh_f_arg1⁴ -> (fun _lh_f_arg2² -> _lh_f_arg1⁴(_lh_f_arg2², f³⁵)))
//│ 	in f³⁵(_lh_int_val_of_string_arg1², 0)
//│ def iterate_₀(f³¹, x¹⁸) = lazy⁰(
//│ 	let t⁴³ = iterate_₀(f³¹, f³¹(x¹⁸))
//│ 	in let h³² = x¹⁸
//│ 	in (fun n¹³ -> [LH_C h³² take_lz_₁((n¹³ - 1), t⁴³)]))
//│ def length_₀(ls²⁸) = case ls²⁸ of {
//│ 	LH_C h²² t²⁷ => (1 + length_₀(t²⁷))
//│ 	| LH_N  => 0}
//│ def lines_₀(_lh_lines_arg1²) = 
//│ 	let _lh_matchIdent³² = break_₀((fun x²⁰ -> polyEq⁰(x²⁰, '|')), _lh_lines_arg1²)
//│ 	in case _lh_matchIdent³² of {
//│ 		LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => 
//│ 			let _lh_doInput_LH_C_1² = 	
//│ 				let _lh_matchIdent³³ = _lh_lines_LH_P2_1¹
//│ 				in _lh_matchIdent³³(99)
//│ 			in let _lh_doInput_LH_C_0² = _lh_lines_LH_P2_0¹
//│ 			in (fun _lh_doInput_arg1³ -> doLine_₀(_lh_doInput_LH_C_0², (fun state² -> doInput_₀(state², _lh_doInput_LH_C_1²)), _lh_doInput_arg1³))
//│ 		| _  => error⁰}
//│ def makeNumber_₀(_lh_makeNumber_arg1²) = foldl_₀((fun a¹⁷ -> (fun x²¹ -> ((a¹⁷ * _lh_makeNumber_arg1²) + x²¹))), 0)
//│ def map_₀(f³², ls²⁹) = case ls²⁹ of {
//│ 	LH_C h²³ t²⁸ => 
//│ 		let t⁴⁴ = map_₀(f³², t²⁸)
//│ 		in let h³³ = f³²(h²³)
//│ 		in (fun f³³ -> (fun i¹³ -> foldl_₀(f³³, f³³(i¹³, h³³), t⁴⁴)))
//│ 	| LH_N  => (fun f³⁴ -> (fun i¹⁴ -> i¹⁴))}
//│ def multiTest_₀(_lh_multiTest_arg1², _lh_multiTest_arg2², _lh_multiTest_arg3²) = 
//│ 	let mTest² = (fun k⁴ -> (fun rs² -> if (k⁴ == 0) then 
//│ 		let _lh_doLine_LH_P2_1² = rs²
//│ 		in let _lh_doLine_LH_P2_0² = [True]
//│ 		in (fun _lh_doLine_arg2³ -> if _lh_doLine_LH_P2_0² then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2³(_lh_doLine_LH_P2_1²)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2³(_lh_doLine_LH_P2_1²)]) else 
//│ 		let _lh_matchIdent²⁸ = singleTest_₀(_lh_multiTest_arg3², findKQ_₀(_lh_multiTest_arg3²), rs²)
//│ 		in _lh_matchIdent²⁸(k⁴, mTest²)))
//│ 	in if ((_lh_multiTest_arg3² <= 1) || even_₀(_lh_multiTest_arg3²)) then 
//│ 		let _lh_doLine_LH_P2_1³ = _lh_multiTest_arg2²
//│ 		in let _lh_doLine_LH_P2_0³ = (_lh_multiTest_arg3² == 2)
//│ 		in (fun _lh_doLine_arg2⁴ -> if _lh_doLine_LH_P2_0³ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁴(_lh_doLine_LH_P2_1³)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁴(_lh_doLine_LH_P2_1³)]) else mTest²(_lh_multiTest_arg1², _lh_multiTest_arg2²)
//│ def powerMod_₀(_lh_powerMod_arg1², _lh_powerMod_arg2², _lh_powerMod_arg3²) = case _lh_powerMod_arg2² of {
//│ 	0  => 1
//│ 	| _  => 
//│ 		let a'² = (_lh_powerMod_arg1² mod _lh_powerMod_arg3²)
//│ 		in let f³⁰ = (fun a¹³ -> (fun b⁶ -> (fun c² -> 
//│ 			let g² = (fun a¹⁴ -> (fun b⁷ -> if even_₁(b⁷) then g²(((a¹⁴ * a¹⁴) % _lh_powerMod_arg3²), div⁰(b⁷, 2)) else f³⁰(a¹⁴, (b⁷ - 1), ((a¹⁴ * c²) % _lh_powerMod_arg3²))))
//│ 			in if (b⁶ == 0) then c² else g²(a¹³, b⁶))))
//│ 		in f³⁰(a'², (_lh_powerMod_arg2² - 1), a'²)}
//│ def process_₀(_lh_process_arg1²) = doInput_₀(randomInts_₀(111, 47), _lh_process_arg1²)
//│ def randomInts_₀(_lh_randomInts_arg1², _lh_randomInts_arg2²) = if ((1 <= _lh_randomInts_arg1²) && (_lh_randomInts_arg1² <= 2147483562)) then if ((1 <= _lh_randomInts_arg2²) && (_lh_randomInts_arg2² <= 2147483398)) then rands_₀(_lh_randomInts_arg1², _lh_randomInts_arg2²) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ def random_₀(_lh_random_arg1², _lh_random_arg2²) = 
//│ 	let ns³ = chop_₀(65536, _lh_random_arg1²)
//│ 	in let _lh_matchIdent³¹ = splitAt_lz_₀(length_₀(ns³), _lh_random_arg2²)
//│ 	in _lh_matchIdent³¹(ns³)
//│ def rands_₀(_lh_rands_arg1², _lh_rands_arg2²) = 
//│ 	let k⁵ = div⁰(_lh_rands_arg1², 53668)
//│ 	in let s1'² = ((40014 * (_lh_rands_arg1² - (k⁵ * 53668))) - (k⁵ * 12211))
//│ 	in let s1''² = if (s1'² < 0) then (s1'² + 2147483563) else s1'²
//│ 	in let k'² = div⁰(_lh_rands_arg2², 52774)
//│ 	in let s2'² = ((40692 * (_lh_rands_arg2² - (k'² * 52774))) - (k'² * 3791))
//│ 	in let s2''² = if (s2'² < 0) then (s2'² + 2147483399) else s2'²
//│ 	in let z² = (s1''² - s2''²)
//│ 	in if (z² < 1) then lazy⁰([LH_C (z² + 2147483562) rands_₀(s1''², s2''²)]) else lazy⁰([LH_C z² rands_₀(s1''², s2''²)])
//│ def singleTestX_₀(_lh_singleTestX_arg1², _lh_singleTestX_arg2², _lh_singleTestX_arg3²) = case _lh_singleTestX_arg2² of {
//│ 	LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => 
//│ 		let square² = (fun x¹⁹ -> ((x¹⁹ * x¹⁹) % _lh_singleTestX_arg1²))
//│ 		in let witness² = (fun ls³⁰ -> 
//│ 			let _lh_matchIdent²⁹ = ls³⁰
//│ 			in case _lh_matchIdent²⁹ of {
//│ 				LH_N  => [False]
//│ 				| LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1² - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness²(_lh_singleTestX_LH_C_1²)
//│ 				| _  => error⁰})
//│ 		in let _lh_matchIdent³⁰ = take_lz_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀(square², powerMod_₀(_lh_singleTestX_arg3², _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1²)))
//│ 		in case _lh_matchIdent³⁰ of {
//│ 			LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1² - 1))) || witness²(_lh_singleTestX_LH_C_1³))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def singleTest_₀(_lh_singleTest_arg1², _lh_singleTest_arg2², _lh_singleTest_arg3²) = 
//│ 	let _lh_matchIdent²⁷ = random_₀((_lh_singleTest_arg1² - 2), _lh_singleTest_arg3²)
//│ 	in _lh_matchIdent²⁷(_lh_singleTest_arg1², _lh_singleTest_arg2²)
//│ def splitAt_lz_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 	let _lh_random_LH_P2_1² = drop_lz_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 	in let _lh_random_LH_P2_0² = take_lz_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 	in (fun ns² -> 
//│ 		let _lh_singleTest_LH_P2_1² = _lh_random_LH_P2_1²
//│ 		in let _lh_singleTest_LH_P2_0² = makeNumber_₀(65536, uniform_₀(ns², _lh_random_LH_P2_0²))
//│ 		in (fun _lh_singleTest_arg1³ -> (fun _lh_singleTest_arg2³ -> 
//│ 			let _lh_multiTest_LH_P2_1² = _lh_singleTest_LH_P2_1²
//│ 			in let _lh_multiTest_LH_P2_0² = singleTestX_₀(_lh_singleTest_arg1³, _lh_singleTest_arg2³, (2 + _lh_singleTest_LH_P2_0²))
//│ 			in (fun k⁶ -> (fun mTest³ -> if _lh_multiTest_LH_P2_0² then mTest³((k⁶ - 1), _lh_multiTest_LH_P2_1²) else 
//│ 				let _lh_doLine_LH_P2_1⁴ = _lh_multiTest_LH_P2_1²
//│ 				in let _lh_doLine_LH_P2_0⁴ = [False]
//│ 				in (fun _lh_doLine_arg2⁵ -> if _lh_doLine_LH_P2_0⁴ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁵(_lh_doLine_LH_P2_1⁴)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁵(_lh_doLine_LH_P2_1⁴)]))))))
//│ def take_lz_₀(n¹⁵, ls³¹) = if (n¹⁵ > 0) then case force⁰(ls³¹) of {
//│ 	LH_C h²¹ t²⁶ => [LH_C h²¹ take_lz_₀((n¹⁵ - 1), t²⁶)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz_₁(n¹⁰, ls²⁶) = if (n¹⁰ > 0) then force⁰(ls²⁶, n¹⁰) else [LH_N]
//│ def testPrimetest_nofib_₀(_lh_testPrimetest_nofib_arg1²) = 
//│ 	let cts² = primId⁰([LH_C '2' [LH_C '4' [LH_C '|' [LH_C '4' [LH_C '8' [LH_C '|' [LH_C '4' [LH_C '7' [LH_C '|' [LH_C '1' [LH_C '3' [LH_C '1' [LH_C '7' [LH_C '|' [LH_C '8' [LH_C '9' [LH_C '0' [LH_C '1' [LH_N]]]]]]]]]]]]]]]]]]])
//│ 	in process_₀(lines_₀(cts²))
//│ def uniform_₀(_lh_uniform_arg1², _lh_uniform_arg2²) = case _lh_uniform_arg1² of {
//│ 	LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {
//│ 		LH_N  => case _lh_uniform_arg2² of {
//│ 			LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {
//│ 				LH_N  => 
//│ 					let t³³ = (fun f²³ -> (fun i⁶ -> i⁶))
//│ 					in let h²⁵ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ 					in (fun f²² -> (fun i⁵ -> foldl_₀(f²², f²²(i⁵, h²⁵), t³³)))
//│ 				| _  => case _lh_uniform_arg2² of {
//│ 					LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => 
//│ 						let t³⁴ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 						in if (t³⁴ == _lh_uniform_LH_C_0⁵) then 
//│ 							let t³⁵ = uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ 							in let h²⁶ = t³⁴
//│ 							in (fun f²⁴ -> (fun i⁷ -> foldl_₀(f²⁴, f²⁴(i⁷, h²⁶), t³⁵))) else 
//│ 							let t³⁶ = map_₀((fun x¹⁵ -> (x¹⁵ % 65536)), _lh_uniform_LH_C_1⁷)
//│ 							in let h²⁷ = t³⁴
//│ 							in (fun f²⁵ -> (fun i⁸ -> foldl_₀(f²⁵, f²⁵(i⁸, h²⁷), t³⁶)))
//│ 					| _  => error⁰}}
//│ 			| _  => case _lh_uniform_arg2² of {
//│ 				LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => 
//│ 					let t³⁷ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 					in if (t³⁷ == _lh_uniform_LH_C_0⁵) then 
//│ 						let t³⁸ = uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ 						in let h²⁸ = t³⁷
//│ 						in (fun f²⁶ -> (fun i⁹ -> foldl_₀(f²⁶, f²⁶(i⁹, h²⁸), t³⁸))) else 
//│ 						let t³⁹ = map_₀((fun x¹⁶ -> (x¹⁶ % 65536)), _lh_uniform_LH_C_1⁸)
//│ 						in let h²⁹ = t³⁷
//│ 						in (fun f²⁷ -> (fun i¹⁰ -> foldl_₀(f²⁷, f²⁷(i¹⁰, h²⁹), t³⁹)))
//│ 				| _  => error⁰}}
//│ 		| _  => case _lh_uniform_arg2² of {
//│ 			LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => 
//│ 				let t⁴⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 				in if (t⁴⁰ == _lh_uniform_LH_C_0⁵) then 
//│ 					let t⁴¹ = uniform_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ 					in let h³⁰ = t⁴⁰
//│ 					in (fun f²⁸ -> (fun i¹¹ -> foldl_₀(f²⁸, f²⁸(i¹¹, h³⁰), t⁴¹))) else 
//│ 					let t⁴² = map_₀((fun x¹⁷ -> (x¹⁷ % 65536)), _lh_uniform_LH_C_1⁹)
//│ 					in let h³¹ = t⁴⁰
//│ 					in (fun f²⁹ -> (fun i¹² -> foldl_₀(f²⁹, f²⁹(i¹², h³¹), t⁴²)))
//│ 			| _  => error⁰}}
//│ 	| _  => error⁰}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPrimetest_nofib_₀^1] (hopeless to continue)
//│ 	[testPrimetest_nofib_₀^1 · lines_₀^761] (using original def)
//│ 		[testPrimetest_nofib_₀^1 · lines_₀^761 · break_₀^1296] (using original def)
//│ 			[testPrimetest_nofib_₀^1 · lines_₀^761 · break_₀^1296 · break_₀^1416] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · break_₀^1296] (using original def)
//│ 			[testPrimetest_nofib_₀^1 · lines_₀^761 · break_₀^1296 · int_val_of_char_₀^1434] (using original def)
//│ 			[testPrimetest_nofib_₀^1 · lines_₀^761 · break_₀^1296 · lines_₀^1410] ---> [testPrimetest_nofib_₀^1 · lines_₀^761] (using original def)
//│ 		[testPrimetest_nofib_₀^1 · lines_₀^761 · doInput_₀^1316] (using original def)
//│ 		[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313] (using original def)
//│ 			[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · int_val_of_string_₀^260] (using original def)
//│ 			[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263] (using original def)
//│ 				[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · even_₀^566] (using original def)
//│ 				[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · findKQ_₀^544] (using original def)
//│ 					[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · findKQ_₀^544 · divmod_₀^1333] (using original def)
//│ 				[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541] (using original def)
//│ 					[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455] (using original def)
//│ 						[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · chop_₀^1277] (using original def)
//│ 							[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · chop_₀^1277 · divmod_₁^370] (using original def)
//│ 						[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · length_₀^1283] (using original def)
//│ 							[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · length_₀^1283 · length_₀^420] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · length_₀^1283] (using original def)
//│ 						[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282] (using original def)
//│ 							[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · drop_lz_₀^1158] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · drop_lz_₀^1158 · drop_lz_₀^439] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · drop_lz_₀^1158] (using original def)
//│ 							[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · makeNumber_₀^1169] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · makeNumber_₀^1169 · foldl_₀^1453] (using original def)
//│ 							[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · singleTestX_₀^1179] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · singleTestX_₀^1179 · iterate_₀^1098] (using original def)
//│ 									[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · singleTestX_₀^1179 · iterate_₀^1098 · iterate_₀^391] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · singleTestX_₀^1179 · iterate_₀^1098] (using original def)
//│ 									[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · singleTestX_₀^1179 · iterate_₀^1098 · take_lz_₁^400] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · singleTestX_₀^1179 · powerMod_₀^1101] (using original def)
//│ 									[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · singleTestX_₀^1179 · powerMod_₀^1101 · even_₁^295] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · singleTestX_₀^1179 · take_lz_₁^1095] (using original def)
//│ 							[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · take_lz_₀^1163] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · take_lz_₀^1163 · take_lz_₀^1478] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · take_lz_₀^1163] (using original def)
//│ 							[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · foldl_₀^102] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · foldl_₀^143] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · foldl_₀^169] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · foldl_₀^210] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · foldl_₀^236] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · foldl_₀^40] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · foldl_₀^76] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^158] (using original def)
//│ 									[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^158 · foldl_₀^692] (using original def)
//│ 									[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^158 · map_₀^684] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^158] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^225] (using original def)
//│ 									[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^225 · foldl_₀^692] (using original def)
//│ 									[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^225 · map_₀^684] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^225] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^91] (using original def)
//│ 									[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^91 · foldl_₀^692] (using original def)
//│ 									[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^91 · map_₀^684] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · map_₀^91] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · uniform_₀^137] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · uniform_₀^204] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172] (using original def)
//│ 								[testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172 · uniform_₀^70] ---> [testPrimetest_nofib_₀^1 · lines_₀^761 · doLine_₀^1313 · multiTest_₀^263 · singleTest_₀^541 · random_₀^455 · splitAt_lz_₀^1282 · uniform_₀^1172] (using original def)
//│ 	[testPrimetest_nofib_₀^1 · process_₀^760] (using original def)
//│ 		[testPrimetest_nofib_₀^1 · process_₀^760 · doInput_₀^1046] (using original def)
//│ 		[testPrimetest_nofib_₀^1 · process_₀^760 · randomInts_₀^1047] (using original def)
//│ 			[testPrimetest_nofib_₀^1 · process_₀^760 · randomInts_₀^1047 · rands_₀^793] (using original def)
//│ 				[testPrimetest_nofib_₀^1 · process_₀^760 · randomInts_₀^1047 · rands_₀^793 · rands_₀^1020] ---> [testPrimetest_nofib_₀^1 · process_₀^760 · randomInts_₀^1047 · rands_₀^793] (using original def)
//│ 				[testPrimetest_nofib_₀^1 · process_₀^760 · randomInts_₀^1047 · rands_₀^793 · rands_₀^1029] ---> [testPrimetest_nofib_₀^1 · process_₀^760 · randomInts_₀^1047 · rands_₀^793] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPrimetest_nofib_₀_₀(primId⁰(0))
//│ def testPrimetest_nofib_₀_₀(_lh_testPrimetest_nofib_arg1¹) = 
//│ 	let cts¹ = primId⁰([LH_C '2' [LH_C '4' [LH_C '|' [LH_C '4' [LH_C '8' [LH_C '|' [LH_C '4' [LH_C '7' [LH_C '|' [LH_C '1' [LH_C '3' [LH_C '1' [LH_C '7' [LH_C '|' [LH_C '8' [LH_C '9' [LH_C '0' [LH_C '1' [LH_N]]]]]]]]]]]]]]]]]]])
//│ 	in process_₀_₀(lines_₀_₀(cts¹))
//│ 	where
//│ 	def lines_₀_₀(_lh_lines_arg1¹) = 
//│ 		let _lh_matchIdent²⁰ = break_₀_₀((fun x⁹ -> polyEq⁰(x⁹, '|')), _lh_lines_arg1¹)
//│ 		in case _lh_matchIdent²⁰ of {
//│ 			LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => 
//│ 				let _lh_doInput_LH_C_1¹ = 	
//│ 					let _lh_matchIdent²¹ = _lh_lines_LH_P2_1¹
//│ 					in _lh_matchIdent²¹(99)
//│ 				in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ 				in (fun _lh_doInput_arg1⁵ -> doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁵))
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break_₀_₀(_lh_break_arg1¹, _lh_break_arg2¹) = 
//│ 			case _lh_break_arg2¹ of {
//│ 				LH_N  => [LH_P2 (fun _lh_f_arg2⁵ -> (fun f⁵² -> _lh_f_arg2⁵)) (fun _lh_dummy² -> (fun _lh_doInput_arg1⁶ -> [LH_N]))]
//│ 				| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 (fun _lh_f_arg2⁶ -> (fun f⁵³ -> _lh_f_arg2⁶)) 
//│ 					let _lh_lines_LH_C_1¹ = _lh_break_LH_C_1¹
//│ 					in (fun _lh_dummy³ -> lines_₀_₀(_lh_lines_LH_C_1¹))] else 
//│ 					let _lh_matchIdent²³ = break_₀_₀(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ 					in case _lh_matchIdent²³ of {
//│ 						LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 
//│ 							let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ 							in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ 							in (fun _lh_f_arg2⁷ -> (fun f⁵⁴ -> f⁵⁴(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def int_val_of_char_₀_₀(_lh_int_val_of_char_arg1¹) = 
//│ 				(int_of_char⁰(_lh_int_val_of_char_arg1¹) - 48)
//│ 		def doInput_₀_₀(_lh_doInput_arg1³, _lh_doInput_arg2¹) = 
//│ 			_lh_doInput_arg2¹(_lh_doInput_arg1³)
//│ 		def doLine_₀_₀(_lh_doLine_arg1¹, _lh_doLine_arg2⁴, _lh_doLine_arg3¹) = 
//│ 			let n⁶ = int_val_of_string_₀_₀(_lh_doLine_arg1¹)
//│ 			in let _lh_matchIdent¹² = multiTest_₀_₀(100, _lh_doLine_arg3¹, n⁶)
//│ 			in _lh_matchIdent¹²(_lh_doLine_arg2⁴)
//│ 			where
//│ 			def int_val_of_string_₀_₀(_lh_int_val_of_string_arg1¹) = 
//│ 				let f²⁸ = (fun _lh_f_arg1² -> (fun _lh_f_arg2⁴ -> _lh_f_arg1²(_lh_f_arg2⁴, f²⁸)))
//│ 				in f²⁸(_lh_int_val_of_string_arg1¹, 0)
//│ 			def multiTest_₀_₀(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹, _lh_multiTest_arg3¹) = 
//│ 				let mTest² = (fun k³ -> (fun rs¹ -> if (k³ == 0) then 
//│ 					let _lh_doLine_LH_P2_1³ = rs¹
//│ 					in let _lh_doLine_LH_P2_0³ = [True]
//│ 					in (fun _lh_doLine_arg2⁵ -> if _lh_doLine_LH_P2_0³ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁵(_lh_doLine_LH_P2_1³)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁵(_lh_doLine_LH_P2_1³)]) else 
//│ 					let _lh_matchIdent¹⁶ = singleTest_₀_₀(_lh_multiTest_arg3¹, findKQ_₀_₀(_lh_multiTest_arg3¹), rs¹)
//│ 					in _lh_matchIdent¹⁶(k³, mTest²)))
//│ 				in if ((_lh_multiTest_arg3¹ <= 1) || even_₀_₀(_lh_multiTest_arg3¹)) then 
//│ 					let _lh_doLine_LH_P2_1⁴ = _lh_multiTest_arg2¹
//│ 					in let _lh_doLine_LH_P2_0⁴ = (_lh_multiTest_arg3¹ == 2)
//│ 					in (fun _lh_doLine_arg2⁶ -> if _lh_doLine_LH_P2_0⁴ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁶(_lh_doLine_LH_P2_1⁴)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁶(_lh_doLine_LH_P2_1⁴)]) else mTest²(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹)
//│ 				where
//│ 				def even_₀_₀(_lh_even_arg1³) = 
//│ 					((_lh_even_arg1³ % 2) == 0)
//│ 				def findKQ_₀_₀(_lh_findKQ_arg1¹) = 
//│ 					let f³⁶ = (fun _lh_f_arg1³ -> case _lh_f_arg1³ of {
//│ 						LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => 
//│ 							let _lh_matchIdent¹⁹ = divmod_₀_₀(_lh_f_LH_P2_1⁵, 2)
//│ 							in _lh_matchIdent¹⁹(_lh_f_LH_P2_0⁵, _lh_f_LH_P2_1⁵, f³⁶)
//│ 						| _  => error⁰})
//│ 					in f³⁶([LH_P2 0 (_lh_findKQ_arg1¹ - 1)])
//│ 					where
//│ 					def divmod_₀_₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 						let _lh_f_LH_P2_1³ = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 						in let _lh_f_LH_P2_0³ = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 						in (fun _lh_f_LH_P2_0⁴ -> (fun _lh_f_LH_P2_1⁴ -> (fun f³⁵ -> if (_lh_f_LH_P2_1³ == 0) then f³⁵([LH_P2 (_lh_f_LH_P2_0⁴ + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴])))
//│ 				def singleTest_₀_₀(_lh_singleTest_arg1³, _lh_singleTest_arg2³, _lh_singleTest_arg3¹) = 
//│ 					let _lh_matchIdent¹⁷ = random_₀_₀((_lh_singleTest_arg1³ - 2), _lh_singleTest_arg3¹)
//│ 					in _lh_matchIdent¹⁷(_lh_singleTest_arg1³, _lh_singleTest_arg2³)
//│ 					where
//│ 					def random_₀_₀(_lh_random_arg1¹, _lh_random_arg2¹) = 
//│ 						let ns³ = chop_₀_₀(65536, _lh_random_arg1¹)
//│ 						in let _lh_matchIdent¹⁸ = splitAt_lz_₀_₀(length_₀_₀(ns³), _lh_random_arg2¹)
//│ 						in _lh_matchIdent¹⁸(ns³)
//│ 						where
//│ 						def chop_₀_₀(_lh_chop_arg1¹) = 
//│ 							let chop'² = (fun a⁷ -> (fun n¹¹ -> 
//│ 								let _lh_matchIdent²² = divmod_₁_₀(n¹¹, _lh_chop_arg1¹)
//│ 								in _lh_matchIdent²²(a⁷, chop'², n¹¹)))
//│ 							in chop'²([LH_N])
//│ 							where
//│ 							def divmod_₁_₀(_lh_divmod_arg1³, _lh_divmod_arg2³) = 
//│ 								let _lh_chop_LH_P2_1¹ = (_lh_divmod_arg1³ % _lh_divmod_arg2³)
//│ 								in let _lh_chop_LH_P2_0¹ = div⁰(_lh_divmod_arg1³, _lh_divmod_arg2³)
//│ 								in (fun a⁸ -> (fun chop'³ -> (fun n¹² -> if (n¹² == 0) then a⁸ else chop'³([LH_C _lh_chop_LH_P2_1¹ a⁸], _lh_chop_LH_P2_0¹))))
//│ 						def length_₀_₀(ls¹³) = 
//│ 							case ls¹³ of {
//│ 								LH_C h¹⁴ t¹⁷ => (1 + length_₀_₀(t¹⁷))
//│ 								| LH_N  => 0}
//│ 						def splitAt_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = 
//│ 							let _lh_random_LH_P2_1¹ = drop_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)
//│ 							in let _lh_random_LH_P2_0¹ = take_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)
//│ 							in (fun ns² -> 
//│ 								let _lh_singleTest_LH_P2_1¹ = _lh_random_LH_P2_1¹
//│ 								in let _lh_singleTest_LH_P2_0¹ = makeNumber_₀_₀(65536, uniform_₀_₀(ns², _lh_random_LH_P2_0¹))
//│ 								in (fun _lh_singleTest_arg1² -> (fun _lh_singleTest_arg2² -> 
//│ 									let _lh_multiTest_LH_P2_1¹ = _lh_singleTest_LH_P2_1¹
//│ 									in let _lh_multiTest_LH_P2_0¹ = singleTestX_₀_₀(_lh_singleTest_arg1², _lh_singleTest_arg2², (2 + _lh_singleTest_LH_P2_0¹))
//│ 									in (fun k⁴ -> (fun mTest³ -> if _lh_multiTest_LH_P2_0¹ then mTest³((k⁴ - 1), _lh_multiTest_LH_P2_1¹) else 
//│ 										let _lh_doLine_LH_P2_1⁵ = _lh_multiTest_LH_P2_1¹
//│ 										in let _lh_doLine_LH_P2_0⁵ = [False]
//│ 										in (fun _lh_doLine_arg2⁷ -> if _lh_doLine_LH_P2_0⁵ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁷(_lh_doLine_LH_P2_1⁵)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁷(_lh_doLine_LH_P2_1⁵)]))))))
//│ 							where
//│ 							def drop_lz_₀_₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = 
//│ 								let _lh_matchIdent¹³ = force⁰(_lh_drop_lz_arg2¹)
//│ 								in case _lh_matchIdent¹³ of {
//│ 									LH_N  => lazy⁰([LH_N])
//│ 									| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹
//│ 									| _  => error⁰}
//│ 							def makeNumber_₀_₀(_lh_makeNumber_arg1¹) = 
//│ 								foldl_₀_₀((fun a⁹ -> (fun x¹³ -> ((a⁹ * _lh_makeNumber_arg1¹) + x¹³))), 0)
//│ 								where
//│ 								def foldl_₀_₀(f³⁸, i²², ls²⁰) = 
//│ 									ls²⁰(f³⁸, i²²)
//│ 							def singleTestX_₀_₀(_lh_singleTestX_arg1¹, _lh_singleTestX_arg2¹, _lh_singleTestX_arg3¹) = 
//│ 								case _lh_singleTestX_arg2¹ of {
//│ 									LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => 
//│ 										let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ 										in let witness¹ = (fun ls¹⁰ -> 
//│ 											let _lh_matchIdent¹⁴ = ls¹⁰
//│ 											in case _lh_matchIdent¹⁴ of {
//│ 												LH_N  => [False]
//│ 												| LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²)
//│ 												| _  => error⁰})
//│ 										in let _lh_matchIdent¹⁵ = take_lz_₁_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀(square¹, powerMod_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ 										in case _lh_matchIdent¹⁵ of {
//│ 											LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³))
//│ 											| _  => error⁰}
//│ 									| _  => error⁰}
//│ 								where
//│ 								def iterate_₀_₀(f³⁴, x⁸) = 
//│ 									lazy⁰(
//│ 										let t²¹ = iterate_₀_₀(f³⁴, f³⁴(x⁸))
//│ 										in let h¹⁸ = x⁸
//│ 										in (fun n⁹ -> [LH_C h¹⁸ take_lz_₁_₀((n⁹ - 1), t²¹)]))
//│ 									where
//│ 									def take_lz_₁_₀(n¹⁰, ls¹⁹) = 
//│ 										if (n¹⁰ > 0) then force⁰(ls¹⁹, n¹⁰) else [LH_N]
//│ 								def powerMod_₀_₀(_lh_powerMod_arg1¹, _lh_powerMod_arg2¹, _lh_powerMod_arg3¹) = 
//│ 									case _lh_powerMod_arg2¹ of {
//│ 										0  => 1
//│ 										| _  => 
//│ 											let a'¹ = (_lh_powerMod_arg1¹ mod _lh_powerMod_arg3¹)
//│ 											in let f²³ = (fun a⁵ -> (fun b² -> (fun c¹ -> 
//│ 												let g¹ = (fun a⁶ -> (fun b³ -> if even_₁_₀(b³) then g¹(((a⁶ * a⁶) % _lh_powerMod_arg3¹), div⁰(b³, 2)) else f²³(a⁶, (b³ - 1), ((a⁶ * c¹) % _lh_powerMod_arg3¹))))
//│ 												in if (b² == 0) then c¹ else g¹(a⁵, b²))))
//│ 											in f²³(a'¹, (_lh_powerMod_arg2¹ - 1), a'¹)}
//│ 									where
//│ 									def even_₁_₀(_lh_even_arg1²) = 
//│ 										((_lh_even_arg1² % 2) == 0)
//│ 								def take_lz_₁_₁(n⁷, ls¹²) = 
//│ 									if (n⁷ > 0) then force⁰(ls¹², n⁷) else [LH_N]
//│ 							def take_lz_₀_₀(n⁸, ls¹⁶) = 
//│ 								if (n⁸ > 0) then case force⁰(ls¹⁶) of {
//│ 									LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]
//│ 									| LH_N  => [LH_N]} else [LH_N]
//│ 							def uniform_₀_₀(_lh_uniform_arg1¹, _lh_uniform_arg2¹) = 
//│ 								case _lh_uniform_arg1¹ of {
//│ 									LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {
//│ 										LH_N  => case _lh_uniform_arg2¹ of {
//│ 											LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {
//│ 												LH_N  => 
//│ 													let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ 													in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ 													in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴)))
//│ 												| _  => case _lh_uniform_arg2¹ of {
//│ 													LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => 
//│ 														let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 														in if (t²⁵ == _lh_uniform_LH_C_0⁵) then 
//│ 															let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ 															in let h²² = t²⁵
//│ 															in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else 
//│ 															let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ 															in let h²³ = t²⁵
//│ 															in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷)))
//│ 													| _  => error⁰}}
//│ 											| _  => case _lh_uniform_arg2¹ of {
//│ 												LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => 
//│ 													let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 													in if (t²⁸ == _lh_uniform_LH_C_0⁵) then 
//│ 														let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ 														in let h²⁴ = t²⁸
//│ 														in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else 
//│ 														let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ 														in let h²⁵ = t²⁸
//│ 														in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰)))
//│ 												| _  => error⁰}}
//│ 										| _  => case _lh_uniform_arg2¹ of {
//│ 											LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => 
//│ 												let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 												in if (t³¹ == _lh_uniform_LH_C_0⁵) then 
//│ 													let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ 													in let h²⁶ = t³¹
//│ 													in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else 
//│ 													let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ 													in let h²⁷ = t³¹
//│ 													in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³)))
//│ 											| _  => error⁰}}
//│ 									| _  => error⁰}
//│ 								where
//│ 								def foldl_₀_₁(f³³, i²⁰, ls¹⁷) = 
//│ 									ls¹⁷(f³³, i²⁰)
//│ 								def foldl_₀_₂(f²¹, i¹², ls⁷) = 
//│ 									ls⁷(f²¹, i¹²)
//│ 								def foldl_₀_₃(f⁴⁰, i²⁴, ls²²) = 
//│ 									ls²²(f⁴⁰, i²⁴)
//│ 								def foldl_₀_₄(f³⁷, i²¹, ls¹⁸) = 
//│ 									ls¹⁸(f³⁷, i²¹)
//│ 								def foldl_₀_₅(f³², i¹⁹, ls¹⁵) = 
//│ 									ls¹⁵(f³², i¹⁹)
//│ 								def foldl_₀_₆(f²⁰, i¹¹, ls⁶) = 
//│ 									ls⁶(f²⁰, i¹¹)
//│ 								def foldl_₀_₇(f²⁴, i¹⁴, ls⁹) = 
//│ 									ls⁹(f²⁴, i¹⁴)
//│ 								def map_₀_₀(f⁴¹, ls²³) = 
//│ 									case ls²³ of {
//│ 										LH_C h¹⁹ t²² => 
//│ 											let t²³ = map_₀_₀(f⁴¹, t²²)
//│ 											in let h²⁰ = f⁴¹(h¹⁹)
//│ 											in (fun f⁴² -> (fun i²⁵ -> foldl_₀_₈(f⁴², f⁴²(i²⁵, h²⁰), t²³)))
//│ 										| LH_N  => (fun f⁴³ -> (fun i²⁶ -> i²⁶))}
//│ 									where
//│ 									def foldl_₀_₈(f³⁹, i²³, ls²¹) = 
//│ 										ls²¹(f³⁹, i²³)
//│ 								def map_₀_₁(f²⁵, ls¹¹) = 
//│ 									case ls¹¹ of {
//│ 										LH_C h¹² t¹⁵ => 
//│ 											let t¹⁶ = map_₀_₁(f²⁵, t¹⁵)
//│ 											in let h¹³ = f²⁵(h¹²)
//│ 											in (fun f²⁶ -> (fun i¹⁵ -> foldl_₀_₉(f²⁶, f²⁶(i¹⁵, h¹³), t¹⁶)))
//│ 										| LH_N  => (fun f²⁷ -> (fun i¹⁶ -> i¹⁶))}
//│ 									where
//│ 									def foldl_₀_₉(f⁵⁵, i³⁵, ls²⁴) = 
//│ 										ls²⁴(f⁵⁵, i³⁵)
//│ 								def map_₀_₂(f²⁹, ls¹⁴) = 
//│ 									case ls¹⁴ of {
//│ 										LH_C h¹⁵ t¹⁸ => 
//│ 											let t¹⁹ = map_₀_₂(f²⁹, t¹⁸)
//│ 											in let h¹⁶ = f²⁹(h¹⁵)
//│ 											in (fun f³⁰ -> (fun i¹⁷ -> foldl_₀_₁₀(f³⁰, f³⁰(i¹⁷, h¹⁶), t¹⁹)))
//│ 										| LH_N  => (fun f³¹ -> (fun i¹⁸ -> i¹⁸))}
//│ 									where
//│ 									def foldl_₀_₁₀(f²², i¹³, ls⁸) = 
//│ 										ls⁸(f²², i¹³)
//│ 	def process_₀_₀(_lh_process_arg1¹) = 
//│ 		doInput_₀_₁(randomInts_₀_₀(111, 47), _lh_process_arg1¹)
//│ 		where
//│ 		def doInput_₀_₁(_lh_doInput_arg1⁴, _lh_doInput_arg2²) = 
//│ 			_lh_doInput_arg2²(_lh_doInput_arg1⁴)
//│ 		def randomInts_₀_₀(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) = 
//│ 			if ((1 <= _lh_randomInts_arg1¹) && (_lh_randomInts_arg1¹ <= 2147483562)) then if ((1 <= _lh_randomInts_arg2¹) && (_lh_randomInts_arg2¹ <= 2147483398)) then rands_₀_₀(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 			where
//│ 			def rands_₀_₀(_lh_rands_arg1¹, _lh_rands_arg2¹) = 
//│ 				let k⁵ = div⁰(_lh_rands_arg1¹, 53668)
//│ 				in let s1'¹ = ((40014 * (_lh_rands_arg1¹ - (k⁵ * 53668))) - (k⁵ * 12211))
//│ 				in let s1''¹ = if (s1'¹ < 0) then (s1'¹ + 2147483563) else s1'¹
//│ 				in let k'¹ = div⁰(_lh_rands_arg2¹, 52774)
//│ 				in let s2'¹ = ((40692 * (_lh_rands_arg2¹ - (k'¹ * 52774))) - (k'¹ * 3791))
//│ 				in let s2''¹ = if (s2'¹ < 0) then (s2'¹ + 2147483399) else s2'¹
//│ 				in let z¹ = (s1''¹ - s2''¹)
//│ 				in if (z¹ < 1) then lazy⁰([LH_C (z¹ + 2147483562) rands_₀_₀(s1''¹, s2''¹)]) else lazy⁰([LH_C z¹ rands_₀_₀(s1''¹, s2''¹)])
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 1579 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent¹³ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 1598
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)] | LH_N  => [LH_N]}: 2416
//│ [LH_N]: 2141 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 1794
//│ [LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]: 2414 --->
//│ 	case ls¹¹ of {LH_C h¹² t¹⁵ => let t¹⁶ = map_₀_₁(f²⁵, t¹⁵)
//│ in let h¹³ = f²⁵(h¹²)
//│ in (fun f²⁶ -> (fun i¹⁵ -> foldl_₀_₉(f²⁶, f²⁶(i¹⁵, h¹³), t¹⁶))) | LH_N  => (fun f²⁷ -> (fun i¹⁶ -> i¹⁶))}: 2004
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁸ => let t¹⁹ = map_₀_₂(f²⁹, t¹⁸)
//│ in let h¹⁶ = f²⁹(h¹⁵)
//│ in (fun f³⁰ -> (fun i¹⁷ -> foldl_₀_₁₀(f³⁰, f³⁰(i¹⁷, h¹⁶), t¹⁹))) | LH_N  => (fun f³¹ -> (fun i¹⁸ -> i¹⁸))}: 2215
//│ 	case ls²³ of {LH_C h¹⁹ t²² => let t²³ = map_₀_₀(f⁴¹, t²²)
//│ in let h²⁰ = f⁴¹(h¹⁹)
//│ in (fun f⁴² -> (fun i²⁵ -> foldl_₀_₈(f⁴², f⁴²(i²⁵, h²⁰), t²³))) | LH_N  => (fun f⁴³ -> (fun i²⁶ -> i²⁶))}: 2814
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}: 2909
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}}: 2910
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}: 2976
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}}: 2977
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}: 3043
//│ [LH_N]: 2415 --->
//│ 	case ls¹¹ of {LH_C h¹² t¹⁵ => let t¹⁶ = map_₀_₁(f²⁵, t¹⁵)
//│ in let h¹³ = f²⁵(h¹²)
//│ in (fun f²⁶ -> (fun i¹⁵ -> foldl_₀_₉(f²⁶, f²⁶(i¹⁵, h¹³), t¹⁶))) | LH_N  => (fun f²⁷ -> (fun i¹⁶ -> i¹⁶))}: 2004
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁸ => let t¹⁹ = map_₀_₂(f²⁹, t¹⁸)
//│ in let h¹⁶ = f²⁹(h¹⁵)
//│ in (fun f³⁰ -> (fun i¹⁷ -> foldl_₀_₁₀(f³⁰, f³⁰(i¹⁷, h¹⁶), t¹⁹))) | LH_N  => (fun f³¹ -> (fun i¹⁸ -> i¹⁸))}: 2215
//│ 	case ls²³ of {LH_C h¹⁹ t²² => let t²³ = map_₀_₀(f⁴¹, t²²)
//│ in let h²⁰ = f⁴¹(h¹⁹)
//│ in (fun f⁴² -> (fun i²⁵ -> foldl_₀_₈(f⁴², f⁴²(i²⁵, h²⁰), t²³))) | LH_N  => (fun f⁴³ -> (fun i²⁶ -> i²⁶))}: 2814
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}: 2909
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}}: 2910
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}: 2976
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}}: 2977
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}: 3043
//│ [LH_N]: 2417 --->
//│ 	case ls¹¹ of {LH_C h¹² t¹⁵ => let t¹⁶ = map_₀_₁(f²⁵, t¹⁵)
//│ in let h¹³ = f²⁵(h¹²)
//│ in (fun f²⁶ -> (fun i¹⁵ -> foldl_₀_₉(f²⁶, f²⁶(i¹⁵, h¹³), t¹⁶))) | LH_N  => (fun f²⁷ -> (fun i¹⁶ -> i¹⁶))}: 2004
//│ 	case ls¹⁴ of {LH_C h¹⁵ t¹⁸ => let t¹⁹ = map_₀_₂(f²⁹, t¹⁸)
//│ in let h¹⁶ = f²⁹(h¹⁵)
//│ in (fun f³⁰ -> (fun i¹⁷ -> foldl_₀_₁₀(f³⁰, f³⁰(i¹⁷, h¹⁶), t¹⁹))) | LH_N  => (fun f³¹ -> (fun i¹⁸ -> i¹⁸))}: 2215
//│ 	case ls²³ of {LH_C h¹⁹ t²² => let t²³ = map_₀_₀(f⁴¹, t²²)
//│ in let h²⁰ = f⁴¹(h¹⁹)
//│ in (fun f⁴² -> (fun i²⁵ -> foldl_₀_₈(f⁴², f⁴²(i²⁵, h²⁰), t²³))) | LH_N  => (fun f⁴³ -> (fun i²⁶ -> i²⁶))}: 2814
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}: 2909
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}}: 2910
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}: 2976
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}}: 2977
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}: 3043
//│ [LH_C (z¹ + 2147483562) rands_₀_₀(s1''¹, s2''¹)]: 2518 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent¹³ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 1598
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)] | LH_N  => [LH_N]}: 2416
//│ [LH_C z¹ rands_₀_₀(s1''¹, s2''¹)]: 2527 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent¹³ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 1598
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)] | LH_N  => [LH_N]}: 2416
//│ [LH_C h¹⁸ take_lz_₁_₀((n⁹ - 1), t²¹)]: 2566 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 1751
//│ 	case _lh_matchIdent¹⁵ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 1794
//│ [LH_P2 (_lh_f_LH_P2_0⁴ + 1) _lh_f_LH_P2_0³]: 2595 --->
//│ 	case _lh_f_arg1³ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => let _lh_matchIdent¹⁹ = divmod_₀_₀(_lh_f_LH_P2_1⁵, 2)
//│ in _lh_matchIdent¹⁹(_lh_f_LH_P2_0⁵, _lh_f_LH_P2_1⁵, f³⁶) | _  => error⁰}: 2623
//│ [LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴]: 2599 --->
//│ 	case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls¹⁰ -> let _lh_matchIdent¹⁴ = ls¹⁰
//│ in case _lh_matchIdent¹⁴ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent¹⁵ = take_lz_₁_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀(square¹, powerMod_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent¹⁵ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 1799
//│ [LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 2632 --->
//│ 	case _lh_f_arg1³ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => let _lh_matchIdent¹⁹ = divmod_₀_₀(_lh_f_LH_P2_1⁵, 2)
//│ in _lh_matchIdent¹⁹(_lh_f_LH_P2_0⁵, _lh_f_LH_P2_1⁵, f³⁶) | _  => error⁰}: 2623
//│ [LH_N]: 2672 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 1751
//│ [LH_N]: 2752 --->
//│ 	case ls¹³ of {LH_C h¹⁴ t¹⁷ => (1 + length_₀_₀(t¹⁷)) | LH_N  => 0}: 2168
//│ 	case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}}: 3044
//│ 	case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}} | _  => error⁰}: 3046
//│ [LH_C _lh_chop_LH_P2_1¹ a⁸]: 2775 --->
//│ 	case ls¹³ of {LH_C h¹⁴ t¹⁷ => (1 + length_₀_₀(t¹⁷)) | LH_N  => 0}: 2168
//│ 	case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}}: 3044
//│ 	case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}} | _  => error⁰}: 3046
//│ [LH_P2 (fun _lh_f_arg2⁵ -> (fun f⁵² -> _lh_f_arg2⁵)) (fun _lh_dummy² -> (fun _lh_doInput_arg1⁶ -> [LH_N]))]: 3056 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => let _lh_doInput_LH_C_1¹ = let _lh_matchIdent²¹ = _lh_lines_LH_P2_1¹
//│ in _lh_matchIdent²¹(99)
//│ in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ in (fun _lh_doInput_arg1⁵ -> doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁵)) | _  => error⁰}: 2717
//│ 	case _lh_matchIdent²³ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵⁴ -> f⁵⁴(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹] | _  => error⁰}: 3100
//│ [LH_P2 (fun _lh_f_arg2⁶ -> (fun f⁵³ -> _lh_f_arg2⁶)) let _lh_lines_LH_C_1¹ = _lh_break_LH_C_1¹
//│ in (fun _lh_dummy³ -> lines_₀_₀(_lh_lines_LH_C_1¹))]: 3069 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => let _lh_doInput_LH_C_1¹ = let _lh_matchIdent²¹ = _lh_lines_LH_P2_1¹
//│ in _lh_matchIdent²¹(99)
//│ in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ in (fun _lh_doInput_arg1⁵ -> doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁵)) | _  => error⁰}: 2717
//│ 	case _lh_matchIdent²³ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵⁴ -> f⁵⁴(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹] | _  => error⁰}: 3100
//│ [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵⁴ -> f⁵⁴(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹]: 3098 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => let _lh_doInput_LH_C_1¹ = let _lh_matchIdent²¹ = _lh_lines_LH_P2_1¹
//│ in _lh_matchIdent²¹(99)
//│ in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ in (fun _lh_doInput_arg1⁵ -> doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁵)) | _  => error⁰}: 2717
//│ 	case _lh_matchIdent²³ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵⁴ -> f⁵⁴(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹] | _  => error⁰}: 3100
//│ ------------------
//│ case _lh_matchIdent¹³ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 1598 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1579
//│ 	[LH_C (z¹ + 2147483562) rands_₀_₀(s1''¹, s2''¹)]: 2518
//│ 	[LH_C z¹ rands_₀_₀(s1''¹, s2''¹)]: 2527
//│ case _lh_matchIdent¹⁴ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 1751 --->
//│ 	[LH_C h¹⁸ take_lz_₁_₀((n⁹ - 1), t²¹)]: 2566
//│ 	[LH_N]: 2672
//│ case _lh_matchIdent¹⁵ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 1794 --->
//│ 	[LH_N]: 2141
//│ 	[LH_C h¹⁸ take_lz_₁_₀((n⁹ - 1), t²¹)]: 2566
//│ case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls¹⁰ -> let _lh_matchIdent¹⁴ = ls¹⁰
//│ in case _lh_matchIdent¹⁴ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent¹⁵ = take_lz_₁_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀(square¹, powerMod_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent¹⁵ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 1799 --->
//│ 	[LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴]: 2599
//│ case ls¹¹ of {LH_C h¹² t¹⁵ => let t¹⁶ = map_₀_₁(f²⁵, t¹⁵)
//│ in let h¹³ = f²⁵(h¹²)
//│ in (fun f²⁶ -> (fun i¹⁵ -> foldl_₀_₉(f²⁶, f²⁶(i¹⁵, h¹³), t¹⁶))) | LH_N  => (fun f²⁷ -> (fun i¹⁶ -> i¹⁶))}: 2004 --->
//│ 	[LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]: 2414
//│ 	[LH_N]: 2415
//│ 	[LH_N]: 2417
//│ case ls¹³ of {LH_C h¹⁴ t¹⁷ => (1 + length_₀_₀(t¹⁷)) | LH_N  => 0}: 2168 --->
//│ 	[LH_N]: 2752
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁸]: 2775
//│ case ls¹⁴ of {LH_C h¹⁵ t¹⁸ => let t¹⁹ = map_₀_₂(f²⁹, t¹⁸)
//│ in let h¹⁶ = f²⁹(h¹⁵)
//│ in (fun f³⁰ -> (fun i¹⁷ -> foldl_₀_₁₀(f³⁰, f³⁰(i¹⁷, h¹⁶), t¹⁹))) | LH_N  => (fun f³¹ -> (fun i¹⁸ -> i¹⁸))}: 2215 --->
//│ 	[LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]: 2414
//│ 	[LH_N]: 2415
//│ 	[LH_N]: 2417
//│ case force⁰(ls¹⁶) of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)] | LH_N  => [LH_N]}: 2416 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1579
//│ 	[LH_C (z¹ + 2147483562) rands_₀_₀(s1''¹, s2''¹)]: 2518
//│ 	[LH_C z¹ rands_₀_₀(s1''¹, s2''¹)]: 2527
//│ case _lh_f_arg1³ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => let _lh_matchIdent¹⁹ = divmod_₀_₀(_lh_f_LH_P2_1⁵, 2)
//│ in _lh_matchIdent¹⁹(_lh_f_LH_P2_0⁵, _lh_f_LH_P2_1⁵, f³⁶) | _  => error⁰}: 2623 --->
//│ 	[LH_P2 (_lh_f_LH_P2_0⁴ + 1) _lh_f_LH_P2_0³]: 2595
//│ 	[LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 2632
//│ case _lh_matchIdent²⁰ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => let _lh_doInput_LH_C_1¹ = let _lh_matchIdent²¹ = _lh_lines_LH_P2_1¹
//│ in _lh_matchIdent²¹(99)
//│ in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ in (fun _lh_doInput_arg1⁵ -> doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁵)) | _  => error⁰}: 2717 --->
//│ 	[LH_P2 (fun _lh_f_arg2⁵ -> (fun f⁵² -> _lh_f_arg2⁵)) (fun _lh_dummy² -> (fun _lh_doInput_arg1⁶ -> [LH_N]))]: 3056
//│ 	[LH_P2 (fun _lh_f_arg2⁶ -> (fun f⁵³ -> _lh_f_arg2⁶)) let _lh_lines_LH_C_1¹ = _lh_break_LH_C_1¹
//│ in (fun _lh_dummy³ -> lines_₀_₀(_lh_lines_LH_C_1¹))]: 3069
//│ 	[LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵⁴ -> f⁵⁴(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹]: 3098
//│ case ls²³ of {LH_C h¹⁹ t²² => let t²³ = map_₀_₀(f⁴¹, t²²)
//│ in let h²⁰ = f⁴¹(h¹⁹)
//│ in (fun f⁴² -> (fun i²⁵ -> foldl_₀_₈(f⁴², f⁴²(i²⁵, h²⁰), t²³))) | LH_N  => (fun f⁴³ -> (fun i²⁶ -> i²⁶))}: 2814 --->
//│ 	[LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]: 2414
//│ 	[LH_N]: 2415
//│ 	[LH_N]: 2417
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}: 2909 --->
//│ 	[LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]: 2414
//│ 	[LH_N]: 2415
//│ 	[LH_N]: 2417
//│ case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}}: 2910 --->
//│ 	[LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]: 2414
//│ 	[LH_N]: 2415
//│ 	[LH_N]: 2417
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}: 2976 --->
//│ 	[LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]: 2414
//│ 	[LH_N]: 2415
//│ 	[LH_N]: 2417
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}}: 2977 --->
//│ 	[LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]: 2414
//│ 	[LH_N]: 2415
//│ 	[LH_N]: 2417
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}: 3043 --->
//│ 	[LH_C h¹⁷ take_lz_₀_₀((n⁸ - 1), t²⁰)]: 2414
//│ 	[LH_N]: 2415
//│ 	[LH_N]: 2417
//│ case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}}: 3044 --->
//│ 	[LH_N]: 2752
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁸]: 2775
//│ case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²⁴ = (fun f⁴⁴ -> (fun i²⁷ -> i²⁷))
//│ in let h²¹ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f⁴⁵ -> (fun i²⁸ -> foldl_₀_₆(f⁴⁵, f⁴⁵(i²⁸, h²¹), t²⁴))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²⁵ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h²² = t²⁵
//│ in (fun f⁴⁶ -> (fun i²⁹ -> foldl_₀_₇(f⁴⁶, f⁴⁶(i²⁹, h²²), t²⁶))) else let t²⁷ = map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²³ = t²⁵
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₁(f⁴⁷, f⁴⁷(i³⁰, h²³), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁸ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²⁴ = t²⁸
//│ in (fun f⁴⁸ -> (fun i³¹ -> foldl_₀_₂(f⁴⁸, f⁴⁸(i³¹, h²⁴), t²⁹))) else let t³⁰ = map_₀_₀((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²⁵ = t²⁸
//│ in (fun f⁴⁹ -> (fun i³² -> foldl_₀_₃(f⁴⁹, f⁴⁹(i³², h²⁵), t³⁰))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t³¹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t³¹ == _lh_uniform_LH_C_0⁵) then let t³² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²⁶ = t³¹
//│ in (fun f⁵⁰ -> (fun i³³ -> foldl_₀_₄(f⁵⁰, f⁵⁰(i³³, h²⁶), t³²))) else let t³³ = map_₀_₁((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁷ = t³¹
//│ in (fun f⁵¹ -> (fun i³⁴ -> foldl_₀_₅(f⁵¹, f⁵¹(i³⁴, h²⁷), t³³))) | _  => error⁰}} | _  => error⁰}: 3046 --->
//│ 	[LH_N]: 2752
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁸]: 2775
//│ case _lh_matchIdent²³ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵⁴ -> f⁵⁴(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹] | _  => error⁰}: 3100 --->
//│ 	[LH_P2 (fun _lh_f_arg2⁵ -> (fun f⁵² -> _lh_f_arg2⁵)) (fun _lh_dummy² -> (fun _lh_doInput_arg1⁶ -> [LH_N]))]: 3056
//│ 	[LH_P2 (fun _lh_f_arg2⁶ -> (fun f⁵³ -> _lh_f_arg2⁶)) let _lh_lines_LH_C_1¹ = _lh_break_LH_C_1¹
//│ in (fun _lh_dummy³ -> lines_₀_₀(_lh_lines_LH_C_1¹))]: 3069
//│ 	[LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵⁴ -> f⁵⁴(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹]: 3098
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 (_lh_f_LH_P2_0⁴ + 1) _lh_f_LH_P2_0³]: 2595 --->
//│ 	case _lh_f_arg1³ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => let _lh_matchIdent¹⁹ = divmod_₀_₀(_lh_f_LH_P2_1⁵, 2)
//│ in _lh_matchIdent¹⁹(_lh_f_LH_P2_0⁵, _lh_f_LH_P2_1⁵, f³⁶) | _  => error⁰}: 2623
//│ [LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴]: 2599 --->
//│ 	case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls¹⁰ -> let _lh_matchIdent¹⁴ = ls¹⁰
//│ in case _lh_matchIdent¹⁴ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent¹⁵ = take_lz_₁_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀(square¹, powerMod_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent¹⁵ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 1799
//│ [LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 2632 --->
//│ 	case _lh_f_arg1³ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => let _lh_matchIdent¹⁹ = divmod_₀_₀(_lh_f_LH_P2_1⁵, 2)
//│ in _lh_matchIdent¹⁹(_lh_f_LH_P2_0⁵, _lh_f_LH_P2_1⁵, f³⁶) | _  => error⁰}: 2623
//│ ------------------
//│ case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls¹⁰ -> let _lh_matchIdent¹⁴ = ls¹⁰
//│ in case _lh_matchIdent¹⁴ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent¹⁵ = take_lz_₁_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀(square¹, powerMod_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent¹⁵ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 1799 --->
//│ 	[LH_P2 _lh_f_LH_P2_0⁴ _lh_f_LH_P2_1⁴]: 2599
//│ case _lh_f_arg1³ of {LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵ => let _lh_matchIdent¹⁹ = divmod_₀_₀(_lh_f_LH_P2_1⁵, 2)
//│ in _lh_matchIdent¹⁹(_lh_f_LH_P2_0⁵, _lh_f_LH_P2_1⁵, f³⁶) | _  => error⁰}: 2623 --->
//│ 	[LH_P2 (_lh_f_LH_P2_0⁴ + 1) _lh_f_LH_P2_0³]: 2595
//│ 	[LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 2632
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPrimetest_nofib_₀_₀(primId⁰(0))
//│ def testPrimetest_nofib_₀_₀(_lh_testPrimetest_nofib_arg1²) = 
//│ 	let cts² = primId⁰([LH_C '2' [LH_C '4' [LH_C '|' [LH_C '4' [LH_C '8' [LH_C '|' [LH_C '4' [LH_C '7' [LH_C '|' [LH_C '1' [LH_C '3' [LH_C '1' [LH_C '7' [LH_C '|' [LH_C '8' [LH_C '9' [LH_C '0' [LH_C '1' [LH_N]]]]]]]]]]]]]]]]]]])
//│ 	in process_₀_₀(lines_₀_₀(cts²))
//│ 	where
//│ 	def lines_₀_₀(_lh_lines_arg1²) = 
//│ 		let _lh_matchIdent²⁴ = break_₀_₀((fun x¹⁴ -> polyEq⁰(x¹⁴, '|')), _lh_lines_arg1²)
//│ 		in case _lh_matchIdent²⁴ of {
//│ 			LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => 
//│ 				let _lh_doInput_LH_C_1² = 	
//│ 					let _lh_matchIdent²⁵ = _lh_lines_LH_P2_1¹
//│ 					in _lh_matchIdent²⁵(99)
//│ 				in let _lh_doInput_LH_C_0² = _lh_lines_LH_P2_0¹
//│ 				in (fun _lh_doInput_arg1⁷ -> doLine_₀_₀(_lh_doInput_LH_C_0², (fun state² -> doInput_₀_₀(state², _lh_doInput_LH_C_1²)), _lh_doInput_arg1⁷))
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break_₀_₀(_lh_break_arg1², _lh_break_arg2²) = 
//│ 			case _lh_break_arg2² of {
//│ 				LH_N  => [LH_P2 (fun _lh_f_arg2⁸ -> (fun f⁷⁵ -> _lh_f_arg2⁸)) (fun _lh_dummy⁴ -> (fun _lh_doInput_arg1¹⁰ -> [LH_N]))]
//│ 				| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1²(_lh_break_LH_C_0¹) then [LH_P2 (fun _lh_f_arg2⁹ -> (fun f⁷⁶ -> _lh_f_arg2⁹)) 
//│ 					let _lh_lines_LH_C_1² = _lh_break_LH_C_1¹
//│ 					in (fun _lh_dummy⁵ -> lines_₀_₀(_lh_lines_LH_C_1²))] else 
//│ 					let _lh_matchIdent²⁹ = break_₀_₀(_lh_break_arg1², _lh_break_LH_C_1¹)
//│ 					in case _lh_matchIdent²⁹ of {
//│ 						LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 
//│ 							let _lh_f_LH_C_1² = _lh_break_LH_P2_0¹
//│ 							in let _lh_f_LH_C_0² = _lh_break_LH_C_0¹
//│ 							in (fun _lh_f_arg2¹⁰ -> (fun f⁷⁷ -> f⁷⁷(_lh_f_LH_C_1², ((10 * _lh_f_arg2¹⁰) + int_val_of_char_₀_₀(_lh_f_LH_C_0²))))) _lh_break_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def int_val_of_char_₀_₀(_lh_int_val_of_char_arg1²) = 
//│ 				(int_of_char⁰(_lh_int_val_of_char_arg1²) - 48)
//│ 		def doInput_₀_₀(_lh_doInput_arg1⁸, _lh_doInput_arg2³) = 
//│ 			_lh_doInput_arg2³(_lh_doInput_arg1⁸)
//│ 		def doLine_₀_₀(_lh_doLine_arg1², _lh_doLine_arg2⁹, _lh_doLine_arg3²) = 
//│ 			let n¹⁵ = int_val_of_string_₀_₀(_lh_doLine_arg1²)
//│ 			in let _lh_matchIdent²⁷ = multiTest_₀_₀(100, _lh_doLine_arg3², n¹⁵)
//│ 			in _lh_matchIdent²⁷(_lh_doLine_arg2⁹)
//│ 			where
//│ 			def int_val_of_string_₀_₀(_lh_int_val_of_string_arg1²) = 
//│ 				let f⁸² = (fun _lh_f_arg1⁴ -> (fun _lh_f_arg2¹¹ -> _lh_f_arg1⁴(_lh_f_arg2¹¹, f⁸²)))
//│ 				in f⁸²(_lh_int_val_of_string_arg1², 0)
//│ 			def multiTest_₀_₀(_lh_multiTest_arg1², _lh_multiTest_arg2², _lh_multiTest_arg3²) = 
//│ 				let mTest⁵ = (fun k⁸ -> (fun rs² -> if (k⁸ == 0) then 
//│ 					let _lh_doLine_LH_P2_1⁷ = rs²
//│ 					in let _lh_doLine_LH_P2_0⁷ = [True]
//│ 					in (fun _lh_doLine_arg2¹⁰ -> if _lh_doLine_LH_P2_0⁷ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹⁰(_lh_doLine_LH_P2_1⁷)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹⁰(_lh_doLine_LH_P2_1⁷)]) else 
//│ 					let _lh_matchIdent²⁸ = singleTest_₀_₀(_lh_multiTest_arg3², findKQ_₀_₀(_lh_multiTest_arg3²), rs²)
//│ 					in _lh_matchIdent²⁸(k⁸, mTest⁵)))
//│ 				in if ((_lh_multiTest_arg3² <= 1) || even_₀_₀(_lh_multiTest_arg3²)) then 
//│ 					let _lh_doLine_LH_P2_1⁸ = _lh_multiTest_arg2²
//│ 					in let _lh_doLine_LH_P2_0⁸ = (_lh_multiTest_arg3² == 2)
//│ 					in (fun _lh_doLine_arg2¹¹ -> if _lh_doLine_LH_P2_0⁸ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹¹(_lh_doLine_LH_P2_1⁸)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹¹(_lh_doLine_LH_P2_1⁸)]) else mTest⁵(_lh_multiTest_arg1², _lh_multiTest_arg2²)
//│ 				where
//│ 				def even_₀_₀(_lh_even_arg1⁵) = 
//│ 					((_lh_even_arg1⁵ % 2) == 0)
//│ 				def findKQ_₀_₀(_lh_findKQ_arg1²) = 
//│ 					let f⁹² = (fun _lh_f_arg1⁵ -> _lh_f_arg1⁵(f⁹²))
//│ 					in f⁹²(
//│ 						let _lh_f_LH_P2_1⁹ = (_lh_findKQ_arg1² - 1)
//│ 						in let _lh_f_LH_P2_0⁹ = 0
//│ 						in (fun f⁹³ -> 
//│ 							let _lh_matchIdent³⁵ = divmod_₀_₀(_lh_f_LH_P2_1⁹, 2)
//│ 							in _lh_matchIdent³⁵(_lh_f_LH_P2_0⁹, _lh_f_LH_P2_1⁹, f⁹³)))
//│ 					where
//│ 					def divmod_₀_₀(_lh_divmod_arg1⁴, _lh_divmod_arg2⁴) = 
//│ 						let _lh_f_LH_P2_1⁶ = (_lh_divmod_arg1⁴ % _lh_divmod_arg2⁴)
//│ 						in let _lh_f_LH_P2_0⁶ = div⁰(_lh_divmod_arg1⁴, _lh_divmod_arg2⁴)
//│ 						in (fun _lh_f_LH_P2_0⁷ -> (fun _lh_f_LH_P2_1⁷ -> (fun f⁷⁹ -> if (_lh_f_LH_P2_1⁶ == 0) then f⁷⁹(
//│ 							let _lh_f_LH_P2_1⁸ = _lh_f_LH_P2_0⁶
//│ 							in let _lh_f_LH_P2_0⁸ = (_lh_f_LH_P2_0⁷ + 1)
//│ 							in (fun f⁸⁰ -> 
//│ 								let _lh_matchIdent³⁰ = divmod_₀_₀(_lh_f_LH_P2_1⁸, 2)
//│ 								in _lh_matchIdent³⁰(_lh_f_LH_P2_0⁸, _lh_f_LH_P2_1⁸, f⁸⁰))) else 
//│ 							let _lh_singleTestX_LH_P2_1² = _lh_f_LH_P2_1⁷
//│ 							in let _lh_singleTestX_LH_P2_0² = _lh_f_LH_P2_0⁷
//│ 							in (fun _lh_singleTestX_arg1³ -> (fun _lh_singleTestX_arg3³ -> 
//│ 								let square² = (fun x²⁰ -> ((x²⁰ * x²⁰) % _lh_singleTestX_arg1³))
//│ 								in let witness² = (fun ls³⁸ -> 
//│ 									let _lh_matchIdent³¹ = ls³⁸
//│ 									in case _lh_matchIdent³¹ of {
//│ 										LH_N  => [False]
//│ 										| LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1³ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness²(_lh_singleTestX_LH_C_1²)
//│ 										| _  => error⁰})
//│ 								in let _lh_matchIdent³² = take_lz_₁_₁(_lh_singleTestX_LH_P2_0², iterate_₀_₀(square², powerMod_₀_₀(_lh_singleTestX_arg3³, _lh_singleTestX_LH_P2_1², _lh_singleTestX_arg1³)))
//│ 								in case _lh_matchIdent³² of {
//│ 									LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1³ - 1))) || witness²(_lh_singleTestX_LH_C_1³))
//│ 									| _  => error⁰})))))
//│ 				def singleTest_₀_₀(_lh_singleTest_arg1⁵, _lh_singleTest_arg2⁵, _lh_singleTest_arg3²) = 
//│ 					let _lh_matchIdent³⁶ = random_₀_₀((_lh_singleTest_arg1⁵ - 2), _lh_singleTest_arg3²)
//│ 					in _lh_matchIdent³⁶(_lh_singleTest_arg1⁵, _lh_singleTest_arg2⁵)
//│ 					where
//│ 					def random_₀_₀(_lh_random_arg1², _lh_random_arg2²) = 
//│ 						let ns⁵ = chop_₀_₀(65536, _lh_random_arg1²)
//│ 						in let _lh_matchIdent²⁶ = splitAt_lz_₀_₀(length_₀_₀(ns⁵), _lh_random_arg2²)
//│ 						in _lh_matchIdent²⁶(ns⁵)
//│ 						where
//│ 						def chop_₀_₀(_lh_chop_arg1²) = 
//│ 							let chop'⁴ = (fun a¹¹ -> (fun n¹⁸ -> 
//│ 								let _lh_matchIdent³⁴ = divmod_₁_₀(n¹⁸, _lh_chop_arg1²)
//│ 								in _lh_matchIdent³⁴(a¹¹, chop'⁴, n¹⁸)))
//│ 							in chop'⁴([LH_N])
//│ 							where
//│ 							def divmod_₁_₀(_lh_divmod_arg1⁵, _lh_divmod_arg2⁵) = 
//│ 								let _lh_chop_LH_P2_1² = (_lh_divmod_arg1⁵ % _lh_divmod_arg2⁵)
//│ 								in let _lh_chop_LH_P2_0² = div⁰(_lh_divmod_arg1⁵, _lh_divmod_arg2⁵)
//│ 								in (fun a¹² -> (fun chop'⁵ -> (fun n¹⁹ -> if (n¹⁹ == 0) then a¹² else chop'⁵([LH_C _lh_chop_LH_P2_1² a¹²], _lh_chop_LH_P2_0²))))
//│ 						def length_₀_₀(ls³³) = 
//│ 							case ls³³ of {
//│ 								LH_C h¹⁴ t¹⁷ => (1 + length_₀_₀(t¹⁷))
//│ 								| LH_N  => 0}
//│ 						def splitAt_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 							let _lh_random_LH_P2_1² = drop_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 							in let _lh_random_LH_P2_0² = take_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 							in (fun ns⁴ -> 
//│ 								let _lh_singleTest_LH_P2_1² = _lh_random_LH_P2_1²
//│ 								in let _lh_singleTest_LH_P2_0² = makeNumber_₀_₀(65536, uniform_₀_₀(ns⁴, _lh_random_LH_P2_0²))
//│ 								in (fun _lh_singleTest_arg1⁴ -> (fun _lh_singleTest_arg2⁴ -> 
//│ 									let _lh_multiTest_LH_P2_1² = _lh_singleTest_LH_P2_1²
//│ 									in let _lh_multiTest_LH_P2_0² = singleTestX_₀_₀(_lh_singleTest_arg1⁴, _lh_singleTest_arg2⁴, (2 + _lh_singleTest_LH_P2_0²))
//│ 									in (fun k⁶ -> (fun mTest⁴ -> if _lh_multiTest_LH_P2_0² then mTest⁴((k⁶ - 1), _lh_multiTest_LH_P2_1²) else 
//│ 										let _lh_doLine_LH_P2_1⁶ = _lh_multiTest_LH_P2_1²
//│ 										in let _lh_doLine_LH_P2_0⁶ = [False]
//│ 										in (fun _lh_doLine_arg2⁸ -> if _lh_doLine_LH_P2_0⁶ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁸(_lh_doLine_LH_P2_1⁶)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁸(_lh_doLine_LH_P2_1⁶)]))))))
//│ 							where
//│ 							def drop_lz_₀_₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 								let _lh_matchIdent³³ = force⁰(_lh_drop_lz_arg2²)
//│ 								in case _lh_matchIdent³³ of {
//│ 									LH_N  => lazy⁰([LH_N])
//│ 									| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1² > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹
//│ 									| _  => error⁰}
//│ 							def makeNumber_₀_₀(_lh_makeNumber_arg1²) = 
//│ 								foldl_₀_₀((fun a¹⁰ -> (fun x¹⁶ -> ((a¹⁰ * _lh_makeNumber_arg1²) + x¹⁶))), 0)
//│ 								where
//│ 								def foldl_₀_₀(f⁸¹, i⁵⁴, ls³⁹) = 
//│ 									ls³⁹(f⁸¹, i⁵⁴)
//│ 							def singleTestX_₀_₀(_lh_singleTestX_arg1², _lh_singleTestX_arg2², _lh_singleTestX_arg3²) = 
//│ 								_lh_singleTestX_arg2²(_lh_singleTestX_arg1², _lh_singleTestX_arg3²)
//│ 								where
//│ 								def iterate_₀_₀(f⁶¹, x¹⁵) = 
//│ 									lazy⁰(
//│ 										let t³⁵ = iterate_₀_₀(f⁶¹, f⁶¹(x¹⁵))
//│ 										in let h²⁹ = x¹⁵
//│ 										in (fun n¹³ -> [LH_C h²⁹ take_lz_₁_₀((n¹³ - 1), t³⁵)]))
//│ 									where
//│ 									def take_lz_₁_₀(n¹⁷, ls³⁷) = 
//│ 										if (n¹⁷ > 0) then force⁰(ls³⁷, n¹⁷) else [LH_N]
//│ 								def powerMod_₀_₀(_lh_powerMod_arg1², _lh_powerMod_arg2², _lh_powerMod_arg3²) = 
//│ 									case _lh_powerMod_arg2² of {
//│ 										0  => 1
//│ 										| _  => 
//│ 											let a'² = (_lh_powerMod_arg1² mod _lh_powerMod_arg3²)
//│ 											in let f⁹¹ = (fun a¹³ -> (fun b⁴ -> (fun c² -> 
//│ 												let g² = (fun a¹⁴ -> (fun b⁵ -> if even_₁_₀(b⁵) then g²(((a¹⁴ * a¹⁴) % _lh_powerMod_arg3²), div⁰(b⁵, 2)) else f⁹¹(a¹⁴, (b⁵ - 1), ((a¹⁴ * c²) % _lh_powerMod_arg3²))))
//│ 												in if (b⁴ == 0) then c² else g²(a¹³, b⁴))))
//│ 											in f⁹¹(a'², (_lh_powerMod_arg2² - 1), a'²)}
//│ 									where
//│ 									def even_₁_₀(_lh_even_arg1⁴) = 
//│ 										((_lh_even_arg1⁴ % 2) == 0)
//│ 								def take_lz_₁_₁(n¹⁴, ls²⁹) = 
//│ 									if (n¹⁴ > 0) then force⁰(ls²⁹, n¹⁴) else [LH_N]
//│ 							def take_lz_₀_₀(n¹⁶, ls³²) = 
//│ 								if (n¹⁶ > 0) then case force⁰(ls³²) of {
//│ 									LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lz_₀_₀((n¹⁶ - 1), t²⁰)]
//│ 									| LH_N  => [LH_N]} else [LH_N]
//│ 							def uniform_₀_₀(_lh_uniform_arg1², _lh_uniform_arg2²) = 
//│ 								case _lh_uniform_arg1² of {
//│ 									LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {
//│ 										LH_N  => case _lh_uniform_arg2² of {
//│ 											LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {
//│ 												LH_N  => 
//│ 													let t³⁶ = (fun f⁶⁶ -> (fun i⁴⁴ -> i⁴⁴))
//│ 													in let h³⁰ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ 													in (fun f⁶⁷ -> (fun i⁴⁵ -> foldl_₀_₆(f⁶⁷, f⁶⁷(i⁴⁵, h³⁰), t³⁶)))
//│ 												| _  => case _lh_uniform_arg2² of {
//│ 													LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => 
//│ 														let t³⁷ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 														in if (t³⁷ == _lh_uniform_LH_C_0⁵) then 
//│ 															let t³⁸ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ 															in let h³¹ = t³⁷
//│ 															in (fun f⁶⁸ -> (fun i⁴⁶ -> foldl_₀_₇(f⁶⁸, f⁶⁸(i⁴⁶, h³¹), t³⁸))) else 
//│ 															let t³⁹ = map_₀_₂((fun x¹⁷ -> (x¹⁷ % 65536)), _lh_uniform_LH_C_1⁷)
//│ 															in let h³² = t³⁷
//│ 															in (fun f⁶⁹ -> (fun i⁴⁷ -> foldl_₀_₁(f⁶⁹, f⁶⁹(i⁴⁷, h³²), t³⁹)))
//│ 													| _  => error⁰}}
//│ 											| _  => case _lh_uniform_arg2² of {
//│ 												LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => 
//│ 													let t⁴⁰ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 													in if (t⁴⁰ == _lh_uniform_LH_C_0⁵) then 
//│ 														let t⁴¹ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ 														in let h³³ = t⁴⁰
//│ 														in (fun f⁷⁰ -> (fun i⁴⁸ -> foldl_₀_₂(f⁷⁰, f⁷⁰(i⁴⁸, h³³), t⁴¹))) else 
//│ 														let t⁴² = map_₀_₀((fun x¹⁸ -> (x¹⁸ % 65536)), _lh_uniform_LH_C_1⁸)
//│ 														in let h³⁴ = t⁴⁰
//│ 														in (fun f⁷¹ -> (fun i⁴⁹ -> foldl_₀_₃(f⁷¹, f⁷¹(i⁴⁹, h³⁴), t⁴²)))
//│ 												| _  => error⁰}}
//│ 										| _  => case _lh_uniform_arg2² of {
//│ 											LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => 
//│ 												let t⁴³ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 												in if (t⁴³ == _lh_uniform_LH_C_0⁵) then 
//│ 													let t⁴⁴ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ 													in let h³⁵ = t⁴³
//│ 													in (fun f⁷² -> (fun i⁵⁰ -> foldl_₀_₄(f⁷², f⁷²(i⁵⁰, h³⁵), t⁴⁴))) else 
//│ 													let t⁴⁵ = map_₀_₁((fun x¹⁹ -> (x¹⁹ % 65536)), _lh_uniform_LH_C_1⁹)
//│ 													in let h³⁶ = t⁴³
//│ 													in (fun f⁷³ -> (fun i⁵¹ -> foldl_₀_₅(f⁷³, f⁷³(i⁵¹, h³⁶), t⁴⁵)))
//│ 											| _  => error⁰}}
//│ 									| _  => error⁰}
//│ 								where
//│ 								def foldl_₀_₁(f⁷⁴, i⁵², ls³⁵) = 
//│ 									ls³⁵(f⁷⁴, i⁵²)
//│ 								def foldl_₀_₂(f⁶⁵, i⁴³, ls³⁴) = 
//│ 									ls³⁴(f⁶⁵, i⁴³)
//│ 								def foldl_₀_₃(f⁷⁸, i⁵³, ls³⁶) = 
//│ 									ls³⁶(f⁷⁸, i⁵³)
//│ 								def foldl_₀_₄(f⁹⁰, i⁶⁰, ls⁴³) = 
//│ 									ls⁴³(f⁹⁰, i⁶⁰)
//│ 								def foldl_₀_₅(f⁵⁶, i³⁶, ls²⁵) = 
//│ 									ls²⁵(f⁵⁶, i³⁶)
//│ 								def foldl_₀_₆(f⁸⁹, i⁵⁹, ls⁴²) = 
//│ 									ls⁴²(f⁸⁹, i⁵⁹)
//│ 								def foldl_₀_₇(f⁵⁷, i³⁷, ls²⁶) = 
//│ 									ls²⁶(f⁵⁷, i³⁷)
//│ 								def map_₀_₀(f⁸³, ls⁴⁰) = 
//│ 									case ls⁴⁰ of {
//│ 										LH_C h¹⁹ t²² => 
//│ 											let t⁴⁶ = map_₀_₀(f⁸³, t²²)
//│ 											in let h³⁷ = f⁸³(h¹⁹)
//│ 											in (fun f⁸⁴ -> (fun i⁵⁵ -> foldl_₀_₈(f⁸⁴, f⁸⁴(i⁵⁵, h³⁷), t⁴⁶)))
//│ 										| LH_N  => (fun f⁸⁵ -> (fun i⁵⁶ -> i⁵⁶))}
//│ 									where
//│ 									def foldl_₀_₈(f⁶³, i⁴¹, ls³⁰) = 
//│ 										ls³⁰(f⁶³, i⁴¹)
//│ 								def map_₀_₁(f⁵⁸, ls²⁷) = 
//│ 									case ls²⁷ of {
//│ 										LH_C h¹² t¹⁵ => 
//│ 											let t³⁴ = map_₀_₁(f⁵⁸, t¹⁵)
//│ 											in let h²⁸ = f⁵⁸(h¹²)
//│ 											in (fun f⁵⁹ -> (fun i³⁸ -> foldl_₀_₉(f⁵⁹, f⁵⁹(i³⁸, h²⁸), t³⁴)))
//│ 										| LH_N  => (fun f⁶⁰ -> (fun i³⁹ -> i³⁹))}
//│ 									where
//│ 									def foldl_₀_₉(f⁶⁴, i⁴², ls³¹) = 
//│ 										ls³¹(f⁶⁴, i⁴²)
//│ 								def map_₀_₂(f⁸⁶, ls⁴¹) = 
//│ 									case ls⁴¹ of {
//│ 										LH_C h¹⁵ t¹⁸ => 
//│ 											let t⁴⁷ = map_₀_₂(f⁸⁶, t¹⁸)
//│ 											in let h³⁸ = f⁸⁶(h¹⁵)
//│ 											in (fun f⁸⁷ -> (fun i⁵⁷ -> foldl_₀_₁₀(f⁸⁷, f⁸⁷(i⁵⁷, h³⁸), t⁴⁷)))
//│ 										| LH_N  => (fun f⁸⁸ -> (fun i⁵⁸ -> i⁵⁸))}
//│ 									where
//│ 									def foldl_₀_₁₀(f⁶², i⁴⁰, ls²⁸) = 
//│ 										ls²⁸(f⁶², i⁴⁰)
//│ 	def process_₀_₀(_lh_process_arg1²) = 
//│ 		doInput_₀_₁(randomInts_₀_₀(111, 47), _lh_process_arg1²)
//│ 		where
//│ 		def doInput_₀_₁(_lh_doInput_arg1⁹, _lh_doInput_arg2⁴) = 
//│ 			_lh_doInput_arg2⁴(_lh_doInput_arg1⁹)
//│ 		def randomInts_₀_₀(_lh_randomInts_arg1², _lh_randomInts_arg2²) = 
//│ 			if ((1 <= _lh_randomInts_arg1²) && (_lh_randomInts_arg1² <= 2147483562)) then if ((1 <= _lh_randomInts_arg2²) && (_lh_randomInts_arg2² <= 2147483398)) then rands_₀_₀(_lh_randomInts_arg1², _lh_randomInts_arg2²) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 			where
//│ 			def rands_₀_₀(_lh_rands_arg1², _lh_rands_arg2²) = 
//│ 				let k⁷ = div⁰(_lh_rands_arg1², 53668)
//│ 				in let s1'² = ((40014 * (_lh_rands_arg1² - (k⁷ * 53668))) - (k⁷ * 12211))
//│ 				in let s1''² = if (s1'² < 0) then (s1'² + 2147483563) else s1'²
//│ 				in let k'² = div⁰(_lh_rands_arg2², 52774)
//│ 				in let s2'² = ((40692 * (_lh_rands_arg2² - (k'² * 52774))) - (k'² * 3791))
//│ 				in let s2''² = if (s2'² < 0) then (s2'² + 2147483399) else s2'²
//│ 				in let z² = (s1''² - s2''²)
//│ 				in if (z² < 1) then lazy⁰([LH_C (z² + 2147483562) rands_₀_₀(s1''², s2''²)]) else lazy⁰([LH_C z² rands_₀_₀(s1''², s2''²)])
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
