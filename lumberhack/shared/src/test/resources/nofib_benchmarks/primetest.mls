:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
drop_lz n ls = case (force ls) of
                  [] -> lazy []
                  (h:t) -> if n > 0 then (drop_lz (n - 1) t) else t
even k = (k `mod` 2) == 0
splitAt_lz n ls = (take_lz n ls, drop_lz n ls)
int_val_of_char x = (int_of_char x) - 48
int_val_of_string s = f s 0
  where
    f [] a = a
    f (h:t) a = f t ((10*a) + (int_val_of_char h))
break p [] = ([], [])
break p (x:xs) = if p x then ([], (x:xs)) else case (break p xs) of { (ys, zs) -> ((x:ys), zs) }
lines s = case break (\x -> polyEq x '|') s of
                  (l, s') -> (l:(case s' of { [] -> []; _:s'' -> lines s'' }))
divmod a b = ((a `div` b), (a `mod` b))
process :: [String] -> [String]
process x = doInput (randomInts 111 47) x
doInput :: State -> [String] -> [String]
doInput state []     = []
doInput state (l:ls) = doLine l (\state -> doInput state ls) state
doLine :: String -> (State -> [String]) -> State -> [String]
doLine cs cont rs =
  let n = (int_val_of_string cs) in
  case (multiTest 100 rs n) of
    (t,rs') -> (if t then ("Probably prime": (cont rs')) else ("Composite": (cont rs')))
type State = [Int]
---------------------
makeNumber :: Integer -> [Integer] -> Integer
makeNumber b = foldl (\a -> \x -> (a * b) + x) 0
chop :: Integer -> Integer -> [Integer]
chop b =
  let chop' = (\a -> \n -> (case (n `divmod` b) of { (q,r) -> if n == 0 then a else chop' (r:a) q }))
  in
  chop' []
powerMod :: Integer -> Integer -> Integer -> Integer
powerMod a 0 m = 1
powerMod a b m =
  let a' = (mod a m) in
  let f = \a -> \b -> \c ->
          let g = (\a -> \b -> if even b then g ((a*a) `mod` m) (b `div` 2) else f a (b-1) ((a*c) `mod` m)) in
          if b == 0 then c else g a b
  in
  f a' (b-1) a'
-- log2 :: Integer -> Integer
log2 x = (length . chop 2) x
--------------------------
randomInts :: Int -> Int -> [Int]
randomInts s1 s2 = if (1 <= s1) && (s1 <= 2147483562) then
                   if (1 <= s2) && (s2 <= 2147483398) then rands s1 s2
                   else error "randomInts: Bad second seed."
                   else error "randomInts: Bad first seed."
rands :: Int -> Int -> [Int]
rands s1 s2 =
    let k    = (s1 `div` 53668) in
    let s1'  = ((40014 * (s1 - (k * 53668))) - (k * 12211)) in
    let s1'' = (if s1' < 0 then s1' + 2147483563 else s1') in
    let k'   = (s2 `div` 52774) in
    let s2'  = ((40692 * (s2 - (k' * 52774))) - (k' * 3791)) in
    let s2'' = (if s2' < 0 then s2' + 2147483399 else s2') in
    let z    = (s1'' - s2'') in
    if z < 1 then lazy ((z + 2147483562) : (rands s1'' s2'')) else lazy (z : (rands s1'' s2''))
--------------------------
multiTest :: Int -> [Int] -> Integer -> (Bool, [Int])
multiTest k rs n =
  let mTest = \k -> \rs ->
                  if k == 0 then
                    (True, rs)
                  else
                    case (singleTest n (findKQ n) rs) of { (t, rs') ->
                    if t then mTest (k-1) rs' else (False, rs') }
  in
  if ((n <= 1) || (even n)) then (n==2, rs) else mTest k rs
findKQ :: Integer -> (Integer, Integer)
findKQ n = f (0, (n-1))
  where
    f (k,q) = case (q `divmod` 2) of { (d,r) -> if r == 0 then f (k+1, d) else (k, q) }
singleTest :: Integer -> (Integer, Integer) -> [Int] -> (Bool, [Int])
singleTest n kq rs
  = case (random (n-2) rs) of { (x, rs') -> (singleTestX n kq (2+x), rs') }
singleTestX n (k, q) x =
  let square = (\x -> (x*x) `mod` n) in
  let witness = \ls -> case ls of {
    [] -> False;
    (t:ts) -> if t == (n-1) then True else (if t == 1 then False else witness ts)
  }
  in
  case (take_lz (k) (iterate square (powerMod x q n))) of {
    (t:ts) -> (t == 1) || (t == (n-1)) || witness ts
  }
random :: Integer -> [Int] -> (Integer, [Int])
random n rs =
  let ns        = (chop 65536 n) in
  case (splitAt_lz (length ns) rs) of { (rs1,rs2) -> (makeNumber 65536 (uniform ns rs1), rs2) }
uniform :: [Integer] -> [Int] -> [Integer]
uniform [n]    [r]    = [(r) `mod` n]
uniform (n:ns) (r:rs) =
  let t = ((r) `mod` (n+1)) in
  if t == n then t: (uniform ns rs)
            else t: (map (\x -> ((x) `mod` 65536)) rs)
---------------------
testPrimetest_nofib dummy = 
  let cts = primId "24|48|47|1317|8901" in
  process (lines cts)
testPrimetest_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testPrimetest_nofib_₀^2928(primId⁰(0))
//│ def break_₀(_lh_break_arg1¹, _lh_break_arg2¹) = case _lh_break_arg2¹ of {
//│ 	LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 	| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]] else 
//│ 		let _lh_matchIdent¹⁶ = break_₀^2331(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ 		in case _lh_matchIdent¹⁶ of {
//│ 			LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def chop_₀(_lh_chop_arg1¹) = 
//│ 	let chop'¹ = (fun a⁹ -> (fun n⁹ -> 
//│ 		let _lh_matchIdent²⁰ = divmod_₁^2446(n⁹, _lh_chop_arg1¹)
//│ 		in case _lh_matchIdent²⁰ of {
//│ 			LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁹ == 0) then a⁹ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁹], _lh_chop_LH_P2_0¹)
//│ 			| _  => error⁰}))
//│ 	in chop'¹([LH_N])
//│ def divmod_₀(_lh_divmod_arg1², _lh_divmod_arg2²) = [LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]
//│ def divmod_₁(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ def doInput_₀(_lh_doInput_arg1¹, _lh_doInput_arg2¹) = case _lh_doInput_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀^2378(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀^2381(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹)
//│ 	| _  => error⁰}
//│ def doLine_₀(_lh_doLine_arg1¹, _lh_doLine_arg2¹, _lh_doLine_arg3¹) = 
//│ 	let n⁸ = int_val_of_string_₀^2233(_lh_doLine_arg1¹)
//│ 	in let _lh_matchIdent¹⁵ = multiTest_₀^2236(100, _lh_doLine_arg3¹, n⁸)
//│ 	in case _lh_matchIdent¹⁵ of {
//│ 		LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)]
//│ 		| _  => error⁰}
//│ def drop_lz_₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = 
//│ 	let _lh_matchIdent²¹ = force⁰(_lh_drop_lz_arg2¹)
//│ 	in case _lh_matchIdent²¹ of {
//│ 		LH_N  => lazy⁰([LH_N])
//│ 		| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀^2498((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹
//│ 		| _  => error⁰}
//│ def even_₀(_lh_even_arg1¹) = ((_lh_even_arg1¹ % 2) == 0)
//│ def even_₁(_lh_even_arg1²) = ((_lh_even_arg1² % 2) == 0)
//│ def findKQ_₀(_lh_findKQ_arg1¹) = 
//│ 	let f¹⁵ = (fun _lh_f_arg1² -> case _lh_f_arg1² of {
//│ 		LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => 
//│ 			let _lh_matchIdent¹⁹ = divmod_₀^2395(_lh_f_LH_P2_1², 2)
//│ 			in case _lh_matchIdent¹⁹ of {
//│ 				LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹⁵([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²]
//│ 				| _  => error⁰}
//│ 		| _  => error⁰})
//│ 	in f¹⁵([LH_P2 0 (_lh_findKQ_arg1¹ - 1)])
//│ def foldl_₀(f²⁰, i³, ls²⁵) = case ls²⁵ of {
//│ 	LH_C h²⁴ t²⁹ => foldl_₀^2764(f²⁰, f²⁰(i³, h²⁴), t²⁹)
//│ 	| LH_N  => i³}
//│ def int_val_of_char_₀(_lh_int_val_of_char_arg1¹) = (int_of_char⁰(_lh_int_val_of_char_arg1¹) - 48)
//│ def int_val_of_string_₀(_lh_int_val_of_string_arg1¹) = 
//│ 	let f¹⁸ = (fun _lh_f_arg1³ -> (fun _lh_f_arg2¹ -> case _lh_f_arg1³ of {
//│ 		LH_N  => _lh_f_arg2¹
//│ 		| LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f¹⁸(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀^2621(_lh_f_LH_C_0¹)))
//│ 		| _  => error⁰}))
//│ 	in f¹⁸(_lh_int_val_of_string_arg1¹, 0)
//│ def iterate_₀(f¹⁶, x⁹) = lazy⁰([LH_C x⁹ iterate_₀^2516(f¹⁶, f¹⁶(x⁹))])
//│ def length_₀(ls²²) = case ls²² of {
//│ 	LH_C h²² t²⁷ => (1 + length_₀^2641(t²⁷))
//│ 	| LH_N  => 0}
//│ def lines_₀(_lh_lines_arg1¹) = 
//│ 	let _lh_matchIdent¹⁷ = break_₀^2350((fun x⁸ -> polyEq⁰(x⁸, '|')), _lh_lines_arg1¹)
//│ 	in case _lh_matchIdent¹⁷ of {
//│ 		LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ 
//│ 			let _lh_matchIdent¹⁸ = _lh_lines_LH_P2_1¹
//│ 			in case _lh_matchIdent¹⁸ of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀^2365(_lh_lines_LH_C_1¹)
//│ 				| _  => error⁰}]
//│ 		| _  => error⁰}
//│ def makeNumber_₀(_lh_makeNumber_arg1¹) = foldl_₀^2912((fun a¹² -> (fun x¹⁴ -> ((a¹² * _lh_makeNumber_arg1¹) + x¹⁴))), 0)
//│ def map_₀(f¹⁹, ls²⁴) = case ls²⁴ of {
//│ 	LH_C h²³ t²⁸ => [LH_C f¹⁹(h²³) map_₀^2753(f¹⁹, t²⁸)]
//│ 	| LH_N  => [LH_N]}
//│ def multiTest_₀(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹, _lh_multiTest_arg3¹) = 
//│ 	let mTest¹ = (fun k³ -> (fun rs¹ -> if (k³ == 0) then [LH_P2 [True] rs¹] else 
//│ 		let _lh_matchIdent¹⁴ = singleTest_₀^2175(_lh_multiTest_arg3¹, findKQ_₀^2178(_lh_multiTest_arg3¹), rs¹)
//│ 		in case _lh_matchIdent¹⁴ of {
//│ 			LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k³ - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹]
//│ 			| _  => error⁰}))
//│ 	in if ((_lh_multiTest_arg3¹ <= 1) || even_₀^2212(_lh_multiTest_arg3¹)) then [LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹] else mTest¹(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹)
//│ def powerMod_₀(_lh_powerMod_arg1¹, _lh_powerMod_arg2¹, _lh_powerMod_arg3¹) = case _lh_powerMod_arg2¹ of {
//│ 	0  => 1
//│ 	| _  => 
//│ 		let a'¹ = (_lh_powerMod_arg1¹ mod _lh_powerMod_arg3¹)
//│ 		in let f¹⁷ = (fun a¹⁰ -> (fun b⁴ -> (fun c¹ -> 
//│ 			let g¹ = (fun a¹¹ -> (fun b⁵ -> if even_₁^2534(b⁵) then g¹(((a¹¹ * a¹¹) % _lh_powerMod_arg3¹), div⁰(b⁵, 2)) else f¹⁷(a¹¹, (b⁵ - 1), ((a¹¹ * c¹) % _lh_powerMod_arg3¹))))
//│ 			in if (b⁴ == 0) then c¹ else g¹(a¹⁰, b⁴))))
//│ 		in f¹⁷(a'¹, (_lh_powerMod_arg2¹ - 1), a'¹)}
//│ def process_₀(_lh_process_arg1¹) = doInput_₀^2309(randomInts_₀^2310(111, 47), _lh_process_arg1¹)
//│ def randomInts_₀(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) = if ((1 <= _lh_randomInts_arg1¹) && (_lh_randomInts_arg1¹ <= 2147483562)) then if ((1 <= _lh_randomInts_arg2¹) && (_lh_randomInts_arg2¹ <= 2147483398)) then rands_₀^2042(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ def random_₀(_lh_random_arg1¹, _lh_random_arg2¹) = 
//│ 	let ns¹ = chop_₀^1986(65536, _lh_random_arg1¹)
//│ 	in let _lh_matchIdent¹³ = splitAt_lz_₀^1991(length_₀^1992(ns¹), _lh_random_arg2¹)
//│ 	in case _lh_matchIdent¹³ of {
//│ 		LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀^1999(65536, uniform_₀^2002(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]
//│ 		| _  => error⁰}
//│ def rands_₀(_lh_rands_arg1¹, _lh_rands_arg2¹) = 
//│ 	let k² = div⁰(_lh_rands_arg1¹, 53668)
//│ 	in let s1'¹ = ((40014 * (_lh_rands_arg1¹ - (k² * 53668))) - (k² * 12211))
//│ 	in let s1''¹ = if (s1'¹ < 0) then (s1'¹ + 2147483563) else s1'¹
//│ 	in let k'¹ = div⁰(_lh_rands_arg2¹, 52774)
//│ 	in let s2'¹ = ((40692 * (_lh_rands_arg2¹ - (k'¹ * 52774))) - (k'¹ * 3791))
//│ 	in let s2''¹ = if (s2'¹ < 0) then (s2'¹ + 2147483399) else s2'¹
//│ 	in let z¹ = (s1''¹ - s2''¹)
//│ 	in if (z¹ < 1) then lazy⁰([LH_C (z¹ + 2147483562) rands_₀^1847(s1''¹, s2''¹)]) else lazy⁰([LH_C z¹ rands_₀^1856(s1''¹, s2''¹)])
//│ def singleTestX_₀(_lh_singleTestX_arg1¹, _lh_singleTestX_arg2¹, _lh_singleTestX_arg3¹) = case _lh_singleTestX_arg2¹ of {
//│ 	LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => 
//│ 		let square¹ = (fun x¹⁰ -> ((x¹⁰ * x¹⁰) % _lh_singleTestX_arg1¹))
//│ 		in let witness¹ = (fun ls²³ -> 
//│ 			let _lh_matchIdent²² = ls²³
//│ 			in case _lh_matchIdent²² of {
//│ 				LH_N  => [False]
//│ 				| LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²)
//│ 				| _  => error⁰})
//│ 		in let _lh_matchIdent²³ = take_lz_₁^2687(_lh_singleTestX_LH_P2_0¹, iterate_₀^2690(square¹, powerMod_₀^2693(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ 		in case _lh_matchIdent²³ of {
//│ 			LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def singleTest_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, _lh_singleTest_arg3¹) = 
//│ 	let _lh_matchIdent¹² = random_₀^1873((_lh_singleTest_arg1¹ - 2), _lh_singleTest_arg3¹)
//│ 	in case _lh_matchIdent¹² of {
//│ 		LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀^1883(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]
//│ 		| _  => error⁰}
//│ def splitAt_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = [LH_P2 take_lz_₀^2736(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀^2741(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ def take_lz_₀(n⁷, ls²¹) = if (n⁷ > 0) then case force⁰(ls²¹) of {
//│ 	LH_C h²¹ t²⁶ => [LH_C h²¹ take_lz_₀^1970((n⁷ - 1), t²⁶)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz_₁(n⁶, ls²⁰) = if (n⁶ > 0) then case force⁰(ls²⁰) of {
//│ 	LH_C h²⁰ t²⁵ => [LH_C h²⁰ take_lz_₁^1731((n⁶ - 1), t²⁵)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testPrimetest_nofib_₀(_lh_testPrimetest_nofib_arg1¹) = 
//│ 	let cts¹ = primId⁰([LH_C '2' [LH_C '4' [LH_C '|' [LH_C '4' [LH_C '8' [LH_C '|' [LH_C '4' [LH_C '7' [LH_C '|' [LH_C '1' [LH_C '3' [LH_C '1' [LH_C '7' [LH_C '|' [LH_C '8' [LH_C '9' [LH_C '0' [LH_C '1' [LH_N]]]]]]]]]]]]]]]]]]])
//│ 	in process_₀^1954(lines_₀^1955(cts¹))
//│ def uniform_₀(_lh_uniform_arg1¹, _lh_uniform_arg2¹) = case _lh_uniform_arg1¹ of {
//│ 	LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {
//│ 		LH_N  => case _lh_uniform_arg2¹ of {
//│ 			LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {
//│ 				LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]
//│ 				| _  => case _lh_uniform_arg2¹ of {
//│ 					LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => 
//│ 						let t³⁰ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 						in if (t³⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t³⁰ uniform_₀^2807(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t³⁰ map_₀^2814((fun x¹¹ -> (x¹¹ % 65536)), _lh_uniform_LH_C_1⁷)]
//│ 					| _  => error⁰}}
//│ 			| _  => case _lh_uniform_arg2¹ of {
//│ 				LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => 
//│ 					let t³¹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 					in if (t³¹ == _lh_uniform_LH_C_0⁵) then [LH_C t³¹ uniform_₀^2846(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t³¹ map_₀^2853((fun x¹² -> (x¹² % 65536)), _lh_uniform_LH_C_1⁸)]
//│ 				| _  => error⁰}}
//│ 		| _  => case _lh_uniform_arg2¹ of {
//│ 			LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => 
//│ 				let t³² = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 				in if (t³² == _lh_uniform_LH_C_0⁵) then [LH_C t³² uniform_₀^2885(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t³² map_₀^2892((fun x¹³ -> (x¹³ % 65536)), _lh_uniform_LH_C_1⁹)]
//│ 			| _  => error⁰}}
//│ 	| _  => error⁰}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec break__d0 _lh_break_arg1_1 _lh_break_arg2_1 =
//│ 		  (match _lh_break_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_P2((`LH_N), (`LH_N)))
//│ 		    | `LH_C(_lh_break_LH_C_0_1, _lh_break_LH_C_1_1) -> 
//│ 		      (if (_lh_break_arg1_1 _lh_break_LH_C_0_1) then
//│ 		        (`LH_P2((`LH_N), (`LH_C(_lh_break_LH_C_0_1, _lh_break_LH_C_1_1))))
//│ 		      else
//│ 		        (let rec _lh_matchIdent_1_6 = ((break__d0 _lh_break_arg1_1) _lh_break_LH_C_1_1) in
//│ 		          (match _lh_matchIdent_1_6 with
//│ 		            | `LH_P2(_lh_break_LH_P2_0_1, _lh_break_LH_P2_1_1) -> 
//│ 		              (`LH_P2((`LH_C(_lh_break_LH_C_0_1, _lh_break_LH_P2_0_1)), _lh_break_LH_P2_1_1))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and chop__d0 _lh_chop_arg1_1 =
//│ 		  (let rec chop'_1 = (fun a_9 n_9 -> 
//│ 		    (let rec _lh_matchIdent_2_0 = ((divmod__d1 n_9) _lh_chop_arg1_1) in
//│ 		      (match _lh_matchIdent_2_0 with
//│ 		        | `LH_P2(_lh_chop_LH_P2_0_1, _lh_chop_LH_P2_1_1) -> 
//│ 		          (if (n_9 = 0) then
//│ 		            a_9
//│ 		          else
//│ 		            ((chop'_1 (`LH_C(_lh_chop_LH_P2_1_1, a_9))) _lh_chop_LH_P2_0_1))
//│ 		        | _ -> 
//│ 		          (failwith "error")))) in
//│ 		    (chop'_1 (`LH_N)))
//│ 		and divmod__d0 _lh_divmod_arg1_2 _lh_divmod_arg2_2 =
//│ 		  (`LH_P2((_lh_divmod_arg1_2 / _lh_divmod_arg2_2), (_lh_divmod_arg1_2 mod _lh_divmod_arg2_2)))
//│ 		and divmod__d1 _lh_divmod_arg1_1 _lh_divmod_arg2_1 =
//│ 		  (`LH_P2((_lh_divmod_arg1_1 / _lh_divmod_arg2_1), (_lh_divmod_arg1_1 mod _lh_divmod_arg2_1)))
//│ 		and doInput__d0 _lh_doInput_arg1_1 _lh_doInput_arg2_1 =
//│ 		  (match _lh_doInput_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_doInput_LH_C_0_1, _lh_doInput_LH_C_1_1) -> 
//│ 		      (((doLine__d0 _lh_doInput_LH_C_0_1) (fun state_1 -> 
//│ 		        ((doInput__d0 state_1) _lh_doInput_LH_C_1_1))) _lh_doInput_arg1_1)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and doLine__d0 _lh_doLine_arg1_1 _lh_doLine_arg2_1 _lh_doLine_arg3_1 =
//│ 		  (let rec n_8 = (int_val_of_string__d0 _lh_doLine_arg1_1) in
//│ 		    (let rec _lh_matchIdent_1_5 = (((multiTest__d0 100) _lh_doLine_arg3_1) n_8) in
//│ 		      (match _lh_matchIdent_1_5 with
//│ 		        | `LH_P2(_lh_doLine_LH_P2_0_1, _lh_doLine_LH_P2_1_1) -> 
//│ 		          (if _lh_doLine_LH_P2_0_1 then
//│ 		            (`LH_C((`LH_C('P', (`LH_C('r', (`LH_C('o', (`LH_C('b', (`LH_C('a', (`LH_C('b', (`LH_C('l', (`LH_C('y', (`LH_C(' ', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('m', (`LH_C('e', (`LH_N))))))))))))))))))))))))))))), (_lh_doLine_arg2_1 _lh_doLine_LH_P2_1_1)))
//│ 		          else
//│ 		            (`LH_C((`LH_C('C', (`LH_C('o', (`LH_C('m', (`LH_C('p', (`LH_C('o', (`LH_C('s', (`LH_C('i', (`LH_C('t', (`LH_C('e', (`LH_N))))))))))))))))))), (_lh_doLine_arg2_1 _lh_doLine_LH_P2_1_1))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		and drop_lz__d0 _lh_drop_lz_arg1_1 _lh_drop_lz_arg2_1 =
//│ 		  (let rec _lh_matchIdent_2_1 = (Lazy.force _lh_drop_lz_arg2_1) in
//│ 		    (match _lh_matchIdent_2_1 with
//│ 		      | `LH_N -> 
//│ 		        (lazy (`LH_N))
//│ 		      | `LH_C(_lh_drop_lz_LH_C_0_1, _lh_drop_lz_LH_C_1_1) -> 
//│ 		        (if (_lh_drop_lz_arg1_1 > 0) then
//│ 		          ((drop_lz__d0 (_lh_drop_lz_arg1_1 - 1)) _lh_drop_lz_LH_C_1_1)
//│ 		        else
//│ 		          _lh_drop_lz_LH_C_1_1)
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and even__d0 _lh_even_arg1_1 =
//│ 		  ((_lh_even_arg1_1 mod 2) = 0)
//│ 		and even__d1 _lh_even_arg1_2 =
//│ 		  ((_lh_even_arg1_2 mod 2) = 0)
//│ 		and findKQ__d0 _lh_findKQ_arg1_1 =
//│ 		  (let rec f_1_5 = (fun _lh_f_arg1_2 -> 
//│ 		    (match _lh_f_arg1_2 with
//│ 		      | `LH_P2(_lh_f_LH_P2_0_2, _lh_f_LH_P2_1_2) -> 
//│ 		        (let rec _lh_matchIdent_1_9 = ((divmod__d0 _lh_f_LH_P2_1_2) 2) in
//│ 		          (match _lh_matchIdent_1_9 with
//│ 		            | `LH_P2(_lh_f_LH_P2_0_3, _lh_f_LH_P2_1_3) -> 
//│ 		              (if (_lh_f_LH_P2_1_3 = 0) then
//│ 		                (f_1_5 (`LH_P2((_lh_f_LH_P2_0_2 + 1), _lh_f_LH_P2_0_3)))
//│ 		              else
//│ 		                (`LH_P2(_lh_f_LH_P2_0_2, _lh_f_LH_P2_1_2)))
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error"))) in
//│ 		    (f_1_5 (`LH_P2(0, (_lh_findKQ_arg1_1 - 1)))))
//│ 		and foldl__d0 f_2_0 i_3 ls_2_5 =
//│ 		  (match ls_2_5 with
//│ 		    | `LH_C(h_2_4, t_2_9) -> 
//│ 		      (((foldl__d0 f_2_0) ((f_2_0 i_3) h_2_4)) t_2_9)
//│ 		    | `LH_N -> 
//│ 		      i_3)
//│ 		and int_val_of_char__d0 _lh_int_val_of_char_arg1_1 =
//│ 		  ((int_of_char _lh_int_val_of_char_arg1_1) - 48)
//│ 		and int_val_of_string__d0 _lh_int_val_of_string_arg1_1 =
//│ 		  (let rec f_1_8 = (fun _lh_f_arg1_3 _lh_f_arg2_1 -> 
//│ 		    (match _lh_f_arg1_3 with
//│ 		      | `LH_N -> 
//│ 		        _lh_f_arg2_1
//│ 		      | `LH_C(_lh_f_LH_C_0_1, _lh_f_LH_C_1_1) -> 
//│ 		        ((f_1_8 _lh_f_LH_C_1_1) ((10 * _lh_f_arg2_1) + (int_val_of_char__d0 _lh_f_LH_C_0_1)))
//│ 		      | _ -> 
//│ 		        (failwith "error"))) in
//│ 		    ((f_1_8 _lh_int_val_of_string_arg1_1) 0))
//│ 		and iterate__d0 f_1_6 x_9 =
//│ 		  (lazy (`LH_C(x_9, ((iterate__d0 f_1_6) (f_1_6 x_9)))))
//│ 		and length__d0 ls_2_2 =
//│ 		  (match ls_2_2 with
//│ 		    | `LH_C(h_2_2, t_2_7) -> 
//│ 		      (1 + (length__d0 t_2_7))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and lines__d0 _lh_lines_arg1_1 =
//│ 		  (let rec _lh_matchIdent_1_7 = ((break__d0 (fun x_8 -> 
//│ 		    (x_8 = '|'))) _lh_lines_arg1_1) in
//│ 		    (match _lh_matchIdent_1_7 with
//│ 		      | `LH_P2(_lh_lines_LH_P2_0_1, _lh_lines_LH_P2_1_1) -> 
//│ 		        (`LH_C(_lh_lines_LH_P2_0_1, (let rec _lh_matchIdent_1_8 = _lh_lines_LH_P2_1_1 in
//│ 		          (match _lh_matchIdent_1_8 with
//│ 		            | `LH_N -> 
//│ 		              (`LH_N)
//│ 		            | `LH_C(_lh_lines_LH_C_0_1, _lh_lines_LH_C_1_1) -> 
//│ 		              (lines__d0 _lh_lines_LH_C_1_1)
//│ 		            | _ -> 
//│ 		              (failwith "error")))))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and makeNumber__d0 _lh_makeNumber_arg1_1 =
//│ 		  ((foldl__d0 (fun a_1_2 x_1_4 -> 
//│ 		    ((a_1_2 * _lh_makeNumber_arg1_1) + x_1_4))) 0)
//│ 		and map__d0 f_1_9 ls_2_4 =
//│ 		  (match ls_2_4 with
//│ 		    | `LH_C(h_2_3, t_2_8) -> 
//│ 		      (`LH_C((f_1_9 h_2_3), ((map__d0 f_1_9) t_2_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and multiTest__d0 _lh_multiTest_arg1_1 _lh_multiTest_arg2_1 _lh_multiTest_arg3_1 =
//│ 		  (let rec mTest_1 = (fun k_3 rs_1 -> 
//│ 		    (if (k_3 = 0) then
//│ 		      (`LH_P2(true, rs_1))
//│ 		    else
//│ 		      (let rec _lh_matchIdent_1_4 = (((singleTest__d0 _lh_multiTest_arg3_1) (findKQ__d0 _lh_multiTest_arg3_1)) rs_1) in
//│ 		        (match _lh_matchIdent_1_4 with
//│ 		          | `LH_P2(_lh_multiTest_LH_P2_0_1, _lh_multiTest_LH_P2_1_1) -> 
//│ 		            (if _lh_multiTest_LH_P2_0_1 then
//│ 		              ((mTest_1 (k_3 - 1)) _lh_multiTest_LH_P2_1_1)
//│ 		            else
//│ 		              (`LH_P2(false, _lh_multiTest_LH_P2_1_1)))
//│ 		          | _ -> 
//│ 		            (failwith "error"))))) in
//│ 		    (if ((_lh_multiTest_arg3_1 <= 1) || (even__d0 _lh_multiTest_arg3_1)) then
//│ 		      (`LH_P2((_lh_multiTest_arg3_1 = 2), _lh_multiTest_arg2_1))
//│ 		    else
//│ 		      ((mTest_1 _lh_multiTest_arg1_1) _lh_multiTest_arg2_1)))
//│ 		and powerMod__d0 _lh_powerMod_arg1_1 _lh_powerMod_arg2_1 _lh_powerMod_arg3_1 =
//│ 		  (match _lh_powerMod_arg2_1 with
//│ 		    | 0 -> 
//│ 		      1
//│ 		    | _ -> 
//│ 		      (let rec a'_1 = (_lh_powerMod_arg1_1 mod _lh_powerMod_arg3_1) in
//│ 		        (let rec f_1_7 = (fun a_1_0 b_4 c_1 -> 
//│ 		          (let rec g_1 = (fun a_1_1 b_5 -> 
//│ 		            (if (even__d1 b_5) then
//│ 		              ((g_1 ((a_1_1 * a_1_1) mod _lh_powerMod_arg3_1)) (b_5 / 2))
//│ 		            else
//│ 		              (((f_1_7 a_1_1) (b_5 - 1)) ((a_1_1 * c_1) mod _lh_powerMod_arg3_1)))) in
//│ 		            (if (b_4 = 0) then
//│ 		              c_1
//│ 		            else
//│ 		              ((g_1 a_1_0) b_4)))) in
//│ 		          (((f_1_7 a'_1) (_lh_powerMod_arg2_1 - 1)) a'_1))))
//│ 		and process__d0 _lh_process_arg1_1 =
//│ 		  ((doInput__d0 ((randomInts__d0 111) 47)) _lh_process_arg1_1)
//│ 		and randomInts__d0 _lh_randomInts_arg1_1 _lh_randomInts_arg2_1 =
//│ 		  (if ((1 <= _lh_randomInts_arg1_1) && (_lh_randomInts_arg1_1 <= 2147483562)) then
//│ 		    (if ((1 <= _lh_randomInts_arg2_1) && (_lh_randomInts_arg2_1 <= 2147483398)) then
//│ 		      ((rands__d0 _lh_randomInts_arg1_1) _lh_randomInts_arg2_1)
//│ 		    else
//│ 		      ((failwith "error") (`LH_C('r', (`LH_C('a', (`LH_C('n', (`LH_C('d', (`LH_C('o', (`LH_C('m', (`LH_C('I', (`LH_C('n', (`LH_C('t', (`LH_C('s', (`LH_C(':', (`LH_C(' ', (`LH_C('B', (`LH_C('a', (`LH_C('d', (`LH_C(' ', (`LH_C('s', (`LH_C('e', (`LH_C('c', (`LH_C('o', (`LH_C('n', (`LH_C('d', (`LH_C(' ', (`LH_C('s', (`LH_C('e', (`LH_C('e', (`LH_C('d', (`LH_C('.', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		  else
//│ 		    ((failwith "error") (`LH_C('r', (`LH_C('a', (`LH_C('n', (`LH_C('d', (`LH_C('o', (`LH_C('m', (`LH_C('I', (`LH_C('n', (`LH_C('t', (`LH_C('s', (`LH_C(':', (`LH_C(' ', (`LH_C('B', (`LH_C('a', (`LH_C('d', (`LH_C(' ', (`LH_C('f', (`LH_C('i', (`LH_C('r', (`LH_C('s', (`LH_C('t', (`LH_C(' ', (`LH_C('s', (`LH_C('e', (`LH_C('e', (`LH_C('d', (`LH_C('.', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		and random__d0 _lh_random_arg1_1 _lh_random_arg2_1 =
//│ 		  (let rec ns_1 = ((chop__d0 65536) _lh_random_arg1_1) in
//│ 		    (let rec _lh_matchIdent_1_3 = ((splitAt_lz__d0 (length__d0 ns_1)) _lh_random_arg2_1) in
//│ 		      (match _lh_matchIdent_1_3 with
//│ 		        | `LH_P2(_lh_random_LH_P2_0_1, _lh_random_LH_P2_1_1) -> 
//│ 		          (`LH_P2(((makeNumber__d0 65536) ((uniform__d0 ns_1) _lh_random_LH_P2_0_1)), _lh_random_LH_P2_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		and rands__d0 _lh_rands_arg1_1 _lh_rands_arg2_1 =
//│ 		  (let rec k_2 = (_lh_rands_arg1_1 / 53668) in
//│ 		    (let rec s1'_1 = ((40014 * (_lh_rands_arg1_1 - (k_2 * 53668))) - (k_2 * 12211)) in
//│ 		      (let rec s1''_1 = (if (s1'_1 < 0) then
//│ 		        (s1'_1 + 2147483563)
//│ 		      else
//│ 		        s1'_1) in
//│ 		        (let rec k'_1 = (_lh_rands_arg2_1 / 52774) in
//│ 		          (let rec s2'_1 = ((40692 * (_lh_rands_arg2_1 - (k'_1 * 52774))) - (k'_1 * 3791)) in
//│ 		            (let rec s2''_1 = (if (s2'_1 < 0) then
//│ 		              (s2'_1 + 2147483399)
//│ 		            else
//│ 		              s2'_1) in
//│ 		              (let rec z_1 = (s1''_1 - s2''_1) in
//│ 		                (if (z_1 < 1) then
//│ 		                  (lazy (`LH_C((z_1 + 2147483562), ((rands__d0 s1''_1) s2''_1))))
//│ 		                else
//│ 		                  (lazy (`LH_C(z_1, ((rands__d0 s1''_1) s2''_1))))))))))))
//│ 		and singleTestX__d0 _lh_singleTestX_arg1_1 _lh_singleTestX_arg2_1 _lh_singleTestX_arg3_1 =
//│ 		  (match _lh_singleTestX_arg2_1 with
//│ 		    | `LH_P2(_lh_singleTestX_LH_P2_0_1, _lh_singleTestX_LH_P2_1_1) -> 
//│ 		      (let rec square_1 = (fun x_1_0 -> 
//│ 		        ((x_1_0 * x_1_0) mod _lh_singleTestX_arg1_1)) in
//│ 		        (let rec witness_1 = (fun ls_2_3 -> 
//│ 		          (let rec _lh_matchIdent_2_2 = ls_2_3 in
//│ 		            (match _lh_matchIdent_2_2 with
//│ 		              | `LH_N -> 
//│ 		                false
//│ 		              | `LH_C(_lh_singleTestX_LH_C_0_2, _lh_singleTestX_LH_C_1_2) -> 
//│ 		                (if (_lh_singleTestX_LH_C_0_2 = (_lh_singleTestX_arg1_1 - 1)) then
//│ 		                  true
//│ 		                else
//│ 		                  (if (_lh_singleTestX_LH_C_0_2 = 1) then
//│ 		                    false
//│ 		                  else
//│ 		                    (witness_1 _lh_singleTestX_LH_C_1_2)))
//│ 		              | _ -> 
//│ 		                (failwith "error")))) in
//│ 		          (let rec _lh_matchIdent_2_3 = ((take_lz__d1 _lh_singleTestX_LH_P2_0_1) ((iterate__d0 square_1) (((powerMod__d0 _lh_singleTestX_arg3_1) _lh_singleTestX_LH_P2_1_1) _lh_singleTestX_arg1_1))) in
//│ 		            (match _lh_matchIdent_2_3 with
//│ 		              | `LH_C(_lh_singleTestX_LH_C_0_3, _lh_singleTestX_LH_C_1_3) -> 
//│ 		                (((_lh_singleTestX_LH_C_0_3 = 1) || (_lh_singleTestX_LH_C_0_3 = (_lh_singleTestX_arg1_1 - 1))) || (witness_1 _lh_singleTestX_LH_C_1_3))
//│ 		              | _ -> 
//│ 		                (failwith "error")))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and singleTest__d0 _lh_singleTest_arg1_1 _lh_singleTest_arg2_1 _lh_singleTest_arg3_1 =
//│ 		  (let rec _lh_matchIdent_1_2 = ((random__d0 (_lh_singleTest_arg1_1 - 2)) _lh_singleTest_arg3_1) in
//│ 		    (match _lh_matchIdent_1_2 with
//│ 		      | `LH_P2(_lh_singleTest_LH_P2_0_1, _lh_singleTest_LH_P2_1_1) -> 
//│ 		        (`LH_P2((((singleTestX__d0 _lh_singleTest_arg1_1) _lh_singleTest_arg2_1) (2 + _lh_singleTest_LH_P2_0_1)), _lh_singleTest_LH_P2_1_1))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and splitAt_lz__d0 _lh_splitAt_lz_arg1_1 _lh_splitAt_lz_arg2_1 =
//│ 		  (`LH_P2(((take_lz__d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1), ((drop_lz__d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1)))
//│ 		and take_lz__d0 n_7 ls_2_1 =
//│ 		  (if (n_7 > 0) then
//│ 		    (match (Lazy.force ls_2_1) with
//│ 		      | `LH_C(h_2_1, t_2_6) -> 
//│ 		        (`LH_C(h_2_1, ((take_lz__d0 (n_7 - 1)) t_2_6)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take_lz__d1 n_6 ls_2_0 =
//│ 		  (if (n_6 > 0) then
//│ 		    (match (Lazy.force ls_2_0) with
//│ 		      | `LH_C(h_2_0, t_2_5) -> 
//│ 		        (`LH_C(h_2_0, ((take_lz__d1 (n_6 - 1)) t_2_5)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testPrimetest_nofib__d0 _lh_testPrimetest_nofib_arg1_1 =
//│ 		  (let rec cts_1 = (`LH_C('2', (`LH_C('4', (`LH_C('|', (`LH_C('4', (`LH_C('8', (`LH_C('|', (`LH_C('4', (`LH_C('7', (`LH_C('|', (`LH_C('1', (`LH_C('3', (`LH_C('1', (`LH_C('7', (`LH_C('|', (`LH_C('8', (`LH_C('9', (`LH_C('0', (`LH_C('1', (`LH_N))))))))))))))))))))))))))))))))))))) in
//│ 		    (process__d0 (lines__d0 cts_1)))
//│ 		and uniform__d0 _lh_uniform_arg1_1 _lh_uniform_arg2_1 =
//│ 		  (match _lh_uniform_arg1_1 with
//│ 		    | `LH_C(_lh_uniform_LH_C_0_5, _lh_uniform_LH_C_1_5) -> 
//│ 		      (match _lh_uniform_LH_C_1_5 with
//│ 		        | `LH_N -> 
//│ 		          (match _lh_uniform_arg2_1 with
//│ 		            | `LH_C(_lh_uniform_LH_C_0_6, _lh_uniform_LH_C_1_6) -> 
//│ 		              (match _lh_uniform_LH_C_1_6 with
//│ 		                | `LH_N -> 
//│ 		                  (`LH_C((_lh_uniform_LH_C_0_6 mod _lh_uniform_LH_C_0_5), (`LH_N)))
//│ 		                | _ -> 
//│ 		                  (match _lh_uniform_arg2_1 with
//│ 		                    | `LH_C(_lh_uniform_LH_C_0_7, _lh_uniform_LH_C_1_7) -> 
//│ 		                      (let rec t_3_0 = (_lh_uniform_LH_C_0_7 mod (_lh_uniform_LH_C_0_5 + 1)) in
//│ 		                        (if (t_3_0 = _lh_uniform_LH_C_0_5) then
//│ 		                          (`LH_C(t_3_0, ((uniform__d0 _lh_uniform_LH_C_1_5) _lh_uniform_LH_C_1_7)))
//│ 		                        else
//│ 		                          (`LH_C(t_3_0, ((map__d0 (fun x_1_1 -> 
//│ 		                            (x_1_1 mod 65536))) _lh_uniform_LH_C_1_7)))))
//│ 		                    | _ -> 
//│ 		                      (failwith "error")))
//│ 		            | _ -> 
//│ 		              (match _lh_uniform_arg2_1 with
//│ 		                | `LH_C(_lh_uniform_LH_C_0_8, _lh_uniform_LH_C_1_8) -> 
//│ 		                  (let rec t_3_1 = (_lh_uniform_LH_C_0_8 mod (_lh_uniform_LH_C_0_5 + 1)) in
//│ 		                    (if (t_3_1 = _lh_uniform_LH_C_0_5) then
//│ 		                      (`LH_C(t_3_1, ((uniform__d0 _lh_uniform_LH_C_1_5) _lh_uniform_LH_C_1_8)))
//│ 		                    else
//│ 		                      (`LH_C(t_3_1, ((map__d0 (fun x_1_2 -> 
//│ 		                        (x_1_2 mod 65536))) _lh_uniform_LH_C_1_8)))))
//│ 		                | _ -> 
//│ 		                  (failwith "error")))
//│ 		        | _ -> 
//│ 		          (match _lh_uniform_arg2_1 with
//│ 		            | `LH_C(_lh_uniform_LH_C_0_9, _lh_uniform_LH_C_1_9) -> 
//│ 		              (let rec t_3_2 = (_lh_uniform_LH_C_0_9 mod (_lh_uniform_LH_C_0_5 + 1)) in
//│ 		                (if (t_3_2 = _lh_uniform_LH_C_0_5) then
//│ 		                  (`LH_C(t_3_2, ((uniform__d0 _lh_uniform_LH_C_1_5) _lh_uniform_LH_C_1_9)))
//│ 		                else
//│ 		                  (`LH_C(t_3_2, ((map__d0 (fun x_1_3 -> 
//│ 		                    (x_1_3 mod 65536))) _lh_uniform_LH_C_1_9)))))
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		(testPrimetest_nofib__d0 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPrimetest_nofib_₀^2928] (hopeless to continue)
//│ 	[testPrimetest_nofib_₀^2928 · lines_₀^1955] (using original def)
//│ 		[testPrimetest_nofib_₀^2928 · lines_₀^1955 · break_₀^2350] (using original def)
//│ 			[testPrimetest_nofib_₀^2928 · lines_₀^1955 · break_₀^2350 · break_₀^2331] ---> [testPrimetest_nofib_₀^2928 · lines_₀^1955 · break_₀^2350] (using original def)
//│ 		[testPrimetest_nofib_₀^2928 · lines_₀^1955 · lines_₀^2365] ---> [testPrimetest_nofib_₀^2928 · lines_₀^1955] (using original def)
//│ 	[testPrimetest_nofib_₀^2928 · process_₀^1954] (using original def)
//│ 		[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309] (using original def)
//│ 			[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doInput_₀^2381] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309] (using original def)
//│ 			[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378] (using original def)
//│ 				[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · int_val_of_string_₀^2233] (using original def)
//│ 					[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · int_val_of_string_₀^2233 · int_val_of_char_₀^2621] (using original def)
//│ 				[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236] (using original def)
//│ 					[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · even_₀^2212] (using original def)
//│ 					[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · findKQ_₀^2178] (using original def)
//│ 						[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · findKQ_₀^2178 · divmod_₀^2395] (using original def)
//│ 					[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175] (using original def)
//│ 						[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873] (using original def)
//│ 							[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · chop_₀^1986] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · chop_₀^1986 · divmod_₁^2446] (using original def)
//│ 							[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · length_₀^1992] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · length_₀^1992 · length_₀^2641] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · length_₀^1992] (using original def)
//│ 							[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · makeNumber_₀^1999] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · makeNumber_₀^1999 · foldl_₀^2912] (using original def)
//│ 									[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · makeNumber_₀^1999 · foldl_₀^2912 · foldl_₀^2764] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · makeNumber_₀^1999 · foldl_₀^2912] (using original def)
//│ 							[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · splitAt_lz_₀^1991] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · splitAt_lz_₀^1991 · drop_lz_₀^2741] (using original def)
//│ 									[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · splitAt_lz_₀^1991 · drop_lz_₀^2741 · drop_lz_₀^2498] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · splitAt_lz_₀^1991 · drop_lz_₀^2741] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · splitAt_lz_₀^1991 · take_lz_₀^2736] (using original def)
//│ 									[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · splitAt_lz_₀^1991 · take_lz_₀^2736 · take_lz_₀^1970] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · splitAt_lz_₀^1991 · take_lz_₀^2736] (using original def)
//│ 							[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · map_₀^2814] (using original def)
//│ 									[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · map_₀^2814 · map_₀^2753] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · map_₀^2814] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · map_₀^2853] (using original def)
//│ 									[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · map_₀^2853 · map_₀^2753] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · map_₀^2853] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · map_₀^2892] (using original def)
//│ 									[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · map_₀^2892 · map_₀^2753] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · map_₀^2892] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · uniform_₀^2807] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · uniform_₀^2846] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002 · uniform_₀^2885] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · random_₀^1873 · uniform_₀^2002] (using original def)
//│ 						[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · singleTestX_₀^1883] (using original def)
//│ 							[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · singleTestX_₀^1883 · iterate_₀^2690] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · singleTestX_₀^1883 · iterate_₀^2690 · iterate_₀^2516] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · singleTestX_₀^1883 · iterate_₀^2690] (using original def)
//│ 							[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · singleTestX_₀^1883 · powerMod_₀^2693] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · singleTestX_₀^1883 · powerMod_₀^2693 · even_₁^2534] (using original def)
//│ 							[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · singleTestX_₀^1883 · take_lz_₁^2687] (using original def)
//│ 								[testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · singleTestX_₀^1883 · take_lz_₁^2687 · take_lz_₁^1731] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · doInput_₀^2309 · doLine_₀^2378 · multiTest_₀^2236 · singleTest_₀^2175 · singleTestX_₀^1883 · take_lz_₁^2687] (using original def)
//│ 		[testPrimetest_nofib_₀^2928 · process_₀^1954 · randomInts_₀^2310] (using original def)
//│ 			[testPrimetest_nofib_₀^2928 · process_₀^1954 · randomInts_₀^2310 · rands_₀^2042] (using original def)
//│ 				[testPrimetest_nofib_₀^2928 · process_₀^1954 · randomInts_₀^2310 · rands_₀^2042 · rands_₀^1847] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · randomInts_₀^2310 · rands_₀^2042] (using original def)
//│ 				[testPrimetest_nofib_₀^2928 · process_₀^1954 · randomInts_₀^2310 · rands_₀^2042 · rands_₀^1856] ---> [testPrimetest_nofib_₀^2928 · process_₀^1954 · randomInts_₀^2310 · rands_₀^2042] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPrimetest_nofib_₀_₀(primId⁰(0))
//│ def testPrimetest_nofib_₀_₀(_lh_testPrimetest_nofib_arg1¹) = 
//│ 	let cts¹ = primId⁰([LH_C '2' [LH_C '4' [LH_C '|' [LH_C '4' [LH_C '8' [LH_C '|' [LH_C '4' [LH_C '7' [LH_C '|' [LH_C '1' [LH_C '3' [LH_C '1' [LH_C '7' [LH_C '|' [LH_C '8' [LH_C '9' [LH_C '0' [LH_C '1' [LH_N]]]]]]]]]]]]]]]]]]])
//│ 	in process_₀_₀(lines_₀_₀(cts¹))
//│ 	where
//│ 	def lines_₀_₀(_lh_lines_arg1¹) = 
//│ 		let _lh_matchIdent¹⁴ = break_₀_₀((fun x¹¹ -> polyEq⁰(x¹¹, '|')), _lh_lines_arg1¹)
//│ 		in case _lh_matchIdent¹⁴ of {
//│ 			LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ 
//│ 				let _lh_matchIdent¹⁵ = _lh_lines_LH_P2_1¹
//│ 				in case _lh_matchIdent¹⁵ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹)
//│ 					| _  => error⁰}]
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break_₀_₀(_lh_break_arg1¹, _lh_break_arg2¹) = 
//│ 			case _lh_break_arg2¹ of {
//│ 				LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 				| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]] else 
//│ 					let _lh_matchIdent¹⁹ = break_₀_₀(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ 					in case _lh_matchIdent¹⁹ of {
//│ 						LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 	def process_₀_₀(_lh_process_arg1¹) = 
//│ 		doInput_₀_₀(randomInts_₀_₀(111, 47), _lh_process_arg1¹)
//│ 		where
//│ 		def doInput_₀_₀(_lh_doInput_arg1¹, _lh_doInput_arg2¹) = 
//│ 			case _lh_doInput_arg2¹ of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹)
//│ 				| _  => error⁰}
//│ 			where
//│ 			def doLine_₀_₀(_lh_doLine_arg1¹, _lh_doLine_arg2¹, _lh_doLine_arg3¹) = 
//│ 				let n⁶ = int_val_of_string_₀_₀(_lh_doLine_arg1¹)
//│ 				in let _lh_matchIdent¹⁸ = multiTest_₀_₀(100, _lh_doLine_arg3¹, n⁶)
//│ 				in case _lh_matchIdent¹⁸ of {
//│ 					LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def int_val_of_string_₀_₀(_lh_int_val_of_string_arg1¹) = 
//│ 					let f⁹ = (fun _lh_f_arg1² -> (fun _lh_f_arg2¹ -> case _lh_f_arg1² of {
//│ 						LH_N  => _lh_f_arg2¹
//│ 						| LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f⁹(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹)))
//│ 						| _  => error⁰}))
//│ 					in f⁹(_lh_int_val_of_string_arg1¹, 0)
//│ 					where
//│ 					def int_val_of_char_₀_₀(_lh_int_val_of_char_arg1¹) = 
//│ 						(int_of_char⁰(_lh_int_val_of_char_arg1¹) - 48)
//│ 				def multiTest_₀_₀(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹, _lh_multiTest_arg3¹) = 
//│ 					let mTest¹ = (fun k² -> (fun rs¹ -> if (k² == 0) then [LH_P2 [True] rs¹] else 
//│ 						let _lh_matchIdent¹² = singleTest_₀_₀(_lh_multiTest_arg3¹, findKQ_₀_₀(_lh_multiTest_arg3¹), rs¹)
//│ 						in case _lh_matchIdent¹² of {
//│ 							LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k² - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹]
//│ 							| _  => error⁰}))
//│ 					in if ((_lh_multiTest_arg3¹ <= 1) || even_₀_₀(_lh_multiTest_arg3¹)) then [LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹] else mTest¹(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹)
//│ 					where
//│ 					def even_₀_₀(_lh_even_arg1³) = 
//│ 						((_lh_even_arg1³ % 2) == 0)
//│ 					def findKQ_₀_₀(_lh_findKQ_arg1¹) = 
//│ 						let f¹³ = (fun _lh_f_arg1³ -> case _lh_f_arg1³ of {
//│ 							LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => 
//│ 								let _lh_matchIdent²⁰ = divmod_₀_₀(_lh_f_LH_P2_1², 2)
//│ 								in case _lh_matchIdent²⁰ of {
//│ 									LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹³([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²]
//│ 									| _  => error⁰}
//│ 							| _  => error⁰})
//│ 						in f¹³([LH_P2 0 (_lh_findKQ_arg1¹ - 1)])
//│ 						where
//│ 						def divmod_₀_₀(_lh_divmod_arg1³, _lh_divmod_arg2³) = 
//│ 							[LH_P2 div⁰(_lh_divmod_arg1³, _lh_divmod_arg2³) (_lh_divmod_arg1³ % _lh_divmod_arg2³)]
//│ 					def singleTest_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, _lh_singleTest_arg3¹) = 
//│ 						let _lh_matchIdent¹⁷ = random_₀_₀((_lh_singleTest_arg1¹ - 2), _lh_singleTest_arg3¹)
//│ 						in case _lh_matchIdent¹⁷ of {
//│ 							LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]
//│ 							| _  => error⁰}
//│ 						where
//│ 						def random_₀_₀(_lh_random_arg1¹, _lh_random_arg2¹) = 
//│ 							let ns¹ = chop_₀_₀(65536, _lh_random_arg1¹)
//│ 							in let _lh_matchIdent¹⁶ = splitAt_lz_₀_₀(length_₀_₀(ns¹), _lh_random_arg2¹)
//│ 							in case _lh_matchIdent¹⁶ of {
//│ 								LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀_₀(65536, uniform_₀_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]
//│ 								| _  => error⁰}
//│ 							where
//│ 							def chop_₀_₀(_lh_chop_arg1¹) = 
//│ 								let chop'¹ = (fun a⁴ -> (fun n⁴ -> 
//│ 									let _lh_matchIdent¹³ = divmod_₁_₀(n⁴, _lh_chop_arg1¹)
//│ 									in case _lh_matchIdent¹³ of {
//│ 										LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁴ == 0) then a⁴ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁴], _lh_chop_LH_P2_0¹)
//│ 										| _  => error⁰}))
//│ 								in chop'¹([LH_N])
//│ 								where
//│ 								def divmod_₁_₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 									[LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]
//│ 							def length_₀_₀(ls¹²) = 
//│ 								case ls¹² of {
//│ 									LH_C h¹¹ t¹⁷ => (1 + length_₀_₀(t¹⁷))
//│ 									| LH_N  => 0}
//│ 							def makeNumber_₀_₀(_lh_makeNumber_arg1¹) = 
//│ 								foldl_₀_₀((fun a⁵ -> (fun x¹² -> ((a⁵ * _lh_makeNumber_arg1¹) + x¹²))), 0)
//│ 								where
//│ 								def foldl_₀_₀(f⁸, i¹, ls⁸) = 
//│ 									case ls⁸ of {
//│ 										LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³)
//│ 										| LH_N  => i¹}
//│ 							def splitAt_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = 
//│ 								[LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ 								where
//│ 								def drop_lz_₀_₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = 
//│ 									let _lh_matchIdent²¹ = force⁰(_lh_drop_lz_arg2¹)
//│ 									in case _lh_matchIdent²¹ of {
//│ 										LH_N  => lazy⁰([LH_N])
//│ 										| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹
//│ 										| _  => error⁰}
//│ 								def take_lz_₀_₀(n⁷, ls¹¹) = 
//│ 									if (n⁷ > 0) then case force⁰(ls¹¹) of {
//│ 										LH_C h¹⁰ t¹⁶ => [LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]
//│ 										| LH_N  => [LH_N]} else [LH_N]
//│ 							def uniform_₀_₀(_lh_uniform_arg1¹, _lh_uniform_arg2¹) = 
//│ 								case _lh_uniform_arg1¹ of {
//│ 									LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {
//│ 										LH_N  => case _lh_uniform_arg2¹ of {
//│ 											LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {
//│ 												LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]
//│ 												| _  => case _lh_uniform_arg2¹ of {
//│ 													LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => 
//│ 														let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 														in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)]
//│ 													| _  => error⁰}}
//│ 											| _  => case _lh_uniform_arg2¹ of {
//│ 												LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => 
//│ 													let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 													in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)]
//│ 												| _  => error⁰}}
//│ 										| _  => case _lh_uniform_arg2¹ of {
//│ 											LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => 
//│ 												let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 												in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)]
//│ 											| _  => error⁰}}
//│ 									| _  => error⁰}
//│ 								where
//│ 								def map_₀_₀(f⁷, ls⁷) = 
//│ 									case ls⁷ of {
//│ 										LH_C h⁶ t¹² => [LH_C f⁷(h⁶) map_₀_₀(f⁷, t¹²)]
//│ 										| LH_N  => [LH_N]}
//│ 								def map_₀_₁(f¹¹, ls¹⁰) = 
//│ 									case ls¹⁰ of {
//│ 										LH_C h⁹ t¹⁵ => [LH_C f¹¹(h⁹) map_₀_₁(f¹¹, t¹⁵)]
//│ 										| LH_N  => [LH_N]}
//│ 								def map_₀_₂(f¹⁰, ls⁹) = 
//│ 									case ls⁹ of {
//│ 										LH_C h⁸ t¹⁴ => [LH_C f¹⁰(h⁸) map_₀_₂(f¹⁰, t¹⁴)]
//│ 										| LH_N  => [LH_N]}
//│ 						def singleTestX_₀_₀(_lh_singleTestX_arg1¹, _lh_singleTestX_arg2¹, _lh_singleTestX_arg3¹) = 
//│ 							case _lh_singleTestX_arg2¹ of {
//│ 								LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => 
//│ 									let square¹ = (fun x¹³ -> ((x¹³ * x¹³) % _lh_singleTestX_arg1¹))
//│ 									in let witness¹ = (fun ls¹³ -> 
//│ 										let _lh_matchIdent²² = ls¹³
//│ 										in case _lh_matchIdent²² of {
//│ 											LH_N  => [False]
//│ 											| LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²)
//│ 											| _  => error⁰})
//│ 									in let _lh_matchIdent²³ = take_lz_₁_₀(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀(square¹, powerMod_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ 									in case _lh_matchIdent²³ of {
//│ 										LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³))
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def iterate_₀_₀(f⁶, x⁷) = 
//│ 								lazy⁰([LH_C x⁷ iterate_₀_₀(f⁶, f⁶(x⁷))])
//│ 							def powerMod_₀_₀(_lh_powerMod_arg1¹, _lh_powerMod_arg2¹, _lh_powerMod_arg3¹) = 
//│ 								case _lh_powerMod_arg2¹ of {
//│ 									0  => 1
//│ 									| _  => 
//│ 										let a'¹ = (_lh_powerMod_arg1¹ mod _lh_powerMod_arg3¹)
//│ 										in let f¹² = (fun a⁶ -> (fun b² -> (fun c¹ -> 
//│ 											let g¹ = (fun a⁷ -> (fun b³ -> if even_₁_₀(b³) then g¹(((a⁷ * a⁷) % _lh_powerMod_arg3¹), div⁰(b³, 2)) else f¹²(a⁷, (b³ - 1), ((a⁷ * c¹) % _lh_powerMod_arg3¹))))
//│ 											in if (b² == 0) then c¹ else g¹(a⁶, b²))))
//│ 										in f¹²(a'¹, (_lh_powerMod_arg2¹ - 1), a'¹)}
//│ 								where
//│ 								def even_₁_₀(_lh_even_arg1²) = 
//│ 									((_lh_even_arg1² % 2) == 0)
//│ 							def take_lz_₁_₀(n⁵, ls⁶) = 
//│ 								if (n⁵ > 0) then case force⁰(ls⁶) of {
//│ 									LH_C h⁵ t¹¹ => [LH_C h⁵ take_lz_₁_₀((n⁵ - 1), t¹¹)]
//│ 									| LH_N  => [LH_N]} else [LH_N]
//│ 		def randomInts_₀_₀(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) = 
//│ 			if ((1 <= _lh_randomInts_arg1¹) && (_lh_randomInts_arg1¹ <= 2147483562)) then if ((1 <= _lh_randomInts_arg2¹) && (_lh_randomInts_arg2¹ <= 2147483398)) then rands_₀_₀(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 			where
//│ 			def rands_₀_₀(_lh_rands_arg1¹, _lh_rands_arg2¹) = 
//│ 				let k³ = div⁰(_lh_rands_arg1¹, 53668)
//│ 				in let s1'¹ = ((40014 * (_lh_rands_arg1¹ - (k³ * 53668))) - (k³ * 12211))
//│ 				in let s1''¹ = if (s1'¹ < 0) then (s1'¹ + 2147483563) else s1'¹
//│ 				in let k'¹ = div⁰(_lh_rands_arg2¹, 52774)
//│ 				in let s2'¹ = ((40692 * (_lh_rands_arg2¹ - (k'¹ * 52774))) - (k'¹ * 3791))
//│ 				in let s2''¹ = if (s2'¹ < 0) then (s2'¹ + 2147483399) else s2'¹
//│ 				in let z¹ = (s1''¹ - s2''¹)
//│ 				in if (z¹ < 1) then lazy⁰([LH_C (z¹ + 2147483562) rands_₀_₀(s1''¹, s2''¹)]) else lazy⁰([LH_C z¹ rands_₀_₀(s1''¹, s2''¹)])
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]: 1235 --->
//│ 	case _lh_matchIdent¹³ of {LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁴ == 0) then a⁴ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁴], _lh_chop_LH_P2_0¹) | _  => error⁰}: 1529
//│ [LH_P2 [True] rs¹]: 1245 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 1840
//│ [LH_P2 [False] _lh_multiTest_LH_P2_1¹]: 1268 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 1840
//│ [LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹]: 1293 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 1840
//│ [LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 1360 --->
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀_₀(65536, uniform_₀_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹] | _  => error⁰}: 1694
//│ [LH_C x⁷ iterate_₀_₀(f⁶, f⁶(x⁷))]: 1372 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁵ t¹¹ => [LH_C h⁵ take_lz_₁_₀((n⁵ - 1), t¹¹)] | LH_N  => [LH_N]}: 1558
//│ [LH_N]: 1385 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]: 1386 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)]: 1408 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)]: 1420 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)]: 1447 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)]: 1459 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)]: 1486 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)]: 1498 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C _lh_chop_LH_P2_1¹ a⁴]: 1523 --->
//│ 	case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}}: 1503
//│ 	case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}} | _  => error⁰}: 1505
//│ 	case ls¹² of {LH_C h¹¹ t¹⁷ => (1 + length_₀_₀(t¹⁷)) | LH_N  => 0}: 2294
//│ [LH_N]: 1534 --->
//│ 	case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}}: 1503
//│ 	case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}} | _  => error⁰}: 1505
//│ 	case ls¹² of {LH_C h¹¹ t¹⁷ => (1 + length_₀_₀(t¹⁷)) | LH_N  => 0}: 2294
//│ [LH_C h⁵ take_lz_₁_₀((n⁵ - 1), t¹¹)]: 1556 --->
//│ 	case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 2412
//│ 	case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 2455
//│ [LH_N]: 1557 --->
//│ 	case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 2412
//│ 	case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 2455
//│ [LH_N]: 1559 --->
//│ 	case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 2412
//│ 	case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 2455
//│ [LH_C f⁷(h⁶) map_₀_₀(f⁷, t¹²)]: 1572 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_N]: 1573 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_P2 div⁰(_lh_divmod_arg1³, _lh_divmod_arg2³) (_lh_divmod_arg1³ % _lh_divmod_arg2³)]: 1587 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹³([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰}: 2322
//│ [LH_N]: 1604 --->
//│ 	case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 1979
//│ [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁵ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}]: 1611 --->
//│ 	case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 1979
//│ [LH_P2 makeNumber_₀_₀(65536, uniform_₀_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]: 1692 --->
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹] | _  => error⁰}: 1723
//│ [LH_P2 singleTestX_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]: 1721 --->
//│ 	case _lh_matchIdent¹² of {LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k² - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹] | _  => error⁰}: 1271
//│ [LH_C f¹⁰(h⁸) map_₀_₂(f¹⁰, t¹⁴)]: 1765 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_N]: 1766 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C (z¹ + 2147483562) rands_₀_₀(s1''¹, s2''¹)]: 1943 --->
//│ 	case force⁰(ls¹¹) of {LH_C h¹⁰ t¹⁶ => [LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)] | LH_N  => [LH_N]}: 2016
//│ 	case _lh_matchIdent²¹ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 2372
//│ [LH_C z¹ rands_₀_₀(s1''¹, s2''¹)]: 1952 --->
//│ 	case force⁰(ls¹¹) of {LH_C h¹⁰ t¹⁶ => [LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)] | LH_N  => [LH_N]}: 2016
//│ 	case _lh_matchIdent²¹ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 2372
//│ [LH_C f¹¹(h⁹) map_₀_₁(f¹¹, t¹⁵)]: 1991 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_N]: 1992 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]: 2014 --->
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}: 1424
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}}: 1425
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}: 1463
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}}: 1464
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}: 1502
//│ 	case ls⁷ of {LH_C h⁶ t¹² => [LH_C f⁷(h⁶) map_₀_₀(f⁷, t¹²)] | LH_N  => [LH_N]}: 1574
//│ 	case ls⁹ of {LH_C h⁸ t¹⁴ => [LH_C f¹⁰(h⁸) map_₀_₂(f¹⁰, t¹⁴)] | LH_N  => [LH_N]}: 1767
//│ 	case ls¹⁰ of {LH_C h⁹ t¹⁵ => [LH_C f¹¹(h⁹) map_₀_₁(f¹¹, t¹⁵)] | LH_N  => [LH_N]}: 1993
//│ [LH_N]: 2015 --->
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}: 1424
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}}: 1425
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}: 1463
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}}: 1464
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}: 1502
//│ 	case ls⁷ of {LH_C h⁶ t¹² => [LH_C f⁷(h⁶) map_₀_₀(f⁷, t¹²)] | LH_N  => [LH_N]}: 1574
//│ 	case ls⁹ of {LH_C h⁸ t¹⁴ => [LH_C f¹⁰(h⁸) map_₀_₂(f¹⁰, t¹⁴)] | LH_N  => [LH_N]}: 1767
//│ 	case ls¹⁰ of {LH_C h⁹ t¹⁵ => [LH_C f¹¹(h⁹) map_₀_₁(f¹¹, t¹⁵)] | LH_N  => [LH_N]}: 1993
//│ [LH_N]: 2017 --->
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}: 1424
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}}: 1425
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}: 1463
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}}: 1464
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}: 1502
//│ 	case ls⁷ of {LH_C h⁶ t¹² => [LH_C f⁷(h⁶) map_₀_₀(f⁷, t¹²)] | LH_N  => [LH_N]}: 1574
//│ 	case ls⁹ of {LH_C h⁸ t¹⁴ => [LH_C f¹⁰(h⁸) map_₀_₂(f¹⁰, t¹⁴)] | LH_N  => [LH_N]}: 1767
//│ 	case ls¹⁰ of {LH_C h⁹ t¹⁵ => [LH_C f¹¹(h⁹) map_₀_₁(f¹¹, t¹⁵)] | LH_N  => [LH_N]}: 1993
//│ [LH_N]: 2173 --->
//│ 	case _lh_f_arg1² of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f⁹(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 1746
//│ [LH_N]: 2174 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 1609
//│ [LH_P2 [LH_N] [LH_N]]: 2175 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁵ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}] | _  => error⁰}: 1613
//│ 	case _lh_matchIdent¹⁹ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 2196
//│ [LH_N]: 2179 --->
//│ 	case _lh_f_arg1² of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f⁹(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 1746
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 2182 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 1609
//│ [LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 2183 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁵ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}] | _  => error⁰}: 1613
//│ 	case _lh_matchIdent¹⁹ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 2196
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]: 2192 --->
//│ 	case _lh_f_arg1² of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f⁹(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 1746
//│ [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 2194 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁵ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}] | _  => error⁰}: 1613
//│ 	case _lh_matchIdent¹⁹ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 2196
//│ [LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]: 2315 --->
//│ 	case _lh_f_arg1³ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let _lh_matchIdent²⁰ = divmod_₀_₀(_lh_f_LH_P2_1², 2)
//│ in case _lh_matchIdent²⁰ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹³([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 2325
//│ [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²]: 2319 --->
//│ 	case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x¹³ -> ((x¹³ * x¹³) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls¹³ -> let _lh_matchIdent²² = ls¹³
//│ in case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent²³ = take_lz_₁_₀(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀(square¹, powerMod_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 2460
//│ [LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 2334 --->
//│ 	case _lh_f_arg1³ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let _lh_matchIdent²⁰ = divmod_₀_₀(_lh_f_LH_P2_1², 2)
//│ in case _lh_matchIdent²⁰ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹³([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 2325
//│ [LH_N]: 2353 --->
//│ 	case force⁰(ls¹¹) of {LH_C h¹⁰ t¹⁶ => [LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)] | LH_N  => [LH_N]}: 2016
//│ 	case _lh_matchIdent²¹ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 2372
//│ ------------------
//│ case _lh_matchIdent¹² of {LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k² - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹] | _  => error⁰}: 1271 --->
//│ 	[LH_P2 singleTestX_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]: 1721
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}: 1424 --->
//│ 	[LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]: 2014
//│ 	[LH_N]: 2015
//│ 	[LH_N]: 2017
//│ case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}}: 1425 --->
//│ 	[LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]: 2014
//│ 	[LH_N]: 2015
//│ 	[LH_N]: 2017
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}: 1463 --->
//│ 	[LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]: 2014
//│ 	[LH_N]: 2015
//│ 	[LH_N]: 2017
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}}: 1464 --->
//│ 	[LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]: 2014
//│ 	[LH_N]: 2015
//│ 	[LH_N]: 2017
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}: 1502 --->
//│ 	[LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]: 2014
//│ 	[LH_N]: 2015
//│ 	[LH_N]: 2017
//│ case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}}: 1503 --->
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁴]: 1523
//│ 	[LH_N]: 1534
//│ case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]] | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t⁸ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁸ == _lh_uniform_LH_C_0⁵) then [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)] else [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t⁹ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t⁹ == _lh_uniform_LH_C_0⁵) then [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)] else [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)] | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t¹⁰ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t¹⁰ == _lh_uniform_LH_C_0⁵) then [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)] else [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)] | _  => error⁰}} | _  => error⁰}: 1505 --->
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁴]: 1523
//│ 	[LH_N]: 1534
//│ case _lh_matchIdent¹³ of {LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁴ == 0) then a⁴ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁴], _lh_chop_LH_P2_0¹) | _  => error⁰}: 1529 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]: 1235
//│ case force⁰(ls⁶) of {LH_C h⁵ t¹¹ => [LH_C h⁵ take_lz_₁_₀((n⁵ - 1), t¹¹)] | LH_N  => [LH_N]}: 1558 --->
//│ 	[LH_C x⁷ iterate_₀_₀(f⁶, f⁶(x⁷))]: 1372
//│ case ls⁷ of {LH_C h⁶ t¹² => [LH_C f⁷(h⁶) map_₀_₀(f⁷, t¹²)] | LH_N  => [LH_N]}: 1574 --->
//│ 	[LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]: 2014
//│ 	[LH_N]: 2015
//│ 	[LH_N]: 2017
//│ case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 1609 --->
//│ 	[LH_N]: 2174
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 2182
//│ case _lh_matchIdent¹⁴ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁵ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}] | _  => error⁰}: 1613 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 2175
//│ 	[LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 2183
//│ 	[LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 2194
//│ case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665 --->
//│ 	[LH_N]: 1385
//│ 	[LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]: 1386
//│ 	[LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)]: 1408
//│ 	[LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)]: 1420
//│ 	[LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)]: 1447
//│ 	[LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)]: 1459
//│ 	[LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)]: 1486
//│ 	[LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)]: 1498
//│ 	[LH_C f⁷(h⁶) map_₀_₀(f⁷, t¹²)]: 1572
//│ 	[LH_N]: 1573
//│ 	[LH_C f¹⁰(h⁸) map_₀_₂(f¹⁰, t¹⁴)]: 1765
//│ 	[LH_N]: 1766
//│ 	[LH_C f¹¹(h⁹) map_₀_₁(f¹¹, t¹⁵)]: 1991
//│ 	[LH_N]: 1992
//│ case _lh_matchIdent¹⁶ of {LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀_₀(65536, uniform_₀_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹] | _  => error⁰}: 1694 --->
//│ 	[LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 1360
//│ case _lh_matchIdent¹⁷ of {LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹] | _  => error⁰}: 1723 --->
//│ 	[LH_P2 makeNumber_₀_₀(65536, uniform_₀_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]: 1692
//│ case _lh_f_arg1² of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f⁹(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 1746 --->
//│ 	[LH_N]: 2173
//│ 	[LH_N]: 2179
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]: 2192
//│ case ls⁹ of {LH_C h⁸ t¹⁴ => [LH_C f¹⁰(h⁸) map_₀_₂(f¹⁰, t¹⁴)] | LH_N  => [LH_N]}: 1767 --->
//│ 	[LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]: 2014
//│ 	[LH_N]: 2015
//│ 	[LH_N]: 2017
//│ case _lh_matchIdent¹⁸ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 1840 --->
//│ 	[LH_P2 [True] rs¹]: 1245
//│ 	[LH_P2 [False] _lh_multiTest_LH_P2_1¹]: 1268
//│ 	[LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹]: 1293
//│ case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 1979 --->
//│ 	[LH_N]: 1604
//│ 	[LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁵ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}]: 1611
//│ case ls¹⁰ of {LH_C h⁹ t¹⁵ => [LH_C f¹¹(h⁹) map_₀_₁(f¹¹, t¹⁵)] | LH_N  => [LH_N]}: 1993 --->
//│ 	[LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)]: 2014
//│ 	[LH_N]: 2015
//│ 	[LH_N]: 2017
//│ case force⁰(ls¹¹) of {LH_C h¹⁰ t¹⁶ => [LH_C h¹⁰ take_lz_₀_₀((n⁷ - 1), t¹⁶)] | LH_N  => [LH_N]}: 2016 --->
//│ 	DeadCodeProd
//│ 	[LH_C (z¹ + 2147483562) rands_₀_₀(s1''¹, s2''¹)]: 1943
//│ 	[LH_C z¹ rands_₀_₀(s1''¹, s2''¹)]: 1952
//│ 	[LH_N]: 2353
//│ case _lh_matchIdent¹⁹ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹] | _  => error⁰}: 2196 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 2175
//│ 	[LH_P2 [LH_N] [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]]: 2183
//│ 	[LH_P2 [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹] _lh_break_LH_P2_1¹]: 2194
//│ case ls¹² of {LH_C h¹¹ t¹⁷ => (1 + length_₀_₀(t¹⁷)) | LH_N  => 0}: 2294 --->
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁴]: 1523
//│ 	[LH_N]: 1534
//│ case _lh_matchIdent²⁰ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹³([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰}: 2322 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1³, _lh_divmod_arg2³) (_lh_divmod_arg1³ % _lh_divmod_arg2³)]: 1587
//│ case _lh_f_arg1³ of {LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => let _lh_matchIdent²⁰ = divmod_₀_₀(_lh_f_LH_P2_1², 2)
//│ in case _lh_matchIdent²⁰ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹³([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰} | _  => error⁰}: 2325 --->
//│ 	[LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]: 2315
//│ 	[LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 2334
//│ case _lh_matchIdent²¹ of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 2372 --->
//│ 	DeadCodeProd
//│ 	[LH_C (z¹ + 2147483562) rands_₀_₀(s1''¹, s2''¹)]: 1943
//│ 	[LH_C z¹ rands_₀_₀(s1''¹, s2''¹)]: 1952
//│ 	[LH_N]: 2353
//│ case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 2412 --->
//│ 	[LH_C h⁵ take_lz_₁_₀((n⁵ - 1), t¹¹)]: 1556
//│ 	[LH_N]: 1557
//│ 	[LH_N]: 1559
//│ case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 2455 --->
//│ 	[LH_C h⁵ take_lz_₁_₀((n⁵ - 1), t¹¹)]: 1556
//│ 	[LH_N]: 1557
//│ 	[LH_N]: 1559
//│ case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x¹³ -> ((x¹³ * x¹³) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls¹³ -> let _lh_matchIdent²² = ls¹³
//│ in case _lh_matchIdent²² of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent²³ = take_lz_₁_₀(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀(square¹, powerMod_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent²³ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 2460 --->
//│ 	[LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²]: 2319
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]: 1235 --->
//│ 	case _lh_matchIdent¹³ of {LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁴ == 0) then a⁴ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁴], _lh_chop_LH_P2_0¹) | _  => error⁰}: 1529
//│ [LH_P2 [True] rs¹]: 1245 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 1840
//│ [LH_P2 [False] _lh_multiTest_LH_P2_1¹]: 1268 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 1840
//│ [LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹]: 1293 --->
//│ 	case _lh_matchIdent¹⁸ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 1840
//│ [LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 1360 --->
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀_₀(65536, uniform_₀_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹] | _  => error⁰}: 1694
//│ [LH_C x⁷ iterate_₀_₀(f⁶, f⁶(x⁷))]: 1372 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁵ t¹¹ => [LH_C h⁵ take_lz_₁_₀((n⁵ - 1), t¹¹)] | LH_N  => [LH_N]}: 1558
//│ [LH_N]: 1385 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]: 1386 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)]: 1408 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)]: 1420 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)]: 1447 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)]: 1459 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)]: 1486 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)]: 1498 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C f⁷(h⁶) map_₀_₀(f⁷, t¹²)]: 1572 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_N]: 1573 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_P2 div⁰(_lh_divmod_arg1³, _lh_divmod_arg2³) (_lh_divmod_arg1³ % _lh_divmod_arg2³)]: 1587 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹³([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰}: 2322
//│ [LH_N]: 1604 --->
//│ 	case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 1979
//│ [LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁵ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}]: 1611 --->
//│ 	case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 1979
//│ [LH_P2 makeNumber_₀_₀(65536, uniform_₀_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]: 1692 --->
//│ 	case _lh_matchIdent¹⁷ of {LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹] | _  => error⁰}: 1723
//│ [LH_P2 singleTestX_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]: 1721 --->
//│ 	case _lh_matchIdent¹² of {LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k² - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹] | _  => error⁰}: 1271
//│ [LH_C f¹⁰(h⁸) map_₀_₂(f¹⁰, t¹⁴)]: 1765 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_N]: 1766 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_C f¹¹(h⁹) map_₀_₁(f¹¹, t¹⁵)]: 1991 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_N]: 1992 --->
//│ 	case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665
//│ [LH_N]: 2173 --->
//│ 	case _lh_f_arg1² of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f⁹(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 1746
//│ [LH_N]: 2174 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 1609
//│ [LH_N]: 2179 --->
//│ 	case _lh_f_arg1² of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f⁹(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 1746
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 2182 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 1609
//│ [LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]: 2192 --->
//│ 	case _lh_f_arg1² of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f⁹(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 1746
//│ ------------------
//│ case _lh_matchIdent¹² of {LH_P2 _lh_multiTest_LH_P2_0¹ _lh_multiTest_LH_P2_1¹ => if _lh_multiTest_LH_P2_0¹ then mTest¹((k² - 1), _lh_multiTest_LH_P2_1¹) else [LH_P2 [False] _lh_multiTest_LH_P2_1¹] | _  => error⁰}: 1271 --->
//│ 	[LH_P2 singleTestX_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹]: 1721
//│ case _lh_matchIdent¹³ of {LH_P2 _lh_chop_LH_P2_0¹ _lh_chop_LH_P2_1¹ => if (n⁴ == 0) then a⁴ else chop'¹([LH_C _lh_chop_LH_P2_1¹ a⁴], _lh_chop_LH_P2_0¹) | _  => error⁰}: 1529 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1², _lh_divmod_arg2²) (_lh_divmod_arg1² % _lh_divmod_arg2²)]: 1235
//│ case force⁰(ls⁶) of {LH_C h⁵ t¹¹ => [LH_C h⁵ take_lz_₁_₀((n⁵ - 1), t¹¹)] | LH_N  => [LH_N]}: 1558 --->
//│ 	[LH_C x⁷ iterate_₀_₀(f⁶, f⁶(x⁷))]: 1372
//│ case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}: 1609 --->
//│ 	[LH_N]: 2174
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹]: 2182
//│ case ls⁸ of {LH_C h⁷ t¹³ => foldl_₀_₀(f⁸, f⁸(i¹, h⁷), t¹³) | LH_N  => i¹}: 1665 --->
//│ 	[LH_N]: 1385
//│ 	[LH_C (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵) [LH_N]]: 1386
//│ 	[LH_C t⁸ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)]: 1408
//│ 	[LH_C t⁸ map_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)]: 1420
//│ 	[LH_C t⁹ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)]: 1447
//│ 	[LH_C t⁹ map_₀_₁((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)]: 1459
//│ 	[LH_C t¹⁰ uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)]: 1486
//│ 	[LH_C t¹⁰ map_₀_₂((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)]: 1498
//│ 	[LH_C f⁷(h⁶) map_₀_₀(f⁷, t¹²)]: 1572
//│ 	[LH_N]: 1573
//│ 	[LH_C f¹⁰(h⁸) map_₀_₂(f¹⁰, t¹⁴)]: 1765
//│ 	[LH_N]: 1766
//│ 	[LH_C f¹¹(h⁹) map_₀_₁(f¹¹, t¹⁵)]: 1991
//│ 	[LH_N]: 1992
//│ case _lh_matchIdent¹⁶ of {LH_P2 _lh_random_LH_P2_0¹ _lh_random_LH_P2_1¹ => [LH_P2 makeNumber_₀_₀(65536, uniform_₀_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹] | _  => error⁰}: 1694 --->
//│ 	[LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 1360
//│ case _lh_matchIdent¹⁷ of {LH_P2 _lh_singleTest_LH_P2_0¹ _lh_singleTest_LH_P2_1¹ => [LH_P2 singleTestX_₀_₀(_lh_singleTest_arg1¹, _lh_singleTest_arg2¹, (2 + _lh_singleTest_LH_P2_0¹)) _lh_singleTest_LH_P2_1¹] | _  => error⁰}: 1723 --->
//│ 	[LH_P2 makeNumber_₀_₀(65536, uniform_₀_₀(ns¹, _lh_random_LH_P2_0¹)) _lh_random_LH_P2_1¹]: 1692
//│ case _lh_f_arg1² of {LH_N  => _lh_f_arg2¹ | LH_C _lh_f_LH_C_0¹ _lh_f_LH_C_1¹ => f⁹(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2¹) + int_val_of_char_₀_₀(_lh_f_LH_C_0¹))) | _  => error⁰}: 1746 --->
//│ 	[LH_N]: 2173
//│ 	[LH_N]: 2179
//│ 	[LH_C _lh_break_LH_C_0¹ _lh_break_LH_P2_0¹]: 2192
//│ case _lh_matchIdent¹⁸ of {LH_P2 _lh_doLine_LH_P2_0¹ _lh_doLine_LH_P2_1¹ => if _lh_doLine_LH_P2_0¹ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹(_lh_doLine_LH_P2_1¹)] | _  => error⁰}: 1840 --->
//│ 	[LH_P2 [True] rs¹]: 1245
//│ 	[LH_P2 [False] _lh_multiTest_LH_P2_1¹]: 1268
//│ 	[LH_P2 (_lh_multiTest_arg3¹ == 2) _lh_multiTest_arg2¹]: 1293
//│ case _lh_doInput_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_doInput_LH_C_0¹ _lh_doInput_LH_C_1¹ => doLine_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1¹) | _  => error⁰}: 1979 --->
//│ 	[LH_N]: 1604
//│ 	[LH_C _lh_lines_LH_P2_0¹ let _lh_matchIdent¹⁵ = _lh_lines_LH_P2_1¹
//│ in case _lh_matchIdent¹⁵ of {LH_N  => [LH_N] | LH_C _lh_lines_LH_C_0¹ _lh_lines_LH_C_1¹ => lines_₀_₀(_lh_lines_LH_C_1¹) | _  => error⁰}]: 1611
//│ case _lh_matchIdent²⁰ of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => if (_lh_f_LH_P2_1³ == 0) then f¹³([LH_P2 (_lh_f_LH_P2_0² + 1) _lh_f_LH_P2_0³]) else [LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1²] | _  => error⁰}: 2322 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1³, _lh_divmod_arg2³) (_lh_divmod_arg1³ % _lh_divmod_arg2³)]: 1587
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPrimetest_nofib_₀_₀(primId⁰(0))
//│ def testPrimetest_nofib_₀_₀(_lh_testPrimetest_nofib_arg1²) = 
//│ 	let cts² = primId⁰([LH_C '2' [LH_C '4' [LH_C '|' [LH_C '4' [LH_C '8' [LH_C '|' [LH_C '4' [LH_C '7' [LH_C '|' [LH_C '1' [LH_C '3' [LH_C '1' [LH_C '7' [LH_C '|' [LH_C '8' [LH_C '9' [LH_C '0' [LH_C '1' [LH_N]]]]]]]]]]]]]]]]]]])
//│ 	in process_₀_₀(lines_₀_₀(cts²))
//│ 	where
//│ 	def lines_₀_₀(_lh_lines_arg1²) = 
//│ 		let _lh_matchIdent²⁵ = break_₀_₀((fun x¹⁴ -> polyEq⁰(x¹⁴, '|')), _lh_lines_arg1²)
//│ 		in case _lh_matchIdent²⁵ of {
//│ 			LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => 
//│ 				let _lh_doInput_LH_C_1² = 	
//│ 					let _lh_matchIdent²⁶ = _lh_lines_LH_P2_1¹
//│ 					in _lh_matchIdent²⁶(99)
//│ 				in let _lh_doInput_LH_C_0² = _lh_lines_LH_P2_0¹
//│ 				in (fun _lh_doInput_arg1³ -> doLine_₀_₀(_lh_doInput_LH_C_0², (fun state² -> doInput_₀_₀(state², _lh_doInput_LH_C_1²)), _lh_doInput_arg1³))
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break_₀_₀(_lh_break_arg1², _lh_break_arg2²) = 
//│ 			case _lh_break_arg2² of {
//│ 				LH_N  => [LH_P2 (fun _lh_f_arg2² -> (fun f¹⁴ -> _lh_f_arg2²)) (fun _lh_dummy⁰ -> (fun _lh_doInput_arg1² -> [LH_N]))]
//│ 				| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1²(_lh_break_LH_C_0¹) then [LH_P2 (fun _lh_f_arg2³ -> (fun f¹⁵ -> _lh_f_arg2³)) 
//│ 					let _lh_lines_LH_C_1² = _lh_break_LH_C_1¹
//│ 					in (fun _lh_dummy¹ -> lines_₀_₀(_lh_lines_LH_C_1²))] else 
//│ 					let _lh_matchIdent²⁴ = break_₀_₀(_lh_break_arg1², _lh_break_LH_C_1¹)
//│ 					in case _lh_matchIdent²⁴ of {
//│ 						LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 
//│ 							let _lh_f_LH_C_1² = _lh_break_LH_P2_0¹
//│ 							in let _lh_f_LH_C_0² = _lh_break_LH_C_0¹
//│ 							in (fun _lh_f_arg2⁴ -> (fun f¹⁶ -> f¹⁶(_lh_f_LH_C_1², ((10 * _lh_f_arg2⁴) + int_val_of_char_₀_₀(_lh_f_LH_C_0²))))) _lh_break_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 	def process_₀_₀(_lh_process_arg1²) = 
//│ 		doInput_₀_₀(randomInts_₀_₀(111, 47), _lh_process_arg1²)
//│ 		where
//│ 		def doInput_₀_₀(_lh_doInput_arg1⁴, _lh_doInput_arg2²) = 
//│ 			_lh_doInput_arg2²(_lh_doInput_arg1⁴)
//│ 			where
//│ 			def doLine_₀_₀(_lh_doLine_arg1², _lh_doLine_arg2³, _lh_doLine_arg3²) = 
//│ 				let n¹⁰ = int_val_of_string_₀_₀(_lh_doLine_arg1²)
//│ 				in let _lh_matchIdent³⁰ = multiTest_₀_₀(100, _lh_doLine_arg3², n¹⁰)
//│ 				in _lh_matchIdent³⁰(_lh_doLine_arg2³)
//│ 				where
//│ 				def int_val_of_string_₀_₀(_lh_int_val_of_string_arg1²) = 
//│ 					let f³¹ = (fun _lh_f_arg1⁴ -> (fun _lh_f_arg2⁵ -> _lh_f_arg1⁴(_lh_f_arg2⁵, f³¹)))
//│ 					in f³¹(_lh_int_val_of_string_arg1², 0)
//│ 					where
//│ 					def int_val_of_char_₀_₀(_lh_int_val_of_char_arg1²) = 
//│ 						(int_of_char⁰(_lh_int_val_of_char_arg1²) - 48)
//│ 				def multiTest_₀_₀(_lh_multiTest_arg1², _lh_multiTest_arg2², _lh_multiTest_arg3²) = 
//│ 					let mTest³ = (fun k⁶ -> (fun rs² -> if (k⁶ == 0) then 
//│ 						let _lh_doLine_LH_P2_1³ = rs²
//│ 						in let _lh_doLine_LH_P2_0³ = [True]
//│ 						in (fun _lh_doLine_arg2⁴ -> if _lh_doLine_LH_P2_0³ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁴(_lh_doLine_LH_P2_1³)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁴(_lh_doLine_LH_P2_1³)]) else 
//│ 						let _lh_matchIdent³¹ = singleTest_₀_₀(_lh_multiTest_arg3², findKQ_₀_₀(_lh_multiTest_arg3²), rs²)
//│ 						in _lh_matchIdent³¹(k⁶, mTest³)))
//│ 					in if ((_lh_multiTest_arg3² <= 1) || even_₀_₀(_lh_multiTest_arg3²)) then 
//│ 						let _lh_doLine_LH_P2_1⁴ = _lh_multiTest_arg2²
//│ 						in let _lh_doLine_LH_P2_0⁴ = (_lh_multiTest_arg3² == 2)
//│ 						in (fun _lh_doLine_arg2⁵ -> if _lh_doLine_LH_P2_0⁴ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁵(_lh_doLine_LH_P2_1⁴)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁵(_lh_doLine_LH_P2_1⁴)]) else mTest³(_lh_multiTest_arg1², _lh_multiTest_arg2²)
//│ 					where
//│ 					def even_₀_₀(_lh_even_arg1⁴) = 
//│ 						((_lh_even_arg1⁴ % 2) == 0)
//│ 					def findKQ_₀_₀(_lh_findKQ_arg1²) = 
//│ 						let f³⁹ = (fun _lh_f_arg1⁵ -> case _lh_f_arg1⁵ of {
//│ 							LH_P2 _lh_f_LH_P2_0² _lh_f_LH_P2_1² => 
//│ 								let _lh_matchIdent³⁴ = divmod_₀_₀(_lh_f_LH_P2_1², 2)
//│ 								in _lh_matchIdent³⁴(_lh_f_LH_P2_0², _lh_f_LH_P2_1², f³⁹)
//│ 							| _  => error⁰})
//│ 						in f³⁹([LH_P2 0 (_lh_findKQ_arg1² - 1)])
//│ 						where
//│ 						def divmod_₀_₀(_lh_divmod_arg1⁴, _lh_divmod_arg2⁴) = 
//│ 							let _lh_f_LH_P2_1⁴ = (_lh_divmod_arg1⁴ % _lh_divmod_arg2⁴)
//│ 							in let _lh_f_LH_P2_0⁴ = div⁰(_lh_divmod_arg1⁴, _lh_divmod_arg2⁴)
//│ 							in (fun _lh_f_LH_P2_0⁵ -> (fun _lh_f_LH_P2_1⁵ -> (fun f²⁹ -> if (_lh_f_LH_P2_1⁴ == 0) then f²⁹([LH_P2 (_lh_f_LH_P2_0⁵ + 1) _lh_f_LH_P2_0⁴]) else [LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵])))
//│ 					def singleTest_₀_₀(_lh_singleTest_arg1³, _lh_singleTest_arg2³, _lh_singleTest_arg3²) = 
//│ 						let _lh_matchIdent³⁵ = random_₀_₀((_lh_singleTest_arg1³ - 2), _lh_singleTest_arg3²)
//│ 						in _lh_matchIdent³⁵(_lh_singleTest_arg1³, _lh_singleTest_arg2³)
//│ 						where
//│ 						def random_₀_₀(_lh_random_arg1², _lh_random_arg2²) = 
//│ 							let ns³ = chop_₀_₀(65536, _lh_random_arg1²)
//│ 							in let _lh_matchIdent²⁹ = splitAt_lz_₀_₀(length_₀_₀(ns³), _lh_random_arg2²)
//│ 							in _lh_matchIdent²⁹(ns³)
//│ 							where
//│ 							def chop_₀_₀(_lh_chop_arg1²) = 
//│ 								let chop'² = (fun a⁹ -> (fun n¹² -> 
//│ 									let _lh_matchIdent³³ = divmod_₁_₀(n¹², _lh_chop_arg1²)
//│ 									in _lh_matchIdent³³(a⁹, chop'², n¹²)))
//│ 								in chop'²([LH_N])
//│ 								where
//│ 								def divmod_₁_₀(_lh_divmod_arg1⁵, _lh_divmod_arg2⁵) = 
//│ 									let _lh_chop_LH_P2_1² = (_lh_divmod_arg1⁵ % _lh_divmod_arg2⁵)
//│ 									in let _lh_chop_LH_P2_0² = div⁰(_lh_divmod_arg1⁵, _lh_divmod_arg2⁵)
//│ 									in (fun a¹⁰ -> (fun chop'³ -> (fun n¹³ -> if (n¹³ == 0) then a¹⁰ else chop'³([LH_C _lh_chop_LH_P2_1² a¹⁰], _lh_chop_LH_P2_0²))))
//│ 							def length_₀_₀(ls¹⁸) = 
//│ 								case ls¹⁸ of {
//│ 									LH_C h¹¹ t¹⁷ => (1 + length_₀_₀(t¹⁷))
//│ 									| LH_N  => 0}
//│ 							def makeNumber_₀_₀(_lh_makeNumber_arg1²) = 
//│ 								foldl_₀_₀((fun a⁸ -> (fun x¹⁷ -> ((a⁸ * _lh_makeNumber_arg1²) + x¹⁷))), 0)
//│ 								where
//│ 								def foldl_₀_₀(f³⁰, i¹², ls¹⁹) = 
//│ 									ls¹⁹(f³⁰, i¹²)
//│ 							def splitAt_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 								let _lh_random_LH_P2_1² = drop_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 								in let _lh_random_LH_P2_0² = take_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 								in (fun ns² -> 
//│ 									let _lh_singleTest_LH_P2_1² = _lh_random_LH_P2_1²
//│ 									in let _lh_singleTest_LH_P2_0² = makeNumber_₀_₀(65536, uniform_₀_₀(ns², _lh_random_LH_P2_0²))
//│ 									in (fun _lh_singleTest_arg1² -> (fun _lh_singleTest_arg2² -> 
//│ 										let _lh_multiTest_LH_P2_1² = _lh_singleTest_LH_P2_1²
//│ 										in let _lh_multiTest_LH_P2_0² = singleTestX_₀_₀(_lh_singleTest_arg1², _lh_singleTest_arg2², (2 + _lh_singleTest_LH_P2_0²))
//│ 										in (fun k⁴ -> (fun mTest² -> if _lh_multiTest_LH_P2_0² then mTest²((k⁴ - 1), _lh_multiTest_LH_P2_1²) else 
//│ 											let _lh_doLine_LH_P2_1² = _lh_multiTest_LH_P2_1²
//│ 											in let _lh_doLine_LH_P2_0² = [False]
//│ 											in (fun _lh_doLine_arg2² -> if _lh_doLine_LH_P2_0² then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2²(_lh_doLine_LH_P2_1²)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2²(_lh_doLine_LH_P2_1²)]))))))
//│ 								where
//│ 								def drop_lz_₀_₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 									let _lh_matchIdent³² = force⁰(_lh_drop_lz_arg2²)
//│ 									in case _lh_matchIdent³² of {
//│ 										LH_N  => lazy⁰([LH_N])
//│ 										| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1² > 0) then drop_lz_₀_₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹
//│ 										| _  => error⁰}
//│ 								def take_lz_₀_₀(n¹¹, ls¹⁷) = 
//│ 									if (n¹¹ > 0) then case force⁰(ls¹⁷) of {
//│ 										LH_C h¹⁰ t¹⁶ => [LH_C h¹⁰ take_lz_₀_₀((n¹¹ - 1), t¹⁶)]
//│ 										| LH_N  => [LH_N]} else [LH_N]
//│ 							def uniform_₀_₀(_lh_uniform_arg1², _lh_uniform_arg2²) = 
//│ 								case _lh_uniform_arg1² of {
//│ 									LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {
//│ 										LH_N  => case _lh_uniform_arg2² of {
//│ 											LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {
//│ 												LH_N  => 
//│ 													let t²⁰ = (fun f²² -> (fun i⁵ -> i⁵))
//│ 													in let h¹⁴ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ 													in (fun f²¹ -> (fun i⁴ -> foldl_₀_₀(f²¹, f²¹(i⁴, h¹⁴), t²⁰)))
//│ 												| _  => case _lh_uniform_arg2² of {
//│ 													LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => 
//│ 														let t²¹ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 														in if (t²¹ == _lh_uniform_LH_C_0⁵) then 
//│ 															let t²² = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ 															in let h¹⁵ = t²¹
//│ 															in (fun f²³ -> (fun i⁶ -> foldl_₀_₀(f²³, f²³(i⁶, h¹⁵), t²²))) else 
//│ 															let t²³ = map_₀_₀((fun x¹⁸ -> (x¹⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ 															in let h¹⁶ = t²¹
//│ 															in (fun f²⁴ -> (fun i⁷ -> foldl_₀_₀(f²⁴, f²⁴(i⁷, h¹⁶), t²³)))
//│ 													| _  => error⁰}}
//│ 											| _  => case _lh_uniform_arg2² of {
//│ 												LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => 
//│ 													let t²⁴ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 													in if (t²⁴ == _lh_uniform_LH_C_0⁵) then 
//│ 														let t²⁵ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ 														in let h¹⁷ = t²⁴
//│ 														in (fun f²⁵ -> (fun i⁸ -> foldl_₀_₀(f²⁵, f²⁵(i⁸, h¹⁷), t²⁵))) else 
//│ 														let t²⁶ = map_₀_₁((fun x¹⁹ -> (x¹⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ 														in let h¹⁸ = t²⁴
//│ 														in (fun f²⁶ -> (fun i⁹ -> foldl_₀_₀(f²⁶, f²⁶(i⁹, h¹⁸), t²⁶)))
//│ 												| _  => error⁰}}
//│ 										| _  => case _lh_uniform_arg2² of {
//│ 											LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => 
//│ 												let t²⁷ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 												in if (t²⁷ == _lh_uniform_LH_C_0⁵) then 
//│ 													let t²⁸ = uniform_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ 													in let h¹⁹ = t²⁷
//│ 													in (fun f²⁷ -> (fun i¹⁰ -> foldl_₀_₀(f²⁷, f²⁷(i¹⁰, h¹⁹), t²⁸))) else 
//│ 													let t²⁹ = map_₀_₂((fun x²⁰ -> (x²⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ 													in let h²⁰ = t²⁷
//│ 													in (fun f²⁸ -> (fun i¹¹ -> foldl_₀_₀(f²⁸, f²⁸(i¹¹, h²⁰), t²⁹)))
//│ 											| _  => error⁰}}
//│ 									| _  => error⁰}
//│ 								where
//│ 								def map_₀_₀(f³², ls²⁰) = 
//│ 									case ls²⁰ of {
//│ 										LH_C h⁶ t¹² => 
//│ 											let t³⁰ = map_₀_₀(f³², t¹²)
//│ 											in let h²¹ = f³²(h⁶)
//│ 											in (fun f³³ -> (fun i¹³ -> foldl_₀_₀(f³³, f³³(i¹³, h²¹), t³⁰)))
//│ 										| LH_N  => (fun f³⁴ -> (fun i¹⁴ -> i¹⁴))}
//│ 								def map_₀_₁(f¹⁷, ls¹⁵) = 
//│ 									case ls¹⁵ of {
//│ 										LH_C h⁹ t¹⁵ => 
//│ 											let t¹⁸ = map_₀_₁(f¹⁷, t¹⁵)
//│ 											in let h¹² = f¹⁷(h⁹)
//│ 											in (fun f¹⁸ -> (fun i² -> foldl_₀_₀(f¹⁸, f¹⁸(i², h¹²), t¹⁸)))
//│ 										| LH_N  => (fun f¹⁹ -> (fun i³ -> i³))}
//│ 								def map_₀_₂(f³⁵, ls²¹) = 
//│ 									case ls²¹ of {
//│ 										LH_C h⁸ t¹⁴ => 
//│ 											let t³¹ = map_₀_₂(f³⁵, t¹⁴)
//│ 											in let h²² = f³⁵(h⁸)
//│ 											in (fun f³⁶ -> (fun i¹⁵ -> foldl_₀_₀(f³⁶, f³⁶(i¹⁵, h²²), t³¹)))
//│ 										| LH_N  => (fun f³⁷ -> (fun i¹⁶ -> i¹⁶))}
//│ 						def singleTestX_₀_₀(_lh_singleTestX_arg1², _lh_singleTestX_arg2², _lh_singleTestX_arg3²) = 
//│ 							case _lh_singleTestX_arg2² of {
//│ 								LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => 
//│ 									let square² = (fun x¹⁶ -> ((x¹⁶ * x¹⁶) % _lh_singleTestX_arg1²))
//│ 									in let witness² = (fun ls¹⁶ -> 
//│ 										let _lh_matchIdent²⁷ = ls¹⁶
//│ 										in case _lh_matchIdent²⁷ of {
//│ 											LH_N  => [False]
//│ 											| LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1² - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness²(_lh_singleTestX_LH_C_1²)
//│ 											| _  => error⁰})
//│ 									in let _lh_matchIdent²⁸ = take_lz_₁_₀(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀(square², powerMod_₀_₀(_lh_singleTestX_arg3², _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1²)))
//│ 									in case _lh_matchIdent²⁸ of {
//│ 										LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1² - 1))) || witness²(_lh_singleTestX_LH_C_1³))
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def iterate_₀_₀(f²⁰, x¹⁵) = 
//│ 								lazy⁰(
//│ 									let t¹⁹ = iterate_₀_₀(f²⁰, f²⁰(x¹⁵))
//│ 									in let h¹³ = x¹⁵
//│ 									in (fun n⁹ -> [LH_C h¹³ take_lz_₁_₀((n⁹ - 1), t¹⁹)]))
//│ 							def powerMod_₀_₀(_lh_powerMod_arg1², _lh_powerMod_arg2², _lh_powerMod_arg3²) = 
//│ 								case _lh_powerMod_arg2² of {
//│ 									0  => 1
//│ 									| _  => 
//│ 										let a'² = (_lh_powerMod_arg1² mod _lh_powerMod_arg3²)
//│ 										in let f³⁸ = (fun a¹¹ -> (fun b⁴ -> (fun c² -> 
//│ 											let g² = (fun a¹² -> (fun b⁵ -> if even_₁_₀(b⁵) then g²(((a¹² * a¹²) % _lh_powerMod_arg3²), div⁰(b⁵, 2)) else f³⁸(a¹², (b⁵ - 1), ((a¹² * c²) % _lh_powerMod_arg3²))))
//│ 											in if (b⁴ == 0) then c² else g²(a¹¹, b⁴))))
//│ 										in f³⁸(a'², (_lh_powerMod_arg2² - 1), a'²)}
//│ 								where
//│ 								def even_₁_₀(_lh_even_arg1⁵) = 
//│ 									((_lh_even_arg1⁵ % 2) == 0)
//│ 							def take_lz_₁_₀(n⁸, ls¹⁴) = 
//│ 								if (n⁸ > 0) then force⁰(ls¹⁴, n⁸) else [LH_N]
//│ 		def randomInts_₀_₀(_lh_randomInts_arg1², _lh_randomInts_arg2²) = 
//│ 			if ((1 <= _lh_randomInts_arg1²) && (_lh_randomInts_arg1² <= 2147483562)) then if ((1 <= _lh_randomInts_arg2²) && (_lh_randomInts_arg2² <= 2147483398)) then rands_₀_₀(_lh_randomInts_arg1², _lh_randomInts_arg2²) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 			where
//│ 			def rands_₀_₀(_lh_rands_arg1², _lh_rands_arg2²) = 
//│ 				let k⁵ = div⁰(_lh_rands_arg1², 53668)
//│ 				in let s1'² = ((40014 * (_lh_rands_arg1² - (k⁵ * 53668))) - (k⁵ * 12211))
//│ 				in let s1''² = if (s1'² < 0) then (s1'² + 2147483563) else s1'²
//│ 				in let k'² = div⁰(_lh_rands_arg2², 52774)
//│ 				in let s2'² = ((40692 * (_lh_rands_arg2² - (k'² * 52774))) - (k'² * 3791))
//│ 				in let s2''² = if (s2'² < 0) then (s2'² + 2147483399) else s2'²
//│ 				in let z² = (s1''² - s2''²)
//│ 				in if (z² < 1) then lazy⁰([LH_C (z² + 2147483562) rands_₀_₀(s1''², s2''²)]) else lazy⁰([LH_C z² rands_₀_₀(s1''², s2''²)])
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPrimetest_nofib_₀_₀^1] (hopeless to continue)
//│ 	[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46] (using original def)
//│ 		[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · break_₀_₀^229] (using original def)
//│ 			[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · break_₀_₀^229 · break_₀_₀^192] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · break_₀_₀^229] (using original def)
//│ 			[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · break_₀_₀^229 · int_val_of_char_₀_₀^210] (using original def)
//│ 			[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · break_₀_₀^229 · lines_₀_₀^186] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46] (using original def)
//│ 		[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doInput_₀_₀^249] (using original def)
//│ 		[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246] (using original def)
//│ 			[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · int_val_of_string_₀_₀^752] (using original def)
//│ 			[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755] (using original def)
//│ 				[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · even_₀_₀^863] (using original def)
//│ 				[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · findKQ_₀_₀^841] (using original def)
//│ 					[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · findKQ_₀_₀^841 · divmod_₀_₀^1509] (using original def)
//│ 				[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838] (using original def)
//│ 					[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536] (using original def)
//│ 						[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · chop_₀_₀^717] (using original def)
//│ 							[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · chop_₀_₀^717 · divmod_₁_₀^1291] (using original def)
//│ 						[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · length_₀_₀^723] (using original def)
//│ 							[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · length_₀_₀^723 · length_₀_₀^973] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · length_₀_₀^723] (using original def)
//│ 						[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722] (using original def)
//│ 							[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · drop_lz_₀_₀^52] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · drop_lz_₀_₀^52 · drop_lz_₀_₀^1267] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · drop_lz_₀_₀^52] (using original def)
//│ 							[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · makeNumber_₀_₀^63] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · makeNumber_₀_₀^63 · foldl_₀_₀^736] (using original def)
//│ 							[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · singleTestX_₀_₀^73] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · singleTestX_₀_₀^73 · iterate_₀_₀^402] (using original def)
//│ 									[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · singleTestX_₀_₀^73 · iterate_₀_₀^402 · iterate_₀_₀^320] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · singleTestX_₀_₀^73 · iterate_₀_₀^402] (using original def)
//│ 									[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · singleTestX_₀_₀^73 · iterate_₀_₀^402 · take_lz_₁_₀^329] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · singleTestX_₀_₀^73 · powerMod_₀_₀^405] (using original def)
//│ 									[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · singleTestX_₀_₀^73 · powerMod_₀_₀^405 · even_₁_₀^1433] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · singleTestX_₀_₀^73 · take_lz_₁_₀^399] (using original def)
//│ 							[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · take_lz_₀_₀^57] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · take_lz_₀_₀^57 · take_lz_₀_₀^953] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · take_lz_₀_₀^57] (using original def)
//│ 							[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · foldl_₀_₀^1028] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · foldl_₀_₀^1054] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · foldl_₀_₀^1095] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · foldl_₀_₀^1121] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · foldl_₀_₀^1162] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · foldl_₀_₀^1188] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · foldl_₀_₀^992] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₀^1043] (using original def)
//│ 									[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₀^1043 · foldl_₀_₀^1334] (using original def)
//│ 									[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₀^1043 · map_₀_₀^1326] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₀^1043] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₁^1110] (using original def)
//│ 									[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₁^1110 · foldl_₀_₀^288] (using original def)
//│ 									[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₁^1110 · map_₀_₁^280] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₁^1110] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₂^1177] (using original def)
//│ 									[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₂^1177 · foldl_₀_₀^1374] (using original def)
//│ 									[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₂^1177 · map_₀_₂^1366] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · map_₀_₂^1177] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · uniform_₀_₀^1022] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · uniform_₀_₀^1089] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66] (using original def)
//│ 								[testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66 · uniform_₀_₀^1156] ---> [testPrimetest_nofib_₀_₀^1 · lines_₀_₀^46 · doLine_₀_₀^246 · multiTest_₀_₀^755 · singleTest_₀_₀^838 · random_₀_₀^1536 · splitAt_lz_₀_₀^722 · uniform_₀_₀^66] (using original def)
//│ 	[testPrimetest_nofib_₀_₀^1 · process_₀_₀^45] (using original def)
//│ 		[testPrimetest_nofib_₀_₀^1 · process_₀_₀^45 · doInput_₀_₀^309] (using original def)
//│ 		[testPrimetest_nofib_₀_₀^1 · process_₀_₀^45 · randomInts_₀_₀^310] (using original def)
//│ 			[testPrimetest_nofib_₀_₀^1 · process_₀_₀^45 · randomInts_₀_₀^310 · rands_₀_₀^592] (using original def)
//│ 				[testPrimetest_nofib_₀_₀^1 · process_₀_₀^45 · randomInts_₀_₀^310 · rands_₀_₀^592 · rands_₀_₀^540] ---> [testPrimetest_nofib_₀_₀^1 · process_₀_₀^45 · randomInts_₀_₀^310 · rands_₀_₀^592] (using original def)
//│ 				[testPrimetest_nofib_₀_₀^1 · process_₀_₀^45 · randomInts_₀_₀^310 · rands_₀_₀^592 · rands_₀_₀^549] ---> [testPrimetest_nofib_₀_₀^1 · process_₀_₀^45 · randomInts_₀_₀^310 · rands_₀_₀^592] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPrimetest_nofib_₀_₀_₀(primId⁰(0))
//│ def testPrimetest_nofib_₀_₀_₀(_lh_testPrimetest_nofib_arg1¹) = 
//│ 	let cts¹ = primId⁰([LH_C '2' [LH_C '4' [LH_C '|' [LH_C '4' [LH_C '8' [LH_C '|' [LH_C '4' [LH_C '7' [LH_C '|' [LH_C '1' [LH_C '3' [LH_C '1' [LH_C '7' [LH_C '|' [LH_C '8' [LH_C '9' [LH_C '0' [LH_C '1' [LH_N]]]]]]]]]]]]]]]]]]])
//│ 	in process_₀_₀_₀(lines_₀_₀_₀(cts¹))
//│ 	where
//│ 	def lines_₀_₀_₀(_lh_lines_arg1¹) = 
//│ 		let _lh_matchIdent²¹ = break_₀_₀_₀((fun x¹³ -> polyEq⁰(x¹³, '|')), _lh_lines_arg1¹)
//│ 		in case _lh_matchIdent²¹ of {
//│ 			LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => 
//│ 				let _lh_doInput_LH_C_1¹ = 	
//│ 					let _lh_matchIdent²² = _lh_lines_LH_P2_1¹
//│ 					in _lh_matchIdent²²(99)
//│ 				in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ 				in (fun _lh_doInput_arg1⁶ -> doLine_₀_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁶))
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break_₀_₀_₀(_lh_break_arg1¹, _lh_break_arg2¹) = 
//│ 			case _lh_break_arg2¹ of {
//│ 				LH_N  => [LH_P2 (fun _lh_f_arg2⁵ -> (fun f⁵¹ -> _lh_f_arg2⁵)) (fun _lh_dummy² -> (fun _lh_doInput_arg1⁵ -> [LH_N]))]
//│ 				| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1¹(_lh_break_LH_C_0¹) then [LH_P2 (fun _lh_f_arg2⁶ -> (fun f⁵² -> _lh_f_arg2⁶)) 
//│ 					let _lh_lines_LH_C_1¹ = _lh_break_LH_C_1¹
//│ 					in (fun _lh_dummy³ -> lines_₀_₀_₀(_lh_lines_LH_C_1¹))] else 
//│ 					let _lh_matchIdent²⁰ = break_₀_₀_₀(_lh_break_arg1¹, _lh_break_LH_C_1¹)
//│ 					in case _lh_matchIdent²⁰ of {
//│ 						LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 
//│ 							let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ 							in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ 							in (fun _lh_f_arg2⁷ -> (fun f⁵³ -> f⁵³(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def int_val_of_char_₀_₀_₀(_lh_int_val_of_char_arg1¹) = 
//│ 				(int_of_char⁰(_lh_int_val_of_char_arg1¹) - 48)
//│ 		def doInput_₀_₀_₀(_lh_doInput_arg1⁴, _lh_doInput_arg2²) = 
//│ 			_lh_doInput_arg2²(_lh_doInput_arg1⁴)
//│ 		def doLine_₀_₀_₀(_lh_doLine_arg1¹, _lh_doLine_arg2⁷, _lh_doLine_arg3¹) = 
//│ 			let n¹² = int_val_of_string_₀_₀_₀(_lh_doLine_arg1¹)
//│ 			in let _lh_matchIdent²³ = multiTest_₀_₀_₀(100, _lh_doLine_arg3¹, n¹²)
//│ 			in _lh_matchIdent²³(_lh_doLine_arg2⁷)
//│ 			where
//│ 			def int_val_of_string_₀_₀_₀(_lh_int_val_of_string_arg1¹) = 
//│ 				let f⁴⁰ = (fun _lh_f_arg1³ -> (fun _lh_f_arg2⁴ -> _lh_f_arg1³(_lh_f_arg2⁴, f⁴⁰)))
//│ 				in f⁴⁰(_lh_int_val_of_string_arg1¹, 0)
//│ 			def multiTest_₀_₀_₀(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹, _lh_multiTest_arg3¹) = 
//│ 				let mTest³ = (fun k⁴ -> (fun rs¹ -> if (k⁴ == 0) then 
//│ 					let _lh_doLine_LH_P2_1⁴ = rs¹
//│ 					in let _lh_doLine_LH_P2_0⁴ = [True]
//│ 					in (fun _lh_doLine_arg2⁵ -> if _lh_doLine_LH_P2_0⁴ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁵(_lh_doLine_LH_P2_1⁴)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁵(_lh_doLine_LH_P2_1⁴)]) else 
//│ 					let _lh_matchIdent¹⁹ = singleTest_₀_₀_₀(_lh_multiTest_arg3¹, findKQ_₀_₀_₀(_lh_multiTest_arg3¹), rs¹)
//│ 					in _lh_matchIdent¹⁹(k⁴, mTest³)))
//│ 				in if ((_lh_multiTest_arg3¹ <= 1) || even_₀_₀_₀(_lh_multiTest_arg3¹)) then 
//│ 					let _lh_doLine_LH_P2_1⁵ = _lh_multiTest_arg2¹
//│ 					in let _lh_doLine_LH_P2_0⁵ = (_lh_multiTest_arg3¹ == 2)
//│ 					in (fun _lh_doLine_arg2⁶ -> if _lh_doLine_LH_P2_0⁵ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁶(_lh_doLine_LH_P2_1⁵)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁶(_lh_doLine_LH_P2_1⁵)]) else mTest³(_lh_multiTest_arg1¹, _lh_multiTest_arg2¹)
//│ 				where
//│ 				def even_₀_₀_₀(_lh_even_arg1²) = 
//│ 					((_lh_even_arg1² % 2) == 0)
//│ 				def findKQ_₀_₀_₀(_lh_findKQ_arg1¹) = 
//│ 					let f²⁹ = (fun _lh_f_arg1² -> case _lh_f_arg1² of {
//│ 						LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => 
//│ 							let _lh_matchIdent¹⁶ = divmod_₀_₀_₀(_lh_f_LH_P2_1³, 2)
//│ 							in _lh_matchIdent¹⁶(_lh_f_LH_P2_0³, _lh_f_LH_P2_1³, f²⁹)
//│ 						| _  => error⁰})
//│ 					in f²⁹([LH_P2 0 (_lh_findKQ_arg1¹ - 1)])
//│ 					where
//│ 					def divmod_₀_₀_₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 						let _lh_f_LH_P2_1⁴ = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 						in let _lh_f_LH_P2_0⁴ = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 						in (fun _lh_f_LH_P2_0⁵ -> (fun _lh_f_LH_P2_1⁵ -> (fun f⁴¹ -> if (_lh_f_LH_P2_1⁴ == 0) then f⁴¹([LH_P2 (_lh_f_LH_P2_0⁵ + 1) _lh_f_LH_P2_0⁴]) else [LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵])))
//│ 				def singleTest_₀_₀_₀(_lh_singleTest_arg1³, _lh_singleTest_arg2³, _lh_singleTest_arg3¹) = 
//│ 					let _lh_matchIdent¹⁷ = random_₀_₀_₀((_lh_singleTest_arg1³ - 2), _lh_singleTest_arg3¹)
//│ 					in _lh_matchIdent¹⁷(_lh_singleTest_arg1³, _lh_singleTest_arg2³)
//│ 					where
//│ 					def random_₀_₀_₀(_lh_random_arg1¹, _lh_random_arg2¹) = 
//│ 						let ns³ = chop_₀_₀_₀(65536, _lh_random_arg1¹)
//│ 						in let _lh_matchIdent¹⁸ = splitAt_lz_₀_₀_₀(length_₀_₀_₀(ns³), _lh_random_arg2¹)
//│ 						in _lh_matchIdent¹⁸(ns³)
//│ 						where
//│ 						def chop_₀_₀_₀(_lh_chop_arg1¹) = 
//│ 							let chop'² = (fun a⁵ -> (fun n⁷ -> 
//│ 								let _lh_matchIdent¹⁵ = divmod_₁_₀_₀(n⁷, _lh_chop_arg1¹)
//│ 								in _lh_matchIdent¹⁵(a⁵, chop'², n⁷)))
//│ 							in chop'²([LH_N])
//│ 							where
//│ 							def divmod_₁_₀_₀(_lh_divmod_arg1³, _lh_divmod_arg2³) = 
//│ 								let _lh_chop_LH_P2_1¹ = (_lh_divmod_arg1³ % _lh_divmod_arg2³)
//│ 								in let _lh_chop_LH_P2_0¹ = div⁰(_lh_divmod_arg1³, _lh_divmod_arg2³)
//│ 								in (fun a⁶ -> (fun chop'³ -> (fun n¹⁰ -> if (n¹⁰ == 0) then a⁶ else chop'³([LH_C _lh_chop_LH_P2_1¹ a⁶], _lh_chop_LH_P2_0¹))))
//│ 						def length_₀_₀_₀(ls²²) = 
//│ 							case ls²² of {
//│ 								LH_C h²⁹ t³⁵ => (1 + length_₀_₀_₀(t³⁵))
//│ 								| LH_N  => 0}
//│ 						def splitAt_lz_₀_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = 
//│ 							let _lh_random_LH_P2_1¹ = drop_lz_₀_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)
//│ 							in let _lh_random_LH_P2_0¹ = take_lz_₀_₀_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)
//│ 							in (fun ns² -> 
//│ 								let _lh_singleTest_LH_P2_1¹ = _lh_random_LH_P2_1¹
//│ 								in let _lh_singleTest_LH_P2_0¹ = makeNumber_₀_₀_₀(65536, uniform_₀_₀_₀(ns², _lh_random_LH_P2_0¹))
//│ 								in (fun _lh_singleTest_arg1² -> (fun _lh_singleTest_arg2² -> 
//│ 									let _lh_multiTest_LH_P2_1¹ = _lh_singleTest_LH_P2_1¹
//│ 									in let _lh_multiTest_LH_P2_0¹ = singleTestX_₀_₀_₀(_lh_singleTest_arg1², _lh_singleTest_arg2², (2 + _lh_singleTest_LH_P2_0¹))
//│ 									in (fun k³ -> (fun mTest² -> if _lh_multiTest_LH_P2_0¹ then mTest²((k³ - 1), _lh_multiTest_LH_P2_1¹) else 
//│ 										let _lh_doLine_LH_P2_1³ = _lh_multiTest_LH_P2_1¹
//│ 										in let _lh_doLine_LH_P2_0³ = [False]
//│ 										in (fun _lh_doLine_arg2⁴ -> if _lh_doLine_LH_P2_0³ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁴(_lh_doLine_LH_P2_1³)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁴(_lh_doLine_LH_P2_1³)]))))))
//│ 							where
//│ 							def drop_lz_₀_₀_₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = 
//│ 								let _lh_matchIdent¹² = force⁰(_lh_drop_lz_arg2¹)
//│ 								in case _lh_matchIdent¹² of {
//│ 									LH_N  => lazy⁰([LH_N])
//│ 									| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹
//│ 									| _  => error⁰}
//│ 							def makeNumber_₀_₀_₀(_lh_makeNumber_arg1¹) = 
//│ 								foldl_₀_₀_₀((fun a⁷ -> (fun x¹² -> ((a⁷ * _lh_makeNumber_arg1¹) + x¹²))), 0)
//│ 								where
//│ 								def foldl_₀_₀_₀(f⁶¹, i³⁹, ls²⁶) = 
//│ 									ls²⁶(f⁶¹, i³⁹)
//│ 							def singleTestX_₀_₀_₀(_lh_singleTestX_arg1¹, _lh_singleTestX_arg2¹, _lh_singleTestX_arg3¹) = 
//│ 								case _lh_singleTestX_arg2¹ of {
//│ 									LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => 
//│ 										let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ 										in let witness¹ = (fun ls⁹ -> 
//│ 											let _lh_matchIdent¹³ = ls⁹
//│ 											in case _lh_matchIdent¹³ of {
//│ 												LH_N  => [False]
//│ 												| LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²)
//│ 												| _  => error⁰})
//│ 										in let _lh_matchIdent¹⁴ = take_lz_₁_₀_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀_₀(square¹, powerMod_₀_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ 										in case _lh_matchIdent¹⁴ of {
//│ 											LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³))
//│ 											| _  => error⁰}
//│ 									| _  => error⁰}
//│ 								where
//│ 								def iterate_₀_₀_₀(f⁴³, x¹¹) = 
//│ 									lazy⁰(
//│ 										let t³¹ = iterate_₀_₀_₀(f⁴³, f⁴³(x¹¹))
//│ 										in let h²⁵ = x¹¹
//│ 										in (fun n⁸ -> [LH_C h²⁵ take_lz_₁_₀_₀((n⁸ - 1), t³¹)]))
//│ 									where
//│ 									def take_lz_₁_₀_₀(n⁹, ls¹⁷) = 
//│ 										if (n⁹ > 0) then force⁰(ls¹⁷, n⁹) else [LH_N]
//│ 								def powerMod_₀_₀_₀(_lh_powerMod_arg1¹, _lh_powerMod_arg2¹, _lh_powerMod_arg3¹) = 
//│ 									case _lh_powerMod_arg2¹ of {
//│ 										0  => 1
//│ 										| _  => 
//│ 											let a'¹ = (_lh_powerMod_arg1¹ mod _lh_powerMod_arg3¹)
//│ 											in let f⁵⁵ = (fun a⁸ -> (fun b² -> (fun c¹ -> 
//│ 												let g¹ = (fun a⁹ -> (fun b³ -> if even_₁_₀_₀(b³) then g¹(((a⁹ * a⁹) % _lh_powerMod_arg3¹), div⁰(b³, 2)) else f⁵⁵(a⁹, (b³ - 1), ((a⁹ * c¹) % _lh_powerMod_arg3¹))))
//│ 												in if (b² == 0) then c¹ else g¹(a⁸, b²))))
//│ 											in f⁵⁵(a'¹, (_lh_powerMod_arg2¹ - 1), a'¹)}
//│ 									where
//│ 									def even_₁_₀_₀(_lh_even_arg1³) = 
//│ 										((_lh_even_arg1³ % 2) == 0)
//│ 								def take_lz_₁_₀_₁(n⁶, ls⁸) = 
//│ 									if (n⁶ > 0) then force⁰(ls⁸, n⁶) else [LH_N]
//│ 							def take_lz_₀_₀_₀(n¹¹, ls²⁰) = 
//│ 								if (n¹¹ > 0) then case force⁰(ls²⁰) of {
//│ 									LH_C h²⁸ t³⁴ => [LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]
//│ 									| LH_N  => [LH_N]} else [LH_N]
//│ 							def uniform_₀_₀_₀(_lh_uniform_arg1¹, _lh_uniform_arg2¹) = 
//│ 								case _lh_uniform_arg1¹ of {
//│ 									LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {
//│ 										LH_N  => case _lh_uniform_arg2¹ of {
//│ 											LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {
//│ 												LH_N  => 
//│ 													let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ 													in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ 													in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹)))
//│ 												| _  => case _lh_uniform_arg2¹ of {
//│ 													LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => 
//│ 														let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 														in if (t²² == _lh_uniform_LH_C_0⁵) then 
//│ 															let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ 															in let h¹⁹ = t²²
//│ 															in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else 
//│ 															let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ 															in let h²⁰ = t²²
//│ 															in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴)))
//│ 													| _  => error⁰}}
//│ 											| _  => case _lh_uniform_arg2¹ of {
//│ 												LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => 
//│ 													let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 													in if (t²⁵ == _lh_uniform_LH_C_0⁵) then 
//│ 														let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ 														in let h²¹ = t²⁵
//│ 														in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else 
//│ 														let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ 														in let h²² = t²⁵
//│ 														in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷)))
//│ 												| _  => error⁰}}
//│ 										| _  => case _lh_uniform_arg2¹ of {
//│ 											LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => 
//│ 												let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 												in if (t²⁸ == _lh_uniform_LH_C_0⁵) then 
//│ 													let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ 													in let h²³ = t²⁸
//│ 													in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else 
//│ 													let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ 													in let h²⁴ = t²⁸
//│ 													in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰)))
//│ 											| _  => error⁰}}
//│ 									| _  => error⁰}
//│ 								where
//│ 								def foldl_₀_₀_₁(f³⁸, i²⁵, ls¹¹) = 
//│ 									ls¹¹(f³⁸, i²⁵)
//│ 								def foldl_₀_₀_₂(f⁵⁴, i³⁴, ls²¹) = 
//│ 									ls²¹(f⁵⁴, i³⁴)
//│ 								def foldl_₀_₀_₃(f⁵⁶, i³⁵, ls²³) = 
//│ 									ls²³(f⁵⁶, i³⁵)
//│ 								def foldl_₀_₀_₄(f⁴², i²⁷, ls¹³) = 
//│ 									ls¹³(f⁴², i²⁷)
//│ 								def foldl_₀_₀_₅(f⁴⁹, i³², ls¹⁸) = 
//│ 									ls¹⁸(f⁴⁹, i³²)
//│ 								def foldl_₀_₀_₆(f⁴⁴, i²⁸, ls¹⁴) = 
//│ 									ls¹⁴(f⁴⁴, i²⁸)
//│ 								def foldl_₀_₀_₇(f⁵⁰, i³³, ls¹⁹) = 
//│ 									ls¹⁹(f⁵⁰, i³³)
//│ 								def map_₀_₀_₀(f⁴⁶, ls¹⁶) = 
//│ 									case ls¹⁶ of {
//│ 										LH_C h²⁶ t³² => 
//│ 											let t³³ = map_₀_₀_₀(f⁴⁶, t³²)
//│ 											in let h²⁷ = f⁴⁶(h²⁶)
//│ 											in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₀_₈(f⁴⁷, f⁴⁷(i³⁰, h²⁷), t³³)))
//│ 										| LH_N  => (fun f⁴⁸ -> (fun i³¹ -> i³¹))}
//│ 									where
//│ 									def foldl_₀_₀_₈(f⁵⁷, i³⁶, ls²⁴) = 
//│ 										ls²⁴(f⁵⁷, i³⁶)
//│ 								def map_₀_₁_₀(f²⁶, ls¹⁰) = 
//│ 									case ls¹⁰ of {
//│ 										LH_C h¹⁶ t¹⁹ => 
//│ 											let t²⁰ = map_₀_₁_₀(f²⁶, t¹⁹)
//│ 											in let h¹⁷ = f²⁶(h¹⁶)
//│ 											in (fun f²⁷ -> (fun i¹⁵ -> foldl_₀_₀_₉(f²⁷, f²⁷(i¹⁵, h¹⁷), t²⁰)))
//│ 										| LH_N  => (fun f²⁸ -> (fun i¹⁶ -> i¹⁶))}
//│ 									where
//│ 									def foldl_₀_₀_₉(f³⁹, i²⁶, ls¹²) = 
//│ 										ls¹²(f³⁹, i²⁶)
//│ 								def map_₀_₂_₀(f⁵⁸, ls²⁵) = 
//│ 									case ls²⁵ of {
//│ 										LH_C h³⁰ t³⁶ => 
//│ 											let t³⁷ = map_₀_₂_₀(f⁵⁸, t³⁶)
//│ 											in let h³¹ = f⁵⁸(h³⁰)
//│ 											in (fun f⁵⁹ -> (fun i³⁷ -> foldl_₀_₀_₁₀(f⁵⁹, f⁵⁹(i³⁷, h³¹), t³⁷)))
//│ 										| LH_N  => (fun f⁶⁰ -> (fun i³⁸ -> i³⁸))}
//│ 									where
//│ 									def foldl_₀_₀_₁₀(f⁴⁵, i²⁹, ls¹⁵) = 
//│ 										ls¹⁵(f⁴⁵, i²⁹)
//│ 	def process_₀_₀_₀(_lh_process_arg1¹) = 
//│ 		doInput_₀_₀_₁(randomInts_₀_₀_₀(111, 47), _lh_process_arg1¹)
//│ 		where
//│ 		def doInput_₀_₀_₁(_lh_doInput_arg1³, _lh_doInput_arg2¹) = 
//│ 			_lh_doInput_arg2¹(_lh_doInput_arg1³)
//│ 		def randomInts_₀_₀_₀(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) = 
//│ 			if ((1 <= _lh_randomInts_arg1¹) && (_lh_randomInts_arg1¹ <= 2147483562)) then if ((1 <= _lh_randomInts_arg2¹) && (_lh_randomInts_arg2¹ <= 2147483398)) then rands_₀_₀_₀(_lh_randomInts_arg1¹, _lh_randomInts_arg2¹) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 			where
//│ 			def rands_₀_₀_₀(_lh_rands_arg1¹, _lh_rands_arg2¹) = 
//│ 				let k⁵ = div⁰(_lh_rands_arg1¹, 53668)
//│ 				in let s1'¹ = ((40014 * (_lh_rands_arg1¹ - (k⁵ * 53668))) - (k⁵ * 12211))
//│ 				in let s1''¹ = if (s1'¹ < 0) then (s1'¹ + 2147483563) else s1'¹
//│ 				in let k'¹ = div⁰(_lh_rands_arg2¹, 52774)
//│ 				in let s2'¹ = ((40692 * (_lh_rands_arg2¹ - (k'¹ * 52774))) - (k'¹ * 3791))
//│ 				in let s2''¹ = if (s2'¹ < 0) then (s2'¹ + 2147483399) else s2'¹
//│ 				in let z¹ = (s1''¹ - s2''¹)
//│ 				in if (z¹ < 1) then lazy⁰([LH_C (z¹ + 2147483562) rands_₀_₀_₀(s1''¹, s2''¹)]) else lazy⁰([LH_C z¹ rands_₀_₀_₀(s1''¹, s2''¹)])
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 1564 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 1680
//│ [LH_N]: 1573 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent¹² of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 1592
//│ 	case force⁰(ls²⁰) of {LH_C h²⁸ t³⁴ => [LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)] | LH_N  => [LH_N]}: 2795
//│ [LH_N]: 1710 --->
//│ 	case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}}: 2269
//│ 	case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}} | _  => error⁰}: 2271
//│ 	case ls²² of {LH_C h²⁹ t³⁵ => (1 + length_₀_₀_₀(t³⁵)) | LH_N  => 0}: 2973
//│ [LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 1887 --->
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => let _lh_matchIdent¹⁶ = divmod_₀_₀_₀(_lh_f_LH_P2_1³, 2)
//│ in _lh_matchIdent¹⁶(_lh_f_LH_P2_0³, _lh_f_LH_P2_1³, f²⁹) | _  => error⁰}: 1878
//│ [LH_P2 (_lh_f_LH_P2_0⁵ + 1) _lh_f_LH_P2_0⁴]: 2344 --->
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => let _lh_matchIdent¹⁶ = divmod_₀_₀_₀(_lh_f_LH_P2_1³, 2)
//│ in _lh_matchIdent¹⁶(_lh_f_LH_P2_0³, _lh_f_LH_P2_1³, f²⁹) | _  => error⁰}: 1878
//│ [LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵]: 2348 --->
//│ 	case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls⁹ -> let _lh_matchIdent¹³ = ls⁹
//│ in case _lh_matchIdent¹³ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent¹⁴ = take_lz_₁_₀_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀_₀(square¹, powerMod_₀_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent¹⁴ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 1685
//│ [LH_C h²⁵ take_lz_₁_₀_₀((n⁸ - 1), t³¹)]: 2641 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 1637
//│ 	case _lh_matchIdent¹⁴ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 1680
//│ [LH_N]: 2704 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 1637
//│ [LH_C _lh_chop_LH_P2_1¹ a⁶]: 2727 --->
//│ 	case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}}: 2269
//│ 	case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}} | _  => error⁰}: 2271
//│ 	case ls²² of {LH_C h²⁹ t³⁵ => (1 + length_₀_₀_₀(t³⁵)) | LH_N  => 0}: 2973
//│ [LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]: 2793 --->
//│ 	case ls¹⁰ of {LH_C h¹⁶ t¹⁹ => let t²⁰ = map_₀_₁_₀(f²⁶, t¹⁹)
//│ in let h¹⁷ = f²⁶(h¹⁶)
//│ in (fun f²⁷ -> (fun i¹⁵ -> foldl_₀_₀_₉(f²⁷, f²⁷(i¹⁵, h¹⁷), t²⁰))) | LH_N  => (fun f²⁸ -> (fun i¹⁶ -> i¹⁶))}: 1741
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}: 2134
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}}: 2135
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}: 2201
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}}: 2202
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}: 2268
//│ 	case ls¹⁶ of {LH_C h²⁶ t³² => let t³³ = map_₀_₀_₀(f⁴⁶, t³²)
//│ in let h²⁷ = f⁴⁶(h²⁶)
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₀_₈(f⁴⁷, f⁴⁷(i³⁰, h²⁷), t³³))) | LH_N  => (fun f⁴⁸ -> (fun i³¹ -> i³¹))}: 2691
//│ 	case ls²⁵ of {LH_C h³⁰ t³⁶ => let t³⁷ = map_₀_₂_₀(f⁵⁸, t³⁶)
//│ in let h³¹ = f⁵⁸(h³⁰)
//│ in (fun f⁵⁹ -> (fun i³⁷ -> foldl_₀_₀_₁₀(f⁵⁹, f⁵⁹(i³⁷, h³¹), t³⁷))) | LH_N  => (fun f⁶⁰ -> (fun i³⁸ -> i³⁸))}: 3018
//│ [LH_N]: 2794 --->
//│ 	case ls¹⁰ of {LH_C h¹⁶ t¹⁹ => let t²⁰ = map_₀_₁_₀(f²⁶, t¹⁹)
//│ in let h¹⁷ = f²⁶(h¹⁶)
//│ in (fun f²⁷ -> (fun i¹⁵ -> foldl_₀_₀_₉(f²⁷, f²⁷(i¹⁵, h¹⁷), t²⁰))) | LH_N  => (fun f²⁸ -> (fun i¹⁶ -> i¹⁶))}: 1741
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}: 2134
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}}: 2135
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}: 2201
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}}: 2202
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}: 2268
//│ 	case ls¹⁶ of {LH_C h²⁶ t³² => let t³³ = map_₀_₀_₀(f⁴⁶, t³²)
//│ in let h²⁷ = f⁴⁶(h²⁶)
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₀_₈(f⁴⁷, f⁴⁷(i³⁰, h²⁷), t³³))) | LH_N  => (fun f⁴⁸ -> (fun i³¹ -> i³¹))}: 2691
//│ 	case ls²⁵ of {LH_C h³⁰ t³⁶ => let t³⁷ = map_₀_₂_₀(f⁵⁸, t³⁶)
//│ in let h³¹ = f⁵⁸(h³⁰)
//│ in (fun f⁵⁹ -> (fun i³⁷ -> foldl_₀_₀_₁₀(f⁵⁹, f⁵⁹(i³⁷, h³¹), t³⁷))) | LH_N  => (fun f⁶⁰ -> (fun i³⁸ -> i³⁸))}: 3018
//│ [LH_N]: 2796 --->
//│ 	case ls¹⁰ of {LH_C h¹⁶ t¹⁹ => let t²⁰ = map_₀_₁_₀(f²⁶, t¹⁹)
//│ in let h¹⁷ = f²⁶(h¹⁶)
//│ in (fun f²⁷ -> (fun i¹⁵ -> foldl_₀_₀_₉(f²⁷, f²⁷(i¹⁵, h¹⁷), t²⁰))) | LH_N  => (fun f²⁸ -> (fun i¹⁶ -> i¹⁶))}: 1741
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}: 2134
//│ 	case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}}: 2135
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}: 2201
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}}: 2202
//│ 	case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}: 2268
//│ 	case ls¹⁶ of {LH_C h²⁶ t³² => let t³³ = map_₀_₀_₀(f⁴⁶, t³²)
//│ in let h²⁷ = f⁴⁶(h²⁶)
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₀_₈(f⁴⁷, f⁴⁷(i³⁰, h²⁷), t³³))) | LH_N  => (fun f⁴⁸ -> (fun i³¹ -> i³¹))}: 2691
//│ 	case ls²⁵ of {LH_C h³⁰ t³⁶ => let t³⁷ = map_₀_₂_₀(f⁵⁸, t³⁶)
//│ in let h³¹ = f⁵⁸(h³⁰)
//│ in (fun f⁵⁹ -> (fun i³⁷ -> foldl_₀_₀_₁₀(f⁵⁹, f⁵⁹(i³⁷, h³¹), t³⁷))) | LH_N  => (fun f⁶⁰ -> (fun i³⁸ -> i³⁸))}: 3018
//│ [LH_P2 (fun _lh_f_arg2⁵ -> (fun f⁵¹ -> _lh_f_arg2⁵)) (fun _lh_dummy² -> (fun _lh_doInput_arg1⁵ -> [LH_N]))]: 2807 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵³ -> f⁵³(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹] | _  => error⁰}: 2851
//│ 	case _lh_matchIdent²¹ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => let _lh_doInput_LH_C_1¹ = let _lh_matchIdent²² = _lh_lines_LH_P2_1¹
//│ in _lh_matchIdent²²(99)
//│ in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ in (fun _lh_doInput_arg1⁶ -> doLine_₀_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁶)) | _  => error⁰}: 3172
//│ [LH_P2 (fun _lh_f_arg2⁶ -> (fun f⁵² -> _lh_f_arg2⁶)) let _lh_lines_LH_C_1¹ = _lh_break_LH_C_1¹
//│ in (fun _lh_dummy³ -> lines_₀_₀_₀(_lh_lines_LH_C_1¹))]: 2820 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵³ -> f⁵³(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹] | _  => error⁰}: 2851
//│ 	case _lh_matchIdent²¹ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => let _lh_doInput_LH_C_1¹ = let _lh_matchIdent²² = _lh_lines_LH_P2_1¹
//│ in _lh_matchIdent²²(99)
//│ in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ in (fun _lh_doInput_arg1⁶ -> doLine_₀_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁶)) | _  => error⁰}: 3172
//│ [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵³ -> f⁵³(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹]: 2849 --->
//│ 	case _lh_matchIdent²⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵³ -> f⁵³(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹] | _  => error⁰}: 2851
//│ 	case _lh_matchIdent²¹ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => let _lh_doInput_LH_C_1¹ = let _lh_matchIdent²² = _lh_lines_LH_P2_1¹
//│ in _lh_matchIdent²²(99)
//│ in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ in (fun _lh_doInput_arg1⁶ -> doLine_₀_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁶)) | _  => error⁰}: 3172
//│ [LH_C (z¹ + 2147483562) rands_₀_₀_₀(s1''¹, s2''¹)]: 3118 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent¹² of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 1592
//│ 	case force⁰(ls²⁰) of {LH_C h²⁸ t³⁴ => [LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)] | LH_N  => [LH_N]}: 2795
//│ [LH_C z¹ rands_₀_₀_₀(s1''¹, s2''¹)]: 3127 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent¹² of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 1592
//│ 	case force⁰(ls²⁰) of {LH_C h²⁸ t³⁴ => [LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)] | LH_N  => [LH_N]}: 2795
//│ ------------------
//│ case _lh_matchIdent¹² of {LH_N  => lazy⁰([LH_N]) | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1¹ > 0) then drop_lz_₀_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹ | _  => error⁰}: 1592 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1573
//│ 	[LH_C (z¹ + 2147483562) rands_₀_₀_₀(s1''¹, s2''¹)]: 3118
//│ 	[LH_C z¹ rands_₀_₀_₀(s1''¹, s2''¹)]: 3127
//│ case _lh_matchIdent¹³ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰}: 1637 --->
//│ 	[LH_C h²⁵ take_lz_₁_₀_₀((n⁸ - 1), t³¹)]: 2641
//│ 	[LH_N]: 2704
//│ case _lh_matchIdent¹⁴ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰}: 1680 --->
//│ 	[LH_N]: 1564
//│ 	[LH_C h²⁵ take_lz_₁_₀_₀((n⁸ - 1), t³¹)]: 2641
//│ case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls⁹ -> let _lh_matchIdent¹³ = ls⁹
//│ in case _lh_matchIdent¹³ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent¹⁴ = take_lz_₁_₀_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀_₀(square¹, powerMod_₀_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent¹⁴ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 1685 --->
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵]: 2348
//│ case ls¹⁰ of {LH_C h¹⁶ t¹⁹ => let t²⁰ = map_₀_₁_₀(f²⁶, t¹⁹)
//│ in let h¹⁷ = f²⁶(h¹⁶)
//│ in (fun f²⁷ -> (fun i¹⁵ -> foldl_₀_₀_₉(f²⁷, f²⁷(i¹⁵, h¹⁷), t²⁰))) | LH_N  => (fun f²⁸ -> (fun i¹⁶ -> i¹⁶))}: 1741 --->
//│ 	[LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]: 2793
//│ 	[LH_N]: 2794
//│ 	[LH_N]: 2796
//│ case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => let _lh_matchIdent¹⁶ = divmod_₀_₀_₀(_lh_f_LH_P2_1³, 2)
//│ in _lh_matchIdent¹⁶(_lh_f_LH_P2_0³, _lh_f_LH_P2_1³, f²⁹) | _  => error⁰}: 1878 --->
//│ 	[LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 1887
//│ 	[LH_P2 (_lh_f_LH_P2_0⁵ + 1) _lh_f_LH_P2_0⁴]: 2344
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}: 2134 --->
//│ 	[LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]: 2793
//│ 	[LH_N]: 2794
//│ 	[LH_N]: 2796
//│ case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}}: 2135 --->
//│ 	[LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]: 2793
//│ 	[LH_N]: 2794
//│ 	[LH_N]: 2796
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}: 2201 --->
//│ 	[LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]: 2793
//│ 	[LH_N]: 2794
//│ 	[LH_N]: 2796
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}}: 2202 --->
//│ 	[LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]: 2793
//│ 	[LH_N]: 2794
//│ 	[LH_N]: 2796
//│ case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}: 2268 --->
//│ 	[LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]: 2793
//│ 	[LH_N]: 2794
//│ 	[LH_N]: 2796
//│ case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}}: 2269 --->
//│ 	[LH_N]: 1710
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁶]: 2727
//│ case _lh_uniform_arg1¹ of {LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {LH_N  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {LH_N  => let t²¹ = (fun f³⁰ -> (fun i¹⁷ -> i¹⁷))
//│ in let h¹⁸ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ in (fun f³¹ -> (fun i¹⁸ -> foldl_₀_₀_₇(f³¹, f³¹(i¹⁸, h¹⁸), t²¹))) | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => let t²² = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²² == _lh_uniform_LH_C_0⁵) then let t²³ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ in let h¹⁹ = t²²
//│ in (fun f³² -> (fun i¹⁹ -> foldl_₀_₀_₁(f³², f³²(i¹⁹, h¹⁹), t²³))) else let t²⁴ = map_₀_₀_₀((fun x⁸ -> (x⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ in let h²⁰ = t²²
//│ in (fun f³³ -> (fun i²⁰ -> foldl_₀_₀_₂(f³³, f³³(i²⁰, h²⁰), t²⁴))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => let t²⁵ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁵ == _lh_uniform_LH_C_0⁵) then let t²⁶ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ in let h²¹ = t²⁵
//│ in (fun f³⁴ -> (fun i²¹ -> foldl_₀_₀_₃(f³⁴, f³⁴(i²¹, h²¹), t²⁶))) else let t²⁷ = map_₀_₁_₀((fun x⁹ -> (x⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ in let h²² = t²⁵
//│ in (fun f³⁵ -> (fun i²² -> foldl_₀_₀_₄(f³⁵, f³⁵(i²², h²²), t²⁷))) | _  => error⁰}} | _  => case _lh_uniform_arg2¹ of {LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => let t²⁸ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ in if (t²⁸ == _lh_uniform_LH_C_0⁵) then let t²⁹ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ in let h²³ = t²⁸
//│ in (fun f³⁶ -> (fun i²³ -> foldl_₀_₀_₅(f³⁶, f³⁶(i²³, h²³), t²⁹))) else let t³⁰ = map_₀_₂_₀((fun x¹⁰ -> (x¹⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ in let h²⁴ = t²⁸
//│ in (fun f³⁷ -> (fun i²⁴ -> foldl_₀_₀_₆(f³⁷, f³⁷(i²⁴, h²⁴), t³⁰))) | _  => error⁰}} | _  => error⁰}: 2271 --->
//│ 	[LH_N]: 1710
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁶]: 2727
//│ case ls¹⁶ of {LH_C h²⁶ t³² => let t³³ = map_₀_₀_₀(f⁴⁶, t³²)
//│ in let h²⁷ = f⁴⁶(h²⁶)
//│ in (fun f⁴⁷ -> (fun i³⁰ -> foldl_₀_₀_₈(f⁴⁷, f⁴⁷(i³⁰, h²⁷), t³³))) | LH_N  => (fun f⁴⁸ -> (fun i³¹ -> i³¹))}: 2691 --->
//│ 	[LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]: 2793
//│ 	[LH_N]: 2794
//│ 	[LH_N]: 2796
//│ case force⁰(ls²⁰) of {LH_C h²⁸ t³⁴ => [LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)] | LH_N  => [LH_N]}: 2795 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1573
//│ 	[LH_C (z¹ + 2147483562) rands_₀_₀_₀(s1''¹, s2''¹)]: 3118
//│ 	[LH_C z¹ rands_₀_₀_₀(s1''¹, s2''¹)]: 3127
//│ case _lh_matchIdent²⁰ of {LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵³ -> f⁵³(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹] | _  => error⁰}: 2851 --->
//│ 	[LH_P2 (fun _lh_f_arg2⁵ -> (fun f⁵¹ -> _lh_f_arg2⁵)) (fun _lh_dummy² -> (fun _lh_doInput_arg1⁵ -> [LH_N]))]: 2807
//│ 	[LH_P2 (fun _lh_f_arg2⁶ -> (fun f⁵² -> _lh_f_arg2⁶)) let _lh_lines_LH_C_1¹ = _lh_break_LH_C_1¹
//│ in (fun _lh_dummy³ -> lines_₀_₀_₀(_lh_lines_LH_C_1¹))]: 2820
//│ 	[LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵³ -> f⁵³(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹]: 2849
//│ case ls²² of {LH_C h²⁹ t³⁵ => (1 + length_₀_₀_₀(t³⁵)) | LH_N  => 0}: 2973 --->
//│ 	[LH_N]: 1710
//│ 	[LH_C _lh_chop_LH_P2_1¹ a⁶]: 2727
//│ case ls²⁵ of {LH_C h³⁰ t³⁶ => let t³⁷ = map_₀_₂_₀(f⁵⁸, t³⁶)
//│ in let h³¹ = f⁵⁸(h³⁰)
//│ in (fun f⁵⁹ -> (fun i³⁷ -> foldl_₀_₀_₁₀(f⁵⁹, f⁵⁹(i³⁷, h³¹), t³⁷))) | LH_N  => (fun f⁶⁰ -> (fun i³⁸ -> i³⁸))}: 3018 --->
//│ 	[LH_C h²⁸ take_lz_₀_₀_₀((n¹¹ - 1), t³⁴)]: 2793
//│ 	[LH_N]: 2794
//│ 	[LH_N]: 2796
//│ case _lh_matchIdent²¹ of {LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => let _lh_doInput_LH_C_1¹ = let _lh_matchIdent²² = _lh_lines_LH_P2_1¹
//│ in _lh_matchIdent²²(99)
//│ in let _lh_doInput_LH_C_0¹ = _lh_lines_LH_P2_0¹
//│ in (fun _lh_doInput_arg1⁶ -> doLine_₀_₀_₀(_lh_doInput_LH_C_0¹, (fun state¹ -> doInput_₀_₀_₀(state¹, _lh_doInput_LH_C_1¹)), _lh_doInput_arg1⁶)) | _  => error⁰}: 3172 --->
//│ 	[LH_P2 (fun _lh_f_arg2⁵ -> (fun f⁵¹ -> _lh_f_arg2⁵)) (fun _lh_dummy² -> (fun _lh_doInput_arg1⁵ -> [LH_N]))]: 2807
//│ 	[LH_P2 (fun _lh_f_arg2⁶ -> (fun f⁵² -> _lh_f_arg2⁶)) let _lh_lines_LH_C_1¹ = _lh_break_LH_C_1¹
//│ in (fun _lh_dummy³ -> lines_₀_₀_₀(_lh_lines_LH_C_1¹))]: 2820
//│ 	[LH_P2 let _lh_f_LH_C_1¹ = _lh_break_LH_P2_0¹
//│ in let _lh_f_LH_C_0¹ = _lh_break_LH_C_0¹
//│ in (fun _lh_f_arg2⁷ -> (fun f⁵³ -> f⁵³(_lh_f_LH_C_1¹, ((10 * _lh_f_arg2⁷) + int_val_of_char_₀_₀_₀(_lh_f_LH_C_0¹))))) _lh_break_LH_P2_1¹]: 2849
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 1887 --->
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => let _lh_matchIdent¹⁶ = divmod_₀_₀_₀(_lh_f_LH_P2_1³, 2)
//│ in _lh_matchIdent¹⁶(_lh_f_LH_P2_0³, _lh_f_LH_P2_1³, f²⁹) | _  => error⁰}: 1878
//│ [LH_P2 (_lh_f_LH_P2_0⁵ + 1) _lh_f_LH_P2_0⁴]: 2344 --->
//│ 	case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => let _lh_matchIdent¹⁶ = divmod_₀_₀_₀(_lh_f_LH_P2_1³, 2)
//│ in _lh_matchIdent¹⁶(_lh_f_LH_P2_0³, _lh_f_LH_P2_1³, f²⁹) | _  => error⁰}: 1878
//│ [LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵]: 2348 --->
//│ 	case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls⁹ -> let _lh_matchIdent¹³ = ls⁹
//│ in case _lh_matchIdent¹³ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent¹⁴ = take_lz_₁_₀_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀_₀(square¹, powerMod_₀_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent¹⁴ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 1685
//│ ------------------
//│ case _lh_singleTestX_arg2¹ of {LH_P2 _lh_singleTestX_LH_P2_0¹ _lh_singleTestX_LH_P2_1¹ => let square¹ = (fun x⁷ -> ((x⁷ * x⁷) % _lh_singleTestX_arg1¹))
//│ in let witness¹ = (fun ls⁹ -> let _lh_matchIdent¹³ = ls⁹
//│ in case _lh_matchIdent¹³ of {LH_N  => [False] | LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1¹ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness¹(_lh_singleTestX_LH_C_1²) | _  => error⁰})
//│ in let _lh_matchIdent¹⁴ = take_lz_₁_₀_₁(_lh_singleTestX_LH_P2_0¹, iterate_₀_₀_₀(square¹, powerMod_₀_₀_₀(_lh_singleTestX_arg3¹, _lh_singleTestX_LH_P2_1¹, _lh_singleTestX_arg1¹)))
//│ in case _lh_matchIdent¹⁴ of {LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1¹ - 1))) || witness¹(_lh_singleTestX_LH_C_1³)) | _  => error⁰} | _  => error⁰}: 1685 --->
//│ 	[LH_P2 _lh_f_LH_P2_0⁵ _lh_f_LH_P2_1⁵]: 2348
//│ case _lh_f_arg1² of {LH_P2 _lh_f_LH_P2_0³ _lh_f_LH_P2_1³ => let _lh_matchIdent¹⁶ = divmod_₀_₀_₀(_lh_f_LH_P2_1³, 2)
//│ in _lh_matchIdent¹⁶(_lh_f_LH_P2_0³, _lh_f_LH_P2_1³, f²⁹) | _  => error⁰}: 1878 --->
//│ 	[LH_P2 0 (_lh_findKQ_arg1¹ - 1)]: 1887
//│ 	[LH_P2 (_lh_f_LH_P2_0⁵ + 1) _lh_f_LH_P2_0⁴]: 2344
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPrimetest_nofib_₀_₀_₀(primId⁰(0))
//│ def testPrimetest_nofib_₀_₀_₀(_lh_testPrimetest_nofib_arg1²) = 
//│ 	let cts² = primId⁰([LH_C '2' [LH_C '4' [LH_C '|' [LH_C '4' [LH_C '8' [LH_C '|' [LH_C '4' [LH_C '7' [LH_C '|' [LH_C '1' [LH_C '3' [LH_C '1' [LH_C '7' [LH_C '|' [LH_C '8' [LH_C '9' [LH_C '0' [LH_C '1' [LH_N]]]]]]]]]]]]]]]]]]])
//│ 	in process_₀_₀_₀(lines_₀_₀_₀(cts²))
//│ 	where
//│ 	def lines_₀_₀_₀(_lh_lines_arg1²) = 
//│ 		let _lh_matchIdent²⁷ = break_₀_₀_₀((fun x¹⁶ -> polyEq⁰(x¹⁶, '|')), _lh_lines_arg1²)
//│ 		in case _lh_matchIdent²⁷ of {
//│ 			LH_P2 _lh_lines_LH_P2_0¹ _lh_lines_LH_P2_1¹ => 
//│ 				let _lh_doInput_LH_C_1² = 	
//│ 					let _lh_matchIdent²⁸ = _lh_lines_LH_P2_1¹
//│ 					in _lh_matchIdent²⁸(99)
//│ 				in let _lh_doInput_LH_C_0² = _lh_lines_LH_P2_0¹
//│ 				in (fun _lh_doInput_arg1¹⁰ -> doLine_₀_₀_₀(_lh_doInput_LH_C_0², (fun state² -> doInput_₀_₀_₀(state², _lh_doInput_LH_C_1²)), _lh_doInput_arg1¹⁰))
//│ 			| _  => error⁰}
//│ 		where
//│ 		def break_₀_₀_₀(_lh_break_arg1², _lh_break_arg2²) = 
//│ 			case _lh_break_arg2² of {
//│ 				LH_N  => [LH_P2 (fun _lh_f_arg2⁹ -> (fun f⁸⁰ -> _lh_f_arg2⁹)) (fun _lh_dummy⁴ -> (fun _lh_doInput_arg1⁹ -> [LH_N]))]
//│ 				| LH_C _lh_break_LH_C_0¹ _lh_break_LH_C_1¹ => if _lh_break_arg1²(_lh_break_LH_C_0¹) then [LH_P2 (fun _lh_f_arg2¹⁰ -> (fun f⁸¹ -> _lh_f_arg2¹⁰)) 
//│ 					let _lh_lines_LH_C_1² = _lh_break_LH_C_1¹
//│ 					in (fun _lh_dummy⁵ -> lines_₀_₀_₀(_lh_lines_LH_C_1²))] else 
//│ 					let _lh_matchIdent²⁵ = break_₀_₀_₀(_lh_break_arg1², _lh_break_LH_C_1¹)
//│ 					in case _lh_matchIdent²⁵ of {
//│ 						LH_P2 _lh_break_LH_P2_0¹ _lh_break_LH_P2_1¹ => [LH_P2 
//│ 							let _lh_f_LH_C_1² = _lh_break_LH_P2_0¹
//│ 							in let _lh_f_LH_C_0² = _lh_break_LH_C_0¹
//│ 							in (fun _lh_f_arg2¹¹ -> (fun f⁸² -> f⁸²(_lh_f_LH_C_1², ((10 * _lh_f_arg2¹¹) + int_val_of_char_₀_₀_₀(_lh_f_LH_C_0²))))) _lh_break_LH_P2_1¹]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def int_val_of_char_₀_₀_₀(_lh_int_val_of_char_arg1²) = 
//│ 				(int_of_char⁰(_lh_int_val_of_char_arg1²) - 48)
//│ 		def doInput_₀_₀_₀(_lh_doInput_arg1⁷, _lh_doInput_arg2³) = 
//│ 			_lh_doInput_arg2³(_lh_doInput_arg1⁷)
//│ 		def doLine_₀_₀_₀(_lh_doLine_arg1², _lh_doLine_arg2⁹, _lh_doLine_arg3²) = 
//│ 			let n¹⁶ = int_val_of_string_₀_₀_₀(_lh_doLine_arg1²)
//│ 			in let _lh_matchIdent³⁰ = multiTest_₀_₀_₀(100, _lh_doLine_arg3², n¹⁶)
//│ 			in _lh_matchIdent³⁰(_lh_doLine_arg2⁹)
//│ 			where
//│ 			def int_val_of_string_₀_₀_₀(_lh_int_val_of_string_arg1²) = 
//│ 				let f⁶³ = (fun _lh_f_arg1⁴ -> (fun _lh_f_arg2⁸ -> _lh_f_arg1⁴(_lh_f_arg2⁸, f⁶³)))
//│ 				in f⁶³(_lh_int_val_of_string_arg1², 0)
//│ 			def multiTest_₀_₀_₀(_lh_multiTest_arg1², _lh_multiTest_arg2², _lh_multiTest_arg3²) = 
//│ 				let mTest⁵ = (fun k⁸ -> (fun rs² -> if (k⁸ == 0) then 
//│ 					let _lh_doLine_LH_P2_1⁷ = rs²
//│ 					in let _lh_doLine_LH_P2_0⁷ = [True]
//│ 					in (fun _lh_doLine_arg2¹⁰ -> if _lh_doLine_LH_P2_0⁷ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹⁰(_lh_doLine_LH_P2_1⁷)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹⁰(_lh_doLine_LH_P2_1⁷)]) else 
//│ 					let _lh_matchIdent³⁵ = singleTest_₀_₀_₀(_lh_multiTest_arg3², findKQ_₀_₀_₀(_lh_multiTest_arg3²), rs²)
//│ 					in _lh_matchIdent³⁵(k⁸, mTest⁵)))
//│ 				in if ((_lh_multiTest_arg3² <= 1) || even_₀_₀_₀(_lh_multiTest_arg3²)) then 
//│ 					let _lh_doLine_LH_P2_1⁸ = _lh_multiTest_arg2²
//│ 					in let _lh_doLine_LH_P2_0⁸ = (_lh_multiTest_arg3² == 2)
//│ 					in (fun _lh_doLine_arg2¹¹ -> if _lh_doLine_LH_P2_0⁸ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2¹¹(_lh_doLine_LH_P2_1⁸)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2¹¹(_lh_doLine_LH_P2_1⁸)]) else mTest⁵(_lh_multiTest_arg1², _lh_multiTest_arg2²)
//│ 				where
//│ 				def even_₀_₀_₀(_lh_even_arg1⁴) = 
//│ 					((_lh_even_arg1⁴ % 2) == 0)
//│ 				def findKQ_₀_₀_₀(_lh_findKQ_arg1²) = 
//│ 					let f⁸³ = (fun _lh_f_arg1⁵ -> _lh_f_arg1⁵(f⁸³))
//│ 					in f⁸³(
//│ 						let _lh_f_LH_P2_1⁶ = (_lh_findKQ_arg1² - 1)
//│ 						in let _lh_f_LH_P2_0⁶ = 0
//│ 						in (fun f⁸⁴ -> 
//│ 							let _lh_matchIdent²⁶ = divmod_₀_₀_₀(_lh_f_LH_P2_1⁶, 2)
//│ 							in _lh_matchIdent²⁶(_lh_f_LH_P2_0⁶, _lh_f_LH_P2_1⁶, f⁸⁴)))
//│ 					where
//│ 					def divmod_₀_₀_₀(_lh_divmod_arg1⁴, _lh_divmod_arg2⁴) = 
//│ 						let _lh_f_LH_P2_1⁷ = (_lh_divmod_arg1⁴ % _lh_divmod_arg2⁴)
//│ 						in let _lh_f_LH_P2_0⁷ = div⁰(_lh_divmod_arg1⁴, _lh_divmod_arg2⁴)
//│ 						in (fun _lh_f_LH_P2_0⁸ -> (fun _lh_f_LH_P2_1⁸ -> (fun f⁸⁸ -> if (_lh_f_LH_P2_1⁷ == 0) then f⁸⁸(
//│ 							let _lh_f_LH_P2_1⁹ = _lh_f_LH_P2_0⁷
//│ 							in let _lh_f_LH_P2_0⁹ = (_lh_f_LH_P2_0⁸ + 1)
//│ 							in (fun f⁸⁹ -> 
//│ 								let _lh_matchIdent³¹ = divmod_₀_₀_₀(_lh_f_LH_P2_1⁹, 2)
//│ 								in _lh_matchIdent³¹(_lh_f_LH_P2_0⁹, _lh_f_LH_P2_1⁹, f⁸⁹))) else 
//│ 							let _lh_singleTestX_LH_P2_1² = _lh_f_LH_P2_1⁸
//│ 							in let _lh_singleTestX_LH_P2_0² = _lh_f_LH_P2_0⁸
//│ 							in (fun _lh_singleTestX_arg1³ -> (fun _lh_singleTestX_arg3³ -> 
//│ 								let square² = (fun x¹⁷ -> ((x¹⁷ * x¹⁷) % _lh_singleTestX_arg1³))
//│ 								in let witness² = (fun ls⁴² -> 
//│ 									let _lh_matchIdent³² = ls⁴²
//│ 									in case _lh_matchIdent³² of {
//│ 										LH_N  => [False]
//│ 										| LH_C _lh_singleTestX_LH_C_0² _lh_singleTestX_LH_C_1² => if (_lh_singleTestX_LH_C_0² == (_lh_singleTestX_arg1³ - 1)) then [True] else if (_lh_singleTestX_LH_C_0² == 1) then [False] else witness²(_lh_singleTestX_LH_C_1²)
//│ 										| _  => error⁰})
//│ 								in let _lh_matchIdent³³ = take_lz_₁_₀_₁(_lh_singleTestX_LH_P2_0², iterate_₀_₀_₀(square², powerMod_₀_₀_₀(_lh_singleTestX_arg3³, _lh_singleTestX_LH_P2_1², _lh_singleTestX_arg1³)))
//│ 								in case _lh_matchIdent³³ of {
//│ 									LH_C _lh_singleTestX_LH_C_0³ _lh_singleTestX_LH_C_1³ => (((_lh_singleTestX_LH_C_0³ == 1) || (_lh_singleTestX_LH_C_0³ == (_lh_singleTestX_arg1³ - 1))) || witness²(_lh_singleTestX_LH_C_1³))
//│ 									| _  => error⁰})))))
//│ 				def singleTest_₀_₀_₀(_lh_singleTest_arg1⁵, _lh_singleTest_arg2⁵, _lh_singleTest_arg3²) = 
//│ 					let _lh_matchIdent³⁴ = random_₀_₀_₀((_lh_singleTest_arg1⁵ - 2), _lh_singleTest_arg3²)
//│ 					in _lh_matchIdent³⁴(_lh_singleTest_arg1⁵, _lh_singleTest_arg2⁵)
//│ 					where
//│ 					def random_₀_₀_₀(_lh_random_arg1², _lh_random_arg2²) = 
//│ 						let ns⁴ = chop_₀_₀_₀(65536, _lh_random_arg1²)
//│ 						in let _lh_matchIdent²⁴ = splitAt_lz_₀_₀_₀(length_₀_₀_₀(ns⁴), _lh_random_arg2²)
//│ 						in _lh_matchIdent²⁴(ns⁴)
//│ 						where
//│ 						def chop_₀_₀_₀(_lh_chop_arg1²) = 
//│ 							let chop'⁴ = (fun a¹³ -> (fun n¹⁸ -> 
//│ 								let _lh_matchIdent³⁶ = divmod_₁_₀_₀(n¹⁸, _lh_chop_arg1²)
//│ 								in _lh_matchIdent³⁶(a¹³, chop'⁴, n¹⁸)))
//│ 							in chop'⁴([LH_N])
//│ 							where
//│ 							def divmod_₁_₀_₀(_lh_divmod_arg1⁵, _lh_divmod_arg2⁵) = 
//│ 								let _lh_chop_LH_P2_1² = (_lh_divmod_arg1⁵ % _lh_divmod_arg2⁵)
//│ 								in let _lh_chop_LH_P2_0² = div⁰(_lh_divmod_arg1⁵, _lh_divmod_arg2⁵)
//│ 								in (fun a¹⁴ -> (fun chop'⁵ -> (fun n¹⁹ -> if (n¹⁹ == 0) then a¹⁴ else chop'⁵([LH_C _lh_chop_LH_P2_1² a¹⁴], _lh_chop_LH_P2_0²))))
//│ 						def length_₀_₀_₀(ls³⁸) = 
//│ 							case ls³⁸ of {
//│ 								LH_C h²⁹ t³⁵ => (1 + length_₀_₀_₀(t³⁵))
//│ 								| LH_N  => 0}
//│ 						def splitAt_lz_₀_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 							let _lh_random_LH_P2_1² = drop_lz_₀_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 							in let _lh_random_LH_P2_0² = take_lz_₀_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 							in (fun ns⁵ -> 
//│ 								let _lh_singleTest_LH_P2_1² = _lh_random_LH_P2_1²
//│ 								in let _lh_singleTest_LH_P2_0² = makeNumber_₀_₀_₀(65536, uniform_₀_₀_₀(ns⁵, _lh_random_LH_P2_0²))
//│ 								in (fun _lh_singleTest_arg1⁴ -> (fun _lh_singleTest_arg2⁴ -> 
//│ 									let _lh_multiTest_LH_P2_1² = _lh_singleTest_LH_P2_1²
//│ 									in let _lh_multiTest_LH_P2_0² = singleTestX_₀_₀_₀(_lh_singleTest_arg1⁴, _lh_singleTest_arg2⁴, (2 + _lh_singleTest_LH_P2_0²))
//│ 									in (fun k⁶ -> (fun mTest⁴ -> if _lh_multiTest_LH_P2_0² then mTest⁴((k⁶ - 1), _lh_multiTest_LH_P2_1²) else 
//│ 										let _lh_doLine_LH_P2_1⁶ = _lh_multiTest_LH_P2_1²
//│ 										in let _lh_doLine_LH_P2_0⁶ = [False]
//│ 										in (fun _lh_doLine_arg2⁸ -> if _lh_doLine_LH_P2_0⁶ then [LH_C [LH_C 'P' [LH_C 'r' [LH_C 'o' [LH_C 'b' [LH_C 'a' [LH_C 'b' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_N]]]]]]]]]]]]]]] _lh_doLine_arg2⁸(_lh_doLine_LH_P2_1⁶)] else [LH_C [LH_C 'C' [LH_C 'o' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 's' [LH_C 'i' [LH_C 't' [LH_C 'e' [LH_N]]]]]]]]]] _lh_doLine_arg2⁸(_lh_doLine_LH_P2_1⁶)]))))))
//│ 							where
//│ 							def drop_lz_₀_₀_₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 								let _lh_matchIdent²⁹ = force⁰(_lh_drop_lz_arg2²)
//│ 								in case _lh_matchIdent²⁹ of {
//│ 									LH_N  => lazy⁰([LH_N])
//│ 									| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => if (_lh_drop_lz_arg1² > 0) then drop_lz_₀_₀_₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1¹) else _lh_drop_lz_LH_C_1¹
//│ 									| _  => error⁰}
//│ 							def makeNumber_₀_₀_₀(_lh_makeNumber_arg1²) = 
//│ 								foldl_₀_₀_₀((fun a¹⁰ -> (fun x¹⁴ -> ((a¹⁰ * _lh_makeNumber_arg1²) + x¹⁴))), 0)
//│ 								where
//│ 								def foldl_₀_₀_₀(f⁷⁸, i⁵², ls³⁷) = 
//│ 									ls³⁷(f⁷⁸, i⁵²)
//│ 							def singleTestX_₀_₀_₀(_lh_singleTestX_arg1², _lh_singleTestX_arg2², _lh_singleTestX_arg3²) = 
//│ 								_lh_singleTestX_arg2²(_lh_singleTestX_arg1², _lh_singleTestX_arg3²)
//│ 								where
//│ 								def iterate_₀_₀_₀(f⁷⁹, x¹⁵) = 
//│ 									lazy⁰(
//│ 										let t⁴¹ = iterate_₀_₀_₀(f⁷⁹, f⁷⁹(x¹⁵))
//│ 										in let h³⁵ = x¹⁵
//│ 										in (fun n¹⁴ -> [LH_C h³⁵ take_lz_₁_₀_₀((n¹⁴ - 1), t⁴¹)]))
//│ 									where
//│ 									def take_lz_₁_₀_₀(n¹⁷, ls⁴³) = 
//│ 										if (n¹⁷ > 0) then force⁰(ls⁴³, n¹⁷) else [LH_N]
//│ 								def powerMod_₀_₀_₀(_lh_powerMod_arg1², _lh_powerMod_arg2², _lh_powerMod_arg3²) = 
//│ 									case _lh_powerMod_arg2² of {
//│ 										0  => 1
//│ 										| _  => 
//│ 											let a'² = (_lh_powerMod_arg1² mod _lh_powerMod_arg3²)
//│ 											in let f⁸⁶ = (fun a¹¹ -> (fun b⁴ -> (fun c² -> 
//│ 												let g² = (fun a¹² -> (fun b⁵ -> if even_₁_₀_₀(b⁵) then g²(((a¹² * a¹²) % _lh_powerMod_arg3²), div⁰(b⁵, 2)) else f⁸⁶(a¹², (b⁵ - 1), ((a¹² * c²) % _lh_powerMod_arg3²))))
//│ 												in if (b⁴ == 0) then c² else g²(a¹¹, b⁴))))
//│ 											in f⁸⁶(a'², (_lh_powerMod_arg2² - 1), a'²)}
//│ 									where
//│ 									def even_₁_₀_₀(_lh_even_arg1⁵) = 
//│ 										((_lh_even_arg1⁵ % 2) == 0)
//│ 								def take_lz_₁_₀_₁(n¹³, ls³⁰) = 
//│ 									if (n¹³ > 0) then force⁰(ls³⁰, n¹³) else [LH_N]
//│ 							def take_lz_₀_₀_₀(n¹⁵, ls³⁹) = 
//│ 								if (n¹⁵ > 0) then case force⁰(ls³⁹) of {
//│ 									LH_C h²⁸ t³⁴ => [LH_C h²⁸ take_lz_₀_₀_₀((n¹⁵ - 1), t³⁴)]
//│ 									| LH_N  => [LH_N]} else [LH_N]
//│ 							def uniform_₀_₀_₀(_lh_uniform_arg1², _lh_uniform_arg2²) = 
//│ 								case _lh_uniform_arg1² of {
//│ 									LH_C _lh_uniform_LH_C_0⁵ _lh_uniform_LH_C_1⁵ => case _lh_uniform_LH_C_1⁵ of {
//│ 										LH_N  => case _lh_uniform_arg2² of {
//│ 											LH_C _lh_uniform_LH_C_0⁶ _lh_uniform_LH_C_1⁶ => case _lh_uniform_LH_C_1⁶ of {
//│ 												LH_N  => 
//│ 													let t⁴² = (fun f⁹² -> (fun i⁵⁷ -> i⁵⁷))
//│ 													in let h³⁶ = (_lh_uniform_LH_C_0⁶ % _lh_uniform_LH_C_0⁵)
//│ 													in (fun f⁹³ -> (fun i⁵⁸ -> foldl_₀_₀_₇(f⁹³, f⁹³(i⁵⁸, h³⁶), t⁴²)))
//│ 												| _  => case _lh_uniform_arg2² of {
//│ 													LH_C _lh_uniform_LH_C_0⁷ _lh_uniform_LH_C_1⁷ => 
//│ 														let t⁴³ = (_lh_uniform_LH_C_0⁷ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 														in if (t⁴³ == _lh_uniform_LH_C_0⁵) then 
//│ 															let t⁴⁴ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁷)
//│ 															in let h³⁷ = t⁴³
//│ 															in (fun f⁹⁴ -> (fun i⁵⁹ -> foldl_₀_₀_₁(f⁹⁴, f⁹⁴(i⁵⁹, h³⁷), t⁴⁴))) else 
//│ 															let t⁴⁵ = map_₀_₀_₀((fun x¹⁸ -> (x¹⁸ % 65536)), _lh_uniform_LH_C_1⁷)
//│ 															in let h³⁸ = t⁴³
//│ 															in (fun f⁹⁵ -> (fun i⁶⁰ -> foldl_₀_₀_₂(f⁹⁵, f⁹⁵(i⁶⁰, h³⁸), t⁴⁵)))
//│ 													| _  => error⁰}}
//│ 											| _  => case _lh_uniform_arg2² of {
//│ 												LH_C _lh_uniform_LH_C_0⁸ _lh_uniform_LH_C_1⁸ => 
//│ 													let t⁴⁶ = (_lh_uniform_LH_C_0⁸ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 													in if (t⁴⁶ == _lh_uniform_LH_C_0⁵) then 
//│ 														let t⁴⁷ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁸)
//│ 														in let h³⁹ = t⁴⁶
//│ 														in (fun f⁹⁶ -> (fun i⁶¹ -> foldl_₀_₀_₃(f⁹⁶, f⁹⁶(i⁶¹, h³⁹), t⁴⁷))) else 
//│ 														let t⁴⁸ = map_₀_₁_₀((fun x¹⁹ -> (x¹⁹ % 65536)), _lh_uniform_LH_C_1⁸)
//│ 														in let h⁴⁰ = t⁴⁶
//│ 														in (fun f⁹⁷ -> (fun i⁶² -> foldl_₀_₀_₄(f⁹⁷, f⁹⁷(i⁶², h⁴⁰), t⁴⁸)))
//│ 												| _  => error⁰}}
//│ 										| _  => case _lh_uniform_arg2² of {
//│ 											LH_C _lh_uniform_LH_C_0⁹ _lh_uniform_LH_C_1⁹ => 
//│ 												let t⁴⁹ = (_lh_uniform_LH_C_0⁹ % (_lh_uniform_LH_C_0⁵ + 1))
//│ 												in if (t⁴⁹ == _lh_uniform_LH_C_0⁵) then 
//│ 													let t⁵⁰ = uniform_₀_₀_₀(_lh_uniform_LH_C_1⁵, _lh_uniform_LH_C_1⁹)
//│ 													in let h⁴¹ = t⁴⁹
//│ 													in (fun f⁹⁸ -> (fun i⁶³ -> foldl_₀_₀_₅(f⁹⁸, f⁹⁸(i⁶³, h⁴¹), t⁵⁰))) else 
//│ 													let t⁵¹ = map_₀_₂_₀((fun x²⁰ -> (x²⁰ % 65536)), _lh_uniform_LH_C_1⁹)
//│ 													in let h⁴² = t⁴⁹
//│ 													in (fun f⁹⁹ -> (fun i⁶⁴ -> foldl_₀_₀_₆(f⁹⁹, f⁹⁹(i⁶⁴, h⁴²), t⁵¹)))
//│ 											| _  => error⁰}}
//│ 									| _  => error⁰}
//│ 								where
//│ 								def foldl_₀_₀_₁(f⁸⁵, i⁵³, ls⁴⁰) = 
//│ 									ls⁴⁰(f⁸⁵, i⁵³)
//│ 								def foldl_₀_₀_₂(f⁶², i⁴⁰, ls²⁷) = 
//│ 									ls²⁷(f⁶², i⁴⁰)
//│ 								def foldl_₀_₀_₃(f⁹⁰, i⁵⁵, ls⁴⁴) = 
//│ 									ls⁴⁴(f⁹⁰, i⁵⁵)
//│ 								def foldl_₀_₀_₄(f⁶⁹, i⁴⁵, ls³²) = 
//│ 									ls³²(f⁶⁹, i⁴⁵)
//│ 								def foldl_₀_₀_₅(f⁶⁸, i⁴⁴, ls³¹) = 
//│ 									ls³¹(f⁶⁸, i⁴⁴)
//│ 								def foldl_₀_₀_₆(f⁸⁷, i⁵⁴, ls⁴¹) = 
//│ 									ls⁴¹(f⁸⁷, i⁵⁴)
//│ 								def foldl_₀_₀_₇(f⁷⁰, i⁴⁶, ls³³) = 
//│ 									ls³³(f⁷⁰, i⁴⁶)
//│ 								def map_₀_₀_₀(f⁷⁵, ls³⁶) = 
//│ 									case ls³⁶ of {
//│ 										LH_C h²⁶ t³² => 
//│ 											let t⁴⁰ = map_₀_₀_₀(f⁷⁵, t³²)
//│ 											in let h³⁴ = f⁷⁵(h²⁶)
//│ 											in (fun f⁷⁶ -> (fun i⁵⁰ -> foldl_₀_₀_₈(f⁷⁶, f⁷⁶(i⁵⁰, h³⁴), t⁴⁰)))
//│ 										| LH_N  => (fun f⁷⁷ -> (fun i⁵¹ -> i⁵¹))}
//│ 									where
//│ 									def foldl_₀_₀_₈(f⁶⁴, i⁴¹, ls²⁸) = 
//│ 										ls²⁸(f⁶⁴, i⁴¹)
//│ 								def map_₀_₁_₀(f⁶⁵, ls²⁹) = 
//│ 									case ls²⁹ of {
//│ 										LH_C h¹⁶ t¹⁹ => 
//│ 											let t³⁸ = map_₀_₁_₀(f⁶⁵, t¹⁹)
//│ 											in let h³² = f⁶⁵(h¹⁶)
//│ 											in (fun f⁶⁶ -> (fun i⁴² -> foldl_₀_₀_₉(f⁶⁶, f⁶⁶(i⁴², h³²), t³⁸)))
//│ 										| LH_N  => (fun f⁶⁷ -> (fun i⁴³ -> i⁴³))}
//│ 									where
//│ 									def foldl_₀_₀_₉(f⁹¹, i⁵⁶, ls⁴⁵) = 
//│ 										ls⁴⁵(f⁹¹, i⁵⁶)
//│ 								def map_₀_₂_₀(f⁷², ls³⁵) = 
//│ 									case ls³⁵ of {
//│ 										LH_C h³⁰ t³⁶ => 
//│ 											let t³⁹ = map_₀_₂_₀(f⁷², t³⁶)
//│ 											in let h³³ = f⁷²(h³⁰)
//│ 											in (fun f⁷³ -> (fun i⁴⁸ -> foldl_₀_₀_₁₀(f⁷³, f⁷³(i⁴⁸, h³³), t³⁹)))
//│ 										| LH_N  => (fun f⁷⁴ -> (fun i⁴⁹ -> i⁴⁹))}
//│ 									where
//│ 									def foldl_₀_₀_₁₀(f⁷¹, i⁴⁷, ls³⁴) = 
//│ 										ls³⁴(f⁷¹, i⁴⁷)
//│ 	def process_₀_₀_₀(_lh_process_arg1²) = 
//│ 		doInput_₀_₀_₁(randomInts_₀_₀_₀(111, 47), _lh_process_arg1²)
//│ 		where
//│ 		def doInput_₀_₀_₁(_lh_doInput_arg1⁸, _lh_doInput_arg2⁴) = 
//│ 			_lh_doInput_arg2⁴(_lh_doInput_arg1⁸)
//│ 		def randomInts_₀_₀_₀(_lh_randomInts_arg1², _lh_randomInts_arg2²) = 
//│ 			if ((1 <= _lh_randomInts_arg1²) && (_lh_randomInts_arg1² <= 2147483562)) then if ((1 <= _lh_randomInts_arg2²) && (_lh_randomInts_arg2² <= 2147483398)) then rands_₀_₀_₀(_lh_randomInts_arg1², _lh_randomInts_arg2²) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) else error⁰([LH_C 'r' [LH_C 'a' [LH_C 'n' [LH_C 'd' [LH_C 'o' [LH_C 'm' [LH_C 'I' [LH_C 'n' [LH_C 't' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'B' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'e' [LH_C 'd' [LH_C '.' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 			where
//│ 			def rands_₀_₀_₀(_lh_rands_arg1², _lh_rands_arg2²) = 
//│ 				let k⁷ = div⁰(_lh_rands_arg1², 53668)
//│ 				in let s1'² = ((40014 * (_lh_rands_arg1² - (k⁷ * 53668))) - (k⁷ * 12211))
//│ 				in let s1''² = if (s1'² < 0) then (s1'² + 2147483563) else s1'²
//│ 				in let k'² = div⁰(_lh_rands_arg2², 52774)
//│ 				in let s2'² = ((40692 * (_lh_rands_arg2² - (k'² * 52774))) - (k'² * 3791))
//│ 				in let s2''² = if (s2'² < 0) then (s2'² + 2147483399) else s2'²
//│ 				in let z² = (s1''² - s2''²)
//│ 				in if (z² < 1) then lazy⁰([LH_C (z² + 2147483562) rands_₀_₀_₀(s1''², s2''²)]) else lazy⁰([LH_C z² rands_₀_₀_₀(s1''², s2''²)])
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
