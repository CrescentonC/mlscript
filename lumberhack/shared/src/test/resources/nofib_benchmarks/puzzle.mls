

:lhInHaskell
:lhGenOCaml
all f [] = True
all f (h:t) = if f h then all f t else False
data ItemType = Bono | Edge | Larry | Adam deriving Eq
succItem Bono = Edge
succItem Edge = Larry
succItem Larry = Adam
isEnd Bono = False
isEnd Edge = False
isEnd Larry = False
isEnd Adam = True
itemFromTo a b = if polyEq a b then [a] else (a:(itemFromTo (succItem a) b))
data BankType = LeftBank | RightBank deriving Eq
data StateType = State BankType BankType BankType BankType deriving Eq
type History = [(Int, StateType)]
type Solutions = [History]
bonoPos (State a b c d) = a
edgePos (State a b c d) = b
larryPos (State a b c d) = c
adamPos (State a b c d) = d
initialState, finalState :: StateType
initialState = State LeftBank LeftBank LeftBank LeftBank
finalState = State RightBank RightBank RightBank RightBank
position :: ItemType -> StateType ->  BankType
position Bono = bonoPos
position Edge = edgePos
position Larry = larryPos
position Adam = adamPos
updateState :: StateType -> ItemType -> BankType -> StateType
updateState (State a b c d) Bono pos = State pos b c d
updateState (State a b c d) Edge pos = State a pos c d
updateState (State a b c d) Larry pos = State a b pos d
updateState (State a b c d) Adam pos = State a b c pos
opposite :: BankType -> BankType
opposite LeftBank = RightBank
opposite RightBank = LeftBank
notSeen :: StateType -> History -> Bool
notSeen state = all (\_s -> case _s of (_, s) -> polyNeq state s)
writeItem :: ItemType -> BankType -> ShowS
writeItem Bono LeftBank rest
  = "    Bono |                    ||" ++ rest
writeItem Edge LeftBank rest
  = "The Edge |                    ||" ++ rest
writeItem Larry LeftBank rest
  = "   Larry |                    ||" ++ rest
writeItem Adam LeftBank rest
  = "    Adam |                    ||" ++ rest
writeItem Bono RightBank rest
  = "         |                    | Bono|" ++ rest
writeItem Edge RightBank rest
  = "         |                    | The Edge|" ++ rest
writeItem Larry RightBank rest
  = "         |                    | Larry|" ++ rest
writeItem Adam RightBank rest
  = "         |                    | Adam|" ++ rest
writeState :: StateType -> ShowS
writeState state = (\s -> "----------------------------------------|" ++ s) . (writeItem Bono (bonoPos state)) . (writeItem Edge (edgePos state)) . (writeItem Larry (larryPos state)) . (writeItem Adam (adamPos state)) . (\s -> "----------------------------------------|" ++ s)
writeHistory :: History -> ShowS
writeHistory [ ] = \x -> x
writeHistory history = foldr (\timestate acc -> case timestate of (time, state) -> ((\x -> "Time: " ++ x) . (\x -> (string_of_int ((totalTime history) - time)) ++ x) . (\x -> '|':x) . (writeState state) . acc)) (\x -> x) history
writeSolutions :: Solutions -> Int -> ShowS
writeSolutions [ ] _ = \x -> x
writeSolutions (item : next) count
  = (\x -> "Solution " ++ x) . (\x -> (string_of_int count) ++ x) . (\x -> '|':x) . (writeHistory item) . (writeSolutions next (count + 1))
totalTime :: History -> Int
totalTime ((time, _) : _) = time
minSolutions :: Solutions -> Solutions
minSolutions [ ] = [ ]
minSolutions (history : next) =
  let minAcc = \minSoFar -> \mins -> \ls -> case ls of {
    [] -> mins;
    (history : next) ->
      let total = totalTime history in
      if minSoFar < total then
        minAcc minSoFar mins next
      else if minSoFar == total then
        minAcc minSoFar (history : mins) next
      else
        minAcc total [history] next
  }
  in
  reverse (minAcc (totalTime history) [history] next)
u2times :: ItemType -> Int
u2times Bono = 10
u2times Edge = 5
u2times Larry = 2
u2times Adam = 1
transfer :: StateType -> StateType -> BankType -> Int -> History -> Solutions
-- We are trying to get from a legal state, source, to another legal
-- state and history tells us one way to do it in time countdown
-- starting from dest where the torch is at location.
-- If we find newDest from which we can get to dest in one step
-- we can find all the solutions recursively.
transfer source dest location countdown history =
  if polyEq source dest then
    [(countdown, dest) : history]
  else
    let newHistory = (countdown, dest) : history in
    let newLocation = opposite location in
    let moveOne = concat [transfer source newDest newLocation newTime newHistory
                            | item <- itemFromTo Bono Adam,
                              polyEq (position item dest) location,
                              let newDest = updateState dest item newLocation,
                              notSeen newDest history,
                              let newTime = countdown + (u2times item)] in
    let moveTwo = concat [transfer source newDest newLocation newTime newHistory
                            | i <- itemFromTo Bono Larry,
                              j <- itemFromTo (succItem i) Adam,
                              (polyEq (position i dest) location) && (polyEq (position j dest) location),
                              let newDest = updateState (updateState dest i newLocation) j newLocation,
                              notSeen newDest history,
                              let newTime = countdown + (u2times i)] in
    moveOne ++ moveTwo
    -- let moveOne = concat [transfer source (updateState dest item newLocation) newLocation (countdown + u2times item) newHistory
    --                         | item <- [Bono .. Adam],
    --                           position item dest == location,
    --                           notSeen (updateState dest item newLocation) history] in
    -- let moveTwo = concat [transfer source (updateState (updateState dest i newLocation) j newLocation) newLocation (countdown + u2times i) newHistory
    --                         | i <- [Bono .. Larry],
    --                           j <- [succ i .. Adam],
    --                           position i dest == location &&
    --                           position j dest == location,
    --                           notSeen (updateState (updateState dest i newLocation) j newLocation) history] in
testPuzzle_nofib x =
  let time = if ((length x) == 1) then 0 else error "puzzle expects exactly one argument" in
  let solutions = transfer initialState finalState RightBank time [ ] in
  let mins = minSolutions solutions in
  (writeSolutions mins 1 "")
testPuzzle_nofib $ primId [2]
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> after expansion >>>>>>>>>>
//│ testPuzzle_nofib_lh_₁(primId⁰([LH_C 2 [LH_N]]))
//│ def adamPos_lh_₁(_lh_adamPos_arg1²) = case _lh_adamPos_arg1² of {
//│ 	State _lh_adamPos_State_0² _lh_adamPos_State_1² _lh_adamPos_State_2² _lh_adamPos_State_3² => _lh_adamPos_State_3²
//│ 	| _  => error⁰}
//│ def adamPos_lh_₂(_lh_adamPos_arg1¹) = case _lh_adamPos_arg1¹ of {
//│ 	State _lh_adamPos_State_0¹ _lh_adamPos_State_1¹ _lh_adamPos_State_2¹ _lh_adamPos_State_3¹ => _lh_adamPos_State_3¹
//│ 	| _  => error⁰}
//│ def adamPos_lh_₃(_lh_adamPos_arg1⁰) = case _lh_adamPos_arg1⁰ of {
//│ 	State _lh_adamPos_State_0⁰ _lh_adamPos_State_1⁰ _lh_adamPos_State_2⁰ _lh_adamPos_State_3⁰ => _lh_adamPos_State_3⁰
//│ 	| _  => error⁰}
//│ def all_lh_₁(_lh_all_arg1¹, _lh_all_arg2¹) = case _lh_all_arg2¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₁(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False]
//│ 	| _  => error⁰}
//│ def all_lh_₂(_lh_all_arg1⁰, _lh_all_arg2⁰) = case _lh_all_arg2⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₂(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False]
//│ 	| _  => error⁰}
//│ def bonoPos_lh_₁(_lh_bonoPos_arg1²) = case _lh_bonoPos_arg1² of {
//│ 	State _lh_bonoPos_State_0² _lh_bonoPos_State_1² _lh_bonoPos_State_2² _lh_bonoPos_State_3² => _lh_bonoPos_State_0²
//│ 	| _  => error⁰}
//│ def bonoPos_lh_₂(_lh_bonoPos_arg1¹) = case _lh_bonoPos_arg1¹ of {
//│ 	State _lh_bonoPos_State_0¹ _lh_bonoPos_State_1¹ _lh_bonoPos_State_2¹ _lh_bonoPos_State_3¹ => _lh_bonoPos_State_0¹
//│ 	| _  => error⁰}
//│ def bonoPos_lh_₃(_lh_bonoPos_arg1⁰) = case _lh_bonoPos_arg1⁰ of {
//│ 	State _lh_bonoPos_State_0⁰ _lh_bonoPos_State_1⁰ _lh_bonoPos_State_2⁰ _lh_bonoPos_State_3⁰ => _lh_bonoPos_State_0⁰
//│ 	| _  => error⁰}
//│ def concat_lh_₁(lss¹) = case lss¹ of {
//│ 	LH_C h⁸ t⁸ => mappend_lh_₆(h⁸, concat_lh_₁(t⁸))
//│ 	| LH_N  => [LH_N]}
//│ def concat_lh_₂(lss⁰) = case lss⁰ of {
//│ 	LH_C h⁶ t⁶ => mappend_lh_₇(h⁶, concat_lh_₂(t⁶))
//│ 	| LH_N  => [LH_N]}
//│ def edgePos_lh_₁(_lh_edgePos_arg1³) = case _lh_edgePos_arg1³ of {
//│ 	State _lh_edgePos_State_0³ _lh_edgePos_State_1³ _lh_edgePos_State_2³ _lh_edgePos_State_3³ => _lh_edgePos_State_1³
//│ 	| _  => error⁰}
//│ def edgePos_lh_₂(_lh_edgePos_arg1²) = case _lh_edgePos_arg1² of {
//│ 	State _lh_edgePos_State_0² _lh_edgePos_State_1² _lh_edgePos_State_2² _lh_edgePos_State_3² => _lh_edgePos_State_1²
//│ 	| _  => error⁰}
//│ def edgePos_lh_₃(_lh_edgePos_arg1¹) = case _lh_edgePos_arg1¹ of {
//│ 	State _lh_edgePos_State_0¹ _lh_edgePos_State_1¹ _lh_edgePos_State_2¹ _lh_edgePos_State_3¹ => _lh_edgePos_State_1¹
//│ 	| _  => error⁰}
//│ def edgePos_lh_₄(_lh_edgePos_arg1⁰) = case _lh_edgePos_arg1⁰ of {
//│ 	State _lh_edgePos_State_0⁰ _lh_edgePos_State_1⁰ _lh_edgePos_State_2⁰ _lh_edgePos_State_3⁰ => _lh_edgePos_State_1⁰
//│ 	| _  => error⁰}
//│ def finalState_lh_₁ = [State [RightBank] [RightBank] [RightBank] [RightBank]]
//│ def foldr_lh_₁(f⁰, i⁰, ls¹) = case ls¹ of {
//│ 	LH_C h⁵ t⁵ => f⁰(h⁵, foldr_lh_₁(f⁰, i⁰, t⁵))
//│ 	| LH_N  => i⁰}
//│ def initialState_lh_₁ = [State [LeftBank] [LeftBank] [LeftBank] [LeftBank]]
//│ def itemFromTo_lh_₁(_lh_itemFromTo_arg1², _lh_itemFromTo_arg2²) = if polyEq⁰(_lh_itemFromTo_arg1², _lh_itemFromTo_arg2²) then [LH_C _lh_itemFromTo_arg1² [LH_N]] else [LH_C _lh_itemFromTo_arg1² itemFromTo_lh_₁(succItem_lh_₂(_lh_itemFromTo_arg1²), _lh_itemFromTo_arg2²)]
//│ def itemFromTo_lh_₂(_lh_itemFromTo_arg1¹, _lh_itemFromTo_arg2¹) = if polyEq⁰(_lh_itemFromTo_arg1¹, _lh_itemFromTo_arg2¹) then [LH_C _lh_itemFromTo_arg1¹ [LH_N]] else [LH_C _lh_itemFromTo_arg1¹ itemFromTo_lh_₂(succItem_lh_₃(_lh_itemFromTo_arg1¹), _lh_itemFromTo_arg2¹)]
//│ def itemFromTo_lh_₃(_lh_itemFromTo_arg1⁰, _lh_itemFromTo_arg2⁰) = if polyEq⁰(_lh_itemFromTo_arg1⁰, _lh_itemFromTo_arg2⁰) then [LH_C _lh_itemFromTo_arg1⁰ [LH_N]] else [LH_C _lh_itemFromTo_arg1⁰ itemFromTo_lh_₃(succItem_lh_₄(_lh_itemFromTo_arg1⁰), _lh_itemFromTo_arg2⁰)]
//│ def larryPos_lh_₁(_lh_larryPos_arg1²) = case _lh_larryPos_arg1² of {
//│ 	State _lh_larryPos_State_0² _lh_larryPos_State_1² _lh_larryPos_State_2² _lh_larryPos_State_3² => _lh_larryPos_State_2²
//│ 	| _  => error⁰}
//│ def larryPos_lh_₂(_lh_larryPos_arg1¹) = case _lh_larryPos_arg1¹ of {
//│ 	State _lh_larryPos_State_0¹ _lh_larryPos_State_1¹ _lh_larryPos_State_2¹ _lh_larryPos_State_3¹ => _lh_larryPos_State_2¹
//│ 	| _  => error⁰}
//│ def larryPos_lh_₃(_lh_larryPos_arg1⁰) = case _lh_larryPos_arg1⁰ of {
//│ 	State _lh_larryPos_State_0⁰ _lh_larryPos_State_1⁰ _lh_larryPos_State_2⁰ _lh_larryPos_State_3⁰ => _lh_larryPos_State_2⁰
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls³) = case ls³ of {
//│ 	LH_C h¹¹ t¹¹ => (1 + length_lh_₁(t¹¹))
//│ 	| LH_N  => 0}
//│ def mappend_lh_₁(xs⁶, ys⁶) = case xs⁶ of {
//│ 	LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₂(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₂(t⁹, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₃(xs⁴, ys⁴) = case xs⁴ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₃(t⁷, ys⁴)]
//│ 	| LH_N  => ys⁴}
//│ def mappend_lh_₄(xs³, ys³) = case xs³ of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₄(t⁴, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₅(xs², ys²) = case xs² of {
//│ 	LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₆(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₆(t¹, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₇(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₇(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def minSolutions_lh_₁(_lh_minSolutions_arg1⁰) = case _lh_minSolutions_arg1⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_minSolutions_LH_C_0⁰ _lh_minSolutions_LH_C_1⁰ => 
//│ 		let minAcc⁰ = (fun minSoFar⁰ -> (fun mins⁰ -> (fun ls⁴ -> 
//│ 			let _lh_matchIdent³ = ls⁴
//│ 			in case _lh_matchIdent³ of {
//│ 				LH_N  => mins⁰
//│ 				| LH_C _lh_minSolutions_LH_C_0¹ _lh_minSolutions_LH_C_1¹ => 
//│ 					let total⁰ = totalTime_lh_₂(_lh_minSolutions_LH_C_0¹)
//│ 					in if (minSoFar⁰ < total⁰) then minAcc⁰(minSoFar⁰, mins⁰, _lh_minSolutions_LH_C_1¹) else if (minSoFar⁰ == total⁰) then minAcc⁰(minSoFar⁰, [LH_C _lh_minSolutions_LH_C_0¹ mins⁰], _lh_minSolutions_LH_C_1¹) else minAcc⁰(total⁰, [LH_C _lh_minSolutions_LH_C_0¹ [LH_N]], _lh_minSolutions_LH_C_1¹)
//│ 				| _  => error⁰})))
//│ 		in reverse_lh_₁(minAcc⁰(totalTime_lh_₁(_lh_minSolutions_LH_C_0⁰), [LH_C _lh_minSolutions_LH_C_0⁰ [LH_N]], _lh_minSolutions_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def notSeen_lh_₁(_lh_notSeen_arg1¹) = all_lh_₁((fun _s¹ -> 
//│ 	let _lh_matchIdent¹ = _s¹
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P2 _lh_notSeen_LH_P2_0¹ _lh_notSeen_LH_P2_1¹ => polyNeq⁰(_lh_notSeen_arg1¹, _lh_notSeen_LH_P2_1¹)
//│ 		| _  => error⁰}))
//│ def notSeen_lh_₂(_lh_notSeen_arg1⁰) = all_lh_₂((fun _s⁰ -> 
//│ 	let _lh_matchIdent⁰ = _s⁰
//│ 	in case _lh_matchIdent⁰ of {
//│ 		LH_P2 _lh_notSeen_LH_P2_0⁰ _lh_notSeen_LH_P2_1⁰ => polyNeq⁰(_lh_notSeen_arg1⁰, _lh_notSeen_LH_P2_1⁰)
//│ 		| _  => error⁰}))
//│ def opposite_lh_₁(_lh_opposite_arg1⁰) = case _lh_opposite_arg1⁰ of {
//│ 	LeftBank  => [RightBank]
//│ 	| RightBank  => [LeftBank]
//│ 	| _  => error⁰}
//│ def position_lh_₁(_lh_position_arg1²) = case _lh_position_arg1² of {
//│ 	Bono  => bonoPos_lh_₁
//│ 	| Edge  => edgePos_lh_₁
//│ 	| Larry  => larryPos_lh_₁
//│ 	| Adam  => adamPos_lh_₁
//│ 	| _  => error⁰}
//│ def position_lh_₂(_lh_position_arg1¹) = case _lh_position_arg1¹ of {
//│ 	Bono  => bonoPos_lh_₂
//│ 	| Edge  => edgePos_lh_₂
//│ 	| Larry  => larryPos_lh_₂
//│ 	| Adam  => adamPos_lh_₂
//│ 	| _  => error⁰}
//│ def position_lh_₃(_lh_position_arg1⁰) = case _lh_position_arg1⁰ of {
//│ 	Bono  => bonoPos_lh_₃
//│ 	| Edge  => edgePos_lh_₃
//│ 	| Larry  => larryPos_lh_₃
//│ 	| Adam  => adamPos_lh_₃
//│ 	| _  => error⁰}
//│ def reverse_helper_lh_₁(ls⁰, a⁰) = case ls⁰ of {
//│ 	LH_C h² t² => reverse_helper_lh_₁(t², [LH_C h² a⁰])
//│ 	| LH_N  => a⁰}
//│ def reverse_lh_₁(ls²) = reverse_helper_lh_₁(ls², [LH_N])
//│ def succItem_lh_₁(_lh_succItem_arg1³) = case _lh_succItem_arg1³ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₂(_lh_succItem_arg1²) = case _lh_succItem_arg1² of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₃(_lh_succItem_arg1¹) = case _lh_succItem_arg1¹ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₄(_lh_succItem_arg1⁰) = case _lh_succItem_arg1⁰ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def testPuzzle_nofib_lh_₁(_lh_testPuzzle_nofib_arg1⁰) = 
//│ 	let time⁰ = if (length_lh_₁(_lh_testPuzzle_nofib_arg1⁰) == 1) then 0 else error⁰([LH_C 'p' [LH_C 'u' [LH_C 'z' [LH_C 'z' [LH_C 'l' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'p' [LH_C 'e' [LH_C 'c' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'a' [LH_C 'c' [LH_C 't' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C 'e' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C 'u' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	in let solutions⁰ = transfer_lh_₁(initialState_lh_₁, finalState_lh_₁, [RightBank], time⁰, [LH_N])
//│ 	in let mins¹ = minSolutions_lh_₁(solutions⁰)
//│ 	in writeSolutions_lh_₁(mins¹, 1, [LH_N])
//│ def totalTime_lh_₁(_lh_totalTime_arg1²) = case _lh_totalTime_arg1² of {
//│ 	LH_C _lh_totalTime_LH_C_0² _lh_totalTime_LH_C_1² => case _lh_totalTime_LH_C_0² of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0² _lh_totalTime_LH_P2_1² => _lh_totalTime_LH_P2_0²
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def totalTime_lh_₂(_lh_totalTime_arg1¹) = case _lh_totalTime_arg1¹ of {
//│ 	LH_C _lh_totalTime_LH_C_0¹ _lh_totalTime_LH_C_1¹ => case _lh_totalTime_LH_C_0¹ of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0¹ _lh_totalTime_LH_P2_1¹ => _lh_totalTime_LH_P2_0¹
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def totalTime_lh_₃(_lh_totalTime_arg1⁰) = case _lh_totalTime_arg1⁰ of {
//│ 	LH_C _lh_totalTime_LH_C_0⁰ _lh_totalTime_LH_C_1⁰ => case _lh_totalTime_LH_C_0⁰ of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0⁰ _lh_totalTime_LH_P2_1⁰ => _lh_totalTime_LH_P2_0⁰
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def transfer_lh_₁(_lh_transfer_arg1⁰, _lh_transfer_arg2⁰, _lh_transfer_arg3⁰, _lh_transfer_arg4⁰, _lh_transfer_arg5⁰) = if polyEq⁰(_lh_transfer_arg1⁰, _lh_transfer_arg2⁰) then [LH_C [LH_C [LH_P2 _lh_transfer_arg4⁰ _lh_transfer_arg2⁰] _lh_transfer_arg5⁰] [LH_N]] else 
//│ 	let newHistory⁰ = [LH_C [LH_P2 _lh_transfer_arg4⁰ _lh_transfer_arg2⁰] _lh_transfer_arg5⁰]
//│ 	in let newLocation⁰ = opposite_lh_₁(_lh_transfer_arg3⁰)
//│ 	in let moveOne⁰ = concat_lh_₂(
//│ 		let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h⁰, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) then 
//│ 				let newDest⁰ = updateState_lh_₂(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h⁰, newLocation⁰)
//│ 				in if notSeen_lh_₁(newDest⁰, _lh_transfer_arg5⁰) then 
//│ 					let newTime⁰ = (_lh_transfer_arg4⁰ + u2times_lh_₁(_lh_listcomp_fun_ls_h⁰))
//│ 					in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest⁰, newLocation⁰, newTime⁰, newHistory⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁰(itemFromTo_lh_₁([Bono], [Adam])))
//│ 	in let moveTwo⁰ = concat_lh_₁(
//│ 		let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 			LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => 
//│ 				let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 					LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then 
//│ 						let newDest¹ = updateState_lh_₃(updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ 						in if notSeen_lh_₂(newDest¹, _lh_transfer_arg5⁰) then 
//│ 							let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h¹))
//│ 							in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ 					| LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ 				in _lh_listcomp_fun²(itemFromTo_lh_₂(succItem_lh_₁(_lh_listcomp_fun_ls_h¹), [Adam]))
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun¹(itemFromTo_lh_₃([Bono], [Larry])))
//│ 	in mappend_lh_₃(moveOne⁰, moveTwo⁰)
//│ def u2times_lh_₁(_lh_u2times_arg1¹) = case _lh_u2times_arg1¹ of {
//│ 	Bono  => 10
//│ 	| Edge  => 5
//│ 	| Larry  => 2
//│ 	| Adam  => 1
//│ 	| _  => error⁰}
//│ def u2times_lh_₂(_lh_u2times_arg1⁰) = case _lh_u2times_arg1⁰ of {
//│ 	Bono  => 10
//│ 	| Edge  => 5
//│ 	| Larry  => 2
//│ 	| Adam  => 1
//│ 	| _  => error⁰}
//│ def updateState_lh_₁(_lh_updateState_arg1², _lh_updateState_arg2², _lh_updateState_arg3²) = case _lh_updateState_arg1² of {
//│ 	State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_State_3² => case _lh_updateState_arg2² of {
//│ 		Bono  => [State _lh_updateState_arg3² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_State_3²]
//│ 		| Edge  => [State _lh_updateState_State_0² _lh_updateState_arg3² _lh_updateState_State_2² _lh_updateState_State_3²]
//│ 		| Larry  => [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_arg3² _lh_updateState_State_3²]
//│ 		| Adam  => [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_arg3²]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def updateState_lh_₂(_lh_updateState_arg1¹, _lh_updateState_arg2¹, _lh_updateState_arg3¹) = case _lh_updateState_arg1¹ of {
//│ 	State _lh_updateState_State_0¹ _lh_updateState_State_1¹ _lh_updateState_State_2¹ _lh_updateState_State_3¹ => case _lh_updateState_arg2¹ of {
//│ 		Bono  => [State _lh_updateState_arg3¹ _lh_updateState_State_1¹ _lh_updateState_State_2¹ _lh_updateState_State_3¹]
//│ 		| Edge  => [State _lh_updateState_State_0¹ _lh_updateState_arg3¹ _lh_updateState_State_2¹ _lh_updateState_State_3¹]
//│ 		| Larry  => [State _lh_updateState_State_0¹ _lh_updateState_State_1¹ _lh_updateState_arg3¹ _lh_updateState_State_3¹]
//│ 		| Adam  => [State _lh_updateState_State_0¹ _lh_updateState_State_1¹ _lh_updateState_State_2¹ _lh_updateState_arg3¹]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def updateState_lh_₃(_lh_updateState_arg1⁰, _lh_updateState_arg2⁰, _lh_updateState_arg3⁰) = case _lh_updateState_arg1⁰ of {
//│ 	State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰ => case _lh_updateState_arg2⁰ of {
//│ 		Bono  => [State _lh_updateState_arg3⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰]
//│ 		| Edge  => [State _lh_updateState_State_0⁰ _lh_updateState_arg3⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰]
//│ 		| Larry  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_arg3⁰ _lh_updateState_State_3⁰]
//│ 		| Adam  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_arg3⁰]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def writeHistory_lh_₁(_lh_writeHistory_arg1⁰) = case _lh_writeHistory_arg1⁰ of {
//│ 	LH_N  => (fun x⁰ -> x⁰)
//│ 	| _  => foldr_lh_₁((fun timestate⁰ -> (fun acc⁰ -> 
//│ 		let _lh_matchIdent² = timestate⁰
//│ 		in case _lh_matchIdent² of {
//│ 			LH_P2 _lh_writeHistory_LH_P2_0⁰ _lh_writeHistory_LH_P2_1⁰ => (fun _lh_funcomp_x⁵ -> (fun _lh_funcomp_x⁶ -> (fun _lh_funcomp_x⁷ -> (fun _lh_funcomp_x⁸ -> (fun x¹ -> mappend_lh_₅([LH_C 'T' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]]]], x¹))((fun x² -> mappend_lh_₄(string_of_int⁰((totalTime_lh_₃(_lh_writeHistory_arg1⁰) - _lh_writeHistory_LH_P2_0⁰)), x²))(_lh_funcomp_x⁸)))((fun x³ -> [LH_C '|' x³])(_lh_funcomp_x⁷)))(writeState_lh_₁(_lh_writeHistory_LH_P2_1⁰, _lh_funcomp_x⁶)))(acc⁰(_lh_funcomp_x⁵)))
//│ 			| _  => error⁰})), (fun x⁴ -> x⁴), _lh_writeHistory_arg1⁰)}
//│ def writeItem_lh_₁(_lh_writeItem_arg1⁰, _lh_writeItem_arg2⁰, _lh_writeItem_arg3⁰) = case _lh_writeItem_arg1⁰ of {
//│ 	Bono  => case _lh_writeItem_arg2⁰ of {
//│ 		LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| _  => error⁰}
//│ 	| Edge  => case _lh_writeItem_arg2⁰ of {
//│ 		LeftBank  => mappend_lh_₇([LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| _  => error⁰}
//│ 	| Larry  => case _lh_writeItem_arg2⁰ of {
//│ 		LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| _  => error⁰}
//│ 	| Adam  => case _lh_writeItem_arg2⁰ of {
//│ 		LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def writeSolutions_lh_₁(_lh_writeSolutions_arg1⁰, _lh_writeSolutions_arg2⁰) = case _lh_writeSolutions_arg1⁰ of {
//│ 	LH_N  => (fun x⁵ -> x⁵)
//│ 	| LH_C _lh_writeSolutions_LH_C_0⁰ _lh_writeSolutions_LH_C_1⁰ => (fun _lh_funcomp_x⁹ -> (fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> (fun _lh_funcomp_x¹² -> (fun x⁶ -> mappend_lh_₁([LH_C 'S' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]], x⁶))((fun x⁷ -> mappend_lh_₂(string_of_int⁰(_lh_writeSolutions_arg2⁰), x⁷))(_lh_funcomp_x¹²)))((fun x⁸ -> [LH_C '|' x⁸])(_lh_funcomp_x¹¹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0⁰, _lh_funcomp_x¹⁰)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1⁰, (_lh_writeSolutions_arg2⁰ + 1), _lh_funcomp_x⁹)))
//│ 	| _  => error⁰}
//│ def writeState_lh_₁(_lh_writeState_arg1⁰, _lh_funcomp_x⁰) = (fun _lh_funcomp_x¹ -> (fun _lh_funcomp_x² -> (fun _lh_funcomp_x³ -> (fun _lh_funcomp_x⁴ -> (fun s⁰ -> mappend_lh_₇([LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], s⁰))(writeItem_lh_₁([Bono], bonoPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x⁴)))(writeItem_lh_₁([Edge], edgePos_lh_₄(_lh_writeState_arg1⁰), _lh_funcomp_x³)))(writeItem_lh_₁([Larry], larryPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x²)))(writeItem_lh_₁([Adam], adamPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x¹)))((fun s¹ -> mappend_lh_₇([LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], s¹))(_lh_funcomp_x⁰))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec finalState_lh__d1 =
//│ 		  (`State((`RightBank), (`RightBank), (`RightBank), (`RightBank)));;
//│ 		let rec updateState_lh__d1 _lh_updateState_arg1_2 _lh_updateState_arg2_2 _lh_updateState_arg3_2 =
//│ 		  (match _lh_updateState_arg1_2 with
//│ 		    | `State(_lh_updateState_State_0_2, _lh_updateState_State_1_2, _lh_updateState_State_2_2, _lh_updateState_State_3_2) -> 
//│ 		      (match _lh_updateState_arg2_2 with
//│ 		        | `Bono -> 
//│ 		          (`State(_lh_updateState_arg3_2, _lh_updateState_State_1_2, _lh_updateState_State_2_2, _lh_updateState_State_3_2))
//│ 		        | `Edge -> 
//│ 		          (`State(_lh_updateState_State_0_2, _lh_updateState_arg3_2, _lh_updateState_State_2_2, _lh_updateState_State_3_2))
//│ 		        | `Larry -> 
//│ 		          (`State(_lh_updateState_State_0_2, _lh_updateState_State_1_2, _lh_updateState_arg3_2, _lh_updateState_State_3_2))
//│ 		        | `Adam -> 
//│ 		          (`State(_lh_updateState_State_0_2, _lh_updateState_State_1_2, _lh_updateState_State_2_2, _lh_updateState_arg3_2))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d3 xs_4 ys_4 =
//│ 		  (match xs_4 with
//│ 		    | `LH_C(h_7, t_7) -> 
//│ 		      (`LH_C(h_7, ((mappend_lh__d3 t_7) ys_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_4);;
//│ 		let rec u2times_lh__d1 _lh_u2times_arg1_1 =
//│ 		  (match _lh_u2times_arg1_1 with
//│ 		    | `Bono -> 
//│ 		      10
//│ 		    | `Edge -> 
//│ 		      5
//│ 		    | `Larry -> 
//│ 		      2
//│ 		    | `Adam -> 
//│ 		      1
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d7 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C(h_0, ((mappend_lh__d7 t_0) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec concat_lh__d2 lss_0 =
//│ 		  (match lss_0 with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      ((mappend_lh__d7 h_6) (concat_lh__d2 t_6))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec edgePos_lh__d2 _lh_edgePos_arg1_2 =
//│ 		  (match _lh_edgePos_arg1_2 with
//│ 		    | `State(_lh_edgePos_State_0_2, _lh_edgePos_State_1_2, _lh_edgePos_State_2_2, _lh_edgePos_State_3_2) -> 
//│ 		      _lh_edgePos_State_1_2
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec larryPos_lh__d2 _lh_larryPos_arg1_1 =
//│ 		  (match _lh_larryPos_arg1_1 with
//│ 		    | `State(_lh_larryPos_State_0_1, _lh_larryPos_State_1_1, _lh_larryPos_State_2_1, _lh_larryPos_State_3_1) -> 
//│ 		      _lh_larryPos_State_2_1
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec bonoPos_lh__d2 _lh_bonoPos_arg1_1 =
//│ 		  (match _lh_bonoPos_arg1_1 with
//│ 		    | `State(_lh_bonoPos_State_0_1, _lh_bonoPos_State_1_1, _lh_bonoPos_State_2_1, _lh_bonoPos_State_3_1) -> 
//│ 		      _lh_bonoPos_State_0_1
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec adamPos_lh__d2 _lh_adamPos_arg1_1 =
//│ 		  (match _lh_adamPos_arg1_1 with
//│ 		    | `State(_lh_adamPos_State_0_1, _lh_adamPos_State_1_1, _lh_adamPos_State_2_1, _lh_adamPos_State_3_1) -> 
//│ 		      _lh_adamPos_State_3_1
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec position_lh__d2 _lh_position_arg1_1 =
//│ 		  (match _lh_position_arg1_1 with
//│ 		    | `Bono -> 
//│ 		      bonoPos_lh__d2
//│ 		    | `Edge -> 
//│ 		      edgePos_lh__d2
//│ 		    | `Larry -> 
//│ 		      larryPos_lh__d2
//│ 		    | `Adam -> 
//│ 		      adamPos_lh__d2
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec u2times_lh__d2 _lh_u2times_arg1_0 =
//│ 		  (match _lh_u2times_arg1_0 with
//│ 		    | `Bono -> 
//│ 		      10
//│ 		    | `Edge -> 
//│ 		      5
//│ 		    | `Larry -> 
//│ 		      2
//│ 		    | `Adam -> 
//│ 		      1
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec all_lh__d2 _lh_all_arg1_0 _lh_all_arg2_0 =
//│ 		  (match _lh_all_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_all_LH_C_0_0, _lh_all_LH_C_1_0) -> 
//│ 		      (if (_lh_all_arg1_0 _lh_all_LH_C_0_0) then
//│ 		        ((all_lh__d2 _lh_all_arg1_0) _lh_all_LH_C_1_0)
//│ 		      else
//│ 		        false)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec notSeen_lh__d2 _lh_notSeen_arg1_0 =
//│ 		  (all_lh__d2 (fun _s_0 -> 
//│ 		    (let rec _lh_matchIdent_0 = _s_0 in
//│ 		      (match _lh_matchIdent_0 with
//│ 		        | `LH_P2(_lh_notSeen_LH_P2_0_0, _lh_notSeen_LH_P2_1_0) -> 
//│ 		          (_lh_notSeen_arg1_0 <> _lh_notSeen_LH_P2_1_0)
//│ 		        | _ -> 
//│ 		          (failwith "error")))));;
//│ 		let rec succItem_lh__d1 _lh_succItem_arg1_3 =
//│ 		  (match _lh_succItem_arg1_3 with
//│ 		    | `Bono -> 
//│ 		      (`Edge)
//│ 		    | `Edge -> 
//│ 		      (`Larry)
//│ 		    | `Larry -> 
//│ 		      (`Adam)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec succItem_lh__d4 _lh_succItem_arg1_0 =
//│ 		  (match _lh_succItem_arg1_0 with
//│ 		    | `Bono -> 
//│ 		      (`Edge)
//│ 		    | `Edge -> 
//│ 		      (`Larry)
//│ 		    | `Larry -> 
//│ 		      (`Adam)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec itemFromTo_lh__d3 _lh_itemFromTo_arg1_0 _lh_itemFromTo_arg2_0 =
//│ 		  (if (_lh_itemFromTo_arg1_0 = _lh_itemFromTo_arg2_0) then
//│ 		    (`LH_C(_lh_itemFromTo_arg1_0, (`LH_N)))
//│ 		  else
//│ 		    (`LH_C(_lh_itemFromTo_arg1_0, ((itemFromTo_lh__d3 (succItem_lh__d4 _lh_itemFromTo_arg1_0)) _lh_itemFromTo_arg2_0))));;
//│ 		let rec succItem_lh__d3 _lh_succItem_arg1_1 =
//│ 		  (match _lh_succItem_arg1_1 with
//│ 		    | `Bono -> 
//│ 		      (`Edge)
//│ 		    | `Edge -> 
//│ 		      (`Larry)
//│ 		    | `Larry -> 
//│ 		      (`Adam)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec itemFromTo_lh__d2 _lh_itemFromTo_arg1_1 _lh_itemFromTo_arg2_1 =
//│ 		  (if (_lh_itemFromTo_arg1_1 = _lh_itemFromTo_arg2_1) then
//│ 		    (`LH_C(_lh_itemFromTo_arg1_1, (`LH_N)))
//│ 		  else
//│ 		    (`LH_C(_lh_itemFromTo_arg1_1, ((itemFromTo_lh__d2 (succItem_lh__d3 _lh_itemFromTo_arg1_1)) _lh_itemFromTo_arg2_1))));;
//│ 		let rec opposite_lh__d1 _lh_opposite_arg1_0 =
//│ 		  (match _lh_opposite_arg1_0 with
//│ 		    | `LeftBank -> 
//│ 		      (`RightBank)
//│ 		    | `RightBank -> 
//│ 		      (`LeftBank)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec all_lh__d1 _lh_all_arg1_1 _lh_all_arg2_1 =
//│ 		  (match _lh_all_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_all_LH_C_0_1, _lh_all_LH_C_1_1) -> 
//│ 		      (if (_lh_all_arg1_1 _lh_all_LH_C_0_1) then
//│ 		        ((all_lh__d1 _lh_all_arg1_1) _lh_all_LH_C_1_1)
//│ 		      else
//│ 		        false)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec notSeen_lh__d1 _lh_notSeen_arg1_1 =
//│ 		  (all_lh__d1 (fun _s_1 -> 
//│ 		    (let rec _lh_matchIdent_1 = _s_1 in
//│ 		      (match _lh_matchIdent_1 with
//│ 		        | `LH_P2(_lh_notSeen_LH_P2_0_1, _lh_notSeen_LH_P2_1_1) -> 
//│ 		          (_lh_notSeen_arg1_1 <> _lh_notSeen_LH_P2_1_1)
//│ 		        | _ -> 
//│ 		          (failwith "error")))));;
//│ 		let rec edgePos_lh__d1 _lh_edgePos_arg1_3 =
//│ 		  (match _lh_edgePos_arg1_3 with
//│ 		    | `State(_lh_edgePos_State_0_3, _lh_edgePos_State_1_3, _lh_edgePos_State_2_3, _lh_edgePos_State_3_3) -> 
//│ 		      _lh_edgePos_State_1_3
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec bonoPos_lh__d1 _lh_bonoPos_arg1_2 =
//│ 		  (match _lh_bonoPos_arg1_2 with
//│ 		    | `State(_lh_bonoPos_State_0_2, _lh_bonoPos_State_1_2, _lh_bonoPos_State_2_2, _lh_bonoPos_State_3_2) -> 
//│ 		      _lh_bonoPos_State_0_2
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec adamPos_lh__d1 _lh_adamPos_arg1_2 =
//│ 		  (match _lh_adamPos_arg1_2 with
//│ 		    | `State(_lh_adamPos_State_0_2, _lh_adamPos_State_1_2, _lh_adamPos_State_2_2, _lh_adamPos_State_3_2) -> 
//│ 		      _lh_adamPos_State_3_2
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec larryPos_lh__d1 _lh_larryPos_arg1_2 =
//│ 		  (match _lh_larryPos_arg1_2 with
//│ 		    | `State(_lh_larryPos_State_0_2, _lh_larryPos_State_1_2, _lh_larryPos_State_2_2, _lh_larryPos_State_3_2) -> 
//│ 		      _lh_larryPos_State_2_2
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec position_lh__d1 _lh_position_arg1_2 =
//│ 		  (match _lh_position_arg1_2 with
//│ 		    | `Bono -> 
//│ 		      bonoPos_lh__d1
//│ 		    | `Edge -> 
//│ 		      edgePos_lh__d1
//│ 		    | `Larry -> 
//│ 		      larryPos_lh__d1
//│ 		    | `Adam -> 
//│ 		      adamPos_lh__d1
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec succItem_lh__d2 _lh_succItem_arg1_2 =
//│ 		  (match _lh_succItem_arg1_2 with
//│ 		    | `Bono -> 
//│ 		      (`Edge)
//│ 		    | `Edge -> 
//│ 		      (`Larry)
//│ 		    | `Larry -> 
//│ 		      (`Adam)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec itemFromTo_lh__d1 _lh_itemFromTo_arg1_2 _lh_itemFromTo_arg2_2 =
//│ 		  (if (_lh_itemFromTo_arg1_2 = _lh_itemFromTo_arg2_2) then
//│ 		    (`LH_C(_lh_itemFromTo_arg1_2, (`LH_N)))
//│ 		  else
//│ 		    (`LH_C(_lh_itemFromTo_arg1_2, ((itemFromTo_lh__d1 (succItem_lh__d2 _lh_itemFromTo_arg1_2)) _lh_itemFromTo_arg2_2))));;
//│ 		let rec edgePos_lh__d3 _lh_edgePos_arg1_1 =
//│ 		  (match _lh_edgePos_arg1_1 with
//│ 		    | `State(_lh_edgePos_State_0_1, _lh_edgePos_State_1_1, _lh_edgePos_State_2_1, _lh_edgePos_State_3_1) -> 
//│ 		      _lh_edgePos_State_1_1
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec bonoPos_lh__d3 _lh_bonoPos_arg1_0 =
//│ 		  (match _lh_bonoPos_arg1_0 with
//│ 		    | `State(_lh_bonoPos_State_0_0, _lh_bonoPos_State_1_0, _lh_bonoPos_State_2_0, _lh_bonoPos_State_3_0) -> 
//│ 		      _lh_bonoPos_State_0_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec larryPos_lh__d3 _lh_larryPos_arg1_0 =
//│ 		  (match _lh_larryPos_arg1_0 with
//│ 		    | `State(_lh_larryPos_State_0_0, _lh_larryPos_State_1_0, _lh_larryPos_State_2_0, _lh_larryPos_State_3_0) -> 
//│ 		      _lh_larryPos_State_2_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec adamPos_lh__d3 _lh_adamPos_arg1_0 =
//│ 		  (match _lh_adamPos_arg1_0 with
//│ 		    | `State(_lh_adamPos_State_0_0, _lh_adamPos_State_1_0, _lh_adamPos_State_2_0, _lh_adamPos_State_3_0) -> 
//│ 		      _lh_adamPos_State_3_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec position_lh__d3 _lh_position_arg1_0 =
//│ 		  (match _lh_position_arg1_0 with
//│ 		    | `Bono -> 
//│ 		      bonoPos_lh__d3
//│ 		    | `Edge -> 
//│ 		      edgePos_lh__d3
//│ 		    | `Larry -> 
//│ 		      larryPos_lh__d3
//│ 		    | `Adam -> 
//│ 		      adamPos_lh__d3
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d6 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (`LH_C(h_1, ((mappend_lh__d6 t_1) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec concat_lh__d1 lss_1 =
//│ 		  (match lss_1 with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      ((mappend_lh__d6 h_8) (concat_lh__d1 t_8))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec updateState_lh__d3 _lh_updateState_arg1_0 _lh_updateState_arg2_0 _lh_updateState_arg3_0 =
//│ 		  (match _lh_updateState_arg1_0 with
//│ 		    | `State(_lh_updateState_State_0_0, _lh_updateState_State_1_0, _lh_updateState_State_2_0, _lh_updateState_State_3_0) -> 
//│ 		      (match _lh_updateState_arg2_0 with
//│ 		        | `Bono -> 
//│ 		          (`State(_lh_updateState_arg3_0, _lh_updateState_State_1_0, _lh_updateState_State_2_0, _lh_updateState_State_3_0))
//│ 		        | `Edge -> 
//│ 		          (`State(_lh_updateState_State_0_0, _lh_updateState_arg3_0, _lh_updateState_State_2_0, _lh_updateState_State_3_0))
//│ 		        | `Larry -> 
//│ 		          (`State(_lh_updateState_State_0_0, _lh_updateState_State_1_0, _lh_updateState_arg3_0, _lh_updateState_State_3_0))
//│ 		        | `Adam -> 
//│ 		          (`State(_lh_updateState_State_0_0, _lh_updateState_State_1_0, _lh_updateState_State_2_0, _lh_updateState_arg3_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec updateState_lh__d2 _lh_updateState_arg1_1 _lh_updateState_arg2_1 _lh_updateState_arg3_1 =
//│ 		  (match _lh_updateState_arg1_1 with
//│ 		    | `State(_lh_updateState_State_0_1, _lh_updateState_State_1_1, _lh_updateState_State_2_1, _lh_updateState_State_3_1) -> 
//│ 		      (match _lh_updateState_arg2_1 with
//│ 		        | `Bono -> 
//│ 		          (`State(_lh_updateState_arg3_1, _lh_updateState_State_1_1, _lh_updateState_State_2_1, _lh_updateState_State_3_1))
//│ 		        | `Edge -> 
//│ 		          (`State(_lh_updateState_State_0_1, _lh_updateState_arg3_1, _lh_updateState_State_2_1, _lh_updateState_State_3_1))
//│ 		        | `Larry -> 
//│ 		          (`State(_lh_updateState_State_0_1, _lh_updateState_State_1_1, _lh_updateState_arg3_1, _lh_updateState_State_3_1))
//│ 		        | `Adam -> 
//│ 		          (`State(_lh_updateState_State_0_1, _lh_updateState_State_1_1, _lh_updateState_State_2_1, _lh_updateState_arg3_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec transfer_lh__d1 _lh_transfer_arg1_0 _lh_transfer_arg2_0 _lh_transfer_arg3_0 _lh_transfer_arg4_0 _lh_transfer_arg5_0 =
//│ 		  (if (_lh_transfer_arg1_0 = _lh_transfer_arg2_0) then
//│ 		    (`LH_C((`LH_C((`LH_P2(_lh_transfer_arg4_0, _lh_transfer_arg2_0)), _lh_transfer_arg5_0)), (`LH_N)))
//│ 		  else
//│ 		    (let rec newHistory_0 = (`LH_C((`LH_P2(_lh_transfer_arg4_0, _lh_transfer_arg2_0)), _lh_transfer_arg5_0)) in
//│ 		      (let rec newLocation_0 = (opposite_lh__d1 _lh_transfer_arg3_0) in
//│ 		        (let rec moveOne_0 = (concat_lh__d2 (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		          (match _lh_listcomp_fun_para_0 with
//│ 		            | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		              (if (((position_lh__d3 _lh_listcomp_fun_ls_h_0) _lh_transfer_arg2_0) = _lh_transfer_arg3_0) then
//│ 		                (let rec newDest_0 = (((updateState_lh__d2 _lh_transfer_arg2_0) _lh_listcomp_fun_ls_h_0) newLocation_0) in
//│ 		                  (if ((notSeen_lh__d1 newDest_0) _lh_transfer_arg5_0) then
//│ 		                    (let rec newTime_0 = (_lh_transfer_arg4_0 + (u2times_lh__d1 _lh_listcomp_fun_ls_h_0)) in
//│ 		                      (`LH_C((((((transfer_lh__d1 _lh_transfer_arg1_0) newDest_0) newLocation_0) newTime_0) newHistory_0), (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))))
//│ 		                  else
//│ 		                    (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		              else
//│ 		                (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))
//│ 		            | `LH_N -> 
//│ 		              (`LH_N))) in
//│ 		          (_lh_listcomp_fun_0 ((itemFromTo_lh__d1 (`Bono)) (`Adam))))) in
//│ 		          (let rec moveTwo_0 = (concat_lh__d1 (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		            (match _lh_listcomp_fun_para_1 with
//│ 		              | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		                  (match _lh_listcomp_fun_para_2 with
//│ 		                    | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		                      (if ((((position_lh__d2 _lh_listcomp_fun_ls_h_1) _lh_transfer_arg2_0) = _lh_transfer_arg3_0) && (((position_lh__d1 _lh_listcomp_fun_ls_h_2) _lh_transfer_arg2_0) = _lh_transfer_arg3_0)) then
//│ 		                        (let rec newDest_1 = (((updateState_lh__d3 (((updateState_lh__d1 _lh_transfer_arg2_0) _lh_listcomp_fun_ls_h_1) newLocation_0)) _lh_listcomp_fun_ls_h_2) newLocation_0) in
//│ 		                          (if ((notSeen_lh__d2 newDest_1) _lh_transfer_arg5_0) then
//│ 		                            (let rec newTime_1 = (_lh_transfer_arg4_0 + (u2times_lh__d2 _lh_listcomp_fun_ls_h_1)) in
//│ 		                              (`LH_C((((((transfer_lh__d1 _lh_transfer_arg1_0) newDest_1) newLocation_0) newTime_1) newHistory_0), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))))
//│ 		                          else
//│ 		                            (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		                      else
//│ 		                        (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))
//│ 		                    | `LH_N -> 
//│ 		                      (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))) in
//│ 		                  (_lh_listcomp_fun_2 ((itemFromTo_lh__d2 (succItem_lh__d1 _lh_listcomp_fun_ls_h_1)) (`Adam))))
//│ 		              | `LH_N -> 
//│ 		                (`LH_N))) in
//│ 		            (_lh_listcomp_fun_1 ((itemFromTo_lh__d3 (`Bono)) (`Larry))))) in
//│ 		            ((mappend_lh__d3 moveOne_0) moveTwo_0))))));;
//│ 		let rec initialState_lh__d1 =
//│ 		  (`State((`LeftBank), (`LeftBank), (`LeftBank), (`LeftBank)));;
//│ 		let rec length_lh__d1 ls_3 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_1_1, t_1_1) -> 
//│ 		      (1 + (length_lh__d1 t_1_1))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec mappend_lh__d1 xs_6 ys_6 =
//│ 		  (match xs_6 with
//│ 		    | `LH_C(h_1_0, t_1_0) -> 
//│ 		      (`LH_C(h_1_0, ((mappend_lh__d1 t_1_0) ys_6)))
//│ 		    | `LH_N -> 
//│ 		      ys_6);;
//│ 		let rec foldr_lh__d1 f_0 i_0 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      ((f_0 h_5) (((foldr_lh__d1 f_0) i_0) t_5))
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec mappend_lh__d5 xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      (`LH_C(h_3, ((mappend_lh__d5 t_3) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec edgePos_lh__d4 _lh_edgePos_arg1_0 =
//│ 		  (match _lh_edgePos_arg1_0 with
//│ 		    | `State(_lh_edgePos_State_0_0, _lh_edgePos_State_1_0, _lh_edgePos_State_2_0, _lh_edgePos_State_3_0) -> 
//│ 		      _lh_edgePos_State_1_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec writeItem_lh__d1 _lh_writeItem_arg1_0 _lh_writeItem_arg2_0 _lh_writeItem_arg3_0 =
//│ 		  (match _lh_writeItem_arg1_0 with
//│ 		    | `Bono -> 
//│ 		      (match _lh_writeItem_arg2_0 with
//│ 		        | `LeftBank -> 
//│ 		          ((mappend_lh__d7 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('B', (`LH_C('o', (`LH_C('n', (`LH_C('o', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | `RightBank -> 
//│ 		          ((mappend_lh__d7 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C('B', (`LH_C('o', (`LH_C('n', (`LH_C('o', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `Edge -> 
//│ 		      (match _lh_writeItem_arg2_0 with
//│ 		        | `LeftBank -> 
//│ 		          ((mappend_lh__d7 (`LH_C('T', (`LH_C('h', (`LH_C('e', (`LH_C(' ', (`LH_C('E', (`LH_C('d', (`LH_C('g', (`LH_C('e', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | `RightBank -> 
//│ 		          ((mappend_lh__d7 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C('T', (`LH_C('h', (`LH_C('e', (`LH_C(' ', (`LH_C('E', (`LH_C('d', (`LH_C('g', (`LH_C('e', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `Larry -> 
//│ 		      (match _lh_writeItem_arg2_0 with
//│ 		        | `LeftBank -> 
//│ 		          ((mappend_lh__d7 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('L', (`LH_C('a', (`LH_C('r', (`LH_C('r', (`LH_C('y', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | `RightBank -> 
//│ 		          ((mappend_lh__d7 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C('L', (`LH_C('a', (`LH_C('r', (`LH_C('r', (`LH_C('y', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `Adam -> 
//│ 		      (match _lh_writeItem_arg2_0 with
//│ 		        | `LeftBank -> 
//│ 		          ((mappend_lh__d7 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('A', (`LH_C('d', (`LH_C('a', (`LH_C('m', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | `RightBank -> 
//│ 		          ((mappend_lh__d7 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C('A', (`LH_C('d', (`LH_C('a', (`LH_C('m', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec writeState_lh__d1 _lh_writeState_arg1_0 _lh_funcomp_x_0 =
//│ 		  ((fun _lh_funcomp_x_1 -> 
//│ 		    ((fun _lh_funcomp_x_2 -> 
//│ 		      ((fun _lh_funcomp_x_3 -> 
//│ 		        ((fun _lh_funcomp_x_4 -> 
//│ 		          ((fun s_0 -> 
//│ 		            ((mappend_lh__d7 (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) s_0)) (((writeItem_lh__d1 (`Bono)) (bonoPos_lh__d3 _lh_writeState_arg1_0)) _lh_funcomp_x_4))) (((writeItem_lh__d1 (`Edge)) (edgePos_lh__d4 _lh_writeState_arg1_0)) _lh_funcomp_x_3))) (((writeItem_lh__d1 (`Larry)) (larryPos_lh__d3 _lh_writeState_arg1_0)) _lh_funcomp_x_2))) (((writeItem_lh__d1 (`Adam)) (adamPos_lh__d3 _lh_writeState_arg1_0)) _lh_funcomp_x_1))) ((fun s_1 -> 
//│ 		    ((mappend_lh__d7 (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) s_1)) _lh_funcomp_x_0));;
//│ 		let rec mappend_lh__d4 xs_3 ys_3 =
//│ 		  (match xs_3 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      (`LH_C(h_4, ((mappend_lh__d4 t_4) ys_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_3);;
//│ 		let rec totalTime_lh__d3 _lh_totalTime_arg1_0 =
//│ 		  (match _lh_totalTime_arg1_0 with
//│ 		    | `LH_C(_lh_totalTime_LH_C_0_0, _lh_totalTime_LH_C_1_0) -> 
//│ 		      (match _lh_totalTime_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_totalTime_LH_P2_0_0, _lh_totalTime_LH_P2_1_0) -> 
//│ 		          _lh_totalTime_LH_P2_0_0
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec writeHistory_lh__d1 _lh_writeHistory_arg1_0 =
//│ 		  (match _lh_writeHistory_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (fun x_0 -> 
//│ 		        x_0)
//│ 		    | _ -> 
//│ 		      (((foldr_lh__d1 (fun timestate_0 acc_0 -> 
//│ 		        (let rec _lh_matchIdent_2 = timestate_0 in
//│ 		          (match _lh_matchIdent_2 with
//│ 		            | `LH_P2(_lh_writeHistory_LH_P2_0_0, _lh_writeHistory_LH_P2_1_0) -> 
//│ 		              (fun _lh_funcomp_x_5 -> 
//│ 		                ((fun _lh_funcomp_x_6 -> 
//│ 		                  ((fun _lh_funcomp_x_7 -> 
//│ 		                    ((fun _lh_funcomp_x_8 -> 
//│ 		                      ((fun x_1 -> 
//│ 		                        ((mappend_lh__d5 (`LH_C('T', (`LH_C('i', (`LH_C('m', (`LH_C('e', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))) x_1)) ((fun x_2 -> 
//│ 		                        ((mappend_lh__d4 (string_of_int ((totalTime_lh__d3 _lh_writeHistory_arg1_0) - _lh_writeHistory_LH_P2_0_0))) x_2)) _lh_funcomp_x_8))) ((fun x_3 -> 
//│ 		                      (`LH_C('|', x_3))) _lh_funcomp_x_7))) ((writeState_lh__d1 _lh_writeHistory_LH_P2_1_0) _lh_funcomp_x_6))) (acc_0 _lh_funcomp_x_5)))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))) (fun x_4 -> 
//│ 		        x_4)) _lh_writeHistory_arg1_0));;
//│ 		let rec mappend_lh__d2 xs_5 ys_5 =
//│ 		  (match xs_5 with
//│ 		    | `LH_C(h_9, t_9) -> 
//│ 		      (`LH_C(h_9, ((mappend_lh__d2 t_9) ys_5)))
//│ 		    | `LH_N -> 
//│ 		      ys_5);;
//│ 		let rec writeSolutions_lh__d1 _lh_writeSolutions_arg1_0 _lh_writeSolutions_arg2_0 =
//│ 		  (match _lh_writeSolutions_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (fun x_5 -> 
//│ 		        x_5)
//│ 		    | `LH_C(_lh_writeSolutions_LH_C_0_0, _lh_writeSolutions_LH_C_1_0) -> 
//│ 		      (fun _lh_funcomp_x_9 -> 
//│ 		        ((fun _lh_funcomp_x_1_0 -> 
//│ 		          ((fun _lh_funcomp_x_1_1 -> 
//│ 		            ((fun _lh_funcomp_x_1_2 -> 
//│ 		              ((fun x_6 -> 
//│ 		                ((mappend_lh__d1 (`LH_C('S', (`LH_C('o', (`LH_C('l', (`LH_C('u', (`LH_C('t', (`LH_C('i', (`LH_C('o', (`LH_C('n', (`LH_C(' ', (`LH_N)))))))))))))))))))) x_6)) ((fun x_7 -> 
//│ 		                ((mappend_lh__d2 (string_of_int _lh_writeSolutions_arg2_0)) x_7)) _lh_funcomp_x_1_2))) ((fun x_8 -> 
//│ 		              (`LH_C('|', x_8))) _lh_funcomp_x_1_1))) ((writeHistory_lh__d1 _lh_writeSolutions_LH_C_0_0) _lh_funcomp_x_1_0))) (((writeSolutions_lh__d1 _lh_writeSolutions_LH_C_1_0) (_lh_writeSolutions_arg2_0 + 1)) _lh_funcomp_x_9)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec reverse_helper_lh__d1 ls_0 a_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      ((reverse_helper_lh__d1 t_2) (`LH_C(h_2, a_0)))
//│ 		    | `LH_N -> 
//│ 		      a_0);;
//│ 		let rec reverse_lh__d1 ls_2 =
//│ 		  ((reverse_helper_lh__d1 ls_2) (`LH_N));;
//│ 		let rec totalTime_lh__d2 _lh_totalTime_arg1_1 =
//│ 		  (match _lh_totalTime_arg1_1 with
//│ 		    | `LH_C(_lh_totalTime_LH_C_0_1, _lh_totalTime_LH_C_1_1) -> 
//│ 		      (match _lh_totalTime_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_totalTime_LH_P2_0_1, _lh_totalTime_LH_P2_1_1) -> 
//│ 		          _lh_totalTime_LH_P2_0_1
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec totalTime_lh__d1 _lh_totalTime_arg1_2 =
//│ 		  (match _lh_totalTime_arg1_2 with
//│ 		    | `LH_C(_lh_totalTime_LH_C_0_2, _lh_totalTime_LH_C_1_2) -> 
//│ 		      (match _lh_totalTime_LH_C_0_2 with
//│ 		        | `LH_P2(_lh_totalTime_LH_P2_0_2, _lh_totalTime_LH_P2_1_2) -> 
//│ 		          _lh_totalTime_LH_P2_0_2
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec minSolutions_lh__d1 _lh_minSolutions_arg1_0 =
//│ 		  (match _lh_minSolutions_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_minSolutions_LH_C_0_0, _lh_minSolutions_LH_C_1_0) -> 
//│ 		      (let rec minAcc_0 = (fun minSoFar_0 mins_0 ls_4 -> 
//│ 		        (let rec _lh_matchIdent_3 = ls_4 in
//│ 		          (match _lh_matchIdent_3 with
//│ 		            | `LH_N -> 
//│ 		              mins_0
//│ 		            | `LH_C(_lh_minSolutions_LH_C_0_1, _lh_minSolutions_LH_C_1_1) -> 
//│ 		              (let rec total_0 = (totalTime_lh__d2 _lh_minSolutions_LH_C_0_1) in
//│ 		                (if (minSoFar_0 < total_0) then
//│ 		                  (((minAcc_0 minSoFar_0) mins_0) _lh_minSolutions_LH_C_1_1)
//│ 		                else
//│ 		                  (if (minSoFar_0 = total_0) then
//│ 		                    (((minAcc_0 minSoFar_0) (`LH_C(_lh_minSolutions_LH_C_0_1, mins_0))) _lh_minSolutions_LH_C_1_1)
//│ 		                  else
//│ 		                    (((minAcc_0 total_0) (`LH_C(_lh_minSolutions_LH_C_0_1, (`LH_N)))) _lh_minSolutions_LH_C_1_1))))
//│ 		            | _ -> 
//│ 		              (failwith "error")))) in
//│ 		        (reverse_lh__d1 (((minAcc_0 (totalTime_lh__d1 _lh_minSolutions_LH_C_0_0)) (`LH_C(_lh_minSolutions_LH_C_0_0, (`LH_N)))) _lh_minSolutions_LH_C_1_0)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec testPuzzle_nofib_lh__d1 _lh_testPuzzle_nofib_arg1_0 =
//│ 		  (let rec time_0 = (if ((length_lh__d1 _lh_testPuzzle_nofib_arg1_0) = 1) then
//│ 		    0
//│ 		  else
//│ 		    ((failwith "error") (`LH_C('p', (`LH_C('u', (`LH_C('z', (`LH_C('z', (`LH_C('l', (`LH_C('e', (`LH_C(' ', (`LH_C('e', (`LH_C('x', (`LH_C('p', (`LH_C('e', (`LH_C('c', (`LH_C('t', (`LH_C('s', (`LH_C(' ', (`LH_C('e', (`LH_C('x', (`LH_C('a', (`LH_C('c', (`LH_C('t', (`LH_C('l', (`LH_C('y', (`LH_C(' ', (`LH_C('o', (`LH_C('n', (`LH_C('e', (`LH_C(' ', (`LH_C('a', (`LH_C('r', (`LH_C('g', (`LH_C('u', (`LH_C('m', (`LH_C('e', (`LH_C('n', (`LH_C('t', (`LH_N))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in
//│ 		    (let rec solutions_0 = (((((transfer_lh__d1 initialState_lh__d1) finalState_lh__d1) (`RightBank)) time_0) (`LH_N)) in
//│ 		      (let rec mins_1 = (minSolutions_lh__d1 solutions_0) in
//│ 		        (((writeSolutions_lh__d1 mins_1) 1) (`LH_N)))));;
//│ 		(testPuzzle_nofib_lh__d1 (`LH_C(2, (`LH_N))))
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< after expansion <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C h² a⁰]: 769 --->
//│ 	case _lh_writeSolutions_arg1⁰ of {LH_N  => (fun x⁵ -> x⁵) | LH_C _lh_writeSolutions_LH_C_0⁰ _lh_writeSolutions_LH_C_1⁰ => (fun _lh_funcomp_x⁹ -> (fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> (fun _lh_funcomp_x¹² -> (fun x⁶ -> mappend_lh_₁([LH_C 'S' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]], x⁶))((fun x⁷ -> mappend_lh_₂(string_of_int⁰(_lh_writeSolutions_arg2⁰), x⁷))(_lh_funcomp_x¹²)))((fun x⁸ -> [LH_C '|' x⁸])(_lh_funcomp_x¹¹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0⁰, _lh_funcomp_x¹⁰)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1⁰, (_lh_writeSolutions_arg2⁰ + 1), _lh_funcomp_x⁹))) | _  => error⁰}: 1793
//│ [Bono]: 864 --->
//│ 	case _lh_writeItem_arg1⁰ of {Bono  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Edge  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Larry  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Adam  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | _  => error⁰}: 622
//│ [Edge]: 875 --->
//│ 	case _lh_writeItem_arg1⁰ of {Bono  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Edge  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Larry  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Adam  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | _  => error⁰}: 622
//│ [Larry]: 886 --->
//│ 	case _lh_writeItem_arg1⁰ of {Bono  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Edge  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Larry  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Adam  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | _  => error⁰}: 622
//│ [Adam]: 897 --->
//│ 	case _lh_writeItem_arg1⁰ of {Bono  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Edge  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Larry  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Adam  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | _  => error⁰}: 622
//│ [LH_N]: 1069 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then let newDest¹ = updateState_lh_₃(updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ in if notSeen_lh_₂(newDest¹, _lh_transfer_arg5⁰) then let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h¹))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(itemFromTo_lh_₂(succItem_lh_₁(_lh_listcomp_fun_ls_h¹), [Adam])) | LH_N  => [LH_N]}: 1609
//│ [LH_C _lh_itemFromTo_arg1⁰ [LH_N]]: 1070 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then let newDest¹ = updateState_lh_₃(updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ in if notSeen_lh_₂(newDest¹, _lh_transfer_arg5⁰) then let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h¹))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(itemFromTo_lh_₂(succItem_lh_₁(_lh_listcomp_fun_ls_h¹), [Adam])) | LH_N  => [LH_N]}: 1609
//│ [LH_C _lh_itemFromTo_arg1⁰ itemFromTo_lh_₃(succItem_lh_₄(_lh_itemFromTo_arg1⁰), _lh_itemFromTo_arg2⁰)]: 1079 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then let newDest¹ = updateState_lh_₃(updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ in if notSeen_lh_₂(newDest¹, _lh_transfer_arg5⁰) then let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h¹))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(itemFromTo_lh_₂(succItem_lh_₁(_lh_listcomp_fun_ls_h¹), [Adam])) | LH_N  => [LH_N]}: 1609
//│ [LH_N]: 1118 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then let newDest¹ = updateState_lh_₃(updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ in if notSeen_lh_₂(newDest¹, _lh_transfer_arg5⁰) then let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h¹))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1596
//│ [LH_C _lh_itemFromTo_arg1¹ [LH_N]]: 1119 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then let newDest¹ = updateState_lh_₃(updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ in if notSeen_lh_₂(newDest¹, _lh_transfer_arg5⁰) then let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h¹))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1596
//│ [LH_C _lh_itemFromTo_arg1¹ itemFromTo_lh_₂(succItem_lh_₃(_lh_itemFromTo_arg1¹), _lh_itemFromTo_arg2¹)]: 1128 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then let newDest¹ = updateState_lh_₃(updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ in if notSeen_lh_₂(newDest¹, _lh_transfer_arg5⁰) then let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h¹))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1596
//│ [LH_N]: 1214 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h⁰, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) then let newDest⁰ = updateState_lh_₂(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h⁰, newLocation⁰)
//│ in if notSeen_lh_₁(newDest⁰, _lh_transfer_arg5⁰) then let newTime⁰ = (_lh_transfer_arg4⁰ + u2times_lh_₁(_lh_listcomp_fun_ls_h⁰))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest⁰, newLocation⁰, newTime⁰, newHistory⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1508
//│ [LH_C _lh_itemFromTo_arg1² [LH_N]]: 1215 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h⁰, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) then let newDest⁰ = updateState_lh_₂(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h⁰, newLocation⁰)
//│ in if notSeen_lh_₁(newDest⁰, _lh_transfer_arg5⁰) then let newTime⁰ = (_lh_transfer_arg4⁰ + u2times_lh_₁(_lh_listcomp_fun_ls_h⁰))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest⁰, newLocation⁰, newTime⁰, newHistory⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1508
//│ [LH_C _lh_itemFromTo_arg1² itemFromTo_lh_₁(succItem_lh_₂(_lh_itemFromTo_arg1²), _lh_itemFromTo_arg2²)]: 1224 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h⁰, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) then let newDest⁰ = updateState_lh_₂(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h⁰, newLocation⁰)
//│ in if notSeen_lh_₁(newDest⁰, _lh_transfer_arg5⁰) then let newTime⁰ = (_lh_transfer_arg4⁰ + u2times_lh_₁(_lh_listcomp_fun_ls_h⁰))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest⁰, newLocation⁰, newTime⁰, newHistory⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1508
//│ [State _lh_updateState_arg3² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_State_3²]: 1264 --->
//│ 	case _lh_updateState_arg1⁰ of {State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰ => case _lh_updateState_arg2⁰ of {Bono  => [State _lh_updateState_arg3⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Edge  => [State _lh_updateState_State_0⁰ _lh_updateState_arg3⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Larry  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_arg3⁰ _lh_updateState_State_3⁰] | Adam  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_arg3⁰] | _  => error⁰} | _  => error⁰}: 1108
//│ [State _lh_updateState_State_0² _lh_updateState_arg3² _lh_updateState_State_2² _lh_updateState_State_3²]: 1269 --->
//│ 	case _lh_updateState_arg1⁰ of {State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰ => case _lh_updateState_arg2⁰ of {Bono  => [State _lh_updateState_arg3⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Edge  => [State _lh_updateState_State_0⁰ _lh_updateState_arg3⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Larry  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_arg3⁰ _lh_updateState_State_3⁰] | Adam  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_arg3⁰] | _  => error⁰} | _  => error⁰}: 1108
//│ [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_arg3² _lh_updateState_State_3²]: 1274 --->
//│ 	case _lh_updateState_arg1⁰ of {State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰ => case _lh_updateState_arg2⁰ of {Bono  => [State _lh_updateState_arg3⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Edge  => [State _lh_updateState_State_0⁰ _lh_updateState_arg3⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Larry  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_arg3⁰ _lh_updateState_State_3⁰] | Adam  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_arg3⁰] | _  => error⁰} | _  => error⁰}: 1108
//│ [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_arg3²]: 1279 --->
//│ 	case _lh_updateState_arg1⁰ of {State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰ => case _lh_updateState_arg2⁰ of {Bono  => [State _lh_updateState_arg3⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Edge  => [State _lh_updateState_State_0⁰ _lh_updateState_arg3⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Larry  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_arg3⁰ _lh_updateState_State_3⁰] | Adam  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_arg3⁰] | _  => error⁰} | _  => error⁰}: 1108
//│ [LH_N]: 1314 --->
//│ 	case _lh_writeSolutions_arg1⁰ of {LH_N  => (fun x⁵ -> x⁵) | LH_C _lh_writeSolutions_LH_C_0⁰ _lh_writeSolutions_LH_C_1⁰ => (fun _lh_funcomp_x⁹ -> (fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> (fun _lh_funcomp_x¹² -> (fun x⁶ -> mappend_lh_₁([LH_C 'S' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]], x⁶))((fun x⁷ -> mappend_lh_₂(string_of_int⁰(_lh_writeSolutions_arg2⁰), x⁷))(_lh_funcomp_x¹²)))((fun x⁸ -> [LH_C '|' x⁸])(_lh_funcomp_x¹¹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0⁰, _lh_funcomp_x¹⁰)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1⁰, (_lh_writeSolutions_arg2⁰ + 1), _lh_funcomp_x⁹))) | _  => error⁰}: 1793
//│ [LH_N]: 1358 --->
//│ 	case xs² of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys²)] | LH_N  => ys²}: 1009
//│ [LH_C ' ' [LH_N]]: 1359 --->
//│ 	case xs² of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys²)] | LH_N  => ys²}: 1009
//│ [LH_C ':' [LH_C ' ' [LH_N]]]: 1360 --->
//│ 	case xs² of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys²)] | LH_N  => ys²}: 1009
//│ [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]: 1361 --->
//│ 	case xs² of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys²)] | LH_N  => ys²}: 1009
//│ [LH_C 'm' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]]: 1362 --->
//│ 	case xs² of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys²)] | LH_N  => ys²}: 1009
//│ [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]]]: 1363 --->
//│ 	case xs² of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys²)] | LH_N  => ys²}: 1009
//│ [LH_C 'T' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]: 1364 --->
//│ 	case xs² of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys²)] | LH_N  => ys²}: 1009
//│ [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest⁰, newLocation⁰, newTime⁰, newHistory⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 1496 --->
//│ 	case lss⁰ of {LH_C h⁶ t⁶ => mappend_lh_₇(h⁶, concat_lh_₂(t⁶)) | LH_N  => [LH_N]}: 1141
//│ [LH_N]: 1507 --->
//│ 	case lss⁰ of {LH_C h⁶ t⁶ => mappend_lh_₇(h⁶, concat_lh_₂(t⁶)) | LH_N  => [LH_N]}: 1141
//│ [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 1582 --->
//│ 	case lss¹ of {LH_C h⁸ t⁸ => mappend_lh_₆(h⁸, concat_lh_₁(t⁸)) | LH_N  => [LH_N]}: 1200
//│ [LH_N]: 1608 --->
//│ 	case lss¹ of {LH_C h⁸ t⁸ => mappend_lh_₆(h⁸, concat_lh_₁(t⁸)) | LH_N  => [LH_N]}: 1200
//│ [LH_N]: 1657 --->
//│ 	case _lh_writeSolutions_arg1⁰ of {LH_N  => (fun x⁵ -> x⁵) | LH_C _lh_writeSolutions_LH_C_0⁰ _lh_writeSolutions_LH_C_1⁰ => (fun _lh_funcomp_x⁹ -> (fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> (fun _lh_funcomp_x¹² -> (fun x⁶ -> mappend_lh_₁([LH_C 'S' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]], x⁶))((fun x⁷ -> mappend_lh_₂(string_of_int⁰(_lh_writeSolutions_arg2⁰), x⁷))(_lh_funcomp_x¹²)))((fun x⁸ -> [LH_C '|' x⁸])(_lh_funcomp_x¹¹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0⁰, _lh_funcomp_x¹⁰)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1⁰, (_lh_writeSolutions_arg2⁰ + 1), _lh_funcomp_x⁹))) | _  => error⁰}: 1793
//│ [LH_C _lh_minSolutions_LH_C_0¹ mins⁰]: 1686 --->
//│ 	case ls⁰ of {LH_C h² t² => reverse_helper_lh_₁(t², [LH_C h² a⁰]) | LH_N  => a⁰}: 772
//│ [LH_N]: 1694 --->
//│ 	case ls⁰ of {LH_C h² t² => reverse_helper_lh_₁(t², [LH_C h² a⁰]) | LH_N  => a⁰}: 772
//│ [LH_C _lh_minSolutions_LH_C_0¹ [LH_N]]: 1695 --->
//│ 	case ls⁰ of {LH_C h² t² => reverse_helper_lh_₁(t², [LH_C h² a⁰]) | LH_N  => a⁰}: 772
//│ [LH_N]: 1715 --->
//│ 	case ls⁰ of {LH_C h² t² => reverse_helper_lh_₁(t², [LH_C h² a⁰]) | LH_N  => a⁰}: 772
//│ [LH_C _lh_minSolutions_LH_C_0⁰ [LH_N]]: 1716 --->
//│ 	case ls⁰ of {LH_C h² t² => reverse_helper_lh_₁(t², [LH_C h² a⁰]) | LH_N  => a⁰}: 772
//│ [LH_N]: 1738 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ [LH_C ' ' [LH_N]]: 1739 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ [LH_C 'n' [LH_C ' ' [LH_N]]]: 1740 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 1741 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 1742 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]: 1743 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]: 1744 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]: 1745 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]: 1746 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ [LH_C 'S' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]]: 1747 --->
//│ 	case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429
//│ ------------------
//│ case _lh_writeItem_arg1⁰ of {Bono  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Edge  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Larry  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | Adam  => case _lh_writeItem_arg2⁰ of {LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰) | _  => error⁰} | _  => error⁰}: 622 --->
//│ 	[Bono]: 864
//│ 	[Edge]: 875
//│ 	[Larry]: 886
//│ 	[Adam]: 897
//│ case ls⁰ of {LH_C h² t² => reverse_helper_lh_₁(t², [LH_C h² a⁰]) | LH_N  => a⁰}: 772 --->
//│ 	[LH_C _lh_minSolutions_LH_C_0¹ mins⁰]: 1686
//│ 	[LH_N]: 1694
//│ 	[LH_C _lh_minSolutions_LH_C_0¹ [LH_N]]: 1695
//│ 	[LH_N]: 1715
//│ 	[LH_C _lh_minSolutions_LH_C_0⁰ [LH_N]]: 1716
//│ case xs² of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys²)] | LH_N  => ys²}: 1009 --->
//│ 	[LH_N]: 1358
//│ 	[LH_C ' ' [LH_N]]: 1359
//│ 	[LH_C ':' [LH_C ' ' [LH_N]]]: 1360
//│ 	[LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]: 1361
//│ 	[LH_C 'm' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]]: 1362
//│ 	[LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]]]: 1363
//│ 	[LH_C 'T' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]: 1364
//│ case _lh_updateState_arg1⁰ of {State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰ => case _lh_updateState_arg2⁰ of {Bono  => [State _lh_updateState_arg3⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Edge  => [State _lh_updateState_State_0⁰ _lh_updateState_arg3⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰] | Larry  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_arg3⁰ _lh_updateState_State_3⁰] | Adam  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_arg3⁰] | _  => error⁰} | _  => error⁰}: 1108 --->
//│ 	[State _lh_updateState_arg3² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_State_3²]: 1264
//│ 	[State _lh_updateState_State_0² _lh_updateState_arg3² _lh_updateState_State_2² _lh_updateState_State_3²]: 1269
//│ 	[State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_arg3² _lh_updateState_State_3²]: 1274
//│ 	[State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_arg3²]: 1279
//│ case lss⁰ of {LH_C h⁶ t⁶ => mappend_lh_₇(h⁶, concat_lh_₂(t⁶)) | LH_N  => [LH_N]}: 1141 --->
//│ 	[LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest⁰, newLocation⁰, newTime⁰, newHistory⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 1496
//│ 	[LH_N]: 1507
//│ case lss¹ of {LH_C h⁸ t⁸ => mappend_lh_₆(h⁸, concat_lh_₁(t⁸)) | LH_N  => [LH_N]}: 1200 --->
//│ 	[LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 1582
//│ 	[LH_N]: 1608
//│ case xs⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_lh_₁(t¹⁰, ys⁶)] | LH_N  => ys⁶}: 1429 --->
//│ 	[LH_N]: 1738
//│ 	[LH_C ' ' [LH_N]]: 1739
//│ 	[LH_C 'n' [LH_C ' ' [LH_N]]]: 1740
//│ 	[LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 1741
//│ 	[LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 1742
//│ 	[LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]: 1743
//│ 	[LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]: 1744
//│ 	[LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]: 1745
//│ 	[LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]: 1746
//│ 	[LH_C 'S' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]]: 1747
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h⁰, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) then let newDest⁰ = updateState_lh_₂(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h⁰, newLocation⁰)
//│ in if notSeen_lh_₁(newDest⁰, _lh_transfer_arg5⁰) then let newTime⁰ = (_lh_transfer_arg4⁰ + u2times_lh_₁(_lh_listcomp_fun_ls_h⁰))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest⁰, newLocation⁰, newTime⁰, newHistory⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1508 --->
//│ 	[LH_N]: 1214
//│ 	[LH_C _lh_itemFromTo_arg1² [LH_N]]: 1215
//│ 	[LH_C _lh_itemFromTo_arg1² itemFromTo_lh_₁(succItem_lh_₂(_lh_itemFromTo_arg1²), _lh_itemFromTo_arg2²)]: 1224
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then let newDest¹ = updateState_lh_₃(updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ in if notSeen_lh_₂(newDest¹, _lh_transfer_arg5⁰) then let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h¹))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1596 --->
//│ 	[LH_N]: 1118
//│ 	[LH_C _lh_itemFromTo_arg1¹ [LH_N]]: 1119
//│ 	[LH_C _lh_itemFromTo_arg1¹ itemFromTo_lh_₂(succItem_lh_₃(_lh_itemFromTo_arg1¹), _lh_itemFromTo_arg2¹)]: 1128
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then let newDest¹ = updateState_lh_₃(updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ in if notSeen_lh_₂(newDest¹, _lh_transfer_arg5⁰) then let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h¹))
//│ in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(itemFromTo_lh_₂(succItem_lh_₁(_lh_listcomp_fun_ls_h¹), [Adam])) | LH_N  => [LH_N]}: 1609 --->
//│ 	[LH_N]: 1069
//│ 	[LH_C _lh_itemFromTo_arg1⁰ [LH_N]]: 1070
//│ 	[LH_C _lh_itemFromTo_arg1⁰ itemFromTo_lh_₃(succItem_lh_₄(_lh_itemFromTo_arg1⁰), _lh_itemFromTo_arg2⁰)]: 1079
//│ case _lh_writeSolutions_arg1⁰ of {LH_N  => (fun x⁵ -> x⁵) | LH_C _lh_writeSolutions_LH_C_0⁰ _lh_writeSolutions_LH_C_1⁰ => (fun _lh_funcomp_x⁹ -> (fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> (fun _lh_funcomp_x¹² -> (fun x⁶ -> mappend_lh_₁([LH_C 'S' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]], x⁶))((fun x⁷ -> mappend_lh_₂(string_of_int⁰(_lh_writeSolutions_arg2⁰), x⁷))(_lh_funcomp_x¹²)))((fun x⁸ -> [LH_C '|' x⁸])(_lh_funcomp_x¹¹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0⁰, _lh_funcomp_x¹⁰)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1⁰, (_lh_writeSolutions_arg2⁰ + 1), _lh_funcomp_x⁹))) | _  => error⁰}: 1793 --->
//│ 	[LH_C h² a⁰]: 769
//│ 	[LH_N]: 1314
//│ 	[LH_N]: 1657
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPuzzle_nofib_lh_₁(primId⁰([LH_C 2 [LH_N]]))
//│ def adamPos_lh_₁(_lh_adamPos_arg1²) = case _lh_adamPos_arg1² of {
//│ 	State _lh_adamPos_State_0² _lh_adamPos_State_1² _lh_adamPos_State_2² _lh_adamPos_State_3² => _lh_adamPos_State_3²
//│ 	| _  => error⁰}
//│ def adamPos_lh_₂(_lh_adamPos_arg1⁰) = case _lh_adamPos_arg1⁰ of {
//│ 	State _lh_adamPos_State_0⁰ _lh_adamPos_State_1⁰ _lh_adamPos_State_2⁰ _lh_adamPos_State_3⁰ => _lh_adamPos_State_3⁰
//│ 	| _  => error⁰}
//│ def adamPos_lh_₃(_lh_adamPos_arg1¹) = case _lh_adamPos_arg1¹ of {
//│ 	State _lh_adamPos_State_0¹ _lh_adamPos_State_1¹ _lh_adamPos_State_2¹ _lh_adamPos_State_3¹ => _lh_adamPos_State_3¹
//│ 	| _  => error⁰}
//│ def all_lh_₁(_lh_all_arg1¹, _lh_all_arg2¹) = case _lh_all_arg2¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₁(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False]
//│ 	| _  => error⁰}
//│ def all_lh_₂(_lh_all_arg1⁰, _lh_all_arg2⁰) = case _lh_all_arg2⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₂(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False]
//│ 	| _  => error⁰}
//│ def bonoPos_lh_₁(_lh_bonoPos_arg1⁰) = case _lh_bonoPos_arg1⁰ of {
//│ 	State _lh_bonoPos_State_0⁰ _lh_bonoPos_State_1⁰ _lh_bonoPos_State_2⁰ _lh_bonoPos_State_3⁰ => _lh_bonoPos_State_0⁰
//│ 	| _  => error⁰}
//│ def bonoPos_lh_₂(_lh_bonoPos_arg1¹) = case _lh_bonoPos_arg1¹ of {
//│ 	State _lh_bonoPos_State_0¹ _lh_bonoPos_State_1¹ _lh_bonoPos_State_2¹ _lh_bonoPos_State_3¹ => _lh_bonoPos_State_0¹
//│ 	| _  => error⁰}
//│ def bonoPos_lh_₃(_lh_bonoPos_arg1²) = case _lh_bonoPos_arg1² of {
//│ 	State _lh_bonoPos_State_0² _lh_bonoPos_State_1² _lh_bonoPos_State_2² _lh_bonoPos_State_3² => _lh_bonoPos_State_0²
//│ 	| _  => error⁰}
//│ def concat_lh_₁(lss¹) = lss¹([lh_Unit])
//│ def concat_lh_₂(lss⁰) = lss⁰([lh_Unit])
//│ def edgePos_lh_₁(_lh_edgePos_arg1⁰) = case _lh_edgePos_arg1⁰ of {
//│ 	State _lh_edgePos_State_0⁰ _lh_edgePos_State_1⁰ _lh_edgePos_State_2⁰ _lh_edgePos_State_3⁰ => _lh_edgePos_State_1⁰
//│ 	| _  => error⁰}
//│ def edgePos_lh_₂(_lh_edgePos_arg1³) = case _lh_edgePos_arg1³ of {
//│ 	State _lh_edgePos_State_0³ _lh_edgePos_State_1³ _lh_edgePos_State_2³ _lh_edgePos_State_3³ => _lh_edgePos_State_1³
//│ 	| _  => error⁰}
//│ def edgePos_lh_₃(_lh_edgePos_arg1¹) = case _lh_edgePos_arg1¹ of {
//│ 	State _lh_edgePos_State_0¹ _lh_edgePos_State_1¹ _lh_edgePos_State_2¹ _lh_edgePos_State_3¹ => _lh_edgePos_State_1¹
//│ 	| _  => error⁰}
//│ def edgePos_lh_₄(_lh_edgePos_arg1²) = case _lh_edgePos_arg1² of {
//│ 	State _lh_edgePos_State_0² _lh_edgePos_State_1² _lh_edgePos_State_2² _lh_edgePos_State_3² => _lh_edgePos_State_1²
//│ 	| _  => error⁰}
//│ def finalState_lh_₁ = [State [RightBank] [RightBank] [RightBank] [RightBank]]
//│ def foldr_lh_₁(f⁰, i⁰, ls¹) = case ls¹ of {
//│ 	LH_C h¹ t¹ => f⁰(h¹, foldr_lh_₁(f⁰, i⁰, t¹))
//│ 	| LH_N  => i⁰}
//│ def initialState_lh_₁ = [State [LeftBank] [LeftBank] [LeftBank] [LeftBank]]
//│ def itemFromTo_lh_₁(_lh_itemFromTo_arg1¹, _lh_itemFromTo_arg2¹, _lh_floatOutId_0¹, _lh_floatOutId_1¹, _lh_floatOutId_2¹, _lh_floatOutId_3¹, _lh_floatOutId_4¹, _lh_floatOutId_5¹, _lh_floatOutId_6¹, _lh_floatOutId_7¹) = if polyEq⁰(_lh_itemFromTo_arg1¹, _lh_itemFromTo_arg2¹) then 
//│ 	let _lh_listcomp_fun_ls_t² = (fun _lh_listcomp_fun⁷ -> (fun _lh_transfer_arg1⁴ -> (fun _lh_transfer_arg2⁴ -> (fun _lh_transfer_arg3⁴ -> (fun _lh_transfer_arg4⁴ -> (fun _lh_transfer_arg5⁴ -> (fun newHistory⁴ -> (fun newLocation⁴ -> (fun _lh_dummy¹ -> [LH_N])))))))))
//│ 	in let _lh_listcomp_fun_ls_h² = _lh_itemFromTo_arg1¹
//│ 	in if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h², _lh_floatOutId_2¹), _lh_floatOutId_3¹) then 
//│ 		let newDest⁰ = updateState_lh_₂(_lh_floatOutId_2¹, _lh_listcomp_fun_ls_h², _lh_floatOutId_7¹)
//│ 		in if notSeen_lh_₁(newDest⁰, _lh_floatOutId_5¹) then 
//│ 			let newTime⁰ = (_lh_floatOutId_4¹ + u2times_lh_₁(_lh_listcomp_fun_ls_h²))
//│ 			in let t⁴³ = _lh_floatOutId_0¹(_lh_listcomp_fun_ls_t²)
//│ 			in let h⁴³ = transfer_lh_₁(_lh_floatOutId_1¹, newDest⁰, _lh_floatOutId_7¹, newTime⁰, _lh_floatOutId_6¹)
//│ 			in (fun _lh_dummy² -> mappend_lh_₇(h⁴³, concat_lh_₂(t⁴³))) else _lh_floatOutId_0¹(_lh_listcomp_fun_ls_t²) else _lh_floatOutId_0¹(_lh_listcomp_fun_ls_t²) else 
//│ 	let _lh_listcomp_fun_ls_t³ = itemFromTo_lh_₁(succItem_lh_₂(_lh_itemFromTo_arg1¹), _lh_itemFromTo_arg2¹)
//│ 	in let _lh_listcomp_fun_ls_h³ = _lh_itemFromTo_arg1¹
//│ 	in if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h³, _lh_floatOutId_2¹), _lh_floatOutId_3¹) then 
//│ 		let newDest¹ = updateState_lh_₂(_lh_floatOutId_2¹, _lh_listcomp_fun_ls_h³, _lh_floatOutId_7¹)
//│ 		in if notSeen_lh_₁(newDest¹, _lh_floatOutId_5¹) then 
//│ 			let newTime¹ = (_lh_floatOutId_4¹ + u2times_lh_₁(_lh_listcomp_fun_ls_h³))
//│ 			in let t⁴⁴ = _lh_floatOutId_0¹(_lh_listcomp_fun_ls_t³)
//│ 			in let h⁴⁴ = transfer_lh_₁(_lh_floatOutId_1¹, newDest¹, _lh_floatOutId_7¹, newTime¹, _lh_floatOutId_6¹)
//│ 			in (fun _lh_dummy³ -> mappend_lh_₇(h⁴⁴, concat_lh_₂(t⁴⁴))) else _lh_floatOutId_0¹(_lh_listcomp_fun_ls_t³) else _lh_floatOutId_0¹(_lh_listcomp_fun_ls_t³)
//│ def itemFromTo_lh_₂(_lh_itemFromTo_arg1², _lh_itemFromTo_arg2², _lh_floatOutId_0², _lh_floatOutId_1², _lh_floatOutId_2², _lh_floatOutId_3², _lh_floatOutId_4², _lh_floatOutId_5², _lh_floatOutId_6², _lh_floatOutId_7², _lh_floatOutId_8⁰, _lh_floatOutId_9⁰, _lh_floatOutId_10⁰) = if polyEq⁰(_lh_itemFromTo_arg1², _lh_itemFromTo_arg2²) then 
//│ 	let _lh_listcomp_fun_ls_t⁴ = (fun _lh_listcomp_fun_ls_h⁴ -> (fun _lh_listcomp_fun¹⁰ -> (fun _lh_transfer_arg1⁷ -> (fun _lh_transfer_arg2⁷ -> (fun _lh_transfer_arg3⁷ -> (fun _lh_transfer_arg4⁷ -> (fun _lh_transfer_arg5⁷ -> (fun newHistory⁷ -> (fun newLocation⁷ -> (fun _lh_listcomp_fun_ls_t⁵ -> (fun _lh_listcomp_fun¹¹ -> _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁵))))))))))))
//│ 	in let _lh_listcomp_fun_ls_h⁵ = _lh_itemFromTo_arg1²
//│ 	in if (polyEq⁰(position_lh_₂(_lh_floatOutId_0², _lh_floatOutId_3²), _lh_floatOutId_4²) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h⁵, _lh_floatOutId_3²), _lh_floatOutId_4²)) then 
//│ 		let newDest² = updateState_lh_₃(updateState_lh_₁(_lh_floatOutId_3², _lh_floatOutId_0², _lh_floatOutId_8⁰), _lh_listcomp_fun_ls_h⁵, _lh_floatOutId_8⁰)
//│ 		in if notSeen_lh_₂(newDest², _lh_floatOutId_6²) then 
//│ 			let newTime² = (_lh_floatOutId_5² + u2times_lh_₂(_lh_floatOutId_0²))
//│ 			in let t⁴⁵ = _lh_floatOutId_1²(_lh_listcomp_fun_ls_t⁴)
//│ 			in let h⁴⁵ = transfer_lh_₁(_lh_floatOutId_2², newDest², _lh_floatOutId_8⁰, newTime², _lh_floatOutId_7²)
//│ 			in (fun _lh_dummy⁴ -> mappend_lh_₆(h⁴⁵, concat_lh_₁(t⁴⁵))) else _lh_floatOutId_1²(_lh_listcomp_fun_ls_t⁴) else _lh_floatOutId_1²(_lh_listcomp_fun_ls_t⁴) else 
//│ 	let _lh_listcomp_fun_ls_t⁷ = itemFromTo_lh_₂(succItem_lh_₃(_lh_itemFromTo_arg1²), _lh_itemFromTo_arg2²)
//│ 	in let _lh_listcomp_fun_ls_h⁷ = _lh_itemFromTo_arg1²
//│ 	in if (polyEq⁰(position_lh_₂(_lh_floatOutId_0², _lh_floatOutId_3²), _lh_floatOutId_4²) && polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h⁷, _lh_floatOutId_3²), _lh_floatOutId_4²)) then 
//│ 		let newDest³ = updateState_lh_₃(updateState_lh_₁(_lh_floatOutId_3², _lh_floatOutId_0², _lh_floatOutId_8⁰), _lh_listcomp_fun_ls_h⁷, _lh_floatOutId_8⁰)
//│ 		in if notSeen_lh_₂(newDest³, _lh_floatOutId_6²) then 
//│ 			let newTime³ = (_lh_floatOutId_5² + u2times_lh_₂(_lh_floatOutId_0²))
//│ 			in let t⁴⁶ = _lh_floatOutId_1²(_lh_listcomp_fun_ls_t⁷)
//│ 			in let h⁴⁶ = transfer_lh_₁(_lh_floatOutId_2², newDest³, _lh_floatOutId_8⁰, newTime³, _lh_floatOutId_7²)
//│ 			in (fun _lh_dummy⁵ -> mappend_lh_₆(h⁴⁶, concat_lh_₁(t⁴⁶))) else _lh_floatOutId_1²(_lh_listcomp_fun_ls_t⁷) else _lh_floatOutId_1²(_lh_listcomp_fun_ls_t⁷)
//│ def itemFromTo_lh_₃(_lh_itemFromTo_arg1⁰, _lh_itemFromTo_arg2⁰, _lh_floatOutId_0⁰, _lh_floatOutId_1⁰, _lh_floatOutId_2⁰, _lh_floatOutId_3⁰, _lh_floatOutId_4⁰, _lh_floatOutId_5⁰, _lh_floatOutId_6⁰, _lh_floatOutId_7⁰) = if polyEq⁰(_lh_itemFromTo_arg1⁰, _lh_itemFromTo_arg2⁰) then 
//│ 	let _lh_listcomp_fun_ls_t⁰ = (fun _lh_listcomp_fun² -> (fun _lh_transfer_arg1¹ -> (fun _lh_transfer_arg2¹ -> (fun _lh_transfer_arg3¹ -> (fun _lh_transfer_arg4¹ -> (fun _lh_transfer_arg5¹ -> (fun newHistory¹ -> (fun newLocation¹ -> (fun _lh_dummy⁰ -> [LH_N])))))))))
//│ 	in let _lh_listcomp_fun_ls_h⁰ = _lh_itemFromTo_arg1⁰
//│ 	in let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para² -> _lh_listcomp_fun_para²(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun⁴, _lh_floatOutId_1⁰, _lh_floatOutId_2⁰, _lh_floatOutId_3⁰, _lh_floatOutId_4⁰, _lh_floatOutId_5⁰, _lh_floatOutId_6⁰, _lh_floatOutId_7⁰, _lh_listcomp_fun_ls_t⁰, _lh_floatOutId_0⁰))
//│ 	in _lh_listcomp_fun⁴(itemFromTo_lh_₂(succItem_lh_₁(_lh_listcomp_fun_ls_h⁰), [Adam])) else 
//│ 	let _lh_listcomp_fun_ls_t¹ = itemFromTo_lh_₃(succItem_lh_₄(_lh_itemFromTo_arg1⁰), _lh_itemFromTo_arg2⁰)
//│ 	in let _lh_listcomp_fun_ls_h¹ = _lh_itemFromTo_arg1⁰
//│ 	in let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para³ -> _lh_listcomp_fun_para³(_lh_listcomp_fun_ls_h¹, _lh_listcomp_fun⁶, _lh_floatOutId_1⁰, _lh_floatOutId_2⁰, _lh_floatOutId_3⁰, _lh_floatOutId_4⁰, _lh_floatOutId_5⁰, _lh_floatOutId_6⁰, _lh_floatOutId_7⁰, _lh_listcomp_fun_ls_t¹, _lh_floatOutId_0⁰))
//│ 	in _lh_listcomp_fun⁶(itemFromTo_lh_₂(succItem_lh_₁(_lh_listcomp_fun_ls_h¹), [Adam]))
//│ def larryPos_lh_₁(_lh_larryPos_arg1¹) = case _lh_larryPos_arg1¹ of {
//│ 	State _lh_larryPos_State_0¹ _lh_larryPos_State_1¹ _lh_larryPos_State_2¹ _lh_larryPos_State_3¹ => _lh_larryPos_State_2¹
//│ 	| _  => error⁰}
//│ def larryPos_lh_₂(_lh_larryPos_arg1⁰) = case _lh_larryPos_arg1⁰ of {
//│ 	State _lh_larryPos_State_0⁰ _lh_larryPos_State_1⁰ _lh_larryPos_State_2⁰ _lh_larryPos_State_3⁰ => _lh_larryPos_State_2⁰
//│ 	| _  => error⁰}
//│ def larryPos_lh_₃(_lh_larryPos_arg1²) = case _lh_larryPos_arg1² of {
//│ 	State _lh_larryPos_State_0² _lh_larryPos_State_1² _lh_larryPos_State_2² _lh_larryPos_State_3² => _lh_larryPos_State_2²
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls²) = case ls² of {
//│ 	LH_C h¹² t¹² => (1 + length_lh_₁(t¹²))
//│ 	| LH_N  => 0}
//│ def mappend_lh_₁(xs¹, ys¹) = xs¹(ys¹)
//│ def mappend_lh_₂(xs³, ys³) = case xs³ of {
//│ 	LH_C h³ t³ => [LH_C h³ mappend_lh_₂(t³, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₃(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₃(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def mappend_lh_₄(xs⁶, ys⁶) = case xs⁶ of {
//│ 	LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₄(t⁵, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₅(xs⁴, ys⁴) = xs⁴(ys⁴)
//│ def mappend_lh_₆(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₆(t⁴, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₇(xs², ys²) = case xs² of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₇(t², ys²)]
//│ 	| LH_N  => ys²}
//│ def minSolutions_lh_₁(_lh_minSolutions_arg1⁰) = case _lh_minSolutions_arg1⁰ of {
//│ 	LH_N  => (fun _lh_writeSolutions_arg2¹ -> (fun x⁵ -> x⁵))
//│ 	| LH_C _lh_minSolutions_LH_C_0⁰ _lh_minSolutions_LH_C_1⁰ => 
//│ 		let minAcc⁰ = (fun minSoFar⁰ -> (fun mins⁰ -> (fun ls³ -> 
//│ 			let _lh_matchIdent³ = ls³
//│ 			in case _lh_matchIdent³ of {
//│ 				LH_N  => mins⁰
//│ 				| LH_C _lh_minSolutions_LH_C_0¹ _lh_minSolutions_LH_C_1¹ => 
//│ 					let total⁰ = totalTime_lh_₂(_lh_minSolutions_LH_C_0¹)
//│ 					in if (minSoFar⁰ < total⁰) then minAcc⁰(minSoFar⁰, mins⁰, _lh_minSolutions_LH_C_1¹) else if (minSoFar⁰ == total⁰) then minAcc⁰(minSoFar⁰, 
//│ 						let t¹³ = mins⁰
//│ 						in let h¹³ = _lh_minSolutions_LH_C_0¹
//│ 						in (fun a¹ -> reverse_helper_lh_₁(t¹³, 
//│ 							let _lh_writeSolutions_LH_C_1⁰ = a¹
//│ 							in let _lh_writeSolutions_LH_C_0⁰ = h¹³
//│ 							in (fun _lh_writeSolutions_arg2² -> (fun _lh_funcomp_x⁹ -> (fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> (fun _lh_funcomp_x¹² -> (fun x⁶ -> mappend_lh_₁(
//│ 								let t¹⁴ = 	
//│ 									let t¹⁵ = 	
//│ 										let t¹⁶ = 	
//│ 											let t¹⁷ = 	
//│ 												let t¹⁸ = 	
//│ 													let t¹⁹ = 	
//│ 														let t²⁰ = 	
//│ 															let t²¹ = 	
//│ 																let t²² = (fun ys¹⁴ -> ys¹⁴)
//│ 																in let h¹⁴ = ' '
//│ 																in (fun ys¹⁵ -> [LH_C h¹⁴ mappend_lh_₁(t²², ys¹⁵)])
//│ 															in let h¹⁵ = 'n'
//│ 															in (fun ys¹⁶ -> [LH_C h¹⁵ mappend_lh_₁(t²¹, ys¹⁶)])
//│ 														in let h¹⁶ = 'o'
//│ 														in (fun ys¹⁷ -> [LH_C h¹⁶ mappend_lh_₁(t²⁰, ys¹⁷)])
//│ 													in let h¹⁷ = 'i'
//│ 													in (fun ys¹⁸ -> [LH_C h¹⁷ mappend_lh_₁(t¹⁹, ys¹⁸)])
//│ 												in let h¹⁸ = 't'
//│ 												in (fun ys¹⁹ -> [LH_C h¹⁸ mappend_lh_₁(t¹⁸, ys¹⁹)])
//│ 											in let h¹⁹ = 'u'
//│ 											in (fun ys²⁰ -> [LH_C h¹⁹ mappend_lh_₁(t¹⁷, ys²⁰)])
//│ 										in let h²⁰ = 'l'
//│ 										in (fun ys²¹ -> [LH_C h²⁰ mappend_lh_₁(t¹⁶, ys²¹)])
//│ 									in let h²¹ = 'o'
//│ 									in (fun ys²² -> [LH_C h²¹ mappend_lh_₁(t¹⁵, ys²²)])
//│ 								in let h²² = 'S'
//│ 								in (fun ys²³ -> [LH_C h²² mappend_lh_₁(t¹⁴, ys²³)]), x⁶))((fun x⁷ -> mappend_lh_₂(string_of_int⁰(_lh_writeSolutions_arg2²), x⁷))(_lh_funcomp_x¹²)))((fun x⁸ -> [LH_C '|' x⁸])(_lh_funcomp_x¹¹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0⁰, _lh_funcomp_x¹⁰)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1⁰, (_lh_writeSolutions_arg2² + 1), _lh_funcomp_x⁹)))))), _lh_minSolutions_LH_C_1¹) else minAcc⁰(total⁰, 
//│ 						let t²³ = (fun a² -> a²)
//│ 						in let h²³ = _lh_minSolutions_LH_C_0¹
//│ 						in (fun a³ -> reverse_helper_lh_₁(t²³, 
//│ 							let _lh_writeSolutions_LH_C_1¹ = a³
//│ 							in let _lh_writeSolutions_LH_C_0¹ = h²³
//│ 							in (fun _lh_writeSolutions_arg2³ -> (fun _lh_funcomp_x¹³ -> (fun _lh_funcomp_x¹⁴ -> (fun _lh_funcomp_x¹⁵ -> (fun _lh_funcomp_x¹⁶ -> (fun x⁹ -> mappend_lh_₁(
//│ 								let t²⁴ = 	
//│ 									let t²⁵ = 	
//│ 										let t²⁶ = 	
//│ 											let t²⁷ = 	
//│ 												let t²⁸ = 	
//│ 													let t²⁹ = 	
//│ 														let t³⁰ = 	
//│ 															let t³¹ = 	
//│ 																let t³² = (fun ys²⁴ -> ys²⁴)
//│ 																in let h²⁴ = ' '
//│ 																in (fun ys²⁵ -> [LH_C h²⁴ mappend_lh_₁(t³², ys²⁵)])
//│ 															in let h²⁵ = 'n'
//│ 															in (fun ys²⁶ -> [LH_C h²⁵ mappend_lh_₁(t³¹, ys²⁶)])
//│ 														in let h²⁶ = 'o'
//│ 														in (fun ys²⁷ -> [LH_C h²⁶ mappend_lh_₁(t³⁰, ys²⁷)])
//│ 													in let h²⁷ = 'i'
//│ 													in (fun ys²⁸ -> [LH_C h²⁷ mappend_lh_₁(t²⁹, ys²⁸)])
//│ 												in let h²⁸ = 't'
//│ 												in (fun ys²⁹ -> [LH_C h²⁸ mappend_lh_₁(t²⁸, ys²⁹)])
//│ 											in let h²⁹ = 'u'
//│ 											in (fun ys³⁰ -> [LH_C h²⁹ mappend_lh_₁(t²⁷, ys³⁰)])
//│ 										in let h³⁰ = 'l'
//│ 										in (fun ys³¹ -> [LH_C h³⁰ mappend_lh_₁(t²⁶, ys³¹)])
//│ 									in let h³¹ = 'o'
//│ 									in (fun ys³² -> [LH_C h³¹ mappend_lh_₁(t²⁵, ys³²)])
//│ 								in let h³² = 'S'
//│ 								in (fun ys³³ -> [LH_C h³² mappend_lh_₁(t²⁴, ys³³)]), x⁹))((fun x¹⁰ -> mappend_lh_₂(string_of_int⁰(_lh_writeSolutions_arg2³), x¹⁰))(_lh_funcomp_x¹⁶)))((fun x¹¹ -> [LH_C '|' x¹¹])(_lh_funcomp_x¹⁵)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0¹, _lh_funcomp_x¹⁴)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1¹, (_lh_writeSolutions_arg2³ + 1), _lh_funcomp_x¹³)))))), _lh_minSolutions_LH_C_1¹)
//│ 				| _  => error⁰})))
//│ 		in reverse_lh_₁(minAcc⁰(totalTime_lh_₁(_lh_minSolutions_LH_C_0⁰), 
//│ 			let t³³ = (fun a⁴ -> a⁴)
//│ 			in let h³³ = _lh_minSolutions_LH_C_0⁰
//│ 			in (fun a⁵ -> reverse_helper_lh_₁(t³³, 
//│ 				let _lh_writeSolutions_LH_C_1² = a⁵
//│ 				in let _lh_writeSolutions_LH_C_0² = h³³
//│ 				in (fun _lh_writeSolutions_arg2⁴ -> (fun _lh_funcomp_x¹⁷ -> (fun _lh_funcomp_x¹⁸ -> (fun _lh_funcomp_x¹⁹ -> (fun _lh_funcomp_x²⁰ -> (fun x¹² -> mappend_lh_₁(
//│ 					let t³⁴ = 	
//│ 						let t³⁵ = 	
//│ 							let t³⁶ = 	
//│ 								let t³⁷ = 	
//│ 									let t³⁸ = 	
//│ 										let t³⁹ = 	
//│ 											let t⁴⁰ = 	
//│ 												let t⁴¹ = 	
//│ 													let t⁴² = (fun ys³⁴ -> ys³⁴)
//│ 													in let h³⁴ = ' '
//│ 													in (fun ys³⁵ -> [LH_C h³⁴ mappend_lh_₁(t⁴², ys³⁵)])
//│ 												in let h³⁵ = 'n'
//│ 												in (fun ys³⁶ -> [LH_C h³⁵ mappend_lh_₁(t⁴¹, ys³⁶)])
//│ 											in let h³⁶ = 'o'
//│ 											in (fun ys³⁷ -> [LH_C h³⁶ mappend_lh_₁(t⁴⁰, ys³⁷)])
//│ 										in let h³⁷ = 'i'
//│ 										in (fun ys³⁸ -> [LH_C h³⁷ mappend_lh_₁(t³⁹, ys³⁸)])
//│ 									in let h³⁸ = 't'
//│ 									in (fun ys³⁹ -> [LH_C h³⁸ mappend_lh_₁(t³⁸, ys³⁹)])
//│ 								in let h³⁹ = 'u'
//│ 								in (fun ys⁴⁰ -> [LH_C h³⁹ mappend_lh_₁(t³⁷, ys⁴⁰)])
//│ 							in let h⁴⁰ = 'l'
//│ 							in (fun ys⁴¹ -> [LH_C h⁴⁰ mappend_lh_₁(t³⁶, ys⁴¹)])
//│ 						in let h⁴¹ = 'o'
//│ 						in (fun ys⁴² -> [LH_C h⁴¹ mappend_lh_₁(t³⁵, ys⁴²)])
//│ 					in let h⁴² = 'S'
//│ 					in (fun ys⁴³ -> [LH_C h⁴² mappend_lh_₁(t³⁴, ys⁴³)]), x¹²))((fun x¹³ -> mappend_lh_₂(string_of_int⁰(_lh_writeSolutions_arg2⁴), x¹³))(_lh_funcomp_x²⁰)))((fun x¹⁴ -> [LH_C '|' x¹⁴])(_lh_funcomp_x¹⁹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0², _lh_funcomp_x¹⁸)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1², (_lh_writeSolutions_arg2⁴ + 1), _lh_funcomp_x¹⁷)))))), _lh_minSolutions_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def notSeen_lh_₁(_lh_notSeen_arg1⁰) = all_lh_₁((fun _s⁰ -> 
//│ 	let _lh_matchIdent¹ = _s⁰
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P2 _lh_notSeen_LH_P2_0⁰ _lh_notSeen_LH_P2_1⁰ => polyNeq⁰(_lh_notSeen_arg1⁰, _lh_notSeen_LH_P2_1⁰)
//│ 		| _  => error⁰}))
//│ def notSeen_lh_₂(_lh_notSeen_arg1¹) = all_lh_₂((fun _s¹ -> 
//│ 	let _lh_matchIdent² = _s¹
//│ 	in case _lh_matchIdent² of {
//│ 		LH_P2 _lh_notSeen_LH_P2_0¹ _lh_notSeen_LH_P2_1¹ => polyNeq⁰(_lh_notSeen_arg1¹, _lh_notSeen_LH_P2_1¹)
//│ 		| _  => error⁰}))
//│ def opposite_lh_₁(_lh_opposite_arg1⁰) = case _lh_opposite_arg1⁰ of {
//│ 	LeftBank  => [RightBank]
//│ 	| RightBank  => [LeftBank]
//│ 	| _  => error⁰}
//│ def position_lh_₁(_lh_position_arg1¹) = case _lh_position_arg1¹ of {
//│ 	Bono  => bonoPos_lh_₁
//│ 	| Edge  => edgePos_lh_₁
//│ 	| Larry  => larryPos_lh_₁
//│ 	| Adam  => adamPos_lh_₁
//│ 	| _  => error⁰}
//│ def position_lh_₂(_lh_position_arg1⁰) = case _lh_position_arg1⁰ of {
//│ 	Bono  => bonoPos_lh_₂
//│ 	| Edge  => edgePos_lh_₂
//│ 	| Larry  => larryPos_lh_₂
//│ 	| Adam  => adamPos_lh_₂
//│ 	| _  => error⁰}
//│ def position_lh_₃(_lh_position_arg1²) = case _lh_position_arg1² of {
//│ 	Bono  => bonoPos_lh_₃
//│ 	| Edge  => edgePos_lh_₃
//│ 	| Larry  => larryPos_lh_₃
//│ 	| Adam  => adamPos_lh_₃
//│ 	| _  => error⁰}
//│ def reverse_helper_lh_₁(ls⁰, a⁰) = ls⁰(a⁰)
//│ def reverse_lh_₁(ls⁴) = reverse_helper_lh_₁(ls⁴, (fun _lh_writeSolutions_arg2⁵ -> (fun x¹⁵ -> x¹⁵)))
//│ def succItem_lh_₁(_lh_succItem_arg1⁰) = case _lh_succItem_arg1⁰ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₂(_lh_succItem_arg1³) = case _lh_succItem_arg1³ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₃(_lh_succItem_arg1²) = case _lh_succItem_arg1² of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₄(_lh_succItem_arg1¹) = case _lh_succItem_arg1¹ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def testPuzzle_nofib_lh_₁(_lh_testPuzzle_nofib_arg1⁰) = 
//│ 	let time⁰ = if (length_lh_₁(_lh_testPuzzle_nofib_arg1⁰) == 1) then 0 else error⁰([LH_C 'p' [LH_C 'u' [LH_C 'z' [LH_C 'z' [LH_C 'l' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'p' [LH_C 'e' [LH_C 'c' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'a' [LH_C 'c' [LH_C 't' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C 'e' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C 'u' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	in let solutions⁰ = transfer_lh_₁(initialState_lh_₁, finalState_lh_₁, [RightBank], time⁰, [LH_N])
//│ 	in let mins¹ = minSolutions_lh_₁(solutions⁰)
//│ 	in writeSolutions_lh_₁(mins¹, 1, [LH_N])
//│ def totalTime_lh_₁(_lh_totalTime_arg1²) = case _lh_totalTime_arg1² of {
//│ 	LH_C _lh_totalTime_LH_C_0² _lh_totalTime_LH_C_1² => case _lh_totalTime_LH_C_0² of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0² _lh_totalTime_LH_P2_1² => _lh_totalTime_LH_P2_0²
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def totalTime_lh_₂(_lh_totalTime_arg1⁰) = case _lh_totalTime_arg1⁰ of {
//│ 	LH_C _lh_totalTime_LH_C_0⁰ _lh_totalTime_LH_C_1⁰ => case _lh_totalTime_LH_C_0⁰ of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0⁰ _lh_totalTime_LH_P2_1⁰ => _lh_totalTime_LH_P2_0⁰
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def totalTime_lh_₃(_lh_totalTime_arg1¹) = case _lh_totalTime_arg1¹ of {
//│ 	LH_C _lh_totalTime_LH_C_0¹ _lh_totalTime_LH_C_1¹ => case _lh_totalTime_LH_C_0¹ of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0¹ _lh_totalTime_LH_P2_1¹ => _lh_totalTime_LH_P2_0¹
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def transfer_lh_₁(_lh_transfer_arg1⁰, _lh_transfer_arg2⁰, _lh_transfer_arg3⁰, _lh_transfer_arg4⁰, _lh_transfer_arg5⁰) = if polyEq⁰(_lh_transfer_arg1⁰, _lh_transfer_arg2⁰) then [LH_C [LH_C [LH_P2 _lh_transfer_arg4⁰ _lh_transfer_arg2⁰] _lh_transfer_arg5⁰] [LH_N]] else 
//│ 	let newHistory⁰ = [LH_C [LH_P2 _lh_transfer_arg4⁰ _lh_transfer_arg2⁰] _lh_transfer_arg5⁰]
//│ 	in let newLocation⁰ = opposite_lh_₁(_lh_transfer_arg3⁰)
//│ 	in let moveOne⁰ = concat_lh_₂(
//│ 		let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> _lh_listcomp_fun_para⁰(_lh_listcomp_fun⁰, _lh_transfer_arg1⁰, _lh_transfer_arg2⁰, _lh_transfer_arg3⁰, _lh_transfer_arg4⁰, _lh_transfer_arg5⁰, newHistory⁰, newLocation⁰))
//│ 		in _lh_listcomp_fun⁰(itemFromTo_lh_₁([Bono], [Adam])))
//│ 	in let moveTwo⁰ = concat_lh_₁(
//│ 		let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> _lh_listcomp_fun_para¹(_lh_listcomp_fun¹, _lh_transfer_arg1⁰, _lh_transfer_arg2⁰, _lh_transfer_arg3⁰, _lh_transfer_arg4⁰, _lh_transfer_arg5⁰, newHistory⁰, newLocation⁰))
//│ 		in _lh_listcomp_fun¹(itemFromTo_lh_₃([Bono], [Larry])))
//│ 	in mappend_lh_₃(moveOne⁰, moveTwo⁰)
//│ def u2times_lh_₁(_lh_u2times_arg1⁰) = case _lh_u2times_arg1⁰ of {
//│ 	Bono  => 10
//│ 	| Edge  => 5
//│ 	| Larry  => 2
//│ 	| Adam  => 1
//│ 	| _  => error⁰}
//│ def u2times_lh_₂(_lh_u2times_arg1¹) = case _lh_u2times_arg1¹ of {
//│ 	Bono  => 10
//│ 	| Edge  => 5
//│ 	| Larry  => 2
//│ 	| Adam  => 1
//│ 	| _  => error⁰}
//│ def updateState_lh_₁(_lh_updateState_arg1⁰, _lh_updateState_arg2⁰, _lh_updateState_arg3⁰) = case _lh_updateState_arg1⁰ of {
//│ 	State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰ => case _lh_updateState_arg2⁰ of {
//│ 		Bono  => 
//│ 			let _lh_updateState_State_3¹ = _lh_updateState_State_3⁰
//│ 			in let _lh_updateState_State_2¹ = _lh_updateState_State_2⁰
//│ 			in let _lh_updateState_State_1¹ = _lh_updateState_State_1⁰
//│ 			in let _lh_updateState_State_0¹ = _lh_updateState_arg3⁰
//│ 			in (fun _lh_updateState_arg2¹ -> (fun _lh_updateState_arg3¹ -> case _lh_updateState_arg2¹ of {
//│ 				Bono  => [State _lh_updateState_arg3¹ _lh_updateState_State_1¹ _lh_updateState_State_2¹ _lh_updateState_State_3¹]
//│ 				| Edge  => [State _lh_updateState_State_0¹ _lh_updateState_arg3¹ _lh_updateState_State_2¹ _lh_updateState_State_3¹]
//│ 				| Larry  => [State _lh_updateState_State_0¹ _lh_updateState_State_1¹ _lh_updateState_arg3¹ _lh_updateState_State_3¹]
//│ 				| Adam  => [State _lh_updateState_State_0¹ _lh_updateState_State_1¹ _lh_updateState_State_2¹ _lh_updateState_arg3¹]
//│ 				| _  => error⁰}))
//│ 		| Edge  => 
//│ 			let _lh_updateState_State_3² = _lh_updateState_State_3⁰
//│ 			in let _lh_updateState_State_2² = _lh_updateState_State_2⁰
//│ 			in let _lh_updateState_State_1² = _lh_updateState_arg3⁰
//│ 			in let _lh_updateState_State_0² = _lh_updateState_State_0⁰
//│ 			in (fun _lh_updateState_arg2² -> (fun _lh_updateState_arg3² -> case _lh_updateState_arg2² of {
//│ 				Bono  => [State _lh_updateState_arg3² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_State_3²]
//│ 				| Edge  => [State _lh_updateState_State_0² _lh_updateState_arg3² _lh_updateState_State_2² _lh_updateState_State_3²]
//│ 				| Larry  => [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_arg3² _lh_updateState_State_3²]
//│ 				| Adam  => [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_arg3²]
//│ 				| _  => error⁰}))
//│ 		| Larry  => 
//│ 			let _lh_updateState_State_3³ = _lh_updateState_State_3⁰
//│ 			in let _lh_updateState_State_2³ = _lh_updateState_arg3⁰
//│ 			in let _lh_updateState_State_1³ = _lh_updateState_State_1⁰
//│ 			in let _lh_updateState_State_0³ = _lh_updateState_State_0⁰
//│ 			in (fun _lh_updateState_arg2³ -> (fun _lh_updateState_arg3³ -> case _lh_updateState_arg2³ of {
//│ 				Bono  => [State _lh_updateState_arg3³ _lh_updateState_State_1³ _lh_updateState_State_2³ _lh_updateState_State_3³]
//│ 				| Edge  => [State _lh_updateState_State_0³ _lh_updateState_arg3³ _lh_updateState_State_2³ _lh_updateState_State_3³]
//│ 				| Larry  => [State _lh_updateState_State_0³ _lh_updateState_State_1³ _lh_updateState_arg3³ _lh_updateState_State_3³]
//│ 				| Adam  => [State _lh_updateState_State_0³ _lh_updateState_State_1³ _lh_updateState_State_2³ _lh_updateState_arg3³]
//│ 				| _  => error⁰}))
//│ 		| Adam  => 
//│ 			let _lh_updateState_State_3⁴ = _lh_updateState_arg3⁰
//│ 			in let _lh_updateState_State_2⁴ = _lh_updateState_State_2⁰
//│ 			in let _lh_updateState_State_1⁴ = _lh_updateState_State_1⁰
//│ 			in let _lh_updateState_State_0⁴ = _lh_updateState_State_0⁰
//│ 			in (fun _lh_updateState_arg2⁴ -> (fun _lh_updateState_arg3⁴ -> case _lh_updateState_arg2⁴ of {
//│ 				Bono  => [State _lh_updateState_arg3⁴ _lh_updateState_State_1⁴ _lh_updateState_State_2⁴ _lh_updateState_State_3⁴]
//│ 				| Edge  => [State _lh_updateState_State_0⁴ _lh_updateState_arg3⁴ _lh_updateState_State_2⁴ _lh_updateState_State_3⁴]
//│ 				| Larry  => [State _lh_updateState_State_0⁴ _lh_updateState_State_1⁴ _lh_updateState_arg3⁴ _lh_updateState_State_3⁴]
//│ 				| Adam  => [State _lh_updateState_State_0⁴ _lh_updateState_State_1⁴ _lh_updateState_State_2⁴ _lh_updateState_arg3⁴]
//│ 				| _  => error⁰}))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def updateState_lh_₂(_lh_updateState_arg1², _lh_updateState_arg2⁶, _lh_updateState_arg3⁶) = case _lh_updateState_arg1² of {
//│ 	State _lh_updateState_State_0⁵ _lh_updateState_State_1⁵ _lh_updateState_State_2⁵ _lh_updateState_State_3⁵ => case _lh_updateState_arg2⁶ of {
//│ 		Bono  => [State _lh_updateState_arg3⁶ _lh_updateState_State_1⁵ _lh_updateState_State_2⁵ _lh_updateState_State_3⁵]
//│ 		| Edge  => [State _lh_updateState_State_0⁵ _lh_updateState_arg3⁶ _lh_updateState_State_2⁵ _lh_updateState_State_3⁵]
//│ 		| Larry  => [State _lh_updateState_State_0⁵ _lh_updateState_State_1⁵ _lh_updateState_arg3⁶ _lh_updateState_State_3⁵]
//│ 		| Adam  => [State _lh_updateState_State_0⁵ _lh_updateState_State_1⁵ _lh_updateState_State_2⁵ _lh_updateState_arg3⁶]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def updateState_lh_₃(_lh_updateState_arg1¹, _lh_updateState_arg2⁵, _lh_updateState_arg3⁵) = _lh_updateState_arg1¹(_lh_updateState_arg2⁵, _lh_updateState_arg3⁵)
//│ def writeHistory_lh_₁(_lh_writeHistory_arg1⁰) = case _lh_writeHistory_arg1⁰ of {
//│ 	LH_N  => (fun x⁰ -> x⁰)
//│ 	| _  => foldr_lh_₁((fun timestate⁰ -> (fun acc⁰ -> 
//│ 		let _lh_matchIdent⁰ = timestate⁰
//│ 		in case _lh_matchIdent⁰ of {
//│ 			LH_P2 _lh_writeHistory_LH_P2_0⁰ _lh_writeHistory_LH_P2_1⁰ => (fun _lh_funcomp_x⁵ -> (fun _lh_funcomp_x⁶ -> (fun _lh_funcomp_x⁷ -> (fun _lh_funcomp_x⁸ -> (fun x¹ -> mappend_lh_₅(
//│ 				let t⁶ = 	
//│ 					let t⁷ = 	
//│ 						let t⁸ = 	
//│ 							let t⁹ = 	
//│ 								let t¹⁰ = 	
//│ 									let t¹¹ = (fun ys⁷ -> ys⁷)
//│ 									in let h⁶ = ' '
//│ 									in (fun ys⁸ -> [LH_C h⁶ mappend_lh_₅(t¹¹, ys⁸)])
//│ 								in let h⁷ = ':'
//│ 								in (fun ys⁹ -> [LH_C h⁷ mappend_lh_₅(t¹⁰, ys⁹)])
//│ 							in let h⁸ = 'e'
//│ 							in (fun ys¹⁰ -> [LH_C h⁸ mappend_lh_₅(t⁹, ys¹⁰)])
//│ 						in let h⁹ = 'm'
//│ 						in (fun ys¹¹ -> [LH_C h⁹ mappend_lh_₅(t⁸, ys¹¹)])
//│ 					in let h¹⁰ = 'i'
//│ 					in (fun ys¹² -> [LH_C h¹⁰ mappend_lh_₅(t⁷, ys¹²)])
//│ 				in let h¹¹ = 'T'
//│ 				in (fun ys¹³ -> [LH_C h¹¹ mappend_lh_₅(t⁶, ys¹³)]), x¹))((fun x² -> mappend_lh_₄(string_of_int⁰((totalTime_lh_₃(_lh_writeHistory_arg1⁰) - _lh_writeHistory_LH_P2_0⁰)), x²))(_lh_funcomp_x⁸)))((fun x³ -> [LH_C '|' x³])(_lh_funcomp_x⁷)))(writeState_lh_₁(_lh_writeHistory_LH_P2_1⁰, _lh_funcomp_x⁶)))(acc⁰(_lh_funcomp_x⁵)))
//│ 			| _  => error⁰})), (fun x⁴ -> x⁴), _lh_writeHistory_arg1⁰)}
//│ def writeItem_lh_₁(_lh_writeItem_arg1⁰, _lh_writeItem_arg2⁰, _lh_writeItem_arg3⁰) = _lh_writeItem_arg1⁰(_lh_writeItem_arg2⁰, _lh_writeItem_arg3⁰)
//│ def writeSolutions_lh_₁(_lh_writeSolutions_arg1⁰, _lh_writeSolutions_arg2⁰) = _lh_writeSolutions_arg1⁰(_lh_writeSolutions_arg2⁰)
//│ def writeState_lh_₁(_lh_writeState_arg1⁰, _lh_funcomp_x⁰) = (fun _lh_funcomp_x¹ -> (fun _lh_funcomp_x² -> (fun _lh_funcomp_x³ -> (fun _lh_funcomp_x⁴ -> (fun s⁰ -> mappend_lh_₇([LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], s⁰))(writeItem_lh_₁((fun _lh_writeItem_arg2¹ -> (fun _lh_writeItem_arg3¹ -> case _lh_writeItem_arg2¹ of {
//│ 	LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3¹)
//│ 	| RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3¹)
//│ 	| _  => error⁰})), bonoPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x⁴)))(writeItem_lh_₁((fun _lh_writeItem_arg2² -> (fun _lh_writeItem_arg3² -> case _lh_writeItem_arg2² of {
//│ 	LeftBank  => mappend_lh_₇([LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3²)
//│ 	| RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3²)
//│ 	| _  => error⁰})), edgePos_lh_₄(_lh_writeState_arg1⁰), _lh_funcomp_x³)))(writeItem_lh_₁((fun _lh_writeItem_arg2³ -> (fun _lh_writeItem_arg3³ -> case _lh_writeItem_arg2³ of {
//│ 	LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3³)
//│ 	| RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3³)
//│ 	| _  => error⁰})), larryPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x²)))(writeItem_lh_₁((fun _lh_writeItem_arg2⁴ -> (fun _lh_writeItem_arg3⁴ -> case _lh_writeItem_arg2⁴ of {
//│ 	LeftBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁴)
//│ 	| RightBank  => mappend_lh_₇([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁴)
//│ 	| _  => error⁰})), adamPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x¹)))((fun s¹ -> mappend_lh_₇([LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], s¹))(_lh_funcomp_x⁰))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
