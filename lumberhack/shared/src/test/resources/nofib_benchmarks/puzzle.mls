

:lhInHaskell
:lhGenOCaml
all f [] = True
all f (h:t) = if f h then all f t else False
data ItemType = Bono | Edge | Larry | Adam deriving Eq
succItem Bono = Edge
succItem Edge = Larry
succItem Larry = Adam
succItem _ = error
isEnd Bono = False
isEnd Edge = False
isEnd Larry = False
isEnd Adam = True
itemFromTo a b = if polyEq a b then [a] else (a:(itemFromTo (succItem a) b))
data BankType = LeftBank | RightBank deriving Eq
data StateType = State BankType BankType BankType BankType deriving Eq
type History = [(Int, StateType)]
type Solutions = [History]
bonoPos (State a b c d) = a
edgePos (State a b c d) = b
larryPos (State a b c d) = c
adamPos (State a b c d) = d
initialState, finalState :: StateType
initialState = State LeftBank LeftBank LeftBank LeftBank
finalState = State RightBank RightBank RightBank RightBank
position :: ItemType -> StateType ->  BankType
position Bono = bonoPos
position Edge = edgePos
position Larry = larryPos
position Adam = adamPos
updateState :: StateType -> ItemType -> BankType -> StateType
updateState (State a b c d) Bono pos = State pos b c d
updateState (State a b c d) Edge pos = State a pos c d
updateState (State a b c d) Larry pos = State a b pos d
updateState (State a b c d) Adam pos = State a b c pos
opposite :: BankType -> BankType
opposite LeftBank = RightBank
opposite RightBank = LeftBank
notSeen :: StateType -> History -> Bool
notSeen state = all (\_s -> case _s of (_, s) -> polyNeq state s)
writeItem :: ItemType -> BankType -> ShowS
writeItem Bono LeftBank rest
  = "    Bono |                    ||" ++ rest
writeItem Edge LeftBank rest
  = "The Edge |                    ||" ++ rest
writeItem Larry LeftBank rest
  = "   Larry |                    ||" ++ rest
writeItem Adam LeftBank rest
  = "    Adam |                    ||" ++ rest
writeItem Bono RightBank rest
  = "         |                    | Bono|" ++ rest
writeItem Edge RightBank rest
  = "         |                    | The Edge|" ++ rest
writeItem Larry RightBank rest
  = "         |                    | Larry|" ++ rest
writeItem Adam RightBank rest
  = "         |                    | Adam|" ++ rest
writeState :: StateType -> ShowS
writeState state = (\s -> "----------------------------------------|" ++ s) . (writeItem Bono (bonoPos state)) . (writeItem Edge (edgePos state)) . (writeItem Larry (larryPos state)) . (writeItem Adam (adamPos state)) . (\s -> "----------------------------------------|" ++ s)
writeHistory :: History -> ShowS
writeHistory [ ] = \x -> x
writeHistory history = foldr (\timestate acc -> case timestate of (time, state) -> ((\x -> "Time: " ++ x) . (\x -> (string_of_int ((totalTime history) - time)) ++ x) . (\x -> '|':x) . (writeState state) . acc)) (\x -> x) history
writeSolutions :: Solutions -> Int -> ShowS
writeSolutions [ ] _ = \x -> x
writeSolutions (item : next) count
  = (\x -> "Solution " ++ x) . (\x -> (string_of_int count) ++ x) . (\x -> '|':x) . (writeHistory item) . (writeSolutions next (count + 1))
totalTime :: History -> Int
totalTime ((time, _) : _) = time
totalTime _ = error
minSolutions :: Solutions -> Solutions
minSolutions [ ] = [ ]
minSolutions (history : next) =
  let minAcc = \minSoFar -> \mins -> \ls -> case ls of {
    [] -> mins;
    (history : next) ->
      let total = totalTime history in
      if minSoFar < total then
        minAcc minSoFar mins next
      else if minSoFar == total then
        minAcc minSoFar (history : mins) next
      else
        minAcc total [history] next
  }
  in
  reverse (minAcc (totalTime history) [history] next)
u2times :: ItemType -> Int
u2times Bono = 10
u2times Edge = 5
u2times Larry = 2
u2times Adam = 1
transfer :: StateType -> StateType -> BankType -> Int -> History -> Solutions
-- We are trying to get from a legal state, source, to another legal
-- state and history tells us one way to do it in time countdown
-- starting from dest where the torch is at location.
-- If we find newDest from which we can get to dest in one step
-- we can find all the solutions recursively.
transfer source dest location countdown history =
  if polyEq source dest then
    [(countdown, dest) : history]
  else
    let newHistory = (countdown, dest) : history in
    let newLocation = opposite location in
    let moveOne = concat [transfer source newDest newLocation newTime newHistory
                            | item <- itemFromTo Bono Adam,
                              polyEq (position item dest) location,
                              let newDest = updateState dest item newLocation,
                              notSeen newDest history,
                              let newTime = countdown + (u2times item)] in
    let moveTwo = concat [transfer source newDest newLocation newTime newHistory
                            | i <- itemFromTo Bono Larry,
                              j <- itemFromTo (succItem i) Adam,
                              (polyEq (position i dest) location) && (polyEq (position j dest) location),
                              let newDest = updateState (updateState dest i newLocation) j newLocation,
                              notSeen newDest history,
                              let newTime = countdown + (u2times i)] in
    moveOne ++ moveTwo
    -- let moveOne = concat [transfer source (updateState dest item newLocation) newLocation (countdown + u2times item) newHistory
    --                         | item <- [Bono .. Adam],
    --                           position item dest == location,
    --                           notSeen (updateState dest item newLocation) history] in
    -- let moveTwo = concat [transfer source (updateState (updateState dest i newLocation) j newLocation) newLocation (countdown + u2times i) newHistory
    --                         | i <- [Bono .. Larry],
    --                           j <- [succ i .. Adam],
    --                           position i dest == location &&
    --                           position j dest == location,
    --                           notSeen (updateState (updateState dest i newLocation) j newLocation) history] in
testPuzzle_nofib x =
  let time = if ((length x) == 1) then 0 else error "puzzle expects exactly one argument" in
  let solutions = transfer initialState finalState RightBank time [ ] in
  let mins = minSolutions solutions in
  (writeSolutions mins 1 "")
testPuzzle_nofib $ primId [2]
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> after expansion >>>>>>>>>>
//│ testPuzzle_nofib_lh_₁(primId⁰([LH_C 2 [LH_N]]))
//│ def adamPos_lh_₁(_lh_adamPos_arg1²) = case _lh_adamPos_arg1² of {
//│ 	State _lh_adamPos_State_0² _lh_adamPos_State_1² _lh_adamPos_State_2² _lh_adamPos_State_3² => _lh_adamPos_State_3²}
//│ def adamPos_lh_₂(_lh_adamPos_arg1¹) = case _lh_adamPos_arg1¹ of {
//│ 	State _lh_adamPos_State_0¹ _lh_adamPos_State_1¹ _lh_adamPos_State_2¹ _lh_adamPos_State_3¹ => _lh_adamPos_State_3¹}
//│ def adamPos_lh_₃(_lh_adamPos_arg1⁰) = case _lh_adamPos_arg1⁰ of {
//│ 	State _lh_adamPos_State_0⁰ _lh_adamPos_State_1⁰ _lh_adamPos_State_2⁰ _lh_adamPos_State_3⁰ => _lh_adamPos_State_3⁰}
//│ def all_lh_₁(_lh_all_arg1¹, _lh_all_arg2¹) = case _lh_all_arg2¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₁(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False]}
//│ def all_lh_₂(_lh_all_arg1⁰, _lh_all_arg2⁰) = case _lh_all_arg2⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₂(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False]}
//│ def bonoPos_lh_₁(_lh_bonoPos_arg1³) = case _lh_bonoPos_arg1³ of {
//│ 	State _lh_bonoPos_State_0³ _lh_bonoPos_State_1³ _lh_bonoPos_State_2³ _lh_bonoPos_State_3³ => _lh_bonoPos_State_0³}
//│ def bonoPos_lh_₂(_lh_bonoPos_arg1²) = case _lh_bonoPos_arg1² of {
//│ 	State _lh_bonoPos_State_0² _lh_bonoPos_State_1² _lh_bonoPos_State_2² _lh_bonoPos_State_3² => _lh_bonoPos_State_0²}
//│ def bonoPos_lh_₃(_lh_bonoPos_arg1¹) = case _lh_bonoPos_arg1¹ of {
//│ 	State _lh_bonoPos_State_0¹ _lh_bonoPos_State_1¹ _lh_bonoPos_State_2¹ _lh_bonoPos_State_3¹ => _lh_bonoPos_State_0¹}
//│ def bonoPos_lh_₄(_lh_bonoPos_arg1⁰) = case _lh_bonoPos_arg1⁰ of {
//│ 	State _lh_bonoPos_State_0⁰ _lh_bonoPos_State_1⁰ _lh_bonoPos_State_2⁰ _lh_bonoPos_State_3⁰ => _lh_bonoPos_State_0⁰}
//│ def concat_lh_₁(lss¹) = case lss¹ of {
//│ 	LH_C h¹⁰ t¹⁰ => mappend_lh_₄(h¹⁰, concat_lh_₁(t¹⁰))
//│ 	| LH_N  => [LH_N]}
//│ def concat_lh_₂(lss⁰) = case lss⁰ of {
//│ 	LH_C h⁹ t⁹ => mappend_lh_₅(h⁹, concat_lh_₂(t⁹))
//│ 	| LH_N  => [LH_N]}
//│ def edgePos_lh_₁(_lh_edgePos_arg1²) = case _lh_edgePos_arg1² of {
//│ 	State _lh_edgePos_State_0² _lh_edgePos_State_1² _lh_edgePos_State_2² _lh_edgePos_State_3² => _lh_edgePos_State_1²}
//│ def edgePos_lh_₂(_lh_edgePos_arg1¹) = case _lh_edgePos_arg1¹ of {
//│ 	State _lh_edgePos_State_0¹ _lh_edgePos_State_1¹ _lh_edgePos_State_2¹ _lh_edgePos_State_3¹ => _lh_edgePos_State_1¹}
//│ def edgePos_lh_₃(_lh_edgePos_arg1⁰) = case _lh_edgePos_arg1⁰ of {
//│ 	State _lh_edgePos_State_0⁰ _lh_edgePos_State_1⁰ _lh_edgePos_State_2⁰ _lh_edgePos_State_3⁰ => _lh_edgePos_State_1⁰}
//│ def finalState_lh_₁ = [State [RightBank] [RightBank] [RightBank] [RightBank]]
//│ def foldr_lh_₁(f⁰, i⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h¹ t¹ => f⁰(h¹, foldr_lh_₁(f⁰, i⁰, t¹))
//│ 	| LH_N  => i⁰}
//│ def initialState_lh_₁ = [State [LeftBank] [LeftBank] [LeftBank] [LeftBank]]
//│ def itemFromTo_lh_₁(_lh_itemFromTo_arg1², _lh_itemFromTo_arg2²) = if polyEq⁰(_lh_itemFromTo_arg1², _lh_itemFromTo_arg2²) then [LH_C _lh_itemFromTo_arg1² [LH_N]] else [LH_C _lh_itemFromTo_arg1² itemFromTo_lh_₁(succItem_lh_₂(_lh_itemFromTo_arg1²), _lh_itemFromTo_arg2²)]
//│ def itemFromTo_lh_₂(_lh_itemFromTo_arg1¹, _lh_itemFromTo_arg2¹) = if polyEq⁰(_lh_itemFromTo_arg1¹, _lh_itemFromTo_arg2¹) then [LH_C _lh_itemFromTo_arg1¹ [LH_N]] else [LH_C _lh_itemFromTo_arg1¹ itemFromTo_lh_₂(succItem_lh_₃(_lh_itemFromTo_arg1¹), _lh_itemFromTo_arg2¹)]
//│ def itemFromTo_lh_₃(_lh_itemFromTo_arg1⁰, _lh_itemFromTo_arg2⁰) = if polyEq⁰(_lh_itemFromTo_arg1⁰, _lh_itemFromTo_arg2⁰) then [LH_C _lh_itemFromTo_arg1⁰ [LH_N]] else [LH_C _lh_itemFromTo_arg1⁰ itemFromTo_lh_₃(succItem_lh_₄(_lh_itemFromTo_arg1⁰), _lh_itemFromTo_arg2⁰)]
//│ def larryPos_lh_₁(_lh_larryPos_arg1²) = case _lh_larryPos_arg1² of {
//│ 	State _lh_larryPos_State_0² _lh_larryPos_State_1² _lh_larryPos_State_2² _lh_larryPos_State_3² => _lh_larryPos_State_2²}
//│ def larryPos_lh_₂(_lh_larryPos_arg1¹) = case _lh_larryPos_arg1¹ of {
//│ 	State _lh_larryPos_State_0¹ _lh_larryPos_State_1¹ _lh_larryPos_State_2¹ _lh_larryPos_State_3¹ => _lh_larryPos_State_2¹}
//│ def larryPos_lh_₃(_lh_larryPos_arg1⁰) = case _lh_larryPos_arg1⁰ of {
//│ 	State _lh_larryPos_State_0⁰ _lh_larryPos_State_1⁰ _lh_larryPos_State_2⁰ _lh_larryPos_State_3⁰ => _lh_larryPos_State_2⁰}
//│ def length_lh_₁(ls⁴) = case ls⁴ of {
//│ 	LH_C h¹² t¹² => (1 + length_lh_₁(t¹²))
//│ 	| LH_N  => 0}
//│ def mappend_lh_₁(xs⁷, ys⁷) = case xs⁷ of {
//│ 	LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_lh_₁(t¹¹, ys⁷)]
//│ 	| LH_N  => ys⁷}
//│ def mappend_lh_₂(xs⁶, ys⁶) = case xs⁶ of {
//│ 	LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₂(t⁸, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₃(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₃(t⁷, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₄(xs⁴, ys⁴) = case xs⁴ of {
//│ 	LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₄(t⁶, ys⁴)]
//│ 	| LH_N  => ys⁴}
//│ def mappend_lh_₅(xs³, ys³) = case xs³ of {
//│ 	LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₅(t⁵, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₆(xs², ys²) = case xs² of {
//│ 	LH_C h³ t³ => [LH_C h³ mappend_lh_₆(t³, ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₇(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₇(t², ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₈(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₈(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def minSolutions_lh_₁(_lh_minSolutions_arg1⁰) = case _lh_minSolutions_arg1⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_minSolutions_LH_C_0⁰ _lh_minSolutions_LH_C_1⁰ => 
//│ 		let minAcc⁰ = (fun minSoFar⁰ -> (fun mins⁰ -> (fun ls³ -> 
//│ 			let _lh_matchIdent³ = ls³
//│ 			in case _lh_matchIdent³ of {
//│ 				LH_N  => mins⁰
//│ 				| LH_C _lh_minSolutions_LH_C_0¹ _lh_minSolutions_LH_C_1¹ => 
//│ 					let total⁰ = totalTime_lh_₂(_lh_minSolutions_LH_C_0¹)
//│ 					in if (minSoFar⁰ < total⁰) then minAcc⁰(minSoFar⁰, mins⁰, _lh_minSolutions_LH_C_1¹) else if (minSoFar⁰ == total⁰) then minAcc⁰(minSoFar⁰, [LH_C _lh_minSolutions_LH_C_0¹ mins⁰], _lh_minSolutions_LH_C_1¹) else minAcc⁰(total⁰, [LH_C _lh_minSolutions_LH_C_0¹ [LH_N]], _lh_minSolutions_LH_C_1¹)})))
//│ 		in reverse_lh_₁(minAcc⁰(totalTime_lh_₁(_lh_minSolutions_LH_C_0⁰), [LH_C _lh_minSolutions_LH_C_0⁰ [LH_N]], _lh_minSolutions_LH_C_1⁰))}
//│ def notSeen_lh_₁(_lh_notSeen_arg1¹) = all_lh_₁((fun _s¹ -> 
//│ 	let _lh_matchIdent² = _s¹
//│ 	in case _lh_matchIdent² of {
//│ 		LH_P2 _lh_notSeen_LH_P2_0¹ _lh_notSeen_LH_P2_1¹ => polyNeq⁰(_lh_notSeen_arg1¹, _lh_notSeen_LH_P2_1¹)}))
//│ def notSeen_lh_₂(_lh_notSeen_arg1⁰) = all_lh_₂((fun _s⁰ -> 
//│ 	let _lh_matchIdent¹ = _s⁰
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P2 _lh_notSeen_LH_P2_0⁰ _lh_notSeen_LH_P2_1⁰ => polyNeq⁰(_lh_notSeen_arg1⁰, _lh_notSeen_LH_P2_1⁰)}))
//│ def opposite_lh_₁(_lh_opposite_arg1⁰) = case _lh_opposite_arg1⁰ of {
//│ 	LeftBank  => [RightBank]
//│ 	| RightBank  => [LeftBank]}
//│ def position_lh_₁(_lh_position_arg1²) = case _lh_position_arg1² of {
//│ 	Bono  => bonoPos_lh_₁
//│ 	| Edge  => edgePos_lh_₁
//│ 	| Larry  => larryPos_lh_₁
//│ 	| Adam  => adamPos_lh_₁}
//│ def position_lh_₂(_lh_position_arg1¹) = case _lh_position_arg1¹ of {
//│ 	Bono  => bonoPos_lh_₂
//│ 	| Edge  => edgePos_lh_₂
//│ 	| Larry  => larryPos_lh_₂
//│ 	| Adam  => adamPos_lh_₂}
//│ def position_lh_₃(_lh_position_arg1⁰) = case _lh_position_arg1⁰ of {
//│ 	Bono  => bonoPos_lh_₃
//│ 	| Edge  => edgePos_lh_₃
//│ 	| Larry  => larryPos_lh_₃
//│ 	| Adam  => adamPos_lh_₃}
//│ def reverse_helper_lh_₁(ls¹, a⁰) = case ls¹ of {
//│ 	LH_C h⁴ t⁴ => reverse_helper_lh_₁(t⁴, [LH_C h⁴ a⁰])
//│ 	| LH_N  => a⁰}
//│ def reverse_lh_₁(ls²) = reverse_helper_lh_₁(ls², [LH_N])
//│ def succItem_lh_₁(_lh_succItem_arg1³) = case _lh_succItem_arg1³ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₂(_lh_succItem_arg1²) = case _lh_succItem_arg1² of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₃(_lh_succItem_arg1¹) = case _lh_succItem_arg1¹ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₄(_lh_succItem_arg1⁰) = case _lh_succItem_arg1⁰ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def testPuzzle_nofib_lh_₁(_lh_testPuzzle_nofib_arg1⁰) = 
//│ 	let time⁰ = if (length_lh_₁(_lh_testPuzzle_nofib_arg1⁰) == 1) then 0 else error⁰([LH_C 'p' [LH_C 'u' [LH_C 'z' [LH_C 'z' [LH_C 'l' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'p' [LH_C 'e' [LH_C 'c' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'a' [LH_C 'c' [LH_C 't' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C 'e' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C 'u' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	in let solutions⁰ = transfer_lh_₁(initialState_lh_₁, finalState_lh_₁, [RightBank], time⁰, [LH_N])
//│ 	in let mins¹ = minSolutions_lh_₁(solutions⁰)
//│ 	in writeSolutions_lh_₁(mins¹, 1, [LH_N])
//│ def totalTime_lh_₁(_lh_totalTime_arg1²) = case _lh_totalTime_arg1² of {
//│ 	LH_C _lh_totalTime_LH_C_0² _lh_totalTime_LH_C_1² => case _lh_totalTime_LH_C_0² of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0² _lh_totalTime_LH_P2_1² => _lh_totalTime_LH_P2_0²
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def totalTime_lh_₂(_lh_totalTime_arg1¹) = case _lh_totalTime_arg1¹ of {
//│ 	LH_C _lh_totalTime_LH_C_0¹ _lh_totalTime_LH_C_1¹ => case _lh_totalTime_LH_C_0¹ of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0¹ _lh_totalTime_LH_P2_1¹ => _lh_totalTime_LH_P2_0¹
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def totalTime_lh_₃(_lh_totalTime_arg1⁰) = case _lh_totalTime_arg1⁰ of {
//│ 	LH_C _lh_totalTime_LH_C_0⁰ _lh_totalTime_LH_C_1⁰ => case _lh_totalTime_LH_C_0⁰ of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0⁰ _lh_totalTime_LH_P2_1⁰ => _lh_totalTime_LH_P2_0⁰
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def transfer_lh_₁(_lh_transfer_arg1⁰, _lh_transfer_arg2⁰, _lh_transfer_arg3⁰, _lh_transfer_arg4⁰, _lh_transfer_arg5⁰) = if polyEq⁰(_lh_transfer_arg1⁰, _lh_transfer_arg2⁰) then [LH_C [LH_C [LH_P2 _lh_transfer_arg4⁰ _lh_transfer_arg2⁰] _lh_transfer_arg5⁰] [LH_N]] else 
//│ 	let newHistory⁰ = [LH_C [LH_P2 _lh_transfer_arg4⁰ _lh_transfer_arg2⁰] _lh_transfer_arg5⁰]
//│ 	in let newLocation⁰ = opposite_lh_₁(_lh_transfer_arg3⁰)
//│ 	in let moveOne⁰ = concat_lh_₂(
//│ 		let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h⁰, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) then 
//│ 				let newDest⁰ = updateState_lh_₁(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h⁰, newLocation⁰)
//│ 				in if notSeen_lh_₂(newDest⁰, _lh_transfer_arg5⁰) then 
//│ 					let newTime⁰ = (_lh_transfer_arg4⁰ + u2times_lh_₂(_lh_listcomp_fun_ls_h⁰))
//│ 					in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest⁰, newLocation⁰, newTime⁰, newHistory⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁰(itemFromTo_lh_₂([Bono], [Adam])))
//│ 	in let moveTwo⁰ = concat_lh_₁(
//│ 		let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 			LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => 
//│ 				let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 					LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => if (polyEq⁰(position_lh_₁(_lh_listcomp_fun_ls_h¹, _lh_transfer_arg2⁰), _lh_transfer_arg3⁰) && polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h², _lh_transfer_arg2⁰), _lh_transfer_arg3⁰)) then 
//│ 						let newDest¹ = updateState_lh_₂(updateState_lh_₃(_lh_transfer_arg2⁰, _lh_listcomp_fun_ls_h¹, newLocation⁰), _lh_listcomp_fun_ls_h², newLocation⁰)
//│ 						in if notSeen_lh_₁(newDest¹, _lh_transfer_arg5⁰) then 
//│ 							let newTime¹ = (_lh_transfer_arg4⁰ + u2times_lh_₁(_lh_listcomp_fun_ls_h¹))
//│ 							in [LH_C transfer_lh_₁(_lh_transfer_arg1⁰, newDest¹, newLocation⁰, newTime¹, newHistory⁰) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ 					| LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ 				in _lh_listcomp_fun²(itemFromTo_lh_₁(succItem_lh_₁(_lh_listcomp_fun_ls_h¹), [Adam]))
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun¹(itemFromTo_lh_₃([Bono], [Larry])))
//│ 	in mappend_lh_₁(moveOne⁰, moveTwo⁰)
//│ def u2times_lh_₁(_lh_u2times_arg1¹) = case _lh_u2times_arg1¹ of {
//│ 	Bono  => 10
//│ 	| Edge  => 5
//│ 	| Larry  => 2
//│ 	| Adam  => 1}
//│ def u2times_lh_₂(_lh_u2times_arg1⁰) = case _lh_u2times_arg1⁰ of {
//│ 	Bono  => 10
//│ 	| Edge  => 5
//│ 	| Larry  => 2
//│ 	| Adam  => 1}
//│ def updateState_lh_₁(_lh_updateState_arg1², _lh_updateState_arg2², _lh_updateState_arg3²) = case _lh_updateState_arg1² of {
//│ 	State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_State_3² => case _lh_updateState_arg2² of {
//│ 		Bono  => [State _lh_updateState_arg3² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_State_3²]
//│ 		| Edge  => [State _lh_updateState_State_0² _lh_updateState_arg3² _lh_updateState_State_2² _lh_updateState_State_3²]
//│ 		| Larry  => [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_arg3² _lh_updateState_State_3²]
//│ 		| Adam  => [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_arg3²]}}
//│ def updateState_lh_₂(_lh_updateState_arg1¹, _lh_updateState_arg2¹, _lh_updateState_arg3¹) = case _lh_updateState_arg1¹ of {
//│ 	State _lh_updateState_State_0¹ _lh_updateState_State_1¹ _lh_updateState_State_2¹ _lh_updateState_State_3¹ => case _lh_updateState_arg2¹ of {
//│ 		Bono  => [State _lh_updateState_arg3¹ _lh_updateState_State_1¹ _lh_updateState_State_2¹ _lh_updateState_State_3¹]
//│ 		| Edge  => [State _lh_updateState_State_0¹ _lh_updateState_arg3¹ _lh_updateState_State_2¹ _lh_updateState_State_3¹]
//│ 		| Larry  => [State _lh_updateState_State_0¹ _lh_updateState_State_1¹ _lh_updateState_arg3¹ _lh_updateState_State_3¹]
//│ 		| Adam  => [State _lh_updateState_State_0¹ _lh_updateState_State_1¹ _lh_updateState_State_2¹ _lh_updateState_arg3¹]}}
//│ def updateState_lh_₃(_lh_updateState_arg1⁰, _lh_updateState_arg2⁰, _lh_updateState_arg3⁰) = case _lh_updateState_arg1⁰ of {
//│ 	State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰ => case _lh_updateState_arg2⁰ of {
//│ 		Bono  => [State _lh_updateState_arg3⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰]
//│ 		| Edge  => [State _lh_updateState_State_0⁰ _lh_updateState_arg3⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰]
//│ 		| Larry  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_arg3⁰ _lh_updateState_State_3⁰]
//│ 		| Adam  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_arg3⁰]}}
//│ def writeHistory_lh_₁(_lh_writeHistory_arg1⁰) = case _lh_writeHistory_arg1⁰ of {
//│ 	LH_N  => (fun x⁰ -> x⁰)
//│ 	| _  => foldr_lh_₁((fun timestate⁰ -> (fun acc⁰ -> 
//│ 		let _lh_matchIdent⁰ = timestate⁰
//│ 		in case _lh_matchIdent⁰ of {
//│ 			LH_P2 _lh_writeHistory_LH_P2_0⁰ _lh_writeHistory_LH_P2_1⁰ => (fun _lh_funcomp_x⁵ -> (fun _lh_funcomp_x⁶ -> (fun _lh_funcomp_x⁷ -> (fun _lh_funcomp_x⁸ -> (fun x¹ -> mappend_lh_₆([LH_C 'T' [LH_C 'i' [LH_C 'm' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_N]]]]]]], x¹))((fun x² -> mappend_lh_₇(string_of_int⁰((totalTime_lh_₃(_lh_writeHistory_arg1⁰) - _lh_writeHistory_LH_P2_0⁰)), x²))(_lh_funcomp_x⁸)))((fun x³ -> [LH_C '|' x³])(_lh_funcomp_x⁷)))(writeState_lh_₁(_lh_writeHistory_LH_P2_1⁰, _lh_funcomp_x⁶)))(acc⁰(_lh_funcomp_x⁵)))})), (fun x⁴ -> x⁴), _lh_writeHistory_arg1⁰)}
//│ def writeItem_lh_₁(_lh_writeItem_arg1⁰, _lh_writeItem_arg2⁰, _lh_writeItem_arg3⁰) = case _lh_writeItem_arg1⁰ of {
//│ 	Bono  => case _lh_writeItem_arg2⁰ of {
//│ 		LeftBank  => mappend_lh_₈([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| RightBank  => mappend_lh_₈([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'B' [LH_C 'o' [LH_C 'n' [LH_C 'o' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)}
//│ 	| Edge  => case _lh_writeItem_arg2⁰ of {
//│ 		LeftBank  => mappend_lh_₈([LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| RightBank  => mappend_lh_₈([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C 'e' [LH_C ' ' [LH_C 'E' [LH_C 'd' [LH_C 'g' [LH_C 'e' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)}
//│ 	| Larry  => case _lh_writeItem_arg2⁰ of {
//│ 		LeftBank  => mappend_lh_₈([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| RightBank  => mappend_lh_₈([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'L' [LH_C 'a' [LH_C 'r' [LH_C 'r' [LH_C 'y' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)}
//│ 	| Adam  => case _lh_writeItem_arg2⁰ of {
//│ 		LeftBank  => mappend_lh_₈([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)
//│ 		| RightBank  => mappend_lh_₈([LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_C '|' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'a' [LH_C 'm' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _lh_writeItem_arg3⁰)}}
//│ def writeSolutions_lh_₁(_lh_writeSolutions_arg1⁰, _lh_writeSolutions_arg2⁰) = case _lh_writeSolutions_arg1⁰ of {
//│ 	LH_N  => (fun x⁵ -> x⁵)
//│ 	| LH_C _lh_writeSolutions_LH_C_0⁰ _lh_writeSolutions_LH_C_1⁰ => (fun _lh_funcomp_x⁹ -> (fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> (fun _lh_funcomp_x¹² -> (fun x⁶ -> mappend_lh_₂([LH_C 'S' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]]]]]], x⁶))((fun x⁷ -> mappend_lh_₃(string_of_int⁰(_lh_writeSolutions_arg2⁰), x⁷))(_lh_funcomp_x¹²)))((fun x⁸ -> [LH_C '|' x⁸])(_lh_funcomp_x¹¹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0⁰, _lh_funcomp_x¹⁰)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1⁰, (_lh_writeSolutions_arg2⁰ + 1), _lh_funcomp_x⁹)))}
//│ def writeState_lh_₁(_lh_writeState_arg1⁰, _lh_funcomp_x⁰) = (fun _lh_funcomp_x¹ -> (fun _lh_funcomp_x² -> (fun _lh_funcomp_x³ -> (fun _lh_funcomp_x⁴ -> (fun s⁰ -> mappend_lh_₈([LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], s⁰))(writeItem_lh_₁([Bono], bonoPos_lh_₄(_lh_writeState_arg1⁰), _lh_funcomp_x⁴)))(writeItem_lh_₁([Edge], edgePos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x³)))(writeItem_lh_₁([Larry], larryPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x²)))(writeItem_lh_₁([Adam], adamPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x¹)))((fun s¹ -> mappend_lh_₈([LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '-' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], s¹))(_lh_funcomp_x⁰))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec finalState_lh__d1 =
//│ 		  (`State((`RightBank), (`RightBank), (`RightBank), (`RightBank)));;
//│ 		let rec updateState_lh__d1 _lh_updateState_arg1_2 _lh_updateState_arg2_2 _lh_updateState_arg3_2 =
//│ 		  (match _lh_updateState_arg1_2 with
//│ 		    | `State(_lh_updateState_State_0_2, _lh_updateState_State_1_2, _lh_updateState_State_2_2, _lh_updateState_State_3_2) -> 
//│ 		      (match _lh_updateState_arg2_2 with
//│ 		        | `Bono -> 
//│ 		          (`State(_lh_updateState_arg3_2, _lh_updateState_State_1_2, _lh_updateState_State_2_2, _lh_updateState_State_3_2))
//│ 		        | `Edge -> 
//│ 		          (`State(_lh_updateState_State_0_2, _lh_updateState_arg3_2, _lh_updateState_State_2_2, _lh_updateState_State_3_2))
//│ 		        | `Larry -> 
//│ 		          (`State(_lh_updateState_State_0_2, _lh_updateState_State_1_2, _lh_updateState_arg3_2, _lh_updateState_State_3_2))
//│ 		        | `Adam -> 
//│ 		          (`State(_lh_updateState_State_0_2, _lh_updateState_State_1_2, _lh_updateState_State_2_2, _lh_updateState_arg3_2))));;
//│ 		let rec mappend_lh__d1 xs_7 ys_7 =
//│ 		  (match xs_7 with
//│ 		    | `LH_C(h_1_1, t_1_1) -> 
//│ 		      (`LH_C(h_1_1, ((mappend_lh__d1 t_1_1) ys_7)))
//│ 		    | `LH_N -> 
//│ 		      ys_7);;
//│ 		let rec u2times_lh__d1 _lh_u2times_arg1_1 =
//│ 		  (match _lh_u2times_arg1_1 with
//│ 		    | `Bono -> 
//│ 		      10
//│ 		    | `Edge -> 
//│ 		      5
//│ 		    | `Larry -> 
//│ 		      2
//│ 		    | `Adam -> 
//│ 		      1);;
//│ 		let rec mappend_lh__d5 xs_3 ys_3 =
//│ 		  (match xs_3 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      (`LH_C(h_5, ((mappend_lh__d5 t_5) ys_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_3);;
//│ 		let rec concat_lh__d2 lss_0 =
//│ 		  (match lss_0 with
//│ 		    | `LH_C(h_9, t_9) -> 
//│ 		      ((mappend_lh__d5 h_9) (concat_lh__d2 t_9))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec edgePos_lh__d2 _lh_edgePos_arg1_1 =
//│ 		  (match _lh_edgePos_arg1_1 with
//│ 		    | `State(_lh_edgePos_State_0_1, _lh_edgePos_State_1_1, _lh_edgePos_State_2_1, _lh_edgePos_State_3_1) -> 
//│ 		      _lh_edgePos_State_1_1);;
//│ 		let rec bonoPos_lh__d2 _lh_bonoPos_arg1_2 =
//│ 		  (match _lh_bonoPos_arg1_2 with
//│ 		    | `State(_lh_bonoPos_State_0_2, _lh_bonoPos_State_1_2, _lh_bonoPos_State_2_2, _lh_bonoPos_State_3_2) -> 
//│ 		      _lh_bonoPos_State_0_2);;
//│ 		let rec adamPos_lh__d2 _lh_adamPos_arg1_1 =
//│ 		  (match _lh_adamPos_arg1_1 with
//│ 		    | `State(_lh_adamPos_State_0_1, _lh_adamPos_State_1_1, _lh_adamPos_State_2_1, _lh_adamPos_State_3_1) -> 
//│ 		      _lh_adamPos_State_3_1);;
//│ 		let rec larryPos_lh__d2 _lh_larryPos_arg1_1 =
//│ 		  (match _lh_larryPos_arg1_1 with
//│ 		    | `State(_lh_larryPos_State_0_1, _lh_larryPos_State_1_1, _lh_larryPos_State_2_1, _lh_larryPos_State_3_1) -> 
//│ 		      _lh_larryPos_State_2_1);;
//│ 		let rec position_lh__d2 _lh_position_arg1_1 =
//│ 		  (match _lh_position_arg1_1 with
//│ 		    | `Bono -> 
//│ 		      bonoPos_lh__d2
//│ 		    | `Edge -> 
//│ 		      edgePos_lh__d2
//│ 		    | `Larry -> 
//│ 		      larryPos_lh__d2
//│ 		    | `Adam -> 
//│ 		      adamPos_lh__d2);;
//│ 		let rec u2times_lh__d2 _lh_u2times_arg1_0 =
//│ 		  (match _lh_u2times_arg1_0 with
//│ 		    | `Bono -> 
//│ 		      10
//│ 		    | `Edge -> 
//│ 		      5
//│ 		    | `Larry -> 
//│ 		      2
//│ 		    | `Adam -> 
//│ 		      1);;
//│ 		let rec all_lh__d2 _lh_all_arg1_0 _lh_all_arg2_0 =
//│ 		  (match _lh_all_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_all_LH_C_0_0, _lh_all_LH_C_1_0) -> 
//│ 		      (if (_lh_all_arg1_0 _lh_all_LH_C_0_0) then
//│ 		        ((all_lh__d2 _lh_all_arg1_0) _lh_all_LH_C_1_0)
//│ 		      else
//│ 		        false));;
//│ 		let rec notSeen_lh__d2 _lh_notSeen_arg1_0 =
//│ 		  (all_lh__d2 (fun _s_0 -> 
//│ 		    (let rec _lh_matchIdent_1 = _s_0 in
//│ 		      (match _lh_matchIdent_1 with
//│ 		        | `LH_P2(_lh_notSeen_LH_P2_0_0, _lh_notSeen_LH_P2_1_0) -> 
//│ 		          (_lh_notSeen_arg1_0 <> _lh_notSeen_LH_P2_1_0)))));;
//│ 		let rec succItem_lh__d1 _lh_succItem_arg1_3 =
//│ 		  (match _lh_succItem_arg1_3 with
//│ 		    | `Bono -> 
//│ 		      (`Edge)
//│ 		    | `Edge -> 
//│ 		      (`Larry)
//│ 		    | `Larry -> 
//│ 		      (`Adam)
//│ 		    | _ -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec succItem_lh__d4 _lh_succItem_arg1_0 =
//│ 		  (match _lh_succItem_arg1_0 with
//│ 		    | `Bono -> 
//│ 		      (`Edge)
//│ 		    | `Edge -> 
//│ 		      (`Larry)
//│ 		    | `Larry -> 
//│ 		      (`Adam)
//│ 		    | _ -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec itemFromTo_lh__d3 _lh_itemFromTo_arg1_0 _lh_itemFromTo_arg2_0 =
//│ 		  (if (_lh_itemFromTo_arg1_0 = _lh_itemFromTo_arg2_0) then
//│ 		    (`LH_C(_lh_itemFromTo_arg1_0, (`LH_N)))
//│ 		  else
//│ 		    (`LH_C(_lh_itemFromTo_arg1_0, ((itemFromTo_lh__d3 (succItem_lh__d4 _lh_itemFromTo_arg1_0)) _lh_itemFromTo_arg2_0))));;
//│ 		let rec succItem_lh__d3 _lh_succItem_arg1_1 =
//│ 		  (match _lh_succItem_arg1_1 with
//│ 		    | `Bono -> 
//│ 		      (`Edge)
//│ 		    | `Edge -> 
//│ 		      (`Larry)
//│ 		    | `Larry -> 
//│ 		      (`Adam)
//│ 		    | _ -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec itemFromTo_lh__d2 _lh_itemFromTo_arg1_1 _lh_itemFromTo_arg2_1 =
//│ 		  (if (_lh_itemFromTo_arg1_1 = _lh_itemFromTo_arg2_1) then
//│ 		    (`LH_C(_lh_itemFromTo_arg1_1, (`LH_N)))
//│ 		  else
//│ 		    (`LH_C(_lh_itemFromTo_arg1_1, ((itemFromTo_lh__d2 (succItem_lh__d3 _lh_itemFromTo_arg1_1)) _lh_itemFromTo_arg2_1))));;
//│ 		let rec opposite_lh__d1 _lh_opposite_arg1_0 =
//│ 		  (match _lh_opposite_arg1_0 with
//│ 		    | `LeftBank -> 
//│ 		      (`RightBank)
//│ 		    | `RightBank -> 
//│ 		      (`LeftBank));;
//│ 		let rec all_lh__d1 _lh_all_arg1_1 _lh_all_arg2_1 =
//│ 		  (match _lh_all_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_all_LH_C_0_1, _lh_all_LH_C_1_1) -> 
//│ 		      (if (_lh_all_arg1_1 _lh_all_LH_C_0_1) then
//│ 		        ((all_lh__d1 _lh_all_arg1_1) _lh_all_LH_C_1_1)
//│ 		      else
//│ 		        false));;
//│ 		let rec notSeen_lh__d1 _lh_notSeen_arg1_1 =
//│ 		  (all_lh__d1 (fun _s_1 -> 
//│ 		    (let rec _lh_matchIdent_2 = _s_1 in
//│ 		      (match _lh_matchIdent_2 with
//│ 		        | `LH_P2(_lh_notSeen_LH_P2_0_1, _lh_notSeen_LH_P2_1_1) -> 
//│ 		          (_lh_notSeen_arg1_1 <> _lh_notSeen_LH_P2_1_1)))));;
//│ 		let rec larryPos_lh__d1 _lh_larryPos_arg1_2 =
//│ 		  (match _lh_larryPos_arg1_2 with
//│ 		    | `State(_lh_larryPos_State_0_2, _lh_larryPos_State_1_2, _lh_larryPos_State_2_2, _lh_larryPos_State_3_2) -> 
//│ 		      _lh_larryPos_State_2_2);;
//│ 		let rec edgePos_lh__d1 _lh_edgePos_arg1_2 =
//│ 		  (match _lh_edgePos_arg1_2 with
//│ 		    | `State(_lh_edgePos_State_0_2, _lh_edgePos_State_1_2, _lh_edgePos_State_2_2, _lh_edgePos_State_3_2) -> 
//│ 		      _lh_edgePos_State_1_2);;
//│ 		let rec adamPos_lh__d1 _lh_adamPos_arg1_2 =
//│ 		  (match _lh_adamPos_arg1_2 with
//│ 		    | `State(_lh_adamPos_State_0_2, _lh_adamPos_State_1_2, _lh_adamPos_State_2_2, _lh_adamPos_State_3_2) -> 
//│ 		      _lh_adamPos_State_3_2);;
//│ 		let rec bonoPos_lh__d1 _lh_bonoPos_arg1_3 =
//│ 		  (match _lh_bonoPos_arg1_3 with
//│ 		    | `State(_lh_bonoPos_State_0_3, _lh_bonoPos_State_1_3, _lh_bonoPos_State_2_3, _lh_bonoPos_State_3_3) -> 
//│ 		      _lh_bonoPos_State_0_3);;
//│ 		let rec position_lh__d1 _lh_position_arg1_2 =
//│ 		  (match _lh_position_arg1_2 with
//│ 		    | `Bono -> 
//│ 		      bonoPos_lh__d1
//│ 		    | `Edge -> 
//│ 		      edgePos_lh__d1
//│ 		    | `Larry -> 
//│ 		      larryPos_lh__d1
//│ 		    | `Adam -> 
//│ 		      adamPos_lh__d1);;
//│ 		let rec succItem_lh__d2 _lh_succItem_arg1_2 =
//│ 		  (match _lh_succItem_arg1_2 with
//│ 		    | `Bono -> 
//│ 		      (`Edge)
//│ 		    | `Edge -> 
//│ 		      (`Larry)
//│ 		    | `Larry -> 
//│ 		      (`Adam)
//│ 		    | _ -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec itemFromTo_lh__d1 _lh_itemFromTo_arg1_2 _lh_itemFromTo_arg2_2 =
//│ 		  (if (_lh_itemFromTo_arg1_2 = _lh_itemFromTo_arg2_2) then
//│ 		    (`LH_C(_lh_itemFromTo_arg1_2, (`LH_N)))
//│ 		  else
//│ 		    (`LH_C(_lh_itemFromTo_arg1_2, ((itemFromTo_lh__d1 (succItem_lh__d2 _lh_itemFromTo_arg1_2)) _lh_itemFromTo_arg2_2))));;
//│ 		let rec adamPos_lh__d3 _lh_adamPos_arg1_0 =
//│ 		  (match _lh_adamPos_arg1_0 with
//│ 		    | `State(_lh_adamPos_State_0_0, _lh_adamPos_State_1_0, _lh_adamPos_State_2_0, _lh_adamPos_State_3_0) -> 
//│ 		      _lh_adamPos_State_3_0);;
//│ 		let rec bonoPos_lh__d3 _lh_bonoPos_arg1_1 =
//│ 		  (match _lh_bonoPos_arg1_1 with
//│ 		    | `State(_lh_bonoPos_State_0_1, _lh_bonoPos_State_1_1, _lh_bonoPos_State_2_1, _lh_bonoPos_State_3_1) -> 
//│ 		      _lh_bonoPos_State_0_1);;
//│ 		let rec larryPos_lh__d3 _lh_larryPos_arg1_0 =
//│ 		  (match _lh_larryPos_arg1_0 with
//│ 		    | `State(_lh_larryPos_State_0_0, _lh_larryPos_State_1_0, _lh_larryPos_State_2_0, _lh_larryPos_State_3_0) -> 
//│ 		      _lh_larryPos_State_2_0);;
//│ 		let rec edgePos_lh__d3 _lh_edgePos_arg1_0 =
//│ 		  (match _lh_edgePos_arg1_0 with
//│ 		    | `State(_lh_edgePos_State_0_0, _lh_edgePos_State_1_0, _lh_edgePos_State_2_0, _lh_edgePos_State_3_0) -> 
//│ 		      _lh_edgePos_State_1_0);;
//│ 		let rec position_lh__d3 _lh_position_arg1_0 =
//│ 		  (match _lh_position_arg1_0 with
//│ 		    | `Bono -> 
//│ 		      bonoPos_lh__d3
//│ 		    | `Edge -> 
//│ 		      edgePos_lh__d3
//│ 		    | `Larry -> 
//│ 		      larryPos_lh__d3
//│ 		    | `Adam -> 
//│ 		      adamPos_lh__d3);;
//│ 		let rec mappend_lh__d4 xs_4 ys_4 =
//│ 		  (match xs_4 with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      (`LH_C(h_6, ((mappend_lh__d4 t_6) ys_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_4);;
//│ 		let rec concat_lh__d1 lss_1 =
//│ 		  (match lss_1 with
//│ 		    | `LH_C(h_1_0, t_1_0) -> 
//│ 		      ((mappend_lh__d4 h_1_0) (concat_lh__d1 t_1_0))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec updateState_lh__d3 _lh_updateState_arg1_0 _lh_updateState_arg2_0 _lh_updateState_arg3_0 =
//│ 		  (match _lh_updateState_arg1_0 with
//│ 		    | `State(_lh_updateState_State_0_0, _lh_updateState_State_1_0, _lh_updateState_State_2_0, _lh_updateState_State_3_0) -> 
//│ 		      (match _lh_updateState_arg2_0 with
//│ 		        | `Bono -> 
//│ 		          (`State(_lh_updateState_arg3_0, _lh_updateState_State_1_0, _lh_updateState_State_2_0, _lh_updateState_State_3_0))
//│ 		        | `Edge -> 
//│ 		          (`State(_lh_updateState_State_0_0, _lh_updateState_arg3_0, _lh_updateState_State_2_0, _lh_updateState_State_3_0))
//│ 		        | `Larry -> 
//│ 		          (`State(_lh_updateState_State_0_0, _lh_updateState_State_1_0, _lh_updateState_arg3_0, _lh_updateState_State_3_0))
//│ 		        | `Adam -> 
//│ 		          (`State(_lh_updateState_State_0_0, _lh_updateState_State_1_0, _lh_updateState_State_2_0, _lh_updateState_arg3_0))));;
//│ 		let rec updateState_lh__d2 _lh_updateState_arg1_1 _lh_updateState_arg2_1 _lh_updateState_arg3_1 =
//│ 		  (match _lh_updateState_arg1_1 with
//│ 		    | `State(_lh_updateState_State_0_1, _lh_updateState_State_1_1, _lh_updateState_State_2_1, _lh_updateState_State_3_1) -> 
//│ 		      (match _lh_updateState_arg2_1 with
//│ 		        | `Bono -> 
//│ 		          (`State(_lh_updateState_arg3_1, _lh_updateState_State_1_1, _lh_updateState_State_2_1, _lh_updateState_State_3_1))
//│ 		        | `Edge -> 
//│ 		          (`State(_lh_updateState_State_0_1, _lh_updateState_arg3_1, _lh_updateState_State_2_1, _lh_updateState_State_3_1))
//│ 		        | `Larry -> 
//│ 		          (`State(_lh_updateState_State_0_1, _lh_updateState_State_1_1, _lh_updateState_arg3_1, _lh_updateState_State_3_1))
//│ 		        | `Adam -> 
//│ 		          (`State(_lh_updateState_State_0_1, _lh_updateState_State_1_1, _lh_updateState_State_2_1, _lh_updateState_arg3_1))));;
//│ 		let rec transfer_lh__d1 _lh_transfer_arg1_0 _lh_transfer_arg2_0 _lh_transfer_arg3_0 _lh_transfer_arg4_0 _lh_transfer_arg5_0 =
//│ 		  (if (_lh_transfer_arg1_0 = _lh_transfer_arg2_0) then
//│ 		    (`LH_C((`LH_C((`LH_P2(_lh_transfer_arg4_0, _lh_transfer_arg2_0)), _lh_transfer_arg5_0)), (`LH_N)))
//│ 		  else
//│ 		    (let rec newHistory_0 = (`LH_C((`LH_P2(_lh_transfer_arg4_0, _lh_transfer_arg2_0)), _lh_transfer_arg5_0)) in
//│ 		      (let rec newLocation_0 = (opposite_lh__d1 _lh_transfer_arg3_0) in
//│ 		        (let rec moveOne_0 = (concat_lh__d2 (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		          (match _lh_listcomp_fun_para_0 with
//│ 		            | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		              (if (((position_lh__d3 _lh_listcomp_fun_ls_h_0) _lh_transfer_arg2_0) = _lh_transfer_arg3_0) then
//│ 		                (let rec newDest_0 = (((updateState_lh__d1 _lh_transfer_arg2_0) _lh_listcomp_fun_ls_h_0) newLocation_0) in
//│ 		                  (if ((notSeen_lh__d2 newDest_0) _lh_transfer_arg5_0) then
//│ 		                    (let rec newTime_0 = (_lh_transfer_arg4_0 + (u2times_lh__d2 _lh_listcomp_fun_ls_h_0)) in
//│ 		                      (`LH_C((((((transfer_lh__d1 _lh_transfer_arg1_0) newDest_0) newLocation_0) newTime_0) newHistory_0), (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))))
//│ 		                  else
//│ 		                    (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		              else
//│ 		                (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))
//│ 		            | `LH_N -> 
//│ 		              (`LH_N))) in
//│ 		          (_lh_listcomp_fun_0 ((itemFromTo_lh__d2 (`Bono)) (`Adam))))) in
//│ 		          (let rec moveTwo_0 = (concat_lh__d1 (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		            (match _lh_listcomp_fun_para_1 with
//│ 		              | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		                  (match _lh_listcomp_fun_para_2 with
//│ 		                    | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		                      (if ((((position_lh__d1 _lh_listcomp_fun_ls_h_1) _lh_transfer_arg2_0) = _lh_transfer_arg3_0) && (((position_lh__d2 _lh_listcomp_fun_ls_h_2) _lh_transfer_arg2_0) = _lh_transfer_arg3_0)) then
//│ 		                        (let rec newDest_1 = (((updateState_lh__d2 (((updateState_lh__d3 _lh_transfer_arg2_0) _lh_listcomp_fun_ls_h_1) newLocation_0)) _lh_listcomp_fun_ls_h_2) newLocation_0) in
//│ 		                          (if ((notSeen_lh__d1 newDest_1) _lh_transfer_arg5_0) then
//│ 		                            (let rec newTime_1 = (_lh_transfer_arg4_0 + (u2times_lh__d1 _lh_listcomp_fun_ls_h_1)) in
//│ 		                              (`LH_C((((((transfer_lh__d1 _lh_transfer_arg1_0) newDest_1) newLocation_0) newTime_1) newHistory_0), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))))
//│ 		                          else
//│ 		                            (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		                      else
//│ 		                        (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))
//│ 		                    | `LH_N -> 
//│ 		                      (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))) in
//│ 		                  (_lh_listcomp_fun_2 ((itemFromTo_lh__d1 (succItem_lh__d1 _lh_listcomp_fun_ls_h_1)) (`Adam))))
//│ 		              | `LH_N -> 
//│ 		                (`LH_N))) in
//│ 		            (_lh_listcomp_fun_1 ((itemFromTo_lh__d3 (`Bono)) (`Larry))))) in
//│ 		            ((mappend_lh__d1 moveOne_0) moveTwo_0))))));;
//│ 		let rec initialState_lh__d1 =
//│ 		  (`State((`LeftBank), (`LeftBank), (`LeftBank), (`LeftBank)));;
//│ 		let rec length_lh__d1 ls_4 =
//│ 		  (match ls_4 with
//│ 		    | `LH_C(h_1_2, t_1_2) -> 
//│ 		      (1 + (length_lh__d1 t_1_2))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec mappend_lh__d2 xs_6 ys_6 =
//│ 		  (match xs_6 with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      (`LH_C(h_8, ((mappend_lh__d2 t_8) ys_6)))
//│ 		    | `LH_N -> 
//│ 		      ys_6);;
//│ 		let rec foldr_lh__d1 f_0 i_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      ((f_0 h_1) (((foldr_lh__d1 f_0) i_0) t_1))
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec mappend_lh__d7 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (`LH_C(h_2, ((mappend_lh__d7 t_2) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec mappend_lh__d8 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C(h_0, ((mappend_lh__d8 t_0) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec writeItem_lh__d1 _lh_writeItem_arg1_0 _lh_writeItem_arg2_0 _lh_writeItem_arg3_0 =
//│ 		  (match _lh_writeItem_arg1_0 with
//│ 		    | `Bono -> 
//│ 		      (match _lh_writeItem_arg2_0 with
//│ 		        | `LeftBank -> 
//│ 		          ((mappend_lh__d8 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('B', (`LH_C('o', (`LH_C('n', (`LH_C('o', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | `RightBank -> 
//│ 		          ((mappend_lh__d8 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C('B', (`LH_C('o', (`LH_C('n', (`LH_C('o', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0))
//│ 		    | `Edge -> 
//│ 		      (match _lh_writeItem_arg2_0 with
//│ 		        | `LeftBank -> 
//│ 		          ((mappend_lh__d8 (`LH_C('T', (`LH_C('h', (`LH_C('e', (`LH_C(' ', (`LH_C('E', (`LH_C('d', (`LH_C('g', (`LH_C('e', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | `RightBank -> 
//│ 		          ((mappend_lh__d8 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C('T', (`LH_C('h', (`LH_C('e', (`LH_C(' ', (`LH_C('E', (`LH_C('d', (`LH_C('g', (`LH_C('e', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0))
//│ 		    | `Larry -> 
//│ 		      (match _lh_writeItem_arg2_0 with
//│ 		        | `LeftBank -> 
//│ 		          ((mappend_lh__d8 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('L', (`LH_C('a', (`LH_C('r', (`LH_C('r', (`LH_C('y', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | `RightBank -> 
//│ 		          ((mappend_lh__d8 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C('L', (`LH_C('a', (`LH_C('r', (`LH_C('r', (`LH_C('y', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0))
//│ 		    | `Adam -> 
//│ 		      (match _lh_writeItem_arg2_0 with
//│ 		        | `LeftBank -> 
//│ 		          ((mappend_lh__d8 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('A', (`LH_C('d', (`LH_C('a', (`LH_C('m', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)
//│ 		        | `RightBank -> 
//│ 		          ((mappend_lh__d8 (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_C('|', (`LH_C(' ', (`LH_C('A', (`LH_C('d', (`LH_C('a', (`LH_C('m', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) _lh_writeItem_arg3_0)));;
//│ 		let rec bonoPos_lh__d4 _lh_bonoPos_arg1_0 =
//│ 		  (match _lh_bonoPos_arg1_0 with
//│ 		    | `State(_lh_bonoPos_State_0_0, _lh_bonoPos_State_1_0, _lh_bonoPos_State_2_0, _lh_bonoPos_State_3_0) -> 
//│ 		      _lh_bonoPos_State_0_0);;
//│ 		let rec writeState_lh__d1 _lh_writeState_arg1_0 _lh_funcomp_x_0 =
//│ 		  ((fun _lh_funcomp_x_1 -> 
//│ 		    ((fun _lh_funcomp_x_2 -> 
//│ 		      ((fun _lh_funcomp_x_3 -> 
//│ 		        ((fun _lh_funcomp_x_4 -> 
//│ 		          ((fun s_0 -> 
//│ 		            ((mappend_lh__d8 (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) s_0)) (((writeItem_lh__d1 (`Bono)) (bonoPos_lh__d4 _lh_writeState_arg1_0)) _lh_funcomp_x_4))) (((writeItem_lh__d1 (`Edge)) (edgePos_lh__d3 _lh_writeState_arg1_0)) _lh_funcomp_x_3))) (((writeItem_lh__d1 (`Larry)) (larryPos_lh__d3 _lh_writeState_arg1_0)) _lh_funcomp_x_2))) (((writeItem_lh__d1 (`Adam)) (adamPos_lh__d3 _lh_writeState_arg1_0)) _lh_funcomp_x_1))) ((fun s_1 -> 
//│ 		    ((mappend_lh__d8 (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('-', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) s_1)) _lh_funcomp_x_0));;
//│ 		let rec mappend_lh__d6 xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      (`LH_C(h_3, ((mappend_lh__d6 t_3) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec totalTime_lh__d3 _lh_totalTime_arg1_0 =
//│ 		  (match _lh_totalTime_arg1_0 with
//│ 		    | `LH_C(_lh_totalTime_LH_C_0_0, _lh_totalTime_LH_C_1_0) -> 
//│ 		      (match _lh_totalTime_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_totalTime_LH_P2_0_0, _lh_totalTime_LH_P2_1_0) -> 
//│ 		          _lh_totalTime_LH_P2_0_0
//│ 		        | _ -> 
//│ 		          (failwith "lh_default_error"))
//│ 		    | _ -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec writeHistory_lh__d1 _lh_writeHistory_arg1_0 =
//│ 		  (match _lh_writeHistory_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (fun x_0 -> 
//│ 		        x_0)
//│ 		    | _ -> 
//│ 		      (((foldr_lh__d1 (fun timestate_0 acc_0 -> 
//│ 		        (let rec _lh_matchIdent_0 = timestate_0 in
//│ 		          (match _lh_matchIdent_0 with
//│ 		            | `LH_P2(_lh_writeHistory_LH_P2_0_0, _lh_writeHistory_LH_P2_1_0) -> 
//│ 		              (fun _lh_funcomp_x_5 -> 
//│ 		                ((fun _lh_funcomp_x_6 -> 
//│ 		                  ((fun _lh_funcomp_x_7 -> 
//│ 		                    ((fun _lh_funcomp_x_8 -> 
//│ 		                      ((fun x_1 -> 
//│ 		                        ((mappend_lh__d6 (`LH_C('T', (`LH_C('i', (`LH_C('m', (`LH_C('e', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))) x_1)) ((fun x_2 -> 
//│ 		                        ((mappend_lh__d7 (string_of_int ((totalTime_lh__d3 _lh_writeHistory_arg1_0) - _lh_writeHistory_LH_P2_0_0))) x_2)) _lh_funcomp_x_8))) ((fun x_3 -> 
//│ 		                      (`LH_C('|', x_3))) _lh_funcomp_x_7))) ((writeState_lh__d1 _lh_writeHistory_LH_P2_1_0) _lh_funcomp_x_6))) (acc_0 _lh_funcomp_x_5))))))) (fun x_4 -> 
//│ 		        x_4)) _lh_writeHistory_arg1_0));;
//│ 		let rec mappend_lh__d3 xs_5 ys_5 =
//│ 		  (match xs_5 with
//│ 		    | `LH_C(h_7, t_7) -> 
//│ 		      (`LH_C(h_7, ((mappend_lh__d3 t_7) ys_5)))
//│ 		    | `LH_N -> 
//│ 		      ys_5);;
//│ 		let rec writeSolutions_lh__d1 _lh_writeSolutions_arg1_0 _lh_writeSolutions_arg2_0 =
//│ 		  (match _lh_writeSolutions_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (fun x_5 -> 
//│ 		        x_5)
//│ 		    | `LH_C(_lh_writeSolutions_LH_C_0_0, _lh_writeSolutions_LH_C_1_0) -> 
//│ 		      (fun _lh_funcomp_x_9 -> 
//│ 		        ((fun _lh_funcomp_x_1_0 -> 
//│ 		          ((fun _lh_funcomp_x_1_1 -> 
//│ 		            ((fun _lh_funcomp_x_1_2 -> 
//│ 		              ((fun x_6 -> 
//│ 		                ((mappend_lh__d2 (`LH_C('S', (`LH_C('o', (`LH_C('l', (`LH_C('u', (`LH_C('t', (`LH_C('i', (`LH_C('o', (`LH_C('n', (`LH_C(' ', (`LH_N)))))))))))))))))))) x_6)) ((fun x_7 -> 
//│ 		                ((mappend_lh__d3 (string_of_int _lh_writeSolutions_arg2_0)) x_7)) _lh_funcomp_x_1_2))) ((fun x_8 -> 
//│ 		              (`LH_C('|', x_8))) _lh_funcomp_x_1_1))) ((writeHistory_lh__d1 _lh_writeSolutions_LH_C_0_0) _lh_funcomp_x_1_0))) (((writeSolutions_lh__d1 _lh_writeSolutions_LH_C_1_0) (_lh_writeSolutions_arg2_0 + 1)) _lh_funcomp_x_9))));;
//│ 		let rec reverse_helper_lh__d1 ls_1 a_0 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      ((reverse_helper_lh__d1 t_4) (`LH_C(h_4, a_0)))
//│ 		    | `LH_N -> 
//│ 		      a_0);;
//│ 		let rec reverse_lh__d1 ls_2 =
//│ 		  ((reverse_helper_lh__d1 ls_2) (`LH_N));;
//│ 		let rec totalTime_lh__d2 _lh_totalTime_arg1_1 =
//│ 		  (match _lh_totalTime_arg1_1 with
//│ 		    | `LH_C(_lh_totalTime_LH_C_0_1, _lh_totalTime_LH_C_1_1) -> 
//│ 		      (match _lh_totalTime_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_totalTime_LH_P2_0_1, _lh_totalTime_LH_P2_1_1) -> 
//│ 		          _lh_totalTime_LH_P2_0_1
//│ 		        | _ -> 
//│ 		          (failwith "lh_default_error"))
//│ 		    | _ -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec totalTime_lh__d1 _lh_totalTime_arg1_2 =
//│ 		  (match _lh_totalTime_arg1_2 with
//│ 		    | `LH_C(_lh_totalTime_LH_C_0_2, _lh_totalTime_LH_C_1_2) -> 
//│ 		      (match _lh_totalTime_LH_C_0_2 with
//│ 		        | `LH_P2(_lh_totalTime_LH_P2_0_2, _lh_totalTime_LH_P2_1_2) -> 
//│ 		          _lh_totalTime_LH_P2_0_2
//│ 		        | _ -> 
//│ 		          (failwith "lh_default_error"))
//│ 		    | _ -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec minSolutions_lh__d1 _lh_minSolutions_arg1_0 =
//│ 		  (match _lh_minSolutions_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_minSolutions_LH_C_0_0, _lh_minSolutions_LH_C_1_0) -> 
//│ 		      (let rec minAcc_0 = (fun minSoFar_0 mins_0 ls_3 -> 
//│ 		        (let rec _lh_matchIdent_3 = ls_3 in
//│ 		          (match _lh_matchIdent_3 with
//│ 		            | `LH_N -> 
//│ 		              mins_0
//│ 		            | `LH_C(_lh_minSolutions_LH_C_0_1, _lh_minSolutions_LH_C_1_1) -> 
//│ 		              (let rec total_0 = (totalTime_lh__d2 _lh_minSolutions_LH_C_0_1) in
//│ 		                (if (minSoFar_0 < total_0) then
//│ 		                  (((minAcc_0 minSoFar_0) mins_0) _lh_minSolutions_LH_C_1_1)
//│ 		                else
//│ 		                  (if (minSoFar_0 = total_0) then
//│ 		                    (((minAcc_0 minSoFar_0) (`LH_C(_lh_minSolutions_LH_C_0_1, mins_0))) _lh_minSolutions_LH_C_1_1)
//│ 		                  else
//│ 		                    (((minAcc_0 total_0) (`LH_C(_lh_minSolutions_LH_C_0_1, (`LH_N)))) _lh_minSolutions_LH_C_1_1))))))) in
//│ 		        (reverse_lh__d1 (((minAcc_0 (totalTime_lh__d1 _lh_minSolutions_LH_C_0_0)) (`LH_C(_lh_minSolutions_LH_C_0_0, (`LH_N)))) _lh_minSolutions_LH_C_1_0))));;
//│ 		let rec testPuzzle_nofib_lh__d1 _lh_testPuzzle_nofib_arg1_0 =
//│ 		  (let rec time_0 = (if ((length_lh__d1 _lh_testPuzzle_nofib_arg1_0) = 1) then
//│ 		    0
//│ 		  else
//│ 		    (failwith "msg"(`LH_C('p', (`LH_C('u', (`LH_C('z', (`LH_C('z', (`LH_C('l', (`LH_C('e', (`LH_C(' ', (`LH_C('e', (`LH_C('x', (`LH_C('p', (`LH_C('e', (`LH_C('c', (`LH_C('t', (`LH_C('s', (`LH_C(' ', (`LH_C('e', (`LH_C('x', (`LH_C('a', (`LH_C('c', (`LH_C('t', (`LH_C('l', (`LH_C('y', (`LH_C(' ', (`LH_C('o', (`LH_C('n', (`LH_C('e', (`LH_C(' ', (`LH_C('a', (`LH_C('r', (`LH_C('g', (`LH_C('u', (`LH_C('m', (`LH_C('e', (`LH_C('n', (`LH_C('t', (`LH_N))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in
//│ 		    (let rec solutions_0 = (((((transfer_lh__d1 initialState_lh__d1) finalState_lh__d1) (`RightBank)) time_0) (`LH_N)) in
//│ 		      (let rec mins_1 = (minSolutions_lh__d1 solutions_0) in
//│ 		        (((writeSolutions_lh__d1 mins_1) 1) (`LH_N)))));;
//│ 		(testPuzzle_nofib_lh__d1 (`LH_C(2, (`LH_N))))
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< after expansion <<<<<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPuzzle_nofib_lh_₁(primId⁰([LH_C 2 [LH_N]]))
//│ def adamPos_lh_₁(_lh_adamPos_arg1²) = case _lh_adamPos_arg1² of {
//│ 	State _lh_adamPos_State_0² _lh_adamPos_State_1² _lh_adamPos_State_2² _lh_adamPos_State_3² => _lh_adamPos_State_3²}
//│ def adamPos_lh_₂(_lh_adamPos_arg1⁰) = case _lh_adamPos_arg1⁰ of {
//│ 	State _lh_adamPos_State_0⁰ _lh_adamPos_State_1⁰ _lh_adamPos_State_2⁰ _lh_adamPos_State_3⁰ => _lh_adamPos_State_3⁰}
//│ def adamPos_lh_₃(_lh_adamPos_arg1¹) = case _lh_adamPos_arg1¹ of {
//│ 	State _lh_adamPos_State_0¹ _lh_adamPos_State_1¹ _lh_adamPos_State_2¹ _lh_adamPos_State_3¹ => _lh_adamPos_State_3¹}
//│ def all_lh_₁(_lh_all_arg1⁰, _lh_all_arg2⁰) = case _lh_all_arg2⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False]}
//│ def all_lh_₂(_lh_all_arg1¹, _lh_all_arg2¹) = case _lh_all_arg2¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0¹ _lh_all_LH_C_1¹ => if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₂(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False]}
//│ def bonoPos_lh_₁(_lh_bonoPos_arg1⁰) = case _lh_bonoPos_arg1⁰ of {
//│ 	State _lh_bonoPos_State_0⁰ _lh_bonoPos_State_1⁰ _lh_bonoPos_State_2⁰ _lh_bonoPos_State_3⁰ => _lh_bonoPos_State_0⁰}
//│ def bonoPos_lh_₂(_lh_bonoPos_arg1¹) = case _lh_bonoPos_arg1¹ of {
//│ 	State _lh_bonoPos_State_0¹ _lh_bonoPos_State_1¹ _lh_bonoPos_State_2¹ _lh_bonoPos_State_3¹ => _lh_bonoPos_State_0¹}
//│ def bonoPos_lh_₃(_lh_bonoPos_arg1²) = case _lh_bonoPos_arg1² of {
//│ 	State _lh_bonoPos_State_0² _lh_bonoPos_State_1² _lh_bonoPos_State_2² _lh_bonoPos_State_3² => _lh_bonoPos_State_0²}
//│ def bonoPos_lh_₄(_lh_bonoPos_arg1³) = case _lh_bonoPos_arg1³ of {
//│ 	State _lh_bonoPos_State_0³ _lh_bonoPos_State_1³ _lh_bonoPos_State_2³ _lh_bonoPos_State_3³ => _lh_bonoPos_State_0³}
//│ def concat_lh_₁(lss¹) = lss¹([lh_Unit])
//│ def concat_lh_₂(lss⁰) = lss⁰([lh_Unit])
//│ def edgePos_lh_₁(_lh_edgePos_arg1⁰) = case _lh_edgePos_arg1⁰ of {
//│ 	State _lh_edgePos_State_0⁰ _lh_edgePos_State_1⁰ _lh_edgePos_State_2⁰ _lh_edgePos_State_3⁰ => _lh_edgePos_State_1⁰}
//│ def edgePos_lh_₂(_lh_edgePos_arg1²) = case _lh_edgePos_arg1² of {
//│ 	State _lh_edgePos_State_0² _lh_edgePos_State_1² _lh_edgePos_State_2² _lh_edgePos_State_3² => _lh_edgePos_State_1²}
//│ def edgePos_lh_₃(_lh_edgePos_arg1¹) = case _lh_edgePos_arg1¹ of {
//│ 	State _lh_edgePos_State_0¹ _lh_edgePos_State_1¹ _lh_edgePos_State_2¹ _lh_edgePos_State_3¹ => _lh_edgePos_State_1¹}
//│ def finalState_lh_₁ = [State [RightBank] [RightBank] [RightBank] [RightBank]]
//│ def foldr_lh_₁(f⁰, i⁰, ls¹) = case ls¹ of {
//│ 	LH_C h¹ t¹ => f⁰(h¹, foldr_lh_₁(f⁰, i⁰, t¹))
//│ 	| LH_N  => i⁰}
//│ def initialState_lh_₁ = [State [LeftBank] [LeftBank] [LeftBank] [LeftBank]]
//│ def itemFromTo_lh_₁(_lh_itemFromTo_arg1¹, _lh_itemFromTo_arg2¹, _lh_floatOutId_0¹, _lh_floatOutId_1¹, _lh_floatOutId_2¹, _lh_floatOutId_3¹, _lh_floatOutId_4¹, _lh_floatOutId_5¹, _lh_floatOutId_6¹, _lh_floatOutId_7¹, _lh_floatOutId_8⁰, _lh_floatOutId_9⁰, _lh_floatOutId_10⁰) = if polyEq⁰(_lh_itemFromTo_arg1¹, _lh_itemFromTo_arg2¹) then 
//│ 	let _lh_listcomp_fun_ls_t² = (fun _lh_listcomp_fun_ls_h² -> (fun _lh_listcomp_fun⁷ -> (fun _lh_transfer_arg1⁴ -> (fun _lh_transfer_arg2⁴ -> (fun _lh_transfer_arg3⁴ -> (fun _lh_transfer_arg4⁴ -> (fun _lh_transfer_arg5⁴ -> (fun newHistory⁴ -> (fun newLocation⁴ -> (fun _lh_listcomp_fun_ls_t³ -> (fun _lh_listcomp_fun⁸ -> _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t³))))))))))))
//│ 	in let _lh_listcomp_fun_ls_h³ = _lh_itemFromTo_arg1¹
//│ 	in if (polyEq⁰(position_lh_₁(_lh_floatOutId_0¹, _lh_floatOutId_3¹), _lh_floatOutId_4¹) && polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h³, _lh_floatOutId_3¹), _lh_floatOutId_4¹)) then 
//│ 		let newDest⁰ = updateState_lh_₂(updateState_lh_₃(_lh_floatOutId_3¹, _lh_floatOutId_0¹, _lh_floatOutId_8⁰), _lh_listcomp_fun_ls_h³, _lh_floatOutId_8⁰)
//│ 		in if notSeen_lh_₁(newDest⁰, _lh_floatOutId_6¹) then 
//│ 			let newTime⁰ = (_lh_floatOutId_5¹ + u2times_lh_₁(_lh_floatOutId_0¹))
//│ 			in let t⁴⁰⁶ = _lh_floatOutId_1¹(_lh_listcomp_fun_ls_t²)
//│ 			in let h⁴⁰⁶ = transfer_lh_₁(_lh_floatOutId_2¹, newDest⁰, _lh_floatOutId_8⁰, newTime⁰, _lh_floatOutId_7¹)
//│ 			in (fun _lh_dummy¹ -> mappend_lh_₄(h⁴⁰⁶, concat_lh_₁(t⁴⁰⁶))) else _lh_floatOutId_1¹(_lh_listcomp_fun_ls_t²) else _lh_floatOutId_1¹(_lh_listcomp_fun_ls_t²) else 
//│ 	let _lh_listcomp_fun_ls_t⁵ = itemFromTo_lh_₁(succItem_lh_₂(_lh_itemFromTo_arg1¹), _lh_itemFromTo_arg2¹)
//│ 	in let _lh_listcomp_fun_ls_h⁵ = _lh_itemFromTo_arg1¹
//│ 	in if (polyEq⁰(position_lh_₁(_lh_floatOutId_0¹, _lh_floatOutId_3¹), _lh_floatOutId_4¹) && polyEq⁰(position_lh_₂(_lh_listcomp_fun_ls_h⁵, _lh_floatOutId_3¹), _lh_floatOutId_4¹)) then 
//│ 		let newDest¹ = updateState_lh_₂(updateState_lh_₃(_lh_floatOutId_3¹, _lh_floatOutId_0¹, _lh_floatOutId_8⁰), _lh_listcomp_fun_ls_h⁵, _lh_floatOutId_8⁰)
//│ 		in if notSeen_lh_₁(newDest¹, _lh_floatOutId_6¹) then 
//│ 			let newTime¹ = (_lh_floatOutId_5¹ + u2times_lh_₁(_lh_floatOutId_0¹))
//│ 			in let t⁴⁰⁷ = _lh_floatOutId_1¹(_lh_listcomp_fun_ls_t⁵)
//│ 			in let h⁴⁰⁷ = transfer_lh_₁(_lh_floatOutId_2¹, newDest¹, _lh_floatOutId_8⁰, newTime¹, _lh_floatOutId_7¹)
//│ 			in (fun _lh_dummy² -> mappend_lh_₄(h⁴⁰⁷, concat_lh_₁(t⁴⁰⁷))) else _lh_floatOutId_1¹(_lh_listcomp_fun_ls_t⁵) else _lh_floatOutId_1¹(_lh_listcomp_fun_ls_t⁵)
//│ def itemFromTo_lh_₂(_lh_itemFromTo_arg1², _lh_itemFromTo_arg2², _lh_floatOutId_0⁴, _lh_floatOutId_1⁴, _lh_floatOutId_2², _lh_floatOutId_3², _lh_floatOutId_4², _lh_floatOutId_5², _lh_floatOutId_6², _lh_floatOutId_7²) = if polyEq⁰(_lh_itemFromTo_arg1², _lh_itemFromTo_arg2²) then 
//│ 	let _lh_listcomp_fun_ls_t⁷ = (fun _lh_listcomp_fun¹³ -> (fun _lh_transfer_arg1⁷ -> (fun _lh_transfer_arg2⁷ -> (fun _lh_transfer_arg3⁷ -> (fun _lh_transfer_arg4⁷ -> (fun _lh_transfer_arg5⁷ -> (fun newHistory⁷ -> (fun newLocation⁷ -> (fun _lh_dummy³ -> (fun ys⁴¹⁹ -> ys⁴¹⁹))))))))))
//│ 	in let _lh_listcomp_fun_ls_h⁷ = _lh_itemFromTo_arg1²
//│ 	in if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h⁷, _lh_floatOutId_2²), _lh_floatOutId_3²) then 
//│ 		let newDest² = updateState_lh_₁(_lh_floatOutId_2², _lh_listcomp_fun_ls_h⁷, _lh_floatOutId_7²)
//│ 		in if notSeen_lh_₂(newDest², _lh_floatOutId_5²) then 
//│ 			let newTime² = (_lh_floatOutId_4² + u2times_lh_₂(_lh_listcomp_fun_ls_h⁷))
//│ 			in let t⁴⁰⁸ = _lh_floatOutId_0⁴(_lh_listcomp_fun_ls_t⁷)
//│ 			in let h⁴⁰⁸ = transfer_lh_₁(_lh_floatOutId_1⁴, newDest², _lh_floatOutId_7², newTime², _lh_floatOutId_6²)
//│ 			in (fun _lh_dummy⁴ -> mappend_lh_₅(h⁴⁰⁸, concat_lh_₂(t⁴⁰⁸))) else _lh_floatOutId_0⁴(_lh_listcomp_fun_ls_t⁷) else _lh_floatOutId_0⁴(_lh_listcomp_fun_ls_t⁷) else 
//│ 	let _lh_listcomp_fun_ls_t⁸ = itemFromTo_lh_₂(succItem_lh_₃(_lh_itemFromTo_arg1²), _lh_itemFromTo_arg2²)
//│ 	in let _lh_listcomp_fun_ls_h⁸ = _lh_itemFromTo_arg1²
//│ 	in if polyEq⁰(position_lh_₃(_lh_listcomp_fun_ls_h⁸, _lh_floatOutId_2²), _lh_floatOutId_3²) then 
//│ 		let newDest³ = updateState_lh_₁(_lh_floatOutId_2², _lh_listcomp_fun_ls_h⁸, _lh_floatOutId_7²)
//│ 		in if notSeen_lh_₂(newDest³, _lh_floatOutId_5²) then 
//│ 			let newTime³ = (_lh_floatOutId_4² + u2times_lh_₂(_lh_listcomp_fun_ls_h⁸))
//│ 			in let t⁴⁰⁹ = _lh_floatOutId_0⁴(_lh_listcomp_fun_ls_t⁸)
//│ 			in let h⁴⁰⁹ = transfer_lh_₁(_lh_floatOutId_1⁴, newDest³, _lh_floatOutId_7², newTime³, _lh_floatOutId_6²)
//│ 			in (fun _lh_dummy⁵ -> mappend_lh_₅(h⁴⁰⁹, concat_lh_₂(t⁴⁰⁹))) else _lh_floatOutId_0⁴(_lh_listcomp_fun_ls_t⁸) else _lh_floatOutId_0⁴(_lh_listcomp_fun_ls_t⁸)
//│ def itemFromTo_lh_₃(_lh_itemFromTo_arg1⁰, _lh_itemFromTo_arg2⁰, _lh_floatOutId_0⁰, _lh_floatOutId_1⁰, _lh_floatOutId_2⁰, _lh_floatOutId_3⁰, _lh_floatOutId_4⁰, _lh_floatOutId_5⁰, _lh_floatOutId_6⁰, _lh_floatOutId_7⁰) = if polyEq⁰(_lh_itemFromTo_arg1⁰, _lh_itemFromTo_arg2⁰) then 
//│ 	let _lh_listcomp_fun_ls_t⁰ = (fun _lh_listcomp_fun² -> (fun _lh_transfer_arg1¹ -> (fun _lh_transfer_arg2¹ -> (fun _lh_transfer_arg3¹ -> (fun _lh_transfer_arg4¹ -> (fun _lh_transfer_arg5¹ -> (fun newHistory¹ -> (fun newLocation¹ -> (fun _lh_dummy⁰ -> [LH_N])))))))))
//│ 	in let _lh_listcomp_fun_ls_h⁰ = _lh_itemFromTo_arg1⁰
//│ 	in let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para² -> _lh_listcomp_fun_para²(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun⁴, _lh_floatOutId_1⁰, _lh_floatOutId_2⁰, _lh_floatOutId_3⁰, _lh_floatOutId_4⁰, _lh_floatOutId_5⁰, _lh_floatOutId_6⁰, _lh_floatOutId_7⁰, _lh_listcomp_fun_ls_t⁰, _lh_floatOutId_0⁰))
//│ 	in _lh_listcomp_fun⁴(itemFromTo_lh_₁(succItem_lh_₁(_lh_listcomp_fun_ls_h⁰), [Adam])) else 
//│ 	let _lh_listcomp_fun_ls_t¹ = itemFromTo_lh_₃(succItem_lh_₄(_lh_itemFromTo_arg1⁰), _lh_itemFromTo_arg2⁰)
//│ 	in let _lh_listcomp_fun_ls_h¹ = _lh_itemFromTo_arg1⁰
//│ 	in let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para³ -> _lh_listcomp_fun_para³(_lh_listcomp_fun_ls_h¹, _lh_listcomp_fun⁶, _lh_floatOutId_1⁰, _lh_floatOutId_2⁰, _lh_floatOutId_3⁰, _lh_floatOutId_4⁰, _lh_floatOutId_5⁰, _lh_floatOutId_6⁰, _lh_floatOutId_7⁰, _lh_listcomp_fun_ls_t¹, _lh_floatOutId_0⁰))
//│ 	in _lh_listcomp_fun⁶(itemFromTo_lh_₁(succItem_lh_₁(_lh_listcomp_fun_ls_h¹), [Adam]))
//│ def larryPos_lh_₁(_lh_larryPos_arg1¹) = case _lh_larryPos_arg1¹ of {
//│ 	State _lh_larryPos_State_0¹ _lh_larryPos_State_1¹ _lh_larryPos_State_2¹ _lh_larryPos_State_3¹ => _lh_larryPos_State_2¹}
//│ def larryPos_lh_₂(_lh_larryPos_arg1⁰) = case _lh_larryPos_arg1⁰ of {
//│ 	State _lh_larryPos_State_0⁰ _lh_larryPos_State_1⁰ _lh_larryPos_State_2⁰ _lh_larryPos_State_3⁰ => _lh_larryPos_State_2⁰}
//│ def larryPos_lh_₃(_lh_larryPos_arg1²) = case _lh_larryPos_arg1² of {
//│ 	State _lh_larryPos_State_0² _lh_larryPos_State_1² _lh_larryPos_State_2² _lh_larryPos_State_3² => _lh_larryPos_State_2²}
//│ def length_lh_₁(ls²) = case ls² of {
//│ 	LH_C h³⁷⁵ t³⁷⁵ => (1 + length_lh_₁(t³⁷⁵))
//│ 	| LH_N  => 0}
//│ def mappend_lh_₁(xs¹, ys¹) = xs¹(ys¹)
//│ def mappend_lh_₂(xs⁴, ys⁴) = xs⁴(ys⁴)
//│ def mappend_lh_₃(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₃(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def mappend_lh_₄(xs⁷, ys³⁸¹) = case xs⁷ of {
//│ 	LH_C h³⁶⁸ t³⁶⁸ => [LH_C h³⁶⁸ mappend_lh_₄(t³⁶⁸, ys³⁸¹)]
//│ 	| LH_N  => ys³⁸¹}
//│ def mappend_lh_₅(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h³ t³ => 
//│ 		let t⁴ = mappend_lh_₅(t³, ys⁵)
//│ 		in let h⁴ = h³
//│ 		in (fun ys⁶ -> [LH_C h⁴ mappend_lh_₁(t⁴, ys⁶)])
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₆(xs⁶, ys³⁸⁰) = xs⁶(ys³⁸⁰)
//│ def mappend_lh_₇(xs³, ys³) = case xs³ of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₇(t², ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₈(xs², ys²) = xs²(ys²)
//│ def minSolutions_lh_₁(_lh_minSolutions_arg1⁰) = case _lh_minSolutions_arg1⁰ of {
//│ 	LH_N  => (fun _lh_writeSolutions_arg2¹ -> (fun x⁵ -> x⁵))
//│ 	| LH_C _lh_minSolutions_LH_C_0⁰ _lh_minSolutions_LH_C_1⁰ => 
//│ 		let minAcc⁰ = (fun minSoFar⁰ -> (fun mins⁰ -> (fun ls³ -> 
//│ 			let _lh_matchIdent³ = ls³
//│ 			in case _lh_matchIdent³ of {
//│ 				LH_N  => mins⁰
//│ 				| LH_C _lh_minSolutions_LH_C_0¹ _lh_minSolutions_LH_C_1¹ => 
//│ 					let total⁰ = totalTime_lh_₂(_lh_minSolutions_LH_C_0¹)
//│ 					in if (minSoFar⁰ < total⁰) then minAcc⁰(minSoFar⁰, mins⁰, _lh_minSolutions_LH_C_1¹) else if (minSoFar⁰ == total⁰) then minAcc⁰(minSoFar⁰, 
//│ 						let t³⁷⁶ = mins⁰
//│ 						in let h³⁷⁶ = _lh_minSolutions_LH_C_0¹
//│ 						in (fun a¹ -> reverse_helper_lh_₁(t³⁷⁶, 
//│ 							let _lh_writeSolutions_LH_C_1⁰ = a¹
//│ 							in let _lh_writeSolutions_LH_C_0⁰ = h³⁷⁶
//│ 							in (fun _lh_writeSolutions_arg2² -> (fun _lh_funcomp_x⁹ -> (fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> (fun _lh_funcomp_x¹² -> (fun x⁶ -> mappend_lh_₂(
//│ 								let t³⁷⁷ = 	
//│ 									let t³⁷⁸ = 	
//│ 										let t³⁷⁹ = 	
//│ 											let t³⁸⁰ = 	
//│ 												let t³⁸¹ = 	
//│ 													let t³⁸² = 	
//│ 														let t³⁸³ = 	
//│ 															let t³⁸⁴ = 	
//│ 																let t³⁸⁵ = (fun ys³⁸⁹ -> ys³⁸⁹)
//│ 																in let h³⁷⁷ = ' '
//│ 																in (fun ys³⁹⁰ -> [LH_C h³⁷⁷ mappend_lh_₂(t³⁸⁵, ys³⁹⁰)])
//│ 															in let h³⁷⁸ = 'n'
//│ 															in (fun ys³⁹¹ -> [LH_C h³⁷⁸ mappend_lh_₂(t³⁸⁴, ys³⁹¹)])
//│ 														in let h³⁷⁹ = 'o'
//│ 														in (fun ys³⁹² -> [LH_C h³⁷⁹ mappend_lh_₂(t³⁸³, ys³⁹²)])
//│ 													in let h³⁸⁰ = 'i'
//│ 													in (fun ys³⁹³ -> [LH_C h³⁸⁰ mappend_lh_₂(t³⁸², ys³⁹³)])
//│ 												in let h³⁸¹ = 't'
//│ 												in (fun ys³⁹⁴ -> [LH_C h³⁸¹ mappend_lh_₂(t³⁸¹, ys³⁹⁴)])
//│ 											in let h³⁸² = 'u'
//│ 											in (fun ys³⁹⁵ -> [LH_C h³⁸² mappend_lh_₂(t³⁸⁰, ys³⁹⁵)])
//│ 										in let h³⁸³ = 'l'
//│ 										in (fun ys³⁹⁶ -> [LH_C h³⁸³ mappend_lh_₂(t³⁷⁹, ys³⁹⁶)])
//│ 									in let h³⁸⁴ = 'o'
//│ 									in (fun ys³⁹⁷ -> [LH_C h³⁸⁴ mappend_lh_₂(t³⁷⁸, ys³⁹⁷)])
//│ 								in let h³⁸⁵ = 'S'
//│ 								in (fun ys³⁹⁸ -> [LH_C h³⁸⁵ mappend_lh_₂(t³⁷⁷, ys³⁹⁸)]), x⁶))((fun x⁷ -> mappend_lh_₃(string_of_int⁰(_lh_writeSolutions_arg2²), x⁷))(_lh_funcomp_x¹²)))((fun x⁸ -> [LH_C '|' x⁸])(_lh_funcomp_x¹¹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0⁰, _lh_funcomp_x¹⁰)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1⁰, (_lh_writeSolutions_arg2² + 1), _lh_funcomp_x⁹)))))), _lh_minSolutions_LH_C_1¹) else minAcc⁰(total⁰, 
//│ 						let t³⁸⁶ = (fun a² -> a²)
//│ 						in let h³⁸⁶ = _lh_minSolutions_LH_C_0¹
//│ 						in (fun a³ -> reverse_helper_lh_₁(t³⁸⁶, 
//│ 							let _lh_writeSolutions_LH_C_1¹ = a³
//│ 							in let _lh_writeSolutions_LH_C_0¹ = h³⁸⁶
//│ 							in (fun _lh_writeSolutions_arg2³ -> (fun _lh_funcomp_x¹³ -> (fun _lh_funcomp_x¹⁴ -> (fun _lh_funcomp_x¹⁵ -> (fun _lh_funcomp_x¹⁶ -> (fun x⁹ -> mappend_lh_₂(
//│ 								let t³⁸⁷ = 	
//│ 									let t³⁸⁸ = 	
//│ 										let t³⁸⁹ = 	
//│ 											let t³⁹⁰ = 	
//│ 												let t³⁹¹ = 	
//│ 													let t³⁹² = 	
//│ 														let t³⁹³ = 	
//│ 															let t³⁹⁴ = 	
//│ 																let t³⁹⁵ = (fun ys³⁹⁹ -> ys³⁹⁹)
//│ 																in let h³⁸⁷ = ' '
//│ 																in (fun ys⁴⁰⁰ -> [LH_C h³⁸⁷ mappend_lh_₂(t³⁹⁵, ys⁴⁰⁰)])
//│ 															in let h³⁸⁸ = 'n'
//│ 															in (fun ys⁴⁰¹ -> [LH_C h³⁸⁸ mappend_lh_₂(t³⁹⁴, ys⁴⁰¹)])
//│ 														in let h³⁸⁹ = 'o'
//│ 														in (fun ys⁴⁰² -> [LH_C h³⁸⁹ mappend_lh_₂(t³⁹³, ys⁴⁰²)])
//│ 													in let h³⁹⁰ = 'i'
//│ 													in (fun ys⁴⁰³ -> [LH_C h³⁹⁰ mappend_lh_₂(t³⁹², ys⁴⁰³)])
//│ 												in let h³⁹¹ = 't'
//│ 												in (fun ys⁴⁰⁴ -> [LH_C h³⁹¹ mappend_lh_₂(t³⁹¹, ys⁴⁰⁴)])
//│ 											in let h³⁹² = 'u'
//│ 											in (fun ys⁴⁰⁵ -> [LH_C h³⁹² mappend_lh_₂(t³⁹⁰, ys⁴⁰⁵)])
//│ 										in let h³⁹³ = 'l'
//│ 										in (fun ys⁴⁰⁶ -> [LH_C h³⁹³ mappend_lh_₂(t³⁸⁹, ys⁴⁰⁶)])
//│ 									in let h³⁹⁴ = 'o'
//│ 									in (fun ys⁴⁰⁷ -> [LH_C h³⁹⁴ mappend_lh_₂(t³⁸⁸, ys⁴⁰⁷)])
//│ 								in let h³⁹⁵ = 'S'
//│ 								in (fun ys⁴⁰⁸ -> [LH_C h³⁹⁵ mappend_lh_₂(t³⁸⁷, ys⁴⁰⁸)]), x⁹))((fun x¹⁰ -> mappend_lh_₃(string_of_int⁰(_lh_writeSolutions_arg2³), x¹⁰))(_lh_funcomp_x¹⁶)))((fun x¹¹ -> [LH_C '|' x¹¹])(_lh_funcomp_x¹⁵)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0¹, _lh_funcomp_x¹⁴)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1¹, (_lh_writeSolutions_arg2³ + 1), _lh_funcomp_x¹³)))))), _lh_minSolutions_LH_C_1¹)})))
//│ 		in reverse_lh_₁(minAcc⁰(totalTime_lh_₁(_lh_minSolutions_LH_C_0⁰), 
//│ 			let t³⁹⁶ = (fun a⁴ -> a⁴)
//│ 			in let h³⁹⁶ = _lh_minSolutions_LH_C_0⁰
//│ 			in (fun a⁵ -> reverse_helper_lh_₁(t³⁹⁶, 
//│ 				let _lh_writeSolutions_LH_C_1² = a⁵
//│ 				in let _lh_writeSolutions_LH_C_0² = h³⁹⁶
//│ 				in (fun _lh_writeSolutions_arg2⁴ -> (fun _lh_funcomp_x¹⁷ -> (fun _lh_funcomp_x¹⁸ -> (fun _lh_funcomp_x¹⁹ -> (fun _lh_funcomp_x²⁰ -> (fun x¹² -> mappend_lh_₂(
//│ 					let t³⁹⁷ = 	
//│ 						let t³⁹⁸ = 	
//│ 							let t³⁹⁹ = 	
//│ 								let t⁴⁰⁰ = 	
//│ 									let t⁴⁰¹ = 	
//│ 										let t⁴⁰² = 	
//│ 											let t⁴⁰³ = 	
//│ 												let t⁴⁰⁴ = 	
//│ 													let t⁴⁰⁵ = (fun ys⁴⁰⁹ -> ys⁴⁰⁹)
//│ 													in let h³⁹⁷ = ' '
//│ 													in (fun ys⁴¹⁰ -> [LH_C h³⁹⁷ mappend_lh_₂(t⁴⁰⁵, ys⁴¹⁰)])
//│ 												in let h³⁹⁸ = 'n'
//│ 												in (fun ys⁴¹¹ -> [LH_C h³⁹⁸ mappend_lh_₂(t⁴⁰⁴, ys⁴¹¹)])
//│ 											in let h³⁹⁹ = 'o'
//│ 											in (fun ys⁴¹² -> [LH_C h³⁹⁹ mappend_lh_₂(t⁴⁰³, ys⁴¹²)])
//│ 										in let h⁴⁰⁰ = 'i'
//│ 										in (fun ys⁴¹³ -> [LH_C h⁴⁰⁰ mappend_lh_₂(t⁴⁰², ys⁴¹³)])
//│ 									in let h⁴⁰¹ = 't'
//│ 									in (fun ys⁴¹⁴ -> [LH_C h⁴⁰¹ mappend_lh_₂(t⁴⁰¹, ys⁴¹⁴)])
//│ 								in let h⁴⁰² = 'u'
//│ 								in (fun ys⁴¹⁵ -> [LH_C h⁴⁰² mappend_lh_₂(t⁴⁰⁰, ys⁴¹⁵)])
//│ 							in let h⁴⁰³ = 'l'
//│ 							in (fun ys⁴¹⁶ -> [LH_C h⁴⁰³ mappend_lh_₂(t³⁹⁹, ys⁴¹⁶)])
//│ 						in let h⁴⁰⁴ = 'o'
//│ 						in (fun ys⁴¹⁷ -> [LH_C h⁴⁰⁴ mappend_lh_₂(t³⁹⁸, ys⁴¹⁷)])
//│ 					in let h⁴⁰⁵ = 'S'
//│ 					in (fun ys⁴¹⁸ -> [LH_C h⁴⁰⁵ mappend_lh_₂(t³⁹⁷, ys⁴¹⁸)]), x¹²))((fun x¹³ -> mappend_lh_₃(string_of_int⁰(_lh_writeSolutions_arg2⁴), x¹³))(_lh_funcomp_x²⁰)))((fun x¹⁴ -> [LH_C '|' x¹⁴])(_lh_funcomp_x¹⁹)))(writeHistory_lh_₁(_lh_writeSolutions_LH_C_0², _lh_funcomp_x¹⁸)))(writeSolutions_lh_₁(_lh_writeSolutions_LH_C_1², (_lh_writeSolutions_arg2⁴ + 1), _lh_funcomp_x¹⁷)))))), _lh_minSolutions_LH_C_1⁰))}
//│ def notSeen_lh_₁(_lh_notSeen_arg1⁰) = all_lh_₁((fun _s⁰ -> 
//│ 	let _lh_matchIdent¹ = _s⁰
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P2 _lh_notSeen_LH_P2_0⁰ _lh_notSeen_LH_P2_1⁰ => polyNeq⁰(_lh_notSeen_arg1⁰, _lh_notSeen_LH_P2_1⁰)}))
//│ def notSeen_lh_₂(_lh_notSeen_arg1¹) = all_lh_₂((fun _s¹ -> 
//│ 	let _lh_matchIdent² = _s¹
//│ 	in case _lh_matchIdent² of {
//│ 		LH_P2 _lh_notSeen_LH_P2_0¹ _lh_notSeen_LH_P2_1¹ => polyNeq⁰(_lh_notSeen_arg1¹, _lh_notSeen_LH_P2_1¹)}))
//│ def opposite_lh_₁(_lh_opposite_arg1⁰) = case _lh_opposite_arg1⁰ of {
//│ 	LeftBank  => [RightBank]
//│ 	| RightBank  => [LeftBank]}
//│ def position_lh_₁(_lh_position_arg1¹) = case _lh_position_arg1¹ of {
//│ 	Bono  => bonoPos_lh_₁
//│ 	| Edge  => edgePos_lh_₁
//│ 	| Larry  => larryPos_lh_₁
//│ 	| Adam  => adamPos_lh_₁}
//│ def position_lh_₂(_lh_position_arg1⁰) = case _lh_position_arg1⁰ of {
//│ 	Bono  => bonoPos_lh_₂
//│ 	| Edge  => edgePos_lh_₂
//│ 	| Larry  => larryPos_lh_₂
//│ 	| Adam  => adamPos_lh_₂}
//│ def position_lh_₃(_lh_position_arg1²) = case _lh_position_arg1² of {
//│ 	Bono  => bonoPos_lh_₃
//│ 	| Edge  => edgePos_lh_₃
//│ 	| Larry  => larryPos_lh_₃
//│ 	| Adam  => adamPos_lh_₃}
//│ def reverse_helper_lh_₁(ls⁰, a⁰) = ls⁰(a⁰)
//│ def reverse_lh_₁(ls⁴) = reverse_helper_lh_₁(ls⁴, (fun _lh_writeSolutions_arg2⁵ -> (fun x¹⁵ -> x¹⁵)))
//│ def succItem_lh_₁(_lh_succItem_arg1⁰) = case _lh_succItem_arg1⁰ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₂(_lh_succItem_arg1³) = case _lh_succItem_arg1³ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₃(_lh_succItem_arg1²) = case _lh_succItem_arg1² of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def succItem_lh_₄(_lh_succItem_arg1¹) = case _lh_succItem_arg1¹ of {
//│ 	Bono  => [Edge]
//│ 	| Edge  => [Larry]
//│ 	| Larry  => [Adam]
//│ 	| _  => error⁰}
//│ def testPuzzle_nofib_lh_₁(_lh_testPuzzle_nofib_arg1⁰) = 
//│ 	let time⁰ = if (length_lh_₁(_lh_testPuzzle_nofib_arg1⁰) == 1) then 0 else error⁰([LH_C 'p' [LH_C 'u' [LH_C 'z' [LH_C 'z' [LH_C 'l' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'p' [LH_C 'e' [LH_C 'c' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'a' [LH_C 'c' [LH_C 't' [LH_C 'l' [LH_C 'y' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C 'e' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C 'u' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	in let solutions⁰ = transfer_lh_₁(initialState_lh_₁, finalState_lh_₁, [RightBank], time⁰, [LH_N])
//│ 	in let mins¹ = minSolutions_lh_₁(solutions⁰)
//│ 	in writeSolutions_lh_₁(mins¹, 1, [LH_N])
//│ def totalTime_lh_₁(_lh_totalTime_arg1²) = case _lh_totalTime_arg1² of {
//│ 	LH_C _lh_totalTime_LH_C_0² _lh_totalTime_LH_C_1² => case _lh_totalTime_LH_C_0² of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0² _lh_totalTime_LH_P2_1² => _lh_totalTime_LH_P2_0²
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def totalTime_lh_₂(_lh_totalTime_arg1⁰) = case _lh_totalTime_arg1⁰ of {
//│ 	LH_C _lh_totalTime_LH_C_0⁰ _lh_totalTime_LH_C_1⁰ => case _lh_totalTime_LH_C_0⁰ of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0⁰ _lh_totalTime_LH_P2_1⁰ => _lh_totalTime_LH_P2_0⁰
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def totalTime_lh_₃(_lh_totalTime_arg1¹) = case _lh_totalTime_arg1¹ of {
//│ 	LH_C _lh_totalTime_LH_C_0¹ _lh_totalTime_LH_C_1¹ => case _lh_totalTime_LH_C_0¹ of {
//│ 		LH_P2 _lh_totalTime_LH_P2_0¹ _lh_totalTime_LH_P2_1¹ => _lh_totalTime_LH_P2_0¹
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def transfer_lh_₁(_lh_transfer_arg1⁰, _lh_transfer_arg2⁰, _lh_transfer_arg3⁰, _lh_transfer_arg4⁰, _lh_transfer_arg5⁰) = if polyEq⁰(_lh_transfer_arg1⁰, _lh_transfer_arg2⁰) then [LH_C [LH_C [LH_P2 _lh_transfer_arg4⁰ _lh_transfer_arg2⁰] _lh_transfer_arg5⁰] [LH_N]] else 
//│ 	let newHistory⁰ = [LH_C [LH_P2 _lh_transfer_arg4⁰ _lh_transfer_arg2⁰] _lh_transfer_arg5⁰]
//│ 	in let newLocation⁰ = opposite_lh_₁(_lh_transfer_arg3⁰)
//│ 	in let moveOne⁰ = concat_lh_₂(
//│ 		let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> _lh_listcomp_fun_para⁰(_lh_listcomp_fun⁰, _lh_transfer_arg1⁰, _lh_transfer_arg2⁰, _lh_transfer_arg3⁰, _lh_transfer_arg4⁰, _lh_transfer_arg5⁰, newHistory⁰, newLocation⁰))
//│ 		in _lh_listcomp_fun⁰(itemFromTo_lh_₂([Bono], [Adam])))
//│ 	in let moveTwo⁰ = concat_lh_₁(
//│ 		let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> _lh_listcomp_fun_para¹(_lh_listcomp_fun¹, _lh_transfer_arg1⁰, _lh_transfer_arg2⁰, _lh_transfer_arg3⁰, _lh_transfer_arg4⁰, _lh_transfer_arg5⁰, newHistory⁰, newLocation⁰))
//│ 		in _lh_listcomp_fun¹(itemFromTo_lh_₃([Bono], [Larry])))
//│ 	in mappend_lh_₁(moveOne⁰, moveTwo⁰)
//│ def u2times_lh_₁(_lh_u2times_arg1⁰) = case _lh_u2times_arg1⁰ of {
//│ 	Bono  => 10
//│ 	| Edge  => 5
//│ 	| Larry  => 2
//│ 	| Adam  => 1}
//│ def u2times_lh_₂(_lh_u2times_arg1¹) = case _lh_u2times_arg1¹ of {
//│ 	Bono  => 10
//│ 	| Edge  => 5
//│ 	| Larry  => 2
//│ 	| Adam  => 1}
//│ def updateState_lh_₁(_lh_updateState_arg1⁰, _lh_updateState_arg2⁰, _lh_updateState_arg3⁰) = case _lh_updateState_arg1⁰ of {
//│ 	State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰ => case _lh_updateState_arg2⁰ of {
//│ 		Bono  => [State _lh_updateState_arg3⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰]
//│ 		| Edge  => [State _lh_updateState_State_0⁰ _lh_updateState_arg3⁰ _lh_updateState_State_2⁰ _lh_updateState_State_3⁰]
//│ 		| Larry  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_arg3⁰ _lh_updateState_State_3⁰]
//│ 		| Adam  => [State _lh_updateState_State_0⁰ _lh_updateState_State_1⁰ _lh_updateState_State_2⁰ _lh_updateState_arg3⁰]}}
//│ def updateState_lh_₂(_lh_updateState_arg1², _lh_updateState_arg2⁶, _lh_updateState_arg3⁶) = _lh_updateState_arg1²(_lh_updateState_arg2⁶, _lh_updateState_arg3⁶)
//│ def updateState_lh_₃(_lh_updateState_arg1¹, _lh_updateState_arg2¹, _lh_updateState_arg3¹, _lh_floatOutId_0³, _lh_floatOutId_1³) = case _lh_updateState_arg1¹ of {
//│ 	State _lh_updateState_State_0¹ _lh_updateState_State_1¹ _lh_updateState_State_2¹ _lh_updateState_State_3¹ => case _lh_updateState_arg2¹ of {
//│ 		Bono  => 
//│ 			let _lh_updateState_State_3² = _lh_updateState_State_3¹
//│ 			in let _lh_updateState_State_2² = _lh_updateState_State_2¹
//│ 			in let _lh_updateState_State_1² = _lh_updateState_State_1¹
//│ 			in let _lh_updateState_State_0² = _lh_updateState_arg3¹
//│ 			in case _lh_floatOutId_0³ of {
//│ 				Bono  => [State _lh_floatOutId_1³ _lh_updateState_State_1² _lh_updateState_State_2² _lh_updateState_State_3²]
//│ 				| Edge  => [State _lh_updateState_State_0² _lh_floatOutId_1³ _lh_updateState_State_2² _lh_updateState_State_3²]
//│ 				| Larry  => [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_floatOutId_1³ _lh_updateState_State_3²]
//│ 				| Adam  => [State _lh_updateState_State_0² _lh_updateState_State_1² _lh_updateState_State_2² _lh_floatOutId_1³]}
//│ 		| Edge  => 
//│ 			let _lh_updateState_State_3³ = _lh_updateState_State_3¹
//│ 			in let _lh_updateState_State_2³ = _lh_updateState_State_2¹
//│ 			in let _lh_updateState_State_1³ = _lh_updateState_arg3¹
//│ 			in let _lh_updateState_State_0³ = _lh_updateState_State_0¹
//│ 			in case _lh_floatOutId_0³ of {
//│ 				Bono  => [State _lh_floatOutId_1³ _lh_updateState_State_1³ _lh_updateState_State_2³ _lh_updateState_State_3³]
//│ 				| Edge  => [State _lh_updateState_State_0³ _lh_floatOutId_1³ _lh_updateState_State_2³ _lh_updateState_State_3³]
//│ 				| Larry  => [State _lh_updateState_State_0³ _lh_updateState_State_1³ _lh_floatOutId_1³ _lh_updateState_State_3³]
//│ 				| Adam  => [State _lh_updateState_State_0³ _lh_updateState_State_1³ _lh_updateState_State_2³ _lh_floatOutId_1³]}
//│ 		| Larry  => 
//│ 			let _lh_updateState_State_3⁴ = _lh_updateState_State_3¹
//│ 			in let _lh_updateState_State_2⁴ = _lh_updateState_arg3¹
//│ 			in let _lh_updateState_State_1⁴ = _lh_updateState_State_1¹
//│ 			in let _lh_updateState_State_0⁴ = _lh_updateState_State_0¹
//│ 			in case _lh_floatOutId_0³ of {
//│ 				Bono  => [State _lh_floatOutId_1³ _lh_updateState_State_1⁴ _lh_updateState_State_2⁴ _lh_updateState_State_3⁴]
//│ 				| Edge  => [State _lh_updateState_State_0⁴ _lh_floatOutId_1³ _lh_updateState_State_2⁴ _lh_updateState_State_3⁴]
//│ 				| Larry  => [State _lh_updateState_State_0⁴ _lh_updateState_State_1⁴ _lh_floatOutId_1³ _lh_updateState_State_3⁴]
//│ 				| Adam  => [State _lh_updateState_State_0⁴ _lh_updateState_State_1⁴ _lh_updateState_State_2⁴ _lh_floatOutId_1³]}
//│ 		| Adam  => 
//│ 			let _lh_updateState_State_3⁵ = _lh_updateState_arg3¹
//│ 			in let _lh_updateState_State_2⁵ = _lh_updateState_State_2¹
//│ 			in let _lh_updateState_State_1⁵ = _lh_updateState_State_1¹
//│ 			in let _lh_updateState_State_0⁵ = _lh_updateState_State_0¹
//│ 			in case _lh_floatOutId_0³ of {
//│ 				Bono  => [State _lh_floatOutId_1³ _lh_updateState_State_1⁵ _lh_updateState_State_2⁵ _lh_updateState_State_3⁵]
//│ 				| Edge  => [State _lh_updateState_State_0⁵ _lh_floatOutId_1³ _lh_updateState_State_2⁵ _lh_updateState_State_3⁵]
//│ 				| Larry  => [State _lh_updateState_State_0⁵ _lh_updateState_State_1⁵ _lh_floatOutId_1³ _lh_updateState_State_3⁵]
//│ 				| Adam  => [State _lh_updateState_State_0⁵ _lh_updateState_State_1⁵ _lh_updateState_State_2⁵ _lh_floatOutId_1³]}}}
//│ def writeHistory_lh_₁(_lh_writeHistory_arg1⁰) = case _lh_writeHistory_arg1⁰ of {
//│ 	LH_N  => (fun x⁰ -> x⁰)
//│ 	| _  => foldr_lh_₁((fun timestate⁰ -> (fun acc⁰ -> 
//│ 		let _lh_matchIdent⁰ = timestate⁰
//│ 		in case _lh_matchIdent⁰ of {
//│ 			LH_P2 _lh_writeHistory_LH_P2_0⁰ _lh_writeHistory_LH_P2_1⁰ => (fun _lh_funcomp_x⁵ -> (fun _lh_funcomp_x⁶ -> (fun _lh_funcomp_x⁷ -> (fun _lh_funcomp_x⁸ -> (fun x¹ -> mappend_lh_₆(
//│ 				let t³⁶⁹ = 	
//│ 					let t³⁷⁰ = 	
//│ 						let t³⁷¹ = 	
//│ 							let t³⁷² = 	
//│ 								let t³⁷³ = 	
//│ 									let t³⁷⁴ = (fun ys³⁸² -> ys³⁸²)
//│ 									in let h³⁶⁹ = ' '
//│ 									in (fun ys³⁸³ -> [LH_C h³⁶⁹ mappend_lh_₆(t³⁷⁴, ys³⁸³)])
//│ 								in let h³⁷⁰ = ':'
//│ 								in (fun ys³⁸⁴ -> [LH_C h³⁷⁰ mappend_lh_₆(t³⁷³, ys³⁸⁴)])
//│ 							in let h³⁷¹ = 'e'
//│ 							in (fun ys³⁸⁵ -> [LH_C h³⁷¹ mappend_lh_₆(t³⁷², ys³⁸⁵)])
//│ 						in let h³⁷² = 'm'
//│ 						in (fun ys³⁸⁶ -> [LH_C h³⁷² mappend_lh_₆(t³⁷¹, ys³⁸⁶)])
//│ 					in let h³⁷³ = 'i'
//│ 					in (fun ys³⁸⁷ -> [LH_C h³⁷³ mappend_lh_₆(t³⁷⁰, ys³⁸⁷)])
//│ 				in let h³⁷⁴ = 'T'
//│ 				in (fun ys³⁸⁸ -> [LH_C h³⁷⁴ mappend_lh_₆(t³⁶⁹, ys³⁸⁸)]), x¹))((fun x² -> mappend_lh_₇(string_of_int⁰((totalTime_lh_₃(_lh_writeHistory_arg1⁰) - _lh_writeHistory_LH_P2_0⁰)), x²))(_lh_funcomp_x⁸)))((fun x³ -> [LH_C '|' x³])(_lh_funcomp_x⁷)))(writeState_lh_₁(_lh_writeHistory_LH_P2_1⁰, _lh_funcomp_x⁶)))(acc⁰(_lh_funcomp_x⁵)))})), (fun x⁴ -> x⁴), _lh_writeHistory_arg1⁰)}
//│ def writeItem_lh_₁(_lh_writeItem_arg1⁰, _lh_writeItem_arg2⁰, _lh_writeItem_arg3⁰) = _lh_writeItem_arg1⁰(_lh_writeItem_arg2⁰, _lh_writeItem_arg3⁰)
//│ def writeSolutions_lh_₁(_lh_writeSolutions_arg1⁰, _lh_writeSolutions_arg2⁰) = _lh_writeSolutions_arg1⁰(_lh_writeSolutions_arg2⁰)
//│ def writeState_lh_₁(_lh_writeState_arg1⁰, _lh_funcomp_x⁰) = (fun _lh_funcomp_x¹ -> (fun _lh_funcomp_x² -> (fun _lh_funcomp_x³ -> (fun _lh_funcomp_x⁴ -> (fun s⁰ -> mappend_lh_₈(
//│ 	let t⁵ = 	
//│ 		let t⁶ = 	
//│ 			let t⁷ = 	
//│ 				let t⁸ = 	
//│ 					let t⁹ = 	
//│ 						let t¹⁰ = 	
//│ 							let t¹¹ = 	
//│ 								let t¹² = 	
//│ 									let t¹³ = 	
//│ 										let t¹⁴ = 	
//│ 											let t¹⁵ = 	
//│ 												let t¹⁶ = 	
//│ 													let t¹⁷ = 	
//│ 														let t¹⁸ = 	
//│ 															let t¹⁹ = 	
//│ 																let t²⁰ = 	
//│ 																	let t²¹ = 	
//│ 																		let t²² = 	
//│ 																			let t²³ = 	
//│ 																				let t²⁴ = 	
//│ 																					let t²⁵ = 	
//│ 																						let t²⁶ = 	
//│ 																							let t²⁷ = 	
//│ 																								let t²⁸ = 	
//│ 																									let t²⁹ = 	
//│ 																										let t³⁰ = 	
//│ 																											let t³¹ = 	
//│ 																												let t³² = 	
//│ 																													let t³³ = 	
//│ 																														let t³⁴ = 	
//│ 																															let t³⁵ = 	
//│ 																																let t³⁶ = 	
//│ 																																	let t³⁷ = 	
//│ 																																		let t³⁸ = 	
//│ 																																			let t³⁹ = 	
//│ 																																				let t⁴⁰ = 	
//│ 																																					let t⁴¹ = 	
//│ 																																						let t⁴² = 	
//│ 																																							let t⁴³ = 	
//│ 																																								let t⁴⁴ = 	
//│ 																																									let t⁴⁵ = (fun ys⁷ -> ys⁷)
//│ 																																									in let h⁵ = '|'
//│ 																																									in (fun ys⁸ -> [LH_C h⁵ mappend_lh_₈(t⁴⁵, ys⁸)])
//│ 																																								in let h⁶ = '-'
//│ 																																								in (fun ys⁹ -> [LH_C h⁶ mappend_lh_₈(t⁴⁴, ys⁹)])
//│ 																																							in let h⁷ = '-'
//│ 																																							in (fun ys¹⁰ -> [LH_C h⁷ mappend_lh_₈(t⁴³, ys¹⁰)])
//│ 																																						in let h⁸ = '-'
//│ 																																						in (fun ys¹¹ -> [LH_C h⁸ mappend_lh_₈(t⁴², ys¹¹)])
//│ 																																					in let h⁹ = '-'
//│ 																																					in (fun ys¹² -> [LH_C h⁹ mappend_lh_₈(t⁴¹, ys¹²)])
//│ 																																				in let h¹⁰ = '-'
//│ 																																				in (fun ys¹³ -> [LH_C h¹⁰ mappend_lh_₈(t⁴⁰, ys¹³)])
//│ 																																			in let h¹¹ = '-'
//│ 																																			in (fun ys¹⁴ -> [LH_C h¹¹ mappend_lh_₈(t³⁹, ys¹⁴)])
//│ 																																		in let h¹² = '-'
//│ 																																		in (fun ys¹⁵ -> [LH_C h¹² mappend_lh_₈(t³⁸, ys¹⁵)])
//│ 																																	in let h¹³ = '-'
//│ 																																	in (fun ys¹⁶ -> [LH_C h¹³ mappend_lh_₈(t³⁷, ys¹⁶)])
//│ 																																in let h¹⁴ = '-'
//│ 																																in (fun ys¹⁷ -> [LH_C h¹⁴ mappend_lh_₈(t³⁶, ys¹⁷)])
//│ 																															in let h¹⁵ = '-'
//│ 																															in (fun ys¹⁸ -> [LH_C h¹⁵ mappend_lh_₈(t³⁵, ys¹⁸)])
//│ 																														in let h¹⁶ = '-'
//│ 																														in (fun ys¹⁹ -> [LH_C h¹⁶ mappend_lh_₈(t³⁴, ys¹⁹)])
//│ 																													in let h¹⁷ = '-'
//│ 																													in (fun ys²⁰ -> [LH_C h¹⁷ mappend_lh_₈(t³³, ys²⁰)])
//│ 																												in let h¹⁸ = '-'
//│ 																												in (fun ys²¹ -> [LH_C h¹⁸ mappend_lh_₈(t³², ys²¹)])
//│ 																											in let h¹⁹ = '-'
//│ 																											in (fun ys²² -> [LH_C h¹⁹ mappend_lh_₈(t³¹, ys²²)])
//│ 																										in let h²⁰ = '-'
//│ 																										in (fun ys²³ -> [LH_C h²⁰ mappend_lh_₈(t³⁰, ys²³)])
//│ 																									in let h²¹ = '-'
//│ 																									in (fun ys²⁴ -> [LH_C h²¹ mappend_lh_₈(t²⁹, ys²⁴)])
//│ 																								in let h²² = '-'
//│ 																								in (fun ys²⁵ -> [LH_C h²² mappend_lh_₈(t²⁸, ys²⁵)])
//│ 																							in let h²³ = '-'
//│ 																							in (fun ys²⁶ -> [LH_C h²³ mappend_lh_₈(t²⁷, ys²⁶)])
//│ 																						in let h²⁴ = '-'
//│ 																						in (fun ys²⁷ -> [LH_C h²⁴ mappend_lh_₈(t²⁶, ys²⁷)])
//│ 																					in let h²⁵ = '-'
//│ 																					in (fun ys²⁸ -> [LH_C h²⁵ mappend_lh_₈(t²⁵, ys²⁸)])
//│ 																				in let h²⁶ = '-'
//│ 																				in (fun ys²⁹ -> [LH_C h²⁶ mappend_lh_₈(t²⁴, ys²⁹)])
//│ 																			in let h²⁷ = '-'
//│ 																			in (fun ys³⁰ -> [LH_C h²⁷ mappend_lh_₈(t²³, ys³⁰)])
//│ 																		in let h²⁸ = '-'
//│ 																		in (fun ys³¹ -> [LH_C h²⁸ mappend_lh_₈(t²², ys³¹)])
//│ 																	in let h²⁹ = '-'
//│ 																	in (fun ys³² -> [LH_C h²⁹ mappend_lh_₈(t²¹, ys³²)])
//│ 																in let h³⁰ = '-'
//│ 																in (fun ys³³ -> [LH_C h³⁰ mappend_lh_₈(t²⁰, ys³³)])
//│ 															in let h³¹ = '-'
//│ 															in (fun ys³⁴ -> [LH_C h³¹ mappend_lh_₈(t¹⁹, ys³⁴)])
//│ 														in let h³² = '-'
//│ 														in (fun ys³⁵ -> [LH_C h³² mappend_lh_₈(t¹⁸, ys³⁵)])
//│ 													in let h³³ = '-'
//│ 													in (fun ys³⁶ -> [LH_C h³³ mappend_lh_₈(t¹⁷, ys³⁶)])
//│ 												in let h³⁴ = '-'
//│ 												in (fun ys³⁷ -> [LH_C h³⁴ mappend_lh_₈(t¹⁶, ys³⁷)])
//│ 											in let h³⁵ = '-'
//│ 											in (fun ys³⁸ -> [LH_C h³⁵ mappend_lh_₈(t¹⁵, ys³⁸)])
//│ 										in let h³⁶ = '-'
//│ 										in (fun ys³⁹ -> [LH_C h³⁶ mappend_lh_₈(t¹⁴, ys³⁹)])
//│ 									in let h³⁷ = '-'
//│ 									in (fun ys⁴⁰ -> [LH_C h³⁷ mappend_lh_₈(t¹³, ys⁴⁰)])
//│ 								in let h³⁸ = '-'
//│ 								in (fun ys⁴¹ -> [LH_C h³⁸ mappend_lh_₈(t¹², ys⁴¹)])
//│ 							in let h³⁹ = '-'
//│ 							in (fun ys⁴² -> [LH_C h³⁹ mappend_lh_₈(t¹¹, ys⁴²)])
//│ 						in let h⁴⁰ = '-'
//│ 						in (fun ys⁴³ -> [LH_C h⁴⁰ mappend_lh_₈(t¹⁰, ys⁴³)])
//│ 					in let h⁴¹ = '-'
//│ 					in (fun ys⁴⁴ -> [LH_C h⁴¹ mappend_lh_₈(t⁹, ys⁴⁴)])
//│ 				in let h⁴² = '-'
//│ 				in (fun ys⁴⁵ -> [LH_C h⁴² mappend_lh_₈(t⁸, ys⁴⁵)])
//│ 			in let h⁴³ = '-'
//│ 			in (fun ys⁴⁶ -> [LH_C h⁴³ mappend_lh_₈(t⁷, ys⁴⁶)])
//│ 		in let h⁴⁴ = '-'
//│ 		in (fun ys⁴⁷ -> [LH_C h⁴⁴ mappend_lh_₈(t⁶, ys⁴⁷)])
//│ 	in let h⁴⁵ = '-'
//│ 	in (fun ys⁴⁸ -> [LH_C h⁴⁵ mappend_lh_₈(t⁵, ys⁴⁸)]), s⁰))(writeItem_lh_₁((fun _lh_writeItem_arg2¹ -> (fun _lh_writeItem_arg3¹ -> case _lh_writeItem_arg2¹ of {
//│ 	LeftBank  => mappend_lh_₈(
//│ 		let t⁴⁶ = 	
//│ 			let t⁴⁷ = 	
//│ 				let t⁴⁸ = 	
//│ 					let t⁴⁹ = 	
//│ 						let t⁵⁰ = 	
//│ 							let t⁵¹ = 	
//│ 								let t⁵² = 	
//│ 									let t⁵³ = 	
//│ 										let t⁵⁴ = 	
//│ 											let t⁵⁵ = 	
//│ 												let t⁵⁶ = 	
//│ 													let t⁵⁷ = 	
//│ 														let t⁵⁸ = 	
//│ 															let t⁵⁹ = 	
//│ 																let t⁶⁰ = 	
//│ 																	let t⁶¹ = 	
//│ 																		let t⁶² = 	
//│ 																			let t⁶³ = 	
//│ 																				let t⁶⁴ = 	
//│ 																					let t⁶⁵ = 	
//│ 																						let t⁶⁶ = 	
//│ 																							let t⁶⁷ = 	
//│ 																								let t⁶⁸ = 	
//│ 																									let t⁶⁹ = 	
//│ 																										let t⁷⁰ = 	
//│ 																											let t⁷¹ = 	
//│ 																												let t⁷² = 	
//│ 																													let t⁷³ = 	
//│ 																														let t⁷⁴ = 	
//│ 																															let t⁷⁵ = 	
//│ 																																let t⁷⁶ = 	
//│ 																																	let t⁷⁷ = (fun ys⁴⁹ -> ys⁴⁹)
//│ 																																	in let h⁴⁶ = '|'
//│ 																																	in (fun ys⁵⁰ -> [LH_C h⁴⁶ mappend_lh_₈(t⁷⁷, ys⁵⁰)])
//│ 																																in let h⁴⁷ = '|'
//│ 																																in (fun ys⁵¹ -> [LH_C h⁴⁷ mappend_lh_₈(t⁷⁶, ys⁵¹)])
//│ 																															in let h⁴⁸ = ' '
//│ 																															in (fun ys⁵² -> [LH_C h⁴⁸ mappend_lh_₈(t⁷⁵, ys⁵²)])
//│ 																														in let h⁴⁹ = ' '
//│ 																														in (fun ys⁵³ -> [LH_C h⁴⁹ mappend_lh_₈(t⁷⁴, ys⁵³)])
//│ 																													in let h⁵⁰ = ' '
//│ 																													in (fun ys⁵⁴ -> [LH_C h⁵⁰ mappend_lh_₈(t⁷³, ys⁵⁴)])
//│ 																												in let h⁵¹ = ' '
//│ 																												in (fun ys⁵⁵ -> [LH_C h⁵¹ mappend_lh_₈(t⁷², ys⁵⁵)])
//│ 																											in let h⁵² = ' '
//│ 																											in (fun ys⁵⁶ -> [LH_C h⁵² mappend_lh_₈(t⁷¹, ys⁵⁶)])
//│ 																										in let h⁵³ = ' '
//│ 																										in (fun ys⁵⁷ -> [LH_C h⁵³ mappend_lh_₈(t⁷⁰, ys⁵⁷)])
//│ 																									in let h⁵⁴ = ' '
//│ 																									in (fun ys⁵⁸ -> [LH_C h⁵⁴ mappend_lh_₈(t⁶⁹, ys⁵⁸)])
//│ 																								in let h⁵⁵ = ' '
//│ 																								in (fun ys⁵⁹ -> [LH_C h⁵⁵ mappend_lh_₈(t⁶⁸, ys⁵⁹)])
//│ 																							in let h⁵⁶ = ' '
//│ 																							in (fun ys⁶⁰ -> [LH_C h⁵⁶ mappend_lh_₈(t⁶⁷, ys⁶⁰)])
//│ 																						in let h⁵⁷ = ' '
//│ 																						in (fun ys⁶¹ -> [LH_C h⁵⁷ mappend_lh_₈(t⁶⁶, ys⁶¹)])
//│ 																					in let h⁵⁸ = ' '
//│ 																					in (fun ys⁶² -> [LH_C h⁵⁸ mappend_lh_₈(t⁶⁵, ys⁶²)])
//│ 																				in let h⁵⁹ = ' '
//│ 																				in (fun ys⁶³ -> [LH_C h⁵⁹ mappend_lh_₈(t⁶⁴, ys⁶³)])
//│ 																			in let h⁶⁰ = ' '
//│ 																			in (fun ys⁶⁴ -> [LH_C h⁶⁰ mappend_lh_₈(t⁶³, ys⁶⁴)])
//│ 																		in let h⁶¹ = ' '
//│ 																		in (fun ys⁶⁵ -> [LH_C h⁶¹ mappend_lh_₈(t⁶², ys⁶⁵)])
//│ 																	in let h⁶² = ' '
//│ 																	in (fun ys⁶⁶ -> [LH_C h⁶² mappend_lh_₈(t⁶¹, ys⁶⁶)])
//│ 																in let h⁶³ = ' '
//│ 																in (fun ys⁶⁷ -> [LH_C h⁶³ mappend_lh_₈(t⁶⁰, ys⁶⁷)])
//│ 															in let h⁶⁴ = ' '
//│ 															in (fun ys⁶⁸ -> [LH_C h⁶⁴ mappend_lh_₈(t⁵⁹, ys⁶⁸)])
//│ 														in let h⁶⁵ = ' '
//│ 														in (fun ys⁶⁹ -> [LH_C h⁶⁵ mappend_lh_₈(t⁵⁸, ys⁶⁹)])
//│ 													in let h⁶⁶ = ' '
//│ 													in (fun ys⁷⁰ -> [LH_C h⁶⁶ mappend_lh_₈(t⁵⁷, ys⁷⁰)])
//│ 												in let h⁶⁷ = ' '
//│ 												in (fun ys⁷¹ -> [LH_C h⁶⁷ mappend_lh_₈(t⁵⁶, ys⁷¹)])
//│ 											in let h⁶⁸ = '|'
//│ 											in (fun ys⁷² -> [LH_C h⁶⁸ mappend_lh_₈(t⁵⁵, ys⁷²)])
//│ 										in let h⁶⁹ = ' '
//│ 										in (fun ys⁷³ -> [LH_C h⁶⁹ mappend_lh_₈(t⁵⁴, ys⁷³)])
//│ 									in let h⁷⁰ = 'o'
//│ 									in (fun ys⁷⁴ -> [LH_C h⁷⁰ mappend_lh_₈(t⁵³, ys⁷⁴)])
//│ 								in let h⁷¹ = 'n'
//│ 								in (fun ys⁷⁵ -> [LH_C h⁷¹ mappend_lh_₈(t⁵², ys⁷⁵)])
//│ 							in let h⁷² = 'o'
//│ 							in (fun ys⁷⁶ -> [LH_C h⁷² mappend_lh_₈(t⁵¹, ys⁷⁶)])
//│ 						in let h⁷³ = 'B'
//│ 						in (fun ys⁷⁷ -> [LH_C h⁷³ mappend_lh_₈(t⁵⁰, ys⁷⁷)])
//│ 					in let h⁷⁴ = ' '
//│ 					in (fun ys⁷⁸ -> [LH_C h⁷⁴ mappend_lh_₈(t⁴⁹, ys⁷⁸)])
//│ 				in let h⁷⁵ = ' '
//│ 				in (fun ys⁷⁹ -> [LH_C h⁷⁵ mappend_lh_₈(t⁴⁸, ys⁷⁹)])
//│ 			in let h⁷⁶ = ' '
//│ 			in (fun ys⁸⁰ -> [LH_C h⁷⁶ mappend_lh_₈(t⁴⁷, ys⁸⁰)])
//│ 		in let h⁷⁷ = ' '
//│ 		in (fun ys⁸¹ -> [LH_C h⁷⁷ mappend_lh_₈(t⁴⁶, ys⁸¹)]), _lh_writeItem_arg3¹)
//│ 	| RightBank  => mappend_lh_₈(
//│ 		let t⁷⁸ = 	
//│ 			let t⁷⁹ = 	
//│ 				let t⁸⁰ = 	
//│ 					let t⁸¹ = 	
//│ 						let t⁸² = 	
//│ 							let t⁸³ = 	
//│ 								let t⁸⁴ = 	
//│ 									let t⁸⁵ = 	
//│ 										let t⁸⁶ = 	
//│ 											let t⁸⁷ = 	
//│ 												let t⁸⁸ = 	
//│ 													let t⁸⁹ = 	
//│ 														let t⁹⁰ = 	
//│ 															let t⁹¹ = 	
//│ 																let t⁹² = 	
//│ 																	let t⁹³ = 	
//│ 																		let t⁹⁴ = 	
//│ 																			let t⁹⁵ = 	
//│ 																				let t⁹⁶ = 	
//│ 																					let t⁹⁷ = 	
//│ 																						let t⁹⁸ = 	
//│ 																							let t⁹⁹ = 	
//│ 																								let t¹⁰⁰ = 	
//│ 																									let t¹⁰¹ = 	
//│ 																										let t¹⁰² = 	
//│ 																											let t¹⁰³ = 	
//│ 																												let t¹⁰⁴ = 	
//│ 																													let t¹⁰⁵ = 	
//│ 																														let t¹⁰⁶ = 	
//│ 																															let t¹⁰⁷ = 	
//│ 																																let t¹⁰⁸ = 	
//│ 																																	let t¹⁰⁹ = 	
//│ 																																		let t¹¹⁰ = 	
//│ 																																			let t¹¹¹ = 	
//│ 																																				let t¹¹² = 	
//│ 																																					let t¹¹³ = 	
//│ 																																						let t¹¹⁴ = (fun ys⁸² -> ys⁸²)
//│ 																																						in let h⁷⁸ = '|'
//│ 																																						in (fun ys⁸³ -> [LH_C h⁷⁸ mappend_lh_₈(t¹¹⁴, ys⁸³)])
//│ 																																					in let h⁷⁹ = 'o'
//│ 																																					in (fun ys⁸⁴ -> [LH_C h⁷⁹ mappend_lh_₈(t¹¹³, ys⁸⁴)])
//│ 																																				in let h⁸⁰ = 'n'
//│ 																																				in (fun ys⁸⁵ -> [LH_C h⁸⁰ mappend_lh_₈(t¹¹², ys⁸⁵)])
//│ 																																			in let h⁸¹ = 'o'
//│ 																																			in (fun ys⁸⁶ -> [LH_C h⁸¹ mappend_lh_₈(t¹¹¹, ys⁸⁶)])
//│ 																																		in let h⁸² = 'B'
//│ 																																		in (fun ys⁸⁷ -> [LH_C h⁸² mappend_lh_₈(t¹¹⁰, ys⁸⁷)])
//│ 																																	in let h⁸³ = ' '
//│ 																																	in (fun ys⁸⁸ -> [LH_C h⁸³ mappend_lh_₈(t¹⁰⁹, ys⁸⁸)])
//│ 																																in let h⁸⁴ = '|'
//│ 																																in (fun ys⁸⁹ -> [LH_C h⁸⁴ mappend_lh_₈(t¹⁰⁸, ys⁸⁹)])
//│ 																															in let h⁸⁵ = ' '
//│ 																															in (fun ys⁹⁰ -> [LH_C h⁸⁵ mappend_lh_₈(t¹⁰⁷, ys⁹⁰)])
//│ 																														in let h⁸⁶ = ' '
//│ 																														in (fun ys⁹¹ -> [LH_C h⁸⁶ mappend_lh_₈(t¹⁰⁶, ys⁹¹)])
//│ 																													in let h⁸⁷ = ' '
//│ 																													in (fun ys⁹² -> [LH_C h⁸⁷ mappend_lh_₈(t¹⁰⁵, ys⁹²)])
//│ 																												in let h⁸⁸ = ' '
//│ 																												in (fun ys⁹³ -> [LH_C h⁸⁸ mappend_lh_₈(t¹⁰⁴, ys⁹³)])
//│ 																											in let h⁸⁹ = ' '
//│ 																											in (fun ys⁹⁴ -> [LH_C h⁸⁹ mappend_lh_₈(t¹⁰³, ys⁹⁴)])
//│ 																										in let h⁹⁰ = ' '
//│ 																										in (fun ys⁹⁵ -> [LH_C h⁹⁰ mappend_lh_₈(t¹⁰², ys⁹⁵)])
//│ 																									in let h⁹¹ = ' '
//│ 																									in (fun ys⁹⁶ -> [LH_C h⁹¹ mappend_lh_₈(t¹⁰¹, ys⁹⁶)])
//│ 																								in let h⁹² = ' '
//│ 																								in (fun ys⁹⁷ -> [LH_C h⁹² mappend_lh_₈(t¹⁰⁰, ys⁹⁷)])
//│ 																							in let h⁹³ = ' '
//│ 																							in (fun ys⁹⁸ -> [LH_C h⁹³ mappend_lh_₈(t⁹⁹, ys⁹⁸)])
//│ 																						in let h⁹⁴ = ' '
//│ 																						in (fun ys⁹⁹ -> [LH_C h⁹⁴ mappend_lh_₈(t⁹⁸, ys⁹⁹)])
//│ 																					in let h⁹⁵ = ' '
//│ 																					in (fun ys¹⁰⁰ -> [LH_C h⁹⁵ mappend_lh_₈(t⁹⁷, ys¹⁰⁰)])
//│ 																				in let h⁹⁶ = ' '
//│ 																				in (fun ys¹⁰¹ -> [LH_C h⁹⁶ mappend_lh_₈(t⁹⁶, ys¹⁰¹)])
//│ 																			in let h⁹⁷ = ' '
//│ 																			in (fun ys¹⁰² -> [LH_C h⁹⁷ mappend_lh_₈(t⁹⁵, ys¹⁰²)])
//│ 																		in let h⁹⁸ = ' '
//│ 																		in (fun ys¹⁰³ -> [LH_C h⁹⁸ mappend_lh_₈(t⁹⁴, ys¹⁰³)])
//│ 																	in let h⁹⁹ = ' '
//│ 																	in (fun ys¹⁰⁴ -> [LH_C h⁹⁹ mappend_lh_₈(t⁹³, ys¹⁰⁴)])
//│ 																in let h¹⁰⁰ = ' '
//│ 																in (fun ys¹⁰⁵ -> [LH_C h¹⁰⁰ mappend_lh_₈(t⁹², ys¹⁰⁵)])
//│ 															in let h¹⁰¹ = ' '
//│ 															in (fun ys¹⁰⁶ -> [LH_C h¹⁰¹ mappend_lh_₈(t⁹¹, ys¹⁰⁶)])
//│ 														in let h¹⁰² = ' '
//│ 														in (fun ys¹⁰⁷ -> [LH_C h¹⁰² mappend_lh_₈(t⁹⁰, ys¹⁰⁷)])
//│ 													in let h¹⁰³ = ' '
//│ 													in (fun ys¹⁰⁸ -> [LH_C h¹⁰³ mappend_lh_₈(t⁸⁹, ys¹⁰⁸)])
//│ 												in let h¹⁰⁴ = ' '
//│ 												in (fun ys¹⁰⁹ -> [LH_C h¹⁰⁴ mappend_lh_₈(t⁸⁸, ys¹⁰⁹)])
//│ 											in let h¹⁰⁵ = '|'
//│ 											in (fun ys¹¹⁰ -> [LH_C h¹⁰⁵ mappend_lh_₈(t⁸⁷, ys¹¹⁰)])
//│ 										in let h¹⁰⁶ = ' '
//│ 										in (fun ys¹¹¹ -> [LH_C h¹⁰⁶ mappend_lh_₈(t⁸⁶, ys¹¹¹)])
//│ 									in let h¹⁰⁷ = ' '
//│ 									in (fun ys¹¹² -> [LH_C h¹⁰⁷ mappend_lh_₈(t⁸⁵, ys¹¹²)])
//│ 								in let h¹⁰⁸ = ' '
//│ 								in (fun ys¹¹³ -> [LH_C h¹⁰⁸ mappend_lh_₈(t⁸⁴, ys¹¹³)])
//│ 							in let h¹⁰⁹ = ' '
//│ 							in (fun ys¹¹⁴ -> [LH_C h¹⁰⁹ mappend_lh_₈(t⁸³, ys¹¹⁴)])
//│ 						in let h¹¹⁰ = ' '
//│ 						in (fun ys¹¹⁵ -> [LH_C h¹¹⁰ mappend_lh_₈(t⁸², ys¹¹⁵)])
//│ 					in let h¹¹¹ = ' '
//│ 					in (fun ys¹¹⁶ -> [LH_C h¹¹¹ mappend_lh_₈(t⁸¹, ys¹¹⁶)])
//│ 				in let h¹¹² = ' '
//│ 				in (fun ys¹¹⁷ -> [LH_C h¹¹² mappend_lh_₈(t⁸⁰, ys¹¹⁷)])
//│ 			in let h¹¹³ = ' '
//│ 			in (fun ys¹¹⁸ -> [LH_C h¹¹³ mappend_lh_₈(t⁷⁹, ys¹¹⁸)])
//│ 		in let h¹¹⁴ = ' '
//│ 		in (fun ys¹¹⁹ -> [LH_C h¹¹⁴ mappend_lh_₈(t⁷⁸, ys¹¹⁹)]), _lh_writeItem_arg3¹)})), bonoPos_lh_₄(_lh_writeState_arg1⁰), _lh_funcomp_x⁴)))(writeItem_lh_₁((fun _lh_writeItem_arg2² -> (fun _lh_writeItem_arg3² -> case _lh_writeItem_arg2² of {
//│ 	LeftBank  => mappend_lh_₈(
//│ 		let t¹¹⁵ = 	
//│ 			let t¹¹⁶ = 	
//│ 				let t¹¹⁷ = 	
//│ 					let t¹¹⁸ = 	
//│ 						let t¹¹⁹ = 	
//│ 							let t¹²⁰ = 	
//│ 								let t¹²¹ = 	
//│ 									let t¹²² = 	
//│ 										let t¹²³ = 	
//│ 											let t¹²⁴ = 	
//│ 												let t¹²⁵ = 	
//│ 													let t¹²⁶ = 	
//│ 														let t¹²⁷ = 	
//│ 															let t¹²⁸ = 	
//│ 																let t¹²⁹ = 	
//│ 																	let t¹³⁰ = 	
//│ 																		let t¹³¹ = 	
//│ 																			let t¹³² = 	
//│ 																				let t¹³³ = 	
//│ 																					let t¹³⁴ = 	
//│ 																						let t¹³⁵ = 	
//│ 																							let t¹³⁶ = 	
//│ 																								let t¹³⁷ = 	
//│ 																									let t¹³⁸ = 	
//│ 																										let t¹³⁹ = 	
//│ 																											let t¹⁴⁰ = 	
//│ 																												let t¹⁴¹ = 	
//│ 																													let t¹⁴² = 	
//│ 																														let t¹⁴³ = 	
//│ 																															let t¹⁴⁴ = 	
//│ 																																let t¹⁴⁵ = 	
//│ 																																	let t¹⁴⁶ = (fun ys¹²⁰ -> ys¹²⁰)
//│ 																																	in let h¹¹⁵ = '|'
//│ 																																	in (fun ys¹²¹ -> [LH_C h¹¹⁵ mappend_lh_₈(t¹⁴⁶, ys¹²¹)])
//│ 																																in let h¹¹⁶ = '|'
//│ 																																in (fun ys¹²² -> [LH_C h¹¹⁶ mappend_lh_₈(t¹⁴⁵, ys¹²²)])
//│ 																															in let h¹¹⁷ = ' '
//│ 																															in (fun ys¹²³ -> [LH_C h¹¹⁷ mappend_lh_₈(t¹⁴⁴, ys¹²³)])
//│ 																														in let h¹¹⁸ = ' '
//│ 																														in (fun ys¹²⁴ -> [LH_C h¹¹⁸ mappend_lh_₈(t¹⁴³, ys¹²⁴)])
//│ 																													in let h¹¹⁹ = ' '
//│ 																													in (fun ys¹²⁵ -> [LH_C h¹¹⁹ mappend_lh_₈(t¹⁴², ys¹²⁵)])
//│ 																												in let h¹²⁰ = ' '
//│ 																												in (fun ys¹²⁶ -> [LH_C h¹²⁰ mappend_lh_₈(t¹⁴¹, ys¹²⁶)])
//│ 																											in let h¹²¹ = ' '
//│ 																											in (fun ys¹²⁷ -> [LH_C h¹²¹ mappend_lh_₈(t¹⁴⁰, ys¹²⁷)])
//│ 																										in let h¹²² = ' '
//│ 																										in (fun ys¹²⁸ -> [LH_C h¹²² mappend_lh_₈(t¹³⁹, ys¹²⁸)])
//│ 																									in let h¹²³ = ' '
//│ 																									in (fun ys¹²⁹ -> [LH_C h¹²³ mappend_lh_₈(t¹³⁸, ys¹²⁹)])
//│ 																								in let h¹²⁴ = ' '
//│ 																								in (fun ys¹³⁰ -> [LH_C h¹²⁴ mappend_lh_₈(t¹³⁷, ys¹³⁰)])
//│ 																							in let h¹²⁵ = ' '
//│ 																							in (fun ys¹³¹ -> [LH_C h¹²⁵ mappend_lh_₈(t¹³⁶, ys¹³¹)])
//│ 																						in let h¹²⁶ = ' '
//│ 																						in (fun ys¹³² -> [LH_C h¹²⁶ mappend_lh_₈(t¹³⁵, ys¹³²)])
//│ 																					in let h¹²⁷ = ' '
//│ 																					in (fun ys¹³³ -> [LH_C h¹²⁷ mappend_lh_₈(t¹³⁴, ys¹³³)])
//│ 																				in let h¹²⁸ = ' '
//│ 																				in (fun ys¹³⁴ -> [LH_C h¹²⁸ mappend_lh_₈(t¹³³, ys¹³⁴)])
//│ 																			in let h¹²⁹ = ' '
//│ 																			in (fun ys¹³⁵ -> [LH_C h¹²⁹ mappend_lh_₈(t¹³², ys¹³⁵)])
//│ 																		in let h¹³⁰ = ' '
//│ 																		in (fun ys¹³⁶ -> [LH_C h¹³⁰ mappend_lh_₈(t¹³¹, ys¹³⁶)])
//│ 																	in let h¹³¹ = ' '
//│ 																	in (fun ys¹³⁷ -> [LH_C h¹³¹ mappend_lh_₈(t¹³⁰, ys¹³⁷)])
//│ 																in let h¹³² = ' '
//│ 																in (fun ys¹³⁸ -> [LH_C h¹³² mappend_lh_₈(t¹²⁹, ys¹³⁸)])
//│ 															in let h¹³³ = ' '
//│ 															in (fun ys¹³⁹ -> [LH_C h¹³³ mappend_lh_₈(t¹²⁸, ys¹³⁹)])
//│ 														in let h¹³⁴ = ' '
//│ 														in (fun ys¹⁴⁰ -> [LH_C h¹³⁴ mappend_lh_₈(t¹²⁷, ys¹⁴⁰)])
//│ 													in let h¹³⁵ = ' '
//│ 													in (fun ys¹⁴¹ -> [LH_C h¹³⁵ mappend_lh_₈(t¹²⁶, ys¹⁴¹)])
//│ 												in let h¹³⁶ = ' '
//│ 												in (fun ys¹⁴² -> [LH_C h¹³⁶ mappend_lh_₈(t¹²⁵, ys¹⁴²)])
//│ 											in let h¹³⁷ = '|'
//│ 											in (fun ys¹⁴³ -> [LH_C h¹³⁷ mappend_lh_₈(t¹²⁴, ys¹⁴³)])
//│ 										in let h¹³⁸ = ' '
//│ 										in (fun ys¹⁴⁴ -> [LH_C h¹³⁸ mappend_lh_₈(t¹²³, ys¹⁴⁴)])
//│ 									in let h¹³⁹ = 'e'
//│ 									in (fun ys¹⁴⁵ -> [LH_C h¹³⁹ mappend_lh_₈(t¹²², ys¹⁴⁵)])
//│ 								in let h¹⁴⁰ = 'g'
//│ 								in (fun ys¹⁴⁶ -> [LH_C h¹⁴⁰ mappend_lh_₈(t¹²¹, ys¹⁴⁶)])
//│ 							in let h¹⁴¹ = 'd'
//│ 							in (fun ys¹⁴⁷ -> [LH_C h¹⁴¹ mappend_lh_₈(t¹²⁰, ys¹⁴⁷)])
//│ 						in let h¹⁴² = 'E'
//│ 						in (fun ys¹⁴⁸ -> [LH_C h¹⁴² mappend_lh_₈(t¹¹⁹, ys¹⁴⁸)])
//│ 					in let h¹⁴³ = ' '
//│ 					in (fun ys¹⁴⁹ -> [LH_C h¹⁴³ mappend_lh_₈(t¹¹⁸, ys¹⁴⁹)])
//│ 				in let h¹⁴⁴ = 'e'
//│ 				in (fun ys¹⁵⁰ -> [LH_C h¹⁴⁴ mappend_lh_₈(t¹¹⁷, ys¹⁵⁰)])
//│ 			in let h¹⁴⁵ = 'h'
//│ 			in (fun ys¹⁵¹ -> [LH_C h¹⁴⁵ mappend_lh_₈(t¹¹⁶, ys¹⁵¹)])
//│ 		in let h¹⁴⁶ = 'T'
//│ 		in (fun ys¹⁵² -> [LH_C h¹⁴⁶ mappend_lh_₈(t¹¹⁵, ys¹⁵²)]), _lh_writeItem_arg3²)
//│ 	| RightBank  => mappend_lh_₈(
//│ 		let t¹⁴⁷ = 	
//│ 			let t¹⁴⁸ = 	
//│ 				let t¹⁴⁹ = 	
//│ 					let t¹⁵⁰ = 	
//│ 						let t¹⁵¹ = 	
//│ 							let t¹⁵² = 	
//│ 								let t¹⁵³ = 	
//│ 									let t¹⁵⁴ = 	
//│ 										let t¹⁵⁵ = 	
//│ 											let t¹⁵⁶ = 	
//│ 												let t¹⁵⁷ = 	
//│ 													let t¹⁵⁸ = 	
//│ 														let t¹⁵⁹ = 	
//│ 															let t¹⁶⁰ = 	
//│ 																let t¹⁶¹ = 	
//│ 																	let t¹⁶² = 	
//│ 																		let t¹⁶³ = 	
//│ 																			let t¹⁶⁴ = 	
//│ 																				let t¹⁶⁵ = 	
//│ 																					let t¹⁶⁶ = 	
//│ 																						let t¹⁶⁷ = 	
//│ 																							let t¹⁶⁸ = 	
//│ 																								let t¹⁶⁹ = 	
//│ 																									let t¹⁷⁰ = 	
//│ 																										let t¹⁷¹ = 	
//│ 																											let t¹⁷² = 	
//│ 																												let t¹⁷³ = 	
//│ 																													let t¹⁷⁴ = 	
//│ 																														let t¹⁷⁵ = 	
//│ 																															let t¹⁷⁶ = 	
//│ 																																let t¹⁷⁷ = 	
//│ 																																	let t¹⁷⁸ = 	
//│ 																																		let t¹⁷⁹ = 	
//│ 																																			let t¹⁸⁰ = 	
//│ 																																				let t¹⁸¹ = 	
//│ 																																					let t¹⁸² = 	
//│ 																																						let t¹⁸³ = 	
//│ 																																							let t¹⁸⁴ = 	
//│ 																																								let t¹⁸⁵ = 	
//│ 																																									let t¹⁸⁶ = 	
//│ 																																										let t¹⁸⁷ = (fun ys¹⁵³ -> ys¹⁵³)
//│ 																																										in let h¹⁴⁷ = '|'
//│ 																																										in (fun ys¹⁵⁴ -> [LH_C h¹⁴⁷ mappend_lh_₈(t¹⁸⁷, ys¹⁵⁴)])
//│ 																																									in let h¹⁴⁸ = 'e'
//│ 																																									in (fun ys¹⁵⁵ -> [LH_C h¹⁴⁸ mappend_lh_₈(t¹⁸⁶, ys¹⁵⁵)])
//│ 																																								in let h¹⁴⁹ = 'g'
//│ 																																								in (fun ys¹⁵⁶ -> [LH_C h¹⁴⁹ mappend_lh_₈(t¹⁸⁵, ys¹⁵⁶)])
//│ 																																							in let h¹⁵⁰ = 'd'
//│ 																																							in (fun ys¹⁵⁷ -> [LH_C h¹⁵⁰ mappend_lh_₈(t¹⁸⁴, ys¹⁵⁷)])
//│ 																																						in let h¹⁵¹ = 'E'
//│ 																																						in (fun ys¹⁵⁸ -> [LH_C h¹⁵¹ mappend_lh_₈(t¹⁸³, ys¹⁵⁸)])
//│ 																																					in let h¹⁵² = ' '
//│ 																																					in (fun ys¹⁵⁹ -> [LH_C h¹⁵² mappend_lh_₈(t¹⁸², ys¹⁵⁹)])
//│ 																																				in let h¹⁵³ = 'e'
//│ 																																				in (fun ys¹⁶⁰ -> [LH_C h¹⁵³ mappend_lh_₈(t¹⁸¹, ys¹⁶⁰)])
//│ 																																			in let h¹⁵⁴ = 'h'
//│ 																																			in (fun ys¹⁶¹ -> [LH_C h¹⁵⁴ mappend_lh_₈(t¹⁸⁰, ys¹⁶¹)])
//│ 																																		in let h¹⁵⁵ = 'T'
//│ 																																		in (fun ys¹⁶² -> [LH_C h¹⁵⁵ mappend_lh_₈(t¹⁷⁹, ys¹⁶²)])
//│ 																																	in let h¹⁵⁶ = ' '
//│ 																																	in (fun ys¹⁶³ -> [LH_C h¹⁵⁶ mappend_lh_₈(t¹⁷⁸, ys¹⁶³)])
//│ 																																in let h¹⁵⁷ = '|'
//│ 																																in (fun ys¹⁶⁴ -> [LH_C h¹⁵⁷ mappend_lh_₈(t¹⁷⁷, ys¹⁶⁴)])
//│ 																															in let h¹⁵⁸ = ' '
//│ 																															in (fun ys¹⁶⁵ -> [LH_C h¹⁵⁸ mappend_lh_₈(t¹⁷⁶, ys¹⁶⁵)])
//│ 																														in let h¹⁵⁹ = ' '
//│ 																														in (fun ys¹⁶⁶ -> [LH_C h¹⁵⁹ mappend_lh_₈(t¹⁷⁵, ys¹⁶⁶)])
//│ 																													in let h¹⁶⁰ = ' '
//│ 																													in (fun ys¹⁶⁷ -> [LH_C h¹⁶⁰ mappend_lh_₈(t¹⁷⁴, ys¹⁶⁷)])
//│ 																												in let h¹⁶¹ = ' '
//│ 																												in (fun ys¹⁶⁸ -> [LH_C h¹⁶¹ mappend_lh_₈(t¹⁷³, ys¹⁶⁸)])
//│ 																											in let h¹⁶² = ' '
//│ 																											in (fun ys¹⁶⁹ -> [LH_C h¹⁶² mappend_lh_₈(t¹⁷², ys¹⁶⁹)])
//│ 																										in let h¹⁶³ = ' '
//│ 																										in (fun ys¹⁷⁰ -> [LH_C h¹⁶³ mappend_lh_₈(t¹⁷¹, ys¹⁷⁰)])
//│ 																									in let h¹⁶⁴ = ' '
//│ 																									in (fun ys¹⁷¹ -> [LH_C h¹⁶⁴ mappend_lh_₈(t¹⁷⁰, ys¹⁷¹)])
//│ 																								in let h¹⁶⁵ = ' '
//│ 																								in (fun ys¹⁷² -> [LH_C h¹⁶⁵ mappend_lh_₈(t¹⁶⁹, ys¹⁷²)])
//│ 																							in let h¹⁶⁶ = ' '
//│ 																							in (fun ys¹⁷³ -> [LH_C h¹⁶⁶ mappend_lh_₈(t¹⁶⁸, ys¹⁷³)])
//│ 																						in let h¹⁶⁷ = ' '
//│ 																						in (fun ys¹⁷⁴ -> [LH_C h¹⁶⁷ mappend_lh_₈(t¹⁶⁷, ys¹⁷⁴)])
//│ 																					in let h¹⁶⁸ = ' '
//│ 																					in (fun ys¹⁷⁵ -> [LH_C h¹⁶⁸ mappend_lh_₈(t¹⁶⁶, ys¹⁷⁵)])
//│ 																				in let h¹⁶⁹ = ' '
//│ 																				in (fun ys¹⁷⁶ -> [LH_C h¹⁶⁹ mappend_lh_₈(t¹⁶⁵, ys¹⁷⁶)])
//│ 																			in let h¹⁷⁰ = ' '
//│ 																			in (fun ys¹⁷⁷ -> [LH_C h¹⁷⁰ mappend_lh_₈(t¹⁶⁴, ys¹⁷⁷)])
//│ 																		in let h¹⁷¹ = ' '
//│ 																		in (fun ys¹⁷⁸ -> [LH_C h¹⁷¹ mappend_lh_₈(t¹⁶³, ys¹⁷⁸)])
//│ 																	in let h¹⁷² = ' '
//│ 																	in (fun ys¹⁷⁹ -> [LH_C h¹⁷² mappend_lh_₈(t¹⁶², ys¹⁷⁹)])
//│ 																in let h¹⁷³ = ' '
//│ 																in (fun ys¹⁸⁰ -> [LH_C h¹⁷³ mappend_lh_₈(t¹⁶¹, ys¹⁸⁰)])
//│ 															in let h¹⁷⁴ = ' '
//│ 															in (fun ys¹⁸¹ -> [LH_C h¹⁷⁴ mappend_lh_₈(t¹⁶⁰, ys¹⁸¹)])
//│ 														in let h¹⁷⁵ = ' '
//│ 														in (fun ys¹⁸² -> [LH_C h¹⁷⁵ mappend_lh_₈(t¹⁵⁹, ys¹⁸²)])
//│ 													in let h¹⁷⁶ = ' '
//│ 													in (fun ys¹⁸³ -> [LH_C h¹⁷⁶ mappend_lh_₈(t¹⁵⁸, ys¹⁸³)])
//│ 												in let h¹⁷⁷ = ' '
//│ 												in (fun ys¹⁸⁴ -> [LH_C h¹⁷⁷ mappend_lh_₈(t¹⁵⁷, ys¹⁸⁴)])
//│ 											in let h¹⁷⁸ = '|'
//│ 											in (fun ys¹⁸⁵ -> [LH_C h¹⁷⁸ mappend_lh_₈(t¹⁵⁶, ys¹⁸⁵)])
//│ 										in let h¹⁷⁹ = ' '
//│ 										in (fun ys¹⁸⁶ -> [LH_C h¹⁷⁹ mappend_lh_₈(t¹⁵⁵, ys¹⁸⁶)])
//│ 									in let h¹⁸⁰ = ' '
//│ 									in (fun ys¹⁸⁷ -> [LH_C h¹⁸⁰ mappend_lh_₈(t¹⁵⁴, ys¹⁸⁷)])
//│ 								in let h¹⁸¹ = ' '
//│ 								in (fun ys¹⁸⁸ -> [LH_C h¹⁸¹ mappend_lh_₈(t¹⁵³, ys¹⁸⁸)])
//│ 							in let h¹⁸² = ' '
//│ 							in (fun ys¹⁸⁹ -> [LH_C h¹⁸² mappend_lh_₈(t¹⁵², ys¹⁸⁹)])
//│ 						in let h¹⁸³ = ' '
//│ 						in (fun ys¹⁹⁰ -> [LH_C h¹⁸³ mappend_lh_₈(t¹⁵¹, ys¹⁹⁰)])
//│ 					in let h¹⁸⁴ = ' '
//│ 					in (fun ys¹⁹¹ -> [LH_C h¹⁸⁴ mappend_lh_₈(t¹⁵⁰, ys¹⁹¹)])
//│ 				in let h¹⁸⁵ = ' '
//│ 				in (fun ys¹⁹² -> [LH_C h¹⁸⁵ mappend_lh_₈(t¹⁴⁹, ys¹⁹²)])
//│ 			in let h¹⁸⁶ = ' '
//│ 			in (fun ys¹⁹³ -> [LH_C h¹⁸⁶ mappend_lh_₈(t¹⁴⁸, ys¹⁹³)])
//│ 		in let h¹⁸⁷ = ' '
//│ 		in (fun ys¹⁹⁴ -> [LH_C h¹⁸⁷ mappend_lh_₈(t¹⁴⁷, ys¹⁹⁴)]), _lh_writeItem_arg3²)})), edgePos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x³)))(writeItem_lh_₁((fun _lh_writeItem_arg2³ -> (fun _lh_writeItem_arg3³ -> case _lh_writeItem_arg2³ of {
//│ 	LeftBank  => mappend_lh_₈(
//│ 		let t¹⁸⁸ = 	
//│ 			let t¹⁸⁹ = 	
//│ 				let t¹⁹⁰ = 	
//│ 					let t¹⁹¹ = 	
//│ 						let t¹⁹² = 	
//│ 							let t¹⁹³ = 	
//│ 								let t¹⁹⁴ = 	
//│ 									let t¹⁹⁵ = 	
//│ 										let t¹⁹⁶ = 	
//│ 											let t¹⁹⁷ = 	
//│ 												let t¹⁹⁸ = 	
//│ 													let t¹⁹⁹ = 	
//│ 														let t²⁰⁰ = 	
//│ 															let t²⁰¹ = 	
//│ 																let t²⁰² = 	
//│ 																	let t²⁰³ = 	
//│ 																		let t²⁰⁴ = 	
//│ 																			let t²⁰⁵ = 	
//│ 																				let t²⁰⁶ = 	
//│ 																					let t²⁰⁷ = 	
//│ 																						let t²⁰⁸ = 	
//│ 																							let t²⁰⁹ = 	
//│ 																								let t²¹⁰ = 	
//│ 																									let t²¹¹ = 	
//│ 																										let t²¹² = 	
//│ 																											let t²¹³ = 	
//│ 																												let t²¹⁴ = 	
//│ 																													let t²¹⁵ = 	
//│ 																														let t²¹⁶ = 	
//│ 																															let t²¹⁷ = 	
//│ 																																let t²¹⁸ = 	
//│ 																																	let t²¹⁹ = (fun ys¹⁹⁵ -> ys¹⁹⁵)
//│ 																																	in let h¹⁸⁸ = '|'
//│ 																																	in (fun ys¹⁹⁶ -> [LH_C h¹⁸⁸ mappend_lh_₈(t²¹⁹, ys¹⁹⁶)])
//│ 																																in let h¹⁸⁹ = '|'
//│ 																																in (fun ys¹⁹⁷ -> [LH_C h¹⁸⁹ mappend_lh_₈(t²¹⁸, ys¹⁹⁷)])
//│ 																															in let h¹⁹⁰ = ' '
//│ 																															in (fun ys¹⁹⁸ -> [LH_C h¹⁹⁰ mappend_lh_₈(t²¹⁷, ys¹⁹⁸)])
//│ 																														in let h¹⁹¹ = ' '
//│ 																														in (fun ys¹⁹⁹ -> [LH_C h¹⁹¹ mappend_lh_₈(t²¹⁶, ys¹⁹⁹)])
//│ 																													in let h¹⁹² = ' '
//│ 																													in (fun ys²⁰⁰ -> [LH_C h¹⁹² mappend_lh_₈(t²¹⁵, ys²⁰⁰)])
//│ 																												in let h¹⁹³ = ' '
//│ 																												in (fun ys²⁰¹ -> [LH_C h¹⁹³ mappend_lh_₈(t²¹⁴, ys²⁰¹)])
//│ 																											in let h¹⁹⁴ = ' '
//│ 																											in (fun ys²⁰² -> [LH_C h¹⁹⁴ mappend_lh_₈(t²¹³, ys²⁰²)])
//│ 																										in let h¹⁹⁵ = ' '
//│ 																										in (fun ys²⁰³ -> [LH_C h¹⁹⁵ mappend_lh_₈(t²¹², ys²⁰³)])
//│ 																									in let h¹⁹⁶ = ' '
//│ 																									in (fun ys²⁰⁴ -> [LH_C h¹⁹⁶ mappend_lh_₈(t²¹¹, ys²⁰⁴)])
//│ 																								in let h¹⁹⁷ = ' '
//│ 																								in (fun ys²⁰⁵ -> [LH_C h¹⁹⁷ mappend_lh_₈(t²¹⁰, ys²⁰⁵)])
//│ 																							in let h¹⁹⁸ = ' '
//│ 																							in (fun ys²⁰⁶ -> [LH_C h¹⁹⁸ mappend_lh_₈(t²⁰⁹, ys²⁰⁶)])
//│ 																						in let h¹⁹⁹ = ' '
//│ 																						in (fun ys²⁰⁷ -> [LH_C h¹⁹⁹ mappend_lh_₈(t²⁰⁸, ys²⁰⁷)])
//│ 																					in let h²⁰⁰ = ' '
//│ 																					in (fun ys²⁰⁸ -> [LH_C h²⁰⁰ mappend_lh_₈(t²⁰⁷, ys²⁰⁸)])
//│ 																				in let h²⁰¹ = ' '
//│ 																				in (fun ys²⁰⁹ -> [LH_C h²⁰¹ mappend_lh_₈(t²⁰⁶, ys²⁰⁹)])
//│ 																			in let h²⁰² = ' '
//│ 																			in (fun ys²¹⁰ -> [LH_C h²⁰² mappend_lh_₈(t²⁰⁵, ys²¹⁰)])
//│ 																		in let h²⁰³ = ' '
//│ 																		in (fun ys²¹¹ -> [LH_C h²⁰³ mappend_lh_₈(t²⁰⁴, ys²¹¹)])
//│ 																	in let h²⁰⁴ = ' '
//│ 																	in (fun ys²¹² -> [LH_C h²⁰⁴ mappend_lh_₈(t²⁰³, ys²¹²)])
//│ 																in let h²⁰⁵ = ' '
//│ 																in (fun ys²¹³ -> [LH_C h²⁰⁵ mappend_lh_₈(t²⁰², ys²¹³)])
//│ 															in let h²⁰⁶ = ' '
//│ 															in (fun ys²¹⁴ -> [LH_C h²⁰⁶ mappend_lh_₈(t²⁰¹, ys²¹⁴)])
//│ 														in let h²⁰⁷ = ' '
//│ 														in (fun ys²¹⁵ -> [LH_C h²⁰⁷ mappend_lh_₈(t²⁰⁰, ys²¹⁵)])
//│ 													in let h²⁰⁸ = ' '
//│ 													in (fun ys²¹⁶ -> [LH_C h²⁰⁸ mappend_lh_₈(t¹⁹⁹, ys²¹⁶)])
//│ 												in let h²⁰⁹ = ' '
//│ 												in (fun ys²¹⁷ -> [LH_C h²⁰⁹ mappend_lh_₈(t¹⁹⁸, ys²¹⁷)])
//│ 											in let h²¹⁰ = '|'
//│ 											in (fun ys²¹⁸ -> [LH_C h²¹⁰ mappend_lh_₈(t¹⁹⁷, ys²¹⁸)])
//│ 										in let h²¹¹ = ' '
//│ 										in (fun ys²¹⁹ -> [LH_C h²¹¹ mappend_lh_₈(t¹⁹⁶, ys²¹⁹)])
//│ 									in let h²¹² = 'y'
//│ 									in (fun ys²²⁰ -> [LH_C h²¹² mappend_lh_₈(t¹⁹⁵, ys²²⁰)])
//│ 								in let h²¹³ = 'r'
//│ 								in (fun ys²²¹ -> [LH_C h²¹³ mappend_lh_₈(t¹⁹⁴, ys²²¹)])
//│ 							in let h²¹⁴ = 'r'
//│ 							in (fun ys²²² -> [LH_C h²¹⁴ mappend_lh_₈(t¹⁹³, ys²²²)])
//│ 						in let h²¹⁵ = 'a'
//│ 						in (fun ys²²³ -> [LH_C h²¹⁵ mappend_lh_₈(t¹⁹², ys²²³)])
//│ 					in let h²¹⁶ = 'L'
//│ 					in (fun ys²²⁴ -> [LH_C h²¹⁶ mappend_lh_₈(t¹⁹¹, ys²²⁴)])
//│ 				in let h²¹⁷ = ' '
//│ 				in (fun ys²²⁵ -> [LH_C h²¹⁷ mappend_lh_₈(t¹⁹⁰, ys²²⁵)])
//│ 			in let h²¹⁸ = ' '
//│ 			in (fun ys²²⁶ -> [LH_C h²¹⁸ mappend_lh_₈(t¹⁸⁹, ys²²⁶)])
//│ 		in let h²¹⁹ = ' '
//│ 		in (fun ys²²⁷ -> [LH_C h²¹⁹ mappend_lh_₈(t¹⁸⁸, ys²²⁷)]), _lh_writeItem_arg3³)
//│ 	| RightBank  => mappend_lh_₈(
//│ 		let t²²⁰ = 	
//│ 			let t²²¹ = 	
//│ 				let t²²² = 	
//│ 					let t²²³ = 	
//│ 						let t²²⁴ = 	
//│ 							let t²²⁵ = 	
//│ 								let t²²⁶ = 	
//│ 									let t²²⁷ = 	
//│ 										let t²²⁸ = 	
//│ 											let t²²⁹ = 	
//│ 												let t²³⁰ = 	
//│ 													let t²³¹ = 	
//│ 														let t²³² = 	
//│ 															let t²³³ = 	
//│ 																let t²³⁴ = 	
//│ 																	let t²³⁵ = 	
//│ 																		let t²³⁶ = 	
//│ 																			let t²³⁷ = 	
//│ 																				let t²³⁸ = 	
//│ 																					let t²³⁹ = 	
//│ 																						let t²⁴⁰ = 	
//│ 																							let t²⁴¹ = 	
//│ 																								let t²⁴² = 	
//│ 																									let t²⁴³ = 	
//│ 																										let t²⁴⁴ = 	
//│ 																											let t²⁴⁵ = 	
//│ 																												let t²⁴⁶ = 	
//│ 																													let t²⁴⁷ = 	
//│ 																														let t²⁴⁸ = 	
//│ 																															let t²⁴⁹ = 	
//│ 																																let t²⁵⁰ = 	
//│ 																																	let t²⁵¹ = 	
//│ 																																		let t²⁵² = 	
//│ 																																			let t²⁵³ = 	
//│ 																																				let t²⁵⁴ = 	
//│ 																																					let t²⁵⁵ = 	
//│ 																																						let t²⁵⁶ = 	
//│ 																																							let t²⁵⁷ = (fun ys²²⁸ -> ys²²⁸)
//│ 																																							in let h²²⁰ = '|'
//│ 																																							in (fun ys²²⁹ -> [LH_C h²²⁰ mappend_lh_₈(t²⁵⁷, ys²²⁹)])
//│ 																																						in let h²²¹ = 'y'
//│ 																																						in (fun ys²³⁰ -> [LH_C h²²¹ mappend_lh_₈(t²⁵⁶, ys²³⁰)])
//│ 																																					in let h²²² = 'r'
//│ 																																					in (fun ys²³¹ -> [LH_C h²²² mappend_lh_₈(t²⁵⁵, ys²³¹)])
//│ 																																				in let h²²³ = 'r'
//│ 																																				in (fun ys²³² -> [LH_C h²²³ mappend_lh_₈(t²⁵⁴, ys²³²)])
//│ 																																			in let h²²⁴ = 'a'
//│ 																																			in (fun ys²³³ -> [LH_C h²²⁴ mappend_lh_₈(t²⁵³, ys²³³)])
//│ 																																		in let h²²⁵ = 'L'
//│ 																																		in (fun ys²³⁴ -> [LH_C h²²⁵ mappend_lh_₈(t²⁵², ys²³⁴)])
//│ 																																	in let h²²⁶ = ' '
//│ 																																	in (fun ys²³⁵ -> [LH_C h²²⁶ mappend_lh_₈(t²⁵¹, ys²³⁵)])
//│ 																																in let h²²⁷ = '|'
//│ 																																in (fun ys²³⁶ -> [LH_C h²²⁷ mappend_lh_₈(t²⁵⁰, ys²³⁶)])
//│ 																															in let h²²⁸ = ' '
//│ 																															in (fun ys²³⁷ -> [LH_C h²²⁸ mappend_lh_₈(t²⁴⁹, ys²³⁷)])
//│ 																														in let h²²⁹ = ' '
//│ 																														in (fun ys²³⁸ -> [LH_C h²²⁹ mappend_lh_₈(t²⁴⁸, ys²³⁸)])
//│ 																													in let h²³⁰ = ' '
//│ 																													in (fun ys²³⁹ -> [LH_C h²³⁰ mappend_lh_₈(t²⁴⁷, ys²³⁹)])
//│ 																												in let h²³¹ = ' '
//│ 																												in (fun ys²⁴⁰ -> [LH_C h²³¹ mappend_lh_₈(t²⁴⁶, ys²⁴⁰)])
//│ 																											in let h²³² = ' '
//│ 																											in (fun ys²⁴¹ -> [LH_C h²³² mappend_lh_₈(t²⁴⁵, ys²⁴¹)])
//│ 																										in let h²³³ = ' '
//│ 																										in (fun ys²⁴² -> [LH_C h²³³ mappend_lh_₈(t²⁴⁴, ys²⁴²)])
//│ 																									in let h²³⁴ = ' '
//│ 																									in (fun ys²⁴³ -> [LH_C h²³⁴ mappend_lh_₈(t²⁴³, ys²⁴³)])
//│ 																								in let h²³⁵ = ' '
//│ 																								in (fun ys²⁴⁴ -> [LH_C h²³⁵ mappend_lh_₈(t²⁴², ys²⁴⁴)])
//│ 																							in let h²³⁶ = ' '
//│ 																							in (fun ys²⁴⁵ -> [LH_C h²³⁶ mappend_lh_₈(t²⁴¹, ys²⁴⁵)])
//│ 																						in let h²³⁷ = ' '
//│ 																						in (fun ys²⁴⁶ -> [LH_C h²³⁷ mappend_lh_₈(t²⁴⁰, ys²⁴⁶)])
//│ 																					in let h²³⁸ = ' '
//│ 																					in (fun ys²⁴⁷ -> [LH_C h²³⁸ mappend_lh_₈(t²³⁹, ys²⁴⁷)])
//│ 																				in let h²³⁹ = ' '
//│ 																				in (fun ys²⁴⁸ -> [LH_C h²³⁹ mappend_lh_₈(t²³⁸, ys²⁴⁸)])
//│ 																			in let h²⁴⁰ = ' '
//│ 																			in (fun ys²⁴⁹ -> [LH_C h²⁴⁰ mappend_lh_₈(t²³⁷, ys²⁴⁹)])
//│ 																		in let h²⁴¹ = ' '
//│ 																		in (fun ys²⁵⁰ -> [LH_C h²⁴¹ mappend_lh_₈(t²³⁶, ys²⁵⁰)])
//│ 																	in let h²⁴² = ' '
//│ 																	in (fun ys²⁵¹ -> [LH_C h²⁴² mappend_lh_₈(t²³⁵, ys²⁵¹)])
//│ 																in let h²⁴³ = ' '
//│ 																in (fun ys²⁵² -> [LH_C h²⁴³ mappend_lh_₈(t²³⁴, ys²⁵²)])
//│ 															in let h²⁴⁴ = ' '
//│ 															in (fun ys²⁵³ -> [LH_C h²⁴⁴ mappend_lh_₈(t²³³, ys²⁵³)])
//│ 														in let h²⁴⁵ = ' '
//│ 														in (fun ys²⁵⁴ -> [LH_C h²⁴⁵ mappend_lh_₈(t²³², ys²⁵⁴)])
//│ 													in let h²⁴⁶ = ' '
//│ 													in (fun ys²⁵⁵ -> [LH_C h²⁴⁶ mappend_lh_₈(t²³¹, ys²⁵⁵)])
//│ 												in let h²⁴⁷ = ' '
//│ 												in (fun ys²⁵⁶ -> [LH_C h²⁴⁷ mappend_lh_₈(t²³⁰, ys²⁵⁶)])
//│ 											in let h²⁴⁸ = '|'
//│ 											in (fun ys²⁵⁷ -> [LH_C h²⁴⁸ mappend_lh_₈(t²²⁹, ys²⁵⁷)])
//│ 										in let h²⁴⁹ = ' '
//│ 										in (fun ys²⁵⁸ -> [LH_C h²⁴⁹ mappend_lh_₈(t²²⁸, ys²⁵⁸)])
//│ 									in let h²⁵⁰ = ' '
//│ 									in (fun ys²⁵⁹ -> [LH_C h²⁵⁰ mappend_lh_₈(t²²⁷, ys²⁵⁹)])
//│ 								in let h²⁵¹ = ' '
//│ 								in (fun ys²⁶⁰ -> [LH_C h²⁵¹ mappend_lh_₈(t²²⁶, ys²⁶⁰)])
//│ 							in let h²⁵² = ' '
//│ 							in (fun ys²⁶¹ -> [LH_C h²⁵² mappend_lh_₈(t²²⁵, ys²⁶¹)])
//│ 						in let h²⁵³ = ' '
//│ 						in (fun ys²⁶² -> [LH_C h²⁵³ mappend_lh_₈(t²²⁴, ys²⁶²)])
//│ 					in let h²⁵⁴ = ' '
//│ 					in (fun ys²⁶³ -> [LH_C h²⁵⁴ mappend_lh_₈(t²²³, ys²⁶³)])
//│ 				in let h²⁵⁵ = ' '
//│ 				in (fun ys²⁶⁴ -> [LH_C h²⁵⁵ mappend_lh_₈(t²²², ys²⁶⁴)])
//│ 			in let h²⁵⁶ = ' '
//│ 			in (fun ys²⁶⁵ -> [LH_C h²⁵⁶ mappend_lh_₈(t²²¹, ys²⁶⁵)])
//│ 		in let h²⁵⁷ = ' '
//│ 		in (fun ys²⁶⁶ -> [LH_C h²⁵⁷ mappend_lh_₈(t²²⁰, ys²⁶⁶)]), _lh_writeItem_arg3³)})), larryPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x²)))(writeItem_lh_₁((fun _lh_writeItem_arg2⁴ -> (fun _lh_writeItem_arg3⁴ -> case _lh_writeItem_arg2⁴ of {
//│ 	LeftBank  => mappend_lh_₈(
//│ 		let t²⁵⁸ = 	
//│ 			let t²⁵⁹ = 	
//│ 				let t²⁶⁰ = 	
//│ 					let t²⁶¹ = 	
//│ 						let t²⁶² = 	
//│ 							let t²⁶³ = 	
//│ 								let t²⁶⁴ = 	
//│ 									let t²⁶⁵ = 	
//│ 										let t²⁶⁶ = 	
//│ 											let t²⁶⁷ = 	
//│ 												let t²⁶⁸ = 	
//│ 													let t²⁶⁹ = 	
//│ 														let t²⁷⁰ = 	
//│ 															let t²⁷¹ = 	
//│ 																let t²⁷² = 	
//│ 																	let t²⁷³ = 	
//│ 																		let t²⁷⁴ = 	
//│ 																			let t²⁷⁵ = 	
//│ 																				let t²⁷⁶ = 	
//│ 																					let t²⁷⁷ = 	
//│ 																						let t²⁷⁸ = 	
//│ 																							let t²⁷⁹ = 	
//│ 																								let t²⁸⁰ = 	
//│ 																									let t²⁸¹ = 	
//│ 																										let t²⁸² = 	
//│ 																											let t²⁸³ = 	
//│ 																												let t²⁸⁴ = 	
//│ 																													let t²⁸⁵ = 	
//│ 																														let t²⁸⁶ = 	
//│ 																															let t²⁸⁷ = 	
//│ 																																let t²⁸⁸ = 	
//│ 																																	let t²⁸⁹ = (fun ys²⁶⁷ -> ys²⁶⁷)
//│ 																																	in let h²⁵⁸ = '|'
//│ 																																	in (fun ys²⁶⁸ -> [LH_C h²⁵⁸ mappend_lh_₈(t²⁸⁹, ys²⁶⁸)])
//│ 																																in let h²⁵⁹ = '|'
//│ 																																in (fun ys²⁶⁹ -> [LH_C h²⁵⁹ mappend_lh_₈(t²⁸⁸, ys²⁶⁹)])
//│ 																															in let h²⁶⁰ = ' '
//│ 																															in (fun ys²⁷⁰ -> [LH_C h²⁶⁰ mappend_lh_₈(t²⁸⁷, ys²⁷⁰)])
//│ 																														in let h²⁶¹ = ' '
//│ 																														in (fun ys²⁷¹ -> [LH_C h²⁶¹ mappend_lh_₈(t²⁸⁶, ys²⁷¹)])
//│ 																													in let h²⁶² = ' '
//│ 																													in (fun ys²⁷² -> [LH_C h²⁶² mappend_lh_₈(t²⁸⁵, ys²⁷²)])
//│ 																												in let h²⁶³ = ' '
//│ 																												in (fun ys²⁷³ -> [LH_C h²⁶³ mappend_lh_₈(t²⁸⁴, ys²⁷³)])
//│ 																											in let h²⁶⁴ = ' '
//│ 																											in (fun ys²⁷⁴ -> [LH_C h²⁶⁴ mappend_lh_₈(t²⁸³, ys²⁷⁴)])
//│ 																										in let h²⁶⁵ = ' '
//│ 																										in (fun ys²⁷⁵ -> [LH_C h²⁶⁵ mappend_lh_₈(t²⁸², ys²⁷⁵)])
//│ 																									in let h²⁶⁶ = ' '
//│ 																									in (fun ys²⁷⁶ -> [LH_C h²⁶⁶ mappend_lh_₈(t²⁸¹, ys²⁷⁶)])
//│ 																								in let h²⁶⁷ = ' '
//│ 																								in (fun ys²⁷⁷ -> [LH_C h²⁶⁷ mappend_lh_₈(t²⁸⁰, ys²⁷⁷)])
//│ 																							in let h²⁶⁸ = ' '
//│ 																							in (fun ys²⁷⁸ -> [LH_C h²⁶⁸ mappend_lh_₈(t²⁷⁹, ys²⁷⁸)])
//│ 																						in let h²⁶⁹ = ' '
//│ 																						in (fun ys²⁷⁹ -> [LH_C h²⁶⁹ mappend_lh_₈(t²⁷⁸, ys²⁷⁹)])
//│ 																					in let h²⁷⁰ = ' '
//│ 																					in (fun ys²⁸⁰ -> [LH_C h²⁷⁰ mappend_lh_₈(t²⁷⁷, ys²⁸⁰)])
//│ 																				in let h²⁷¹ = ' '
//│ 																				in (fun ys²⁸¹ -> [LH_C h²⁷¹ mappend_lh_₈(t²⁷⁶, ys²⁸¹)])
//│ 																			in let h²⁷² = ' '
//│ 																			in (fun ys²⁸² -> [LH_C h²⁷² mappend_lh_₈(t²⁷⁵, ys²⁸²)])
//│ 																		in let h²⁷³ = ' '
//│ 																		in (fun ys²⁸³ -> [LH_C h²⁷³ mappend_lh_₈(t²⁷⁴, ys²⁸³)])
//│ 																	in let h²⁷⁴ = ' '
//│ 																	in (fun ys²⁸⁴ -> [LH_C h²⁷⁴ mappend_lh_₈(t²⁷³, ys²⁸⁴)])
//│ 																in let h²⁷⁵ = ' '
//│ 																in (fun ys²⁸⁵ -> [LH_C h²⁷⁵ mappend_lh_₈(t²⁷², ys²⁸⁵)])
//│ 															in let h²⁷⁶ = ' '
//│ 															in (fun ys²⁸⁶ -> [LH_C h²⁷⁶ mappend_lh_₈(t²⁷¹, ys²⁸⁶)])
//│ 														in let h²⁷⁷ = ' '
//│ 														in (fun ys²⁸⁷ -> [LH_C h²⁷⁷ mappend_lh_₈(t²⁷⁰, ys²⁸⁷)])
//│ 													in let h²⁷⁸ = ' '
//│ 													in (fun ys²⁸⁸ -> [LH_C h²⁷⁸ mappend_lh_₈(t²⁶⁹, ys²⁸⁸)])
//│ 												in let h²⁷⁹ = ' '
//│ 												in (fun ys²⁸⁹ -> [LH_C h²⁷⁹ mappend_lh_₈(t²⁶⁸, ys²⁸⁹)])
//│ 											in let h²⁸⁰ = '|'
//│ 											in (fun ys²⁹⁰ -> [LH_C h²⁸⁰ mappend_lh_₈(t²⁶⁷, ys²⁹⁰)])
//│ 										in let h²⁸¹ = ' '
//│ 										in (fun ys²⁹¹ -> [LH_C h²⁸¹ mappend_lh_₈(t²⁶⁶, ys²⁹¹)])
//│ 									in let h²⁸² = 'm'
//│ 									in (fun ys²⁹² -> [LH_C h²⁸² mappend_lh_₈(t²⁶⁵, ys²⁹²)])
//│ 								in let h²⁸³ = 'a'
//│ 								in (fun ys²⁹³ -> [LH_C h²⁸³ mappend_lh_₈(t²⁶⁴, ys²⁹³)])
//│ 							in let h²⁸⁴ = 'd'
//│ 							in (fun ys²⁹⁴ -> [LH_C h²⁸⁴ mappend_lh_₈(t²⁶³, ys²⁹⁴)])
//│ 						in let h²⁸⁵ = 'A'
//│ 						in (fun ys²⁹⁵ -> [LH_C h²⁸⁵ mappend_lh_₈(t²⁶², ys²⁹⁵)])
//│ 					in let h²⁸⁶ = ' '
//│ 					in (fun ys²⁹⁶ -> [LH_C h²⁸⁶ mappend_lh_₈(t²⁶¹, ys²⁹⁶)])
//│ 				in let h²⁸⁷ = ' '
//│ 				in (fun ys²⁹⁷ -> [LH_C h²⁸⁷ mappend_lh_₈(t²⁶⁰, ys²⁹⁷)])
//│ 			in let h²⁸⁸ = ' '
//│ 			in (fun ys²⁹⁸ -> [LH_C h²⁸⁸ mappend_lh_₈(t²⁵⁹, ys²⁹⁸)])
//│ 		in let h²⁸⁹ = ' '
//│ 		in (fun ys²⁹⁹ -> [LH_C h²⁸⁹ mappend_lh_₈(t²⁵⁸, ys²⁹⁹)]), _lh_writeItem_arg3⁴)
//│ 	| RightBank  => mappend_lh_₈(
//│ 		let t²⁹⁰ = 	
//│ 			let t²⁹¹ = 	
//│ 				let t²⁹² = 	
//│ 					let t²⁹³ = 	
//│ 						let t²⁹⁴ = 	
//│ 							let t²⁹⁵ = 	
//│ 								let t²⁹⁶ = 	
//│ 									let t²⁹⁷ = 	
//│ 										let t²⁹⁸ = 	
//│ 											let t²⁹⁹ = 	
//│ 												let t³⁰⁰ = 	
//│ 													let t³⁰¹ = 	
//│ 														let t³⁰² = 	
//│ 															let t³⁰³ = 	
//│ 																let t³⁰⁴ = 	
//│ 																	let t³⁰⁵ = 	
//│ 																		let t³⁰⁶ = 	
//│ 																			let t³⁰⁷ = 	
//│ 																				let t³⁰⁸ = 	
//│ 																					let t³⁰⁹ = 	
//│ 																						let t³¹⁰ = 	
//│ 																							let t³¹¹ = 	
//│ 																								let t³¹² = 	
//│ 																									let t³¹³ = 	
//│ 																										let t³¹⁴ = 	
//│ 																											let t³¹⁵ = 	
//│ 																												let t³¹⁶ = 	
//│ 																													let t³¹⁷ = 	
//│ 																														let t³¹⁸ = 	
//│ 																															let t³¹⁹ = 	
//│ 																																let t³²⁰ = 	
//│ 																																	let t³²¹ = 	
//│ 																																		let t³²² = 	
//│ 																																			let t³²³ = 	
//│ 																																				let t³²⁴ = 	
//│ 																																					let t³²⁵ = 	
//│ 																																						let t³²⁶ = (fun ys³⁰⁰ -> ys³⁰⁰)
//│ 																																						in let h²⁹⁰ = '|'
//│ 																																						in (fun ys³⁰¹ -> [LH_C h²⁹⁰ mappend_lh_₈(t³²⁶, ys³⁰¹)])
//│ 																																					in let h²⁹¹ = 'm'
//│ 																																					in (fun ys³⁰² -> [LH_C h²⁹¹ mappend_lh_₈(t³²⁵, ys³⁰²)])
//│ 																																				in let h²⁹² = 'a'
//│ 																																				in (fun ys³⁰³ -> [LH_C h²⁹² mappend_lh_₈(t³²⁴, ys³⁰³)])
//│ 																																			in let h²⁹³ = 'd'
//│ 																																			in (fun ys³⁰⁴ -> [LH_C h²⁹³ mappend_lh_₈(t³²³, ys³⁰⁴)])
//│ 																																		in let h²⁹⁴ = 'A'
//│ 																																		in (fun ys³⁰⁵ -> [LH_C h²⁹⁴ mappend_lh_₈(t³²², ys³⁰⁵)])
//│ 																																	in let h²⁹⁵ = ' '
//│ 																																	in (fun ys³⁰⁶ -> [LH_C h²⁹⁵ mappend_lh_₈(t³²¹, ys³⁰⁶)])
//│ 																																in let h²⁹⁶ = '|'
//│ 																																in (fun ys³⁰⁷ -> [LH_C h²⁹⁶ mappend_lh_₈(t³²⁰, ys³⁰⁷)])
//│ 																															in let h²⁹⁷ = ' '
//│ 																															in (fun ys³⁰⁸ -> [LH_C h²⁹⁷ mappend_lh_₈(t³¹⁹, ys³⁰⁸)])
//│ 																														in let h²⁹⁸ = ' '
//│ 																														in (fun ys³⁰⁹ -> [LH_C h²⁹⁸ mappend_lh_₈(t³¹⁸, ys³⁰⁹)])
//│ 																													in let h²⁹⁹ = ' '
//│ 																													in (fun ys³¹⁰ -> [LH_C h²⁹⁹ mappend_lh_₈(t³¹⁷, ys³¹⁰)])
//│ 																												in let h³⁰⁰ = ' '
//│ 																												in (fun ys³¹¹ -> [LH_C h³⁰⁰ mappend_lh_₈(t³¹⁶, ys³¹¹)])
//│ 																											in let h³⁰¹ = ' '
//│ 																											in (fun ys³¹² -> [LH_C h³⁰¹ mappend_lh_₈(t³¹⁵, ys³¹²)])
//│ 																										in let h³⁰² = ' '
//│ 																										in (fun ys³¹³ -> [LH_C h³⁰² mappend_lh_₈(t³¹⁴, ys³¹³)])
//│ 																									in let h³⁰³ = ' '
//│ 																									in (fun ys³¹⁴ -> [LH_C h³⁰³ mappend_lh_₈(t³¹³, ys³¹⁴)])
//│ 																								in let h³⁰⁴ = ' '
//│ 																								in (fun ys³¹⁵ -> [LH_C h³⁰⁴ mappend_lh_₈(t³¹², ys³¹⁵)])
//│ 																							in let h³⁰⁵ = ' '
//│ 																							in (fun ys³¹⁶ -> [LH_C h³⁰⁵ mappend_lh_₈(t³¹¹, ys³¹⁶)])
//│ 																						in let h³⁰⁶ = ' '
//│ 																						in (fun ys³¹⁷ -> [LH_C h³⁰⁶ mappend_lh_₈(t³¹⁰, ys³¹⁷)])
//│ 																					in let h³⁰⁷ = ' '
//│ 																					in (fun ys³¹⁸ -> [LH_C h³⁰⁷ mappend_lh_₈(t³⁰⁹, ys³¹⁸)])
//│ 																				in let h³⁰⁸ = ' '
//│ 																				in (fun ys³¹⁹ -> [LH_C h³⁰⁸ mappend_lh_₈(t³⁰⁸, ys³¹⁹)])
//│ 																			in let h³⁰⁹ = ' '
//│ 																			in (fun ys³²⁰ -> [LH_C h³⁰⁹ mappend_lh_₈(t³⁰⁷, ys³²⁰)])
//│ 																		in let h³¹⁰ = ' '
//│ 																		in (fun ys³²¹ -> [LH_C h³¹⁰ mappend_lh_₈(t³⁰⁶, ys³²¹)])
//│ 																	in let h³¹¹ = ' '
//│ 																	in (fun ys³²² -> [LH_C h³¹¹ mappend_lh_₈(t³⁰⁵, ys³²²)])
//│ 																in let h³¹² = ' '
//│ 																in (fun ys³²³ -> [LH_C h³¹² mappend_lh_₈(t³⁰⁴, ys³²³)])
//│ 															in let h³¹³ = ' '
//│ 															in (fun ys³²⁴ -> [LH_C h³¹³ mappend_lh_₈(t³⁰³, ys³²⁴)])
//│ 														in let h³¹⁴ = ' '
//│ 														in (fun ys³²⁵ -> [LH_C h³¹⁴ mappend_lh_₈(t³⁰², ys³²⁵)])
//│ 													in let h³¹⁵ = ' '
//│ 													in (fun ys³²⁶ -> [LH_C h³¹⁵ mappend_lh_₈(t³⁰¹, ys³²⁶)])
//│ 												in let h³¹⁶ = ' '
//│ 												in (fun ys³²⁷ -> [LH_C h³¹⁶ mappend_lh_₈(t³⁰⁰, ys³²⁷)])
//│ 											in let h³¹⁷ = '|'
//│ 											in (fun ys³²⁸ -> [LH_C h³¹⁷ mappend_lh_₈(t²⁹⁹, ys³²⁸)])
//│ 										in let h³¹⁸ = ' '
//│ 										in (fun ys³²⁹ -> [LH_C h³¹⁸ mappend_lh_₈(t²⁹⁸, ys³²⁹)])
//│ 									in let h³¹⁹ = ' '
//│ 									in (fun ys³³⁰ -> [LH_C h³¹⁹ mappend_lh_₈(t²⁹⁷, ys³³⁰)])
//│ 								in let h³²⁰ = ' '
//│ 								in (fun ys³³¹ -> [LH_C h³²⁰ mappend_lh_₈(t²⁹⁶, ys³³¹)])
//│ 							in let h³²¹ = ' '
//│ 							in (fun ys³³² -> [LH_C h³²¹ mappend_lh_₈(t²⁹⁵, ys³³²)])
//│ 						in let h³²² = ' '
//│ 						in (fun ys³³³ -> [LH_C h³²² mappend_lh_₈(t²⁹⁴, ys³³³)])
//│ 					in let h³²³ = ' '
//│ 					in (fun ys³³⁴ -> [LH_C h³²³ mappend_lh_₈(t²⁹³, ys³³⁴)])
//│ 				in let h³²⁴ = ' '
//│ 				in (fun ys³³⁵ -> [LH_C h³²⁴ mappend_lh_₈(t²⁹², ys³³⁵)])
//│ 			in let h³²⁵ = ' '
//│ 			in (fun ys³³⁶ -> [LH_C h³²⁵ mappend_lh_₈(t²⁹¹, ys³³⁶)])
//│ 		in let h³²⁶ = ' '
//│ 		in (fun ys³³⁷ -> [LH_C h³²⁶ mappend_lh_₈(t²⁹⁰, ys³³⁷)]), _lh_writeItem_arg3⁴)})), adamPos_lh_₃(_lh_writeState_arg1⁰), _lh_funcomp_x¹)))((fun s¹ -> mappend_lh_₈(
//│ 	let t³²⁷ = 	
//│ 		let t³²⁸ = 	
//│ 			let t³²⁹ = 	
//│ 				let t³³⁰ = 	
//│ 					let t³³¹ = 	
//│ 						let t³³² = 	
//│ 							let t³³³ = 	
//│ 								let t³³⁴ = 	
//│ 									let t³³⁵ = 	
//│ 										let t³³⁶ = 	
//│ 											let t³³⁷ = 	
//│ 												let t³³⁸ = 	
//│ 													let t³³⁹ = 	
//│ 														let t³⁴⁰ = 	
//│ 															let t³⁴¹ = 	
//│ 																let t³⁴² = 	
//│ 																	let t³⁴³ = 	
//│ 																		let t³⁴⁴ = 	
//│ 																			let t³⁴⁵ = 	
//│ 																				let t³⁴⁶ = 	
//│ 																					let t³⁴⁷ = 	
//│ 																						let t³⁴⁸ = 	
//│ 																							let t³⁴⁹ = 	
//│ 																								let t³⁵⁰ = 	
//│ 																									let t³⁵¹ = 	
//│ 																										let t³⁵² = 	
//│ 																											let t³⁵³ = 	
//│ 																												let t³⁵⁴ = 	
//│ 																													let t³⁵⁵ = 	
//│ 																														let t³⁵⁶ = 	
//│ 																															let t³⁵⁷ = 	
//│ 																																let t³⁵⁸ = 	
//│ 																																	let t³⁵⁹ = 	
//│ 																																		let t³⁶⁰ = 	
//│ 																																			let t³⁶¹ = 	
//│ 																																				let t³⁶² = 	
//│ 																																					let t³⁶³ = 	
//│ 																																						let t³⁶⁴ = 	
//│ 																																							let t³⁶⁵ = 	
//│ 																																								let t³⁶⁶ = 	
//│ 																																									let t³⁶⁷ = (fun ys³³⁸ -> ys³³⁸)
//│ 																																									in let h³²⁷ = '|'
//│ 																																									in (fun ys³³⁹ -> [LH_C h³²⁷ mappend_lh_₈(t³⁶⁷, ys³³⁹)])
//│ 																																								in let h³²⁸ = '-'
//│ 																																								in (fun ys³⁴⁰ -> [LH_C h³²⁸ mappend_lh_₈(t³⁶⁶, ys³⁴⁰)])
//│ 																																							in let h³²⁹ = '-'
//│ 																																							in (fun ys³⁴¹ -> [LH_C h³²⁹ mappend_lh_₈(t³⁶⁵, ys³⁴¹)])
//│ 																																						in let h³³⁰ = '-'
//│ 																																						in (fun ys³⁴² -> [LH_C h³³⁰ mappend_lh_₈(t³⁶⁴, ys³⁴²)])
//│ 																																					in let h³³¹ = '-'
//│ 																																					in (fun ys³⁴³ -> [LH_C h³³¹ mappend_lh_₈(t³⁶³, ys³⁴³)])
//│ 																																				in let h³³² = '-'
//│ 																																				in (fun ys³⁴⁴ -> [LH_C h³³² mappend_lh_₈(t³⁶², ys³⁴⁴)])
//│ 																																			in let h³³³ = '-'
//│ 																																			in (fun ys³⁴⁵ -> [LH_C h³³³ mappend_lh_₈(t³⁶¹, ys³⁴⁵)])
//│ 																																		in let h³³⁴ = '-'
//│ 																																		in (fun ys³⁴⁶ -> [LH_C h³³⁴ mappend_lh_₈(t³⁶⁰, ys³⁴⁶)])
//│ 																																	in let h³³⁵ = '-'
//│ 																																	in (fun ys³⁴⁷ -> [LH_C h³³⁵ mappend_lh_₈(t³⁵⁹, ys³⁴⁷)])
//│ 																																in let h³³⁶ = '-'
//│ 																																in (fun ys³⁴⁸ -> [LH_C h³³⁶ mappend_lh_₈(t³⁵⁸, ys³⁴⁸)])
//│ 																															in let h³³⁷ = '-'
//│ 																															in (fun ys³⁴⁹ -> [LH_C h³³⁷ mappend_lh_₈(t³⁵⁷, ys³⁴⁹)])
//│ 																														in let h³³⁸ = '-'
//│ 																														in (fun ys³⁵⁰ -> [LH_C h³³⁸ mappend_lh_₈(t³⁵⁶, ys³⁵⁰)])
//│ 																													in let h³³⁹ = '-'
//│ 																													in (fun ys³⁵¹ -> [LH_C h³³⁹ mappend_lh_₈(t³⁵⁵, ys³⁵¹)])
//│ 																												in let h³⁴⁰ = '-'
//│ 																												in (fun ys³⁵² -> [LH_C h³⁴⁰ mappend_lh_₈(t³⁵⁴, ys³⁵²)])
//│ 																											in let h³⁴¹ = '-'
//│ 																											in (fun ys³⁵³ -> [LH_C h³⁴¹ mappend_lh_₈(t³⁵³, ys³⁵³)])
//│ 																										in let h³⁴² = '-'
//│ 																										in (fun ys³⁵⁴ -> [LH_C h³⁴² mappend_lh_₈(t³⁵², ys³⁵⁴)])
//│ 																									in let h³⁴³ = '-'
//│ 																									in (fun ys³⁵⁵ -> [LH_C h³⁴³ mappend_lh_₈(t³⁵¹, ys³⁵⁵)])
//│ 																								in let h³⁴⁴ = '-'
//│ 																								in (fun ys³⁵⁶ -> [LH_C h³⁴⁴ mappend_lh_₈(t³⁵⁰, ys³⁵⁶)])
//│ 																							in let h³⁴⁵ = '-'
//│ 																							in (fun ys³⁵⁷ -> [LH_C h³⁴⁵ mappend_lh_₈(t³⁴⁹, ys³⁵⁷)])
//│ 																						in let h³⁴⁶ = '-'
//│ 																						in (fun ys³⁵⁸ -> [LH_C h³⁴⁶ mappend_lh_₈(t³⁴⁸, ys³⁵⁸)])
//│ 																					in let h³⁴⁷ = '-'
//│ 																					in (fun ys³⁵⁹ -> [LH_C h³⁴⁷ mappend_lh_₈(t³⁴⁷, ys³⁵⁹)])
//│ 																				in let h³⁴⁸ = '-'
//│ 																				in (fun ys³⁶⁰ -> [LH_C h³⁴⁸ mappend_lh_₈(t³⁴⁶, ys³⁶⁰)])
//│ 																			in let h³⁴⁹ = '-'
//│ 																			in (fun ys³⁶¹ -> [LH_C h³⁴⁹ mappend_lh_₈(t³⁴⁵, ys³⁶¹)])
//│ 																		in let h³⁵⁰ = '-'
//│ 																		in (fun ys³⁶² -> [LH_C h³⁵⁰ mappend_lh_₈(t³⁴⁴, ys³⁶²)])
//│ 																	in let h³⁵¹ = '-'
//│ 																	in (fun ys³⁶³ -> [LH_C h³⁵¹ mappend_lh_₈(t³⁴³, ys³⁶³)])
//│ 																in let h³⁵² = '-'
//│ 																in (fun ys³⁶⁴ -> [LH_C h³⁵² mappend_lh_₈(t³⁴², ys³⁶⁴)])
//│ 															in let h³⁵³ = '-'
//│ 															in (fun ys³⁶⁵ -> [LH_C h³⁵³ mappend_lh_₈(t³⁴¹, ys³⁶⁵)])
//│ 														in let h³⁵⁴ = '-'
//│ 														in (fun ys³⁶⁶ -> [LH_C h³⁵⁴ mappend_lh_₈(t³⁴⁰, ys³⁶⁶)])
//│ 													in let h³⁵⁵ = '-'
//│ 													in (fun ys³⁶⁷ -> [LH_C h³⁵⁵ mappend_lh_₈(t³³⁹, ys³⁶⁷)])
//│ 												in let h³⁵⁶ = '-'
//│ 												in (fun ys³⁶⁸ -> [LH_C h³⁵⁶ mappend_lh_₈(t³³⁸, ys³⁶⁸)])
//│ 											in let h³⁵⁷ = '-'
//│ 											in (fun ys³⁶⁹ -> [LH_C h³⁵⁷ mappend_lh_₈(t³³⁷, ys³⁶⁹)])
//│ 										in let h³⁵⁸ = '-'
//│ 										in (fun ys³⁷⁰ -> [LH_C h³⁵⁸ mappend_lh_₈(t³³⁶, ys³⁷⁰)])
//│ 									in let h³⁵⁹ = '-'
//│ 									in (fun ys³⁷¹ -> [LH_C h³⁵⁹ mappend_lh_₈(t³³⁵, ys³⁷¹)])
//│ 								in let h³⁶⁰ = '-'
//│ 								in (fun ys³⁷² -> [LH_C h³⁶⁰ mappend_lh_₈(t³³⁴, ys³⁷²)])
//│ 							in let h³⁶¹ = '-'
//│ 							in (fun ys³⁷³ -> [LH_C h³⁶¹ mappend_lh_₈(t³³³, ys³⁷³)])
//│ 						in let h³⁶² = '-'
//│ 						in (fun ys³⁷⁴ -> [LH_C h³⁶² mappend_lh_₈(t³³², ys³⁷⁴)])
//│ 					in let h³⁶³ = '-'
//│ 					in (fun ys³⁷⁵ -> [LH_C h³⁶³ mappend_lh_₈(t³³¹, ys³⁷⁵)])
//│ 				in let h³⁶⁴ = '-'
//│ 				in (fun ys³⁷⁶ -> [LH_C h³⁶⁴ mappend_lh_₈(t³³⁰, ys³⁷⁶)])
//│ 			in let h³⁶⁵ = '-'
//│ 			in (fun ys³⁷⁷ -> [LH_C h³⁶⁵ mappend_lh_₈(t³²⁹, ys³⁷⁷)])
//│ 		in let h³⁶⁶ = '-'
//│ 		in (fun ys³⁷⁸ -> [LH_C h³⁶⁶ mappend_lh_₈(t³²⁸, ys³⁷⁸)])
//│ 	in let h³⁶⁷ = '-'
//│ 	in (fun ys³⁷⁹ -> [LH_C h³⁶⁷ mappend_lh_₈(t³²⁷, ys³⁷⁹)]), s¹))(_lh_funcomp_x⁰))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
