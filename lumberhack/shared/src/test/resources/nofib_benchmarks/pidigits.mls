:NewParser
:ParseOnly

// pidgits n = 0 % (0 # (1,0,1)) where
//   i%ds
//      | i >= n = []
//      | True = (concat h ++ "\t:" ++ show j ++ "\n") ++ j%t
//      where k = i+10;
//            j = min n k;
//            (h,t) | k > n = (take (n`mod`10) ds ++ replicate (k-n) " ",[])
//                  | True = splitAt 10 ds
//   j # s
//      | n>a || r+n>=d = k # t
//      | True = show q : k # (n*10,(a-(q*d))*10,d)
//      where k = j+1; 
//            t@(n,a,d) = k&s; 
//            (q,r) = (n*3+a) `divMod` d
//   j&(n,a,d) = (n*j,(a+n*2)*y,d*y) where y=(j*2+1)

:lhInHaskell
:lhGenOCaml
drop_lz n ls = if n > 0 then lazy (case (force ls) of { [] -> []; (h:t) -> force (drop_lz (n - 1) t) }) else ls
splitAt_lz n xs = (take_lz n xs, drop_lz n xs)
min a b = if a > b then b else a
replicate n x = if n > 0 then (x:(replicate (n - 1) x)) else []
divmod a b = ((a `div` b), (a `mod` b))
percOp i ds n =
  if i >= n then
    []
  else
    let k = (i + 10) in
          let j = (min n k) in
                case (if k > n then ((take_lz (n `mod` 10) ds) ++ (replicate (k-n) " "), (lazy [])) else (splitAt_lz 10 ds)) of {
                  (h, t) -> (concat h) ++ ("t:" ++ ((string_of_int j) ++ "n")) ++ (percOp j t n)
                }
hashOp j s =
  lazy (let k = j + 1 in
      case (ampOp k s) of {
        (n, a, d) -> case (divmod ((n * 3) + a) d) of {
          (q, r) -> if ((n > a) || ((r + n) >= d)) then (force (hashOp k (n, a, d))) else ((string_of_int q) : (hashOp k (n*10, (a-(q*d))*10, d)))
        }
      })
ampOp j (n,a,d) = let y = ((j * 2) + 1) in (n * j, (a + (n * 2)) * y, d * y)
pidgits n = percOp 0 (hashOp 0 (1,0,1)) n
testPiDigits_nofib n = pidgits n
testPiDigits_nofib $ primId 5000
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testPiDigits_nofib₀^1406(primId⁰(5000))
//│ def ampOp₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = case _lh_ampOp_arg2¹ of {
//│ 	LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 		let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 		in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 	| _  => error⁰}
//│ def concat₀(lss¹) = case lss¹ of {
//│ 	LH_C h²⁶ t²⁸ => mappend₀^1355(h²⁶, concat₀^1358(t²⁸))
//│ 	| LH_N  => [LH_N]}
//│ def divmod₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ def drop_lz₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = if (_lh_drop_lz_arg1¹ > 0) then lazy⁰(
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_drop_lz_arg2¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀^1049((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹))
//│ 		| _  => error⁰}) else _lh_drop_lz_arg2¹
//│ def hashOp₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = lazy⁰(
//│ 	let k³ = (_lh_hashOp_arg1¹ + 1)
//│ 	in let _lh_matchIdent⁶ = ampOp₀^1236(k³, _lh_hashOp_arg2¹)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 			let _lh_matchIdent⁷ = divmod₀^1242(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 			in case _lh_matchIdent⁷ of {
//│ 				LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀^1274(k³, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀^1286(k³, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]
//│ 				| _  => error⁰}
//│ 		| _  => error⁰})
//│ def mappend₀(xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C h²⁵ t²⁷ => [LH_C h²⁵ mappend₀^1344(t²⁷, ys¹³)]
//│ 	| LH_N  => ys¹³}
//│ def mappend₁(xs¹⁰, ys¹⁰) = case xs¹⁰ of {
//│ 	LH_C h²¹ t²³ => [LH_C h²¹ mappend₁^1133(t²³, ys¹⁰)]
//│ 	| LH_N  => ys¹⁰}
//│ def mappend₂(xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C h²³ t²⁵ => [LH_C h²³ mappend₂^1198(t²⁵, ys¹¹)]
//│ 	| LH_N  => ys¹¹}
//│ def mappend₃(xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C h²⁰ t²² => [LH_C h²⁰ mappend₃^1121(t²², ys⁹)]
//│ 	| LH_N  => ys⁹}
//│ def mappend₄(xs¹², ys¹²) = case xs¹² of {
//│ 	LH_C h²⁴ t²⁶ => [LH_C h²⁴ mappend₄^1210(t²⁶, ys¹²)]
//│ 	| LH_N  => ys¹²}
//│ def mappend₅(xs¹⁴, ys¹⁴) = case xs¹⁴ of {
//│ 	LH_C h²⁸ t³⁰ => [LH_C h²⁸ mappend₅^1396(t³⁰, ys¹⁴)]
//│ 	| LH_N  => ys¹⁴}
//│ def min₀(_lh_min_arg1¹, _lh_min_arg2¹) = if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ def percOp₀(_lh_percOp_arg1¹, _lh_percOp_arg2¹, _lh_percOp_arg3¹) = if (_lh_percOp_arg1¹ >= _lh_percOp_arg3¹) then [LH_N] else 
//│ 	let k² = (_lh_percOp_arg1¹ + 10)
//│ 	in let j¹ = min₀^951(_lh_percOp_arg3¹, k²)
//│ 	in let _lh_matchIdent⁴ = if (k² > _lh_percOp_arg3¹) then [LH_P2 mappend₁^961(take_lz₁^962((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀^972((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz₀^988(10, _lh_percOp_arg2¹)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂^995(mappend₃^996(concat₀^997(_lh_percOp_LH_P2_0¹), mappend₄^1001([LH_C 't' [LH_C ':' [LH_N]]], mappend₅^1008(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀^1020(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹))
//│ 		| _  => error⁰}
//│ def pidgits₀(_lh_pidgits_arg1¹) = percOp₀^1168(0, hashOp₀^1171(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ def replicate₀(_lh_replicate_arg1¹, _lh_replicate_arg2¹) = if (_lh_replicate_arg1¹ > 0) then [LH_C _lh_replicate_arg2¹ replicate₀^1328((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)] else [LH_N]
//│ def splitAt_lz₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = [LH_P2 take_lz₀^1183(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀^1188(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ def take_lz₀(n⁵, ls²⁰) = if (n⁵ > 0) then case force⁰(ls²⁰) of {
//│ 	LH_C h²⁷ t²⁹ => [LH_C h²⁷ take_lz₀^1378((n⁵ - 1), t²⁹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz₁(n⁴, ls¹⁹) = if (n⁴ > 0) then case force⁰(ls¹⁹) of {
//│ 	LH_C h²² t²⁴ => [LH_C h²² take_lz₁^1152((n⁴ - 1), t²⁴)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testPiDigits_nofib₀(_lh_testPiDigits_nofib_arg1¹) = pidgits₀^1365(_lh_testPiDigits_nofib_arg1¹)
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec ampOp_d0 _lh_ampOp_arg1_1 _lh_ampOp_arg2_1 =
//│ 		  (match _lh_ampOp_arg2_1 with
//│ 		    | `LH_P3(_lh_ampOp_LH_P3_0_1, _lh_ampOp_LH_P3_1_1, _lh_ampOp_LH_P3_2_1) -> 
//│ 		      (let rec y_1 = ((_lh_ampOp_arg1_1 * 2) + 1) in
//│ 		        (`LH_P3((_lh_ampOp_LH_P3_0_1 * _lh_ampOp_arg1_1), ((_lh_ampOp_LH_P3_1_1 + (_lh_ampOp_LH_P3_0_1 * 2)) * y_1), (_lh_ampOp_LH_P3_2_1 * y_1))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and concat_d0 lss_1 =
//│ 		  (match lss_1 with
//│ 		    | `LH_C(h_2_6, t_2_8) -> 
//│ 		      ((mappend_d0 h_2_6) (concat_d0 t_2_8))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and divmod_d0 _lh_divmod_arg1_1 _lh_divmod_arg2_1 =
//│ 		  (`LH_P2((_lh_divmod_arg1_1 / _lh_divmod_arg2_1), (_lh_divmod_arg1_1 mod _lh_divmod_arg2_1)))
//│ 		and drop_lz_d0 _lh_drop_lz_arg1_1 _lh_drop_lz_arg2_1 =
//│ 		  (if (_lh_drop_lz_arg1_1 > 0) then
//│ 		    (lazy (let rec _lh_matchIdent_5 = (Lazy.force _lh_drop_lz_arg2_1) in
//│ 		      (match _lh_matchIdent_5 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_N)
//│ 		        | `LH_C(_lh_drop_lz_LH_C_0_1, _lh_drop_lz_LH_C_1_1) -> 
//│ 		          (Lazy.force ((drop_lz_d0 (_lh_drop_lz_arg1_1 - 1)) _lh_drop_lz_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		  else
//│ 		    _lh_drop_lz_arg2_1)
//│ 		and hashOp_d0 _lh_hashOp_arg1_1 _lh_hashOp_arg2_1 =
//│ 		  (lazy (let rec k_3 = (_lh_hashOp_arg1_1 + 1) in
//│ 		    (let rec _lh_matchIdent_6 = ((ampOp_d0 k_3) _lh_hashOp_arg2_1) in
//│ 		      (match _lh_matchIdent_6 with
//│ 		        | `LH_P3(_lh_hashOp_LH_P3_0_1, _lh_hashOp_LH_P3_1_1, _lh_hashOp_LH_P3_2_1) -> 
//│ 		          (let rec _lh_matchIdent_7 = ((divmod_d0 ((_lh_hashOp_LH_P3_0_1 * 3) + _lh_hashOp_LH_P3_1_1)) _lh_hashOp_LH_P3_2_1) in
//│ 		            (match _lh_matchIdent_7 with
//│ 		              | `LH_P2(_lh_hashOp_LH_P2_0_1, _lh_hashOp_LH_P2_1_1) -> 
//│ 		                (if ((_lh_hashOp_LH_P3_0_1 > _lh_hashOp_LH_P3_1_1) || ((_lh_hashOp_LH_P2_1_1 + _lh_hashOp_LH_P3_0_1) >= _lh_hashOp_LH_P3_2_1)) then
//│ 		                  (Lazy.force ((hashOp_d0 k_3) (`LH_P3(_lh_hashOp_LH_P3_0_1, _lh_hashOp_LH_P3_1_1, _lh_hashOp_LH_P3_2_1))))
//│ 		                else
//│ 		                  (`LH_C((string_of_int _lh_hashOp_LH_P2_0_1), ((hashOp_d0 k_3) (`LH_P3((_lh_hashOp_LH_P3_0_1 * 10), ((_lh_hashOp_LH_P3_1_1 - (_lh_hashOp_LH_P2_0_1 * _lh_hashOp_LH_P3_2_1)) * 10), _lh_hashOp_LH_P3_2_1))))))
//│ 		              | _ -> 
//│ 		                (failwith "error")))
//│ 		        | _ -> 
//│ 		          (failwith "error")))))
//│ 		and mappend_d0 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(h_2_5, t_2_7) -> 
//│ 		      (`LH_C(h_2_5, ((mappend_d0 t_2_7) ys_1_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_3)
//│ 		and mappend_d1 xs_1_0 ys_1_0 =
//│ 		  (match xs_1_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (`LH_C(h_2_1, ((mappend_d1 t_2_3) ys_1_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_0)
//│ 		and mappend_d2 xs_1_1 ys_1_1 =
//│ 		  (match xs_1_1 with
//│ 		    | `LH_C(h_2_3, t_2_5) -> 
//│ 		      (`LH_C(h_2_3, ((mappend_d2 t_2_5) ys_1_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_1)
//│ 		and mappend_d3 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C(h_2_0, ((mappend_d3 t_2_2) ys_9)))
//│ 		    | `LH_N -> 
//│ 		      ys_9)
//│ 		and mappend_d4 xs_1_2 ys_1_2 =
//│ 		  (match xs_1_2 with
//│ 		    | `LH_C(h_2_4, t_2_6) -> 
//│ 		      (`LH_C(h_2_4, ((mappend_d4 t_2_6) ys_1_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_2)
//│ 		and mappend_d5 xs_1_4 ys_1_4 =
//│ 		  (match xs_1_4 with
//│ 		    | `LH_C(h_2_8, t_3_0) -> 
//│ 		      (`LH_C(h_2_8, ((mappend_d5 t_3_0) ys_1_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_4)
//│ 		and min_d0 _lh_min_arg1_1 _lh_min_arg2_1 =
//│ 		  (if (_lh_min_arg1_1 > _lh_min_arg2_1) then
//│ 		    _lh_min_arg2_1
//│ 		  else
//│ 		    _lh_min_arg1_1)
//│ 		and percOp_d0 _lh_percOp_arg1_1 _lh_percOp_arg2_1 _lh_percOp_arg3_1 =
//│ 		  (if (_lh_percOp_arg1_1 >= _lh_percOp_arg3_1) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (let rec k_2 = (_lh_percOp_arg1_1 + 10) in
//│ 		      (let rec j_1 = ((min_d0 _lh_percOp_arg3_1) k_2) in
//│ 		        (let rec _lh_matchIdent_4 = (if (k_2 > _lh_percOp_arg3_1) then
//│ 		          (`LH_P2(((mappend_d1 ((take_lz_d1 (_lh_percOp_arg3_1 mod 10)) _lh_percOp_arg2_1)) ((replicate_d0 (k_2 - _lh_percOp_arg3_1)) (`LH_C(' ', (`LH_N))))), (lazy (`LH_N))))
//│ 		        else
//│ 		          ((splitAt_lz_d0 10) _lh_percOp_arg2_1)) in
//│ 		          (match _lh_matchIdent_4 with
//│ 		            | `LH_P2(_lh_percOp_LH_P2_0_1, _lh_percOp_LH_P2_1_1) -> 
//│ 		              ((mappend_d2 ((mappend_d3 (concat_d0 _lh_percOp_LH_P2_0_1)) ((mappend_d4 (`LH_C('t', (`LH_C(':', (`LH_N)))))) ((mappend_d5 (string_of_int j_1)) (`LH_C('n', (`LH_N))))))) (((percOp_d0 j_1) _lh_percOp_LH_P2_1_1) _lh_percOp_arg3_1))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))))
//│ 		and pidgits_d0 _lh_pidgits_arg1_1 =
//│ 		  (((percOp_d0 0) ((hashOp_d0 0) (`LH_P3(1, 0, 1)))) _lh_pidgits_arg1_1)
//│ 		and replicate_d0 _lh_replicate_arg1_1 _lh_replicate_arg2_1 =
//│ 		  (if (_lh_replicate_arg1_1 > 0) then
//│ 		    (`LH_C(_lh_replicate_arg2_1, ((replicate_d0 (_lh_replicate_arg1_1 - 1)) _lh_replicate_arg2_1)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and splitAt_lz_d0 _lh_splitAt_lz_arg1_1 _lh_splitAt_lz_arg2_1 =
//│ 		  (`LH_P2(((take_lz_d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1), ((drop_lz_d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1)))
//│ 		and take_lz_d0 n_5 ls_2_0 =
//│ 		  (if (n_5 > 0) then
//│ 		    (match (Lazy.force ls_2_0) with
//│ 		      | `LH_C(h_2_7, t_2_9) -> 
//│ 		        (`LH_C(h_2_7, ((take_lz_d0 (n_5 - 1)) t_2_9)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take_lz_d1 n_4 ls_1_9 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match (Lazy.force ls_1_9) with
//│ 		      | `LH_C(h_2_2, t_2_4) -> 
//│ 		        (`LH_C(h_2_2, ((take_lz_d1 (n_4 - 1)) t_2_4)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testPiDigits_nofib_d0 _lh_testPiDigits_nofib_arg1_1 =
//│ 		  (pidgits_d0 _lh_testPiDigits_nofib_arg1_1);;
//│ 		(testPiDigits_nofib_d0 5000)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPiDigits_nofib₀^1406]
//│ 	[testPiDigits_nofib₀^1406 · pidgits₀^1365]
//│ 		[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171] (hopeless to continue)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · ampOp₀^1236] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · divmod₀^1242] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · hashOp₀^1274] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · hashOp₀^1286] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171] (using original def)
//│ 		[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168]
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · concat₀^1358] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · mappend₀^1355] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · mappend₀^1355 · mappend₀^1344] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · mappend₀^1355] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₁^961] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₁^961 · mappend₁^1133] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₁^961] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₂^995]
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₂^995 · mappend₂^1198] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₂^995] (only one)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₃^996] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₃^996 · mappend₃^1121] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₃^996] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₄^1001] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₄^1001 · mappend₄^1210] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₄^1001] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₅^1008] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₅^1008 · mappend₅^1396] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₅^1008] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · min₀^951] (hopeless to continue)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · concat₀^1358] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · mappend₀^1355] (using original def)
//│ 						[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · mappend₀^1355 · mappend₀^1344] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · mappend₀^1355] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₁^961] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₁^961 · mappend₁^1133] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₁^961] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₂^995] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₂^995 · mappend₂^1198] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₂^995] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₃^996] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₃^996 · mappend₃^1121] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₃^996] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₄^1001] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₄^1001 · mappend₄^1210] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₄^1001] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₅^1008] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₅^1008 · mappend₅^1396] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₅^1008] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · min₀^951] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · percOp₀^1020] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · replicate₀^972] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · replicate₀^972 · replicate₀^1328] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · replicate₀^972] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 						[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · drop_lz₀^1188 · drop_lz₀^1049] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 						[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · take_lz₀^1183 · take_lz₀^1378] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · take_lz₁^962] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · take_lz₁^962 · take_lz₁^1152] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · take_lz₁^962] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · replicate₀^972] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · replicate₀^972 · replicate₀^1328] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · replicate₀^972] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · drop_lz₀^1188 · drop_lz₀^1049] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · take_lz₀^1183 · take_lz₀^1378] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · take_lz₁^962] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · take_lz₁^962 · take_lz₁^1152] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · take_lz₁^962] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPiDigits_nofib₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀(_lh_testPiDigits_nofib_arg1¹) = 
//│ 	pidgits₀₀(_lh_testPiDigits_nofib_arg1¹)
//│ 	where
//│ 	def pidgits₀₀(_lh_pidgits_arg1¹) = 
//│ 		percOp₀₀(0, hashOp₀₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ 		where
//│ 		def hashOp₀₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = 
//│ 			lazy⁰(
//│ 				let k⁴ = (_lh_hashOp_arg1¹ + 1)
//│ 				in let _lh_matchIdent⁷ = ampOp₀₀(k⁴, _lh_hashOp_arg2¹)
//│ 				in case _lh_matchIdent⁷ of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 						let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 						in case _lh_matchIdent⁸ of {
//│ 							LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]
//│ 							| _  => error⁰}
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp₀₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = 
//│ 				case _lh_ampOp_arg2¹ of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 					| _  => error⁰}
//│ 			def divmod₀₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = 
//│ 				[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ 		def percOp₀₀(_lh_percOp_arg1², _lh_percOp_arg2², _lh_percOp_arg3²) = 
//│ 			if (_lh_percOp_arg1² >= _lh_percOp_arg3²) then [LH_N] else 
//│ 				let k³ = (_lh_percOp_arg1² + 10)
//│ 				in let j² = min₀₀(_lh_percOp_arg3², k³)
//│ 				in let _lh_matchIdent⁶ = if (k³ > _lh_percOp_arg3²) then [LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz₀₁(10, _lh_percOp_arg2²)
//│ 				in case _lh_matchIdent⁶ of {
//│ 					LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²))
//│ 					| _  => error⁰}
//│ 			where
//│ 			def concat₀₀(lss¹) = 
//│ 				case lss¹ of {
//│ 					LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹))
//│ 					| LH_N  => [LH_N]}
//│ 				where
//│ 				def mappend₀₀(xs⁹, ys⁹) = 
//│ 					case xs⁹ of {
//│ 						LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)]
//│ 						| LH_N  => ys⁹}
//│ 			def mappend₁₀(xs¹⁶, ys¹⁶) = 
//│ 				case xs¹⁶ of {
//│ 					LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]
//│ 					| LH_N  => ys¹⁶}
//│ 			def mappend₂₀(xs⁶, ys⁶) = 
//│ 				case xs⁶ of {
//│ 					LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)]
//│ 					| LH_N  => ys⁶}
//│ 			def mappend₃₀(xs⁷, ys⁷) = 
//│ 				case xs⁷ of {
//│ 					LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]
//│ 					| LH_N  => ys⁷}
//│ 			def mappend₄₀(xs¹⁵, ys¹⁵) = 
//│ 				case xs¹⁵ of {
//│ 					LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)]
//│ 					| LH_N  => ys¹⁵}
//│ 			def mappend₅₀(xs¹⁴, ys¹⁴) = 
//│ 				case xs¹⁴ of {
//│ 					LH_C h²¹ t²¹ => [LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]
//│ 					| LH_N  => ys¹⁴}
//│ 			def min₀₀(_lh_min_arg1¹, _lh_min_arg2¹) = 
//│ 				if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ 			def percOp₀₁(_lh_percOp_arg1¹, _lh_percOp_arg2¹, _lh_percOp_arg3¹) = 
//│ 				if (_lh_percOp_arg1¹ >= _lh_percOp_arg3¹) then [LH_N] else 
//│ 					let k² = (_lh_percOp_arg1¹ + 10)
//│ 					in let j¹ = min₀₁(_lh_percOp_arg3¹, k²)
//│ 					in let _lh_matchIdent⁵ = if (k² > _lh_percOp_arg3¹) then [LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz₀₀(10, _lh_percOp_arg2¹)
//│ 					in case _lh_matchIdent⁵ of {
//│ 						LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹))
//│ 						| _  => error⁰}
//│ 				where
//│ 				def concat₀₁(lss²) = 
//│ 					case lss² of {
//│ 						LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴))
//│ 						| LH_N  => [LH_N]}
//│ 					where
//│ 					def mappend₀₁(xs¹¹, ys¹¹) = 
//│ 						case xs¹¹ of {
//│ 							LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]
//│ 							| LH_N  => ys¹¹}
//│ 				def mappend₁₁(xs¹⁷, ys¹⁷) = 
//│ 					case xs¹⁷ of {
//│ 						LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]
//│ 						| LH_N  => ys¹⁷}
//│ 				def mappend₂₁(xs¹², ys¹²) = 
//│ 					case xs¹² of {
//│ 						LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)]
//│ 						| LH_N  => ys¹²}
//│ 				def mappend₃₁(xs⁸, ys⁸) = 
//│ 					case xs⁸ of {
//│ 						LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]
//│ 						| LH_N  => ys⁸}
//│ 				def mappend₄₁(xs¹³, ys¹³) = 
//│ 					case xs¹³ of {
//│ 						LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]
//│ 						| LH_N  => ys¹³}
//│ 				def mappend₅₁(xs¹⁰, ys¹⁰) = 
//│ 					case xs¹⁰ of {
//│ 						LH_C h¹³ t¹³ => [LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]
//│ 						| LH_N  => ys¹⁰}
//│ 				def min₀₁(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def replicate₀₀(_lh_replicate_arg1¹, _lh_replicate_arg2¹) = 
//│ 					if (_lh_replicate_arg1¹ > 0) then [LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)] else [LH_N]
//│ 				def splitAt_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = 
//│ 					[LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ 					where
//│ 					def drop_lz₀₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 						if (_lh_drop_lz_arg1² > 0) then lazy⁰(
//│ 							let _lh_matchIdent⁹ = force⁰(_lh_drop_lz_arg2²)
//│ 							in case _lh_matchIdent⁹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2²
//│ 					def take_lz₀₀(n⁵, ls⁵) = 
//│ 						if (n⁵ > 0) then case force⁰(ls⁵) of {
//│ 							LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]
//│ 							| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lz₁₀(n⁴, ls⁴) = 
//│ 					if (n⁴ > 0) then case force⁰(ls⁴) of {
//│ 						LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 			def replicate₀₁(_lh_replicate_arg1², _lh_replicate_arg2²) = 
//│ 				if (_lh_replicate_arg1² > 0) then [LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)] else [LH_N]
//│ 			def splitAt_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 				[LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]
//│ 				where
//│ 				def drop_lz₀₁(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = 
//│ 					if (_lh_drop_lz_arg1¹ > 0) then lazy⁰(
//│ 						let _lh_matchIdent⁴ = force⁰(_lh_drop_lz_arg2¹)
//│ 						in case _lh_matchIdent⁴ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2¹
//│ 				def take_lz₀₁(n², ls²) = 
//│ 					if (n² > 0) then case force⁰(ls²) of {
//│ 						LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 			def take_lz₁₁(n³, ls³) = 
//│ 				if (n³ > 0) then case force⁰(ls³) of {
//│ 					LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]
//│ 					| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 504 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_N]: 564 --->
//│ 	case xs¹¹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)] | LH_N  => ys¹¹}: 868
//│ [LH_C ' ' [LH_N]]: 565 --->
//│ 	case xs¹¹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)] | LH_N  => ys¹¹}: 868
//│ [LH_N]: 569 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_N]: 588 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C ':' [LH_N]]: 589 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 590 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_N]: 598 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C 'n' [LH_N]]: 599 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_N]: 673 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)] | LH_N  => ys⁹}: 794
//│ [LH_C ' ' [LH_N]]: 674 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)] | LH_N  => ys⁹}: 794
//│ [LH_N]: 678 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_N]: 697 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C ':' [LH_N]]: 698 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 699 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_N]: 707 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C 'n' [LH_N]]: 708 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 781 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 828 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 830 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 853 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 855 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 941 --->
//│ 	case _lh_matchIdent⁷ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 1069
//│ [LH_N]: 955 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 977 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 979 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 1033 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 1061 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 517
//│ 	case force⁰(ls²) of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)] | LH_N  => [LH_N]}: 829
//│ 	case force⁰(ls³) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)] | LH_N  => [LH_N]}: 854
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085 --->
//│ 	case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066
//│ [LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 1104 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_P3 1 0 1]: 1117 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1154 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1156 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_N]: 1184 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1221 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ ------------------
//│ case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491 --->
//│ 	[LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628
//│ 	[LH_N]: 707
//│ 	[LH_C 'n' [LH_N]]: 708
//│ 	[LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130
//│ 	[LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167
//│ case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 517 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613 --->
//│ 	[LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571
//│ 	[LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740
//│ case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630 --->
//│ 	[LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792
//│ 	[LH_N]: 955
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722 --->
//│ 	[LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680
//│ 	[LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905
//│ case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762 --->
//│ 	[LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866
//│ 	[LH_N]: 1184
//│ case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)] | LH_N  => ys⁹}: 794 --->
//│ 	NoProd
//│ 	[LH_N]: 673
//│ 	[LH_C ' ' [LH_N]]: 674
//│ case force⁰(ls²) of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)] | LH_N  => [LH_N]}: 829 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ case force⁰(ls³) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)] | LH_N  => [LH_N]}: 854 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ case xs¹¹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)] | LH_N  => ys¹¹}: 868 --->
//│ 	NoProd
//│ 	[LH_N]: 564
//│ 	[LH_C ' ' [LH_N]]: 565
//│ case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880 --->
//│ 	[LH_N]: 598
//│ 	[LH_C 'n' [LH_N]]: 599
//│ 	[LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760
//│ 	[LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804
//│ 	[LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890
//│ case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892 --->
//│ 	[LH_N]: 588
//│ 	[LH_C ':' [LH_N]]: 589
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 590
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944 --->
//│ 	[LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 1033
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 1061
//│ 	[LH_P3 1 0 1]: 1117
//│ case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956 --->
//│ 	[LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827
//│ 	[LH_N]: 828
//│ 	[LH_N]: 830
//│ 	[LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103
//│ 	[LH_N]: 1104
//│ 	[LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194
//│ case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978 --->
//│ 	[LH_N]: 504
//│ 	[LH_N]: 569
//│ 	[LH_N]: 678
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ 	[LH_N]: 1221
//│ case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085
//│ case _lh_matchIdent⁷ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 1069 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 941
//│ case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155 --->
//│ 	[LH_N]: 504
//│ 	[LH_N]: 569
//│ 	[LH_N]: 678
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ 	[LH_N]: 1221
//│ case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169 --->
//│ 	[LH_N]: 697
//│ 	[LH_C ':' [LH_N]]: 698
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 699
//│ case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185 --->
//│ 	[LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780
//│ 	[LH_N]: 781
//│ 	[LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153
//│ 	[LH_N]: 1154
//│ 	[LH_N]: 1156
//│ 	[LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206
//│ case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196 --->
//│ 	[LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852
//│ 	[LH_N]: 853
//│ 	[LH_N]: 855
//│ case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208 --->
//│ 	[LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976
//│ 	[LH_N]: 977
//│ 	[LH_N]: 979
//│ case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234 --->
//│ 	[LH_N]: 504
//│ 	[LH_N]: 569
//│ 	[LH_N]: 678
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ 	[LH_N]: 1221
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_N]: 588 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C ':' [LH_N]]: 589 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 590 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_N]: 598 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C 'n' [LH_N]]: 599 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_N]: 697 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C ':' [LH_N]]: 698 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 699 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_N]: 707 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C 'n' [LH_N]]: 708 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 781 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 828 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 830 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 853 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 855 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_N]: 955 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 977 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 979 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085 --->
//│ 	case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066
//│ [LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 1104 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1154 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1156 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_N]: 1184 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ ------------------
//│ case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491 --->
//│ 	[LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628
//│ 	[LH_N]: 707
//│ 	[LH_C 'n' [LH_N]]: 708
//│ 	[LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130
//│ 	[LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613 --->
//│ 	[LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571
//│ 	[LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740
//│ case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630 --->
//│ 	[LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792
//│ 	[LH_N]: 955
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722 --->
//│ 	[LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680
//│ 	[LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905
//│ case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762 --->
//│ 	[LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866
//│ 	[LH_N]: 1184
//│ case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880 --->
//│ 	[LH_N]: 598
//│ 	[LH_C 'n' [LH_N]]: 599
//│ 	[LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760
//│ 	[LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804
//│ 	[LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890
//│ case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892 --->
//│ 	[LH_N]: 588
//│ 	[LH_C ':' [LH_N]]: 589
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 590
//│ case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956 --->
//│ 	[LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827
//│ 	[LH_N]: 828
//│ 	[LH_N]: 830
//│ 	[LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103
//│ 	[LH_N]: 1104
//│ 	[LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194
//│ case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085
//│ case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169 --->
//│ 	[LH_N]: 697
//│ 	[LH_C ':' [LH_N]]: 698
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 699
//│ case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185 --->
//│ 	[LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780
//│ 	[LH_N]: 781
//│ 	[LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153
//│ 	[LH_N]: 1154
//│ 	[LH_N]: 1156
//│ 	[LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206
//│ case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196 --->
//│ 	[LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852
//│ 	[LH_N]: 853
//│ 	[LH_N]: 855
//│ case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208 --->
//│ 	[LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976
//│ 	[LH_N]: 977
//│ 	[LH_N]: 979
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPiDigits_nofib₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀(_lh_testPiDigits_nofib_arg1²) = 
//│ 	pidgits₀₀(_lh_testPiDigits_nofib_arg1²)
//│ 	where
//│ 	def pidgits₀₀(_lh_pidgits_arg1²) = 
//│ 		percOp₀₀(0, hashOp₀₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1²)
//│ 		where
//│ 		def hashOp₀₀(_lh_hashOp_arg1², _lh_hashOp_arg2²) = 
//│ 			lazy⁰(
//│ 				let k⁸ = (_lh_hashOp_arg1² + 1)
//│ 				in let _lh_matchIdent¹⁴ = ampOp₀₀(k⁸, _lh_hashOp_arg2²)
//│ 				in case _lh_matchIdent¹⁴ of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 						let _lh_matchIdent¹⁵ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 						in _lh_matchIdent¹⁵(_lh_hashOp_LH_P3_0¹, _lh_hashOp_LH_P3_1¹, _lh_hashOp_LH_P3_2¹, k⁸)
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp₀₀(_lh_ampOp_arg1², _lh_ampOp_arg2²) = 
//│ 				case _lh_ampOp_arg2² of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y² = ((_lh_ampOp_arg1² * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1²) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y²) (_lh_ampOp_LH_P3_2¹ * y²)]
//│ 					| _  => error⁰}
//│ 			def divmod₀₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 				let _lh_hashOp_LH_P2_0² = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 				in let _lh_hashOp_LH_P2_1² = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 				in (fun _lh_hashOp_LH_P3_0² -> (fun _lh_hashOp_LH_P3_1² -> (fun _lh_hashOp_LH_P3_2² -> (fun k⁶ -> if ((_lh_hashOp_LH_P3_0² > _lh_hashOp_LH_P3_1²) || ((_lh_hashOp_LH_P2_1² + _lh_hashOp_LH_P3_0²) >= _lh_hashOp_LH_P3_2²)) then force⁰(hashOp₀₀(k⁶, [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0²) hashOp₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0² * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]))))
//│ 		def percOp₀₀(_lh_percOp_arg1³, _lh_percOp_arg2³, _lh_percOp_arg3³) = 
//│ 			if (_lh_percOp_arg1³ >= _lh_percOp_arg3³) then [LH_N] else 
//│ 				let k⁵ = (_lh_percOp_arg1³ + 10)
//│ 				in let j³ = min₀₀(_lh_percOp_arg3³, k⁵)
//│ 				in let _lh_matchIdent¹⁰ = if (k⁵ > _lh_percOp_arg3³) then 
//│ 					let _lh_percOp_LH_P2_0³ = mappend₁₀(take_lz₁₁((_lh_percOp_arg3³ % 10), _lh_percOp_arg2³), replicate₀₁((k⁵ - _lh_percOp_arg3³), [LH_C ' ' [LH_N]]))
//│ 					in let _lh_percOp_LH_P2_1³ = lazy⁰([LH_N])
//│ 					in (fun _lh_percOp_arg3⁴ -> (fun j⁴ -> mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0³), mappend₄₀(
//│ 						let h²⁸ = 't'
//│ 						in let t²⁸ = 	
//│ 							let h³⁰ = ':'
//│ 							in let t³⁰ = (fun ys²⁵ -> ys²⁵)
//│ 							in (fun ys²³ -> 
//│ 								let h³¹ = h³⁰
//│ 								in let t³¹ = mappend₄₀(t³⁰, ys²³)
//│ 								in (fun ys²⁴ -> [LH_C h³¹ mappend₂₀(t³¹, ys²⁴)]))
//│ 						in (fun ys²¹ -> 
//│ 							let h²⁹ = h²⁸
//│ 							in let t²⁹ = mappend₄₀(t²⁸, ys²¹)
//│ 							in (fun ys²² -> [LH_C h²⁹ mappend₂₀(t²⁹, ys²²)])), mappend₅₀(string_of_int⁰(j⁴), 
//│ 						let h³² = 'n'
//│ 						in let t³² = (fun ys²⁷ -> ys²⁷)
//│ 						in (fun ys²⁶ -> [LH_C h³² mappend₂₀(t³², ys²⁶)])))), percOp₀₁(j⁴, _lh_percOp_LH_P2_1³, _lh_percOp_arg3⁴)))) else splitAt_lz₀₁(10, _lh_percOp_arg2³)
//│ 				in _lh_matchIdent¹⁰(_lh_percOp_arg3³, j³)
//│ 			where
//│ 			def concat₀₀(lss³) = 
//│ 				lss³
//│ 				where
//│ 				def mappend₀₀(xs²³, ys⁴⁴) = 
//│ 					case xs²³ of {
//│ 						LH_C h¹² t¹² => 
//│ 							let h⁴² = h¹²
//│ 							in let t⁴² = mappend₀₀(t¹², ys⁴⁴)
//│ 							in (fun ys⁴⁵ -> 
//│ 								let h⁴³ = h⁴²
//│ 								in let t⁴³ = mappend₃₀(t⁴², ys⁴⁵)
//│ 								in (fun ys⁴⁶ -> [LH_C h⁴³ mappend₂₀(t⁴³, ys⁴⁶)]))
//│ 						| LH_N  => ys⁴⁴}
//│ 			def mappend₁₀(xs²⁶, ys⁶³) = 
//│ 				xs²⁶(ys⁶³)
//│ 			def mappend₂₀(xs²⁴, ys⁵⁰) = 
//│ 				xs²⁴(ys⁵⁰)
//│ 			def mappend₃₀(xs²¹, ys³⁶) = 
//│ 				xs²¹(ys³⁶)
//│ 			def mappend₄₀(xs²⁰, ys³⁵) = 
//│ 				xs²⁰(ys³⁵)
//│ 			def mappend₅₀(xs²², ys⁴²) = 
//│ 				case xs²² of {
//│ 					LH_C h²¹ t²¹ => 
//│ 						let h⁴¹ = h²¹
//│ 						in let t⁴¹ = mappend₅₀(t²¹, ys⁴²)
//│ 						in (fun ys⁴³ -> [LH_C h⁴¹ mappend₂₀(t⁴¹, ys⁴³)])
//│ 					| LH_N  => ys⁴²}
//│ 			def min₀₀(_lh_min_arg1⁴, _lh_min_arg2⁴) = 
//│ 				if (_lh_min_arg1⁴ > _lh_min_arg2⁴) then _lh_min_arg2⁴ else _lh_min_arg1⁴
//│ 			def percOp₀₁(_lh_percOp_arg1⁴, _lh_percOp_arg2⁴, _lh_percOp_arg3⁷) = 
//│ 				if (_lh_percOp_arg1⁴ >= _lh_percOp_arg3⁷) then [LH_N] else 
//│ 					let k⁷ = (_lh_percOp_arg1⁴ + 10)
//│ 					in let j⁷ = min₀₁(_lh_percOp_arg3⁷, k⁷)
//│ 					in let _lh_matchIdent¹³ = if (k⁷ > _lh_percOp_arg3⁷) then 
//│ 						let _lh_percOp_LH_P2_0⁶ = mappend₁₁(take_lz₁₀((_lh_percOp_arg3⁷ % 10), _lh_percOp_arg2⁴), replicate₀₀((k⁷ - _lh_percOp_arg3⁷), [LH_C ' ' [LH_N]]))
//│ 						in let _lh_percOp_LH_P2_1⁶ = lazy⁰([LH_N])
//│ 						in (fun _lh_percOp_arg3⁸ -> (fun j⁸ -> mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0⁶), mappend₄₁(
//│ 							let h⁵⁶ = 't'
//│ 							in let t⁵⁶ = 	
//│ 								let h⁵⁸ = ':'
//│ 								in let t⁵⁸ = (fun ys⁷¹ -> ys⁷¹)
//│ 								in (fun ys⁶⁹ -> 
//│ 									let h⁵⁹ = h⁵⁸
//│ 									in let t⁵⁹ = mappend₄₁(t⁵⁸, ys⁶⁹)
//│ 									in (fun ys⁷⁰ -> [LH_C h⁵⁹ mappend₂₁(t⁵⁹, ys⁷⁰)]))
//│ 							in (fun ys⁶⁷ -> 
//│ 								let h⁵⁷ = h⁵⁶
//│ 								in let t⁵⁷ = mappend₄₁(t⁵⁶, ys⁶⁷)
//│ 								in (fun ys⁶⁸ -> [LH_C h⁵⁷ mappend₂₁(t⁵⁷, ys⁶⁸)])), mappend₅₁(string_of_int⁰(j⁸), 
//│ 							let h⁶⁰ = 'n'
//│ 							in let t⁶⁰ = (fun ys⁷³ -> ys⁷³)
//│ 							in (fun ys⁷² -> [LH_C h⁶⁰ mappend₂₁(t⁶⁰, ys⁷²)])))), percOp₀₁(j⁸, _lh_percOp_LH_P2_1⁶, _lh_percOp_arg3⁸)))) else splitAt_lz₀₀(10, _lh_percOp_arg2⁴)
//│ 					in _lh_matchIdent¹³(_lh_percOp_arg3⁷, j⁷)
//│ 				where
//│ 				def concat₀₁(lss⁴) = 
//│ 					lss⁴
//│ 					where
//│ 					def mappend₀₁(xs²⁵, ys⁵⁸) = 
//│ 						case xs²⁵ of {
//│ 							LH_C h¹⁶ t¹⁶ => 
//│ 								let h⁵¹ = h¹⁶
//│ 								in let t⁵¹ = mappend₀₁(t¹⁶, ys⁵⁸)
//│ 								in (fun ys⁵⁹ -> 
//│ 									let h⁵² = h⁵¹
//│ 									in let t⁵² = mappend₃₁(t⁵¹, ys⁵⁹)
//│ 									in (fun ys⁶⁰ -> [LH_C h⁵² mappend₂₁(t⁵², ys⁶⁰)]))
//│ 							| LH_N  => ys⁵⁸}
//│ 				def mappend₁₁(xs²⁸, ys⁷⁴) = 
//│ 					xs²⁸(ys⁷⁴)
//│ 				def mappend₂₁(xs¹⁸, ys¹⁸) = 
//│ 					xs¹⁸(ys¹⁸)
//│ 				def mappend₃₁(xs²⁷, ys⁶⁴) = 
//│ 					xs²⁷(ys⁶⁴)
//│ 				def mappend₄₁(xs²⁹, ys⁷⁵) = 
//│ 					xs²⁹(ys⁷⁵)
//│ 				def mappend₅₁(xs¹⁹, ys¹⁹) = 
//│ 					case xs¹⁹ of {
//│ 						LH_C h¹³ t¹³ => 
//│ 							let h²⁷ = h¹³
//│ 							in let t²⁷ = mappend₅₁(t¹³, ys¹⁹)
//│ 							in (fun ys²⁰ -> [LH_C h²⁷ mappend₂₁(t²⁷, ys²⁰)])
//│ 						| LH_N  => ys¹⁹}
//│ 				def min₀₁(_lh_min_arg1³, _lh_min_arg2³) = 
//│ 					if (_lh_min_arg1³ > _lh_min_arg2³) then _lh_min_arg2³ else _lh_min_arg1³
//│ 				def replicate₀₀(_lh_replicate_arg1³, _lh_replicate_arg2³) = 
//│ 					if (_lh_replicate_arg1³ > 0) then 
//│ 						let h⁵³ = _lh_replicate_arg2³
//│ 						in let t⁵³ = replicate₀₀((_lh_replicate_arg1³ - 1), _lh_replicate_arg2³)
//│ 						in mappend₀₁(h⁵³, concat₀₁(t⁵³)) else (fun ys⁶¹ -> ys⁶¹)
//│ 				def splitAt_lz₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³) = 
//│ 					let _lh_percOp_LH_P2_0⁴ = take_lz₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in let _lh_percOp_LH_P2_1⁴ = drop_lz₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in (fun _lh_percOp_arg3⁵ -> (fun j⁵ -> mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0⁴), mappend₄₁(
//│ 						let h³³ = 't'
//│ 						in let t³³ = 	
//│ 							let h³⁵ = ':'
//│ 							in let t³⁵ = (fun ys³² -> ys³²)
//│ 							in (fun ys³⁰ -> 
//│ 								let h³⁶ = h³⁵
//│ 								in let t³⁶ = mappend₄₁(t³⁵, ys³⁰)
//│ 								in (fun ys³¹ -> [LH_C h³⁶ mappend₂₁(t³⁶, ys³¹)]))
//│ 						in (fun ys²⁸ -> 
//│ 							let h³⁴ = h³³
//│ 							in let t³⁴ = mappend₄₁(t³³, ys²⁸)
//│ 							in (fun ys²⁹ -> [LH_C h³⁴ mappend₂₁(t³⁴, ys²⁹)])), mappend₅₁(string_of_int⁰(j⁵), 
//│ 						let h³⁷ = 'n'
//│ 						in let t³⁷ = (fun ys³⁴ -> ys³⁴)
//│ 						in (fun ys³³ -> [LH_C h³⁷ mappend₂₁(t³⁷, ys³³)])))), percOp₀₁(j⁵, _lh_percOp_LH_P2_1⁴, _lh_percOp_arg3⁵))))
//│ 					where
//│ 					def drop_lz₀₀(_lh_drop_lz_arg1⁴, _lh_drop_lz_arg2⁴) = 
//│ 						if (_lh_drop_lz_arg1⁴ > 0) then lazy⁰(
//│ 							let _lh_matchIdent¹² = force⁰(_lh_drop_lz_arg2⁴)
//│ 							in case _lh_matchIdent¹² of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2⁴
//│ 					def take_lz₀₀(n⁹, ls⁹) = 
//│ 						if (n⁹ > 0) then case force⁰(ls⁹) of {
//│ 							LH_C h²² t²² => 
//│ 								let h⁵⁵ = h²²
//│ 								in let t⁵⁵ = take_lz₀₀((n⁹ - 1), t²²)
//│ 								in mappend₀₁(h⁵⁵, concat₀₁(t⁵⁵))
//│ 							| LH_N  => (fun ys⁶⁵ -> ys⁶⁵)} else (fun ys⁶⁶ -> ys⁶⁶)
//│ 				def take_lz₁₀(n⁷, ls⁷) = 
//│ 					if (n⁷ > 0) then case force⁰(ls⁷) of {
//│ 						LH_C h²⁰ t²⁰ => 
//│ 							let h³⁹ = h²⁰
//│ 							in let t³⁹ = take_lz₁₀((n⁷ - 1), t²⁰)
//│ 							in (fun ys³⁹ -> 
//│ 								let h⁴⁰ = h³⁹
//│ 								in let t⁴⁰ = mappend₁₁(t³⁹, ys³⁹)
//│ 								in mappend₀₁(h⁴⁰, concat₀₁(t⁴⁰)))
//│ 						| LH_N  => (fun ys⁴⁰ -> ys⁴⁰)} else (fun ys⁴¹ -> ys⁴¹)
//│ 			def replicate₀₁(_lh_replicate_arg1⁴, _lh_replicate_arg2⁴) = 
//│ 				if (_lh_replicate_arg1⁴ > 0) then 
//│ 					let h⁵⁴ = _lh_replicate_arg2⁴
//│ 					in let t⁵⁴ = replicate₀₁((_lh_replicate_arg1⁴ - 1), _lh_replicate_arg2⁴)
//│ 					in mappend₀₀(h⁵⁴, concat₀₀(t⁵⁴)) else (fun ys⁶² -> ys⁶²)
//│ 			def splitAt_lz₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴) = 
//│ 				let _lh_percOp_LH_P2_0⁵ = take_lz₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 				in let _lh_percOp_LH_P2_1⁵ = drop_lz₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 				in (fun _lh_percOp_arg3⁶ -> (fun j⁶ -> mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0⁵), mappend₄₀(
//│ 					let h⁴⁶ = 't'
//│ 					in let t⁴⁶ = 	
//│ 						let h⁴⁸ = ':'
//│ 						in let t⁴⁸ = (fun ys⁵⁵ -> ys⁵⁵)
//│ 						in (fun ys⁵³ -> 
//│ 							let h⁴⁹ = h⁴⁸
//│ 							in let t⁴⁹ = mappend₄₀(t⁴⁸, ys⁵³)
//│ 							in (fun ys⁵⁴ -> [LH_C h⁴⁹ mappend₂₀(t⁴⁹, ys⁵⁴)]))
//│ 					in (fun ys⁵¹ -> 
//│ 						let h⁴⁷ = h⁴⁶
//│ 						in let t⁴⁷ = mappend₄₀(t⁴⁶, ys⁵¹)
//│ 						in (fun ys⁵² -> [LH_C h⁴⁷ mappend₂₀(t⁴⁷, ys⁵²)])), mappend₅₀(string_of_int⁰(j⁶), 
//│ 					let h⁵⁰ = 'n'
//│ 					in let t⁵⁰ = (fun ys⁵⁷ -> ys⁵⁷)
//│ 					in (fun ys⁵⁶ -> [LH_C h⁵⁰ mappend₂₀(t⁵⁰, ys⁵⁶)])))), percOp₀₁(j⁶, _lh_percOp_LH_P2_1⁵, _lh_percOp_arg3⁶))))
//│ 				where
//│ 				def drop_lz₀₁(_lh_drop_lz_arg1³, _lh_drop_lz_arg2³) = 
//│ 					if (_lh_drop_lz_arg1³ > 0) then lazy⁰(
//│ 						let _lh_matchIdent¹¹ = force⁰(_lh_drop_lz_arg2³)
//│ 						in case _lh_matchIdent¹¹ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1¹))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2³
//│ 				def take_lz₀₁(n⁶, ls⁶) = 
//│ 					if (n⁶ > 0) then case force⁰(ls⁶) of {
//│ 						LH_C h¹⁴ t¹⁴ => 
//│ 							let h³⁸ = h¹⁴
//│ 							in let t³⁸ = take_lz₀₁((n⁶ - 1), t¹⁴)
//│ 							in mappend₀₀(h³⁸, concat₀₀(t³⁸))
//│ 						| LH_N  => (fun ys³⁷ -> ys³⁷)} else (fun ys³⁸ -> ys³⁸)
//│ 			def take_lz₁₁(n⁸, ls⁸) = 
//│ 				if (n⁸ > 0) then case force⁰(ls⁸) of {
//│ 					LH_C h¹⁵ t¹⁵ => 
//│ 						let h⁴⁴ = h¹⁵
//│ 						in let t⁴⁴ = take_lz₁₁((n⁸ - 1), t¹⁵)
//│ 						in (fun ys⁴⁷ -> 
//│ 							let h⁴⁵ = h⁴⁴
//│ 							in let t⁴⁵ = mappend₁₀(t⁴⁴, ys⁴⁷)
//│ 							in mappend₀₀(h⁴⁵, concat₀₀(t⁴⁵)))
//│ 					| LH_N  => (fun ys⁴⁸ -> ys⁴⁸)} else (fun ys⁴⁹ -> ys⁴⁹)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPiDigits_nofib₀₀^1]
//│ 	[testPiDigits_nofib₀₀^1 · pidgits₀₀^309]
//│ 		[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · hashOp₀₀^1058] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · hashOp₀₀^1058 · ampOp₀₀^1076] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · hashOp₀₀^1058 · divmod₀₀^1082] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · hashOp₀₀^1058 · divmod₀₀^1082 · hashOp₀₀^616] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · hashOp₀₀^1058] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · hashOp₀₀^1058 · divmod₀₀^1082 · hashOp₀₀^628] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · hashOp₀₀^1058] (using original def)
//│ 		[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055]
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · concat₀₀^103] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₁₀^75] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₂₀^101] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₂₀^119] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₂₀^138] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₂₀^160] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₃₀^102] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₄₀^107] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₄₀^113] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₄₀^132] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₅₀^151] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₅₀^151 · mappend₂₀^460] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₅₀^151 · mappend₅₀^454] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · mappend₅₀^151] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · min₀₀^65] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173]
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · concat₀₁^945] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₁₁^917] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₂₁^1002] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₂₁^943] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₂₁^961] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₂₁^980] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₃₁^944] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₄₁^949] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₄₁^955] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₄₁^974] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₅₁^993] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₅₁^993 · mappend₂₁^41] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₅₁^993 · mappend₅₁^35] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · mappend₅₁^993] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · min₀₁^907] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · percOp₀₁^1015] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173] (only one)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · replicate₀₀^928] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · replicate₀₀^928 · concat₀₁^811] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · replicate₀₀^928 · mappend₀₁^808] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · replicate₀₀^928 · mappend₀₁^808 · mappend₀₁^765] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · replicate₀₀^928 · mappend₀₁^808] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · replicate₀₀^928 · mappend₀₁^808 · mappend₂₁^777] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · replicate₀₀^928 · mappend₀₁^808 · mappend₃₁^771] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · replicate₀₀^928 · replicate₀₀^799] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · replicate₀₀^928] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027]
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · concat₀₁^215] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · drop_lz₀₀^208] (hopeless to continue)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · drop_lz₀₀^208 · drop_lz₀₀^390] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · drop_lz₀₀^208] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₂₁^213] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₂₁^231] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₂₁^250] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₂₁^272] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₃₁^214] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₄₁^219] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₄₁^225] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₄₁^244] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₅₁^263] (hopeless to continue)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₅₁^263 · mappend₂₁^41] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₅₁^263 · mappend₅₁^35] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · mappend₅₁^263] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · percOp₀₁^285] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173] (only one)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · take_lz₀₀^203] (hopeless to continue)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · concat₀₁^882] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879 · mappend₀₁^765] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879 · mappend₂₁^777] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879 · mappend₃₁^771] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · take_lz₀₀^870] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · splitAt_lz₀₀^1027 · take_lz₀₀^203] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918 · concat₀₁^435] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918 · mappend₀₁^432] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918 · mappend₀₁^432 · mappend₀₁^765] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918 · mappend₀₁^432] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918 · mappend₀₁^432 · mappend₂₁^777] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918 · mappend₀₁^432 · mappend₃₁^771] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918 · mappend₁₁^427] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918 · take_lz₁₀^417] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · percOp₀₁^173 · take_lz₁₀^918] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · replicate₀₁^86] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · replicate₀₁^86 · concat₀₀^840] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · replicate₀₁^86 · mappend₀₀^837] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · replicate₀₁^86 · mappend₀₀^837 · mappend₀₀^475] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · replicate₀₁^86 · mappend₀₀^837] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · replicate₀₁^86 · mappend₀₀^837 · mappend₂₀^487] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · replicate₀₁^86 · mappend₀₀^837 · mappend₃₀^481] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · replicate₀₁^86 · replicate₀₁^828] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · replicate₀₁^86] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · concat₀₀^679] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · drop_lz₀₁^672] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · drop_lz₀₁^672 · drop_lz₀₁^325] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · drop_lz₀₁^672] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₂₀^677] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₂₀^695] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₂₀^714] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₂₀^736] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₃₀^678] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₄₀^683] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₄₀^689] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₄₀^708] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₅₀^727] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₅₀^727 · mappend₂₀^460] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₅₀^727 · mappend₅₀^454] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · mappend₅₀^727] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · concat₀₁^945] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₁₁^917] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₂₁^1002] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₂₁^943] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₂₁^961] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₂₁^980] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₃₁^944] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₄₁^949] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₄₁^955] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₄₁^974] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₅₁^993] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₅₁^993 · mappend₂₁^41] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₅₁^993 · mappend₅₁^35] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · mappend₅₁^993] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · min₀₁^907] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · percOp₀₁^1015] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · replicate₀₀^928] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · replicate₀₀^928 · concat₀₁^811] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · replicate₀₀^928 · mappend₀₁^808] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · replicate₀₀^928 · mappend₀₁^808 · mappend₀₁^765] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · replicate₀₀^928 · mappend₀₁^808] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · replicate₀₀^928 · mappend₀₁^808 · mappend₂₁^777] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · replicate₀₀^928 · mappend₀₁^808 · mappend₃₁^771] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · replicate₀₀^928 · replicate₀₀^799] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · replicate₀₀^928] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · concat₀₁^215] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · drop_lz₀₀^208] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · drop_lz₀₀^208 · drop_lz₀₀^390] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · drop_lz₀₀^208] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₂₁^213] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₂₁^231] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₂₁^250] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₂₁^272] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₃₁^214] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₄₁^219] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₄₁^225] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₄₁^244] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₅₁^263] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₅₁^263 · mappend₂₁^41] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₅₁^263 · mappend₅₁^35] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · mappend₅₁^263] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · percOp₀₁^285] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · take_lz₀₀^203] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · concat₀₁^882] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879] (using original def)
//│ 								[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879 · mappend₀₁^765] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879] (using original def)
//│ 								[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879 · mappend₂₁^777] (using original def)
//│ 								[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · mappend₀₁^879 · mappend₃₁^771] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · take_lz₀₀^203 · take_lz₀₀^870] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · splitAt_lz₀₀^1027 · take_lz₀₀^203] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918 · concat₀₁^435] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918 · mappend₀₁^432] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918 · mappend₀₁^432 · mappend₀₁^765] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918 · mappend₀₁^432] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918 · mappend₀₁^432 · mappend₂₁^777] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918 · mappend₀₁^432 · mappend₃₁^771] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918 · mappend₁₁^427] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918 · take_lz₁₀^417] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · percOp₀₁^749 · take_lz₁₀^918] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · take_lz₀₁^667] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · take_lz₀₁^667 · concat₀₀^364] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · take_lz₀₁^667 · mappend₀₀^361] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · take_lz₀₁^667 · mappend₀₀^361 · mappend₀₀^475] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · take_lz₀₁^667 · mappend₀₀^361] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · take_lz₀₁^667 · mappend₀₀^361 · mappend₂₀^487] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · take_lz₀₁^667 · mappend₀₀^361 · mappend₃₀^481] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · take_lz₀₁^667 · take_lz₀₁^352] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · splitAt_lz₀₁^185 · take_lz₀₁^667] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76 · concat₀₀^532] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76 · mappend₀₀^529] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76 · mappend₀₀^529 · mappend₀₀^475] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76 · mappend₀₀^529] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76 · mappend₀₀^529 · mappend₂₀^487] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76 · mappend₀₀^529 · mappend₃₀^481] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76 · mappend₁₀^524] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76 · take_lz₁₁^514] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1055 · take_lz₁₁^76] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPiDigits_nofib₀₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀₀(_lh_testPiDigits_nofib_arg1¹) = 
//│ 	pidgits₀₀₀(_lh_testPiDigits_nofib_arg1¹)
//│ 	where
//│ 	def pidgits₀₀₀(_lh_pidgits_arg1¹) = 
//│ 		percOp₀₀₀(0, hashOp₀₀₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ 		where
//│ 		def hashOp₀₀₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = 
//│ 			lazy⁰(
//│ 				let k⁷ = (_lh_hashOp_arg1¹ + 1)
//│ 				in let _lh_matchIdent¹⁰ = ampOp₀₀₀(k⁷, _lh_hashOp_arg2¹)
//│ 				in case _lh_matchIdent¹⁰ of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => 
//│ 						let _lh_matchIdent¹¹ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ 						in _lh_matchIdent¹¹(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁷)
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp₀₀₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = 
//│ 				case _lh_ampOp_arg2¹ of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 					| _  => error⁰}
//│ 			def divmod₀₀₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = 
//│ 				let _lh_hashOp_LH_P2_0¹ = div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹)
//│ 				in let _lh_hashOp_LH_P2_1¹ = (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)
//│ 				in (fun _lh_hashOp_LH_P3_0² -> (fun _lh_hashOp_LH_P3_1² -> (fun _lh_hashOp_LH_P3_2² -> (fun k⁵ -> if ((_lh_hashOp_LH_P3_0² > _lh_hashOp_LH_P3_1²) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0²) >= _lh_hashOp_LH_P3_2²)) then force⁰(hashOp₀₀₀(k⁵, [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]))))
//│ 		def percOp₀₀₀(_lh_percOp_arg1², _lh_percOp_arg2², _lh_percOp_arg3⁶) = 
//│ 			if (_lh_percOp_arg1² >= _lh_percOp_arg3⁶) then [LH_N] else 
//│ 				let k⁴ = (_lh_percOp_arg1² + 10)
//│ 				in let j⁶ = min₀₀₀(_lh_percOp_arg3⁶, k⁴)
//│ 				in let _lh_matchIdent⁶ = if (k⁴ > _lh_percOp_arg3⁶) then 
//│ 					let _lh_percOp_LH_P2_0⁴ = mappend₁₀₀(take_lz₁₁₀((_lh_percOp_arg3⁶ % 10), _lh_percOp_arg2²), replicate₀₁₀((k⁴ - _lh_percOp_arg3⁶), [LH_C ' ' [LH_N]]))
//│ 					in let _lh_percOp_LH_P2_1⁴ = lazy⁰([LH_N])
//│ 					in (fun _lh_percOp_arg3⁷ -> (fun j⁷ -> mappend₂₀₀(mappend₃₀₀(concat₀₀₀(_lh_percOp_LH_P2_0⁴), mappend₄₀₀(
//│ 						let h⁴⁵ = 't'
//│ 						in let t⁴⁵ = 	
//│ 							let h⁴⁶ = ':'
//│ 							in let t⁴⁶ = (fun ys⁶⁶ -> ys⁶⁶)
//│ 							in (fun ys⁶⁷ -> 
//│ 								let h⁴⁷ = h⁴⁶
//│ 								in let t⁴⁷ = mappend₄₀₁(t⁴⁶, ys⁶⁷)
//│ 								in (fun ys⁶⁸ -> [LH_C h⁴⁷ mappend₂₀₁(t⁴⁷, ys⁶⁸)]))
//│ 						in (fun ys⁶⁹ -> 
//│ 							let h⁴⁸ = h⁴⁵
//│ 							in let t⁴⁸ = mappend₄₀₂(t⁴⁵, ys⁶⁹)
//│ 							in (fun ys⁷⁰ -> [LH_C h⁴⁸ mappend₂₀₂(t⁴⁸, ys⁷⁰)])), mappend₅₀₀(string_of_int⁰(j⁷), 
//│ 						let h⁴⁹ = 'n'
//│ 						in let t⁴⁹ = (fun ys⁷¹ -> ys⁷¹)
//│ 						in (fun ys⁷² -> [LH_C h⁴⁹ mappend₂₀₃(t⁴⁹, ys⁷²)])))), percOp₀₁₀(j⁷, _lh_percOp_LH_P2_1⁴, _lh_percOp_arg3⁷)))) else splitAt_lz₀₁₀(10, _lh_percOp_arg2²)
//│ 				in _lh_matchIdent⁶(_lh_percOp_arg3⁶, j⁶)
//│ 			where
//│ 			def concat₀₀₀(lss¹¹) = 
//│ 				lss¹¹
//│ 			def mappend₁₀₀(xs⁴⁰, ys¹¹¹) = 
//│ 				xs⁴⁰(ys¹¹¹)
//│ 			def mappend₂₀₀(xs⁹¹, ys²⁰⁸) = 
//│ 				xs⁹¹(ys²⁰⁸)
//│ 			def mappend₂₀₁(xs⁴⁶, ys¹²⁰) = 
//│ 				xs⁴⁶(ys¹²⁰)
//│ 			def mappend₂₀₂(xs⁶⁷, ys¹⁵¹) = 
//│ 				xs⁶⁷(ys¹⁵¹)
//│ 			def mappend₂₀₃(xs⁵¹, ys¹²⁹) = 
//│ 				xs⁵¹(ys¹²⁹)
//│ 			def mappend₃₀₀(xs⁶³, ys¹⁴⁴) = 
//│ 				xs⁶³(ys¹⁴⁴)
//│ 			def mappend₄₀₀(xs⁷², ys¹⁵⁷) = 
//│ 				xs⁷²(ys¹⁵⁷)
//│ 			def mappend₄₀₁(xs⁹², ys²⁰⁹) = 
//│ 				xs⁹²(ys²⁰⁹)
//│ 			def mappend₄₀₂(xs⁹⁸, ys²²¹) = 
//│ 				xs⁹⁸(ys²²¹)
//│ 			def mappend₅₀₀(xs⁵⁶, ys¹³⁴) = 
//│ 				case xs⁵⁶ of {
//│ 					LH_C h⁷⁸ t⁷⁸ => 
//│ 						let h⁷⁹ = h⁷⁸
//│ 						in let t⁷⁹ = mappend₅₀₀(t⁷⁸, ys¹³⁴)
//│ 						in (fun ys¹³⁵ -> [LH_C h⁷⁹ mappend₂₀₄(t⁷⁹, ys¹³⁵)])
//│ 					| LH_N  => ys¹³⁴}
//│ 				where
//│ 				def mappend₂₀₄(xs⁸², ys¹⁷⁴) = 
//│ 					xs⁸²(ys¹⁷⁴)
//│ 			def min₀₀₀(_lh_min_arg1⁴, _lh_min_arg2⁴) = 
//│ 				if (_lh_min_arg1⁴ > _lh_min_arg2⁴) then _lh_min_arg2⁴ else _lh_min_arg1⁴
//│ 			def percOp₀₁₀(_lh_percOp_arg1⁴, _lh_percOp_arg2⁴, _lh_percOp_arg3¹³) = 
//│ 				if (_lh_percOp_arg1⁴ >= _lh_percOp_arg3¹³) then [LH_N] else 
//│ 					let k⁸ = (_lh_percOp_arg1⁴ + 10)
//│ 					in let j¹³ = min₀₁₀(_lh_percOp_arg3¹³, k⁸)
//│ 					in let _lh_matchIdent¹² = if (k⁸ > _lh_percOp_arg3¹³) then 
//│ 						let _lh_percOp_LH_P2_0⁹ = mappend₁₁₀(take_lz₁₀₀((_lh_percOp_arg3¹³ % 10), _lh_percOp_arg2⁴), replicate₀₀₀((k⁸ - _lh_percOp_arg3¹³), [LH_C ' ' [LH_N]]))
//│ 						in let _lh_percOp_LH_P2_1⁹ = lazy⁰([LH_N])
//│ 						in (fun _lh_percOp_arg3¹⁴ -> (fun j¹⁴ -> mappend₂₁₁(mappend₃₁₀(concat₀₁₀(_lh_percOp_LH_P2_0⁹), mappend₄₁₀(
//│ 							let h¹²⁴ = 't'
//│ 							in let t¹²⁴ = 	
//│ 								let h¹²⁵ = ':'
//│ 								in let t¹²⁵ = (fun ys²²⁵ -> ys²²⁵)
//│ 								in (fun ys²²⁶ -> 
//│ 									let h¹²⁶ = h¹²⁵
//│ 									in let t¹²⁶ = mappend₄₁₁(t¹²⁵, ys²²⁶)
//│ 									in (fun ys²²⁷ -> [LH_C h¹²⁶ mappend₂₁₂(t¹²⁶, ys²²⁷)]))
//│ 							in (fun ys²²⁸ -> 
//│ 								let h¹²⁷ = h¹²⁴
//│ 								in let t¹²⁷ = mappend₄₁₂(t¹²⁴, ys²²⁸)
//│ 								in (fun ys²²⁹ -> [LH_C h¹²⁷ mappend₂₁₃(t¹²⁷, ys²²⁹)])), mappend₅₁₀(string_of_int⁰(j¹⁴), 
//│ 							let h¹²⁸ = 'n'
//│ 							in let t¹²⁸ = (fun ys²³⁰ -> ys²³⁰)
//│ 							in (fun ys²³¹ -> [LH_C h¹²⁸ mappend₂₁₀(t¹²⁸, ys²³¹)])))), percOp₀₁₀(j¹⁴, _lh_percOp_LH_P2_1⁹, _lh_percOp_arg3¹⁴)))) else splitAt_lz₀₀₀(10, _lh_percOp_arg2⁴)
//│ 					in _lh_matchIdent¹²(_lh_percOp_arg3¹³, j¹³)
//│ 				where
//│ 				def concat₀₁₀(lss¹³) = 
//│ 					lss¹³
//│ 				def mappend₁₁₀(xs⁶⁶, ys¹⁵⁰) = 
//│ 					xs⁶⁶(ys¹⁵⁰)
//│ 				def mappend₂₁₀(xs¹⁰³, ys²³³) = 
//│ 					xs¹⁰³(ys²³³)
//│ 				def mappend₂₁₁(xs¹⁷, ys⁶⁵) = 
//│ 					xs¹⁷(ys⁶⁵)
//│ 				def mappend₂₁₂(xs⁹⁴, ys²¹³) = 
//│ 					xs⁹⁴(ys²¹³)
//│ 				def mappend₂₁₃(xs³⁶, ys¹⁰³) = 
//│ 					xs³⁶(ys¹⁰³)
//│ 				def mappend₃₁₀(xs⁶⁰, ys¹⁴¹) = 
//│ 					xs⁶⁰(ys¹⁴¹)
//│ 				def mappend₄₁₀(xs⁷³, ys¹⁵⁸) = 
//│ 					xs⁷³(ys¹⁵⁸)
//│ 				def mappend₄₁₁(xs⁷⁶, ys¹⁶¹) = 
//│ 					xs⁷⁶(ys¹⁶¹)
//│ 				def mappend₄₁₂(xs³², ys⁹²) = 
//│ 					xs³²(ys⁹²)
//│ 				def mappend₅₁₀(xs⁴², ys¹¹³) = 
//│ 					case xs⁴² of {
//│ 						LH_C h⁶⁶ t⁶⁶ => 
//│ 							let h⁶⁷ = h⁶⁶
//│ 							in let t⁶⁷ = mappend₅₁₀(t⁶⁶, ys¹¹³)
//│ 							in (fun ys¹¹⁴ -> [LH_C h⁶⁷ mappend₂₁₄(t⁶⁷, ys¹¹⁴)])
//│ 						| LH_N  => ys¹¹³}
//│ 					where
//│ 					def mappend₂₁₄(xs⁷⁹, ys¹⁶⁴) = 
//│ 						xs⁷⁹(ys¹⁶⁴)
//│ 				def min₀₁₀(_lh_min_arg1³, _lh_min_arg2³) = 
//│ 					if (_lh_min_arg1³ > _lh_min_arg2³) then _lh_min_arg2³ else _lh_min_arg1³
//│ 				def replicate₀₀₀(_lh_replicate_arg1⁴, _lh_replicate_arg2⁴) = 
//│ 					if (_lh_replicate_arg1⁴ > 0) then 
//│ 						let h¹⁰⁷ = _lh_replicate_arg2⁴
//│ 						in let t¹⁰⁷ = replicate₀₀₀((_lh_replicate_arg1⁴ - 1), _lh_replicate_arg2⁴)
//│ 						in mappend₀₁₀(h¹⁰⁷, concat₀₁₁(t¹⁰⁷)) else (fun ys¹⁹⁵ -> ys¹⁹⁵)
//│ 					where
//│ 					def concat₀₁₁(lss²) = 
//│ 						lss²
//│ 					def mappend₀₁₀(xs⁵⁰, ys¹²⁶) = 
//│ 						case xs⁵⁰ of {
//│ 							LH_C h⁷⁵ t⁷⁵ => 
//│ 								let h⁷⁶ = h⁷⁵
//│ 								in let t⁷⁶ = mappend₀₁₀(t⁷⁵, ys¹²⁶)
//│ 								in (fun ys¹²⁷ -> 
//│ 									let h⁷⁷ = h⁷⁶
//│ 									in let t⁷⁷ = mappend₃₁₁(t⁷⁶, ys¹²⁷)
//│ 									in (fun ys¹²⁸ -> [LH_C h⁷⁷ mappend₂₁₅(t⁷⁷, ys¹²⁸)]))
//│ 							| LH_N  => ys¹²⁶}
//│ 						where
//│ 						def mappend₂₁₅(xs⁶², ys¹⁴³) = 
//│ 							xs⁶²(ys¹⁴³)
//│ 						def mappend₃₁₁(xs⁶⁹, ys¹⁵³) = 
//│ 							xs⁶⁹(ys¹⁵³)
//│ 				def splitAt_lz₀₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³) = 
//│ 					let _lh_percOp_LH_P2_0⁶ = take_lz₀₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in let _lh_percOp_LH_P2_1⁶ = drop_lz₀₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in (fun _lh_percOp_arg3⁹ -> (fun j⁹ -> mappend₂₁₆(mappend₃₁₂(concat₀₁₂(_lh_percOp_LH_P2_0⁶), mappend₄₁₃(
//│ 						let h⁸⁷ = 't'
//│ 						in let t⁸⁷ = 	
//│ 							let h⁸⁸ = ':'
//│ 							in let t⁸⁸ = (fun ys¹⁶⁵ -> ys¹⁶⁵)
//│ 							in (fun ys¹⁶⁶ -> 
//│ 								let h⁸⁹ = h⁸⁸
//│ 								in let t⁸⁹ = mappend₄₁₄(t⁸⁸, ys¹⁶⁶)
//│ 								in (fun ys¹⁶⁷ -> [LH_C h⁸⁹ mappend₂₁₇(t⁸⁹, ys¹⁶⁷)]))
//│ 						in (fun ys¹⁶⁸ -> 
//│ 							let h⁹⁰ = h⁸⁷
//│ 							in let t⁹⁰ = mappend₄₁₅(t⁸⁷, ys¹⁶⁸)
//│ 							in (fun ys¹⁶⁹ -> [LH_C h⁹⁰ mappend₂₁₈(t⁹⁰, ys¹⁶⁹)])), mappend₅₁₁(string_of_int⁰(j⁹), 
//│ 						let h⁹¹ = 'n'
//│ 						in let t⁹¹ = (fun ys¹⁷⁰ -> ys¹⁷⁰)
//│ 						in (fun ys¹⁷¹ -> [LH_C h⁹¹ mappend₂₁₉(t⁹¹, ys¹⁷¹)])))), percOp₀₁₀(j⁹, _lh_percOp_LH_P2_1⁶, _lh_percOp_arg3⁹))))
//│ 					where
//│ 					def concat₀₁₂(lss⁹) = 
//│ 						lss⁹
//│ 					def drop_lz₀₀₀(_lh_drop_lz_arg1³, _lh_drop_lz_arg2³) = 
//│ 						if (_lh_drop_lz_arg1³ > 0) then lazy⁰(
//│ 							let _lh_matchIdent⁹ = force⁰(_lh_drop_lz_arg2³)
//│ 							in case _lh_matchIdent⁹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2³
//│ 					def mappend₂₁₆(xs³⁴, ys⁹⁴) = 
//│ 						xs³⁴(ys⁹⁴)
//│ 					def mappend₂₁₇(xs¹⁰¹, ys²²⁴) = 
//│ 						xs¹⁰¹(ys²²⁴)
//│ 					def mappend₂₁₈(xs³³, ys⁹³) = 
//│ 						xs³³(ys⁹³)
//│ 					def mappend₂₁₉(xs⁷¹, ys¹⁵⁵) = 
//│ 						xs⁷¹(ys¹⁵⁵)
//│ 					def mappend₃₁₂(xs¹⁹, ys⁷⁴) = 
//│ 						xs¹⁹(ys⁷⁴)
//│ 					def mappend₄₁₃(xs²⁸, ys⁸⁸) = 
//│ 						xs²⁸(ys⁸⁸)
//│ 					def mappend₄₁₄(xs¹⁴, ys⁶⁰) = 
//│ 						xs¹⁴(ys⁶⁰)
//│ 					def mappend₄₁₅(xs¹⁵, ys⁶¹) = 
//│ 						xs¹⁵(ys⁶¹)
//│ 					def mappend₅₁₁(xs⁴⁹, ys¹²⁴) = 
//│ 						case xs⁴⁹ of {
//│ 							LH_C h⁷³ t⁷³ => 
//│ 								let h⁷⁴ = h⁷³
//│ 								in let t⁷⁴ = mappend₅₁₁(t⁷³, ys¹²⁴)
//│ 								in (fun ys¹²⁵ -> [LH_C h⁷⁴ mappend₂₁₁₀(t⁷⁴, ys¹²⁵)])
//│ 							| LH_N  => ys¹²⁴}
//│ 						where
//│ 						def mappend₂₁₁₀(xs⁹⁰, ys²⁰⁷) = 
//│ 							xs⁹⁰(ys²⁰⁷)
//│ 					def take_lz₀₀₀(n⁷, ls⁷) = 
//│ 						if (n⁷ > 0) then case force⁰(ls⁷) of {
//│ 							LH_C h⁹⁷ t⁹⁷ => 
//│ 								let h⁹⁸ = h⁹⁷
//│ 								in let t⁹⁸ = take_lz₀₀₀((n⁷ - 1), t⁹⁷)
//│ 								in mappend₀₁₁(h⁹⁸, concat₀₁₃(t⁹⁸))
//│ 							| LH_N  => (fun ys¹⁸² -> ys¹⁸²)} else (fun ys¹⁸³ -> ys¹⁸³)
//│ 						where
//│ 						def concat₀₁₃(lss⁷) = 
//│ 							lss⁷
//│ 						def mappend₀₁₁(xs⁸⁸, ys¹⁹⁶) = 
//│ 							case xs⁸⁸ of {
//│ 								LH_C h¹⁰⁸ t¹⁰⁸ => 
//│ 									let h¹⁰⁹ = h¹⁰⁸
//│ 									in let t¹⁰⁹ = mappend₀₁₁(t¹⁰⁸, ys¹⁹⁶)
//│ 									in (fun ys¹⁹⁷ -> 
//│ 										let h¹¹⁰ = h¹⁰⁹
//│ 										in let t¹¹⁰ = mappend₃₁₃(t¹⁰⁹, ys¹⁹⁷)
//│ 										in (fun ys¹⁹⁸ -> [LH_C h¹¹⁰ mappend₂₁₁₁(t¹¹⁰, ys¹⁹⁸)]))
//│ 								| LH_N  => ys¹⁹⁶}
//│ 							where
//│ 							def mappend₂₁₁₁(xs⁸⁰, ys¹⁷²) = 
//│ 								xs⁸⁰(ys¹⁷²)
//│ 							def mappend₃₁₃(xs²⁷, ys⁸⁷) = 
//│ 								xs²⁷(ys⁸⁷)
//│ 				def take_lz₁₀₀(n⁸, ls⁸) = 
//│ 					if (n⁸ > 0) then case force⁰(ls⁸) of {
//│ 						LH_C h⁹⁹ t⁹⁹ => 
//│ 							let h¹⁰⁰ = h⁹⁹
//│ 							in let t¹⁰⁰ = take_lz₁₀₀((n⁸ - 1), t⁹⁹)
//│ 							in (fun ys¹⁸⁵ -> 
//│ 								let h¹⁰¹ = h¹⁰⁰
//│ 								in let t¹⁰¹ = mappend₁₁₁(t¹⁰⁰, ys¹⁸⁵)
//│ 								in mappend₀₁₂(h¹⁰¹, concat₀₁₄(t¹⁰¹)))
//│ 						| LH_N  => (fun ys¹⁸⁶ -> ys¹⁸⁶)} else (fun ys¹⁸⁷ -> ys¹⁸⁷)
//│ 					where
//│ 					def concat₀₁₄(lss⁴) = 
//│ 						lss⁴
//│ 					def mappend₀₁₂(xs⁵⁷, ys¹³⁶) = 
//│ 						case xs⁵⁷ of {
//│ 							LH_C h⁸⁰ t⁸⁰ => 
//│ 								let h⁸¹ = h⁸⁰
//│ 								in let t⁸¹ = mappend₀₁₂(t⁸⁰, ys¹³⁶)
//│ 								in (fun ys¹³⁷ -> 
//│ 									let h⁸² = h⁸¹
//│ 									in let t⁸² = mappend₃₁₄(t⁸¹, ys¹³⁷)
//│ 									in (fun ys¹³⁸ -> [LH_C h⁸² mappend₂₁₁₂(t⁸², ys¹³⁸)]))
//│ 							| LH_N  => ys¹³⁶}
//│ 						where
//│ 						def mappend₂₁₁₂(xs³¹, ys⁹¹) = 
//│ 							xs³¹(ys⁹¹)
//│ 						def mappend₃₁₄(xs⁶⁸, ys¹⁵²) = 
//│ 							xs⁶⁸(ys¹⁵²)
//│ 					def mappend₁₁₁(xs³⁰, ys⁹⁰) = 
//│ 						xs³⁰(ys⁹⁰)
//│ 			def replicate₀₁₀(_lh_replicate_arg1³, _lh_replicate_arg2³) = 
//│ 				if (_lh_replicate_arg1³ > 0) then 
//│ 					let h⁸⁶ = _lh_replicate_arg2³
//│ 					in let t⁸⁶ = replicate₀₁₀((_lh_replicate_arg1³ - 1), _lh_replicate_arg2³)
//│ 					in mappend₀₀₀(h⁸⁶, concat₀₀₁(t⁸⁶)) else (fun ys¹⁵⁶ -> ys¹⁵⁶)
//│ 				where
//│ 				def concat₀₀₁(lss¹⁵) = 
//│ 					lss¹⁵
//│ 				def mappend₀₀₀(xs¹⁶, ys⁶²) = 
//│ 					case xs¹⁶ of {
//│ 						LH_C h⁴² t⁴² => 
//│ 							let h⁴³ = h⁴²
//│ 							in let t⁴³ = mappend₀₀₀(t⁴², ys⁶²)
//│ 							in (fun ys⁶³ -> 
//│ 								let h⁴⁴ = h⁴³
//│ 								in let t⁴⁴ = mappend₃₀₁(t⁴³, ys⁶³)
//│ 								in (fun ys⁶⁴ -> [LH_C h⁴⁴ mappend₂₀₅(t⁴⁴, ys⁶⁴)]))
//│ 						| LH_N  => ys⁶²}
//│ 					where
//│ 					def mappend₂₀₅(xs³⁵, ys⁹⁵) = 
//│ 						xs³⁵(ys⁹⁵)
//│ 					def mappend₃₀₁(xs²⁵, ys⁸⁵) = 
//│ 						xs²⁵(ys⁸⁵)
//│ 			def splitAt_lz₀₁₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 				let _lh_percOp_LH_P2_0⁵ = take_lz₀₁₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 				in let _lh_percOp_LH_P2_1⁵ = drop_lz₀₁₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 				in (fun _lh_percOp_arg3⁸ -> (fun j⁸ -> mappend₂₀₆(mappend₃₀₂(concat₀₀₂(_lh_percOp_LH_P2_0⁵), mappend₄₀₃(
//│ 					let h⁵⁷ = 't'
//│ 					in let t⁵⁷ = 	
//│ 						let h⁵⁸ = ':'
//│ 						in let t⁵⁸ = (fun ys⁹⁶ -> ys⁹⁶)
//│ 						in (fun ys⁹⁷ -> 
//│ 							let h⁵⁹ = h⁵⁸
//│ 							in let t⁵⁹ = mappend₄₀₄(t⁵⁸, ys⁹⁷)
//│ 							in (fun ys⁹⁸ -> [LH_C h⁵⁹ mappend₂₀₇(t⁵⁹, ys⁹⁸)]))
//│ 					in (fun ys⁹⁹ -> 
//│ 						let h⁶⁰ = h⁵⁷
//│ 						in let t⁶⁰ = mappend₄₀₅(t⁵⁷, ys⁹⁹)
//│ 						in (fun ys¹⁰⁰ -> [LH_C h⁶⁰ mappend₂₀₈(t⁶⁰, ys¹⁰⁰)])), mappend₅₀₁(string_of_int⁰(j⁸), 
//│ 					let h⁶¹ = 'n'
//│ 					in let t⁶¹ = (fun ys¹⁰¹ -> ys¹⁰¹)
//│ 					in (fun ys¹⁰² -> [LH_C h⁶¹ mappend₂₀₉(t⁶¹, ys¹⁰²)])))), percOp₀₁₁(j⁸, _lh_percOp_LH_P2_1⁵, _lh_percOp_arg3⁸))))
//│ 				where
//│ 				def concat₀₀₂(lss⁶) = 
//│ 					lss⁶
//│ 				def drop_lz₀₁₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 					if (_lh_drop_lz_arg1² > 0) then lazy⁰(
//│ 						let _lh_matchIdent⁷ = force⁰(_lh_drop_lz_arg2²)
//│ 						in case _lh_matchIdent⁷ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2²
//│ 				def mappend₂₀₆(xs¹³, ys⁵⁹) = 
//│ 					xs¹³(ys⁵⁹)
//│ 				def mappend₂₀₇(xs¹⁰⁰, ys²²³) = 
//│ 					xs¹⁰⁰(ys²²³)
//│ 				def mappend₂₀₈(xs⁵², ys¹³⁰) = 
//│ 					xs⁵²(ys¹³⁰)
//│ 				def mappend₂₀₉(xs¹², ys⁵⁸) = 
//│ 					xs¹²(ys⁵⁸)
//│ 				def mappend₃₀₂(xs⁸¹, ys¹⁷³) = 
//│ 					xs⁸¹(ys¹⁷³)
//│ 				def mappend₄₀₃(xs⁸⁹, ys¹⁹⁹) = 
//│ 					xs⁸⁹(ys¹⁹⁹)
//│ 				def mappend₄₀₄(xs²⁹, ys⁸⁹) = 
//│ 					xs²⁹(ys⁸⁹)
//│ 				def mappend₄₀₅(xs²², ys⁷⁹) = 
//│ 					xs²²(ys⁷⁹)
//│ 				def mappend₅₀₁(xs²⁴, ys⁸³) = 
//│ 					case xs²⁴ of {
//│ 						LH_C h⁵⁵ t⁵⁵ => 
//│ 							let h⁵⁶ = h⁵⁵
//│ 							in let t⁵⁶ = mappend₅₀₁(t⁵⁵, ys⁸³)
//│ 							in (fun ys⁸⁴ -> [LH_C h⁵⁶ mappend₂₀₁₀(t⁵⁶, ys⁸⁴)])
//│ 						| LH_N  => ys⁸³}
//│ 					where
//│ 					def mappend₂₀₁₀(xs⁵⁹, ys¹⁴⁰) = 
//│ 						xs⁵⁹(ys¹⁴⁰)
//│ 				def percOp₀₁₁(_lh_percOp_arg1³, _lh_percOp_arg2³, _lh_percOp_arg3¹⁰) = 
//│ 					if (_lh_percOp_arg1³ >= _lh_percOp_arg3¹⁰) then [LH_N] else 
//│ 						let k⁶ = (_lh_percOp_arg1³ + 10)
//│ 						in let j¹⁰ = min₀₁₁(_lh_percOp_arg3¹⁰, k⁶)
//│ 						in let _lh_matchIdent⁸ = if (k⁶ > _lh_percOp_arg3¹⁰) then 
//│ 							let _lh_percOp_LH_P2_0⁷ = mappend₁₁₂(take_lz₁₀₁((_lh_percOp_arg3¹⁰ % 10), _lh_percOp_arg2³), replicate₀₀₁((k⁶ - _lh_percOp_arg3¹⁰), [LH_C ' ' [LH_N]]))
//│ 							in let _lh_percOp_LH_P2_1⁷ = lazy⁰([LH_N])
//│ 							in (fun _lh_percOp_arg3¹¹ -> (fun j¹¹ -> mappend₂₁₁₄(mappend₃₁₅(concat₀₁₅(_lh_percOp_LH_P2_0⁷), mappend₄₁₆(
//│ 								let h¹⁰² = 't'
//│ 								in let t¹⁰² = 	
//│ 									let h¹⁰³ = ':'
//│ 									in let t¹⁰³ = (fun ys¹⁸⁸ -> ys¹⁸⁸)
//│ 									in (fun ys¹⁸⁹ -> 
//│ 										let h¹⁰⁴ = h¹⁰³
//│ 										in let t¹⁰⁴ = mappend₄₁₇(t¹⁰³, ys¹⁸⁹)
//│ 										in (fun ys¹⁹⁰ -> [LH_C h¹⁰⁴ mappend₂₁₁₅(t¹⁰⁴, ys¹⁹⁰)]))
//│ 								in (fun ys¹⁹¹ -> 
//│ 									let h¹⁰⁵ = h¹⁰²
//│ 									in let t¹⁰⁵ = mappend₄₁₈(t¹⁰², ys¹⁹¹)
//│ 									in (fun ys¹⁹² -> [LH_C h¹⁰⁵ mappend₂₁₁₆(t¹⁰⁵, ys¹⁹²)])), mappend₅₁₂(string_of_int⁰(j¹¹), 
//│ 								let h¹⁰⁶ = 'n'
//│ 								in let t¹⁰⁶ = (fun ys¹⁹³ -> ys¹⁹³)
//│ 								in (fun ys¹⁹⁴ -> [LH_C h¹⁰⁶ mappend₂₁₁₃(t¹⁰⁶, ys¹⁹⁴)])))), percOp₀₁₁(j¹¹, _lh_percOp_LH_P2_1⁷, _lh_percOp_arg3¹¹)))) else splitAt_lz₀₀₁(10, _lh_percOp_arg2³)
//│ 						in _lh_matchIdent⁸(_lh_percOp_arg3¹⁰, j¹⁰)
//│ 					where
//│ 					def concat₀₁₅(lss¹⁴) = 
//│ 						lss¹⁴
//│ 					def mappend₁₁₂(xs⁵⁵, ys¹³³) = 
//│ 						xs⁵⁵(ys¹³³)
//│ 					def mappend₂₁₁₃(xs⁷⁸, ys¹⁶³) = 
//│ 						xs⁷⁸(ys¹⁶³)
//│ 					def mappend₂₁₁₄(xs⁹⁹, ys²²²) = 
//│ 						xs⁹⁹(ys²²²)
//│ 					def mappend₂₁₁₅(xs¹⁰², ys²³²) = 
//│ 						xs¹⁰²(ys²³²)
//│ 					def mappend₂₁₁₆(xs³⁷, ys¹⁰⁴) = 
//│ 						xs³⁷(ys¹⁰⁴)
//│ 					def mappend₃₁₅(xs⁷⁵, ys¹⁶⁰) = 
//│ 						xs⁷⁵(ys¹⁶⁰)
//│ 					def mappend₄₁₆(xs⁹⁶, ys²¹⁷) = 
//│ 						xs⁹⁶(ys²¹⁷)
//│ 					def mappend₄₁₇(xs⁶¹, ys¹⁴²) = 
//│ 						xs⁶¹(ys¹⁴²)
//│ 					def mappend₄₁₈(xs¹⁸, ys⁷³) = 
//│ 						xs¹⁸(ys⁷³)
//│ 					def mappend₅₁₂(xs⁸⁶, ys¹⁸⁰) = 
//│ 						case xs⁸⁶ of {
//│ 							LH_C h⁹⁵ t⁹⁵ => 
//│ 								let h⁹⁶ = h⁹⁵
//│ 								in let t⁹⁶ = mappend₅₁₂(t⁹⁵, ys¹⁸⁰)
//│ 								in (fun ys¹⁸¹ -> [LH_C h⁹⁶ mappend₂₁₁₇(t⁹⁶, ys¹⁸¹)])
//│ 							| LH_N  => ys¹⁸⁰}
//│ 						where
//│ 						def mappend₂₁₁₇(xs¹⁰⁴, ys²³⁴) = 
//│ 							xs¹⁰⁴(ys²³⁴)
//│ 					def min₀₁₁(_lh_min_arg1², _lh_min_arg2²) = 
//│ 						if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 					def replicate₀₀₁(_lh_replicate_arg1², _lh_replicate_arg2²) = 
//│ 						if (_lh_replicate_arg1² > 0) then 
//│ 							let h⁶² = _lh_replicate_arg2²
//│ 							in let t⁶² = replicate₀₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)
//│ 							in mappend₀₁₃(h⁶², concat₀₁₆(t⁶²)) else (fun ys¹⁰⁶ -> ys¹⁰⁶)
//│ 						where
//│ 						def concat₀₁₆(lss¹²) = 
//│ 							lss¹²
//│ 						def mappend₀₁₃(xs⁸³, ys¹⁷⁵) = 
//│ 							case xs⁸³ of {
//│ 								LH_C h⁹² t⁹² => 
//│ 									let h⁹³ = h⁹²
//│ 									in let t⁹³ = mappend₀₁₃(t⁹², ys¹⁷⁵)
//│ 									in (fun ys¹⁷⁶ -> 
//│ 										let h⁹⁴ = h⁹³
//│ 										in let t⁹⁴ = mappend₃₁₆(t⁹³, ys¹⁷⁶)
//│ 										in (fun ys¹⁷⁷ -> [LH_C h⁹⁴ mappend₂₁₁₈(t⁹⁴, ys¹⁷⁷)]))
//│ 								| LH_N  => ys¹⁷⁵}
//│ 							where
//│ 							def mappend₂₁₁₈(xs⁸⁷, ys¹⁸⁴) = 
//│ 								xs⁸⁷(ys¹⁸⁴)
//│ 							def mappend₃₁₆(xs⁴⁸, ys¹²³) = 
//│ 								xs⁴⁸(ys¹²³)
//│ 					def splitAt_lz₀₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴) = 
//│ 						let _lh_percOp_LH_P2_0⁸ = take_lz₀₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 						in let _lh_percOp_LH_P2_1⁸ = drop_lz₀₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 						in (fun _lh_percOp_arg3¹² -> (fun j¹² -> mappend₂₁₁₉(mappend₃₁₇(concat₀₁₇(_lh_percOp_LH_P2_0⁸), mappend₄₁₉(
//│ 							let h¹¹¹ = 't'
//│ 							in let t¹¹¹ = 	
//│ 								let h¹¹² = ':'
//│ 								in let t¹¹² = (fun ys²⁰⁰ -> ys²⁰⁰)
//│ 								in (fun ys²⁰¹ -> 
//│ 									let h¹¹³ = h¹¹²
//│ 									in let t¹¹³ = mappend₄₁₁₀(t¹¹², ys²⁰¹)
//│ 									in (fun ys²⁰² -> [LH_C h¹¹³ mappend₂₁₂₀(t¹¹³, ys²⁰²)]))
//│ 							in (fun ys²⁰³ -> 
//│ 								let h¹¹⁴ = h¹¹¹
//│ 								in let t¹¹⁴ = mappend₄₁₁₁(t¹¹¹, ys²⁰³)
//│ 								in (fun ys²⁰⁴ -> [LH_C h¹¹⁴ mappend₂₁₂₁(t¹¹⁴, ys²⁰⁴)])), mappend₅₁₃(string_of_int⁰(j¹²), 
//│ 							let h¹¹⁵ = 'n'
//│ 							in let t¹¹⁵ = (fun ys²⁰⁵ -> ys²⁰⁵)
//│ 							in (fun ys²⁰⁶ -> [LH_C h¹¹⁵ mappend₂₁₂₂(t¹¹⁵, ys²⁰⁶)])))), percOp₀₁₁(j¹², _lh_percOp_LH_P2_1⁸, _lh_percOp_arg3¹²))))
//│ 						where
//│ 						def concat₀₁₇(lss⁵) = 
//│ 							lss⁵
//│ 						def drop_lz₀₀₁(_lh_drop_lz_arg1⁴, _lh_drop_lz_arg2⁴) = 
//│ 							if (_lh_drop_lz_arg1⁴ > 0) then lazy⁰(
//│ 								let _lh_matchIdent¹³ = force⁰(_lh_drop_lz_arg2⁴)
//│ 								in case _lh_matchIdent¹³ of {
//│ 									LH_N  => [LH_N]
//│ 									| LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴))
//│ 									| _  => error⁰}) else _lh_drop_lz_arg2⁴
//│ 						def mappend₂₁₁₉(xs⁶⁵, ys¹⁴⁶) = 
//│ 							xs⁶⁵(ys¹⁴⁶)
//│ 						def mappend₂₁₂₀(xs⁸⁴, ys¹⁷⁸) = 
//│ 							xs⁸⁴(ys¹⁷⁸)
//│ 						def mappend₂₁₂₁(xs⁵³, ys¹³¹) = 
//│ 							xs⁵³(ys¹³¹)
//│ 						def mappend₂₁₂₂(xs⁵⁸, ys¹³⁹) = 
//│ 							xs⁵⁸(ys¹³⁹)
//│ 						def mappend₃₁₇(xs⁷⁷, ys¹⁶²) = 
//│ 							xs⁷⁷(ys¹⁶²)
//│ 						def mappend₄₁₉(xs²⁰, ys⁷⁵) = 
//│ 							xs²⁰(ys⁷⁵)
//│ 						def mappend₄₁₁₀(xs⁶⁴, ys¹⁴⁵) = 
//│ 							xs⁶⁴(ys¹⁴⁵)
//│ 						def mappend₄₁₁₁(xs⁴⁵, ys¹¹⁹) = 
//│ 							xs⁴⁵(ys¹¹⁹)
//│ 						def mappend₅₁₃(xs⁴⁷, ys¹²¹) = 
//│ 							case xs⁴⁷ of {
//│ 								LH_C h⁷¹ t⁷¹ => 
//│ 									let h⁷² = h⁷¹
//│ 									in let t⁷² = mappend₅₁₃(t⁷¹, ys¹²¹)
//│ 									in (fun ys¹²² -> [LH_C h⁷² mappend₂₁₂₃(t⁷², ys¹²²)])
//│ 								| LH_N  => ys¹²¹}
//│ 							where
//│ 							def mappend₂₁₂₃(xs⁷⁰, ys¹⁵⁴) = 
//│ 								xs⁷⁰(ys¹⁵⁴)
//│ 						def take_lz₀₀₁(n⁹, ls⁹) = 
//│ 							if (n⁹ > 0) then case force⁰(ls⁹) of {
//│ 								LH_C h¹¹⁹ t¹¹⁹ => 
//│ 									let h¹²⁰ = h¹¹⁹
//│ 									in let t¹²⁰ = take_lz₀₀₁((n⁹ - 1), t¹¹⁹)
//│ 									in mappend₀₁₄(h¹²⁰, concat₀₁₈(t¹²⁰))
//│ 								| LH_N  => (fun ys²¹⁵ -> ys²¹⁵)} else (fun ys²¹⁶ -> ys²¹⁶)
//│ 							where
//│ 							def concat₀₁₈(lss¹⁶) = 
//│ 								lss¹⁶
//│ 							def mappend₀₁₄(xs⁴³, ys¹¹⁵) = 
//│ 								case xs⁴³ of {
//│ 									LH_C h⁶⁸ t⁶⁸ => 
//│ 										let h⁶⁹ = h⁶⁸
//│ 										in let t⁶⁹ = mappend₀₁₄(t⁶⁸, ys¹¹⁵)
//│ 										in (fun ys¹¹⁶ -> 
//│ 											let h⁷⁰ = h⁶⁹
//│ 											in let t⁷⁰ = mappend₃₁₈(t⁶⁹, ys¹¹⁶)
//│ 											in (fun ys¹¹⁷ -> [LH_C h⁷⁰ mappend₂₁₂₄(t⁷⁰, ys¹¹⁷)]))
//│ 									| LH_N  => ys¹¹⁵}
//│ 								where
//│ 								def mappend₂₁₂₄(xs²⁶, ys⁸⁶) = 
//│ 									xs²⁶(ys⁸⁶)
//│ 								def mappend₃₁₈(xs⁵⁴, ys¹³²) = 
//│ 									xs⁵⁴(ys¹³²)
//│ 					def take_lz₁₀₁(n⁵, ls⁵) = 
//│ 						if (n⁵ > 0) then case force⁰(ls⁵) of {
//│ 							LH_C h⁶³ t⁶³ => 
//│ 								let h⁶⁴ = h⁶³
//│ 								in let t⁶⁴ = take_lz₁₀₁((n⁵ - 1), t⁶³)
//│ 								in (fun ys¹⁰⁷ -> 
//│ 									let h⁶⁵ = h⁶⁴
//│ 									in let t⁶⁵ = mappend₁₁₃(t⁶⁴, ys¹⁰⁷)
//│ 									in mappend₀₁₅(h⁶⁵, concat₀₁₉(t⁶⁵)))
//│ 							| LH_N  => (fun ys¹⁰⁸ -> ys¹⁰⁸)} else (fun ys¹⁰⁹ -> ys¹⁰⁹)
//│ 						where
//│ 						def concat₀₁₉(lss⁸) = 
//│ 							lss⁸
//│ 						def mappend₀₁₅(xs⁹⁷, ys²¹⁸) = 
//│ 							case xs⁹⁷ of {
//│ 								LH_C h¹²¹ t¹²¹ => 
//│ 									let h¹²² = h¹²¹
//│ 									in let t¹²² = mappend₀₁₅(t¹²¹, ys²¹⁸)
//│ 									in (fun ys²¹⁹ -> 
//│ 										let h¹²³ = h¹²²
//│ 										in let t¹²³ = mappend₃₁₉(t¹²², ys²¹⁹)
//│ 										in (fun ys²²⁰ -> [LH_C h¹²³ mappend₂₁₂₅(t¹²³, ys²²⁰)]))
//│ 								| LH_N  => ys²¹⁸}
//│ 							where
//│ 							def mappend₂₁₂₅(xs²¹, ys⁷⁸) = 
//│ 								xs²¹(ys⁷⁸)
//│ 							def mappend₃₁₉(xs³⁸, ys¹⁰⁵) = 
//│ 								xs³⁸(ys¹⁰⁵)
//│ 						def mappend₁₁₃(xs⁴¹, ys¹¹²) = 
//│ 							xs⁴¹(ys¹¹²)
//│ 				def take_lz₀₁₀(n⁴, ls⁴) = 
//│ 					if (n⁴ > 0) then case force⁰(ls⁴) of {
//│ 						LH_C h⁵⁰ t⁵⁰ => 
//│ 							let h⁵¹ = h⁵⁰
//│ 							in let t⁵¹ = take_lz₀₁₀((n⁴ - 1), t⁵⁰)
//│ 							in mappend₀₀₁(h⁵¹, concat₀₀₃(t⁵¹))
//│ 						| LH_N  => (fun ys⁷⁶ -> ys⁷⁶)} else (fun ys⁷⁷ -> ys⁷⁷)
//│ 					where
//│ 					def concat₀₀₃(lss³) = 
//│ 						lss³
//│ 					def mappend₀₀₁(xs²³, ys⁸⁰) = 
//│ 						case xs²³ of {
//│ 							LH_C h⁵² t⁵² => 
//│ 								let h⁵³ = h⁵²
//│ 								in let t⁵³ = mappend₀₀₁(t⁵², ys⁸⁰)
//│ 								in (fun ys⁸¹ -> 
//│ 									let h⁵⁴ = h⁵³
//│ 									in let t⁵⁴ = mappend₃₀₃(t⁵³, ys⁸¹)
//│ 									in (fun ys⁸² -> [LH_C h⁵⁴ mappend₂₀₁₁(t⁵⁴, ys⁸²)]))
//│ 							| LH_N  => ys⁸⁰}
//│ 						where
//│ 						def mappend₂₀₁₁(xs³⁹, ys¹¹⁰) = 
//│ 							xs³⁹(ys¹¹⁰)
//│ 						def mappend₃₀₃(xs⁸⁵, ys¹⁷⁹) = 
//│ 							xs⁸⁵(ys¹⁷⁹)
//│ 			def take_lz₁₁₀(n⁶, ls⁶) = 
//│ 				if (n⁶ > 0) then case force⁰(ls⁶) of {
//│ 					LH_C h⁸³ t⁸³ => 
//│ 						let h⁸⁴ = h⁸³
//│ 						in let t⁸⁴ = take_lz₁₁₀((n⁶ - 1), t⁸³)
//│ 						in (fun ys¹⁴⁷ -> 
//│ 							let h⁸⁵ = h⁸⁴
//│ 							in let t⁸⁵ = mappend₁₀₁(t⁸⁴, ys¹⁴⁷)
//│ 							in mappend₀₀₂(h⁸⁵, concat₀₀₄(t⁸⁵)))
//│ 					| LH_N  => (fun ys¹⁴⁸ -> ys¹⁴⁸)} else (fun ys¹⁴⁹ -> ys¹⁴⁹)
//│ 				where
//│ 				def concat₀₀₄(lss¹⁰) = 
//│ 					lss¹⁰
//│ 				def mappend₀₀₂(xs⁹³, ys²¹⁰) = 
//│ 					case xs⁹³ of {
//│ 						LH_C h¹¹⁶ t¹¹⁶ => 
//│ 							let h¹¹⁷ = h¹¹⁶
//│ 							in let t¹¹⁷ = mappend₀₀₂(t¹¹⁶, ys²¹⁰)
//│ 							in (fun ys²¹¹ -> 
//│ 								let h¹¹⁸ = h¹¹⁷
//│ 								in let t¹¹⁸ = mappend₃₀₄(t¹¹⁷, ys²¹¹)
//│ 								in (fun ys²¹² -> [LH_C h¹¹⁸ mappend₂₀₁₂(t¹¹⁸, ys²¹²)]))
//│ 						| LH_N  => ys²¹⁰}
//│ 					where
//│ 					def mappend₂₀₁₂(xs⁹⁵, ys²¹⁴) = 
//│ 						xs⁹⁵(ys²¹⁴)
//│ 					def mappend₃₀₄(xs⁴⁴, ys¹¹⁸) = 
//│ 						xs⁴⁴(ys¹¹⁸)
//│ 				def mappend₁₀₁(xs⁷⁴, ys¹⁵⁹) = 
//│ 					xs⁷⁴(ys¹⁵⁹)
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 1213 --->
//│ 	case xs¹⁶ of {LH_C h⁴² t⁴² => let h⁴³ = h⁴²
//│ in let t⁴³ = mappend₀₀₀(t⁴², ys⁶²)
//│ in (fun ys⁶³ -> let h⁴⁴ = h⁴³
//│ in let t⁴⁴ = mappend₃₀₁(t⁴³, ys⁶³)
//│ in (fun ys⁶⁴ -> [LH_C h⁴⁴ mappend₂₀₅(t⁴⁴, ys⁶⁴)])) | LH_N  => ys⁶²}: 1163
//│ [LH_C ' ' [LH_N]]: 1214 --->
//│ 	case xs¹⁶ of {LH_C h⁴² t⁴² => let h⁴³ = h⁴²
//│ in let t⁴³ = mappend₀₀₀(t⁴², ys⁶²)
//│ in (fun ys⁶³ -> let h⁴⁴ = h⁴³
//│ in let t⁴⁴ = mappend₃₀₁(t⁴³, ys⁶³)
//│ in (fun ys⁶⁴ -> [LH_C h⁴⁴ mappend₂₀₅(t⁴⁴, ys⁶⁴)])) | LH_N  => ys⁶²}: 1163
//│ [LH_N]: 1218 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁹⁷ t⁹⁷ => let h⁹⁸ = h⁹⁷
//│ in let t⁹⁸ = take_lz₀₀₀((n⁷ - 1), t⁹⁷)
//│ in mappend₀₁₁(h⁹⁸, concat₀₁₃(t⁹⁸)) | LH_N  => (fun ys¹⁸² -> ys¹⁸²)}: 2435
//│ 	case force⁰(ls⁸) of {LH_C h⁹⁹ t⁹⁹ => let h¹⁰⁰ = h⁹⁹
//│ in let t¹⁰⁰ = take_lz₁₀₀((n⁸ - 1), t⁹⁹)
//│ in (fun ys¹⁸⁵ -> let h¹⁰¹ = h¹⁰⁰
//│ in let t¹⁰¹ = mappend₁₁₁(t¹⁰⁰, ys¹⁸⁵)
//│ in mappend₀₁₂(h¹⁰¹, concat₀₁₄(t¹⁰¹))) | LH_N  => (fun ys¹⁸⁶ -> ys¹⁸⁶)}: 2486
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2676
//│ [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 1484 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 3015
//│ [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 1512 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 3015
//│ [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 1514 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁵⁰ t⁵⁰ => let h⁵¹ = h⁵⁰
//│ in let t⁵¹ = take_lz₀₁₀((n⁴ - 1), t⁵⁰)
//│ in mappend₀₀₁(h⁵¹, concat₀₀₃(t⁵¹)) | LH_N  => (fun ys⁷⁶ -> ys⁷⁶)}: 1376
//│ 	case force⁰(ls⁵) of {LH_C h⁶³ t⁶³ => let h⁶⁴ = h⁶³
//│ in let t⁶⁴ = take_lz₁₀₁((n⁵ - 1), t⁶³)
//│ in (fun ys¹⁰⁷ -> let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₁₁₃(t⁶⁴, ys¹⁰⁷)
//│ in mappend₀₁₅(h⁶⁵, concat₀₁₉(t⁶⁵))) | LH_N  => (fun ys¹⁰⁸ -> ys¹⁰⁸)}: 1754
//│ 	case force⁰(ls⁶) of {LH_C h⁸³ t⁸³ => let h⁸⁴ = h⁸³
//│ in let t⁸⁴ = take_lz₁₁₀((n⁶ - 1), t⁸³)
//│ in (fun ys¹⁴⁷ -> let h⁸⁵ = h⁸⁴
//│ in let t⁸⁵ = mappend₁₀₁(t⁸⁴, ys¹⁴⁷)
//│ in mappend₀₀₂(h⁸⁵, concat₀₀₄(t⁸⁵))) | LH_N  => (fun ys¹⁴⁸ -> ys¹⁴⁸)}: 2082
//│ 	case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 2121
//│ 	case force⁰(ls⁹) of {LH_C h¹¹⁹ t¹¹⁹ => let h¹²⁰ = h¹¹⁹
//│ in let t¹²⁰ = take_lz₀₀₁((n⁹ - 1), t¹¹⁹)
//│ in mappend₀₁₄(h¹²⁰, concat₀₁₈(t¹²⁰)) | LH_N  => (fun ys²¹⁵ -> ys²¹⁵)}: 2973
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3259
//│ [LH_N]: 2108 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁶³ t⁶³ => let h⁶⁴ = h⁶³
//│ in let t⁶⁴ = take_lz₁₀₁((n⁵ - 1), t⁶³)
//│ in (fun ys¹⁰⁷ -> let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₁₁₃(t⁶⁴, ys¹⁰⁷)
//│ in mappend₀₁₅(h⁶⁵, concat₀₁₉(t⁶⁵))) | LH_N  => (fun ys¹⁰⁸ -> ys¹⁰⁸)}: 1754
//│ 	case force⁰(ls⁹) of {LH_C h¹¹⁹ t¹¹⁹ => let h¹²⁰ = h¹¹⁹
//│ in let t¹²⁰ = take_lz₀₀₁((n⁹ - 1), t¹¹⁹)
//│ in mappend₀₁₄(h¹²⁰, concat₀₁₈(t¹²⁰)) | LH_N  => (fun ys²¹⁵ -> ys²¹⁵)}: 2973
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3259
//│ [LH_P3 1 0 1]: 2322 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 3015
//│ [LH_N]: 2542 --->
//│ 	case xs⁸³ of {LH_C h⁹² t⁹² => let h⁹³ = h⁹²
//│ in let t⁹³ = mappend₀₁₃(t⁹², ys¹⁷⁵)
//│ in (fun ys¹⁷⁶ -> let h⁹⁴ = h⁹³
//│ in let t⁹⁴ = mappend₃₁₆(t⁹³, ys¹⁷⁶)
//│ in (fun ys¹⁷⁷ -> [LH_C h⁹⁴ mappend₂₁₁₈(t⁹⁴, ys¹⁷⁷)])) | LH_N  => ys¹⁷⁵}: 2370
//│ [LH_C ' ' [LH_N]]: 2543 --->
//│ 	case xs⁸³ of {LH_C h⁹² t⁹² => let h⁹³ = h⁹²
//│ in let t⁹³ = mappend₀₁₃(t⁹², ys¹⁷⁵)
//│ in (fun ys¹⁷⁶ -> let h⁹⁴ = h⁹³
//│ in let t⁹⁴ = mappend₃₁₆(t⁹³, ys¹⁷⁶)
//│ in (fun ys¹⁷⁷ -> [LH_C h⁹⁴ mappend₂₁₁₈(t⁹⁴, ys¹⁷⁷)])) | LH_N  => ys¹⁷⁵}: 2370
//│ [LH_N]: 2547 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁶³ t⁶³ => let h⁶⁴ = h⁶³
//│ in let t⁶⁴ = take_lz₁₀₁((n⁵ - 1), t⁶³)
//│ in (fun ys¹⁰⁷ -> let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₁₁₃(t⁶⁴, ys¹⁰⁷)
//│ in mappend₀₁₅(h⁶⁵, concat₀₁₉(t⁶⁵))) | LH_N  => (fun ys¹⁰⁸ -> ys¹⁰⁸)}: 1754
//│ 	case force⁰(ls⁹) of {LH_C h¹¹⁹ t¹¹⁹ => let h¹²⁰ = h¹¹⁹
//│ in let t¹²⁰ = take_lz₀₀₁((n⁹ - 1), t¹¹⁹)
//│ in mappend₀₁₄(h¹²⁰, concat₀₁₈(t¹²⁰)) | LH_N  => (fun ys²¹⁵ -> ys²¹⁵)}: 2973
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3259
//│ [LH_N]: 2663 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁹⁷ t⁹⁷ => let h⁹⁸ = h⁹⁷
//│ in let t⁹⁸ = take_lz₀₀₀((n⁷ - 1), t⁹⁷)
//│ in mappend₀₁₁(h⁹⁸, concat₀₁₃(t⁹⁸)) | LH_N  => (fun ys¹⁸² -> ys¹⁸²)}: 2435
//│ 	case force⁰(ls⁸) of {LH_C h⁹⁹ t⁹⁹ => let h¹⁰⁰ = h⁹⁹
//│ in let t¹⁰⁰ = take_lz₁₀₀((n⁸ - 1), t⁹⁹)
//│ in (fun ys¹⁸⁵ -> let h¹⁰¹ = h¹⁰⁰
//│ in let t¹⁰¹ = mappend₁₁₁(t¹⁰⁰, ys¹⁸⁵)
//│ in mappend₀₁₂(h¹⁰¹, concat₀₁₄(t¹⁰¹))) | LH_N  => (fun ys¹⁸⁶ -> ys¹⁸⁶)}: 2486
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2676
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 3012 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹¹ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹¹(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁷) | _  => error⁰}: 2723
//│ [LH_N]: 3123 --->
//│ 	case xs⁵⁰ of {LH_C h⁷⁵ t⁷⁵ => let h⁷⁶ = h⁷⁵
//│ in let t⁷⁶ = mappend₀₁₀(t⁷⁵, ys¹²⁶)
//│ in (fun ys¹²⁷ -> let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = mappend₃₁₁(t⁷⁶, ys¹²⁷)
//│ in (fun ys¹²⁸ -> [LH_C h⁷⁷ mappend₂₁₅(t⁷⁷, ys¹²⁸)])) | LH_N  => ys¹²⁶}: 1925
//│ [LH_C ' ' [LH_N]]: 3124 --->
//│ 	case xs⁵⁰ of {LH_C h⁷⁵ t⁷⁵ => let h⁷⁶ = h⁷⁵
//│ in let t⁷⁶ = mappend₀₁₀(t⁷⁵, ys¹²⁶)
//│ in (fun ys¹²⁷ -> let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = mappend₃₁₁(t⁷⁶, ys¹²⁷)
//│ in (fun ys¹²⁸ -> [LH_C h⁷⁷ mappend₂₁₅(t⁷⁷, ys¹²⁸)])) | LH_N  => ys¹²⁶}: 1925
//│ [LH_N]: 3128 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁹⁷ t⁹⁷ => let h⁹⁸ = h⁹⁷
//│ in let t⁹⁸ = take_lz₀₀₀((n⁷ - 1), t⁹⁷)
//│ in mappend₀₁₁(h⁹⁸, concat₀₁₃(t⁹⁸)) | LH_N  => (fun ys¹⁸² -> ys¹⁸²)}: 2435
//│ 	case force⁰(ls⁸) of {LH_C h⁹⁹ t⁹⁹ => let h¹⁰⁰ = h⁹⁹
//│ in let t¹⁰⁰ = take_lz₁₀₀((n⁸ - 1), t⁹⁹)
//│ in (fun ys¹⁸⁵ -> let h¹⁰¹ = h¹⁰⁰
//│ in let t¹⁰¹ = mappend₁₁₁(t¹⁰⁰, ys¹⁸⁵)
//│ in mappend₀₁₂(h¹⁰¹, concat₀₁₄(t¹⁰¹))) | LH_N  => (fun ys¹⁸⁶ -> ys¹⁸⁶)}: 2486
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2676
//│ [LH_N]: 3246 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁶³ t⁶³ => let h⁶⁴ = h⁶³
//│ in let t⁶⁴ = take_lz₁₀₁((n⁵ - 1), t⁶³)
//│ in (fun ys¹⁰⁷ -> let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₁₁₃(t⁶⁴, ys¹⁰⁷)
//│ in mappend₀₁₅(h⁶⁵, concat₀₁₉(t⁶⁵))) | LH_N  => (fun ys¹⁰⁸ -> ys¹⁰⁸)}: 1754
//│ 	case force⁰(ls⁹) of {LH_C h¹¹⁹ t¹¹⁹ => let h¹²⁰ = h¹¹⁹
//│ in let t¹²⁰ = take_lz₀₀₁((n⁹ - 1), t¹¹⁹)
//│ in mappend₀₁₄(h¹²⁰, concat₀₁₈(t¹²⁰)) | LH_N  => (fun ys²¹⁵ -> ys²¹⁵)}: 2973
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3259
//│ ------------------
//│ case xs¹⁶ of {LH_C h⁴² t⁴² => let h⁴³ = h⁴²
//│ in let t⁴³ = mappend₀₀₀(t⁴², ys⁶²)
//│ in (fun ys⁶³ -> let h⁴⁴ = h⁴³
//│ in let t⁴⁴ = mappend₃₀₁(t⁴³, ys⁶³)
//│ in (fun ys⁶⁴ -> [LH_C h⁴⁴ mappend₂₀₅(t⁴⁴, ys⁶⁴)])) | LH_N  => ys⁶²}: 1163 --->
//│ 	[LH_N]: 1213
//│ 	[LH_C ' ' [LH_N]]: 1214
//│ case force⁰(ls⁴) of {LH_C h⁵⁰ t⁵⁰ => let h⁵¹ = h⁵⁰
//│ in let t⁵¹ = take_lz₀₁₀((n⁴ - 1), t⁵⁰)
//│ in mappend₀₀₁(h⁵¹, concat₀₀₃(t⁵¹)) | LH_N  => (fun ys⁷⁶ -> ys⁷⁶)}: 1376 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 1514
//│ case force⁰(ls⁵) of {LH_C h⁶³ t⁶³ => let h⁶⁴ = h⁶³
//│ in let t⁶⁴ = take_lz₁₀₁((n⁵ - 1), t⁶³)
//│ in (fun ys¹⁰⁷ -> let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₁₁₃(t⁶⁴, ys¹⁰⁷)
//│ in mappend₀₁₅(h⁶⁵, concat₀₁₉(t⁶⁵))) | LH_N  => (fun ys¹⁰⁸ -> ys¹⁰⁸)}: 1754 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 1514
//│ 	[LH_N]: 2108
//│ 	[LH_N]: 2547
//│ 	[LH_N]: 3246
//│ case xs⁵⁰ of {LH_C h⁷⁵ t⁷⁵ => let h⁷⁶ = h⁷⁵
//│ in let t⁷⁶ = mappend₀₁₀(t⁷⁵, ys¹²⁶)
//│ in (fun ys¹²⁷ -> let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = mappend₃₁₁(t⁷⁶, ys¹²⁷)
//│ in (fun ys¹²⁸ -> [LH_C h⁷⁷ mappend₂₁₅(t⁷⁷, ys¹²⁸)])) | LH_N  => ys¹²⁶}: 1925 --->
//│ 	[LH_N]: 3123
//│ 	[LH_C ' ' [LH_N]]: 3124
//│ case force⁰(ls⁶) of {LH_C h⁸³ t⁸³ => let h⁸⁴ = h⁸³
//│ in let t⁸⁴ = take_lz₁₁₀((n⁶ - 1), t⁸³)
//│ in (fun ys¹⁴⁷ -> let h⁸⁵ = h⁸⁴
//│ in let t⁸⁵ = mappend₁₀₁(t⁸⁴, ys¹⁴⁷)
//│ in mappend₀₀₂(h⁸⁵, concat₀₀₄(t⁸⁵))) | LH_N  => (fun ys¹⁴⁸ -> ys¹⁴⁸)}: 2082 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 1514
//│ case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 2121 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 1514
//│ case xs⁸³ of {LH_C h⁹² t⁹² => let h⁹³ = h⁹²
//│ in let t⁹³ = mappend₀₁₃(t⁹², ys¹⁷⁵)
//│ in (fun ys¹⁷⁶ -> let h⁹⁴ = h⁹³
//│ in let t⁹⁴ = mappend₃₁₆(t⁹³, ys¹⁷⁶)
//│ in (fun ys¹⁷⁷ -> [LH_C h⁹⁴ mappend₂₁₁₈(t⁹⁴, ys¹⁷⁷)])) | LH_N  => ys¹⁷⁵}: 2370 --->
//│ 	[LH_N]: 2542
//│ 	[LH_C ' ' [LH_N]]: 2543
//│ case force⁰(ls⁷) of {LH_C h⁹⁷ t⁹⁷ => let h⁹⁸ = h⁹⁷
//│ in let t⁹⁸ = take_lz₀₀₀((n⁷ - 1), t⁹⁷)
//│ in mappend₀₁₁(h⁹⁸, concat₀₁₃(t⁹⁸)) | LH_N  => (fun ys¹⁸² -> ys¹⁸²)}: 2435 --->
//│ 	[LH_N]: 1218
//│ 	[LH_N]: 2663
//│ 	[LH_N]: 3128
//│ case force⁰(ls⁸) of {LH_C h⁹⁹ t⁹⁹ => let h¹⁰⁰ = h⁹⁹
//│ in let t¹⁰⁰ = take_lz₁₀₀((n⁸ - 1), t⁹⁹)
//│ in (fun ys¹⁸⁵ -> let h¹⁰¹ = h¹⁰⁰
//│ in let t¹⁰¹ = mappend₁₁₁(t¹⁰⁰, ys¹⁸⁵)
//│ in mappend₀₁₂(h¹⁰¹, concat₀₁₄(t¹⁰¹))) | LH_N  => (fun ys¹⁸⁶ -> ys¹⁸⁶)}: 2486 --->
//│ 	[LH_N]: 1218
//│ 	[LH_N]: 2663
//│ 	[LH_N]: 3128
//│ case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2676 --->
//│ 	[LH_N]: 1218
//│ 	[LH_N]: 2663
//│ 	[LH_N]: 3128
//│ case _lh_matchIdent¹⁰ of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹¹ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹¹(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁷) | _  => error⁰}: 2723 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 3012
//│ case force⁰(ls⁹) of {LH_C h¹¹⁹ t¹¹⁹ => let h¹²⁰ = h¹¹⁹
//│ in let t¹²⁰ = take_lz₀₀₁((n⁹ - 1), t¹¹⁹)
//│ in mappend₀₁₄(h¹²⁰, concat₀₁₈(t¹²⁰)) | LH_N  => (fun ys²¹⁵ -> ys²¹⁵)}: 2973 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 1514
//│ 	[LH_N]: 2108
//│ 	[LH_N]: 2547
//│ 	[LH_N]: 3246
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 3015 --->
//│ 	[LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 1484
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 1512
//│ 	[LH_P3 1 0 1]: 2322
//│ case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3259 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 1514
//│ 	[LH_N]: 2108
//│ 	[LH_N]: 2547
//│ 	[LH_N]: 3246
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_N]: 1213 --->
//│ 	case xs¹⁶ of {LH_C h⁴² t⁴² => let h⁴³ = h⁴²
//│ in let t⁴³ = mappend₀₀₀(t⁴², ys⁶²)
//│ in (fun ys⁶³ -> let h⁴⁴ = h⁴³
//│ in let t⁴⁴ = mappend₃₀₁(t⁴³, ys⁶³)
//│ in (fun ys⁶⁴ -> [LH_C h⁴⁴ mappend₂₀₅(t⁴⁴, ys⁶⁴)])) | LH_N  => ys⁶²}: 1163
//│ [LH_C ' ' [LH_N]]: 1214 --->
//│ 	case xs¹⁶ of {LH_C h⁴² t⁴² => let h⁴³ = h⁴²
//│ in let t⁴³ = mappend₀₀₀(t⁴², ys⁶²)
//│ in (fun ys⁶³ -> let h⁴⁴ = h⁴³
//│ in let t⁴⁴ = mappend₃₀₁(t⁴³, ys⁶³)
//│ in (fun ys⁶⁴ -> [LH_C h⁴⁴ mappend₂₀₅(t⁴⁴, ys⁶⁴)])) | LH_N  => ys⁶²}: 1163
//│ [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 1484 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 3015
//│ [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 1512 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 3015
//│ [LH_P3 1 0 1]: 2322 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 3015
//│ [LH_N]: 2542 --->
//│ 	case xs⁸³ of {LH_C h⁹² t⁹² => let h⁹³ = h⁹²
//│ in let t⁹³ = mappend₀₁₃(t⁹², ys¹⁷⁵)
//│ in (fun ys¹⁷⁶ -> let h⁹⁴ = h⁹³
//│ in let t⁹⁴ = mappend₃₁₆(t⁹³, ys¹⁷⁶)
//│ in (fun ys¹⁷⁷ -> [LH_C h⁹⁴ mappend₂₁₁₈(t⁹⁴, ys¹⁷⁷)])) | LH_N  => ys¹⁷⁵}: 2370
//│ [LH_C ' ' [LH_N]]: 2543 --->
//│ 	case xs⁸³ of {LH_C h⁹² t⁹² => let h⁹³ = h⁹²
//│ in let t⁹³ = mappend₀₁₃(t⁹², ys¹⁷⁵)
//│ in (fun ys¹⁷⁶ -> let h⁹⁴ = h⁹³
//│ in let t⁹⁴ = mappend₃₁₆(t⁹³, ys¹⁷⁶)
//│ in (fun ys¹⁷⁷ -> [LH_C h⁹⁴ mappend₂₁₁₈(t⁹⁴, ys¹⁷⁷)])) | LH_N  => ys¹⁷⁵}: 2370
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 3012 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹¹ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹¹(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁷) | _  => error⁰}: 2723
//│ [LH_N]: 3123 --->
//│ 	case xs⁵⁰ of {LH_C h⁷⁵ t⁷⁵ => let h⁷⁶ = h⁷⁵
//│ in let t⁷⁶ = mappend₀₁₀(t⁷⁵, ys¹²⁶)
//│ in (fun ys¹²⁷ -> let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = mappend₃₁₁(t⁷⁶, ys¹²⁷)
//│ in (fun ys¹²⁸ -> [LH_C h⁷⁷ mappend₂₁₅(t⁷⁷, ys¹²⁸)])) | LH_N  => ys¹²⁶}: 1925
//│ [LH_C ' ' [LH_N]]: 3124 --->
//│ 	case xs⁵⁰ of {LH_C h⁷⁵ t⁷⁵ => let h⁷⁶ = h⁷⁵
//│ in let t⁷⁶ = mappend₀₁₀(t⁷⁵, ys¹²⁶)
//│ in (fun ys¹²⁷ -> let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = mappend₃₁₁(t⁷⁶, ys¹²⁷)
//│ in (fun ys¹²⁸ -> [LH_C h⁷⁷ mappend₂₁₅(t⁷⁷, ys¹²⁸)])) | LH_N  => ys¹²⁶}: 1925
//│ ------------------
//│ case xs¹⁶ of {LH_C h⁴² t⁴² => let h⁴³ = h⁴²
//│ in let t⁴³ = mappend₀₀₀(t⁴², ys⁶²)
//│ in (fun ys⁶³ -> let h⁴⁴ = h⁴³
//│ in let t⁴⁴ = mappend₃₀₁(t⁴³, ys⁶³)
//│ in (fun ys⁶⁴ -> [LH_C h⁴⁴ mappend₂₀₅(t⁴⁴, ys⁶⁴)])) | LH_N  => ys⁶²}: 1163 --->
//│ 	[LH_N]: 1213
//│ 	[LH_C ' ' [LH_N]]: 1214
//│ case xs⁵⁰ of {LH_C h⁷⁵ t⁷⁵ => let h⁷⁶ = h⁷⁵
//│ in let t⁷⁶ = mappend₀₁₀(t⁷⁵, ys¹²⁶)
//│ in (fun ys¹²⁷ -> let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = mappend₃₁₁(t⁷⁶, ys¹²⁷)
//│ in (fun ys¹²⁸ -> [LH_C h⁷⁷ mappend₂₁₅(t⁷⁷, ys¹²⁸)])) | LH_N  => ys¹²⁶}: 1925 --->
//│ 	[LH_N]: 3123
//│ 	[LH_C ' ' [LH_N]]: 3124
//│ case xs⁸³ of {LH_C h⁹² t⁹² => let h⁹³ = h⁹²
//│ in let t⁹³ = mappend₀₁₃(t⁹², ys¹⁷⁵)
//│ in (fun ys¹⁷⁶ -> let h⁹⁴ = h⁹³
//│ in let t⁹⁴ = mappend₃₁₆(t⁹³, ys¹⁷⁶)
//│ in (fun ys¹⁷⁷ -> [LH_C h⁹⁴ mappend₂₁₁₈(t⁹⁴, ys¹⁷⁷)])) | LH_N  => ys¹⁷⁵}: 2370 --->
//│ 	[LH_N]: 2542
//│ 	[LH_C ' ' [LH_N]]: 2543
//│ case _lh_matchIdent¹⁰ of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹¹ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹¹(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁷) | _  => error⁰}: 2723 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 3012
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 3015 --->
//│ 	[LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 1484
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 1512
//│ 	[LH_P3 1 0 1]: 2322
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPiDigits_nofib₀₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀₀(_lh_testPiDigits_nofib_arg1²) = 
//│ 	pidgits₀₀₀(_lh_testPiDigits_nofib_arg1²)
//│ 	where
//│ 	def pidgits₀₀₀(_lh_pidgits_arg1²) = 
//│ 		percOp₀₀₀(0, hashOp₀₀₀(0, 
//│ 			let _lh_ampOp_LH_P3_0⁴ = 1
//│ 			in let _lh_ampOp_LH_P3_1⁴ = 0
//│ 			in let _lh_ampOp_LH_P3_2⁴ = 1
//│ 			in (fun _lh_ampOp_arg1⁵ -> 
//│ 				let y⁴ = ((_lh_ampOp_arg1⁵ * 2) + 1)
//│ 				in let _lh_hashOp_LH_P3_0⁷ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁵)
//│ 				in let _lh_hashOp_LH_P3_1⁷ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ 				in let _lh_hashOp_LH_P3_2⁷ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ 				in (fun k¹⁴ -> 
//│ 					let _lh_matchIdent²⁰ = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁷ * 3) + _lh_hashOp_LH_P3_1⁷), _lh_hashOp_LH_P3_2⁷)
//│ 					in _lh_matchIdent²⁰(_lh_hashOp_LH_P3_0⁷, _lh_hashOp_LH_P3_1⁷, _lh_hashOp_LH_P3_2⁷, k¹⁴)))), _lh_pidgits_arg1²)
//│ 		where
//│ 		def hashOp₀₀₀(_lh_hashOp_arg1², _lh_hashOp_arg2²) = 
//│ 			lazy⁰(
//│ 				let k¹⁵ = (_lh_hashOp_arg1² + 1)
//│ 				in let _lh_matchIdent²² = ampOp₀₀₀(k¹⁵, _lh_hashOp_arg2²)
//│ 				in _lh_matchIdent²²(k¹⁵))
//│ 			where
//│ 			def ampOp₀₀₀(_lh_ampOp_arg1², _lh_ampOp_arg2²) = 
//│ 				_lh_ampOp_arg2²(_lh_ampOp_arg1²)
//│ 			def divmod₀₀₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 				let _lh_hashOp_LH_P2_0² = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 				in let _lh_hashOp_LH_P2_1² = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 				in (fun _lh_hashOp_LH_P3_0⁴ -> (fun _lh_hashOp_LH_P3_1⁴ -> (fun _lh_hashOp_LH_P3_2⁴ -> (fun k¹⁰ -> if ((_lh_hashOp_LH_P3_0⁴ > _lh_hashOp_LH_P3_1⁴) || ((_lh_hashOp_LH_P2_1² + _lh_hashOp_LH_P3_0⁴) >= _lh_hashOp_LH_P3_2⁴)) then force⁰(hashOp₀₀₀(k¹⁰, 
//│ 					let _lh_ampOp_LH_P3_0² = _lh_hashOp_LH_P3_0⁴
//│ 					in let _lh_ampOp_LH_P3_1² = _lh_hashOp_LH_P3_1⁴
//│ 					in let _lh_ampOp_LH_P3_2² = _lh_hashOp_LH_P3_2⁴
//│ 					in (fun _lh_ampOp_arg1³ -> 
//│ 						let y² = ((_lh_ampOp_arg1³ * 2) + 1)
//│ 						in let _lh_hashOp_LH_P3_0⁵ = (_lh_ampOp_LH_P3_0² * _lh_ampOp_arg1³)
//│ 						in let _lh_hashOp_LH_P3_1⁵ = ((_lh_ampOp_LH_P3_1² + (_lh_ampOp_LH_P3_0² * 2)) * y²)
//│ 						in let _lh_hashOp_LH_P3_2⁵ = (_lh_ampOp_LH_P3_2² * y²)
//│ 						in (fun k¹¹ -> 
//│ 							let _lh_matchIdent¹⁷ = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁵ * 3) + _lh_hashOp_LH_P3_1⁵), _lh_hashOp_LH_P3_2⁵)
//│ 							in _lh_matchIdent¹⁷(_lh_hashOp_LH_P3_0⁵, _lh_hashOp_LH_P3_1⁵, _lh_hashOp_LH_P3_2⁵, k¹¹))))) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0²) hashOp₀₀₀(k¹⁰, 
//│ 					let _lh_ampOp_LH_P3_0³ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ 					in let _lh_ampOp_LH_P3_1³ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0² * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ 					in let _lh_ampOp_LH_P3_2³ = _lh_hashOp_LH_P3_2⁴
//│ 					in (fun _lh_ampOp_arg1⁴ -> 
//│ 						let y³ = ((_lh_ampOp_arg1⁴ * 2) + 1)
//│ 						in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0³ * _lh_ampOp_arg1⁴)
//│ 						in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1³ + (_lh_ampOp_LH_P3_0³ * 2)) * y³)
//│ 						in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2³ * y³)
//│ 						in (fun k¹² -> 
//│ 							let _lh_matchIdent¹⁸ = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ 							in _lh_matchIdent¹⁸(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹²))))]))))
//│ 		def percOp₀₀₀(_lh_percOp_arg1⁷, _lh_percOp_arg2⁷, _lh_percOp_arg3²²) = 
//│ 			if (_lh_percOp_arg1⁷ >= _lh_percOp_arg3²²) then [LH_N] else 
//│ 				let k¹⁶ = (_lh_percOp_arg1⁷ + 10)
//│ 				in let j²² = min₀₀₀(_lh_percOp_arg3²², k¹⁶)
//│ 				in let _lh_matchIdent²³ = if (k¹⁶ > _lh_percOp_arg3²²) then 
//│ 					let _lh_percOp_LH_P2_0¹⁵ = mappend₁₀₀(take_lz₁₁₀((_lh_percOp_arg3²² % 10), _lh_percOp_arg2⁷), replicate₀₁₀((k¹⁶ - _lh_percOp_arg3²²), 
//│ 						let h¹⁸⁷ = ' '
//│ 						in let t¹⁸⁷ = (fun ys³⁹⁶ -> ys³⁹⁶)
//│ 						in (fun ys³⁹³ -> 
//│ 							let h¹⁸⁸ = h¹⁸⁷
//│ 							in let t¹⁸⁸ = mappend₀₀₀(t¹⁸⁷, ys³⁹³)
//│ 							in (fun ys³⁹⁴ -> 
//│ 								let h¹⁸⁹ = h¹⁸⁸
//│ 								in let t¹⁸⁹ = mappend₃₀₁(t¹⁸⁸, ys³⁹⁴)
//│ 								in (fun ys³⁹⁵ -> [LH_C h¹⁸⁹ mappend₂₀₅(t¹⁸⁹, ys³⁹⁵)])))))
//│ 					in let _lh_percOp_LH_P2_1¹⁵ = lazy⁰([LH_N])
//│ 					in (fun _lh_percOp_arg3²³ -> (fun j²³ -> mappend₂₀₀(mappend₃₀₀(concat₀₀₀(_lh_percOp_LH_P2_0¹⁵), mappend₄₀₀(
//│ 						let h¹⁹⁰ = 't'
//│ 						in let t¹⁹⁰ = 	
//│ 							let h¹⁹¹ = ':'
//│ 							in let t¹⁹¹ = (fun ys³⁹⁷ -> ys³⁹⁷)
//│ 							in (fun ys³⁹⁸ -> 
//│ 								let h¹⁹² = h¹⁹¹
//│ 								in let t¹⁹² = mappend₄₀₁(t¹⁹¹, ys³⁹⁸)
//│ 								in (fun ys³⁹⁹ -> [LH_C h¹⁹² mappend₂₀₁(t¹⁹², ys³⁹⁹)]))
//│ 						in (fun ys⁴⁰⁰ -> 
//│ 							let h¹⁹³ = h¹⁹⁰
//│ 							in let t¹⁹³ = mappend₄₀₂(t¹⁹⁰, ys⁴⁰⁰)
//│ 							in (fun ys⁴⁰¹ -> [LH_C h¹⁹³ mappend₂₀₂(t¹⁹³, ys⁴⁰¹)])), mappend₅₀₀(string_of_int⁰(j²³), 
//│ 						let h¹⁹⁴ = 'n'
//│ 						in let t¹⁹⁴ = (fun ys⁴⁰² -> ys⁴⁰²)
//│ 						in (fun ys⁴⁰³ -> [LH_C h¹⁹⁴ mappend₂₀₃(t¹⁹⁴, ys⁴⁰³)])))), percOp₀₁₀(j²³, _lh_percOp_LH_P2_1¹⁵, _lh_percOp_arg3²³)))) else splitAt_lz₀₁₀(10, _lh_percOp_arg2⁷)
//│ 				in _lh_matchIdent²³(_lh_percOp_arg3²², j²²)
//│ 			where
//│ 			def concat₀₀₀(lss²¹) = 
//│ 				lss²¹
//│ 			def mappend₁₀₀(xs¹⁰⁸, ys²³⁸) = 
//│ 				xs¹⁰⁸(ys²³⁸)
//│ 			def mappend₂₀₀(xs¹⁵³, ys³³⁵) = 
//│ 				xs¹⁵³(ys³³⁵)
//│ 			def mappend₂₀₁(xs¹⁸⁷, ys⁴⁰⁴) = 
//│ 				xs¹⁸⁷(ys⁴⁰⁴)
//│ 			def mappend₂₀₂(xs¹⁶⁵, ys³⁶¹) = 
//│ 				xs¹⁶⁵(ys³⁶¹)
//│ 			def mappend₂₀₃(xs¹⁷⁸, ys³⁷⁸) = 
//│ 				xs¹⁷⁸(ys³⁷⁸)
//│ 			def mappend₃₀₀(xs¹⁷⁹, ys³⁷⁹) = 
//│ 				xs¹⁷⁹(ys³⁷⁹)
//│ 			def mappend₄₀₀(xs¹³⁷, ys³⁰⁴) = 
//│ 				xs¹³⁷(ys³⁰⁴)
//│ 			def mappend₄₀₁(xs¹²⁸, ys²⁷⁴) = 
//│ 				xs¹²⁸(ys²⁷⁴)
//│ 			def mappend₄₀₂(xs¹⁷⁵, ys³⁷⁵) = 
//│ 				xs¹⁷⁵(ys³⁷⁵)
//│ 			def mappend₅₀₀(xs¹⁸¹, ys³⁸¹) = 
//│ 				case xs¹⁸¹ of {
//│ 					LH_C h⁷⁸ t⁷⁸ => 
//│ 						let h¹⁸¹ = h⁷⁸
//│ 						in let t¹⁸¹ = mappend₅₀₀(t⁷⁸, ys³⁸¹)
//│ 						in (fun ys³⁸² -> [LH_C h¹⁸¹ mappend₂₀₄(t¹⁸¹, ys³⁸²)])
//│ 					| LH_N  => ys³⁸¹}
//│ 				where
//│ 				def mappend₂₀₄(xs¹⁹⁴, ys⁴¹¹) = 
//│ 					xs¹⁹⁴(ys⁴¹¹)
//│ 			def min₀₀₀(_lh_min_arg1⁵, _lh_min_arg2⁵) = 
//│ 				if (_lh_min_arg1⁵ > _lh_min_arg2⁵) then _lh_min_arg2⁵ else _lh_min_arg1⁵
//│ 			def percOp₀₁₀(_lh_percOp_arg1⁶, _lh_percOp_arg2⁶, _lh_percOp_arg3²⁰) = 
//│ 				if (_lh_percOp_arg1⁶ >= _lh_percOp_arg3²⁰) then [LH_N] else 
//│ 					let k¹³ = (_lh_percOp_arg1⁶ + 10)
//│ 					in let j²⁰ = min₀₁₀(_lh_percOp_arg3²⁰, k¹³)
//│ 					in let _lh_matchIdent¹⁹ = if (k¹³ > _lh_percOp_arg3²⁰) then 
//│ 						let _lh_percOp_LH_P2_0¹⁴ = mappend₁₁₀(take_lz₁₀₀((_lh_percOp_arg3²⁰ % 10), _lh_percOp_arg2⁶), replicate₀₀₀((k¹³ - _lh_percOp_arg3²⁰), 
//│ 							let h¹⁶⁸ = ' '
//│ 							in let t¹⁶⁸ = (fun ys³⁴² -> ys³⁴²)
//│ 							in (fun ys³³⁹ -> 
//│ 								let h¹⁶⁹ = h¹⁶⁸
//│ 								in let t¹⁶⁹ = mappend₀₁₀(t¹⁶⁸, ys³³⁹)
//│ 								in (fun ys³⁴⁰ -> 
//│ 									let h¹⁷⁰ = h¹⁶⁹
//│ 									in let t¹⁷⁰ = mappend₃₁₁(t¹⁶⁹, ys³⁴⁰)
//│ 									in (fun ys³⁴¹ -> [LH_C h¹⁷⁰ mappend₂₁₅(t¹⁷⁰, ys³⁴¹)])))))
//│ 						in let _lh_percOp_LH_P2_1¹⁴ = lazy⁰([LH_N])
//│ 						in (fun _lh_percOp_arg3²¹ -> (fun j²¹ -> mappend₂₁₁(mappend₃₁₀(concat₀₁₀(_lh_percOp_LH_P2_0¹⁴), mappend₄₁₀(
//│ 							let h¹⁷¹ = 't'
//│ 							in let t¹⁷¹ = 	
//│ 								let h¹⁷² = ':'
//│ 								in let t¹⁷² = (fun ys³⁴³ -> ys³⁴³)
//│ 								in (fun ys³⁴⁴ -> 
//│ 									let h¹⁷³ = h¹⁷²
//│ 									in let t¹⁷³ = mappend₄₁₁(t¹⁷², ys³⁴⁴)
//│ 									in (fun ys³⁴⁵ -> [LH_C h¹⁷³ mappend₂₁₂(t¹⁷³, ys³⁴⁵)]))
//│ 							in (fun ys³⁴⁶ -> 
//│ 								let h¹⁷⁴ = h¹⁷¹
//│ 								in let t¹⁷⁴ = mappend₄₁₂(t¹⁷¹, ys³⁴⁶)
//│ 								in (fun ys³⁴⁷ -> [LH_C h¹⁷⁴ mappend₂₁₃(t¹⁷⁴, ys³⁴⁷)])), mappend₅₁₀(string_of_int⁰(j²¹), 
//│ 							let h¹⁷⁵ = 'n'
//│ 							in let t¹⁷⁵ = (fun ys³⁴⁸ -> ys³⁴⁸)
//│ 							in (fun ys³⁴⁹ -> [LH_C h¹⁷⁵ mappend₂₁₀(t¹⁷⁵, ys³⁴⁹)])))), percOp₀₁₀(j²¹, _lh_percOp_LH_P2_1¹⁴, _lh_percOp_arg3²¹)))) else splitAt_lz₀₀₀(10, _lh_percOp_arg2⁶)
//│ 					in _lh_matchIdent¹⁹(_lh_percOp_arg3²⁰, j²⁰)
//│ 				where
//│ 				def concat₀₁₀(lss²⁵) = 
//│ 					lss²⁵
//│ 				def mappend₁₁₀(xs¹⁴³, ys³¹¹) = 
//│ 					xs¹⁴³(ys³¹¹)
//│ 				def mappend₂₁₀(xs¹⁸⁹, ys⁴⁰⁶) = 
//│ 					xs¹⁸⁹(ys⁴⁰⁶)
//│ 				def mappend₂₁₁(xs¹⁴⁴, ys³¹²) = 
//│ 					xs¹⁴⁴(ys³¹²)
//│ 				def mappend₂₁₂(xs¹²⁹, ys²⁷⁵) = 
//│ 					xs¹²⁹(ys²⁷⁵)
//│ 				def mappend₂₁₃(xs¹⁵⁰, ys³³²) = 
//│ 					xs¹⁵⁰(ys³³²)
//│ 				def mappend₃₁₀(xs¹²³, ys²⁶⁴) = 
//│ 					xs¹²³(ys²⁶⁴)
//│ 				def mappend₄₁₀(xs¹⁷², ys³⁶⁹) = 
//│ 					xs¹⁷²(ys³⁶⁹)
//│ 				def mappend₄₁₁(xs¹⁷⁷, ys³⁷⁷) = 
//│ 					xs¹⁷⁷(ys³⁷⁷)
//│ 				def mappend₄₁₂(xs¹¹³, ys²⁴³) = 
//│ 					xs¹¹³(ys²⁴³)
//│ 				def mappend₅₁₀(xs¹³⁸, ys³⁰⁵) = 
//│ 					case xs¹³⁸ of {
//│ 						LH_C h⁶⁶ t⁶⁶ => 
//│ 							let h¹⁵⁷ = h⁶⁶
//│ 							in let t¹⁵⁷ = mappend₅₁₀(t⁶⁶, ys³⁰⁵)
//│ 							in (fun ys³⁰⁶ -> [LH_C h¹⁵⁷ mappend₂₁₄(t¹⁵⁷, ys³⁰⁶)])
//│ 						| LH_N  => ys³⁰⁵}
//│ 					where
//│ 					def mappend₂₁₄(xs¹²¹, ys²⁶⁰) = 
//│ 						xs¹²¹(ys²⁶⁰)
//│ 				def min₀₁₀(_lh_min_arg1⁶, _lh_min_arg2⁶) = 
//│ 					if (_lh_min_arg1⁶ > _lh_min_arg2⁶) then _lh_min_arg2⁶ else _lh_min_arg1⁶
//│ 				def replicate₀₀₀(_lh_replicate_arg1⁶, _lh_replicate_arg2⁶) = 
//│ 					if (_lh_replicate_arg1⁶ > 0) then 
//│ 						let h¹⁷⁶ = _lh_replicate_arg2⁶
//│ 						in let t¹⁷⁶ = replicate₀₀₀((_lh_replicate_arg1⁶ - 1), _lh_replicate_arg2⁶)
//│ 						in mappend₀₁₀(h¹⁷⁶, concat₀₁₁(t¹⁷⁶)) else (fun ys³⁵³ -> ys³⁵³)
//│ 					where
//│ 					def concat₀₁₁(lss²⁹) = 
//│ 						lss²⁹
//│ 					def mappend₀₁₀(xs¹⁸⁸, ys⁴⁰⁵) = 
//│ 						xs¹⁸⁸(ys⁴⁰⁵)
//│ 						where
//│ 						def mappend₂₁₅(xs¹⁴⁵, ys³¹³) = 
//│ 							xs¹⁴⁵(ys³¹³)
//│ 						def mappend₃₁₁(xs¹⁸³, ys³⁸⁵) = 
//│ 							xs¹⁸³(ys³⁸⁵)
//│ 				def splitAt_lz₀₀₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷) = 
//│ 					let _lh_percOp_LH_P2_0¹³ = take_lz₀₀₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷)
//│ 					in let _lh_percOp_LH_P2_1¹³ = drop_lz₀₀₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷)
//│ 					in (fun _lh_percOp_arg3¹⁹ -> (fun j¹⁹ -> mappend₂₁₆(mappend₃₁₂(concat₀₁₂(_lh_percOp_LH_P2_0¹³), mappend₄₁₃(
//│ 						let h¹⁶³ = 't'
//│ 						in let t¹⁶³ = 	
//│ 							let h¹⁶⁴ = ':'
//│ 							in let t¹⁶⁴ = (fun ys³²¹ -> ys³²¹)
//│ 							in (fun ys³²² -> 
//│ 								let h¹⁶⁵ = h¹⁶⁴
//│ 								in let t¹⁶⁵ = mappend₄₁₄(t¹⁶⁴, ys³²²)
//│ 								in (fun ys³²³ -> [LH_C h¹⁶⁵ mappend₂₁₇(t¹⁶⁵, ys³²³)]))
//│ 						in (fun ys³²⁴ -> 
//│ 							let h¹⁶⁶ = h¹⁶³
//│ 							in let t¹⁶⁶ = mappend₄₁₅(t¹⁶³, ys³²⁴)
//│ 							in (fun ys³²⁵ -> [LH_C h¹⁶⁶ mappend₂₁₈(t¹⁶⁶, ys³²⁵)])), mappend₅₁₁(string_of_int⁰(j¹⁹), 
//│ 						let h¹⁶⁷ = 'n'
//│ 						in let t¹⁶⁷ = (fun ys³²⁶ -> ys³²⁶)
//│ 						in (fun ys³²⁷ -> [LH_C h¹⁶⁷ mappend₂₁₉(t¹⁶⁷, ys³²⁷)])))), percOp₀₁₀(j¹⁹, _lh_percOp_LH_P2_1¹³, _lh_percOp_arg3¹⁹))))
//│ 					where
//│ 					def concat₀₁₂(lss²³) = 
//│ 						lss²³
//│ 					def drop_lz₀₀₀(_lh_drop_lz_arg1⁶, _lh_drop_lz_arg2⁶) = 
//│ 						if (_lh_drop_lz_arg1⁶ > 0) then lazy⁰(
//│ 							let _lh_matchIdent¹⁶ = force⁰(_lh_drop_lz_arg2⁶)
//│ 							in case _lh_matchIdent¹⁶ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1⁶ - 1), _lh_drop_lz_LH_C_1³))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2⁶
//│ 					def mappend₂₁₆(xs¹⁶⁶, ys³⁶²) = 
//│ 						xs¹⁶⁶(ys³⁶²)
//│ 					def mappend₂₁₇(xs¹²⁴, ys²⁶⁵) = 
//│ 						xs¹²⁴(ys²⁶⁵)
//│ 					def mappend₂₁₈(xs¹⁰⁶, ys²³⁶) = 
//│ 						xs¹⁰⁶(ys²³⁶)
//│ 					def mappend₂₁₉(xs¹³¹, ys²⁷⁷) = 
//│ 						xs¹³¹(ys²⁷⁷)
//│ 					def mappend₃₁₂(xs¹⁶¹, ys³⁵⁷) = 
//│ 						xs¹⁶¹(ys³⁵⁷)
//│ 					def mappend₄₁₃(xs¹⁴⁰, ys³⁰⁸) = 
//│ 						xs¹⁴⁰(ys³⁰⁸)
//│ 					def mappend₄₁₄(xs¹⁰⁷, ys²³⁷) = 
//│ 						xs¹⁰⁷(ys²³⁷)
//│ 					def mappend₄₁₅(xs¹⁵⁴, ys³³⁶) = 
//│ 						xs¹⁵⁴(ys³³⁶)
//│ 					def mappend₅₁₁(xs¹⁸², ys³⁸³) = 
//│ 						case xs¹⁸² of {
//│ 							LH_C h⁷³ t⁷³ => 
//│ 								let h¹⁸² = h⁷³
//│ 								in let t¹⁸² = mappend₅₁₁(t⁷³, ys³⁸³)
//│ 								in (fun ys³⁸⁴ -> [LH_C h¹⁸² mappend₂₁₁₀(t¹⁸², ys³⁸⁴)])
//│ 							| LH_N  => ys³⁸³}
//│ 						where
//│ 						def mappend₂₁₁₀(xs¹⁵¹, ys³³³) = 
//│ 							xs¹⁵¹(ys³³³)
//│ 					def take_lz₀₀₀(n¹⁰, ls¹⁰) = 
//│ 						if (n¹⁰ > 0) then case force⁰(ls¹⁰) of {
//│ 							LH_C h⁹⁷ t⁹⁷ => 
//│ 								let h¹³¹ = h⁹⁷
//│ 								in let t¹³¹ = take_lz₀₀₀((n¹⁰ - 1), t⁹⁷)
//│ 								in mappend₀₁₁(h¹³¹, concat₀₁₃(t¹³¹))
//│ 							| LH_N  => (fun ys²⁵¹ -> ys²⁵¹)} else (fun ys²⁵² -> ys²⁵²)
//│ 						where
//│ 						def concat₀₁₃(lss¹⁷) = 
//│ 							lss¹⁷
//│ 						def mappend₀₁₁(xs¹¹⁹, ys²⁵⁶) = 
//│ 							case xs¹¹⁹ of {
//│ 								LH_C h¹⁰⁸ t¹⁰⁸ => 
//│ 									let h¹³⁴ = h¹⁰⁸
//│ 									in let t¹³⁴ = mappend₀₁₁(t¹⁰⁸, ys²⁵⁶)
//│ 									in (fun ys²⁵⁷ -> 
//│ 										let h¹³⁵ = h¹³⁴
//│ 										in let t¹³⁵ = mappend₃₁₃(t¹³⁴, ys²⁵⁷)
//│ 										in (fun ys²⁵⁸ -> [LH_C h¹³⁵ mappend₂₁₁₁(t¹³⁵, ys²⁵⁸)]))
//│ 								| LH_N  => ys²⁵⁶}
//│ 							where
//│ 							def mappend₂₁₁₁(xs¹⁷⁴, ys³⁷⁴) = 
//│ 								xs¹⁷⁴(ys³⁷⁴)
//│ 							def mappend₃₁₃(xs¹⁹⁷, ys⁴¹⁷) = 
//│ 								xs¹⁹⁷(ys⁴¹⁷)
//│ 				def take_lz₁₀₀(n¹², ls¹²) = 
//│ 					if (n¹² > 0) then case force⁰(ls¹²) of {
//│ 						LH_C h⁹⁹ t⁹⁹ => 
//│ 							let h¹³⁸ = h⁹⁹
//│ 							in let t¹³⁸ = take_lz₁₀₀((n¹² - 1), t⁹⁹)
//│ 							in (fun ys²⁶⁶ -> 
//│ 								let h¹³⁹ = h¹³⁸
//│ 								in let t¹³⁹ = mappend₁₁₁(t¹³⁸, ys²⁶⁶)
//│ 								in mappend₀₁₂(h¹³⁹, concat₀₁₄(t¹³⁹)))
//│ 						| LH_N  => (fun ys²⁶⁷ -> ys²⁶⁷)} else (fun ys²⁶⁸ -> ys²⁶⁸)
//│ 					where
//│ 					def concat₀₁₄(lss²⁷) = 
//│ 						lss²⁷
//│ 					def mappend₀₁₂(xs¹⁸⁴, ys³⁸⁶) = 
//│ 						case xs¹⁸⁴ of {
//│ 							LH_C h⁸⁰ t⁸⁰ => 
//│ 								let h¹⁸³ = h⁸⁰
//│ 								in let t¹⁸³ = mappend₀₁₂(t⁸⁰, ys³⁸⁶)
//│ 								in (fun ys³⁸⁷ -> 
//│ 									let h¹⁸⁴ = h¹⁸³
//│ 									in let t¹⁸⁴ = mappend₃₁₄(t¹⁸³, ys³⁸⁷)
//│ 									in (fun ys³⁸⁸ -> [LH_C h¹⁸⁴ mappend₂₁₁₂(t¹⁸⁴, ys³⁸⁸)]))
//│ 							| LH_N  => ys³⁸⁶}
//│ 						where
//│ 						def mappend₂₁₁₂(xs¹¹², ys²⁴²) = 
//│ 							xs¹¹²(ys²⁴²)
//│ 						def mappend₃₁₄(xs¹²⁷, ys²⁷¹) = 
//│ 							xs¹²⁷(ys²⁷¹)
//│ 					def mappend₁₁₁(xs¹⁹³, ys⁴¹⁰) = 
//│ 						xs¹⁹³(ys⁴¹⁰)
//│ 			def replicate₀₁₀(_lh_replicate_arg1⁷, _lh_replicate_arg2⁷) = 
//│ 				if (_lh_replicate_arg1⁷ > 0) then 
//│ 					let h¹⁹⁷ = _lh_replicate_arg2⁷
//│ 					in let t¹⁹⁷ = replicate₀₁₀((_lh_replicate_arg1⁷ - 1), _lh_replicate_arg2⁷)
//│ 					in mappend₀₀₀(h¹⁹⁷, concat₀₀₁(t¹⁹⁷)) else (fun ys⁴¹⁶ -> ys⁴¹⁶)
//│ 				where
//│ 				def concat₀₀₁(lss²⁴) = 
//│ 					lss²⁴
//│ 				def mappend₀₀₀(xs¹⁹², ys⁴⁰⁹) = 
//│ 					xs¹⁹²(ys⁴⁰⁹)
//│ 					where
//│ 					def mappend₂₀₅(xs¹³⁹, ys³⁰⁷) = 
//│ 						xs¹³⁹(ys³⁰⁷)
//│ 					def mappend₃₀₁(xs¹⁴⁹, ys³³¹) = 
//│ 						xs¹⁴⁹(ys³³¹)
//│ 			def splitAt_lz₀₁₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵) = 
//│ 				let _lh_percOp_LH_P2_0¹⁰ = take_lz₀₁₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵)
//│ 				in let _lh_percOp_LH_P2_1¹⁰ = drop_lz₀₁₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵)
//│ 				in (fun _lh_percOp_arg3¹⁵ -> (fun j¹⁵ -> mappend₂₀₆(mappend₃₀₂(concat₀₀₂(_lh_percOp_LH_P2_0¹⁰), mappend₄₀₃(
//│ 					let h¹⁴¹ = 't'
//│ 					in let t¹⁴¹ = 	
//│ 						let h¹⁴² = ':'
//│ 						in let t¹⁴² = (fun ys²⁷⁸ -> ys²⁷⁸)
//│ 						in (fun ys²⁷⁹ -> 
//│ 							let h¹⁴³ = h¹⁴²
//│ 							in let t¹⁴³ = mappend₄₀₄(t¹⁴², ys²⁷⁹)
//│ 							in (fun ys²⁸⁰ -> [LH_C h¹⁴³ mappend₂₀₇(t¹⁴³, ys²⁸⁰)]))
//│ 					in (fun ys²⁸¹ -> 
//│ 						let h¹⁴⁴ = h¹⁴¹
//│ 						in let t¹⁴⁴ = mappend₄₀₅(t¹⁴¹, ys²⁸¹)
//│ 						in (fun ys²⁸² -> [LH_C h¹⁴⁴ mappend₂₀₈(t¹⁴⁴, ys²⁸²)])), mappend₅₀₁(string_of_int⁰(j¹⁵), 
//│ 					let h¹⁴⁵ = 'n'
//│ 					in let t¹⁴⁵ = (fun ys²⁸³ -> ys²⁸³)
//│ 					in (fun ys²⁸⁴ -> [LH_C h¹⁴⁵ mappend₂₀₉(t¹⁴⁵, ys²⁸⁴)])))), percOp₀₁₁(j¹⁵, _lh_percOp_LH_P2_1¹⁰, _lh_percOp_arg3¹⁵))))
//│ 				where
//│ 				def concat₀₀₂(lss³¹) = 
//│ 					lss³¹
//│ 				def drop_lz₀₁₀(_lh_drop_lz_arg1⁵, _lh_drop_lz_arg2⁵) = 
//│ 					if (_lh_drop_lz_arg1⁵ > 0) then lazy⁰(
//│ 						let _lh_matchIdent¹⁴ = force⁰(_lh_drop_lz_arg2⁵)
//│ 						in case _lh_matchIdent¹⁴ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1⁵ - 1), _lh_drop_lz_LH_C_1²))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2⁵
//│ 				def mappend₂₀₆(xs¹¹⁸, ys²⁵⁰) = 
//│ 					xs¹¹⁸(ys²⁵⁰)
//│ 				def mappend₂₀₇(xs¹¹⁷, ys²⁴⁹) = 
//│ 					xs¹¹⁷(ys²⁴⁹)
//│ 				def mappend₂₀₈(xs¹⁰⁵, ys²³⁵) = 
//│ 					xs¹⁰⁵(ys²³⁵)
//│ 				def mappend₂₀₉(xs¹⁴⁶, ys³²⁸) = 
//│ 					xs¹⁴⁶(ys³²⁸)
//│ 				def mappend₃₀₂(xs¹³⁴, ys³⁰⁰) = 
//│ 					xs¹³⁴(ys³⁰⁰)
//│ 				def mappend₄₀₃(xs¹⁶³, ys³⁵⁹) = 
//│ 					xs¹⁶³(ys³⁵⁹)
//│ 				def mappend₄₀₄(xs¹⁷³, ys³⁷⁰) = 
//│ 					xs¹⁷³(ys³⁷⁰)
//│ 				def mappend₄₀₅(xs¹¹⁰, ys²⁴⁰) = 
//│ 					xs¹¹⁰(ys²⁴⁰)
//│ 				def mappend₅₀₁(xs¹³⁵, ys³⁰¹) = 
//│ 					case xs¹³⁵ of {
//│ 						LH_C h⁵⁵ t⁵⁵ => 
//│ 							let h¹⁵⁶ = h⁵⁵
//│ 							in let t¹⁵⁶ = mappend₅₀₁(t⁵⁵, ys³⁰¹)
//│ 							in (fun ys³⁰² -> [LH_C h¹⁵⁶ mappend₂₀₁₀(t¹⁵⁶, ys³⁰²)])
//│ 						| LH_N  => ys³⁰¹}
//│ 					where
//│ 					def mappend₂₀₁₀(xs¹¹¹, ys²⁴¹) = 
//│ 						xs¹¹¹(ys²⁴¹)
//│ 				def percOp₀₁₁(_lh_percOp_arg1⁵, _lh_percOp_arg2⁵, _lh_percOp_arg3¹⁶) = 
//│ 					if (_lh_percOp_arg1⁵ >= _lh_percOp_arg3¹⁶) then [LH_N] else 
//│ 						let k⁹ = (_lh_percOp_arg1⁵ + 10)
//│ 						in let j¹⁶ = min₀₁₁(_lh_percOp_arg3¹⁶, k⁹)
//│ 						in let _lh_matchIdent¹⁵ = if (k⁹ > _lh_percOp_arg3¹⁶) then 
//│ 							let _lh_percOp_LH_P2_0¹¹ = mappend₁₁₂(take_lz₁₀₁((_lh_percOp_arg3¹⁶ % 10), _lh_percOp_arg2⁵), replicate₀₀₁((k⁹ - _lh_percOp_arg3¹⁶), 
//│ 								let h¹⁴⁶ = ' '
//│ 								in let t¹⁴⁶ = (fun ys²⁸⁸ -> ys²⁸⁸)
//│ 								in (fun ys²⁸⁵ -> 
//│ 									let h¹⁴⁷ = h¹⁴⁶
//│ 									in let t¹⁴⁷ = mappend₀₁₃(t¹⁴⁶, ys²⁸⁵)
//│ 									in (fun ys²⁸⁶ -> 
//│ 										let h¹⁴⁸ = h¹⁴⁷
//│ 										in let t¹⁴⁸ = mappend₃₁₆(t¹⁴⁷, ys²⁸⁶)
//│ 										in (fun ys²⁸⁷ -> [LH_C h¹⁴⁸ mappend₂₁₁₈(t¹⁴⁸, ys²⁸⁷)])))))
//│ 							in let _lh_percOp_LH_P2_1¹¹ = lazy⁰([LH_N])
//│ 							in (fun _lh_percOp_arg3¹⁷ -> (fun j¹⁷ -> mappend₂₁₁₄(mappend₃₁₅(concat₀₁₅(_lh_percOp_LH_P2_0¹¹), mappend₄₁₆(
//│ 								let h¹⁴⁹ = 't'
//│ 								in let t¹⁴⁹ = 	
//│ 									let h¹⁵⁰ = ':'
//│ 									in let t¹⁵⁰ = (fun ys²⁸⁹ -> ys²⁸⁹)
//│ 									in (fun ys²⁹⁰ -> 
//│ 										let h¹⁵¹ = h¹⁵⁰
//│ 										in let t¹⁵¹ = mappend₄₁₇(t¹⁵⁰, ys²⁹⁰)
//│ 										in (fun ys²⁹¹ -> [LH_C h¹⁵¹ mappend₂₁₁₅(t¹⁵¹, ys²⁹¹)]))
//│ 								in (fun ys²⁹² -> 
//│ 									let h¹⁵² = h¹⁴⁹
//│ 									in let t¹⁵² = mappend₄₁₈(t¹⁴⁹, ys²⁹²)
//│ 									in (fun ys²⁹³ -> [LH_C h¹⁵² mappend₂₁₁₆(t¹⁵², ys²⁹³)])), mappend₅₁₂(string_of_int⁰(j¹⁷), 
//│ 								let h¹⁵³ = 'n'
//│ 								in let t¹⁵³ = (fun ys²⁹⁴ -> ys²⁹⁴)
//│ 								in (fun ys²⁹⁵ -> [LH_C h¹⁵³ mappend₂₁₁₃(t¹⁵³, ys²⁹⁵)])))), percOp₀₁₁(j¹⁷, _lh_percOp_LH_P2_1¹¹, _lh_percOp_arg3¹⁷)))) else splitAt_lz₀₀₁(10, _lh_percOp_arg2⁵)
//│ 						in _lh_matchIdent¹⁵(_lh_percOp_arg3¹⁶, j¹⁶)
//│ 					where
//│ 					def concat₀₁₅(lss²⁶) = 
//│ 						lss²⁶
//│ 					def mappend₁₁₂(xs¹⁶⁴, ys³⁶⁰) = 
//│ 						xs¹⁶⁴(ys³⁶⁰)
//│ 					def mappend₂₁₁₃(xs¹⁴¹, ys³⁰⁹) = 
//│ 						xs¹⁴¹(ys³⁰⁹)
//│ 					def mappend₂₁₁₄(xs¹⁵⁵, ys³³⁷) = 
//│ 						xs¹⁵⁵(ys³³⁷)
//│ 					def mappend₂₁₁₅(xs¹⁶⁷, ys³⁶³) = 
//│ 						xs¹⁶⁷(ys³⁶³)
//│ 					def mappend₂₁₁₆(xs¹⁸⁵, ys³⁸⁹) = 
//│ 						xs¹⁸⁵(ys³⁸⁹)
//│ 					def mappend₃₁₅(xs¹³³, ys²⁹⁹) = 
//│ 						xs¹³³(ys²⁹⁹)
//│ 					def mappend₄₁₆(xs¹¹⁴, ys²⁴⁴) = 
//│ 						xs¹¹⁴(ys²⁴⁴)
//│ 					def mappend₄₁₇(xs¹⁹⁰, ys⁴⁰⁷) = 
//│ 						xs¹⁹⁰(ys⁴⁰⁷)
//│ 					def mappend₄₁₈(xs¹⁵⁷, ys³⁵⁰) = 
//│ 						xs¹⁵⁷(ys³⁵⁰)
//│ 					def mappend₅₁₂(xs¹⁶⁹, ys³⁶⁵) = 
//│ 						case xs¹⁶⁹ of {
//│ 							LH_C h⁹⁵ t⁹⁵ => 
//│ 								let h¹⁷⁸ = h⁹⁵
//│ 								in let t¹⁷⁸ = mappend₅₁₂(t⁹⁵, ys³⁶⁵)
//│ 								in (fun ys³⁶⁶ -> [LH_C h¹⁷⁸ mappend₂₁₁₇(t¹⁷⁸, ys³⁶⁶)])
//│ 							| LH_N  => ys³⁶⁵}
//│ 						where
//│ 						def mappend₂₁₁₇(xs¹⁷⁶, ys³⁷⁶) = 
//│ 							xs¹⁷⁶(ys³⁷⁶)
//│ 					def min₀₁₁(_lh_min_arg1⁷, _lh_min_arg2⁷) = 
//│ 						if (_lh_min_arg1⁷ > _lh_min_arg2⁷) then _lh_min_arg2⁷ else _lh_min_arg1⁷
//│ 					def replicate₀₀₁(_lh_replicate_arg1⁵, _lh_replicate_arg2⁵) = 
//│ 						if (_lh_replicate_arg1⁵ > 0) then 
//│ 							let h¹³⁰ = _lh_replicate_arg2⁵
//│ 							in let t¹³⁰ = replicate₀₀₁((_lh_replicate_arg1⁵ - 1), _lh_replicate_arg2⁵)
//│ 							in mappend₀₁₃(h¹³⁰, concat₀₁₆(t¹³⁰)) else (fun ys²⁴⁸ -> ys²⁴⁸)
//│ 						where
//│ 						def concat₀₁₆(lss¹⁹) = 
//│ 							lss¹⁹
//│ 						def mappend₀₁₃(xs¹⁰⁹, ys²³⁹) = 
//│ 							xs¹⁰⁹(ys²³⁹)
//│ 							where
//│ 							def mappend₂₁₁₈(xs¹¹⁵, ys²⁴⁵) = 
//│ 								xs¹¹⁵(ys²⁴⁵)
//│ 							def mappend₃₁₆(xs¹⁶⁰, ys³⁵⁶) = 
//│ 								xs¹⁶⁰(ys³⁵⁶)
//│ 					def splitAt_lz₀₀₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶) = 
//│ 						let _lh_percOp_LH_P2_0¹² = take_lz₀₀₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶)
//│ 						in let _lh_percOp_LH_P2_1¹² = drop_lz₀₀₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶)
//│ 						in (fun _lh_percOp_arg3¹⁸ -> (fun j¹⁸ -> mappend₂₁₁₉(mappend₃₁₇(concat₀₁₇(_lh_percOp_LH_P2_0¹²), mappend₄₁₉(
//│ 							let h¹⁵⁸ = 't'
//│ 							in let t¹⁵⁸ = 	
//│ 								let h¹⁵⁹ = ':'
//│ 								in let t¹⁵⁹ = (fun ys³¹⁴ -> ys³¹⁴)
//│ 								in (fun ys³¹⁵ -> 
//│ 									let h¹⁶⁰ = h¹⁵⁹
//│ 									in let t¹⁶⁰ = mappend₄₁₁₀(t¹⁵⁹, ys³¹⁵)
//│ 									in (fun ys³¹⁶ -> [LH_C h¹⁶⁰ mappend₂₁₂₀(t¹⁶⁰, ys³¹⁶)]))
//│ 							in (fun ys³¹⁷ -> 
//│ 								let h¹⁶¹ = h¹⁵⁸
//│ 								in let t¹⁶¹ = mappend₄₁₁₁(t¹⁵⁸, ys³¹⁷)
//│ 								in (fun ys³¹⁸ -> [LH_C h¹⁶¹ mappend₂₁₂₁(t¹⁶¹, ys³¹⁸)])), mappend₅₁₃(string_of_int⁰(j¹⁸), 
//│ 							let h¹⁶² = 'n'
//│ 							in let t¹⁶² = (fun ys³¹⁹ -> ys³¹⁹)
//│ 							in (fun ys³²⁰ -> [LH_C h¹⁶² mappend₂₁₂₂(t¹⁶², ys³²⁰)])))), percOp₀₁₁(j¹⁸, _lh_percOp_LH_P2_1¹², _lh_percOp_arg3¹⁸))))
//│ 						where
//│ 						def concat₀₁₇(lss²²) = 
//│ 							lss²²
//│ 						def drop_lz₀₀₁(_lh_drop_lz_arg1⁷, _lh_drop_lz_arg2⁷) = 
//│ 							if (_lh_drop_lz_arg1⁷ > 0) then lazy⁰(
//│ 								let _lh_matchIdent²¹ = force⁰(_lh_drop_lz_arg2⁷)
//│ 								in case _lh_matchIdent²¹ of {
//│ 									LH_N  => [LH_N]
//│ 									| LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁷ - 1), _lh_drop_lz_LH_C_1⁴))
//│ 									| _  => error⁰}) else _lh_drop_lz_arg2⁷
//│ 						def mappend₂₁₁₉(xs¹²⁰, ys²⁵⁹) = 
//│ 							xs¹²⁰(ys²⁵⁹)
//│ 						def mappend₂₁₂₀(xs¹²⁵, ys²⁶⁹) = 
//│ 							xs¹²⁵(ys²⁶⁹)
//│ 						def mappend₂₁₂₁(xs¹⁹⁵, ys⁴¹²) = 
//│ 							xs¹⁹⁵(ys⁴¹²)
//│ 						def mappend₂₁₂₂(xs¹⁵⁹, ys³⁵²) = 
//│ 							xs¹⁵⁹(ys³⁵²)
//│ 						def mappend₃₁₇(xs¹⁵⁸, ys³⁵¹) = 
//│ 							xs¹⁵⁸(ys³⁵¹)
//│ 						def mappend₄₁₉(xs¹⁵⁶, ys³³⁸) = 
//│ 							xs¹⁵⁶(ys³³⁸)
//│ 						def mappend₄₁₁₀(xs¹⁷⁰, ys³⁶⁷) = 
//│ 							xs¹⁷⁰(ys³⁶⁷)
//│ 						def mappend₄₁₁₁(xs¹⁹¹, ys⁴⁰⁸) = 
//│ 							xs¹⁹¹(ys⁴⁰⁸)
//│ 						def mappend₅₁₃(xs¹¹⁶, ys²⁴⁶) = 
//│ 							case xs¹¹⁶ of {
//│ 								LH_C h⁷¹ t⁷¹ => 
//│ 									let h¹²⁹ = h⁷¹
//│ 									in let t¹²⁹ = mappend₅₁₃(t⁷¹, ys²⁴⁶)
//│ 									in (fun ys²⁴⁷ -> [LH_C h¹²⁹ mappend₂₁₂₃(t¹²⁹, ys²⁴⁷)])
//│ 								| LH_N  => ys²⁴⁶}
//│ 							where
//│ 							def mappend₂₁₂₃(xs¹⁴⁸, ys³³⁰) = 
//│ 								xs¹⁴⁸(ys³³⁰)
//│ 						def take_lz₀₀₁(n¹³, ls¹³) = 
//│ 							if (n¹³ > 0) then case force⁰(ls¹³) of {
//│ 								LH_C h¹¹⁹ t¹¹⁹ => 
//│ 									let h¹⁴⁰ = h¹¹⁹
//│ 									in let t¹⁴⁰ = take_lz₀₀₁((n¹³ - 1), t¹¹⁹)
//│ 									in mappend₀₁₄(h¹⁴⁰, concat₀₁₈(t¹⁴⁰))
//│ 								| LH_N  => (fun ys²⁷² -> ys²⁷²)} else (fun ys²⁷³ -> ys²⁷³)
//│ 							where
//│ 							def concat₀₁₈(lss²⁸) = 
//│ 								lss²⁸
//│ 							def mappend₀₁₄(xs¹²², ys²⁶¹) = 
//│ 								case xs¹²² of {
//│ 									LH_C h⁶⁸ t⁶⁸ => 
//│ 										let h¹³⁶ = h⁶⁸
//│ 										in let t¹³⁶ = mappend₀₁₄(t⁶⁸, ys²⁶¹)
//│ 										in (fun ys²⁶² -> 
//│ 											let h¹³⁷ = h¹³⁶
//│ 											in let t¹³⁷ = mappend₃₁₈(t¹³⁶, ys²⁶²)
//│ 											in (fun ys²⁶³ -> [LH_C h¹³⁷ mappend₂₁₂₄(t¹³⁷, ys²⁶³)]))
//│ 									| LH_N  => ys²⁶¹}
//│ 								where
//│ 								def mappend₂₁₂₄(xs¹⁸⁰, ys³⁸⁰) = 
//│ 									xs¹⁸⁰(ys³⁸⁰)
//│ 								def mappend₃₁₈(xs¹²⁶, ys²⁷⁰) = 
//│ 									xs¹²⁶(ys²⁷⁰)
//│ 					def take_lz₁₀₁(n¹⁵, ls¹⁵) = 
//│ 						if (n¹⁵ > 0) then case force⁰(ls¹⁵) of {
//│ 							LH_C h⁶³ t⁶³ => 
//│ 								let h¹⁷⁹ = h⁶³
//│ 								in let t¹⁷⁹ = take_lz₁₀₁((n¹⁵ - 1), t⁶³)
//│ 								in (fun ys³⁷¹ -> 
//│ 									let h¹⁸⁰ = h¹⁷⁹
//│ 									in let t¹⁸⁰ = mappend₁₁₃(t¹⁷⁹, ys³⁷¹)
//│ 									in mappend₀₁₅(h¹⁸⁰, concat₀₁₉(t¹⁸⁰)))
//│ 							| LH_N  => (fun ys³⁷² -> ys³⁷²)} else (fun ys³⁷³ -> ys³⁷³)
//│ 						where
//│ 						def concat₀₁₉(lss³⁰) = 
//│ 							lss³⁰
//│ 						def mappend₀₁₅(xs¹⁹⁶, ys⁴¹³) = 
//│ 							case xs¹⁹⁶ of {
//│ 								LH_C h¹²¹ t¹²¹ => 
//│ 									let h¹⁹⁵ = h¹²¹
//│ 									in let t¹⁹⁵ = mappend₀₁₅(t¹²¹, ys⁴¹³)
//│ 									in (fun ys⁴¹⁴ -> 
//│ 										let h¹⁹⁶ = h¹⁹⁵
//│ 										in let t¹⁹⁶ = mappend₃₁₉(t¹⁹⁵, ys⁴¹⁴)
//│ 										in (fun ys⁴¹⁵ -> [LH_C h¹⁹⁶ mappend₂₁₂₅(t¹⁹⁶, ys⁴¹⁵)]))
//│ 								| LH_N  => ys⁴¹³}
//│ 							where
//│ 							def mappend₂₁₂₅(xs¹⁵², ys³³⁴) = 
//│ 								xs¹⁵²(ys³³⁴)
//│ 							def mappend₃₁₉(xs¹³⁶, ys³⁰³) = 
//│ 								xs¹³⁶(ys³⁰³)
//│ 						def mappend₁₁₃(xs¹⁷¹, ys³⁶⁸) = 
//│ 							xs¹⁷¹(ys³⁶⁸)
//│ 				def take_lz₀₁₀(n¹⁴, ls¹⁴) = 
//│ 					if (n¹⁴ > 0) then case force⁰(ls¹⁴) of {
//│ 						LH_C h⁵⁰ t⁵⁰ => 
//│ 							let h¹⁷⁷ = h⁵⁰
//│ 							in let t¹⁷⁷ = take_lz₀₁₀((n¹⁴ - 1), t⁵⁰)
//│ 							in mappend₀₀₁(h¹⁷⁷, concat₀₀₃(t¹⁷⁷))
//│ 						| LH_N  => (fun ys³⁵⁴ -> ys³⁵⁴)} else (fun ys³⁵⁵ -> ys³⁵⁵)
//│ 					where
//│ 					def concat₀₀₃(lss²⁰) = 
//│ 						lss²⁰
//│ 					def mappend₀₀₁(xs¹⁸⁶, ys³⁹⁰) = 
//│ 						case xs¹⁸⁶ of {
//│ 							LH_C h⁵² t⁵² => 
//│ 								let h¹⁸⁵ = h⁵²
//│ 								in let t¹⁸⁵ = mappend₀₀₁(t⁵², ys³⁹⁰)
//│ 								in (fun ys³⁹¹ -> 
//│ 									let h¹⁸⁶ = h¹⁸⁵
//│ 									in let t¹⁸⁶ = mappend₃₀₃(t¹⁸⁵, ys³⁹¹)
//│ 									in (fun ys³⁹² -> [LH_C h¹⁸⁶ mappend₂₀₁₁(t¹⁸⁶, ys³⁹²)]))
//│ 							| LH_N  => ys³⁹⁰}
//│ 						where
//│ 						def mappend₂₀₁₁(xs¹⁶⁸, ys³⁶⁴) = 
//│ 							xs¹⁶⁸(ys³⁶⁴)
//│ 						def mappend₃₀₃(xs¹⁶², ys³⁵⁸) = 
//│ 							xs¹⁶²(ys³⁵⁸)
//│ 			def take_lz₁₁₀(n¹¹, ls¹¹) = 
//│ 				if (n¹¹ > 0) then case force⁰(ls¹¹) of {
//│ 					LH_C h⁸³ t⁸³ => 
//│ 						let h¹³² = h⁸³
//│ 						in let t¹³² = take_lz₁₁₀((n¹¹ - 1), t⁸³)
//│ 						in (fun ys²⁵³ -> 
//│ 							let h¹³³ = h¹³²
//│ 							in let t¹³³ = mappend₁₀₁(t¹³², ys²⁵³)
//│ 							in mappend₀₀₂(h¹³³, concat₀₀₄(t¹³³)))
//│ 					| LH_N  => (fun ys²⁵⁴ -> ys²⁵⁴)} else (fun ys²⁵⁵ -> ys²⁵⁵)
//│ 				where
//│ 				def concat₀₀₄(lss¹⁸) = 
//│ 					lss¹⁸
//│ 				def mappend₀₀₂(xs¹³², ys²⁹⁶) = 
//│ 					case xs¹³² of {
//│ 						LH_C h¹¹⁶ t¹¹⁶ => 
//│ 							let h¹⁵⁴ = h¹¹⁶
//│ 							in let t¹⁵⁴ = mappend₀₀₂(t¹¹⁶, ys²⁹⁶)
//│ 							in (fun ys²⁹⁷ -> 
//│ 								let h¹⁵⁵ = h¹⁵⁴
//│ 								in let t¹⁵⁵ = mappend₃₀₄(t¹⁵⁴, ys²⁹⁷)
//│ 								in (fun ys²⁹⁸ -> [LH_C h¹⁵⁵ mappend₂₀₁₂(t¹⁵⁵, ys²⁹⁸)]))
//│ 						| LH_N  => ys²⁹⁶}
//│ 					where
//│ 					def mappend₂₀₁₂(xs¹⁴², ys³¹⁰) = 
//│ 						xs¹⁴²(ys³¹⁰)
//│ 					def mappend₃₀₄(xs¹⁴⁷, ys³²⁹) = 
//│ 						xs¹⁴⁷(ys³²⁹)
//│ 				def mappend₁₀₁(xs¹³⁰, ys²⁷⁶) = 
//│ 					xs¹³⁰(ys²⁷⁶)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

