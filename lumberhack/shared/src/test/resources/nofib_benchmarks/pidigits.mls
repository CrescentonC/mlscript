:NewParser
:ParseOnly

// pidgits n = 0 % (0 # (1,0,1)) where
//   i%ds
//      | i >= n = []
//      | True = (concat h ++ "\t:" ++ show j ++ "\n") ++ j%t
//      where k = i+10;
//            j = min n k;
//            (h,t) | k > n = (take (n`mod`10) ds ++ replicate (k-n) " ",[])
//                  | True = splitAt 10 ds
//   j # s
//      | n>a || r+n>=d = k # t
//      | True = show q : k # (n*10,(a-(q*d))*10,d)
//      where k = j+1; 
//            t@(n,a,d) = k&s; 
//            (q,r) = (n*3+a) `divMod` d
//   j&(n,a,d) = (n*j,(a+n*2)*y,d*y) where y=(j*2+1)

:lhInHaskell
:lhGenOCaml
drop_lz n ls = if n > 0 then lazy (case (force ls) of { [] -> []; (h:t) -> force (drop_lz (n - 1) t) }) else ls
splitAt_lz n xs = (take_lz n xs, drop_lz n xs)
min a b = if a > b then b else a
replicate n x = if n > 0 then (x:(replicate (n - 1) x)) else []
divmod a b = ((a `div` b), (a `mod` b))
percOp i ds n =
  if i >= n then
    []
  else
    let k = (i + 10) in
          let j = (min n k) in
                case (if k > n then ((take_lz (n `mod` 10) ds) ++ (replicate (k-n) " "), (lazy [])) else (splitAt_lz 10 ds)) of {
                  (h, t) -> (concat h) ++ ("t:" ++ ((string_of_int j) ++ "n")) ++ (percOp j t n)
                }
hashOp j s =
  lazy (let k = j + 1 in
      case (ampOp k s) of {
        (n, a, d) -> case (divmod ((n * 3) + a) d) of {
          (q, r) -> if ((n > a) || ((r + n) >= d)) then (force (hashOp k (n, a, d))) else ((string_of_int q) : (hashOp k (n*10, (a-(q*d))*10, d)))
        }
      })
ampOp j (n,a,d) = let y = ((j * 2) + 1) in (n * j, (a + (n * 2)) * y, d * y)
pidgits n = percOp 0 (hashOp 0 (1,0,1)) n
testPiDigits_nofib n = pidgits n
testPiDigits_nofib $ primId 5000
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testPiDigits_nofib₀^1406(primId⁰(5000))
//│ def ampOp₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = case _lh_ampOp_arg2¹ of {
//│ 	LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 		let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 		in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 	| _  => error⁰}
//│ def concat₀(lss¹) = case lss¹ of {
//│ 	LH_C h²⁶ t²⁸ => mappend₀^1355(h²⁶, concat₀^1358(t²⁸))
//│ 	| LH_N  => [LH_N]}
//│ def divmod₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ def drop_lz₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = if (_lh_drop_lz_arg1¹ > 0) then lazy⁰(
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_drop_lz_arg2¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀^1049((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹))
//│ 		| _  => error⁰}) else _lh_drop_lz_arg2¹
//│ def hashOp₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = lazy⁰(
//│ 	let k³ = (_lh_hashOp_arg1¹ + 1)
//│ 	in let _lh_matchIdent⁶ = ampOp₀^1236(k³, _lh_hashOp_arg2¹)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 			let _lh_matchIdent⁷ = divmod₀^1242(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 			in case _lh_matchIdent⁷ of {
//│ 				LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀^1274(k³, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀^1286(k³, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]
//│ 				| _  => error⁰}
//│ 		| _  => error⁰})
//│ def mappend₀(xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C h²⁵ t²⁷ => [LH_C h²⁵ mappend₀^1344(t²⁷, ys¹³)]
//│ 	| LH_N  => ys¹³}
//│ def mappend₁(xs¹⁰, ys¹⁰) = case xs¹⁰ of {
//│ 	LH_C h²¹ t²³ => [LH_C h²¹ mappend₁^1133(t²³, ys¹⁰)]
//│ 	| LH_N  => ys¹⁰}
//│ def mappend₂(xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C h²³ t²⁵ => [LH_C h²³ mappend₂^1198(t²⁵, ys¹¹)]
//│ 	| LH_N  => ys¹¹}
//│ def mappend₃(xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C h²⁰ t²² => [LH_C h²⁰ mappend₃^1121(t²², ys⁹)]
//│ 	| LH_N  => ys⁹}
//│ def mappend₄(xs¹², ys¹²) = case xs¹² of {
//│ 	LH_C h²⁴ t²⁶ => [LH_C h²⁴ mappend₄^1210(t²⁶, ys¹²)]
//│ 	| LH_N  => ys¹²}
//│ def mappend₅(xs¹⁴, ys¹⁴) = case xs¹⁴ of {
//│ 	LH_C h²⁸ t³⁰ => [LH_C h²⁸ mappend₅^1396(t³⁰, ys¹⁴)]
//│ 	| LH_N  => ys¹⁴}
//│ def min₀(_lh_min_arg1¹, _lh_min_arg2¹) = if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ def percOp₀(_lh_percOp_arg1¹, _lh_percOp_arg2¹, _lh_percOp_arg3¹) = if (_lh_percOp_arg1¹ >= _lh_percOp_arg3¹) then [LH_N] else 
//│ 	let k² = (_lh_percOp_arg1¹ + 10)
//│ 	in let j¹ = min₀^951(_lh_percOp_arg3¹, k²)
//│ 	in let _lh_matchIdent⁴ = if (k² > _lh_percOp_arg3¹) then [LH_P2 mappend₁^961(take_lz₁^962((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀^972((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz₀^988(10, _lh_percOp_arg2¹)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂^995(mappend₃^996(concat₀^997(_lh_percOp_LH_P2_0¹), mappend₄^1001([LH_C 't' [LH_C ':' [LH_N]]], mappend₅^1008(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀^1020(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹))
//│ 		| _  => error⁰}
//│ def pidgits₀(_lh_pidgits_arg1¹) = percOp₀^1168(0, hashOp₀^1171(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ def replicate₀(_lh_replicate_arg1¹, _lh_replicate_arg2¹) = if (_lh_replicate_arg1¹ > 0) then [LH_C _lh_replicate_arg2¹ replicate₀^1328((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)] else [LH_N]
//│ def splitAt_lz₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = [LH_P2 take_lz₀^1183(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀^1188(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ def take_lz₀(n⁵, ls²⁰) = if (n⁵ > 0) then case force⁰(ls²⁰) of {
//│ 	LH_C h²⁷ t²⁹ => [LH_C h²⁷ take_lz₀^1378((n⁵ - 1), t²⁹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz₁(n⁴, ls¹⁹) = if (n⁴ > 0) then case force⁰(ls¹⁹) of {
//│ 	LH_C h²² t²⁴ => [LH_C h²² take_lz₁^1152((n⁴ - 1), t²⁴)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testPiDigits_nofib₀(_lh_testPiDigits_nofib_arg1¹) = pidgits₀^1365(_lh_testPiDigits_nofib_arg1¹)
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec ampOp_d0 _lh_ampOp_arg1_1 _lh_ampOp_arg2_1 =
//│ 		  (match _lh_ampOp_arg2_1 with
//│ 		    | `LH_P3(_lh_ampOp_LH_P3_0_1, _lh_ampOp_LH_P3_1_1, _lh_ampOp_LH_P3_2_1) -> 
//│ 		      (let rec y_1 = ((_lh_ampOp_arg1_1 * 2) + 1) in
//│ 		        (`LH_P3((_lh_ampOp_LH_P3_0_1 * _lh_ampOp_arg1_1), ((_lh_ampOp_LH_P3_1_1 + (_lh_ampOp_LH_P3_0_1 * 2)) * y_1), (_lh_ampOp_LH_P3_2_1 * y_1))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and concat_d0 lss_1 =
//│ 		  (match lss_1 with
//│ 		    | `LH_C(h_2_6, t_2_8) -> 
//│ 		      ((mappend_d0 h_2_6) (concat_d0 t_2_8))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and divmod_d0 _lh_divmod_arg1_1 _lh_divmod_arg2_1 =
//│ 		  (`LH_P2((_lh_divmod_arg1_1 / _lh_divmod_arg2_1), (_lh_divmod_arg1_1 mod _lh_divmod_arg2_1)))
//│ 		and drop_lz_d0 _lh_drop_lz_arg1_1 _lh_drop_lz_arg2_1 =
//│ 		  (if (_lh_drop_lz_arg1_1 > 0) then
//│ 		    (lazy (let rec _lh_matchIdent_5 = (Lazy.force _lh_drop_lz_arg2_1) in
//│ 		      (match _lh_matchIdent_5 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_N)
//│ 		        | `LH_C(_lh_drop_lz_LH_C_0_1, _lh_drop_lz_LH_C_1_1) -> 
//│ 		          (Lazy.force ((drop_lz_d0 (_lh_drop_lz_arg1_1 - 1)) _lh_drop_lz_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		  else
//│ 		    _lh_drop_lz_arg2_1)
//│ 		and hashOp_d0 _lh_hashOp_arg1_1 _lh_hashOp_arg2_1 =
//│ 		  (lazy (let rec k_3 = (_lh_hashOp_arg1_1 + 1) in
//│ 		    (let rec _lh_matchIdent_6 = ((ampOp_d0 k_3) _lh_hashOp_arg2_1) in
//│ 		      (match _lh_matchIdent_6 with
//│ 		        | `LH_P3(_lh_hashOp_LH_P3_0_1, _lh_hashOp_LH_P3_1_1, _lh_hashOp_LH_P3_2_1) -> 
//│ 		          (let rec _lh_matchIdent_7 = ((divmod_d0 ((_lh_hashOp_LH_P3_0_1 * 3) + _lh_hashOp_LH_P3_1_1)) _lh_hashOp_LH_P3_2_1) in
//│ 		            (match _lh_matchIdent_7 with
//│ 		              | `LH_P2(_lh_hashOp_LH_P2_0_1, _lh_hashOp_LH_P2_1_1) -> 
//│ 		                (if ((_lh_hashOp_LH_P3_0_1 > _lh_hashOp_LH_P3_1_1) || ((_lh_hashOp_LH_P2_1_1 + _lh_hashOp_LH_P3_0_1) >= _lh_hashOp_LH_P3_2_1)) then
//│ 		                  (Lazy.force ((hashOp_d0 k_3) (`LH_P3(_lh_hashOp_LH_P3_0_1, _lh_hashOp_LH_P3_1_1, _lh_hashOp_LH_P3_2_1))))
//│ 		                else
//│ 		                  (`LH_C((string_of_int _lh_hashOp_LH_P2_0_1), ((hashOp_d0 k_3) (`LH_P3((_lh_hashOp_LH_P3_0_1 * 10), ((_lh_hashOp_LH_P3_1_1 - (_lh_hashOp_LH_P2_0_1 * _lh_hashOp_LH_P3_2_1)) * 10), _lh_hashOp_LH_P3_2_1))))))
//│ 		              | _ -> 
//│ 		                (failwith "error")))
//│ 		        | _ -> 
//│ 		          (failwith "error")))))
//│ 		and mappend_d0 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(h_2_5, t_2_7) -> 
//│ 		      (`LH_C(h_2_5, ((mappend_d0 t_2_7) ys_1_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_3)
//│ 		and mappend_d1 xs_1_0 ys_1_0 =
//│ 		  (match xs_1_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (`LH_C(h_2_1, ((mappend_d1 t_2_3) ys_1_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_0)
//│ 		and mappend_d2 xs_1_1 ys_1_1 =
//│ 		  (match xs_1_1 with
//│ 		    | `LH_C(h_2_3, t_2_5) -> 
//│ 		      (`LH_C(h_2_3, ((mappend_d2 t_2_5) ys_1_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_1)
//│ 		and mappend_d3 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C(h_2_0, ((mappend_d3 t_2_2) ys_9)))
//│ 		    | `LH_N -> 
//│ 		      ys_9)
//│ 		and mappend_d4 xs_1_2 ys_1_2 =
//│ 		  (match xs_1_2 with
//│ 		    | `LH_C(h_2_4, t_2_6) -> 
//│ 		      (`LH_C(h_2_4, ((mappend_d4 t_2_6) ys_1_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_2)
//│ 		and mappend_d5 xs_1_4 ys_1_4 =
//│ 		  (match xs_1_4 with
//│ 		    | `LH_C(h_2_8, t_3_0) -> 
//│ 		      (`LH_C(h_2_8, ((mappend_d5 t_3_0) ys_1_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_4)
//│ 		and min_d0 _lh_min_arg1_1 _lh_min_arg2_1 =
//│ 		  (if (_lh_min_arg1_1 > _lh_min_arg2_1) then
//│ 		    _lh_min_arg2_1
//│ 		  else
//│ 		    _lh_min_arg1_1)
//│ 		and percOp_d0 _lh_percOp_arg1_1 _lh_percOp_arg2_1 _lh_percOp_arg3_1 =
//│ 		  (if (_lh_percOp_arg1_1 >= _lh_percOp_arg3_1) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (let rec k_2 = (_lh_percOp_arg1_1 + 10) in
//│ 		      (let rec j_1 = ((min_d0 _lh_percOp_arg3_1) k_2) in
//│ 		        (let rec _lh_matchIdent_4 = (if (k_2 > _lh_percOp_arg3_1) then
//│ 		          (`LH_P2(((mappend_d1 ((take_lz_d1 (_lh_percOp_arg3_1 mod 10)) _lh_percOp_arg2_1)) ((replicate_d0 (k_2 - _lh_percOp_arg3_1)) (`LH_C(' ', (`LH_N))))), (lazy (`LH_N))))
//│ 		        else
//│ 		          ((splitAt_lz_d0 10) _lh_percOp_arg2_1)) in
//│ 		          (match _lh_matchIdent_4 with
//│ 		            | `LH_P2(_lh_percOp_LH_P2_0_1, _lh_percOp_LH_P2_1_1) -> 
//│ 		              ((mappend_d2 ((mappend_d3 (concat_d0 _lh_percOp_LH_P2_0_1)) ((mappend_d4 (`LH_C('t', (`LH_C(':', (`LH_N)))))) ((mappend_d5 (string_of_int j_1)) (`LH_C('n', (`LH_N))))))) (((percOp_d0 j_1) _lh_percOp_LH_P2_1_1) _lh_percOp_arg3_1))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))))
//│ 		and pidgits_d0 _lh_pidgits_arg1_1 =
//│ 		  (((percOp_d0 0) ((hashOp_d0 0) (`LH_P3(1, 0, 1)))) _lh_pidgits_arg1_1)
//│ 		and replicate_d0 _lh_replicate_arg1_1 _lh_replicate_arg2_1 =
//│ 		  (if (_lh_replicate_arg1_1 > 0) then
//│ 		    (`LH_C(_lh_replicate_arg2_1, ((replicate_d0 (_lh_replicate_arg1_1 - 1)) _lh_replicate_arg2_1)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and splitAt_lz_d0 _lh_splitAt_lz_arg1_1 _lh_splitAt_lz_arg2_1 =
//│ 		  (`LH_P2(((take_lz_d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1), ((drop_lz_d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1)))
//│ 		and take_lz_d0 n_5 ls_2_0 =
//│ 		  (if (n_5 > 0) then
//│ 		    (match (Lazy.force ls_2_0) with
//│ 		      | `LH_C(h_2_7, t_2_9) -> 
//│ 		        (`LH_C(h_2_7, ((take_lz_d0 (n_5 - 1)) t_2_9)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take_lz_d1 n_4 ls_1_9 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match (Lazy.force ls_1_9) with
//│ 		      | `LH_C(h_2_2, t_2_4) -> 
//│ 		        (`LH_C(h_2_2, ((take_lz_d1 (n_4 - 1)) t_2_4)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testPiDigits_nofib_d0 _lh_testPiDigits_nofib_arg1_1 =
//│ 		  (pidgits_d0 _lh_testPiDigits_nofib_arg1_1);;
//│ 		(testPiDigits_nofib_d0 5000)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPiDigits_nofib₀^1406]
//│ 	[testPiDigits_nofib₀^1406 · pidgits₀^1365]
//│ 		[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171] (hopeless to continue)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · ampOp₀^1236] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · divmod₀^1242] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · hashOp₀^1274] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · hashOp₀^1286] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171] (using original def)
//│ 		[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168]
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · concat₀^1358] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · mappend₀^1355] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · mappend₀^1355 · mappend₀^1344] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · mappend₀^1355] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₁^961] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₁^961 · mappend₁^1133] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₁^961] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₂^995]
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₂^995 · mappend₂^1198] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₂^995] (only one)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₃^996] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₃^996 · mappend₃^1121] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₃^996] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₄^1001] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₄^1001 · mappend₄^1210] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₄^1001] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₅^1008] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₅^1008 · mappend₅^1396] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₅^1008] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · min₀^951] (hopeless to continue)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · concat₀^1358] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · mappend₀^1355] (using original def)
//│ 						[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · mappend₀^1355 · mappend₀^1344] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · mappend₀^1355] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₁^961] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₁^961 · mappend₁^1133] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₁^961] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₂^995] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₂^995 · mappend₂^1198] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₂^995] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₃^996] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₃^996 · mappend₃^1121] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₃^996] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₄^1001] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₄^1001 · mappend₄^1210] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₄^1001] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₅^1008] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₅^1008 · mappend₅^1396] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₅^1008] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · min₀^951] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · percOp₀^1020] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · replicate₀^972] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · replicate₀^972 · replicate₀^1328] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · replicate₀^972] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 						[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · drop_lz₀^1188 · drop_lz₀^1049] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 						[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · take_lz₀^1183 · take_lz₀^1378] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · take_lz₁^962] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · take_lz₁^962 · take_lz₁^1152] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · take_lz₁^962] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · replicate₀^972] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · replicate₀^972 · replicate₀^1328] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · replicate₀^972] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · drop_lz₀^1188 · drop_lz₀^1049] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · take_lz₀^1183 · take_lz₀^1378] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · take_lz₁^962] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · take_lz₁^962 · take_lz₁^1152] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · take_lz₁^962] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPiDigits_nofib₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀(_lh_testPiDigits_nofib_arg1¹) = 
//│ 	pidgits₀₀(_lh_testPiDigits_nofib_arg1¹)
//│ 	where
//│ 	def pidgits₀₀(_lh_pidgits_arg1¹) = 
//│ 		percOp₀₀(0, hashOp₀₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ 		where
//│ 		def hashOp₀₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = 
//│ 			lazy⁰(
//│ 				let k⁴ = (_lh_hashOp_arg1¹ + 1)
//│ 				in let _lh_matchIdent⁷ = ampOp₀₀(k⁴, _lh_hashOp_arg2¹)
//│ 				in case _lh_matchIdent⁷ of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 						let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 						in case _lh_matchIdent⁸ of {
//│ 							LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]
//│ 							| _  => error⁰}
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp₀₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = 
//│ 				case _lh_ampOp_arg2¹ of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 					| _  => error⁰}
//│ 			def divmod₀₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = 
//│ 				[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ 		def percOp₀₀(_lh_percOp_arg1², _lh_percOp_arg2², _lh_percOp_arg3²) = 
//│ 			if (_lh_percOp_arg1² >= _lh_percOp_arg3²) then [LH_N] else 
//│ 				let k³ = (_lh_percOp_arg1² + 10)
//│ 				in let j² = min₀₀(_lh_percOp_arg3², k³)
//│ 				in let _lh_matchIdent⁶ = if (k³ > _lh_percOp_arg3²) then [LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz₀₁(10, _lh_percOp_arg2²)
//│ 				in case _lh_matchIdent⁶ of {
//│ 					LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²))
//│ 					| _  => error⁰}
//│ 			where
//│ 			def concat₀₀(lss¹) = 
//│ 				case lss¹ of {
//│ 					LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹))
//│ 					| LH_N  => [LH_N]}
//│ 				where
//│ 				def mappend₀₀(xs⁹, ys⁹) = 
//│ 					case xs⁹ of {
//│ 						LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)]
//│ 						| LH_N  => ys⁹}
//│ 			def mappend₁₀(xs¹⁶, ys¹⁶) = 
//│ 				case xs¹⁶ of {
//│ 					LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]
//│ 					| LH_N  => ys¹⁶}
//│ 			def mappend₂₀(xs⁶, ys⁶) = 
//│ 				case xs⁶ of {
//│ 					LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)]
//│ 					| LH_N  => ys⁶}
//│ 			def mappend₃₀(xs⁷, ys⁷) = 
//│ 				case xs⁷ of {
//│ 					LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]
//│ 					| LH_N  => ys⁷}
//│ 			def mappend₄₀(xs¹⁵, ys¹⁵) = 
//│ 				case xs¹⁵ of {
//│ 					LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)]
//│ 					| LH_N  => ys¹⁵}
//│ 			def mappend₅₀(xs¹⁴, ys¹⁴) = 
//│ 				case xs¹⁴ of {
//│ 					LH_C h²¹ t²¹ => [LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]
//│ 					| LH_N  => ys¹⁴}
//│ 			def min₀₀(_lh_min_arg1¹, _lh_min_arg2¹) = 
//│ 				if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ 			def percOp₀₁(_lh_percOp_arg1¹, _lh_percOp_arg2¹, _lh_percOp_arg3¹) = 
//│ 				if (_lh_percOp_arg1¹ >= _lh_percOp_arg3¹) then [LH_N] else 
//│ 					let k² = (_lh_percOp_arg1¹ + 10)
//│ 					in let j¹ = min₀₁(_lh_percOp_arg3¹, k²)
//│ 					in let _lh_matchIdent⁵ = if (k² > _lh_percOp_arg3¹) then [LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz₀₀(10, _lh_percOp_arg2¹)
//│ 					in case _lh_matchIdent⁵ of {
//│ 						LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹))
//│ 						| _  => error⁰}
//│ 				where
//│ 				def concat₀₁(lss²) = 
//│ 					case lss² of {
//│ 						LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴))
//│ 						| LH_N  => [LH_N]}
//│ 					where
//│ 					def mappend₀₁(xs¹¹, ys¹¹) = 
//│ 						case xs¹¹ of {
//│ 							LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]
//│ 							| LH_N  => ys¹¹}
//│ 				def mappend₁₁(xs¹⁷, ys¹⁷) = 
//│ 					case xs¹⁷ of {
//│ 						LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]
//│ 						| LH_N  => ys¹⁷}
//│ 				def mappend₂₁(xs¹², ys¹²) = 
//│ 					case xs¹² of {
//│ 						LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)]
//│ 						| LH_N  => ys¹²}
//│ 				def mappend₃₁(xs⁸, ys⁸) = 
//│ 					case xs⁸ of {
//│ 						LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]
//│ 						| LH_N  => ys⁸}
//│ 				def mappend₄₁(xs¹³, ys¹³) = 
//│ 					case xs¹³ of {
//│ 						LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]
//│ 						| LH_N  => ys¹³}
//│ 				def mappend₅₁(xs¹⁰, ys¹⁰) = 
//│ 					case xs¹⁰ of {
//│ 						LH_C h¹³ t¹³ => [LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]
//│ 						| LH_N  => ys¹⁰}
//│ 				def min₀₁(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def replicate₀₀(_lh_replicate_arg1¹, _lh_replicate_arg2¹) = 
//│ 					if (_lh_replicate_arg1¹ > 0) then [LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)] else [LH_N]
//│ 				def splitAt_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = 
//│ 					[LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ 					where
//│ 					def drop_lz₀₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 						if (_lh_drop_lz_arg1² > 0) then lazy⁰(
//│ 							let _lh_matchIdent⁹ = force⁰(_lh_drop_lz_arg2²)
//│ 							in case _lh_matchIdent⁹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2²
//│ 					def take_lz₀₀(n⁵, ls⁵) = 
//│ 						if (n⁵ > 0) then case force⁰(ls⁵) of {
//│ 							LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]
//│ 							| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lz₁₀(n⁴, ls⁴) = 
//│ 					if (n⁴ > 0) then case force⁰(ls⁴) of {
//│ 						LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 			def replicate₀₁(_lh_replicate_arg1², _lh_replicate_arg2²) = 
//│ 				if (_lh_replicate_arg1² > 0) then [LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)] else [LH_N]
//│ 			def splitAt_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 				[LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]
//│ 				where
//│ 				def drop_lz₀₁(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = 
//│ 					if (_lh_drop_lz_arg1¹ > 0) then lazy⁰(
//│ 						let _lh_matchIdent⁴ = force⁰(_lh_drop_lz_arg2¹)
//│ 						in case _lh_matchIdent⁴ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2¹
//│ 				def take_lz₀₁(n², ls²) = 
//│ 					if (n² > 0) then case force⁰(ls²) of {
//│ 						LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 			def take_lz₁₁(n³, ls³) = 
//│ 				if (n³ > 0) then case force⁰(ls³) of {
//│ 					LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]
//│ 					| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 504 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_N]: 564 --->
//│ 	case xs¹¹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)] | LH_N  => ys¹¹}: 868
//│ [LH_C ' ' [LH_N]]: 565 --->
//│ 	case xs¹¹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)] | LH_N  => ys¹¹}: 868
//│ [LH_N]: 569 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_N]: 588 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C ':' [LH_N]]: 589 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 590 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_N]: 598 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C 'n' [LH_N]]: 599 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_N]: 673 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)] | LH_N  => ys⁹}: 794
//│ [LH_C ' ' [LH_N]]: 674 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)] | LH_N  => ys⁹}: 794
//│ [LH_N]: 678 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_N]: 697 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C ':' [LH_N]]: 698 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 699 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_N]: 707 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C 'n' [LH_N]]: 708 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 781 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 828 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 830 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 853 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 855 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 941 --->
//│ 	case _lh_matchIdent⁷ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 1069
//│ [LH_N]: 955 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 977 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 979 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 1033 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 1061 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 517
//│ 	case force⁰(ls²) of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)] | LH_N  => [LH_N]}: 829
//│ 	case force⁰(ls³) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)] | LH_N  => [LH_N]}: 854
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085 --->
//│ 	case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066
//│ [LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 1104 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_P3 1 0 1]: 1117 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1154 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1156 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_N]: 1184 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1221 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ ------------------
//│ case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491 --->
//│ 	[LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628
//│ 	[LH_N]: 707
//│ 	[LH_C 'n' [LH_N]]: 708
//│ 	[LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130
//│ 	[LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167
//│ case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 517 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613 --->
//│ 	[LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571
//│ 	[LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740
//│ case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630 --->
//│ 	[LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792
//│ 	[LH_N]: 955
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722 --->
//│ 	[LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680
//│ 	[LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905
//│ case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762 --->
//│ 	[LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866
//│ 	[LH_N]: 1184
//│ case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)] | LH_N  => ys⁹}: 794 --->
//│ 	NoProd
//│ 	[LH_N]: 673
//│ 	[LH_C ' ' [LH_N]]: 674
//│ case force⁰(ls²) of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)] | LH_N  => [LH_N]}: 829 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ case force⁰(ls³) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)] | LH_N  => [LH_N]}: 854 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ case xs¹¹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)] | LH_N  => ys¹¹}: 868 --->
//│ 	NoProd
//│ 	[LH_N]: 564
//│ 	[LH_C ' ' [LH_N]]: 565
//│ case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880 --->
//│ 	[LH_N]: 598
//│ 	[LH_C 'n' [LH_N]]: 599
//│ 	[LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760
//│ 	[LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804
//│ 	[LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890
//│ case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892 --->
//│ 	[LH_N]: 588
//│ 	[LH_C ':' [LH_N]]: 589
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 590
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944 --->
//│ 	[LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 1033
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 1061
//│ 	[LH_P3 1 0 1]: 1117
//│ case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956 --->
//│ 	[LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827
//│ 	[LH_N]: 828
//│ 	[LH_N]: 830
//│ 	[LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103
//│ 	[LH_N]: 1104
//│ 	[LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194
//│ case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978 --->
//│ 	[LH_N]: 504
//│ 	[LH_N]: 569
//│ 	[LH_N]: 678
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ 	[LH_N]: 1221
//│ case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085
//│ case _lh_matchIdent⁷ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 1069 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 941
//│ case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155 --->
//│ 	[LH_N]: 504
//│ 	[LH_N]: 569
//│ 	[LH_N]: 678
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ 	[LH_N]: 1221
//│ case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169 --->
//│ 	[LH_N]: 697
//│ 	[LH_C ':' [LH_N]]: 698
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 699
//│ case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185 --->
//│ 	[LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780
//│ 	[LH_N]: 781
//│ 	[LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153
//│ 	[LH_N]: 1154
//│ 	[LH_N]: 1156
//│ 	[LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206
//│ case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196 --->
//│ 	[LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852
//│ 	[LH_N]: 853
//│ 	[LH_N]: 855
//│ case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208 --->
//│ 	[LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976
//│ 	[LH_N]: 977
//│ 	[LH_N]: 979
//│ case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234 --->
//│ 	[LH_N]: 504
//│ 	[LH_N]: 569
//│ 	[LH_N]: 678
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ 	[LH_N]: 1221
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_N]: 588 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C ':' [LH_N]]: 589 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 590 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_N]: 598 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C 'n' [LH_N]]: 599 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_N]: 697 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C ':' [LH_N]]: 698 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 699 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_N]: 707 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C 'n' [LH_N]]: 708 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 781 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 828 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 830 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 853 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 855 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_N]: 955 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 977 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 979 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085 --->
//│ 	case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066
//│ [LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 1104 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1154 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1156 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_N]: 1184 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ ------------------
//│ case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491 --->
//│ 	[LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628
//│ 	[LH_N]: 707
//│ 	[LH_C 'n' [LH_N]]: 708
//│ 	[LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130
//│ 	[LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613 --->
//│ 	[LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571
//│ 	[LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740
//│ case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630 --->
//│ 	[LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792
//│ 	[LH_N]: 955
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722 --->
//│ 	[LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680
//│ 	[LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905
//│ case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762 --->
//│ 	[LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866
//│ 	[LH_N]: 1184
//│ case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880 --->
//│ 	[LH_N]: 598
//│ 	[LH_C 'n' [LH_N]]: 599
//│ 	[LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760
//│ 	[LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804
//│ 	[LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890
//│ case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892 --->
//│ 	[LH_N]: 588
//│ 	[LH_C ':' [LH_N]]: 589
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 590
//│ case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956 --->
//│ 	[LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827
//│ 	[LH_N]: 828
//│ 	[LH_N]: 830
//│ 	[LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103
//│ 	[LH_N]: 1104
//│ 	[LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194
//│ case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085
//│ case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169 --->
//│ 	[LH_N]: 697
//│ 	[LH_C ':' [LH_N]]: 698
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 699
//│ case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185 --->
//│ 	[LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780
//│ 	[LH_N]: 781
//│ 	[LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153
//│ 	[LH_N]: 1154
//│ 	[LH_N]: 1156
//│ 	[LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206
//│ case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196 --->
//│ 	[LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852
//│ 	[LH_N]: 853
//│ 	[LH_N]: 855
//│ case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208 --->
//│ 	[LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976
//│ 	[LH_N]: 977
//│ 	[LH_N]: 979
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPiDigits_nofib₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀(_lh_testPiDigits_nofib_arg1²) = 
//│ 	pidgits₀₀(_lh_testPiDigits_nofib_arg1²)
//│ 	where
//│ 	def pidgits₀₀(_lh_pidgits_arg1²) = 
//│ 		percOp₀₀(0, hashOp₀₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1²)
//│ 		where
//│ 		def hashOp₀₀(_lh_hashOp_arg1², _lh_hashOp_arg2²) = 
//│ 			lazy⁰(
//│ 				let k⁸ = (_lh_hashOp_arg1² + 1)
//│ 				in let _lh_matchIdent¹⁴ = ampOp₀₀(k⁸, _lh_hashOp_arg2²)
//│ 				in case _lh_matchIdent¹⁴ of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 						let _lh_matchIdent¹⁵ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 						in _lh_matchIdent¹⁵(_lh_hashOp_LH_P3_0¹, _lh_hashOp_LH_P3_1¹, _lh_hashOp_LH_P3_2¹, k⁸)
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp₀₀(_lh_ampOp_arg1², _lh_ampOp_arg2²) = 
//│ 				case _lh_ampOp_arg2² of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y² = ((_lh_ampOp_arg1² * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1²) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y²) (_lh_ampOp_LH_P3_2¹ * y²)]
//│ 					| _  => error⁰}
//│ 			def divmod₀₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 				let _lh_hashOp_LH_P2_1² = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 				in let _lh_hashOp_LH_P2_0² = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 				in (fun _lh_hashOp_LH_P3_0² -> (fun _lh_hashOp_LH_P3_1² -> (fun _lh_hashOp_LH_P3_2² -> (fun k⁶ -> if ((_lh_hashOp_LH_P3_0² > _lh_hashOp_LH_P3_1²) || ((_lh_hashOp_LH_P2_1² + _lh_hashOp_LH_P3_0²) >= _lh_hashOp_LH_P3_2²)) then force⁰(hashOp₀₀(k⁶, [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0²) hashOp₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0² * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]))))
//│ 		def percOp₀₀(_lh_percOp_arg1³, _lh_percOp_arg2³, _lh_percOp_arg3³) = 
//│ 			if (_lh_percOp_arg1³ >= _lh_percOp_arg3³) then [LH_N] else 
//│ 				let k⁵ = (_lh_percOp_arg1³ + 10)
//│ 				in let j³ = min₀₀(_lh_percOp_arg3³, k⁵)
//│ 				in let _lh_matchIdent¹⁰ = if (k⁵ > _lh_percOp_arg3³) then 
//│ 					let _lh_percOp_LH_P2_1³ = lazy⁰([LH_N])
//│ 					in let _lh_percOp_LH_P2_0³ = mappend₁₀(take_lz₁₁((_lh_percOp_arg3³ % 10), _lh_percOp_arg2³), replicate₀₁((k⁵ - _lh_percOp_arg3³), [LH_C ' ' [LH_N]]))
//│ 					in (fun _lh_percOp_arg3⁴ -> (fun j⁴ -> mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0³), mappend₄₀(
//│ 						let t²⁸ = 	
//│ 							let t³⁰ = (fun ys²⁵ -> ys²⁵)
//│ 							in let h³⁰ = ':'
//│ 							in (fun ys²³ -> 
//│ 								let t³¹ = mappend₄₀(t³⁰, ys²³)
//│ 								in let h³¹ = h³⁰
//│ 								in (fun ys²⁴ -> [LH_C h³¹ mappend₂₀(t³¹, ys²⁴)]))
//│ 						in let h²⁸ = 't'
//│ 						in (fun ys²¹ -> 
//│ 							let t²⁹ = mappend₄₀(t²⁸, ys²¹)
//│ 							in let h²⁹ = h²⁸
//│ 							in (fun ys²² -> [LH_C h²⁹ mappend₂₀(t²⁹, ys²²)])), mappend₅₀(string_of_int⁰(j⁴), 
//│ 						let t³² = (fun ys²⁷ -> ys²⁷)
//│ 						in let h³² = 'n'
//│ 						in (fun ys²⁶ -> [LH_C h³² mappend₂₀(t³², ys²⁶)])))), percOp₀₁(j⁴, _lh_percOp_LH_P2_1³, _lh_percOp_arg3⁴)))) else splitAt_lz₀₁(10, _lh_percOp_arg2³)
//│ 				in _lh_matchIdent¹⁰(_lh_percOp_arg3³, j³)
//│ 			where
//│ 			def concat₀₀(lss³) = 
//│ 				lss³(99)
//│ 				where
//│ 				def mappend₀₀(xs²³, ys⁴⁴) = 
//│ 					case xs²³ of {
//│ 						LH_C h¹² t¹² => 
//│ 							let t⁴² = mappend₀₀(t¹², ys⁴⁴)
//│ 							in let h⁴² = h¹²
//│ 							in (fun ys⁴⁵ -> 
//│ 								let t⁴³ = mappend₃₀(t⁴², ys⁴⁵)
//│ 								in let h⁴³ = h⁴²
//│ 								in (fun ys⁴⁶ -> [LH_C h⁴³ mappend₂₀(t⁴³, ys⁴⁶)]))
//│ 						| LH_N  => ys⁴⁴}
//│ 			def mappend₁₀(xs²⁶, ys⁶³) = 
//│ 				xs²⁶(ys⁶³)
//│ 			def mappend₂₀(xs²⁴, ys⁵⁰) = 
//│ 				xs²⁴(ys⁵⁰)
//│ 			def mappend₃₀(xs²¹, ys³⁶) = 
//│ 				xs²¹(ys³⁶)
//│ 			def mappend₄₀(xs²⁰, ys³⁵) = 
//│ 				xs²⁰(ys³⁵)
//│ 			def mappend₅₀(xs²², ys⁴²) = 
//│ 				case xs²² of {
//│ 					LH_C h²¹ t²¹ => 
//│ 						let t⁴¹ = mappend₅₀(t²¹, ys⁴²)
//│ 						in let h⁴¹ = h²¹
//│ 						in (fun ys⁴³ -> [LH_C h⁴¹ mappend₂₀(t⁴¹, ys⁴³)])
//│ 					| LH_N  => ys⁴²}
//│ 			def min₀₀(_lh_min_arg1⁴, _lh_min_arg2⁴) = 
//│ 				if (_lh_min_arg1⁴ > _lh_min_arg2⁴) then _lh_min_arg2⁴ else _lh_min_arg1⁴
//│ 			def percOp₀₁(_lh_percOp_arg1⁴, _lh_percOp_arg2⁴, _lh_percOp_arg3⁷) = 
//│ 				if (_lh_percOp_arg1⁴ >= _lh_percOp_arg3⁷) then [LH_N] else 
//│ 					let k⁷ = (_lh_percOp_arg1⁴ + 10)
//│ 					in let j⁷ = min₀₁(_lh_percOp_arg3⁷, k⁷)
//│ 					in let _lh_matchIdent¹³ = if (k⁷ > _lh_percOp_arg3⁷) then 
//│ 						let _lh_percOp_LH_P2_1⁶ = lazy⁰([LH_N])
//│ 						in let _lh_percOp_LH_P2_0⁶ = mappend₁₁(take_lz₁₀((_lh_percOp_arg3⁷ % 10), _lh_percOp_arg2⁴), replicate₀₀((k⁷ - _lh_percOp_arg3⁷), [LH_C ' ' [LH_N]]))
//│ 						in (fun _lh_percOp_arg3⁸ -> (fun j⁸ -> mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0⁶), mappend₄₁(
//│ 							let t⁵⁶ = 	
//│ 								let t⁵⁸ = (fun ys⁷¹ -> ys⁷¹)
//│ 								in let h⁵⁸ = ':'
//│ 								in (fun ys⁶⁹ -> 
//│ 									let t⁵⁹ = mappend₄₁(t⁵⁸, ys⁶⁹)
//│ 									in let h⁵⁹ = h⁵⁸
//│ 									in (fun ys⁷⁰ -> [LH_C h⁵⁹ mappend₂₁(t⁵⁹, ys⁷⁰)]))
//│ 							in let h⁵⁶ = 't'
//│ 							in (fun ys⁶⁷ -> 
//│ 								let t⁵⁷ = mappend₄₁(t⁵⁶, ys⁶⁷)
//│ 								in let h⁵⁷ = h⁵⁶
//│ 								in (fun ys⁶⁸ -> [LH_C h⁵⁷ mappend₂₁(t⁵⁷, ys⁶⁸)])), mappend₅₁(string_of_int⁰(j⁸), 
//│ 							let t⁶⁰ = (fun ys⁷³ -> ys⁷³)
//│ 							in let h⁶⁰ = 'n'
//│ 							in (fun ys⁷² -> [LH_C h⁶⁰ mappend₂₁(t⁶⁰, ys⁷²)])))), percOp₀₁(j⁸, _lh_percOp_LH_P2_1⁶, _lh_percOp_arg3⁸)))) else splitAt_lz₀₀(10, _lh_percOp_arg2⁴)
//│ 					in _lh_matchIdent¹³(_lh_percOp_arg3⁷, j⁷)
//│ 				where
//│ 				def concat₀₁(lss⁴) = 
//│ 					lss⁴(99)
//│ 					where
//│ 					def mappend₀₁(xs²⁵, ys⁵⁸) = 
//│ 						case xs²⁵ of {
//│ 							LH_C h¹⁶ t¹⁶ => 
//│ 								let t⁵¹ = mappend₀₁(t¹⁶, ys⁵⁸)
//│ 								in let h⁵¹ = h¹⁶
//│ 								in (fun ys⁵⁹ -> 
//│ 									let t⁵² = mappend₃₁(t⁵¹, ys⁵⁹)
//│ 									in let h⁵² = h⁵¹
//│ 									in (fun ys⁶⁰ -> [LH_C h⁵² mappend₂₁(t⁵², ys⁶⁰)]))
//│ 							| LH_N  => ys⁵⁸}
//│ 				def mappend₁₁(xs²⁸, ys⁷⁴) = 
//│ 					xs²⁸(ys⁷⁴)
//│ 				def mappend₂₁(xs¹⁸, ys¹⁸) = 
//│ 					xs¹⁸(ys¹⁸)
//│ 				def mappend₃₁(xs²⁷, ys⁶⁴) = 
//│ 					xs²⁷(ys⁶⁴)
//│ 				def mappend₄₁(xs²⁹, ys⁷⁵) = 
//│ 					xs²⁹(ys⁷⁵)
//│ 				def mappend₅₁(xs¹⁹, ys¹⁹) = 
//│ 					case xs¹⁹ of {
//│ 						LH_C h¹³ t¹³ => 
//│ 							let t²⁷ = mappend₅₁(t¹³, ys¹⁹)
//│ 							in let h²⁷ = h¹³
//│ 							in (fun ys²⁰ -> [LH_C h²⁷ mappend₂₁(t²⁷, ys²⁰)])
//│ 						| LH_N  => ys¹⁹}
//│ 				def min₀₁(_lh_min_arg1³, _lh_min_arg2³) = 
//│ 					if (_lh_min_arg1³ > _lh_min_arg2³) then _lh_min_arg2³ else _lh_min_arg1³
//│ 				def replicate₀₀(_lh_replicate_arg1³, _lh_replicate_arg2³) = 
//│ 					if (_lh_replicate_arg1³ > 0) then 
//│ 						let t⁵³ = replicate₀₀((_lh_replicate_arg1³ - 1), _lh_replicate_arg2³)
//│ 						in let h⁵³ = _lh_replicate_arg2³
//│ 						in (fun _lh_dummy⁵ -> mappend₀₁(h⁵³, concat₀₁(t⁵³))) else (fun _lh_dummy⁶ -> (fun ys⁶¹ -> ys⁶¹))
//│ 				def splitAt_lz₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³) = 
//│ 					let _lh_percOp_LH_P2_1⁴ = drop_lz₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in let _lh_percOp_LH_P2_0⁴ = take_lz₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in (fun _lh_percOp_arg3⁵ -> (fun j⁵ -> mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0⁴), mappend₄₁(
//│ 						let t³³ = 	
//│ 							let t³⁵ = (fun ys³² -> ys³²)
//│ 							in let h³⁵ = ':'
//│ 							in (fun ys³⁰ -> 
//│ 								let t³⁶ = mappend₄₁(t³⁵, ys³⁰)
//│ 								in let h³⁶ = h³⁵
//│ 								in (fun ys³¹ -> [LH_C h³⁶ mappend₂₁(t³⁶, ys³¹)]))
//│ 						in let h³³ = 't'
//│ 						in (fun ys²⁸ -> 
//│ 							let t³⁴ = mappend₄₁(t³³, ys²⁸)
//│ 							in let h³⁴ = h³³
//│ 							in (fun ys²⁹ -> [LH_C h³⁴ mappend₂₁(t³⁴, ys²⁹)])), mappend₅₁(string_of_int⁰(j⁵), 
//│ 						let t³⁷ = (fun ys³⁴ -> ys³⁴)
//│ 						in let h³⁷ = 'n'
//│ 						in (fun ys³³ -> [LH_C h³⁷ mappend₂₁(t³⁷, ys³³)])))), percOp₀₁(j⁵, _lh_percOp_LH_P2_1⁴, _lh_percOp_arg3⁵))))
//│ 					where
//│ 					def drop_lz₀₀(_lh_drop_lz_arg1⁴, _lh_drop_lz_arg2⁴) = 
//│ 						if (_lh_drop_lz_arg1⁴ > 0) then lazy⁰(
//│ 							let _lh_matchIdent¹² = force⁰(_lh_drop_lz_arg2⁴)
//│ 							in case _lh_matchIdent¹² of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2⁴
//│ 					def take_lz₀₀(n⁹, ls⁹) = 
//│ 						if (n⁹ > 0) then case force⁰(ls⁹) of {
//│ 							LH_C h²² t²² => 
//│ 								let t⁵⁵ = take_lz₀₀((n⁹ - 1), t²²)
//│ 								in let h⁵⁵ = h²²
//│ 								in (fun _lh_dummy⁹ -> mappend₀₁(h⁵⁵, concat₀₁(t⁵⁵)))
//│ 							| LH_N  => (fun _lh_dummy¹⁰ -> (fun ys⁶⁵ -> ys⁶⁵))} else (fun _lh_dummy¹¹ -> (fun ys⁶⁶ -> ys⁶⁶))
//│ 				def take_lz₁₀(n⁷, ls⁷) = 
//│ 					if (n⁷ > 0) then case force⁰(ls⁷) of {
//│ 						LH_C h²⁰ t²⁰ => 
//│ 							let t³⁹ = take_lz₁₀((n⁷ - 1), t²⁰)
//│ 							in let h³⁹ = h²⁰
//│ 							in (fun ys³⁹ -> 
//│ 								let t⁴⁰ = mappend₁₁(t³⁹, ys³⁹)
//│ 								in let h⁴⁰ = h³⁹
//│ 								in (fun _lh_dummy³ -> mappend₀₁(h⁴⁰, concat₀₁(t⁴⁰))))
//│ 						| LH_N  => (fun ys⁴⁰ -> ys⁴⁰)} else (fun ys⁴¹ -> ys⁴¹)
//│ 			def replicate₀₁(_lh_replicate_arg1⁴, _lh_replicate_arg2⁴) = 
//│ 				if (_lh_replicate_arg1⁴ > 0) then 
//│ 					let t⁵⁴ = replicate₀₁((_lh_replicate_arg1⁴ - 1), _lh_replicate_arg2⁴)
//│ 					in let h⁵⁴ = _lh_replicate_arg2⁴
//│ 					in (fun _lh_dummy⁷ -> mappend₀₀(h⁵⁴, concat₀₀(t⁵⁴))) else (fun _lh_dummy⁸ -> (fun ys⁶² -> ys⁶²))
//│ 			def splitAt_lz₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴) = 
//│ 				let _lh_percOp_LH_P2_1⁵ = drop_lz₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 				in let _lh_percOp_LH_P2_0⁵ = take_lz₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 				in (fun _lh_percOp_arg3⁶ -> (fun j⁶ -> mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0⁵), mappend₄₀(
//│ 					let t⁴⁶ = 	
//│ 						let t⁴⁸ = (fun ys⁵⁵ -> ys⁵⁵)
//│ 						in let h⁴⁸ = ':'
//│ 						in (fun ys⁵³ -> 
//│ 							let t⁴⁹ = mappend₄₀(t⁴⁸, ys⁵³)
//│ 							in let h⁴⁹ = h⁴⁸
//│ 							in (fun ys⁵⁴ -> [LH_C h⁴⁹ mappend₂₀(t⁴⁹, ys⁵⁴)]))
//│ 					in let h⁴⁶ = 't'
//│ 					in (fun ys⁵¹ -> 
//│ 						let t⁴⁷ = mappend₄₀(t⁴⁶, ys⁵¹)
//│ 						in let h⁴⁷ = h⁴⁶
//│ 						in (fun ys⁵² -> [LH_C h⁴⁷ mappend₂₀(t⁴⁷, ys⁵²)])), mappend₅₀(string_of_int⁰(j⁶), 
//│ 					let t⁵⁰ = (fun ys⁵⁷ -> ys⁵⁷)
//│ 					in let h⁵⁰ = 'n'
//│ 					in (fun ys⁵⁶ -> [LH_C h⁵⁰ mappend₂₀(t⁵⁰, ys⁵⁶)])))), percOp₀₁(j⁶, _lh_percOp_LH_P2_1⁵, _lh_percOp_arg3⁶))))
//│ 				where
//│ 				def drop_lz₀₁(_lh_drop_lz_arg1³, _lh_drop_lz_arg2³) = 
//│ 					if (_lh_drop_lz_arg1³ > 0) then lazy⁰(
//│ 						let _lh_matchIdent¹¹ = force⁰(_lh_drop_lz_arg2³)
//│ 						in case _lh_matchIdent¹¹ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1¹))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2³
//│ 				def take_lz₀₁(n⁶, ls⁶) = 
//│ 					if (n⁶ > 0) then case force⁰(ls⁶) of {
//│ 						LH_C h¹⁴ t¹⁴ => 
//│ 							let t³⁸ = take_lz₀₁((n⁶ - 1), t¹⁴)
//│ 							in let h³⁸ = h¹⁴
//│ 							in (fun _lh_dummy⁰ -> mappend₀₀(h³⁸, concat₀₀(t³⁸)))
//│ 						| LH_N  => (fun _lh_dummy¹ -> (fun ys³⁷ -> ys³⁷))} else (fun _lh_dummy² -> (fun ys³⁸ -> ys³⁸))
//│ 			def take_lz₁₁(n⁸, ls⁸) = 
//│ 				if (n⁸ > 0) then case force⁰(ls⁸) of {
//│ 					LH_C h¹⁵ t¹⁵ => 
//│ 						let t⁴⁴ = take_lz₁₁((n⁸ - 1), t¹⁵)
//│ 						in let h⁴⁴ = h¹⁵
//│ 						in (fun ys⁴⁷ -> 
//│ 							let t⁴⁵ = mappend₁₀(t⁴⁴, ys⁴⁷)
//│ 							in let h⁴⁵ = h⁴⁴
//│ 							in (fun _lh_dummy⁴ -> mappend₀₀(h⁴⁵, concat₀₀(t⁴⁵))))
//│ 					| LH_N  => (fun ys⁴⁸ -> ys⁴⁸)} else (fun ys⁴⁹ -> ys⁴⁹)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPiDigits_nofib₀₀^1]
//│ 	[testPiDigits_nofib₀₀^1 · pidgits₀₀^311]
//│ 		[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · hashOp₀₀^1074] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · hashOp₀₀^1074 · ampOp₀₀^1092] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · hashOp₀₀^1074 · divmod₀₀^1098] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · hashOp₀₀^1074 · divmod₀₀^1098 · hashOp₀₀^625] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · hashOp₀₀^1074] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · hashOp₀₀^1074 · divmod₀₀^1098 · hashOp₀₀^637] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · hashOp₀₀^1074] (using original def)
//│ 		[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071]
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · concat₀₀^105] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₁₀^80] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₂₀^103] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₂₀^120] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₂₀^140] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₂₀^162] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₃₀^104] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₄₀^109] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₄₀^113] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₄₀^133] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₅₀^153] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₅₀^153 · mappend₂₀^466] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₅₀^153 · mappend₅₀^459] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · mappend₅₀^153] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · min₀₀^67] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175]
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · concat₀₁^961] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₁₁^936] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₂₁^1018] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₂₁^959] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₂₁^976] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₂₁^996] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₃₁^960] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₄₁^965] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₄₁^969] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₄₁^989] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₅₁^1009] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₅₁^1009 · mappend₂₁^43] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₅₁^1009 · mappend₅₁^36] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · mappend₅₁^1009] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · min₀₁^923] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · percOp₀₁^1031] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175] (only one)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · replicate₀₀^947] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · replicate₀₀^947 · concat₀₁^820] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · replicate₀₀^947 · mappend₀₁^817] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · replicate₀₀^947 · mappend₀₁^817 · mappend₀₁^773] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · replicate₀₀^947 · mappend₀₁^817] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · replicate₀₀^947 · mappend₀₁^817 · mappend₂₁^786] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · replicate₀₀^947 · mappend₀₁^817 · mappend₃₁^779] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · replicate₀₀^947 · replicate₀₀^807] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · replicate₀₀^947] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043]
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · concat₀₁^217] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · drop_lz₀₀^205] (hopeless to continue)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · drop_lz₀₀^205 · drop_lz₀₀^395] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · drop_lz₀₀^205] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₂₁^215] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₂₁^232] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₂₁^252] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₂₁^274] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₃₁^216] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₄₁^221] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₄₁^225] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₄₁^245] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₅₁^265] (hopeless to continue)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₅₁^265 · mappend₂₁^43] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₅₁^265 · mappend₅₁^36] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · mappend₅₁^265] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · percOp₀₁^287] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175] (only one)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · take_lz₀₀^210] (hopeless to continue)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · concat₀₁^895] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892 · mappend₀₁^773] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892 · mappend₂₁^786] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892 · mappend₃₁^779] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · take_lz₀₀^882] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · splitAt_lz₀₀^1043 · take_lz₀₀^210] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937 · concat₀₁^440] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937 · mappend₀₁^437] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937 · mappend₀₁^437 · mappend₀₁^773] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937 · mappend₀₁^437] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937 · mappend₀₁^437 · mappend₂₁^786] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937 · mappend₀₁^437 · mappend₃₁^779] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937 · mappend₁₁^431] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937 · take_lz₁₀^421] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · percOp₀₁^175 · take_lz₁₀^937] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · replicate₀₁^91] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · replicate₀₁^91 · concat₀₀^851] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · replicate₀₁^91 · mappend₀₀^848] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · replicate₀₁^91 · mappend₀₀^848 · mappend₀₀^480] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · replicate₀₁^91 · mappend₀₀^848] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · replicate₀₁^91 · mappend₀₀^848 · mappend₂₀^493] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · replicate₀₁^91 · mappend₀₀^848 · mappend₃₀^486] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · replicate₀₁^91 · replicate₀₁^838] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · replicate₀₁^91] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · concat₀₀^688] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · drop_lz₀₁^676] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · drop_lz₀₁^676 · drop_lz₀₁^327] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · drop_lz₀₁^676] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₂₀^686] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₂₀^703] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₂₀^723] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₂₀^745] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₃₀^687] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₄₀^692] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₄₀^696] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₄₀^716] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₅₀^736] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₅₀^736 · mappend₂₀^466] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₅₀^736 · mappend₅₀^459] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · mappend₅₀^736] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · concat₀₁^961] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₁₁^936] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₂₁^1018] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₂₁^959] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₂₁^976] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₂₁^996] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₃₁^960] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₄₁^965] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₄₁^969] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₄₁^989] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₅₁^1009] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₅₁^1009 · mappend₂₁^43] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₅₁^1009 · mappend₅₁^36] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · mappend₅₁^1009] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · min₀₁^923] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · percOp₀₁^1031] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · replicate₀₀^947] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · replicate₀₀^947 · concat₀₁^820] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · replicate₀₀^947 · mappend₀₁^817] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · replicate₀₀^947 · mappend₀₁^817 · mappend₀₁^773] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · replicate₀₀^947 · mappend₀₁^817] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · replicate₀₀^947 · mappend₀₁^817 · mappend₂₁^786] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · replicate₀₀^947 · mappend₀₁^817 · mappend₃₁^779] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · replicate₀₀^947 · replicate₀₀^807] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · replicate₀₀^947] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · concat₀₁^217] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · drop_lz₀₀^205] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · drop_lz₀₀^205 · drop_lz₀₀^395] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · drop_lz₀₀^205] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₂₁^215] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₂₁^232] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₂₁^252] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₂₁^274] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₃₁^216] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₄₁^221] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₄₁^225] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₄₁^245] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₅₁^265] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₅₁^265 · mappend₂₁^43] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₅₁^265 · mappend₅₁^36] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · mappend₅₁^265] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · percOp₀₁^287] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · take_lz₀₀^210] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · concat₀₁^895] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892] (using original def)
//│ 								[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892 · mappend₀₁^773] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892] (using original def)
//│ 								[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892 · mappend₂₁^786] (using original def)
//│ 								[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · mappend₀₁^892 · mappend₃₁^779] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · take_lz₀₀^210 · take_lz₀₀^882] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · splitAt_lz₀₀^1043 · take_lz₀₀^210] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937 · concat₀₁^440] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937 · mappend₀₁^437] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937 · mappend₀₁^437 · mappend₀₁^773] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937 · mappend₀₁^437] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937 · mappend₀₁^437 · mappend₂₁^786] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937 · mappend₀₁^437 · mappend₃₁^779] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937 · mappend₁₁^431] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937 · take_lz₁₀^421] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · percOp₀₁^758 · take_lz₁₀^937] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · take_lz₀₁^681] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · take_lz₀₁^681 · concat₀₀^366] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · take_lz₀₁^681 · mappend₀₀^363] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · take_lz₀₁^681 · mappend₀₀^363 · mappend₀₀^480] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · take_lz₀₁^681 · mappend₀₀^363] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · take_lz₀₁^681 · mappend₀₀^363 · mappend₂₀^493] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · take_lz₀₁^681 · mappend₀₀^363 · mappend₃₀^486] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · take_lz₀₁^681 · take_lz₀₁^353] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · splitAt_lz₀₁^187 · take_lz₀₁^681] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81 · concat₀₀^540] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81 · mappend₀₀^537] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81 · mappend₀₀^537 · mappend₀₀^480] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81 · mappend₀₀^537] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81 · mappend₀₀^537 · mappend₂₀^493] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81 · mappend₀₀^537 · mappend₃₀^486] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81 · mappend₁₀^531] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81 · take_lz₁₁^521] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^311 · percOp₀₀^1071 · take_lz₁₁^81] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPiDigits_nofib₀₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀₀(_lh_testPiDigits_nofib_arg1¹) = 
//│ 	pidgits₀₀₀(_lh_testPiDigits_nofib_arg1¹)
//│ 	where
//│ 	def pidgits₀₀₀(_lh_pidgits_arg1¹) = 
//│ 		percOp₀₀₀(0, hashOp₀₀₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ 		where
//│ 		def hashOp₀₀₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = 
//│ 			lazy⁰(
//│ 				let k⁸ = (_lh_hashOp_arg1¹ + 1)
//│ 				in let _lh_matchIdent¹² = ampOp₀₀₀(k⁸, _lh_hashOp_arg2¹)
//│ 				in case _lh_matchIdent¹² of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => 
//│ 						let _lh_matchIdent¹³ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ 						in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸)
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp₀₀₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = 
//│ 				case _lh_ampOp_arg2¹ of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 					| _  => error⁰}
//│ 			def divmod₀₀₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = 
//│ 				let _lh_hashOp_LH_P2_1¹ = (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)
//│ 				in let _lh_hashOp_LH_P2_0¹ = div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹)
//│ 				in (fun _lh_hashOp_LH_P3_0² -> (fun _lh_hashOp_LH_P3_1² -> (fun _lh_hashOp_LH_P3_2² -> (fun k⁶ -> if ((_lh_hashOp_LH_P3_0² > _lh_hashOp_LH_P3_1²) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0²) >= _lh_hashOp_LH_P3_2²)) then force⁰(hashOp₀₀₀(k⁶, [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]))))
//│ 		def percOp₀₀₀(_lh_percOp_arg1³, _lh_percOp_arg2³, _lh_percOp_arg3¹⁰) = 
//│ 			if (_lh_percOp_arg1³ >= _lh_percOp_arg3¹⁰) then [LH_N] else 
//│ 				let k⁵ = (_lh_percOp_arg1³ + 10)
//│ 				in let j¹⁰ = min₀₀₀(_lh_percOp_arg3¹⁰, k⁵)
//│ 				in let _lh_matchIdent⁹ = if (k⁵ > _lh_percOp_arg3¹⁰) then 
//│ 					let _lh_percOp_LH_P2_1⁷ = lazy⁰([LH_N])
//│ 					in let _lh_percOp_LH_P2_0⁷ = mappend₁₀₀(take_lz₁₁₀((_lh_percOp_arg3¹⁰ % 10), _lh_percOp_arg2³), replicate₀₁₀((k⁵ - _lh_percOp_arg3¹⁰), [LH_C ' ' [LH_N]]))
//│ 					in (fun _lh_percOp_arg3¹¹ -> (fun j¹¹ -> mappend₂₀₀(mappend₃₀₀(concat₀₀₀(_lh_percOp_LH_P2_0⁷), mappend₄₀₀(
//│ 						let t⁹² = 	
//│ 							let t⁹³ = (fun ys¹⁴⁶ -> ys¹⁴⁶)
//│ 							in let h⁹² = ':'
//│ 							in (fun ys¹⁴⁷ -> 
//│ 								let t⁹⁴ = mappend₄₀₁(t⁹³, ys¹⁴⁷)
//│ 								in let h⁹³ = h⁹²
//│ 								in (fun ys¹⁴⁸ -> [LH_C h⁹³ mappend₂₀₁(t⁹⁴, ys¹⁴⁸)]))
//│ 						in let h⁹⁴ = 't'
//│ 						in (fun ys¹⁴⁹ -> 
//│ 							let t⁹⁵ = mappend₄₀₂(t⁹², ys¹⁴⁹)
//│ 							in let h⁹⁵ = h⁹⁴
//│ 							in (fun ys¹⁵⁰ -> [LH_C h⁹⁵ mappend₂₀₂(t⁹⁵, ys¹⁵⁰)])), mappend₅₀₀(string_of_int⁰(j¹¹), 
//│ 						let t⁹⁶ = (fun ys¹⁵¹ -> ys¹⁵¹)
//│ 						in let h⁹⁶ = 'n'
//│ 						in (fun ys¹⁵² -> [LH_C h⁹⁶ mappend₂₀₃(t⁹⁶, ys¹⁵²)])))), percOp₀₁₀(j¹¹, _lh_percOp_LH_P2_1⁷, _lh_percOp_arg3¹¹)))) else splitAt_lz₀₁₀(10, _lh_percOp_arg2³)
//│ 				in _lh_matchIdent⁹(_lh_percOp_arg3¹⁰, j¹⁰)
//│ 			where
//│ 			def concat₀₀₀(lss⁹) = 
//│ 				lss⁹(99)
//│ 			def mappend₁₀₀(xs⁴⁰, ys¹²¹) = 
//│ 				xs⁴⁰(ys¹²¹)
//│ 			def mappend₂₀₀(xs⁸⁵, ys¹⁹⁹) = 
//│ 				xs⁸⁵(ys¹⁹⁹)
//│ 			def mappend₂₀₁(xs⁶⁰, ys¹⁶⁰) = 
//│ 				xs⁶⁰(ys¹⁶⁰)
//│ 			def mappend₂₀₂(xs⁹⁰, ys²⁰⁸) = 
//│ 				xs⁹⁰(ys²⁰⁸)
//│ 			def mappend₂₀₃(xs⁶⁸, ys¹⁶⁸) = 
//│ 				xs⁶⁸(ys¹⁶⁸)
//│ 			def mappend₃₀₀(xs³⁷, ys¹¹⁵) = 
//│ 				xs³⁷(ys¹¹⁵)
//│ 			def mappend₄₀₀(xs⁹⁸, ys²²⁵) = 
//│ 				xs⁹⁸(ys²²⁵)
//│ 			def mappend₄₀₁(xs¹³, ys⁵⁹) = 
//│ 				xs¹³(ys⁵⁹)
//│ 			def mappend₄₀₂(xs⁷², ys¹⁷⁴) = 
//│ 				xs⁷²(ys¹⁷⁴)
//│ 			def mappend₅₀₀(xs⁸¹, ys¹⁸⁵) = 
//│ 				case xs⁸¹ of {
//│ 					LH_C h¹⁰³ t¹⁰³ => 
//│ 						let t¹⁰⁴ = mappend₅₀₀(t¹⁰³, ys¹⁸⁵)
//│ 						in let h¹⁰⁴ = h¹⁰³
//│ 						in (fun ys¹⁸⁶ -> [LH_C h¹⁰⁴ mappend₂₀₄(t¹⁰⁴, ys¹⁸⁶)])
//│ 					| LH_N  => ys¹⁸⁵}
//│ 				where
//│ 				def mappend₂₀₄(xs⁶², ys¹⁶²) = 
//│ 					xs⁶²(ys¹⁶²)
//│ 			def min₀₀₀(_lh_min_arg1⁴, _lh_min_arg2⁴) = 
//│ 				if (_lh_min_arg1⁴ > _lh_min_arg2⁴) then _lh_min_arg2⁴ else _lh_min_arg1⁴
//│ 			def percOp₀₁₀(_lh_percOp_arg1², _lh_percOp_arg2², _lh_percOp_arg3⁷) = 
//│ 				if (_lh_percOp_arg1² >= _lh_percOp_arg3⁷) then [LH_N] else 
//│ 					let k⁴ = (_lh_percOp_arg1² + 10)
//│ 					in let j⁷ = min₀₁₀(_lh_percOp_arg3⁷, k⁴)
//│ 					in let _lh_matchIdent⁷ = if (k⁴ > _lh_percOp_arg3⁷) then 
//│ 						let _lh_percOp_LH_P2_1⁵ = lazy⁰([LH_N])
//│ 						in let _lh_percOp_LH_P2_0⁵ = mappend₁₁₀(take_lz₁₀₀((_lh_percOp_arg3⁷ % 10), _lh_percOp_arg2²), replicate₀₀₀((k⁴ - _lh_percOp_arg3⁷), [LH_C ' ' [LH_N]]))
//│ 						in (fun _lh_percOp_arg3⁸ -> (fun j⁸ -> mappend₂₁₁(mappend₃₁₀(concat₀₁₀(_lh_percOp_LH_P2_0⁵), mappend₄₁₀(
//│ 							let t⁵⁹ = 	
//│ 								let t⁶⁰ = (fun ys⁹¹ -> ys⁹¹)
//│ 								in let h⁵⁹ = ':'
//│ 								in (fun ys⁹² -> 
//│ 									let t⁶¹ = mappend₄₁₁(t⁶⁰, ys⁹²)
//│ 									in let h⁶⁰ = h⁵⁹
//│ 									in (fun ys⁹³ -> [LH_C h⁶⁰ mappend₂₁₂(t⁶¹, ys⁹³)]))
//│ 							in let h⁶¹ = 't'
//│ 							in (fun ys⁹⁴ -> 
//│ 								let t⁶² = mappend₄₁₂(t⁵⁹, ys⁹⁴)
//│ 								in let h⁶² = h⁶¹
//│ 								in (fun ys⁹⁵ -> [LH_C h⁶² mappend₂₁₃(t⁶², ys⁹⁵)])), mappend₅₁₀(string_of_int⁰(j⁸), 
//│ 							let t⁶³ = (fun ys⁹⁶ -> ys⁹⁶)
//│ 							in let h⁶³ = 'n'
//│ 							in (fun ys⁹⁷ -> [LH_C h⁶³ mappend₂₁₀(t⁶³, ys⁹⁷)])))), percOp₀₁₀(j⁸, _lh_percOp_LH_P2_1⁵, _lh_percOp_arg3⁸)))) else splitAt_lz₀₀₀(10, _lh_percOp_arg2²)
//│ 					in _lh_matchIdent⁷(_lh_percOp_arg3⁷, j⁷)
//│ 				where
//│ 				def concat₀₁₀(lss⁵) = 
//│ 					lss⁵(99)
//│ 				def mappend₁₁₀(xs²⁸, ys⁹⁰) = 
//│ 					xs²⁸(ys⁹⁰)
//│ 				def mappend₂₁₀(xs⁴⁹, ys¹³⁷) = 
//│ 					xs⁴⁹(ys¹³⁷)
//│ 				def mappend₂₁₁(xs⁵⁹, ys¹⁵⁹) = 
//│ 					xs⁵⁹(ys¹⁵⁹)
//│ 				def mappend₂₁₂(xs³⁸, ys¹¹⁶) = 
//│ 					xs³⁸(ys¹¹⁶)
//│ 				def mappend₂₁₃(xs⁹⁶, ys²²³) = 
//│ 					xs⁹⁶(ys²²³)
//│ 				def mappend₃₁₀(xs⁶³, ys¹⁶³) = 
//│ 					xs⁶³(ys¹⁶³)
//│ 				def mappend₄₁₀(xs⁵⁰, ys¹³⁸) = 
//│ 					xs⁵⁰(ys¹³⁸)
//│ 				def mappend₄₁₁(xs⁹², ys²¹⁰) = 
//│ 					xs⁹²(ys²¹⁰)
//│ 				def mappend₄₁₂(xs⁴⁴, ys¹³⁰) = 
//│ 					xs⁴⁴(ys¹³⁰)
//│ 				def mappend₅₁₀(xs⁵², ys¹⁴¹) = 
//│ 					case xs⁵² of {
//│ 						LH_C h⁸⁷ t⁸⁷ => 
//│ 							let t⁸⁸ = mappend₅₁₀(t⁸⁷, ys¹⁴¹)
//│ 							in let h⁸⁸ = h⁸⁷
//│ 							in (fun ys¹⁴² -> [LH_C h⁸⁸ mappend₂₁₄(t⁸⁸, ys¹⁴²)])
//│ 						| LH_N  => ys¹⁴¹}
//│ 					where
//│ 					def mappend₂₁₄(xs²⁰, ys⁶⁸) = 
//│ 						xs²⁰(ys⁶⁸)
//│ 				def min₀₁₀(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def replicate₀₀₀(_lh_replicate_arg1³, _lh_replicate_arg2³) = 
//│ 					if (_lh_replicate_arg1³ > 0) then 
//│ 						let t⁷⁵ = replicate₀₀₀((_lh_replicate_arg1³ - 1), _lh_replicate_arg2³)
//│ 						in let h⁷⁵ = _lh_replicate_arg2³
//│ 						in (fun _lh_dummy¹⁶ -> mappend₀₁₀(h⁷⁵, concat₀₁₁(t⁷⁵))) else (fun _lh_dummy¹⁷ -> (fun ys¹²² -> ys¹²²))
//│ 					where
//│ 					def concat₀₁₁(lss¹²) = 
//│ 						lss¹²(99)
//│ 					def mappend₀₁₀(xs⁸⁸, ys²⁰⁴) = 
//│ 						case xs⁸⁸ of {
//│ 							LH_C h¹¹⁵ t¹¹⁵ => 
//│ 								let t¹¹⁶ = mappend₀₁₀(t¹¹⁵, ys²⁰⁴)
//│ 								in let h¹¹⁶ = h¹¹⁵
//│ 								in (fun ys²⁰⁵ -> 
//│ 									let t¹¹⁷ = mappend₃₁₁(t¹¹⁶, ys²⁰⁵)
//│ 									in let h¹¹⁷ = h¹¹⁶
//│ 									in (fun ys²⁰⁶ -> [LH_C h¹¹⁷ mappend₂₁₅(t¹¹⁷, ys²⁰⁶)]))
//│ 							| LH_N  => ys²⁰⁴}
//│ 						where
//│ 						def mappend₂₁₅(xs⁶⁶, ys¹⁶⁶) = 
//│ 							xs⁶⁶(ys¹⁶⁶)
//│ 						def mappend₃₁₁(xs⁹⁷, ys²²⁴) = 
//│ 							xs⁹⁷(ys²²⁴)
//│ 				def splitAt_lz₀₀₀(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴) = 
//│ 					let _lh_percOp_LH_P2_1⁹ = drop_lz₀₀₀(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 					in let _lh_percOp_LH_P2_0⁹ = take_lz₀₀₀(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 					in (fun _lh_percOp_arg3¹⁴ -> (fun j¹⁴ -> mappend₂₁₆(mappend₃₁₂(concat₀₁₂(_lh_percOp_LH_P2_0⁹), mappend₄₁₃(
//│ 						let t¹²⁰ = 	
//│ 							let t¹²¹ = (fun ys²¹⁶ -> ys²¹⁶)
//│ 							in let h¹²⁰ = ':'
//│ 							in (fun ys²¹⁷ -> 
//│ 								let t¹²² = mappend₄₁₄(t¹²¹, ys²¹⁷)
//│ 								in let h¹²¹ = h¹²⁰
//│ 								in (fun ys²¹⁸ -> [LH_C h¹²¹ mappend₂₁₇(t¹²², ys²¹⁸)]))
//│ 						in let h¹²² = 't'
//│ 						in (fun ys²¹⁹ -> 
//│ 							let t¹²³ = mappend₄₁₅(t¹²⁰, ys²¹⁹)
//│ 							in let h¹²³ = h¹²²
//│ 							in (fun ys²²⁰ -> [LH_C h¹²³ mappend₂₁₈(t¹²³, ys²²⁰)])), mappend₅₁₁(string_of_int⁰(j¹⁴), 
//│ 						let t¹²⁴ = (fun ys²²¹ -> ys²²¹)
//│ 						in let h¹²⁴ = 'n'
//│ 						in (fun ys²²² -> [LH_C h¹²⁴ mappend₂₁₉(t¹²⁴, ys²²²)])))), percOp₀₁₀(j¹⁴, _lh_percOp_LH_P2_1⁹, _lh_percOp_arg3¹⁴))))
//│ 					where
//│ 					def concat₀₁₂(lss¹⁰) = 
//│ 						lss¹⁰(99)
//│ 					def drop_lz₀₀₀(_lh_drop_lz_arg1³, _lh_drop_lz_arg2³) = 
//│ 						if (_lh_drop_lz_arg1³ > 0) then lazy⁰(
//│ 							let _lh_matchIdent⁸ = force⁰(_lh_drop_lz_arg2³)
//│ 							in case _lh_matchIdent⁸ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2³
//│ 					def mappend₂₁₆(xs¹⁰¹, ys²²⁸) = 
//│ 						xs¹⁰¹(ys²²⁸)
//│ 					def mappend₂₁₇(xs⁷³, ys¹⁷⁵) = 
//│ 						xs⁷³(ys¹⁷⁵)
//│ 					def mappend₂₁₈(xs¹⁰⁰, ys²²⁷) = 
//│ 						xs¹⁰⁰(ys²²⁷)
//│ 					def mappend₂₁₉(xs³⁹, ys¹¹⁷) = 
//│ 						xs³⁹(ys¹¹⁷)
//│ 					def mappend₃₁₂(xs³³, ys¹⁰²) = 
//│ 						xs³³(ys¹⁰²)
//│ 					def mappend₄₁₃(xs⁵⁷, ys¹⁵⁷) = 
//│ 						xs⁵⁷(ys¹⁵⁷)
//│ 					def mappend₄₁₄(xs¹⁵, ys⁶¹) = 
//│ 						xs¹⁵(ys⁶¹)
//│ 					def mappend₄₁₅(xs²⁶, ys⁸⁰) = 
//│ 						xs²⁶(ys⁸⁰)
//│ 					def mappend₅₁₁(xs⁴¹, ys¹²³) = 
//│ 						case xs⁴¹ of {
//│ 							LH_C h⁷⁶ t⁷⁶ => 
//│ 								let t⁷⁷ = mappend₅₁₁(t⁷⁶, ys¹²³)
//│ 								in let h⁷⁷ = h⁷⁶
//│ 								in (fun ys¹²⁴ -> [LH_C h⁷⁷ mappend₂₁₁₀(t⁷⁷, ys¹²⁴)])
//│ 							| LH_N  => ys¹²³}
//│ 						where
//│ 						def mappend₂₁₁₀(xs⁵⁵, ys¹⁵⁵) = 
//│ 							xs⁵⁵(ys¹⁵⁵)
//│ 					def take_lz₀₀₀(n⁸, ls⁸) = 
//│ 						if (n⁸ > 0) then case force⁰(ls⁸) of {
//│ 							LH_C h¹¹⁸ t¹¹⁸ => 
//│ 								let t¹¹⁹ = take_lz₀₀₀((n⁸ - 1), t¹¹⁸)
//│ 								in let h¹¹⁹ = h¹¹⁸
//│ 								in (fun _lh_dummy²⁴ -> mappend₀₁₁(h¹¹⁹, concat₀₁₃(t¹¹⁹)))
//│ 							| LH_N  => (fun _lh_dummy²⁵ -> (fun ys²¹⁴ -> ys²¹⁴))} else (fun _lh_dummy²⁶ -> (fun ys²¹⁵ -> ys²¹⁵))
//│ 						where
//│ 						def concat₀₁₃(lss⁶) = 
//│ 							lss⁶(99)
//│ 						def mappend₀₁₁(xs³⁵, ys¹⁰⁴) = 
//│ 							case xs³⁵ of {
//│ 								LH_C h⁶⁴ t⁶⁴ => 
//│ 									let t⁶⁵ = mappend₀₁₁(t⁶⁴, ys¹⁰⁴)
//│ 									in let h⁶⁵ = h⁶⁴
//│ 									in (fun ys¹⁰⁵ -> 
//│ 										let t⁶⁶ = mappend₃₁₃(t⁶⁵, ys¹⁰⁵)
//│ 										in let h⁶⁶ = h⁶⁵
//│ 										in (fun ys¹⁰⁶ -> [LH_C h⁶⁶ mappend₂₁₁₁(t⁶⁶, ys¹⁰⁶)]))
//│ 								| LH_N  => ys¹⁰⁴}
//│ 							where
//│ 							def mappend₂₁₁₁(xs⁵⁸, ys¹⁵⁸) = 
//│ 								xs⁵⁸(ys¹⁵⁸)
//│ 							def mappend₃₁₃(xs¹⁹, ys⁶⁷) = 
//│ 								xs¹⁹(ys⁶⁷)
//│ 				def take_lz₁₀₀(n⁴, ls⁴) = 
//│ 					if (n⁴ > 0) then case force⁰(ls⁴) of {
//│ 						LH_C h⁴⁵ t⁴⁵ => 
//│ 							let t⁴⁶ = take_lz₁₀₀((n⁴ - 1), t⁴⁵)
//│ 							in let h⁴⁶ = h⁴⁵
//│ 							in (fun ys⁷¹ -> 
//│ 								let t⁴⁷ = mappend₁₁₁(t⁴⁶, ys⁷¹)
//│ 								in let h⁴⁷ = h⁴⁶
//│ 								in (fun _lh_dummy¹² -> mappend₀₁₂(h⁴⁷, concat₀₁₄(t⁴⁷))))
//│ 						| LH_N  => (fun ys⁷² -> ys⁷²)} else (fun ys⁷³ -> ys⁷³)
//│ 					where
//│ 					def concat₀₁₄(lss²) = 
//│ 						lss²(99)
//│ 					def mappend₀₁₂(xs⁴², ys¹²⁵) = 
//│ 						case xs⁴² of {
//│ 							LH_C h⁷⁸ t⁷⁸ => 
//│ 								let t⁷⁹ = mappend₀₁₂(t⁷⁸, ys¹²⁵)
//│ 								in let h⁷⁹ = h⁷⁸
//│ 								in (fun ys¹²⁶ -> 
//│ 									let t⁸⁰ = mappend₃₁₄(t⁷⁹, ys¹²⁶)
//│ 									in let h⁸⁰ = h⁷⁹
//│ 									in (fun ys¹²⁷ -> [LH_C h⁸⁰ mappend₂₁₁₂(t⁸⁰, ys¹²⁷)]))
//│ 							| LH_N  => ys¹²⁵}
//│ 						where
//│ 						def mappend₂₁₁₂(xs⁶⁷, ys¹⁶⁷) = 
//│ 							xs⁶⁷(ys¹⁶⁷)
//│ 						def mappend₃₁₄(xs⁹¹, ys²⁰⁹) = 
//│ 							xs⁹¹(ys²⁰⁹)
//│ 					def mappend₁₁₁(xs⁴⁸, ys¹³⁶) = 
//│ 						xs⁴⁸(ys¹³⁶)
//│ 			def replicate₀₁₀(_lh_replicate_arg1⁴, _lh_replicate_arg2⁴) = 
//│ 				if (_lh_replicate_arg1⁴ > 0) then 
//│ 					let t⁸⁶ = replicate₀₁₀((_lh_replicate_arg1⁴ - 1), _lh_replicate_arg2⁴)
//│ 					in let h⁸⁶ = _lh_replicate_arg2⁴
//│ 					in (fun _lh_dummy¹⁸ -> mappend₀₀₀(h⁸⁶, concat₀₀₁(t⁸⁶))) else (fun _lh_dummy¹⁹ -> (fun ys¹⁴⁰ -> ys¹⁴⁰))
//│ 				where
//│ 				def concat₀₀₁(lss¹³) = 
//│ 					lss¹³(99)
//│ 				def mappend₀₀₀(xs²⁵, ys⁷⁷) = 
//│ 					case xs²⁵ of {
//│ 						LH_C h⁵⁰ t⁵⁰ => 
//│ 							let t⁵¹ = mappend₀₀₀(t⁵⁰, ys⁷⁷)
//│ 							in let h⁵¹ = h⁵⁰
//│ 							in (fun ys⁷⁸ -> 
//│ 								let t⁵² = mappend₃₀₁(t⁵¹, ys⁷⁸)
//│ 								in let h⁵² = h⁵¹
//│ 								in (fun ys⁷⁹ -> [LH_C h⁵² mappend₂₀₅(t⁵², ys⁷⁹)]))
//│ 						| LH_N  => ys⁷⁷}
//│ 					where
//│ 					def mappend₂₀₅(xs³⁴, ys¹⁰³) = 
//│ 						xs³⁴(ys¹⁰³)
//│ 					def mappend₃₀₁(xs⁹⁹, ys²²⁶) = 
//│ 						xs⁹⁹(ys²²⁶)
//│ 			def splitAt_lz₀₁₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 				let _lh_percOp_LH_P2_1⁴ = drop_lz₀₁₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 				in let _lh_percOp_LH_P2_0⁴ = take_lz₀₁₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 				in (fun _lh_percOp_arg3⁶ -> (fun j⁶ -> mappend₂₀₆(mappend₃₀₂(concat₀₀₂(_lh_percOp_LH_P2_0⁴), mappend₄₀₃(
//│ 					let t⁵⁴ = 	
//│ 						let t⁵⁵ = (fun ys⁸² -> ys⁸²)
//│ 						in let h⁵⁴ = ':'
//│ 						in (fun ys⁸³ -> 
//│ 							let t⁵⁶ = mappend₄₀₄(t⁵⁵, ys⁸³)
//│ 							in let h⁵⁵ = h⁵⁴
//│ 							in (fun ys⁸⁴ -> [LH_C h⁵⁵ mappend₂₀₇(t⁵⁶, ys⁸⁴)]))
//│ 					in let h⁵⁶ = 't'
//│ 					in (fun ys⁸⁵ -> 
//│ 						let t⁵⁷ = mappend₄₀₅(t⁵⁴, ys⁸⁵)
//│ 						in let h⁵⁷ = h⁵⁶
//│ 						in (fun ys⁸⁶ -> [LH_C h⁵⁷ mappend₂₀₈(t⁵⁷, ys⁸⁶)])), mappend₅₀₁(string_of_int⁰(j⁶), 
//│ 					let t⁵⁸ = (fun ys⁸⁷ -> ys⁸⁷)
//│ 					in let h⁵⁸ = 'n'
//│ 					in (fun ys⁸⁸ -> [LH_C h⁵⁸ mappend₂₀₉(t⁵⁸, ys⁸⁸)])))), percOp₀₁₁(j⁶, _lh_percOp_LH_P2_1⁴, _lh_percOp_arg3⁶))))
//│ 				where
//│ 				def concat₀₀₂(lss⁴) = 
//│ 					lss⁴(99)
//│ 				def drop_lz₀₁₀(_lh_drop_lz_arg1⁴, _lh_drop_lz_arg2⁴) = 
//│ 					if (_lh_drop_lz_arg1⁴ > 0) then lazy⁰(
//│ 						let _lh_matchIdent¹¹ = force⁰(_lh_drop_lz_arg2⁴)
//│ 						in case _lh_matchIdent¹¹ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2⁴
//│ 				def mappend₂₀₆(xs⁴⁵, ys¹³¹) = 
//│ 					xs⁴⁵(ys¹³¹)
//│ 				def mappend₂₀₇(xs¹⁰⁴, ys²³⁴) = 
//│ 					xs¹⁰⁴(ys²³⁴)
//│ 				def mappend₂₀₈(xs⁶⁴, ys¹⁶⁴) = 
//│ 					xs⁶⁴(ys¹⁶⁴)
//│ 				def mappend₂₀₉(xs⁷⁷, ys¹⁷⁹) = 
//│ 					xs⁷⁷(ys¹⁷⁹)
//│ 				def mappend₃₀₂(xs⁸⁷, ys²⁰³) = 
//│ 					xs⁸⁷(ys²⁰³)
//│ 				def mappend₄₀₃(xs²⁹, ys⁹⁸) = 
//│ 					xs²⁹(ys⁹⁸)
//│ 				def mappend₄₀₄(xs⁷¹, ys¹⁷³) = 
//│ 					xs⁷¹(ys¹⁷³)
//│ 				def mappend₄₀₅(xs⁹⁵, ys²¹³) = 
//│ 					xs⁹⁵(ys²¹³)
//│ 				def mappend₅₀₁(xs⁴³, ys¹²⁸) = 
//│ 					case xs⁴³ of {
//│ 						LH_C h⁸¹ t⁸¹ => 
//│ 							let t⁸² = mappend₅₀₁(t⁸¹, ys¹²⁸)
//│ 							in let h⁸² = h⁸¹
//│ 							in (fun ys¹²⁹ -> [LH_C h⁸² mappend₂₀₁₀(t⁸², ys¹²⁹)])
//│ 						| LH_N  => ys¹²⁸}
//│ 					where
//│ 					def mappend₂₀₁₀(xs²¹, ys⁶⁹) = 
//│ 						xs²¹(ys⁶⁹)
//│ 				def percOp₀₁₁(_lh_percOp_arg1⁴, _lh_percOp_arg2⁴, _lh_percOp_arg3¹²) = 
//│ 					if (_lh_percOp_arg1⁴ >= _lh_percOp_arg3¹²) then [LH_N] else 
//│ 						let k⁷ = (_lh_percOp_arg1⁴ + 10)
//│ 						in let j¹² = min₀₁₁(_lh_percOp_arg3¹², k⁷)
//│ 						in let _lh_matchIdent¹⁰ = if (k⁷ > _lh_percOp_arg3¹²) then 
//│ 							let _lh_percOp_LH_P2_1⁸ = lazy⁰([LH_N])
//│ 							in let _lh_percOp_LH_P2_0⁸ = mappend₁₁₂(take_lz₁₀₁((_lh_percOp_arg3¹² % 10), _lh_percOp_arg2⁴), replicate₀₀₁((k⁷ - _lh_percOp_arg3¹²), [LH_C ' ' [LH_N]]))
//│ 							in (fun _lh_percOp_arg3¹³ -> (fun j¹³ -> mappend₂₁₁₄(mappend₃₁₅(concat₀₁₅(_lh_percOp_LH_P2_0⁸), mappend₄₁₆(
//│ 								let t¹⁰⁸ = 	
//│ 									let t¹⁰⁹ = (fun ys¹⁹² -> ys¹⁹²)
//│ 									in let h¹⁰⁸ = ':'
//│ 									in (fun ys¹⁹³ -> 
//│ 										let t¹¹⁰ = mappend₄₁₇(t¹⁰⁹, ys¹⁹³)
//│ 										in let h¹⁰⁹ = h¹⁰⁸
//│ 										in (fun ys¹⁹⁴ -> [LH_C h¹⁰⁹ mappend₂₁₁₅(t¹¹⁰, ys¹⁹⁴)]))
//│ 								in let h¹¹⁰ = 't'
//│ 								in (fun ys¹⁹⁵ -> 
//│ 									let t¹¹¹ = mappend₄₁₈(t¹⁰⁸, ys¹⁹⁵)
//│ 									in let h¹¹¹ = h¹¹⁰
//│ 									in (fun ys¹⁹⁶ -> [LH_C h¹¹¹ mappend₂₁₁₆(t¹¹¹, ys¹⁹⁶)])), mappend₅₁₂(string_of_int⁰(j¹³), 
//│ 								let t¹¹² = (fun ys¹⁹⁷ -> ys¹⁹⁷)
//│ 								in let h¹¹² = 'n'
//│ 								in (fun ys¹⁹⁸ -> [LH_C h¹¹² mappend₂₁₁₃(t¹¹², ys¹⁹⁸)])))), percOp₀₁₁(j¹³, _lh_percOp_LH_P2_1⁸, _lh_percOp_arg3¹³)))) else splitAt_lz₀₀₁(10, _lh_percOp_arg2⁴)
//│ 						in _lh_matchIdent¹⁰(_lh_percOp_arg3¹², j¹²)
//│ 					where
//│ 					def concat₀₁₅(lss³) = 
//│ 						lss³(99)
//│ 					def mappend₁₁₂(xs⁷⁶, ys¹⁷⁸) = 
//│ 						xs⁷⁶(ys¹⁷⁸)
//│ 					def mappend₂₁₁₃(xs⁴⁶, ys¹³²) = 
//│ 						xs⁴⁶(ys¹³²)
//│ 					def mappend₂₁₁₄(xs¹⁰³, ys²³³) = 
//│ 						xs¹⁰³(ys²³³)
//│ 					def mappend₂₁₁₅(xs⁷⁰, ys¹⁷²) = 
//│ 						xs⁷⁰(ys¹⁷²)
//│ 					def mappend₂₁₁₆(xs¹⁴, ys⁶⁰) = 
//│ 						xs¹⁴(ys⁶⁰)
//│ 					def mappend₃₁₅(xs⁹³, ys²¹¹) = 
//│ 						xs⁹³(ys²¹¹)
//│ 					def mappend₄₁₆(xs⁷⁴, ys¹⁷⁶) = 
//│ 						xs⁷⁴(ys¹⁷⁶)
//│ 					def mappend₄₁₇(xs³⁰, ys⁹⁹) = 
//│ 						xs³⁰(ys⁹⁹)
//│ 					def mappend₄₁₈(xs⁸⁶, ys²⁰⁰) = 
//│ 						xs⁸⁶(ys²⁰⁰)
//│ 					def mappend₅₁₂(xs¹⁰², ys²³¹) = 
//│ 						case xs¹⁰² of {
//│ 							LH_C h¹²⁷ t¹²⁷ => 
//│ 								let t¹²⁸ = mappend₅₁₂(t¹²⁷, ys²³¹)
//│ 								in let h¹²⁸ = h¹²⁷
//│ 								in (fun ys²³² -> [LH_C h¹²⁸ mappend₂₁₁₇(t¹²⁸, ys²³²)])
//│ 							| LH_N  => ys²³¹}
//│ 						where
//│ 						def mappend₂₁₁₇(xs⁵⁴, ys¹⁵⁴) = 
//│ 							xs⁵⁴(ys¹⁵⁴)
//│ 					def min₀₁₁(_lh_min_arg1³, _lh_min_arg2³) = 
//│ 						if (_lh_min_arg1³ > _lh_min_arg2³) then _lh_min_arg2³ else _lh_min_arg1³
//│ 					def replicate₀₀₁(_lh_replicate_arg1², _lh_replicate_arg2²) = 
//│ 						if (_lh_replicate_arg1² > 0) then 
//│ 							let t⁵³ = replicate₀₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)
//│ 							in let h⁵³ = _lh_replicate_arg2²
//│ 							in (fun _lh_dummy¹³ -> mappend₀₁₃(h⁵³, concat₀₁₆(t⁵³))) else (fun _lh_dummy¹⁴ -> (fun ys⁸¹ -> ys⁸¹))
//│ 						where
//│ 						def concat₀₁₆(lss¹⁵) = 
//│ 							lss¹⁵(99)
//│ 						def mappend₀₁₃(xs⁴⁷, ys¹³³) = 
//│ 							case xs⁴⁷ of {
//│ 								LH_C h⁸³ t⁸³ => 
//│ 									let t⁸⁴ = mappend₀₁₃(t⁸³, ys¹³³)
//│ 									in let h⁸⁴ = h⁸³
//│ 									in (fun ys¹³⁴ -> 
//│ 										let t⁸⁵ = mappend₃₁₆(t⁸⁴, ys¹³⁴)
//│ 										in let h⁸⁵ = h⁸⁴
//│ 										in (fun ys¹³⁵ -> [LH_C h⁸⁵ mappend₂₁₁₈(t⁸⁵, ys¹³⁵)]))
//│ 								| LH_N  => ys¹³³}
//│ 							where
//│ 							def mappend₂₁₁₈(xs²⁴, ys⁷⁶) = 
//│ 								xs²⁴(ys⁷⁶)
//│ 							def mappend₃₁₆(xs⁸⁹, ys²⁰⁷) = 
//│ 								xs⁸⁹(ys²⁰⁷)
//│ 					def splitAt_lz₀₀₁(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³) = 
//│ 						let _lh_percOp_LH_P2_1⁶ = drop_lz₀₀₁(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 						in let _lh_percOp_LH_P2_0⁶ = take_lz₀₀₁(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 						in (fun _lh_percOp_arg3⁹ -> (fun j⁹ -> mappend₂₁₁₉(mappend₃₁₇(concat₀₁₇(_lh_percOp_LH_P2_0⁶), mappend₄₁₉(
//│ 							let t⁶⁷ = 	
//│ 								let t⁶⁸ = (fun ys¹⁰⁷ -> ys¹⁰⁷)
//│ 								in let h⁶⁷ = ':'
//│ 								in (fun ys¹⁰⁸ -> 
//│ 									let t⁶⁹ = mappend₄₁₁₀(t⁶⁸, ys¹⁰⁸)
//│ 									in let h⁶⁸ = h⁶⁷
//│ 									in (fun ys¹⁰⁹ -> [LH_C h⁶⁸ mappend₂₁₂₀(t⁶⁹, ys¹⁰⁹)]))
//│ 							in let h⁶⁹ = 't'
//│ 							in (fun ys¹¹⁰ -> 
//│ 								let t⁷⁰ = mappend₄₁₁₁(t⁶⁷, ys¹¹⁰)
//│ 								in let h⁷⁰ = h⁶⁹
//│ 								in (fun ys¹¹¹ -> [LH_C h⁷⁰ mappend₂₁₂₁(t⁷⁰, ys¹¹¹)])), mappend₅₁₃(string_of_int⁰(j⁹), 
//│ 							let t⁷¹ = (fun ys¹¹² -> ys¹¹²)
//│ 							in let h⁷¹ = 'n'
//│ 							in (fun ys¹¹³ -> [LH_C h⁷¹ mappend₂₁₂₂(t⁷¹, ys¹¹³)])))), percOp₀₁₁(j⁹, _lh_percOp_LH_P2_1⁶, _lh_percOp_arg3⁹))))
//│ 						where
//│ 						def concat₀₁₇(lss⁷) = 
//│ 							lss⁷(99)
//│ 						def drop_lz₀₀₁(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 							if (_lh_drop_lz_arg1² > 0) then lazy⁰(
//│ 								let _lh_matchIdent⁶ = force⁰(_lh_drop_lz_arg2²)
//│ 								in case _lh_matchIdent⁶ of {
//│ 									LH_N  => [LH_N]
//│ 									| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²))
//│ 									| _  => error⁰}) else _lh_drop_lz_arg2²
//│ 						def mappend₂₁₁₉(xs¹⁷, ys⁶³) = 
//│ 							xs¹⁷(ys⁶³)
//│ 						def mappend₂₁₂₀(xs⁷⁹, ys¹⁸¹) = 
//│ 							xs⁷⁹(ys¹⁸¹)
//│ 						def mappend₂₁₂₁(xs⁸⁴, ys¹⁹¹) = 
//│ 							xs⁸⁴(ys¹⁹¹)
//│ 						def mappend₂₁₂₂(xs⁵⁶, ys¹⁵⁶) = 
//│ 							xs⁵⁶(ys¹⁵⁶)
//│ 						def mappend₃₁₇(xs²², ys⁷⁰) = 
//│ 							xs²²(ys⁷⁰)
//│ 						def mappend₄₁₉(xs⁸², ys¹⁸⁷) = 
//│ 							xs⁸²(ys¹⁸⁷)
//│ 						def mappend₄₁₁₀(xs³⁶, ys¹¹⁴) = 
//│ 							xs³⁶(ys¹¹⁴)
//│ 						def mappend₄₁₁₁(xs⁶¹, ys¹⁶¹) = 
//│ 							xs⁶¹(ys¹⁶¹)
//│ 						def mappend₅₁₃(xs²³, ys⁷⁴) = 
//│ 							case xs²³ of {
//│ 								LH_C h⁴⁸ t⁴⁸ => 
//│ 									let t⁴⁹ = mappend₅₁₃(t⁴⁸, ys⁷⁴)
//│ 									in let h⁴⁹ = h⁴⁸
//│ 									in (fun ys⁷⁵ -> [LH_C h⁴⁹ mappend₂₁₂₃(t⁴⁹, ys⁷⁵)])
//│ 								| LH_N  => ys⁷⁴}
//│ 							where
//│ 							def mappend₂₁₂₃(xs³², ys¹⁰¹) = 
//│ 								xs³²(ys¹⁰¹)
//│ 						def take_lz₀₀₁(n⁷, ls⁷) = 
//│ 							if (n⁷ > 0) then case force⁰(ls⁷) of {
//│ 								LH_C h¹¹³ t¹¹³ => 
//│ 									let t¹¹⁴ = take_lz₀₀₁((n⁷ - 1), t¹¹³)
//│ 									in let h¹¹⁴ = h¹¹³
//│ 									in (fun _lh_dummy²¹ -> mappend₀₁₄(h¹¹⁴, concat₀₁₈(t¹¹⁴)))
//│ 								| LH_N  => (fun _lh_dummy²² -> (fun ys²⁰¹ -> ys²⁰¹))} else (fun _lh_dummy²³ -> (fun ys²⁰² -> ys²⁰²))
//│ 							where
//│ 							def concat₀₁₈(lss¹¹) = 
//│ 								lss¹¹(99)
//│ 							def mappend₀₁₄(xs¹⁸, ys⁶⁴) = 
//│ 								case xs¹⁸ of {
//│ 									LH_C h⁴² t⁴² => 
//│ 										let t⁴³ = mappend₀₁₄(t⁴², ys⁶⁴)
//│ 										in let h⁴³ = h⁴²
//│ 										in (fun ys⁶⁵ -> 
//│ 											let t⁴⁴ = mappend₃₁₈(t⁴³, ys⁶⁵)
//│ 											in let h⁴⁴ = h⁴³
//│ 											in (fun ys⁶⁶ -> [LH_C h⁴⁴ mappend₂₁₂₄(t⁴⁴, ys⁶⁶)]))
//│ 									| LH_N  => ys⁶⁴}
//│ 								where
//│ 								def mappend₂₁₂₄(xs⁷⁵, ys¹⁷⁷) = 
//│ 									xs⁷⁵(ys¹⁷⁷)
//│ 								def mappend₃₁₈(xs⁵¹, ys¹³⁹) = 
//│ 									xs⁵¹(ys¹³⁹)
//│ 					def take_lz₁₀₁(n⁵, ls⁵) = 
//│ 						if (n⁵ > 0) then case force⁰(ls⁵) of {
//│ 							LH_C h⁷² t⁷² => 
//│ 								let t⁷³ = take_lz₁₀₁((n⁵ - 1), t⁷²)
//│ 								in let h⁷³ = h⁷²
//│ 								in (fun ys¹¹⁸ -> 
//│ 									let t⁷⁴ = mappend₁₁₃(t⁷³, ys¹¹⁸)
//│ 									in let h⁷⁴ = h⁷³
//│ 									in (fun _lh_dummy¹⁵ -> mappend₀₁₅(h⁷⁴, concat₀₁₉(t⁷⁴))))
//│ 							| LH_N  => (fun ys¹¹⁹ -> ys¹¹⁹)} else (fun ys¹²⁰ -> ys¹²⁰)
//│ 						where
//│ 						def concat₀₁₉(lss⁸) = 
//│ 							lss⁸(99)
//│ 						def mappend₀₁₅(xs⁸⁰, ys¹⁸²) = 
//│ 							case xs⁸⁰ of {
//│ 								LH_C h¹⁰⁰ t¹⁰⁰ => 
//│ 									let t¹⁰¹ = mappend₀₁₅(t¹⁰⁰, ys¹⁸²)
//│ 									in let h¹⁰¹ = h¹⁰⁰
//│ 									in (fun ys¹⁸³ -> 
//│ 										let t¹⁰² = mappend₃₁₉(t¹⁰¹, ys¹⁸³)
//│ 										in let h¹⁰² = h¹⁰¹
//│ 										in (fun ys¹⁸⁴ -> [LH_C h¹⁰² mappend₂₁₂₅(t¹⁰², ys¹⁸⁴)]))
//│ 								| LH_N  => ys¹⁸²}
//│ 							where
//│ 							def mappend₂₁₂₅(xs⁷⁸, ys¹⁸⁰) = 
//│ 								xs⁷⁸(ys¹⁸⁰)
//│ 							def mappend₃₁₉(xs¹⁶, ys⁶²) = 
//│ 								xs¹⁶(ys⁶²)
//│ 						def mappend₁₁₃(xs⁵³, ys¹⁵³) = 
//│ 							xs⁵³(ys¹⁵³)
//│ 				def take_lz₀₁₀(n⁹, ls⁹) = 
//│ 					if (n⁹ > 0) then case force⁰(ls⁹) of {
//│ 						LH_C h¹²⁵ t¹²⁵ => 
//│ 							let t¹²⁶ = take_lz₀₁₀((n⁹ - 1), t¹²⁵)
//│ 							in let h¹²⁶ = h¹²⁵
//│ 							in (fun _lh_dummy²⁷ -> mappend₀₀₁(h¹²⁶, concat₀₀₃(t¹²⁶)))
//│ 						| LH_N  => (fun _lh_dummy²⁸ -> (fun ys²²⁹ -> ys²²⁹))} else (fun _lh_dummy²⁹ -> (fun ys²³⁰ -> ys²³⁰))
//│ 					where
//│ 					def concat₀₀₃(lss¹⁶) = 
//│ 						lss¹⁶(99)
//│ 					def mappend₀₀₁(xs⁸³, ys¹⁸⁸) = 
//│ 						case xs⁸³ of {
//│ 							LH_C h¹⁰⁵ t¹⁰⁵ => 
//│ 								let t¹⁰⁶ = mappend₀₀₁(t¹⁰⁵, ys¹⁸⁸)
//│ 								in let h¹⁰⁶ = h¹⁰⁵
//│ 								in (fun ys¹⁸⁹ -> 
//│ 									let t¹⁰⁷ = mappend₃₀₃(t¹⁰⁶, ys¹⁸⁹)
//│ 									in let h¹⁰⁷ = h¹⁰⁶
//│ 									in (fun ys¹⁹⁰ -> [LH_C h¹⁰⁷ mappend₂₀₁₁(t¹⁰⁷, ys¹⁹⁰)]))
//│ 							| LH_N  => ys¹⁸⁸}
//│ 						where
//│ 						def mappend₂₀₁₁(xs³¹, ys¹⁰⁰) = 
//│ 							xs³¹(ys¹⁰⁰)
//│ 						def mappend₃₀₃(xs²⁷, ys⁸⁹) = 
//│ 							xs²⁷(ys⁸⁹)
//│ 			def take_lz₁₁₀(n⁶, ls⁶) = 
//│ 				if (n⁶ > 0) then case force⁰(ls⁶) of {
//│ 					LH_C h⁸⁹ t⁸⁹ => 
//│ 						let t⁹⁰ = take_lz₁₁₀((n⁶ - 1), t⁸⁹)
//│ 						in let h⁹⁰ = h⁸⁹
//│ 						in (fun ys¹⁴³ -> 
//│ 							let t⁹¹ = mappend₁₀₁(t⁹⁰, ys¹⁴³)
//│ 							in let h⁹¹ = h⁹⁰
//│ 							in (fun _lh_dummy²⁰ -> mappend₀₀₂(h⁹¹, concat₀₀₄(t⁹¹))))
//│ 					| LH_N  => (fun ys¹⁴⁴ -> ys¹⁴⁴)} else (fun ys¹⁴⁵ -> ys¹⁴⁵)
//│ 				where
//│ 				def concat₀₀₄(lss¹⁴) = 
//│ 					lss¹⁴(99)
//│ 				def mappend₀₀₂(xs⁶⁹, ys¹⁶⁹) = 
//│ 					case xs⁶⁹ of {
//│ 						LH_C h⁹⁷ t⁹⁷ => 
//│ 							let t⁹⁸ = mappend₀₀₂(t⁹⁷, ys¹⁶⁹)
//│ 							in let h⁹⁸ = h⁹⁷
//│ 							in (fun ys¹⁷⁰ -> 
//│ 								let t⁹⁹ = mappend₃₀₄(t⁹⁸, ys¹⁷⁰)
//│ 								in let h⁹⁹ = h⁹⁸
//│ 								in (fun ys¹⁷¹ -> [LH_C h⁹⁹ mappend₂₀₁₂(t⁹⁹, ys¹⁷¹)]))
//│ 						| LH_N  => ys¹⁶⁹}
//│ 					where
//│ 					def mappend₂₀₁₂(xs⁶⁵, ys¹⁶⁵) = 
//│ 						xs⁶⁵(ys¹⁶⁵)
//│ 					def mappend₃₀₄(xs¹², ys⁵⁸) = 
//│ 						xs¹²(ys⁵⁸)
//│ 				def mappend₁₀₁(xs⁹⁴, ys²¹²) = 
//│ 					xs⁹⁴(ys²¹²)
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 1287 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1300
//│ 	case force⁰(ls⁵) of {LH_C h⁷² t⁷² => let t⁷³ = take_lz₁₀₁((n⁵ - 1), t⁷²)
//│ in let h⁷³ = h⁷²
//│ in (fun ys¹¹⁸ -> let t⁷⁴ = mappend₁₁₃(t⁷³, ys¹¹⁸)
//│ in let h⁷⁴ = h⁷³
//│ in (fun _lh_dummy¹⁵ -> mappend₀₁₅(h⁷⁴, concat₀₁₉(t⁷⁴)))) | LH_N  => (fun ys¹¹⁹ -> ys¹¹⁹)}: 1896
//│ 	case force⁰(ls⁷) of {LH_C h¹¹³ t¹¹³ => let t¹¹⁴ = take_lz₀₀₁((n⁷ - 1), t¹¹³)
//│ in let h¹¹⁴ = h¹¹³
//│ in (fun _lh_dummy²¹ -> mappend₀₁₄(h¹¹⁴, concat₀₁₈(t¹¹⁴))) | LH_N  => (fun _lh_dummy²² -> (fun ys²⁰¹ -> ys²⁰¹))}: 2959
//│ [LH_P3 1 0 1]: 1316 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 2205
//│ [LH_N]: 1542 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴⁵ t⁴⁵ => let t⁴⁶ = take_lz₁₀₀((n⁴ - 1), t⁴⁵)
//│ in let h⁴⁶ = h⁴⁵
//│ in (fun ys⁷¹ -> let t⁴⁷ = mappend₁₁₁(t⁴⁶, ys⁷¹)
//│ in let h⁴⁷ = h⁴⁶
//│ in (fun _lh_dummy¹² -> mappend₀₁₂(h⁴⁷, concat₀₁₄(t⁴⁷)))) | LH_N  => (fun ys⁷² -> ys⁷²)}: 1271
//│ 	case _lh_matchIdent⁸ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2110
//│ 	case force⁰(ls⁸) of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = take_lz₀₀₀((n⁸ - 1), t¹¹⁸)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun _lh_dummy²⁴ -> mappend₀₁₁(h¹¹⁹, concat₀₁₃(t¹¹⁹))) | LH_N  => (fun _lh_dummy²⁵ -> (fun ys²¹⁴ -> ys²¹⁴))}: 3089
//│ [LH_N]: 1563 --->
//│ 	case xs⁸⁸ of {LH_C h¹¹⁵ t¹¹⁵ => let t¹¹⁶ = mappend₀₁₀(t¹¹⁵, ys²⁰⁴)
//│ in let h¹¹⁶ = h¹¹⁵
//│ in (fun ys²⁰⁵ -> let t¹¹⁷ = mappend₃₁₁(t¹¹⁶, ys²⁰⁵)
//│ in let h¹¹⁷ = h¹¹⁶
//│ in (fun ys²⁰⁶ -> [LH_C h¹¹⁷ mappend₂₁₅(t¹¹⁷, ys²⁰⁶)])) | LH_N  => ys²⁰⁴}: 3012
//│ [LH_C ' ' [LH_N]]: 1564 --->
//│ 	case xs⁸⁸ of {LH_C h¹¹⁵ t¹¹⁵ => let t¹¹⁶ = mappend₀₁₀(t¹¹⁵, ys²⁰⁴)
//│ in let h¹¹⁶ = h¹¹⁵
//│ in (fun ys²⁰⁵ -> let t¹¹⁷ = mappend₃₁₁(t¹¹⁶, ys²⁰⁵)
//│ in let h¹¹⁷ = h¹¹⁶
//│ in (fun ys²⁰⁶ -> [LH_C h¹¹⁷ mappend₂₁₅(t¹¹⁷, ys²⁰⁶)])) | LH_N  => ys²⁰⁴}: 3012
//│ [LH_N]: 2097 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴⁵ t⁴⁵ => let t⁴⁶ = take_lz₁₀₀((n⁴ - 1), t⁴⁵)
//│ in let h⁴⁶ = h⁴⁵
//│ in (fun ys⁷¹ -> let t⁴⁷ = mappend₁₁₁(t⁴⁶, ys⁷¹)
//│ in let h⁴⁷ = h⁴⁶
//│ in (fun _lh_dummy¹² -> mappend₀₁₂(h⁴⁷, concat₀₁₄(t⁴⁷)))) | LH_N  => (fun ys⁷² -> ys⁷²)}: 1271
//│ 	case _lh_matchIdent⁸ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2110
//│ 	case force⁰(ls⁸) of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = take_lz₀₀₀((n⁸ - 1), t¹¹⁸)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun _lh_dummy²⁴ -> mappend₀₁₁(h¹¹⁹, concat₀₁₃(t¹¹⁹))) | LH_N  => (fun _lh_dummy²⁵ -> (fun ys²¹⁴ -> ys²¹⁴))}: 3089
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 2202 --->
//│ 	case _lh_matchIdent¹² of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹³ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸) | _  => error⁰}: 3242
//│ [LH_N]: 2275 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴⁵ t⁴⁵ => let t⁴⁶ = take_lz₁₀₀((n⁴ - 1), t⁴⁵)
//│ in let h⁴⁶ = h⁴⁵
//│ in (fun ys⁷¹ -> let t⁴⁷ = mappend₁₁₁(t⁴⁶, ys⁷¹)
//│ in let h⁴⁷ = h⁴⁶
//│ in (fun _lh_dummy¹² -> mappend₀₁₂(h⁴⁷, concat₀₁₄(t⁴⁷)))) | LH_N  => (fun ys⁷² -> ys⁷²)}: 1271
//│ 	case _lh_matchIdent⁸ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2110
//│ 	case force⁰(ls⁸) of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = take_lz₀₀₀((n⁸ - 1), t¹¹⁸)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun _lh_dummy²⁴ -> mappend₀₁₁(h¹¹⁹, concat₀₁₃(t¹¹⁹))) | LH_N  => (fun _lh_dummy²⁵ -> (fun ys²¹⁴ -> ys²¹⁴))}: 3089
//│ [LH_N]: 2296 --->
//│ 	case xs²⁵ of {LH_C h⁵⁰ t⁵⁰ => let t⁵¹ = mappend₀₀₀(t⁵⁰, ys⁷⁷)
//│ in let h⁵¹ = h⁵⁰
//│ in (fun ys⁷⁸ -> let t⁵² = mappend₃₀₁(t⁵¹, ys⁷⁸)
//│ in let h⁵² = h⁵¹
//│ in (fun ys⁷⁹ -> [LH_C h⁵² mappend₂₀₅(t⁵², ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1375
//│ [LH_C ' ' [LH_N]]: 2297 --->
//│ 	case xs²⁵ of {LH_C h⁵⁰ t⁵⁰ => let t⁵¹ = mappend₀₀₀(t⁵⁰, ys⁷⁷)
//│ in let h⁵¹ = h⁵⁰
//│ in (fun ys⁷⁸ -> let t⁵² = mappend₃₀₁(t⁵¹, ys⁷⁸)
//│ in let h⁵² = h⁵¹
//│ in (fun ys⁷⁹ -> [LH_C h⁵² mappend₂₀₅(t⁵², ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1375
//│ [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 2564 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 2205
//│ [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 2592 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 2205
//│ [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2594 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1300
//│ 	case force⁰(ls⁵) of {LH_C h⁷² t⁷² => let t⁷³ = take_lz₁₀₁((n⁵ - 1), t⁷²)
//│ in let h⁷³ = h⁷²
//│ in (fun ys¹¹⁸ -> let t⁷⁴ = mappend₁₁₃(t⁷³, ys¹¹⁸)
//│ in let h⁷⁴ = h⁷³
//│ in (fun _lh_dummy¹⁵ -> mappend₀₁₅(h⁷⁴, concat₀₁₉(t⁷⁴)))) | LH_N  => (fun ys¹¹⁹ -> ys¹¹⁹)}: 1896
//│ 	case force⁰(ls⁶) of {LH_C h⁸⁹ t⁸⁹ => let t⁹⁰ = take_lz₁₁₀((n⁶ - 1), t⁸⁹)
//│ in let h⁹⁰ = h⁸⁹
//│ in (fun ys¹⁴³ -> let t⁹¹ = mappend₁₀₁(t⁹⁰, ys¹⁴³)
//│ in let h⁹¹ = h⁹⁰
//│ in (fun _lh_dummy²⁰ -> mappend₀₀₂(h⁹¹, concat₀₀₄(t⁹¹)))) | LH_N  => (fun ys¹⁴⁴ -> ys¹⁴⁴)}: 2247
//│ 	case _lh_matchIdent¹¹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 2916
//│ 	case force⁰(ls⁷) of {LH_C h¹¹³ t¹¹³ => let t¹¹⁴ = take_lz₀₀₁((n⁷ - 1), t¹¹³)
//│ in let h¹¹⁴ = h¹¹³
//│ in (fun _lh_dummy²¹ -> mappend₀₁₄(h¹¹⁴, concat₀₁₈(t¹¹⁴))) | LH_N  => (fun _lh_dummy²² -> (fun ys²⁰¹ -> ys²⁰¹))}: 2959
//│ 	case force⁰(ls⁹) of {LH_C h¹²⁵ t¹²⁵ => let t¹²⁶ = take_lz₀₁₀((n⁹ - 1), t¹²⁵)
//│ in let h¹²⁶ = h¹²⁵
//│ in (fun _lh_dummy²⁷ -> mappend₀₀₁(h¹²⁶, concat₀₀₃(t¹²⁶))) | LH_N  => (fun _lh_dummy²⁸ -> (fun ys²²⁹ -> ys²²⁹))}: 3307
//│ [LH_N]: 2761 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1300
//│ 	case force⁰(ls⁵) of {LH_C h⁷² t⁷² => let t⁷³ = take_lz₁₀₁((n⁵ - 1), t⁷²)
//│ in let h⁷³ = h⁷²
//│ in (fun ys¹¹⁸ -> let t⁷⁴ = mappend₁₁₃(t⁷³, ys¹¹⁸)
//│ in let h⁷⁴ = h⁷³
//│ in (fun _lh_dummy¹⁵ -> mappend₀₁₅(h⁷⁴, concat₀₁₉(t⁷⁴)))) | LH_N  => (fun ys¹¹⁹ -> ys¹¹⁹)}: 1896
//│ 	case force⁰(ls⁷) of {LH_C h¹¹³ t¹¹³ => let t¹¹⁴ = take_lz₀₀₁((n⁷ - 1), t¹¹³)
//│ in let h¹¹⁴ = h¹¹³
//│ in (fun _lh_dummy²¹ -> mappend₀₁₄(h¹¹⁴, concat₀₁₈(t¹¹⁴))) | LH_N  => (fun _lh_dummy²² -> (fun ys²⁰¹ -> ys²⁰¹))}: 2959
//│ [LH_N]: 2782 --->
//│ 	case xs⁴⁷ of {LH_C h⁸³ t⁸³ => let t⁸⁴ = mappend₀₁₃(t⁸³, ys¹³³)
//│ in let h⁸⁴ = h⁸³
//│ in (fun ys¹³⁴ -> let t⁸⁵ = mappend₃₁₆(t⁸⁴, ys¹³⁴)
//│ in let h⁸⁵ = h⁸⁴
//│ in (fun ys¹³⁵ -> [LH_C h⁸⁵ mappend₂₁₁₈(t⁸⁵, ys¹³⁵)])) | LH_N  => ys¹³³}: 2064
//│ [LH_C ' ' [LH_N]]: 2783 --->
//│ 	case xs⁴⁷ of {LH_C h⁸³ t⁸³ => let t⁸⁴ = mappend₀₁₃(t⁸³, ys¹³³)
//│ in let h⁸⁴ = h⁸³
//│ in (fun ys¹³⁴ -> let t⁸⁵ = mappend₃₁₆(t⁸⁴, ys¹³⁴)
//│ in let h⁸⁵ = h⁸⁴
//│ in (fun ys¹³⁵ -> [LH_C h⁸⁵ mappend₂₁₁₈(t⁸⁵, ys¹³⁵)])) | LH_N  => ys¹³³}: 2064
//│ [LH_N]: 2903 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1300
//│ 	case force⁰(ls⁵) of {LH_C h⁷² t⁷² => let t⁷³ = take_lz₁₀₁((n⁵ - 1), t⁷²)
//│ in let h⁷³ = h⁷²
//│ in (fun ys¹¹⁸ -> let t⁷⁴ = mappend₁₁₃(t⁷³, ys¹¹⁸)
//│ in let h⁷⁴ = h⁷³
//│ in (fun _lh_dummy¹⁵ -> mappend₀₁₅(h⁷⁴, concat₀₁₉(t⁷⁴)))) | LH_N  => (fun ys¹¹⁹ -> ys¹¹⁹)}: 1896
//│ 	case force⁰(ls⁷) of {LH_C h¹¹³ t¹¹³ => let t¹¹⁴ = take_lz₀₀₁((n⁷ - 1), t¹¹³)
//│ in let h¹¹⁴ = h¹¹³
//│ in (fun _lh_dummy²¹ -> mappend₀₁₄(h¹¹⁴, concat₀₁₈(t¹¹⁴))) | LH_N  => (fun _lh_dummy²² -> (fun ys²⁰¹ -> ys²⁰¹))}: 2959
//│ ------------------
//│ case force⁰(ls⁴) of {LH_C h⁴⁵ t⁴⁵ => let t⁴⁶ = take_lz₁₀₀((n⁴ - 1), t⁴⁵)
//│ in let h⁴⁶ = h⁴⁵
//│ in (fun ys⁷¹ -> let t⁴⁷ = mappend₁₁₁(t⁴⁶, ys⁷¹)
//│ in let h⁴⁷ = h⁴⁶
//│ in (fun _lh_dummy¹² -> mappend₀₁₂(h⁴⁷, concat₀₁₄(t⁴⁷)))) | LH_N  => (fun ys⁷² -> ys⁷²)}: 1271 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1542
//│ 	[LH_N]: 2097
//│ 	[LH_N]: 2275
//│ case _lh_matchIdent⁶ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1300 --->
//│ 	[LH_N]: 1287
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2594
//│ 	[LH_N]: 2761
//│ 	[LH_N]: 2903
//│ case xs²⁵ of {LH_C h⁵⁰ t⁵⁰ => let t⁵¹ = mappend₀₀₀(t⁵⁰, ys⁷⁷)
//│ in let h⁵¹ = h⁵⁰
//│ in (fun ys⁷⁸ -> let t⁵² = mappend₃₀₁(t⁵¹, ys⁷⁸)
//│ in let h⁵² = h⁵¹
//│ in (fun ys⁷⁹ -> [LH_C h⁵² mappend₂₀₅(t⁵², ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1375 --->
//│ 	[LH_N]: 2296
//│ 	[LH_C ' ' [LH_N]]: 2297
//│ case force⁰(ls⁵) of {LH_C h⁷² t⁷² => let t⁷³ = take_lz₁₀₁((n⁵ - 1), t⁷²)
//│ in let h⁷³ = h⁷²
//│ in (fun ys¹¹⁸ -> let t⁷⁴ = mappend₁₁₃(t⁷³, ys¹¹⁸)
//│ in let h⁷⁴ = h⁷³
//│ in (fun _lh_dummy¹⁵ -> mappend₀₁₅(h⁷⁴, concat₀₁₉(t⁷⁴)))) | LH_N  => (fun ys¹¹⁹ -> ys¹¹⁹)}: 1896 --->
//│ 	[LH_N]: 1287
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2594
//│ 	[LH_N]: 2761
//│ 	[LH_N]: 2903
//│ case xs⁴⁷ of {LH_C h⁸³ t⁸³ => let t⁸⁴ = mappend₀₁₃(t⁸³, ys¹³³)
//│ in let h⁸⁴ = h⁸³
//│ in (fun ys¹³⁴ -> let t⁸⁵ = mappend₃₁₆(t⁸⁴, ys¹³⁴)
//│ in let h⁸⁵ = h⁸⁴
//│ in (fun ys¹³⁵ -> [LH_C h⁸⁵ mappend₂₁₁₈(t⁸⁵, ys¹³⁵)])) | LH_N  => ys¹³³}: 2064 --->
//│ 	[LH_N]: 2782
//│ 	[LH_C ' ' [LH_N]]: 2783
//│ case _lh_matchIdent⁸ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2110 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1542
//│ 	[LH_N]: 2097
//│ 	[LH_N]: 2275
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 2205 --->
//│ 	[LH_P3 1 0 1]: 1316
//│ 	[LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 2564
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 2592
//│ case force⁰(ls⁶) of {LH_C h⁸⁹ t⁸⁹ => let t⁹⁰ = take_lz₁₁₀((n⁶ - 1), t⁸⁹)
//│ in let h⁹⁰ = h⁸⁹
//│ in (fun ys¹⁴³ -> let t⁹¹ = mappend₁₀₁(t⁹⁰, ys¹⁴³)
//│ in let h⁹¹ = h⁹⁰
//│ in (fun _lh_dummy²⁰ -> mappend₀₀₂(h⁹¹, concat₀₀₄(t⁹¹)))) | LH_N  => (fun ys¹⁴⁴ -> ys¹⁴⁴)}: 2247 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2594
//│ case _lh_matchIdent¹¹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 2916 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2594
//│ case force⁰(ls⁷) of {LH_C h¹¹³ t¹¹³ => let t¹¹⁴ = take_lz₀₀₁((n⁷ - 1), t¹¹³)
//│ in let h¹¹⁴ = h¹¹³
//│ in (fun _lh_dummy²¹ -> mappend₀₁₄(h¹¹⁴, concat₀₁₈(t¹¹⁴))) | LH_N  => (fun _lh_dummy²² -> (fun ys²⁰¹ -> ys²⁰¹))}: 2959 --->
//│ 	[LH_N]: 1287
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2594
//│ 	[LH_N]: 2761
//│ 	[LH_N]: 2903
//│ case xs⁸⁸ of {LH_C h¹¹⁵ t¹¹⁵ => let t¹¹⁶ = mappend₀₁₀(t¹¹⁵, ys²⁰⁴)
//│ in let h¹¹⁶ = h¹¹⁵
//│ in (fun ys²⁰⁵ -> let t¹¹⁷ = mappend₃₁₁(t¹¹⁶, ys²⁰⁵)
//│ in let h¹¹⁷ = h¹¹⁶
//│ in (fun ys²⁰⁶ -> [LH_C h¹¹⁷ mappend₂₁₅(t¹¹⁷, ys²⁰⁶)])) | LH_N  => ys²⁰⁴}: 3012 --->
//│ 	[LH_N]: 1563
//│ 	[LH_C ' ' [LH_N]]: 1564
//│ case force⁰(ls⁸) of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = take_lz₀₀₀((n⁸ - 1), t¹¹⁸)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun _lh_dummy²⁴ -> mappend₀₁₁(h¹¹⁹, concat₀₁₃(t¹¹⁹))) | LH_N  => (fun _lh_dummy²⁵ -> (fun ys²¹⁴ -> ys²¹⁴))}: 3089 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1542
//│ 	[LH_N]: 2097
//│ 	[LH_N]: 2275
//│ case _lh_matchIdent¹² of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹³ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸) | _  => error⁰}: 3242 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 2202
//│ case force⁰(ls⁹) of {LH_C h¹²⁵ t¹²⁵ => let t¹²⁶ = take_lz₀₁₀((n⁹ - 1), t¹²⁵)
//│ in let h¹²⁶ = h¹²⁵
//│ in (fun _lh_dummy²⁷ -> mappend₀₀₁(h¹²⁶, concat₀₀₃(t¹²⁶))) | LH_N  => (fun _lh_dummy²⁸ -> (fun ys²²⁹ -> ys²²⁹))}: 3307 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2594
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P3 1 0 1]: 1316 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 2205
//│ [LH_N]: 1563 --->
//│ 	case xs⁸⁸ of {LH_C h¹¹⁵ t¹¹⁵ => let t¹¹⁶ = mappend₀₁₀(t¹¹⁵, ys²⁰⁴)
//│ in let h¹¹⁶ = h¹¹⁵
//│ in (fun ys²⁰⁵ -> let t¹¹⁷ = mappend₃₁₁(t¹¹⁶, ys²⁰⁵)
//│ in let h¹¹⁷ = h¹¹⁶
//│ in (fun ys²⁰⁶ -> [LH_C h¹¹⁷ mappend₂₁₅(t¹¹⁷, ys²⁰⁶)])) | LH_N  => ys²⁰⁴}: 3012
//│ [LH_C ' ' [LH_N]]: 1564 --->
//│ 	case xs⁸⁸ of {LH_C h¹¹⁵ t¹¹⁵ => let t¹¹⁶ = mappend₀₁₀(t¹¹⁵, ys²⁰⁴)
//│ in let h¹¹⁶ = h¹¹⁵
//│ in (fun ys²⁰⁵ -> let t¹¹⁷ = mappend₃₁₁(t¹¹⁶, ys²⁰⁵)
//│ in let h¹¹⁷ = h¹¹⁶
//│ in (fun ys²⁰⁶ -> [LH_C h¹¹⁷ mappend₂₁₅(t¹¹⁷, ys²⁰⁶)])) | LH_N  => ys²⁰⁴}: 3012
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 2202 --->
//│ 	case _lh_matchIdent¹² of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹³ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸) | _  => error⁰}: 3242
//│ [LH_N]: 2296 --->
//│ 	case xs²⁵ of {LH_C h⁵⁰ t⁵⁰ => let t⁵¹ = mappend₀₀₀(t⁵⁰, ys⁷⁷)
//│ in let h⁵¹ = h⁵⁰
//│ in (fun ys⁷⁸ -> let t⁵² = mappend₃₀₁(t⁵¹, ys⁷⁸)
//│ in let h⁵² = h⁵¹
//│ in (fun ys⁷⁹ -> [LH_C h⁵² mappend₂₀₅(t⁵², ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1375
//│ [LH_C ' ' [LH_N]]: 2297 --->
//│ 	case xs²⁵ of {LH_C h⁵⁰ t⁵⁰ => let t⁵¹ = mappend₀₀₀(t⁵⁰, ys⁷⁷)
//│ in let h⁵¹ = h⁵⁰
//│ in (fun ys⁷⁸ -> let t⁵² = mappend₃₀₁(t⁵¹, ys⁷⁸)
//│ in let h⁵² = h⁵¹
//│ in (fun ys⁷⁹ -> [LH_C h⁵² mappend₂₀₅(t⁵², ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1375
//│ [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 2564 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 2205
//│ [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 2592 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 2205
//│ [LH_N]: 2782 --->
//│ 	case xs⁴⁷ of {LH_C h⁸³ t⁸³ => let t⁸⁴ = mappend₀₁₃(t⁸³, ys¹³³)
//│ in let h⁸⁴ = h⁸³
//│ in (fun ys¹³⁴ -> let t⁸⁵ = mappend₃₁₆(t⁸⁴, ys¹³⁴)
//│ in let h⁸⁵ = h⁸⁴
//│ in (fun ys¹³⁵ -> [LH_C h⁸⁵ mappend₂₁₁₈(t⁸⁵, ys¹³⁵)])) | LH_N  => ys¹³³}: 2064
//│ [LH_C ' ' [LH_N]]: 2783 --->
//│ 	case xs⁴⁷ of {LH_C h⁸³ t⁸³ => let t⁸⁴ = mappend₀₁₃(t⁸³, ys¹³³)
//│ in let h⁸⁴ = h⁸³
//│ in (fun ys¹³⁴ -> let t⁸⁵ = mappend₃₁₆(t⁸⁴, ys¹³⁴)
//│ in let h⁸⁵ = h⁸⁴
//│ in (fun ys¹³⁵ -> [LH_C h⁸⁵ mappend₂₁₁₈(t⁸⁵, ys¹³⁵)])) | LH_N  => ys¹³³}: 2064
//│ ------------------
//│ case xs²⁵ of {LH_C h⁵⁰ t⁵⁰ => let t⁵¹ = mappend₀₀₀(t⁵⁰, ys⁷⁷)
//│ in let h⁵¹ = h⁵⁰
//│ in (fun ys⁷⁸ -> let t⁵² = mappend₃₀₁(t⁵¹, ys⁷⁸)
//│ in let h⁵² = h⁵¹
//│ in (fun ys⁷⁹ -> [LH_C h⁵² mappend₂₀₅(t⁵², ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1375 --->
//│ 	[LH_N]: 2296
//│ 	[LH_C ' ' [LH_N]]: 2297
//│ case xs⁴⁷ of {LH_C h⁸³ t⁸³ => let t⁸⁴ = mappend₀₁₃(t⁸³, ys¹³³)
//│ in let h⁸⁴ = h⁸³
//│ in (fun ys¹³⁴ -> let t⁸⁵ = mappend₃₁₆(t⁸⁴, ys¹³⁴)
//│ in let h⁸⁵ = h⁸⁴
//│ in (fun ys¹³⁵ -> [LH_C h⁸⁵ mappend₂₁₁₈(t⁸⁵, ys¹³⁵)])) | LH_N  => ys¹³³}: 2064 --->
//│ 	[LH_N]: 2782
//│ 	[LH_C ' ' [LH_N]]: 2783
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 2205 --->
//│ 	[LH_P3 1 0 1]: 1316
//│ 	[LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 2564
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 2592
//│ case xs⁸⁸ of {LH_C h¹¹⁵ t¹¹⁵ => let t¹¹⁶ = mappend₀₁₀(t¹¹⁵, ys²⁰⁴)
//│ in let h¹¹⁶ = h¹¹⁵
//│ in (fun ys²⁰⁵ -> let t¹¹⁷ = mappend₃₁₁(t¹¹⁶, ys²⁰⁵)
//│ in let h¹¹⁷ = h¹¹⁶
//│ in (fun ys²⁰⁶ -> [LH_C h¹¹⁷ mappend₂₁₅(t¹¹⁷, ys²⁰⁶)])) | LH_N  => ys²⁰⁴}: 3012 --->
//│ 	[LH_N]: 1563
//│ 	[LH_C ' ' [LH_N]]: 1564
//│ case _lh_matchIdent¹² of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹³ = divmod₀₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸) | _  => error⁰}: 3242 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 2202
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPiDigits_nofib₀₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀₀(_lh_testPiDigits_nofib_arg1²) = 
//│ 	pidgits₀₀₀(_lh_testPiDigits_nofib_arg1²)
//│ 	where
//│ 	def pidgits₀₀₀(_lh_pidgits_arg1²) = 
//│ 		percOp₀₀₀(0, hashOp₀₀₀(0, 
//│ 			let _lh_ampOp_LH_P3_2⁴ = 1
//│ 			in let _lh_ampOp_LH_P3_1⁴ = 0
//│ 			in let _lh_ampOp_LH_P3_0⁴ = 1
//│ 			in (fun _lh_ampOp_arg1⁵ -> 
//│ 				let y⁴ = ((_lh_ampOp_arg1⁵ * 2) + 1)
//│ 				in let _lh_hashOp_LH_P3_2⁷ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ 				in let _lh_hashOp_LH_P3_1⁷ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ 				in let _lh_hashOp_LH_P3_0⁷ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁵)
//│ 				in (fun k¹⁴ -> 
//│ 					let _lh_matchIdent²⁰ = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁷ * 3) + _lh_hashOp_LH_P3_1⁷), _lh_hashOp_LH_P3_2⁷)
//│ 					in _lh_matchIdent²⁰(_lh_hashOp_LH_P3_0⁷, _lh_hashOp_LH_P3_1⁷, _lh_hashOp_LH_P3_2⁷, k¹⁴)))), _lh_pidgits_arg1²)
//│ 		where
//│ 		def hashOp₀₀₀(_lh_hashOp_arg1², _lh_hashOp_arg2²) = 
//│ 			lazy⁰(
//│ 				let k¹⁵ = (_lh_hashOp_arg1² + 1)
//│ 				in let _lh_matchIdent²² = ampOp₀₀₀(k¹⁵, _lh_hashOp_arg2²)
//│ 				in _lh_matchIdent²²(k¹⁵))
//│ 			where
//│ 			def ampOp₀₀₀(_lh_ampOp_arg1², _lh_ampOp_arg2²) = 
//│ 				_lh_ampOp_arg2²(_lh_ampOp_arg1²)
//│ 			def divmod₀₀₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 				let _lh_hashOp_LH_P2_1² = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 				in let _lh_hashOp_LH_P2_0² = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 				in (fun _lh_hashOp_LH_P3_0⁴ -> (fun _lh_hashOp_LH_P3_1⁴ -> (fun _lh_hashOp_LH_P3_2⁴ -> (fun k¹⁰ -> if ((_lh_hashOp_LH_P3_0⁴ > _lh_hashOp_LH_P3_1⁴) || ((_lh_hashOp_LH_P2_1² + _lh_hashOp_LH_P3_0⁴) >= _lh_hashOp_LH_P3_2⁴)) then force⁰(hashOp₀₀₀(k¹⁰, 
//│ 					let _lh_ampOp_LH_P3_2² = _lh_hashOp_LH_P3_2⁴
//│ 					in let _lh_ampOp_LH_P3_1² = _lh_hashOp_LH_P3_1⁴
//│ 					in let _lh_ampOp_LH_P3_0² = _lh_hashOp_LH_P3_0⁴
//│ 					in (fun _lh_ampOp_arg1³ -> 
//│ 						let y² = ((_lh_ampOp_arg1³ * 2) + 1)
//│ 						in let _lh_hashOp_LH_P3_2⁵ = (_lh_ampOp_LH_P3_2² * y²)
//│ 						in let _lh_hashOp_LH_P3_1⁵ = ((_lh_ampOp_LH_P3_1² + (_lh_ampOp_LH_P3_0² * 2)) * y²)
//│ 						in let _lh_hashOp_LH_P3_0⁵ = (_lh_ampOp_LH_P3_0² * _lh_ampOp_arg1³)
//│ 						in (fun k¹¹ -> 
//│ 							let _lh_matchIdent¹⁷ = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁵ * 3) + _lh_hashOp_LH_P3_1⁵), _lh_hashOp_LH_P3_2⁵)
//│ 							in _lh_matchIdent¹⁷(_lh_hashOp_LH_P3_0⁵, _lh_hashOp_LH_P3_1⁵, _lh_hashOp_LH_P3_2⁵, k¹¹))))) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0²) hashOp₀₀₀(k¹⁰, 
//│ 					let _lh_ampOp_LH_P3_2³ = _lh_hashOp_LH_P3_2⁴
//│ 					in let _lh_ampOp_LH_P3_1³ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0² * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ 					in let _lh_ampOp_LH_P3_0³ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ 					in (fun _lh_ampOp_arg1⁴ -> 
//│ 						let y³ = ((_lh_ampOp_arg1⁴ * 2) + 1)
//│ 						in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2³ * y³)
//│ 						in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1³ + (_lh_ampOp_LH_P3_0³ * 2)) * y³)
//│ 						in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0³ * _lh_ampOp_arg1⁴)
//│ 						in (fun k¹² -> 
//│ 							let _lh_matchIdent¹⁸ = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ 							in _lh_matchIdent¹⁸(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹²))))]))))
//│ 		def percOp₀₀₀(_lh_percOp_arg1⁷, _lh_percOp_arg2⁷, _lh_percOp_arg3²²) = 
//│ 			if (_lh_percOp_arg1⁷ >= _lh_percOp_arg3²²) then [LH_N] else 
//│ 				let k¹⁶ = (_lh_percOp_arg1⁷ + 10)
//│ 				in let j²² = min₀₀₀(_lh_percOp_arg3²², k¹⁶)
//│ 				in let _lh_matchIdent²³ = if (k¹⁶ > _lh_percOp_arg3²²) then 
//│ 					let _lh_percOp_LH_P2_1¹⁵ = lazy⁰([LH_N])
//│ 					in let _lh_percOp_LH_P2_0¹⁵ = mappend₁₀₀(take_lz₁₁₀((_lh_percOp_arg3²² % 10), _lh_percOp_arg2⁷), replicate₀₁₀((k¹⁶ - _lh_percOp_arg3²²), 
//│ 						let t¹⁸⁷ = (fun ys³⁹⁶ -> ys³⁹⁶)
//│ 						in let h¹⁸⁷ = ' '
//│ 						in (fun ys³⁹³ -> 
//│ 							let t¹⁸⁸ = mappend₀₀₀(t¹⁸⁷, ys³⁹³)
//│ 							in let h¹⁸⁸ = h¹⁸⁷
//│ 							in (fun ys³⁹⁴ -> 
//│ 								let t¹⁸⁹ = mappend₃₀₁(t¹⁸⁸, ys³⁹⁴)
//│ 								in let h¹⁸⁹ = h¹⁸⁸
//│ 								in (fun ys³⁹⁵ -> [LH_C h¹⁸⁹ mappend₂₀₅(t¹⁸⁹, ys³⁹⁵)])))))
//│ 					in (fun _lh_percOp_arg3²³ -> (fun j²³ -> mappend₂₀₀(mappend₃₀₀(concat₀₀₀(_lh_percOp_LH_P2_0¹⁵), mappend₄₀₀(
//│ 						let t¹⁹⁰ = 	
//│ 							let t¹⁹¹ = (fun ys³⁹⁷ -> ys³⁹⁷)
//│ 							in let h¹⁹⁰ = ':'
//│ 							in (fun ys³⁹⁸ -> 
//│ 								let t¹⁹² = mappend₄₀₁(t¹⁹¹, ys³⁹⁸)
//│ 								in let h¹⁹¹ = h¹⁹⁰
//│ 								in (fun ys³⁹⁹ -> [LH_C h¹⁹¹ mappend₂₀₁(t¹⁹², ys³⁹⁹)]))
//│ 						in let h¹⁹² = 't'
//│ 						in (fun ys⁴⁰⁰ -> 
//│ 							let t¹⁹³ = mappend₄₀₂(t¹⁹⁰, ys⁴⁰⁰)
//│ 							in let h¹⁹³ = h¹⁹²
//│ 							in (fun ys⁴⁰¹ -> [LH_C h¹⁹³ mappend₂₀₂(t¹⁹³, ys⁴⁰¹)])), mappend₅₀₀(string_of_int⁰(j²³), 
//│ 						let t¹⁹⁴ = (fun ys⁴⁰² -> ys⁴⁰²)
//│ 						in let h¹⁹⁴ = 'n'
//│ 						in (fun ys⁴⁰³ -> [LH_C h¹⁹⁴ mappend₂₀₃(t¹⁹⁴, ys⁴⁰³)])))), percOp₀₁₀(j²³, _lh_percOp_LH_P2_1¹⁵, _lh_percOp_arg3²³)))) else splitAt_lz₀₁₀(10, _lh_percOp_arg2⁷)
//│ 				in _lh_matchIdent²³(_lh_percOp_arg3²², j²²)
//│ 			where
//│ 			def concat₀₀₀(lss²¹) = 
//│ 				lss²¹(99)
//│ 			def mappend₁₀₀(xs¹⁰⁸, ys²³⁸) = 
//│ 				xs¹⁰⁸(ys²³⁸)
//│ 			def mappend₂₀₀(xs¹⁵³, ys³³⁵) = 
//│ 				xs¹⁵³(ys³³⁵)
//│ 			def mappend₂₀₁(xs¹⁸⁷, ys⁴⁰⁴) = 
//│ 				xs¹⁸⁷(ys⁴⁰⁴)
//│ 			def mappend₂₀₂(xs¹⁶⁵, ys³⁶¹) = 
//│ 				xs¹⁶⁵(ys³⁶¹)
//│ 			def mappend₂₀₃(xs¹⁷⁸, ys³⁷⁸) = 
//│ 				xs¹⁷⁸(ys³⁷⁸)
//│ 			def mappend₃₀₀(xs¹⁷⁹, ys³⁷⁹) = 
//│ 				xs¹⁷⁹(ys³⁷⁹)
//│ 			def mappend₄₀₀(xs¹³⁷, ys³⁰⁴) = 
//│ 				xs¹³⁷(ys³⁰⁴)
//│ 			def mappend₄₀₁(xs¹²⁸, ys²⁷⁴) = 
//│ 				xs¹²⁸(ys²⁷⁴)
//│ 			def mappend₄₀₂(xs¹⁷⁵, ys³⁷⁵) = 
//│ 				xs¹⁷⁵(ys³⁷⁵)
//│ 			def mappend₅₀₀(xs¹⁸¹, ys³⁸¹) = 
//│ 				case xs¹⁸¹ of {
//│ 					LH_C h¹⁰³ t¹⁰³ => 
//│ 						let t¹⁸¹ = mappend₅₀₀(t¹⁰³, ys³⁸¹)
//│ 						in let h¹⁸¹ = h¹⁰³
//│ 						in (fun ys³⁸² -> [LH_C h¹⁸¹ mappend₂₀₄(t¹⁸¹, ys³⁸²)])
//│ 					| LH_N  => ys³⁸¹}
//│ 				where
//│ 				def mappend₂₀₄(xs¹⁹⁴, ys⁴¹¹) = 
//│ 					xs¹⁹⁴(ys⁴¹¹)
//│ 			def min₀₀₀(_lh_min_arg1⁵, _lh_min_arg2⁵) = 
//│ 				if (_lh_min_arg1⁵ > _lh_min_arg2⁵) then _lh_min_arg2⁵ else _lh_min_arg1⁵
//│ 			def percOp₀₁₀(_lh_percOp_arg1⁶, _lh_percOp_arg2⁶, _lh_percOp_arg3²⁰) = 
//│ 				if (_lh_percOp_arg1⁶ >= _lh_percOp_arg3²⁰) then [LH_N] else 
//│ 					let k¹³ = (_lh_percOp_arg1⁶ + 10)
//│ 					in let j²⁰ = min₀₁₀(_lh_percOp_arg3²⁰, k¹³)
//│ 					in let _lh_matchIdent¹⁹ = if (k¹³ > _lh_percOp_arg3²⁰) then 
//│ 						let _lh_percOp_LH_P2_1¹⁴ = lazy⁰([LH_N])
//│ 						in let _lh_percOp_LH_P2_0¹⁴ = mappend₁₁₀(take_lz₁₀₀((_lh_percOp_arg3²⁰ % 10), _lh_percOp_arg2⁶), replicate₀₀₀((k¹³ - _lh_percOp_arg3²⁰), 
//│ 							let t¹⁶⁸ = (fun ys³⁴² -> ys³⁴²)
//│ 							in let h¹⁶⁸ = ' '
//│ 							in (fun ys³³⁹ -> 
//│ 								let t¹⁶⁹ = mappend₀₁₀(t¹⁶⁸, ys³³⁹)
//│ 								in let h¹⁶⁹ = h¹⁶⁸
//│ 								in (fun ys³⁴⁰ -> 
//│ 									let t¹⁷⁰ = mappend₃₁₁(t¹⁶⁹, ys³⁴⁰)
//│ 									in let h¹⁷⁰ = h¹⁶⁹
//│ 									in (fun ys³⁴¹ -> [LH_C h¹⁷⁰ mappend₂₁₅(t¹⁷⁰, ys³⁴¹)])))))
//│ 						in (fun _lh_percOp_arg3²¹ -> (fun j²¹ -> mappend₂₁₁(mappend₃₁₀(concat₀₁₀(_lh_percOp_LH_P2_0¹⁴), mappend₄₁₀(
//│ 							let t¹⁷¹ = 	
//│ 								let t¹⁷² = (fun ys³⁴³ -> ys³⁴³)
//│ 								in let h¹⁷¹ = ':'
//│ 								in (fun ys³⁴⁴ -> 
//│ 									let t¹⁷³ = mappend₄₁₁(t¹⁷², ys³⁴⁴)
//│ 									in let h¹⁷² = h¹⁷¹
//│ 									in (fun ys³⁴⁵ -> [LH_C h¹⁷² mappend₂₁₂(t¹⁷³, ys³⁴⁵)]))
//│ 							in let h¹⁷³ = 't'
//│ 							in (fun ys³⁴⁶ -> 
//│ 								let t¹⁷⁴ = mappend₄₁₂(t¹⁷¹, ys³⁴⁶)
//│ 								in let h¹⁷⁴ = h¹⁷³
//│ 								in (fun ys³⁴⁷ -> [LH_C h¹⁷⁴ mappend₂₁₃(t¹⁷⁴, ys³⁴⁷)])), mappend₅₁₀(string_of_int⁰(j²¹), 
//│ 							let t¹⁷⁵ = (fun ys³⁴⁸ -> ys³⁴⁸)
//│ 							in let h¹⁷⁵ = 'n'
//│ 							in (fun ys³⁴⁹ -> [LH_C h¹⁷⁵ mappend₂₁₀(t¹⁷⁵, ys³⁴⁹)])))), percOp₀₁₀(j²¹, _lh_percOp_LH_P2_1¹⁴, _lh_percOp_arg3²¹)))) else splitAt_lz₀₀₀(10, _lh_percOp_arg2⁶)
//│ 					in _lh_matchIdent¹⁹(_lh_percOp_arg3²⁰, j²⁰)
//│ 				where
//│ 				def concat₀₁₀(lss²⁵) = 
//│ 					lss²⁵(99)
//│ 				def mappend₁₁₀(xs¹⁴³, ys³¹¹) = 
//│ 					xs¹⁴³(ys³¹¹)
//│ 				def mappend₂₁₀(xs¹⁸⁹, ys⁴⁰⁶) = 
//│ 					xs¹⁸⁹(ys⁴⁰⁶)
//│ 				def mappend₂₁₁(xs¹⁴⁴, ys³¹²) = 
//│ 					xs¹⁴⁴(ys³¹²)
//│ 				def mappend₂₁₂(xs¹²⁹, ys²⁷⁵) = 
//│ 					xs¹²⁹(ys²⁷⁵)
//│ 				def mappend₂₁₃(xs¹⁵⁰, ys³³²) = 
//│ 					xs¹⁵⁰(ys³³²)
//│ 				def mappend₃₁₀(xs¹²³, ys²⁶⁴) = 
//│ 					xs¹²³(ys²⁶⁴)
//│ 				def mappend₄₁₀(xs¹⁷², ys³⁶⁹) = 
//│ 					xs¹⁷²(ys³⁶⁹)
//│ 				def mappend₄₁₁(xs¹⁷⁷, ys³⁷⁷) = 
//│ 					xs¹⁷⁷(ys³⁷⁷)
//│ 				def mappend₄₁₂(xs¹¹³, ys²⁴³) = 
//│ 					xs¹¹³(ys²⁴³)
//│ 				def mappend₅₁₀(xs¹³⁸, ys³⁰⁵) = 
//│ 					case xs¹³⁸ of {
//│ 						LH_C h⁸⁷ t⁸⁷ => 
//│ 							let t¹⁵⁷ = mappend₅₁₀(t⁸⁷, ys³⁰⁵)
//│ 							in let h¹⁵⁷ = h⁸⁷
//│ 							in (fun ys³⁰⁶ -> [LH_C h¹⁵⁷ mappend₂₁₄(t¹⁵⁷, ys³⁰⁶)])
//│ 						| LH_N  => ys³⁰⁵}
//│ 					where
//│ 					def mappend₂₁₄(xs¹²¹, ys²⁶⁰) = 
//│ 						xs¹²¹(ys²⁶⁰)
//│ 				def min₀₁₀(_lh_min_arg1⁶, _lh_min_arg2⁶) = 
//│ 					if (_lh_min_arg1⁶ > _lh_min_arg2⁶) then _lh_min_arg2⁶ else _lh_min_arg1⁶
//│ 				def replicate₀₀₀(_lh_replicate_arg1⁶, _lh_replicate_arg2⁶) = 
//│ 					if (_lh_replicate_arg1⁶ > 0) then 
//│ 						let t¹⁷⁶ = replicate₀₀₀((_lh_replicate_arg1⁶ - 1), _lh_replicate_arg2⁶)
//│ 						in let h¹⁷⁶ = _lh_replicate_arg2⁶
//│ 						in (fun _lh_dummy⁴⁰ -> mappend₀₁₀(h¹⁷⁶, concat₀₁₁(t¹⁷⁶))) else (fun _lh_dummy⁴¹ -> (fun ys³⁵³ -> ys³⁵³))
//│ 					where
//│ 					def concat₀₁₁(lss²⁹) = 
//│ 						lss²⁹(99)
//│ 					def mappend₀₁₀(xs¹⁸⁸, ys⁴⁰⁵) = 
//│ 						xs¹⁸⁸(ys⁴⁰⁵)
//│ 						where
//│ 						def mappend₂₁₅(xs¹⁴⁵, ys³¹³) = 
//│ 							xs¹⁴⁵(ys³¹³)
//│ 						def mappend₃₁₁(xs¹⁸³, ys³⁸⁵) = 
//│ 							xs¹⁸³(ys³⁸⁵)
//│ 				def splitAt_lz₀₀₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷) = 
//│ 					let _lh_percOp_LH_P2_1¹³ = drop_lz₀₀₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷)
//│ 					in let _lh_percOp_LH_P2_0¹³ = take_lz₀₀₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷)
//│ 					in (fun _lh_percOp_arg3¹⁹ -> (fun j¹⁹ -> mappend₂₁₆(mappend₃₁₂(concat₀₁₂(_lh_percOp_LH_P2_0¹³), mappend₄₁₃(
//│ 						let t¹⁶³ = 	
//│ 							let t¹⁶⁴ = (fun ys³²¹ -> ys³²¹)
//│ 							in let h¹⁶³ = ':'
//│ 							in (fun ys³²² -> 
//│ 								let t¹⁶⁵ = mappend₄₁₄(t¹⁶⁴, ys³²²)
//│ 								in let h¹⁶⁴ = h¹⁶³
//│ 								in (fun ys³²³ -> [LH_C h¹⁶⁴ mappend₂₁₇(t¹⁶⁵, ys³²³)]))
//│ 						in let h¹⁶⁵ = 't'
//│ 						in (fun ys³²⁴ -> 
//│ 							let t¹⁶⁶ = mappend₄₁₅(t¹⁶³, ys³²⁴)
//│ 							in let h¹⁶⁶ = h¹⁶⁵
//│ 							in (fun ys³²⁵ -> [LH_C h¹⁶⁶ mappend₂₁₈(t¹⁶⁶, ys³²⁵)])), mappend₅₁₁(string_of_int⁰(j¹⁹), 
//│ 						let t¹⁶⁷ = (fun ys³²⁶ -> ys³²⁶)
//│ 						in let h¹⁶⁷ = 'n'
//│ 						in (fun ys³²⁷ -> [LH_C h¹⁶⁷ mappend₂₁₉(t¹⁶⁷, ys³²⁷)])))), percOp₀₁₀(j¹⁹, _lh_percOp_LH_P2_1¹³, _lh_percOp_arg3¹⁹))))
//│ 					where
//│ 					def concat₀₁₂(lss²³) = 
//│ 						lss²³(99)
//│ 					def drop_lz₀₀₀(_lh_drop_lz_arg1⁶, _lh_drop_lz_arg2⁶) = 
//│ 						if (_lh_drop_lz_arg1⁶ > 0) then lazy⁰(
//│ 							let _lh_matchIdent¹⁶ = force⁰(_lh_drop_lz_arg2⁶)
//│ 							in case _lh_matchIdent¹⁶ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1⁶ - 1), _lh_drop_lz_LH_C_1³))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2⁶
//│ 					def mappend₂₁₆(xs¹⁶⁶, ys³⁶²) = 
//│ 						xs¹⁶⁶(ys³⁶²)
//│ 					def mappend₂₁₇(xs¹²⁴, ys²⁶⁵) = 
//│ 						xs¹²⁴(ys²⁶⁵)
//│ 					def mappend₂₁₈(xs¹⁰⁶, ys²³⁶) = 
//│ 						xs¹⁰⁶(ys²³⁶)
//│ 					def mappend₂₁₉(xs¹³¹, ys²⁷⁷) = 
//│ 						xs¹³¹(ys²⁷⁷)
//│ 					def mappend₃₁₂(xs¹⁶¹, ys³⁵⁷) = 
//│ 						xs¹⁶¹(ys³⁵⁷)
//│ 					def mappend₄₁₃(xs¹⁴⁰, ys³⁰⁸) = 
//│ 						xs¹⁴⁰(ys³⁰⁸)
//│ 					def mappend₄₁₄(xs¹⁰⁷, ys²³⁷) = 
//│ 						xs¹⁰⁷(ys²³⁷)
//│ 					def mappend₄₁₅(xs¹⁵⁴, ys³³⁶) = 
//│ 						xs¹⁵⁴(ys³³⁶)
//│ 					def mappend₅₁₁(xs¹⁸², ys³⁸³) = 
//│ 						case xs¹⁸² of {
//│ 							LH_C h⁷⁶ t⁷⁶ => 
//│ 								let t¹⁸² = mappend₅₁₁(t⁷⁶, ys³⁸³)
//│ 								in let h¹⁸² = h⁷⁶
//│ 								in (fun ys³⁸⁴ -> [LH_C h¹⁸² mappend₂₁₁₀(t¹⁸², ys³⁸⁴)])
//│ 							| LH_N  => ys³⁸³}
//│ 						where
//│ 						def mappend₂₁₁₀(xs¹⁵¹, ys³³³) = 
//│ 							xs¹⁵¹(ys³³³)
//│ 					def take_lz₀₀₀(n¹⁰, ls¹⁰) = 
//│ 						if (n¹⁰ > 0) then case force⁰(ls¹⁰) of {
//│ 							LH_C h¹¹⁸ t¹¹⁸ => 
//│ 								let t¹³¹ = take_lz₀₀₀((n¹⁰ - 1), t¹¹⁸)
//│ 								in let h¹³¹ = h¹¹⁸
//│ 								in (fun _lh_dummy³² -> mappend₀₁₁(h¹³¹, concat₀₁₃(t¹³¹)))
//│ 							| LH_N  => (fun _lh_dummy³³ -> (fun ys²⁵¹ -> ys²⁵¹))} else (fun _lh_dummy³⁴ -> (fun ys²⁵² -> ys²⁵²))
//│ 						where
//│ 						def concat₀₁₃(lss¹⁷) = 
//│ 							lss¹⁷(99)
//│ 						def mappend₀₁₁(xs¹¹⁹, ys²⁵⁶) = 
//│ 							case xs¹¹⁹ of {
//│ 								LH_C h⁶⁴ t⁶⁴ => 
//│ 									let t¹³⁴ = mappend₀₁₁(t⁶⁴, ys²⁵⁶)
//│ 									in let h¹³⁴ = h⁶⁴
//│ 									in (fun ys²⁵⁷ -> 
//│ 										let t¹³⁵ = mappend₃₁₃(t¹³⁴, ys²⁵⁷)
//│ 										in let h¹³⁵ = h¹³⁴
//│ 										in (fun ys²⁵⁸ -> [LH_C h¹³⁵ mappend₂₁₁₁(t¹³⁵, ys²⁵⁸)]))
//│ 								| LH_N  => ys²⁵⁶}
//│ 							where
//│ 							def mappend₂₁₁₁(xs¹⁷⁴, ys³⁷⁴) = 
//│ 								xs¹⁷⁴(ys³⁷⁴)
//│ 							def mappend₃₁₃(xs¹⁹⁷, ys⁴¹⁷) = 
//│ 								xs¹⁹⁷(ys⁴¹⁷)
//│ 				def take_lz₁₀₀(n¹², ls¹²) = 
//│ 					if (n¹² > 0) then case force⁰(ls¹²) of {
//│ 						LH_C h⁴⁵ t⁴⁵ => 
//│ 							let t¹³⁸ = take_lz₁₀₀((n¹² - 1), t⁴⁵)
//│ 							in let h¹³⁸ = h⁴⁵
//│ 							in (fun ys²⁶⁶ -> 
//│ 								let t¹³⁹ = mappend₁₁₁(t¹³⁸, ys²⁶⁶)
//│ 								in let h¹³⁹ = h¹³⁸
//│ 								in (fun _lh_dummy³⁶ -> mappend₀₁₂(h¹³⁹, concat₀₁₄(t¹³⁹))))
//│ 						| LH_N  => (fun ys²⁶⁷ -> ys²⁶⁷)} else (fun ys²⁶⁸ -> ys²⁶⁸)
//│ 					where
//│ 					def concat₀₁₄(lss²⁷) = 
//│ 						lss²⁷(99)
//│ 					def mappend₀₁₂(xs¹⁸⁴, ys³⁸⁶) = 
//│ 						case xs¹⁸⁴ of {
//│ 							LH_C h⁷⁸ t⁷⁸ => 
//│ 								let t¹⁸³ = mappend₀₁₂(t⁷⁸, ys³⁸⁶)
//│ 								in let h¹⁸³ = h⁷⁸
//│ 								in (fun ys³⁸⁷ -> 
//│ 									let t¹⁸⁴ = mappend₃₁₄(t¹⁸³, ys³⁸⁷)
//│ 									in let h¹⁸⁴ = h¹⁸³
//│ 									in (fun ys³⁸⁸ -> [LH_C h¹⁸⁴ mappend₂₁₁₂(t¹⁸⁴, ys³⁸⁸)]))
//│ 							| LH_N  => ys³⁸⁶}
//│ 						where
//│ 						def mappend₂₁₁₂(xs¹¹², ys²⁴²) = 
//│ 							xs¹¹²(ys²⁴²)
//│ 						def mappend₃₁₄(xs¹²⁷, ys²⁷¹) = 
//│ 							xs¹²⁷(ys²⁷¹)
//│ 					def mappend₁₁₁(xs¹⁹³, ys⁴¹⁰) = 
//│ 						xs¹⁹³(ys⁴¹⁰)
//│ 			def replicate₀₁₀(_lh_replicate_arg1⁷, _lh_replicate_arg2⁷) = 
//│ 				if (_lh_replicate_arg1⁷ > 0) then 
//│ 					let t¹⁹⁷ = replicate₀₁₀((_lh_replicate_arg1⁷ - 1), _lh_replicate_arg2⁷)
//│ 					in let h¹⁹⁷ = _lh_replicate_arg2⁷
//│ 					in (fun _lh_dummy⁴⁶ -> mappend₀₀₀(h¹⁹⁷, concat₀₀₁(t¹⁹⁷))) else (fun _lh_dummy⁴⁷ -> (fun ys⁴¹⁶ -> ys⁴¹⁶))
//│ 				where
//│ 				def concat₀₀₁(lss²⁴) = 
//│ 					lss²⁴(99)
//│ 				def mappend₀₀₀(xs¹⁹², ys⁴⁰⁹) = 
//│ 					xs¹⁹²(ys⁴⁰⁹)
//│ 					where
//│ 					def mappend₂₀₅(xs¹³⁹, ys³⁰⁷) = 
//│ 						xs¹³⁹(ys³⁰⁷)
//│ 					def mappend₃₀₁(xs¹⁴⁹, ys³³¹) = 
//│ 						xs¹⁴⁹(ys³³¹)
//│ 			def splitAt_lz₀₁₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵) = 
//│ 				let _lh_percOp_LH_P2_1¹⁰ = drop_lz₀₁₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵)
//│ 				in let _lh_percOp_LH_P2_0¹⁰ = take_lz₀₁₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵)
//│ 				in (fun _lh_percOp_arg3¹⁵ -> (fun j¹⁵ -> mappend₂₀₆(mappend₃₀₂(concat₀₀₂(_lh_percOp_LH_P2_0¹⁰), mappend₄₀₃(
//│ 					let t¹⁴¹ = 	
//│ 						let t¹⁴² = (fun ys²⁷⁸ -> ys²⁷⁸)
//│ 						in let h¹⁴¹ = ':'
//│ 						in (fun ys²⁷⁹ -> 
//│ 							let t¹⁴³ = mappend₄₀₄(t¹⁴², ys²⁷⁹)
//│ 							in let h¹⁴² = h¹⁴¹
//│ 							in (fun ys²⁸⁰ -> [LH_C h¹⁴² mappend₂₀₇(t¹⁴³, ys²⁸⁰)]))
//│ 					in let h¹⁴³ = 't'
//│ 					in (fun ys²⁸¹ -> 
//│ 						let t¹⁴⁴ = mappend₄₀₅(t¹⁴¹, ys²⁸¹)
//│ 						in let h¹⁴⁴ = h¹⁴³
//│ 						in (fun ys²⁸² -> [LH_C h¹⁴⁴ mappend₂₀₈(t¹⁴⁴, ys²⁸²)])), mappend₅₀₁(string_of_int⁰(j¹⁵), 
//│ 					let t¹⁴⁵ = (fun ys²⁸³ -> ys²⁸³)
//│ 					in let h¹⁴⁵ = 'n'
//│ 					in (fun ys²⁸⁴ -> [LH_C h¹⁴⁵ mappend₂₀₉(t¹⁴⁵, ys²⁸⁴)])))), percOp₀₁₁(j¹⁵, _lh_percOp_LH_P2_1¹⁰, _lh_percOp_arg3¹⁵))))
//│ 				where
//│ 				def concat₀₀₂(lss³¹) = 
//│ 					lss³¹(99)
//│ 				def drop_lz₀₁₀(_lh_drop_lz_arg1⁵, _lh_drop_lz_arg2⁵) = 
//│ 					if (_lh_drop_lz_arg1⁵ > 0) then lazy⁰(
//│ 						let _lh_matchIdent¹⁴ = force⁰(_lh_drop_lz_arg2⁵)
//│ 						in case _lh_matchIdent¹⁴ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1⁵ - 1), _lh_drop_lz_LH_C_1⁴))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2⁵
//│ 				def mappend₂₀₆(xs¹¹⁸, ys²⁵⁰) = 
//│ 					xs¹¹⁸(ys²⁵⁰)
//│ 				def mappend₂₀₇(xs¹¹⁷, ys²⁴⁹) = 
//│ 					xs¹¹⁷(ys²⁴⁹)
//│ 				def mappend₂₀₈(xs¹⁰⁵, ys²³⁵) = 
//│ 					xs¹⁰⁵(ys²³⁵)
//│ 				def mappend₂₀₉(xs¹⁴⁶, ys³²⁸) = 
//│ 					xs¹⁴⁶(ys³²⁸)
//│ 				def mappend₃₀₂(xs¹³⁴, ys³⁰⁰) = 
//│ 					xs¹³⁴(ys³⁰⁰)
//│ 				def mappend₄₀₃(xs¹⁶³, ys³⁵⁹) = 
//│ 					xs¹⁶³(ys³⁵⁹)
//│ 				def mappend₄₀₄(xs¹⁷³, ys³⁷⁰) = 
//│ 					xs¹⁷³(ys³⁷⁰)
//│ 				def mappend₄₀₅(xs¹¹⁰, ys²⁴⁰) = 
//│ 					xs¹¹⁰(ys²⁴⁰)
//│ 				def mappend₅₀₁(xs¹³⁵, ys³⁰¹) = 
//│ 					case xs¹³⁵ of {
//│ 						LH_C h⁸¹ t⁸¹ => 
//│ 							let t¹⁵⁶ = mappend₅₀₁(t⁸¹, ys³⁰¹)
//│ 							in let h¹⁵⁶ = h⁸¹
//│ 							in (fun ys³⁰² -> [LH_C h¹⁵⁶ mappend₂₀₁₀(t¹⁵⁶, ys³⁰²)])
//│ 						| LH_N  => ys³⁰¹}
//│ 					where
//│ 					def mappend₂₀₁₀(xs¹¹¹, ys²⁴¹) = 
//│ 						xs¹¹¹(ys²⁴¹)
//│ 				def percOp₀₁₁(_lh_percOp_arg1⁵, _lh_percOp_arg2⁵, _lh_percOp_arg3¹⁶) = 
//│ 					if (_lh_percOp_arg1⁵ >= _lh_percOp_arg3¹⁶) then [LH_N] else 
//│ 						let k⁹ = (_lh_percOp_arg1⁵ + 10)
//│ 						in let j¹⁶ = min₀₁₁(_lh_percOp_arg3¹⁶, k⁹)
//│ 						in let _lh_matchIdent¹⁵ = if (k⁹ > _lh_percOp_arg3¹⁶) then 
//│ 							let _lh_percOp_LH_P2_1¹¹ = lazy⁰([LH_N])
//│ 							in let _lh_percOp_LH_P2_0¹¹ = mappend₁₁₂(take_lz₁₀₁((_lh_percOp_arg3¹⁶ % 10), _lh_percOp_arg2⁵), replicate₀₀₁((k⁹ - _lh_percOp_arg3¹⁶), 
//│ 								let t¹⁴⁶ = (fun ys²⁸⁸ -> ys²⁸⁸)
//│ 								in let h¹⁴⁶ = ' '
//│ 								in (fun ys²⁸⁵ -> 
//│ 									let t¹⁴⁷ = mappend₀₁₃(t¹⁴⁶, ys²⁸⁵)
//│ 									in let h¹⁴⁷ = h¹⁴⁶
//│ 									in (fun ys²⁸⁶ -> 
//│ 										let t¹⁴⁸ = mappend₃₁₆(t¹⁴⁷, ys²⁸⁶)
//│ 										in let h¹⁴⁸ = h¹⁴⁷
//│ 										in (fun ys²⁸⁷ -> [LH_C h¹⁴⁸ mappend₂₁₁₈(t¹⁴⁸, ys²⁸⁷)])))))
//│ 							in (fun _lh_percOp_arg3¹⁷ -> (fun j¹⁷ -> mappend₂₁₁₄(mappend₃₁₅(concat₀₁₅(_lh_percOp_LH_P2_0¹¹), mappend₄₁₆(
//│ 								let t¹⁴⁹ = 	
//│ 									let t¹⁵⁰ = (fun ys²⁸⁹ -> ys²⁸⁹)
//│ 									in let h¹⁴⁹ = ':'
//│ 									in (fun ys²⁹⁰ -> 
//│ 										let t¹⁵¹ = mappend₄₁₇(t¹⁵⁰, ys²⁹⁰)
//│ 										in let h¹⁵⁰ = h¹⁴⁹
//│ 										in (fun ys²⁹¹ -> [LH_C h¹⁵⁰ mappend₂₁₁₅(t¹⁵¹, ys²⁹¹)]))
//│ 								in let h¹⁵¹ = 't'
//│ 								in (fun ys²⁹² -> 
//│ 									let t¹⁵² = mappend₄₁₈(t¹⁴⁹, ys²⁹²)
//│ 									in let h¹⁵² = h¹⁵¹
//│ 									in (fun ys²⁹³ -> [LH_C h¹⁵² mappend₂₁₁₆(t¹⁵², ys²⁹³)])), mappend₅₁₂(string_of_int⁰(j¹⁷), 
//│ 								let t¹⁵³ = (fun ys²⁹⁴ -> ys²⁹⁴)
//│ 								in let h¹⁵³ = 'n'
//│ 								in (fun ys²⁹⁵ -> [LH_C h¹⁵³ mappend₂₁₁₃(t¹⁵³, ys²⁹⁵)])))), percOp₀₁₁(j¹⁷, _lh_percOp_LH_P2_1¹¹, _lh_percOp_arg3¹⁷)))) else splitAt_lz₀₀₁(10, _lh_percOp_arg2⁵)
//│ 						in _lh_matchIdent¹⁵(_lh_percOp_arg3¹⁶, j¹⁶)
//│ 					where
//│ 					def concat₀₁₅(lss²⁶) = 
//│ 						lss²⁶(99)
//│ 					def mappend₁₁₂(xs¹⁶⁴, ys³⁶⁰) = 
//│ 						xs¹⁶⁴(ys³⁶⁰)
//│ 					def mappend₂₁₁₃(xs¹⁴¹, ys³⁰⁹) = 
//│ 						xs¹⁴¹(ys³⁰⁹)
//│ 					def mappend₂₁₁₄(xs¹⁵⁵, ys³³⁷) = 
//│ 						xs¹⁵⁵(ys³³⁷)
//│ 					def mappend₂₁₁₅(xs¹⁶⁷, ys³⁶³) = 
//│ 						xs¹⁶⁷(ys³⁶³)
//│ 					def mappend₂₁₁₆(xs¹⁸⁵, ys³⁸⁹) = 
//│ 						xs¹⁸⁵(ys³⁸⁹)
//│ 					def mappend₃₁₅(xs¹³³, ys²⁹⁹) = 
//│ 						xs¹³³(ys²⁹⁹)
//│ 					def mappend₄₁₆(xs¹¹⁴, ys²⁴⁴) = 
//│ 						xs¹¹⁴(ys²⁴⁴)
//│ 					def mappend₄₁₇(xs¹⁹⁰, ys⁴⁰⁷) = 
//│ 						xs¹⁹⁰(ys⁴⁰⁷)
//│ 					def mappend₄₁₈(xs¹⁵⁷, ys³⁵⁰) = 
//│ 						xs¹⁵⁷(ys³⁵⁰)
//│ 					def mappend₅₁₂(xs¹⁶⁹, ys³⁶⁵) = 
//│ 						case xs¹⁶⁹ of {
//│ 							LH_C h¹²⁷ t¹²⁷ => 
//│ 								let t¹⁷⁸ = mappend₅₁₂(t¹²⁷, ys³⁶⁵)
//│ 								in let h¹⁷⁸ = h¹²⁷
//│ 								in (fun ys³⁶⁶ -> [LH_C h¹⁷⁸ mappend₂₁₁₇(t¹⁷⁸, ys³⁶⁶)])
//│ 							| LH_N  => ys³⁶⁵}
//│ 						where
//│ 						def mappend₂₁₁₇(xs¹⁷⁶, ys³⁷⁶) = 
//│ 							xs¹⁷⁶(ys³⁷⁶)
//│ 					def min₀₁₁(_lh_min_arg1⁷, _lh_min_arg2⁷) = 
//│ 						if (_lh_min_arg1⁷ > _lh_min_arg2⁷) then _lh_min_arg2⁷ else _lh_min_arg1⁷
//│ 					def replicate₀₀₁(_lh_replicate_arg1⁵, _lh_replicate_arg2⁵) = 
//│ 						if (_lh_replicate_arg1⁵ > 0) then 
//│ 							let t¹³⁰ = replicate₀₀₁((_lh_replicate_arg1⁵ - 1), _lh_replicate_arg2⁵)
//│ 							in let h¹³⁰ = _lh_replicate_arg2⁵
//│ 							in (fun _lh_dummy³⁰ -> mappend₀₁₃(h¹³⁰, concat₀₁₆(t¹³⁰))) else (fun _lh_dummy³¹ -> (fun ys²⁴⁸ -> ys²⁴⁸))
//│ 						where
//│ 						def concat₀₁₆(lss¹⁹) = 
//│ 							lss¹⁹(99)
//│ 						def mappend₀₁₃(xs¹⁰⁹, ys²³⁹) = 
//│ 							xs¹⁰⁹(ys²³⁹)
//│ 							where
//│ 							def mappend₂₁₁₈(xs¹¹⁵, ys²⁴⁵) = 
//│ 								xs¹¹⁵(ys²⁴⁵)
//│ 							def mappend₃₁₆(xs¹⁶⁰, ys³⁵⁶) = 
//│ 								xs¹⁶⁰(ys³⁵⁶)
//│ 					def splitAt_lz₀₀₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶) = 
//│ 						let _lh_percOp_LH_P2_1¹² = drop_lz₀₀₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶)
//│ 						in let _lh_percOp_LH_P2_0¹² = take_lz₀₀₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶)
//│ 						in (fun _lh_percOp_arg3¹⁸ -> (fun j¹⁸ -> mappend₂₁₁₉(mappend₃₁₇(concat₀₁₇(_lh_percOp_LH_P2_0¹²), mappend₄₁₉(
//│ 							let t¹⁵⁸ = 	
//│ 								let t¹⁵⁹ = (fun ys³¹⁴ -> ys³¹⁴)
//│ 								in let h¹⁵⁸ = ':'
//│ 								in (fun ys³¹⁵ -> 
//│ 									let t¹⁶⁰ = mappend₄₁₁₀(t¹⁵⁹, ys³¹⁵)
//│ 									in let h¹⁵⁹ = h¹⁵⁸
//│ 									in (fun ys³¹⁶ -> [LH_C h¹⁵⁹ mappend₂₁₂₀(t¹⁶⁰, ys³¹⁶)]))
//│ 							in let h¹⁶⁰ = 't'
//│ 							in (fun ys³¹⁷ -> 
//│ 								let t¹⁶¹ = mappend₄₁₁₁(t¹⁵⁸, ys³¹⁷)
//│ 								in let h¹⁶¹ = h¹⁶⁰
//│ 								in (fun ys³¹⁸ -> [LH_C h¹⁶¹ mappend₂₁₂₁(t¹⁶¹, ys³¹⁸)])), mappend₅₁₃(string_of_int⁰(j¹⁸), 
//│ 							let t¹⁶² = (fun ys³¹⁹ -> ys³¹⁹)
//│ 							in let h¹⁶² = 'n'
//│ 							in (fun ys³²⁰ -> [LH_C h¹⁶² mappend₂₁₂₂(t¹⁶², ys³²⁰)])))), percOp₀₁₁(j¹⁸, _lh_percOp_LH_P2_1¹², _lh_percOp_arg3¹⁸))))
//│ 						where
//│ 						def concat₀₁₇(lss²²) = 
//│ 							lss²²(99)
//│ 						def drop_lz₀₀₁(_lh_drop_lz_arg1⁷, _lh_drop_lz_arg2⁷) = 
//│ 							if (_lh_drop_lz_arg1⁷ > 0) then lazy⁰(
//│ 								let _lh_matchIdent²¹ = force⁰(_lh_drop_lz_arg2⁷)
//│ 								in case _lh_matchIdent²¹ of {
//│ 									LH_N  => [LH_N]
//│ 									| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁷ - 1), _lh_drop_lz_LH_C_1²))
//│ 									| _  => error⁰}) else _lh_drop_lz_arg2⁷
//│ 						def mappend₂₁₁₉(xs¹²⁰, ys²⁵⁹) = 
//│ 							xs¹²⁰(ys²⁵⁹)
//│ 						def mappend₂₁₂₀(xs¹²⁵, ys²⁶⁹) = 
//│ 							xs¹²⁵(ys²⁶⁹)
//│ 						def mappend₂₁₂₁(xs¹⁹⁵, ys⁴¹²) = 
//│ 							xs¹⁹⁵(ys⁴¹²)
//│ 						def mappend₂₁₂₂(xs¹⁵⁹, ys³⁵²) = 
//│ 							xs¹⁵⁹(ys³⁵²)
//│ 						def mappend₃₁₇(xs¹⁵⁸, ys³⁵¹) = 
//│ 							xs¹⁵⁸(ys³⁵¹)
//│ 						def mappend₄₁₉(xs¹⁵⁶, ys³³⁸) = 
//│ 							xs¹⁵⁶(ys³³⁸)
//│ 						def mappend₄₁₁₀(xs¹⁷⁰, ys³⁶⁷) = 
//│ 							xs¹⁷⁰(ys³⁶⁷)
//│ 						def mappend₄₁₁₁(xs¹⁹¹, ys⁴⁰⁸) = 
//│ 							xs¹⁹¹(ys⁴⁰⁸)
//│ 						def mappend₅₁₃(xs¹¹⁶, ys²⁴⁶) = 
//│ 							case xs¹¹⁶ of {
//│ 								LH_C h⁴⁸ t⁴⁸ => 
//│ 									let t¹²⁹ = mappend₅₁₃(t⁴⁸, ys²⁴⁶)
//│ 									in let h¹²⁹ = h⁴⁸
//│ 									in (fun ys²⁴⁷ -> [LH_C h¹²⁹ mappend₂₁₂₃(t¹²⁹, ys²⁴⁷)])
//│ 								| LH_N  => ys²⁴⁶}
//│ 							where
//│ 							def mappend₂₁₂₃(xs¹⁴⁸, ys³³⁰) = 
//│ 								xs¹⁴⁸(ys³³⁰)
//│ 						def take_lz₀₀₁(n¹³, ls¹³) = 
//│ 							if (n¹³ > 0) then case force⁰(ls¹³) of {
//│ 								LH_C h¹¹³ t¹¹³ => 
//│ 									let t¹⁴⁰ = take_lz₀₀₁((n¹³ - 1), t¹¹³)
//│ 									in let h¹⁴⁰ = h¹¹³
//│ 									in (fun _lh_dummy³⁷ -> mappend₀₁₄(h¹⁴⁰, concat₀₁₈(t¹⁴⁰)))
//│ 								| LH_N  => (fun _lh_dummy³⁸ -> (fun ys²⁷² -> ys²⁷²))} else (fun _lh_dummy³⁹ -> (fun ys²⁷³ -> ys²⁷³))
//│ 							where
//│ 							def concat₀₁₈(lss²⁸) = 
//│ 								lss²⁸(99)
//│ 							def mappend₀₁₄(xs¹²², ys²⁶¹) = 
//│ 								case xs¹²² of {
//│ 									LH_C h⁴² t⁴² => 
//│ 										let t¹³⁶ = mappend₀₁₄(t⁴², ys²⁶¹)
//│ 										in let h¹³⁶ = h⁴²
//│ 										in (fun ys²⁶² -> 
//│ 											let t¹³⁷ = mappend₃₁₈(t¹³⁶, ys²⁶²)
//│ 											in let h¹³⁷ = h¹³⁶
//│ 											in (fun ys²⁶³ -> [LH_C h¹³⁷ mappend₂₁₂₄(t¹³⁷, ys²⁶³)]))
//│ 									| LH_N  => ys²⁶¹}
//│ 								where
//│ 								def mappend₂₁₂₄(xs¹⁸⁰, ys³⁸⁰) = 
//│ 									xs¹⁸⁰(ys³⁸⁰)
//│ 								def mappend₃₁₈(xs¹²⁶, ys²⁷⁰) = 
//│ 									xs¹²⁶(ys²⁷⁰)
//│ 					def take_lz₁₀₁(n¹⁵, ls¹⁵) = 
//│ 						if (n¹⁵ > 0) then case force⁰(ls¹⁵) of {
//│ 							LH_C h⁷² t⁷² => 
//│ 								let t¹⁷⁹ = take_lz₁₀₁((n¹⁵ - 1), t⁷²)
//│ 								in let h¹⁷⁹ = h⁷²
//│ 								in (fun ys³⁷¹ -> 
//│ 									let t¹⁸⁰ = mappend₁₁₃(t¹⁷⁹, ys³⁷¹)
//│ 									in let h¹⁸⁰ = h¹⁷⁹
//│ 									in (fun _lh_dummy⁴⁵ -> mappend₀₁₅(h¹⁸⁰, concat₀₁₉(t¹⁸⁰))))
//│ 							| LH_N  => (fun ys³⁷² -> ys³⁷²)} else (fun ys³⁷³ -> ys³⁷³)
//│ 						where
//│ 						def concat₀₁₉(lss³⁰) = 
//│ 							lss³⁰(99)
//│ 						def mappend₀₁₅(xs¹⁹⁶, ys⁴¹³) = 
//│ 							case xs¹⁹⁶ of {
//│ 								LH_C h¹⁰⁰ t¹⁰⁰ => 
//│ 									let t¹⁹⁵ = mappend₀₁₅(t¹⁰⁰, ys⁴¹³)
//│ 									in let h¹⁹⁵ = h¹⁰⁰
//│ 									in (fun ys⁴¹⁴ -> 
//│ 										let t¹⁹⁶ = mappend₃₁₉(t¹⁹⁵, ys⁴¹⁴)
//│ 										in let h¹⁹⁶ = h¹⁹⁵
//│ 										in (fun ys⁴¹⁵ -> [LH_C h¹⁹⁶ mappend₂₁₂₅(t¹⁹⁶, ys⁴¹⁵)]))
//│ 								| LH_N  => ys⁴¹³}
//│ 							where
//│ 							def mappend₂₁₂₅(xs¹⁵², ys³³⁴) = 
//│ 								xs¹⁵²(ys³³⁴)
//│ 							def mappend₃₁₉(xs¹³⁶, ys³⁰³) = 
//│ 								xs¹³⁶(ys³⁰³)
//│ 						def mappend₁₁₃(xs¹⁷¹, ys³⁶⁸) = 
//│ 							xs¹⁷¹(ys³⁶⁸)
//│ 				def take_lz₀₁₀(n¹⁴, ls¹⁴) = 
//│ 					if (n¹⁴ > 0) then case force⁰(ls¹⁴) of {
//│ 						LH_C h¹²⁵ t¹²⁵ => 
//│ 							let t¹⁷⁷ = take_lz₀₁₀((n¹⁴ - 1), t¹²⁵)
//│ 							in let h¹⁷⁷ = h¹²⁵
//│ 							in (fun _lh_dummy⁴² -> mappend₀₀₁(h¹⁷⁷, concat₀₀₃(t¹⁷⁷)))
//│ 						| LH_N  => (fun _lh_dummy⁴³ -> (fun ys³⁵⁴ -> ys³⁵⁴))} else (fun _lh_dummy⁴⁴ -> (fun ys³⁵⁵ -> ys³⁵⁵))
//│ 					where
//│ 					def concat₀₀₃(lss²⁰) = 
//│ 						lss²⁰(99)
//│ 					def mappend₀₀₁(xs¹⁸⁶, ys³⁹⁰) = 
//│ 						case xs¹⁸⁶ of {
//│ 							LH_C h¹⁰⁵ t¹⁰⁵ => 
//│ 								let t¹⁸⁵ = mappend₀₀₁(t¹⁰⁵, ys³⁹⁰)
//│ 								in let h¹⁸⁵ = h¹⁰⁵
//│ 								in (fun ys³⁹¹ -> 
//│ 									let t¹⁸⁶ = mappend₃₀₃(t¹⁸⁵, ys³⁹¹)
//│ 									in let h¹⁸⁶ = h¹⁸⁵
//│ 									in (fun ys³⁹² -> [LH_C h¹⁸⁶ mappend₂₀₁₁(t¹⁸⁶, ys³⁹²)]))
//│ 							| LH_N  => ys³⁹⁰}
//│ 						where
//│ 						def mappend₂₀₁₁(xs¹⁶⁸, ys³⁶⁴) = 
//│ 							xs¹⁶⁸(ys³⁶⁴)
//│ 						def mappend₃₀₃(xs¹⁶², ys³⁵⁸) = 
//│ 							xs¹⁶²(ys³⁵⁸)
//│ 			def take_lz₁₁₀(n¹¹, ls¹¹) = 
//│ 				if (n¹¹ > 0) then case force⁰(ls¹¹) of {
//│ 					LH_C h⁸⁹ t⁸⁹ => 
//│ 						let t¹³² = take_lz₁₁₀((n¹¹ - 1), t⁸⁹)
//│ 						in let h¹³² = h⁸⁹
//│ 						in (fun ys²⁵³ -> 
//│ 							let t¹³³ = mappend₁₀₁(t¹³², ys²⁵³)
//│ 							in let h¹³³ = h¹³²
//│ 							in (fun _lh_dummy³⁵ -> mappend₀₀₂(h¹³³, concat₀₀₄(t¹³³))))
//│ 					| LH_N  => (fun ys²⁵⁴ -> ys²⁵⁴)} else (fun ys²⁵⁵ -> ys²⁵⁵)
//│ 				where
//│ 				def concat₀₀₄(lss¹⁸) = 
//│ 					lss¹⁸(99)
//│ 				def mappend₀₀₂(xs¹³², ys²⁹⁶) = 
//│ 					case xs¹³² of {
//│ 						LH_C h⁹⁷ t⁹⁷ => 
//│ 							let t¹⁵⁴ = mappend₀₀₂(t⁹⁷, ys²⁹⁶)
//│ 							in let h¹⁵⁴ = h⁹⁷
//│ 							in (fun ys²⁹⁷ -> 
//│ 								let t¹⁵⁵ = mappend₃₀₄(t¹⁵⁴, ys²⁹⁷)
//│ 								in let h¹⁵⁵ = h¹⁵⁴
//│ 								in (fun ys²⁹⁸ -> [LH_C h¹⁵⁵ mappend₂₀₁₂(t¹⁵⁵, ys²⁹⁸)]))
//│ 						| LH_N  => ys²⁹⁶}
//│ 					where
//│ 					def mappend₂₀₁₂(xs¹⁴², ys³¹⁰) = 
//│ 						xs¹⁴²(ys³¹⁰)
//│ 					def mappend₃₀₄(xs¹⁴⁷, ys³²⁹) = 
//│ 						xs¹⁴⁷(ys³²⁹)
//│ 				def mappend₁₀₁(xs¹³⁰, ys²⁷⁶) = 
//│ 					xs¹³⁰(ys²⁷⁶)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

