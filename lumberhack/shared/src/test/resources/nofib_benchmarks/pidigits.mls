:NewParser
:ParseOnly

// pidgits n = 0 % (0 # (1,0,1)) where
//   i%ds
//      | i >= n = []
//      | True = (concat h ++ "\t:" ++ show j ++ "\n") ++ j%t
//      where k = i+10;
//            j = min n k;
//            (h,t) | k > n = (take (n`mod`10) ds ++ replicate (k-n) " ",[])
//                  | True = splitAt 10 ds
//   j # s
//      | n>a || r+n>=d = k # t
//      | True = show q : k # (n*10,(a-(q*d))*10,d)
//      where k = j+1; 
//            t@(n,a,d) = k&s; 
//            (q,r) = (n*3+a) `divMod` d
//   j&(n,a,d) = (n*j,(a+n*2)*y,d*y) where y=(j*2+1)

:lhInHaskell
:lhGenOCaml
drop_lz n ls = if n > 0 then lazy (case (force ls) of { [] -> []; (h:t) -> force (drop_lz (n - 1) t) }) else ls
splitAt_lz n xs = (take_lz n xs, drop_lz n xs)
min a b = if a > b then b else a
replicate n x = if n > 0 then (x:(replicate (n - 1) x)) else []
divmod a b = ((a `div` b), (a `mod` b))
percOp i ds n =
  if i >= n then
    []
  else
    let k = (i + 10) in
          let j = (min n k) in
                case (if k > n then ((take_lz (n `mod` 10) ds) ++ (replicate (k-n) " "), (lazy [])) else (splitAt_lz 10 ds)) of {
                  (h, t) -> (concat h) ++ ("t:" ++ ((string_of_int j) ++ "n")) ++ (percOp j t n)
                }
hashOp j s =
  lazy (let k = j + 1 in
      case (ampOp k s) of {
        (n, a, d) -> case (divmod ((n * 3) + a) d) of {
          (q, r) -> if ((n > a) || ((r + n) >= d)) then (force (hashOp k (n, a, d))) else ((string_of_int q) : (hashOp k (n*10, (a-(q*d))*10, d)))
        }
      })
ampOp j (n,a,d) = let y = ((j * 2) + 1) in (n * j, (a + (n * 2)) * y, d * y)
pidgits n = percOp 0 (hashOp 0 (1,0,1)) n
testPiDigits_nofib n = pidgits n
testPiDigits_nofib $ primId 5000
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testPiDigits_nofib₀^1406(primId⁰(5000))
//│ def ampOp₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = case _lh_ampOp_arg2¹ of {
//│ 	LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 		let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 		in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 	| _  => error⁰}
//│ def concat₀(lss¹) = case lss¹ of {
//│ 	LH_C h²⁶ t²⁸ => mappend₀^1355(h²⁶, concat₀^1358(t²⁸))
//│ 	| LH_N  => [LH_N]}
//│ def divmod₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ def drop_lz₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = if (_lh_drop_lz_arg1¹ > 0) then lazy⁰(
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_drop_lz_arg2¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀^1049((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹))
//│ 		| _  => error⁰}) else _lh_drop_lz_arg2¹
//│ def hashOp₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = lazy⁰(
//│ 	let k³ = (_lh_hashOp_arg1¹ + 1)
//│ 	in let _lh_matchIdent⁶ = ampOp₀^1236(k³, _lh_hashOp_arg2¹)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 			let _lh_matchIdent⁷ = divmod₀^1242(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 			in case _lh_matchIdent⁷ of {
//│ 				LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀^1274(k³, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀^1286(k³, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]
//│ 				| _  => error⁰}
//│ 		| _  => error⁰})
//│ def mappend₀(xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C h²⁵ t²⁷ => [LH_C h²⁵ mappend₀^1344(t²⁷, ys¹³)]
//│ 	| LH_N  => ys¹³}
//│ def mappend₁(xs¹⁰, ys¹⁰) = case xs¹⁰ of {
//│ 	LH_C h²¹ t²³ => [LH_C h²¹ mappend₁^1133(t²³, ys¹⁰)]
//│ 	| LH_N  => ys¹⁰}
//│ def mappend₂(xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C h²³ t²⁵ => [LH_C h²³ mappend₂^1198(t²⁵, ys¹¹)]
//│ 	| LH_N  => ys¹¹}
//│ def mappend₃(xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C h²⁰ t²² => [LH_C h²⁰ mappend₃^1121(t²², ys⁹)]
//│ 	| LH_N  => ys⁹}
//│ def mappend₄(xs¹², ys¹²) = case xs¹² of {
//│ 	LH_C h²⁴ t²⁶ => [LH_C h²⁴ mappend₄^1210(t²⁶, ys¹²)]
//│ 	| LH_N  => ys¹²}
//│ def mappend₅(xs¹⁴, ys¹⁴) = case xs¹⁴ of {
//│ 	LH_C h²⁸ t³⁰ => [LH_C h²⁸ mappend₅^1396(t³⁰, ys¹⁴)]
//│ 	| LH_N  => ys¹⁴}
//│ def min₀(_lh_min_arg1¹, _lh_min_arg2¹) = if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ def percOp₀(_lh_percOp_arg1¹, _lh_percOp_arg2¹, _lh_percOp_arg3¹) = if (_lh_percOp_arg1¹ >= _lh_percOp_arg3¹) then [LH_N] else 
//│ 	let k² = (_lh_percOp_arg1¹ + 10)
//│ 	in let j¹ = min₀^951(_lh_percOp_arg3¹, k²)
//│ 	in let _lh_matchIdent⁴ = if (k² > _lh_percOp_arg3¹) then [LH_P2 mappend₁^961(take_lz₁^962((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀^972((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz₀^988(10, _lh_percOp_arg2¹)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂^995(mappend₃^996(concat₀^997(_lh_percOp_LH_P2_0¹), mappend₄^1001([LH_C 't' [LH_C ':' [LH_N]]], mappend₅^1008(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀^1020(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹))
//│ 		| _  => error⁰}
//│ def pidgits₀(_lh_pidgits_arg1¹) = percOp₀^1168(0, hashOp₀^1171(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ def replicate₀(_lh_replicate_arg1¹, _lh_replicate_arg2¹) = if (_lh_replicate_arg1¹ > 0) then [LH_C _lh_replicate_arg2¹ replicate₀^1328((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)] else [LH_N]
//│ def splitAt_lz₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = [LH_P2 take_lz₀^1183(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀^1188(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ def take_lz₀(n⁵, ls²⁰) = if (n⁵ > 0) then case force⁰(ls²⁰) of {
//│ 	LH_C h²⁷ t²⁹ => [LH_C h²⁷ take_lz₀^1378((n⁵ - 1), t²⁹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz₁(n⁴, ls¹⁹) = if (n⁴ > 0) then case force⁰(ls¹⁹) of {
//│ 	LH_C h²² t²⁴ => [LH_C h²² take_lz₁^1152((n⁴ - 1), t²⁴)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testPiDigits_nofib₀(_lh_testPiDigits_nofib_arg1¹) = pidgits₀^1365(_lh_testPiDigits_nofib_arg1¹)
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec ampOp_d0 _lh_ampOp_arg1_1 _lh_ampOp_arg2_1 =
//│ 		  (match _lh_ampOp_arg2_1 with
//│ 		    | `LH_P3(_lh_ampOp_LH_P3_0_1, _lh_ampOp_LH_P3_1_1, _lh_ampOp_LH_P3_2_1) -> 
//│ 		      (let rec y_1 = ((_lh_ampOp_arg1_1 * 2) + 1) in
//│ 		        (`LH_P3((_lh_ampOp_LH_P3_0_1 * _lh_ampOp_arg1_1), ((_lh_ampOp_LH_P3_1_1 + (_lh_ampOp_LH_P3_0_1 * 2)) * y_1), (_lh_ampOp_LH_P3_2_1 * y_1))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and concat_d0 lss_1 =
//│ 		  (match lss_1 with
//│ 		    | `LH_C(h_2_6, t_2_8) -> 
//│ 		      ((mappend_d0 h_2_6) (concat_d0 t_2_8))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and divmod_d0 _lh_divmod_arg1_1 _lh_divmod_arg2_1 =
//│ 		  (`LH_P2((_lh_divmod_arg1_1 / _lh_divmod_arg2_1), (_lh_divmod_arg1_1 mod _lh_divmod_arg2_1)))
//│ 		and drop_lz_d0 _lh_drop_lz_arg1_1 _lh_drop_lz_arg2_1 =
//│ 		  (if (_lh_drop_lz_arg1_1 > 0) then
//│ 		    (lazy (let rec _lh_matchIdent_5 = (Lazy.force _lh_drop_lz_arg2_1) in
//│ 		      (match _lh_matchIdent_5 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_N)
//│ 		        | `LH_C(_lh_drop_lz_LH_C_0_1, _lh_drop_lz_LH_C_1_1) -> 
//│ 		          (Lazy.force ((drop_lz_d0 (_lh_drop_lz_arg1_1 - 1)) _lh_drop_lz_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		  else
//│ 		    _lh_drop_lz_arg2_1)
//│ 		and hashOp_d0 _lh_hashOp_arg1_1 _lh_hashOp_arg2_1 =
//│ 		  (lazy (let rec k_3 = (_lh_hashOp_arg1_1 + 1) in
//│ 		    (let rec _lh_matchIdent_6 = ((ampOp_d0 k_3) _lh_hashOp_arg2_1) in
//│ 		      (match _lh_matchIdent_6 with
//│ 		        | `LH_P3(_lh_hashOp_LH_P3_0_1, _lh_hashOp_LH_P3_1_1, _lh_hashOp_LH_P3_2_1) -> 
//│ 		          (let rec _lh_matchIdent_7 = ((divmod_d0 ((_lh_hashOp_LH_P3_0_1 * 3) + _lh_hashOp_LH_P3_1_1)) _lh_hashOp_LH_P3_2_1) in
//│ 		            (match _lh_matchIdent_7 with
//│ 		              | `LH_P2(_lh_hashOp_LH_P2_0_1, _lh_hashOp_LH_P2_1_1) -> 
//│ 		                (if ((_lh_hashOp_LH_P3_0_1 > _lh_hashOp_LH_P3_1_1) || ((_lh_hashOp_LH_P2_1_1 + _lh_hashOp_LH_P3_0_1) >= _lh_hashOp_LH_P3_2_1)) then
//│ 		                  (Lazy.force ((hashOp_d0 k_3) (`LH_P3(_lh_hashOp_LH_P3_0_1, _lh_hashOp_LH_P3_1_1, _lh_hashOp_LH_P3_2_1))))
//│ 		                else
//│ 		                  (`LH_C((string_of_int _lh_hashOp_LH_P2_0_1), ((hashOp_d0 k_3) (`LH_P3((_lh_hashOp_LH_P3_0_1 * 10), ((_lh_hashOp_LH_P3_1_1 - (_lh_hashOp_LH_P2_0_1 * _lh_hashOp_LH_P3_2_1)) * 10), _lh_hashOp_LH_P3_2_1))))))
//│ 		              | _ -> 
//│ 		                (failwith "error")))
//│ 		        | _ -> 
//│ 		          (failwith "error")))))
//│ 		and mappend_d0 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(h_2_5, t_2_7) -> 
//│ 		      (`LH_C(h_2_5, ((mappend_d0 t_2_7) ys_1_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_3)
//│ 		and mappend_d1 xs_1_0 ys_1_0 =
//│ 		  (match xs_1_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (`LH_C(h_2_1, ((mappend_d1 t_2_3) ys_1_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_0)
//│ 		and mappend_d2 xs_1_1 ys_1_1 =
//│ 		  (match xs_1_1 with
//│ 		    | `LH_C(h_2_3, t_2_5) -> 
//│ 		      (`LH_C(h_2_3, ((mappend_d2 t_2_5) ys_1_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_1)
//│ 		and mappend_d3 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C(h_2_0, ((mappend_d3 t_2_2) ys_9)))
//│ 		    | `LH_N -> 
//│ 		      ys_9)
//│ 		and mappend_d4 xs_1_2 ys_1_2 =
//│ 		  (match xs_1_2 with
//│ 		    | `LH_C(h_2_4, t_2_6) -> 
//│ 		      (`LH_C(h_2_4, ((mappend_d4 t_2_6) ys_1_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_2)
//│ 		and mappend_d5 xs_1_4 ys_1_4 =
//│ 		  (match xs_1_4 with
//│ 		    | `LH_C(h_2_8, t_3_0) -> 
//│ 		      (`LH_C(h_2_8, ((mappend_d5 t_3_0) ys_1_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_4)
//│ 		and min_d0 _lh_min_arg1_1 _lh_min_arg2_1 =
//│ 		  (if (_lh_min_arg1_1 > _lh_min_arg2_1) then
//│ 		    _lh_min_arg2_1
//│ 		  else
//│ 		    _lh_min_arg1_1)
//│ 		and percOp_d0 _lh_percOp_arg1_1 _lh_percOp_arg2_1 _lh_percOp_arg3_1 =
//│ 		  (if (_lh_percOp_arg1_1 >= _lh_percOp_arg3_1) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (let rec k_2 = (_lh_percOp_arg1_1 + 10) in
//│ 		      (let rec j_1 = ((min_d0 _lh_percOp_arg3_1) k_2) in
//│ 		        (let rec _lh_matchIdent_4 = (if (k_2 > _lh_percOp_arg3_1) then
//│ 		          (`LH_P2(((mappend_d1 ((take_lz_d1 (_lh_percOp_arg3_1 mod 10)) _lh_percOp_arg2_1)) ((replicate_d0 (k_2 - _lh_percOp_arg3_1)) (`LH_C(' ', (`LH_N))))), (lazy (`LH_N))))
//│ 		        else
//│ 		          ((splitAt_lz_d0 10) _lh_percOp_arg2_1)) in
//│ 		          (match _lh_matchIdent_4 with
//│ 		            | `LH_P2(_lh_percOp_LH_P2_0_1, _lh_percOp_LH_P2_1_1) -> 
//│ 		              ((mappend_d2 ((mappend_d3 (concat_d0 _lh_percOp_LH_P2_0_1)) ((mappend_d4 (`LH_C('t', (`LH_C(':', (`LH_N)))))) ((mappend_d5 (string_of_int j_1)) (`LH_C('n', (`LH_N))))))) (((percOp_d0 j_1) _lh_percOp_LH_P2_1_1) _lh_percOp_arg3_1))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))))
//│ 		and pidgits_d0 _lh_pidgits_arg1_1 =
//│ 		  (((percOp_d0 0) ((hashOp_d0 0) (`LH_P3(1, 0, 1)))) _lh_pidgits_arg1_1)
//│ 		and replicate_d0 _lh_replicate_arg1_1 _lh_replicate_arg2_1 =
//│ 		  (if (_lh_replicate_arg1_1 > 0) then
//│ 		    (`LH_C(_lh_replicate_arg2_1, ((replicate_d0 (_lh_replicate_arg1_1 - 1)) _lh_replicate_arg2_1)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and splitAt_lz_d0 _lh_splitAt_lz_arg1_1 _lh_splitAt_lz_arg2_1 =
//│ 		  (`LH_P2(((take_lz_d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1), ((drop_lz_d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1)))
//│ 		and take_lz_d0 n_5 ls_2_0 =
//│ 		  (if (n_5 > 0) then
//│ 		    (match (Lazy.force ls_2_0) with
//│ 		      | `LH_C(h_2_7, t_2_9) -> 
//│ 		        (`LH_C(h_2_7, ((take_lz_d0 (n_5 - 1)) t_2_9)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take_lz_d1 n_4 ls_1_9 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match (Lazy.force ls_1_9) with
//│ 		      | `LH_C(h_2_2, t_2_4) -> 
//│ 		        (`LH_C(h_2_2, ((take_lz_d1 (n_4 - 1)) t_2_4)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testPiDigits_nofib_d0 _lh_testPiDigits_nofib_arg1_1 =
//│ 		  (pidgits_d0 _lh_testPiDigits_nofib_arg1_1);;
//│ 		(testPiDigits_nofib_d0 5000)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPiDigits_nofib₀^1406]
//│ 	[testPiDigits_nofib₀^1406 · pidgits₀^1365]
//│ 		[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171] (hopeless to continue)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · ampOp₀^1236] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · divmod₀^1242] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · hashOp₀^1274] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171 · hashOp₀^1286] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · hashOp₀^1171] (using original def)
//│ 		[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168]
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · concat₀^1358] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · mappend₀^1355] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · mappend₀^1355 · mappend₀^1344] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · concat₀^997 · mappend₀^1355] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₁^961] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₁^961 · mappend₁^1133] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₁^961] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₂^995]
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₂^995 · mappend₂^1198] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₂^995] (only one)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₃^996] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₃^996 · mappend₃^1121] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₃^996] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₄^1001] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₄^1001 · mappend₄^1210] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₄^1001] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₅^1008] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₅^1008 · mappend₅^1396] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · mappend₅^1008] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · min₀^951] (hopeless to continue)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · concat₀^1358] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · mappend₀^1355] (using original def)
//│ 						[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · mappend₀^1355 · mappend₀^1344] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · concat₀^997 · mappend₀^1355] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₁^961] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₁^961 · mappend₁^1133] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₁^961] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₂^995] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₂^995 · mappend₂^1198] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₂^995] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₃^996] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₃^996 · mappend₃^1121] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₃^996] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₄^1001] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₄^1001 · mappend₄^1210] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₄^1001] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₅^1008] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₅^1008 · mappend₅^1396] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · mappend₅^1008] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · min₀^951] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · percOp₀^1020] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · replicate₀^972] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · replicate₀^972 · replicate₀^1328] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · replicate₀^972] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 						[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · drop_lz₀^1188 · drop_lz₀^1049] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 						[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · take_lz₀^1183 · take_lz₀^1378] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · take_lz₁^962] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · take_lz₁^962 · take_lz₁^1152] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · percOp₀^1020 · take_lz₁^962] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · replicate₀^972] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · replicate₀^972 · replicate₀^1328] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · replicate₀^972] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · drop_lz₀^1188 · drop_lz₀^1049] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · drop_lz₀^1188] (using original def)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 					[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · take_lz₀^1183 · take_lz₀^1378] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · splitAt_lz₀^988 · take_lz₀^1183] (using original def)
//│ 			[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · take_lz₁^962] (hopeless to continue)
//│ 				[testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · take_lz₁^962 · take_lz₁^1152] ---> [testPiDigits_nofib₀^1406 · pidgits₀^1365 · percOp₀^1168 · take_lz₁^962] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPiDigits_nofib₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀(_lh_testPiDigits_nofib_arg1¹) = 
//│ 	pidgits₀₀(_lh_testPiDigits_nofib_arg1¹)
//│ 	where
//│ 	def pidgits₀₀(_lh_pidgits_arg1¹) = 
//│ 		percOp₀₀(0, hashOp₀₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ 		where
//│ 		def hashOp₀₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = 
//│ 			lazy⁰(
//│ 				let k⁴ = (_lh_hashOp_arg1¹ + 1)
//│ 				in let _lh_matchIdent⁷ = ampOp₀₀(k⁴, _lh_hashOp_arg2¹)
//│ 				in case _lh_matchIdent⁷ of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 						let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 						in case _lh_matchIdent⁸ of {
//│ 							LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]
//│ 							| _  => error⁰}
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp₀₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = 
//│ 				case _lh_ampOp_arg2¹ of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 					| _  => error⁰}
//│ 			def divmod₀₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = 
//│ 				[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ 		def percOp₀₀(_lh_percOp_arg1², _lh_percOp_arg2², _lh_percOp_arg3²) = 
//│ 			if (_lh_percOp_arg1² >= _lh_percOp_arg3²) then [LH_N] else 
//│ 				let k³ = (_lh_percOp_arg1² + 10)
//│ 				in let j² = min₀₀(_lh_percOp_arg3², k³)
//│ 				in let _lh_matchIdent⁶ = if (k³ > _lh_percOp_arg3²) then [LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz₀₁(10, _lh_percOp_arg2²)
//│ 				in case _lh_matchIdent⁶ of {
//│ 					LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²))
//│ 					| _  => error⁰}
//│ 			where
//│ 			def concat₀₀(lss¹) = 
//│ 				case lss¹ of {
//│ 					LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹))
//│ 					| LH_N  => [LH_N]}
//│ 				where
//│ 				def mappend₀₀(xs⁹, ys⁹) = 
//│ 					case xs⁹ of {
//│ 						LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)]
//│ 						| LH_N  => ys⁹}
//│ 			def mappend₁₀(xs¹⁶, ys¹⁶) = 
//│ 				case xs¹⁶ of {
//│ 					LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]
//│ 					| LH_N  => ys¹⁶}
//│ 			def mappend₂₀(xs⁶, ys⁶) = 
//│ 				case xs⁶ of {
//│ 					LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)]
//│ 					| LH_N  => ys⁶}
//│ 			def mappend₃₀(xs⁷, ys⁷) = 
//│ 				case xs⁷ of {
//│ 					LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]
//│ 					| LH_N  => ys⁷}
//│ 			def mappend₄₀(xs¹⁵, ys¹⁵) = 
//│ 				case xs¹⁵ of {
//│ 					LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)]
//│ 					| LH_N  => ys¹⁵}
//│ 			def mappend₅₀(xs¹⁴, ys¹⁴) = 
//│ 				case xs¹⁴ of {
//│ 					LH_C h²¹ t²¹ => [LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]
//│ 					| LH_N  => ys¹⁴}
//│ 			def min₀₀(_lh_min_arg1¹, _lh_min_arg2¹) = 
//│ 				if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ 			def percOp₀₁(_lh_percOp_arg1¹, _lh_percOp_arg2¹, _lh_percOp_arg3¹) = 
//│ 				if (_lh_percOp_arg1¹ >= _lh_percOp_arg3¹) then [LH_N] else 
//│ 					let k² = (_lh_percOp_arg1¹ + 10)
//│ 					in let j¹ = min₀₁(_lh_percOp_arg3¹, k²)
//│ 					in let _lh_matchIdent⁵ = if (k² > _lh_percOp_arg3¹) then [LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz₀₀(10, _lh_percOp_arg2¹)
//│ 					in case _lh_matchIdent⁵ of {
//│ 						LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹))
//│ 						| _  => error⁰}
//│ 				where
//│ 				def concat₀₁(lss²) = 
//│ 					case lss² of {
//│ 						LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴))
//│ 						| LH_N  => [LH_N]}
//│ 					where
//│ 					def mappend₀₁(xs¹¹, ys¹¹) = 
//│ 						case xs¹¹ of {
//│ 							LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]
//│ 							| LH_N  => ys¹¹}
//│ 				def mappend₁₁(xs¹⁷, ys¹⁷) = 
//│ 					case xs¹⁷ of {
//│ 						LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]
//│ 						| LH_N  => ys¹⁷}
//│ 				def mappend₂₁(xs¹², ys¹²) = 
//│ 					case xs¹² of {
//│ 						LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)]
//│ 						| LH_N  => ys¹²}
//│ 				def mappend₃₁(xs⁸, ys⁸) = 
//│ 					case xs⁸ of {
//│ 						LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]
//│ 						| LH_N  => ys⁸}
//│ 				def mappend₄₁(xs¹³, ys¹³) = 
//│ 					case xs¹³ of {
//│ 						LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]
//│ 						| LH_N  => ys¹³}
//│ 				def mappend₅₁(xs¹⁰, ys¹⁰) = 
//│ 					case xs¹⁰ of {
//│ 						LH_C h¹³ t¹³ => [LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]
//│ 						| LH_N  => ys¹⁰}
//│ 				def min₀₁(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def replicate₀₀(_lh_replicate_arg1¹, _lh_replicate_arg2¹) = 
//│ 					if (_lh_replicate_arg1¹ > 0) then [LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)] else [LH_N]
//│ 				def splitAt_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = 
//│ 					[LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ 					where
//│ 					def drop_lz₀₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 						if (_lh_drop_lz_arg1² > 0) then lazy⁰(
//│ 							let _lh_matchIdent⁹ = force⁰(_lh_drop_lz_arg2²)
//│ 							in case _lh_matchIdent⁹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2²
//│ 					def take_lz₀₀(n⁵, ls⁵) = 
//│ 						if (n⁵ > 0) then case force⁰(ls⁵) of {
//│ 							LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]
//│ 							| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lz₁₀(n⁴, ls⁴) = 
//│ 					if (n⁴ > 0) then case force⁰(ls⁴) of {
//│ 						LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 			def replicate₀₁(_lh_replicate_arg1², _lh_replicate_arg2²) = 
//│ 				if (_lh_replicate_arg1² > 0) then [LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)] else [LH_N]
//│ 			def splitAt_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 				[LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]
//│ 				where
//│ 				def drop_lz₀₁(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = 
//│ 					if (_lh_drop_lz_arg1¹ > 0) then lazy⁰(
//│ 						let _lh_matchIdent⁴ = force⁰(_lh_drop_lz_arg2¹)
//│ 						in case _lh_matchIdent⁴ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2¹
//│ 				def take_lz₀₁(n², ls²) = 
//│ 					if (n² > 0) then case force⁰(ls²) of {
//│ 						LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 			def take_lz₁₁(n³, ls³) = 
//│ 				if (n³ > 0) then case force⁰(ls³) of {
//│ 					LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]
//│ 					| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 504 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_N]: 564 --->
//│ 	case xs¹¹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)] | LH_N  => ys¹¹}: 868
//│ [LH_C ' ' [LH_N]]: 565 --->
//│ 	case xs¹¹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)] | LH_N  => ys¹¹}: 868
//│ [LH_N]: 569 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_N]: 588 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C ':' [LH_N]]: 589 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 590 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_N]: 598 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C 'n' [LH_N]]: 599 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_N]: 673 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)] | LH_N  => ys⁹}: 794
//│ [LH_C ' ' [LH_N]]: 674 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)] | LH_N  => ys⁹}: 794
//│ [LH_N]: 678 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_N]: 697 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C ':' [LH_N]]: 698 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 699 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_N]: 707 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C 'n' [LH_N]]: 708 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 781 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 828 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 830 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 853 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 855 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 941 --->
//│ 	case _lh_matchIdent⁷ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 1069
//│ [LH_N]: 955 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 977 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 979 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 1033 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 1061 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 517
//│ 	case force⁰(ls²) of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)] | LH_N  => [LH_N]}: 829
//│ 	case force⁰(ls³) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)] | LH_N  => [LH_N]}: 854
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085 --->
//│ 	case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066
//│ [LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 1104 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_P3 1 0 1]: 1117 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1154 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1156 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_N]: 1184 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1221 --->
//│ 	case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978
//│ 	case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234
//│ ------------------
//│ case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491 --->
//│ 	[LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628
//│ 	[LH_N]: 707
//│ 	[LH_C 'n' [LH_N]]: 708
//│ 	[LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130
//│ 	[LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167
//│ case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 517 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613 --->
//│ 	[LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571
//│ 	[LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740
//│ case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630 --->
//│ 	[LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792
//│ 	[LH_N]: 955
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722 --->
//│ 	[LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680
//│ 	[LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905
//│ case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762 --->
//│ 	[LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866
//│ 	[LH_N]: 1184
//│ case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend₀₀(t¹², ys⁹)] | LH_N  => ys⁹}: 794 --->
//│ 	NoProd
//│ 	[LH_N]: 673
//│ 	[LH_C ' ' [LH_N]]: 674
//│ case force⁰(ls²) of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)] | LH_N  => [LH_N]}: 829 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ case force⁰(ls³) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)] | LH_N  => [LH_N]}: 854 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ case xs¹¹ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)] | LH_N  => ys¹¹}: 868 --->
//│ 	NoProd
//│ 	[LH_N]: 564
//│ 	[LH_C ' ' [LH_N]]: 565
//│ case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880 --->
//│ 	[LH_N]: 598
//│ 	[LH_C 'n' [LH_N]]: 599
//│ 	[LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760
//│ 	[LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804
//│ 	[LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890
//│ case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892 --->
//│ 	[LH_N]: 588
//│ 	[LH_C ':' [LH_N]]: 589
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 590
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944 --->
//│ 	[LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 1033
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 1061
//│ 	[LH_P3 1 0 1]: 1117
//│ case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956 --->
//│ 	[LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827
//│ 	[LH_N]: 828
//│ 	[LH_N]: 830
//│ 	[LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103
//│ 	[LH_N]: 1104
//│ 	[LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194
//│ case force⁰(ls⁴) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)] | LH_N  => [LH_N]}: 978 --->
//│ 	[LH_N]: 504
//│ 	[LH_N]: 569
//│ 	[LH_N]: 678
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ 	[LH_N]: 1221
//│ case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085
//│ case _lh_matchIdent⁷ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 1069 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 941
//│ case force⁰(ls⁵) of {LH_C h²² t²² => [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)] | LH_N  => [LH_N]}: 1155 --->
//│ 	[LH_N]: 504
//│ 	[LH_N]: 569
//│ 	[LH_N]: 678
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ 	[LH_N]: 1221
//│ case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169 --->
//│ 	[LH_N]: 697
//│ 	[LH_C ':' [LH_N]]: 698
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 699
//│ case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185 --->
//│ 	[LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780
//│ 	[LH_N]: 781
//│ 	[LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153
//│ 	[LH_N]: 1154
//│ 	[LH_N]: 1156
//│ 	[LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206
//│ case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196 --->
//│ 	[LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852
//│ 	[LH_N]: 853
//│ 	[LH_N]: 855
//│ case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208 --->
//│ 	[LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976
//│ 	[LH_N]: 977
//│ 	[LH_N]: 979
//│ case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1234 --->
//│ 	[LH_N]: 504
//│ 	[LH_N]: 569
//│ 	[LH_N]: 678
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 1063
//│ 	[LH_N]: 1221
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_N]: 588 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C ':' [LH_N]]: 589 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 590 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892
//│ [LH_N]: 598 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C 'n' [LH_N]]: 599 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_N]: 697 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C ':' [LH_N]]: 698 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 699 --->
//│ 	case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169
//│ [LH_N]: 707 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C 'n' [LH_N]]: 708 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613
//│ [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 781 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 828 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 830 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 853 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_N]: 855 --->
//│ 	case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196
//│ [LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880
//│ [LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 941 --->
//│ 	case _lh_matchIdent⁷ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 1069
//│ [LH_N]: 955 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630
//│ [LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 977 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_N]: 979 --->
//│ 	case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208
//│ [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 1033 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 1061 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085 --->
//│ 	case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066
//│ [LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_N]: 1104 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_P3 1 0 1]: 1117 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944
//│ [LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1154 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_N]: 1156 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ [LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491
//│ [LH_N]: 1184 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762
//│ [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194 --->
//│ 	case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956
//│ [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206 --->
//│ 	case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185
//│ ------------------
//│ case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend₂₀(t⁹, ys⁶)] | LH_N  => ys⁶}: 491 --->
//│ 	[LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)]: 628
//│ 	[LH_N]: 707
//│ 	[LH_C 'n' [LH_N]]: 708
//│ 	[LH_C h²¹ mappend₅₀(t²¹, ys¹⁴)]: 1130
//│ 	[LH_C h²³ mappend₄₀(t²³, ys¹⁵)]: 1167
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0¹), mappend₄₁([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp₀₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 613 --->
//│ 	[LH_P2 mappend₁₁(take_lz₁₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate₀₀((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 571
//│ 	[LH_P2 take_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz₀₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 740
//│ case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend₃₀(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 630 --->
//│ 	[LH_C h¹² mappend₀₀(t¹², ys⁹)]: 792
//│ 	[LH_N]: 955
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0²), mappend₄₀([LH_C 't' [LH_C ':' [LH_N]]], mappend₅₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp₀₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 722 --->
//│ 	[LH_P2 mappend₁₀(take_lz₁₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate₀₁((k³ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 680
//│ 	[LH_P2 take_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz₀₁(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 905
//│ case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)] | LH_N  => ys⁸}: 762 --->
//│ 	[LH_C h¹⁶ mappend₀₁(t¹⁶, ys¹¹)]: 866
//│ 	[LH_N]: 1184
//│ case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend₂₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 880 --->
//│ 	[LH_N]: 598
//│ 	[LH_C 'n' [LH_N]]: 599
//│ 	[LH_C h¹¹ mappend₃₁(t¹¹, ys⁸)]: 760
//│ 	[LH_C h¹³ mappend₅₁(t¹³, ys¹⁰)]: 804
//│ 	[LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)]: 890
//│ case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend₄₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 892 --->
//│ 	[LH_N]: 588
//│ 	[LH_C ':' [LH_N]]: 589
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 590
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 944 --->
//│ 	[LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 1033
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 1061
//│ 	[LH_P3 1 0 1]: 1117
//│ case lss¹ of {LH_C h¹⁹ t¹⁹ => mappend₀₀(h¹⁹, concat₀₀(t¹⁹)) | LH_N  => [LH_N]}: 956 --->
//│ 	[LH_C h¹⁴ take_lz₀₁((n² - 1), t¹⁴)]: 827
//│ 	[LH_N]: 828
//│ 	[LH_N]: 830
//│ 	[LH_C _lh_replicate_arg2² replicate₀₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1103
//│ 	[LH_N]: 1104
//│ 	[LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)]: 1194
//│ case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 1066 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 1085
//│ case _lh_matchIdent⁷ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁸ = divmod₀₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁸ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp₀₀(k⁴, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀(k⁴, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 1069 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 941
//│ case xs¹⁵ of {LH_C h²³ t²³ => [LH_C h²³ mappend₄₀(t²³, ys¹⁵)] | LH_N  => ys¹⁵}: 1169 --->
//│ 	[LH_N]: 697
//│ 	[LH_C ':' [LH_N]]: 698
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 699
//│ case lss² of {LH_C h²⁴ t²⁴ => mappend₀₁(h²⁴, concat₀₁(t²⁴)) | LH_N  => [LH_N]}: 1185 --->
//│ 	[LH_C _lh_replicate_arg2¹ replicate₀₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 780
//│ 	[LH_N]: 781
//│ 	[LH_C h²² take_lz₀₀((n⁵ - 1), t²²)]: 1153
//│ 	[LH_N]: 1154
//│ 	[LH_N]: 1156
//│ 	[LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)]: 1206
//│ case xs¹⁶ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend₁₀(t²⁵, ys¹⁶)] | LH_N  => ys¹⁶}: 1196 --->
//│ 	[LH_C h¹⁵ take_lz₁₁((n³ - 1), t¹⁵)]: 852
//│ 	[LH_N]: 853
//│ 	[LH_N]: 855
//│ case xs¹⁷ of {LH_C h²⁶ t²⁶ => [LH_C h²⁶ mappend₁₁(t²⁶, ys¹⁷)] | LH_N  => ys¹⁷}: 1208 --->
//│ 	[LH_C h²⁰ take_lz₁₀((n⁴ - 1), t²⁰)]: 976
//│ 	[LH_N]: 977
//│ 	[LH_N]: 979
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPiDigits_nofib₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀(_lh_testPiDigits_nofib_arg1²) = 
//│ 	pidgits₀₀(_lh_testPiDigits_nofib_arg1²)
//│ 	where
//│ 	def pidgits₀₀(_lh_pidgits_arg1²) = 
//│ 		percOp₀₀(0, hashOp₀₀(0, 
//│ 			let _lh_ampOp_LH_P3_0⁴ = 1
//│ 			in let _lh_ampOp_LH_P3_1⁴ = 0
//│ 			in let _lh_ampOp_LH_P3_2⁴ = 1
//│ 			in (fun _lh_ampOp_arg1⁵ -> 
//│ 				let y⁴ = ((_lh_ampOp_arg1⁵ * 2) + 1)
//│ 				in let _lh_hashOp_LH_P3_0⁵ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁵)
//│ 				in let _lh_hashOp_LH_P3_1⁵ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ 				in let _lh_hashOp_LH_P3_2⁵ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ 				in (fun k¹⁰ -> 
//│ 					let _lh_matchIdent¹⁶ = divmod₀₀(((_lh_hashOp_LH_P3_0⁵ * 3) + _lh_hashOp_LH_P3_1⁵), _lh_hashOp_LH_P3_2⁵)
//│ 					in _lh_matchIdent¹⁶(_lh_hashOp_LH_P3_0⁵, _lh_hashOp_LH_P3_1⁵, _lh_hashOp_LH_P3_2⁵, k¹⁰)))), _lh_pidgits_arg1²)
//│ 		where
//│ 		def hashOp₀₀(_lh_hashOp_arg1², _lh_hashOp_arg2²) = 
//│ 			lazy⁰(
//│ 				let k¹¹ = (_lh_hashOp_arg1² + 1)
//│ 				in let _lh_matchIdent¹⁷ = ampOp₀₀(k¹¹, _lh_hashOp_arg2²)
//│ 				in _lh_matchIdent¹⁷(k¹¹))
//│ 			where
//│ 			def ampOp₀₀(_lh_ampOp_arg1², _lh_ampOp_arg2²) = 
//│ 				_lh_ampOp_arg2²(_lh_ampOp_arg1²)
//│ 			def divmod₀₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 				let _lh_hashOp_LH_P2_0² = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 				in let _lh_hashOp_LH_P2_1² = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 				in (fun _lh_hashOp_LH_P3_0² -> (fun _lh_hashOp_LH_P3_1² -> (fun _lh_hashOp_LH_P3_2² -> (fun k⁶ -> if ((_lh_hashOp_LH_P3_0² > _lh_hashOp_LH_P3_1²) || ((_lh_hashOp_LH_P2_1² + _lh_hashOp_LH_P3_0²) >= _lh_hashOp_LH_P3_2²)) then force⁰(hashOp₀₀(k⁶, 
//│ 					let _lh_ampOp_LH_P3_0² = _lh_hashOp_LH_P3_0²
//│ 					in let _lh_ampOp_LH_P3_1² = _lh_hashOp_LH_P3_1²
//│ 					in let _lh_ampOp_LH_P3_2² = _lh_hashOp_LH_P3_2²
//│ 					in (fun _lh_ampOp_arg1³ -> 
//│ 						let y² = ((_lh_ampOp_arg1³ * 2) + 1)
//│ 						in let _lh_hashOp_LH_P3_0³ = (_lh_ampOp_LH_P3_0² * _lh_ampOp_arg1³)
//│ 						in let _lh_hashOp_LH_P3_1³ = ((_lh_ampOp_LH_P3_1² + (_lh_ampOp_LH_P3_0² * 2)) * y²)
//│ 						in let _lh_hashOp_LH_P3_2³ = (_lh_ampOp_LH_P3_2² * y²)
//│ 						in (fun k⁷ -> 
//│ 							let _lh_matchIdent¹³ = divmod₀₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ 							in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁷))))) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0²) hashOp₀₀(k⁶, 
//│ 					let _lh_ampOp_LH_P3_0³ = (_lh_hashOp_LH_P3_0² * 10)
//│ 					in let _lh_ampOp_LH_P3_1³ = ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0² * _lh_hashOp_LH_P3_2²)) * 10)
//│ 					in let _lh_ampOp_LH_P3_2³ = _lh_hashOp_LH_P3_2²
//│ 					in (fun _lh_ampOp_arg1⁴ -> 
//│ 						let y³ = ((_lh_ampOp_arg1⁴ * 2) + 1)
//│ 						in let _lh_hashOp_LH_P3_0⁴ = (_lh_ampOp_LH_P3_0³ * _lh_ampOp_arg1⁴)
//│ 						in let _lh_hashOp_LH_P3_1⁴ = ((_lh_ampOp_LH_P3_1³ + (_lh_ampOp_LH_P3_0³ * 2)) * y³)
//│ 						in let _lh_hashOp_LH_P3_2⁴ = (_lh_ampOp_LH_P3_2³ * y³)
//│ 						in (fun k⁸ -> 
//│ 							let _lh_matchIdent¹⁴ = divmod₀₀(((_lh_hashOp_LH_P3_0⁴ * 3) + _lh_hashOp_LH_P3_1⁴), _lh_hashOp_LH_P3_2⁴)
//│ 							in _lh_matchIdent¹⁴(_lh_hashOp_LH_P3_0⁴, _lh_hashOp_LH_P3_1⁴, _lh_hashOp_LH_P3_2⁴, k⁸))))]))))
//│ 		def percOp₀₀(_lh_percOp_arg1³, _lh_percOp_arg2³, _lh_percOp_arg3³) = 
//│ 			if (_lh_percOp_arg1³ >= _lh_percOp_arg3³) then [LH_N] else 
//│ 				let k⁵ = (_lh_percOp_arg1³ + 10)
//│ 				in let j³ = min₀₀(_lh_percOp_arg3³, k⁵)
//│ 				in let _lh_matchIdent¹⁰ = if (k⁵ > _lh_percOp_arg3³) then 
//│ 					let _lh_percOp_LH_P2_0³ = mappend₁₀(take_lz₁₁((_lh_percOp_arg3³ % 10), _lh_percOp_arg2³), replicate₀₁((k⁵ - _lh_percOp_arg3³), [LH_C ' ' [LH_N]]))
//│ 					in let _lh_percOp_LH_P2_1³ = lazy⁰([LH_N])
//│ 					in (fun j⁴ -> (fun _lh_percOp_arg3⁴ -> mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0³), mappend₄₀(
//│ 						let h²⁸ = 't'
//│ 						in let t²⁸ = 	
//│ 							let h³⁰ = ':'
//│ 							in let t³⁰ = (fun ys²⁵ -> ys²⁵)
//│ 							in (fun ys²³ -> 
//│ 								let h³¹ = h³⁰
//│ 								in let t³¹ = mappend₄₀(t³⁰, ys²³)
//│ 								in (fun ys²⁴ -> [LH_C h³¹ mappend₂₀(t³¹, ys²⁴)]))
//│ 						in (fun ys²¹ -> 
//│ 							let h²⁹ = h²⁸
//│ 							in let t²⁹ = mappend₄₀(t²⁸, ys²¹)
//│ 							in (fun ys²² -> [LH_C h²⁹ mappend₂₀(t²⁹, ys²²)])), mappend₅₀(string_of_int⁰(j⁴), 
//│ 						let h³² = 'n'
//│ 						in let t³² = (fun ys²⁷ -> ys²⁷)
//│ 						in (fun ys²⁶ -> [LH_C h³² mappend₂₀(t³², ys²⁶)])))), percOp₀₁(j⁴, _lh_percOp_LH_P2_1³, _lh_percOp_arg3⁴)))) else splitAt_lz₀₁(10, _lh_percOp_arg2³)
//│ 				in _lh_matchIdent¹⁰(j³, _lh_percOp_arg3³)
//│ 			where
//│ 			def concat₀₀(lss³) = 
//│ 				lss³
//│ 				where
//│ 				def mappend₀₀(xs²³, ys⁴⁴) = 
//│ 					case xs²³ of {
//│ 						LH_C h¹² t¹² => 
//│ 							let h⁴² = h¹²
//│ 							in let t⁴² = mappend₀₀(t¹², ys⁴⁴)
//│ 							in (fun ys⁴⁵ -> 
//│ 								let h⁴³ = h⁴²
//│ 								in let t⁴³ = mappend₃₀(t⁴², ys⁴⁵)
//│ 								in (fun ys⁴⁶ -> [LH_C h⁴³ mappend₂₀(t⁴³, ys⁴⁶)]))
//│ 						| LH_N  => ys⁴⁴}
//│ 			def mappend₁₀(xs²⁶, ys⁶³) = 
//│ 				xs²⁶(ys⁶³)
//│ 			def mappend₂₀(xs²⁴, ys⁵⁰) = 
//│ 				xs²⁴(ys⁵⁰)
//│ 			def mappend₃₀(xs²¹, ys³⁶) = 
//│ 				xs²¹(ys³⁶)
//│ 			def mappend₄₀(xs²⁰, ys³⁵) = 
//│ 				xs²⁰(ys³⁵)
//│ 			def mappend₅₀(xs²², ys⁴²) = 
//│ 				case xs²² of {
//│ 					LH_C h²¹ t²¹ => 
//│ 						let h⁴¹ = h²¹
//│ 						in let t⁴¹ = mappend₅₀(t²¹, ys⁴²)
//│ 						in (fun ys⁴³ -> [LH_C h⁴¹ mappend₂₀(t⁴¹, ys⁴³)])
//│ 					| LH_N  => ys⁴²}
//│ 			def min₀₀(_lh_min_arg1⁴, _lh_min_arg2⁴) = 
//│ 				if (_lh_min_arg1⁴ > _lh_min_arg2⁴) then _lh_min_arg2⁴ else _lh_min_arg1⁴
//│ 			def percOp₀₁(_lh_percOp_arg1⁴, _lh_percOp_arg2⁴, _lh_percOp_arg3⁷) = 
//│ 				if (_lh_percOp_arg1⁴ >= _lh_percOp_arg3⁷) then [LH_N] else 
//│ 					let k⁹ = (_lh_percOp_arg1⁴ + 10)
//│ 					in let j⁷ = min₀₁(_lh_percOp_arg3⁷, k⁹)
//│ 					in let _lh_matchIdent¹⁵ = if (k⁹ > _lh_percOp_arg3⁷) then 
//│ 						let _lh_percOp_LH_P2_0⁶ = mappend₁₁(take_lz₁₀((_lh_percOp_arg3⁷ % 10), _lh_percOp_arg2⁴), replicate₀₀((k⁹ - _lh_percOp_arg3⁷), [LH_C ' ' [LH_N]]))
//│ 						in let _lh_percOp_LH_P2_1⁶ = lazy⁰([LH_N])
//│ 						in (fun j⁸ -> (fun _lh_percOp_arg3⁸ -> mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0⁶), mappend₄₁(
//│ 							let h⁵⁶ = 't'
//│ 							in let t⁵⁶ = 	
//│ 								let h⁵⁸ = ':'
//│ 								in let t⁵⁸ = (fun ys⁷¹ -> ys⁷¹)
//│ 								in (fun ys⁶⁹ -> 
//│ 									let h⁵⁹ = h⁵⁸
//│ 									in let t⁵⁹ = mappend₄₁(t⁵⁸, ys⁶⁹)
//│ 									in (fun ys⁷⁰ -> [LH_C h⁵⁹ mappend₂₁(t⁵⁹, ys⁷⁰)]))
//│ 							in (fun ys⁶⁷ -> 
//│ 								let h⁵⁷ = h⁵⁶
//│ 								in let t⁵⁷ = mappend₄₁(t⁵⁶, ys⁶⁷)
//│ 								in (fun ys⁶⁸ -> [LH_C h⁵⁷ mappend₂₁(t⁵⁷, ys⁶⁸)])), mappend₅₁(string_of_int⁰(j⁸), 
//│ 							let h⁶⁰ = 'n'
//│ 							in let t⁶⁰ = (fun ys⁷³ -> ys⁷³)
//│ 							in (fun ys⁷² -> [LH_C h⁶⁰ mappend₂₁(t⁶⁰, ys⁷²)])))), percOp₀₁(j⁸, _lh_percOp_LH_P2_1⁶, _lh_percOp_arg3⁸)))) else splitAt_lz₀₀(10, _lh_percOp_arg2⁴)
//│ 					in _lh_matchIdent¹⁵(j⁷, _lh_percOp_arg3⁷)
//│ 				where
//│ 				def concat₀₁(lss⁴) = 
//│ 					lss⁴
//│ 					where
//│ 					def mappend₀₁(xs²⁵, ys⁵⁸) = 
//│ 						case xs²⁵ of {
//│ 							LH_C h¹⁶ t¹⁶ => 
//│ 								let h⁵¹ = h¹⁶
//│ 								in let t⁵¹ = mappend₀₁(t¹⁶, ys⁵⁸)
//│ 								in (fun ys⁵⁹ -> 
//│ 									let h⁵² = h⁵¹
//│ 									in let t⁵² = mappend₃₁(t⁵¹, ys⁵⁹)
//│ 									in (fun ys⁶⁰ -> [LH_C h⁵² mappend₂₁(t⁵², ys⁶⁰)]))
//│ 							| LH_N  => ys⁵⁸}
//│ 				def mappend₁₁(xs²⁸, ys⁷⁴) = 
//│ 					xs²⁸(ys⁷⁴)
//│ 				def mappend₂₁(xs¹⁸, ys¹⁸) = 
//│ 					xs¹⁸(ys¹⁸)
//│ 				def mappend₃₁(xs²⁷, ys⁶⁴) = 
//│ 					xs²⁷(ys⁶⁴)
//│ 				def mappend₄₁(xs²⁹, ys⁷⁵) = 
//│ 					xs²⁹(ys⁷⁵)
//│ 				def mappend₅₁(xs¹⁹, ys¹⁹) = 
//│ 					case xs¹⁹ of {
//│ 						LH_C h¹³ t¹³ => 
//│ 							let h²⁷ = h¹³
//│ 							in let t²⁷ = mappend₅₁(t¹³, ys¹⁹)
//│ 							in (fun ys²⁰ -> [LH_C h²⁷ mappend₂₁(t²⁷, ys²⁰)])
//│ 						| LH_N  => ys¹⁹}
//│ 				def min₀₁(_lh_min_arg1³, _lh_min_arg2³) = 
//│ 					if (_lh_min_arg1³ > _lh_min_arg2³) then _lh_min_arg2³ else _lh_min_arg1³
//│ 				def replicate₀₀(_lh_replicate_arg1³, _lh_replicate_arg2³) = 
//│ 					if (_lh_replicate_arg1³ > 0) then 
//│ 						let h⁵³ = _lh_replicate_arg2³
//│ 						in let t⁵³ = replicate₀₀((_lh_replicate_arg1³ - 1), _lh_replicate_arg2³)
//│ 						in mappend₀₁(h⁵³, concat₀₁(t⁵³)) else (fun ys⁶¹ -> ys⁶¹)
//│ 				def splitAt_lz₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³) = 
//│ 					let _lh_percOp_LH_P2_0⁴ = take_lz₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in let _lh_percOp_LH_P2_1⁴ = drop_lz₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in (fun j⁵ -> (fun _lh_percOp_arg3⁵ -> mappend₂₁(mappend₃₁(concat₀₁(_lh_percOp_LH_P2_0⁴), mappend₄₁(
//│ 						let h³³ = 't'
//│ 						in let t³³ = 	
//│ 							let h³⁵ = ':'
//│ 							in let t³⁵ = (fun ys³² -> ys³²)
//│ 							in (fun ys³⁰ -> 
//│ 								let h³⁶ = h³⁵
//│ 								in let t³⁶ = mappend₄₁(t³⁵, ys³⁰)
//│ 								in (fun ys³¹ -> [LH_C h³⁶ mappend₂₁(t³⁶, ys³¹)]))
//│ 						in (fun ys²⁸ -> 
//│ 							let h³⁴ = h³³
//│ 							in let t³⁴ = mappend₄₁(t³³, ys²⁸)
//│ 							in (fun ys²⁹ -> [LH_C h³⁴ mappend₂₁(t³⁴, ys²⁹)])), mappend₅₁(string_of_int⁰(j⁵), 
//│ 						let h³⁷ = 'n'
//│ 						in let t³⁷ = (fun ys³⁴ -> ys³⁴)
//│ 						in (fun ys³³ -> [LH_C h³⁷ mappend₂₁(t³⁷, ys³³)])))), percOp₀₁(j⁵, _lh_percOp_LH_P2_1⁴, _lh_percOp_arg3⁵))))
//│ 					where
//│ 					def drop_lz₀₀(_lh_drop_lz_arg1⁴, _lh_drop_lz_arg2⁴) = 
//│ 						if (_lh_drop_lz_arg1⁴ > 0) then lazy⁰(
//│ 							let _lh_matchIdent¹² = force⁰(_lh_drop_lz_arg2⁴)
//│ 							in case _lh_matchIdent¹² of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2⁴
//│ 					def take_lz₀₀(n⁹, ls⁹) = 
//│ 						if (n⁹ > 0) then case force⁰(ls⁹) of {
//│ 							LH_C h²² t²² => 
//│ 								let h⁵⁵ = h²²
//│ 								in let t⁵⁵ = take_lz₀₀((n⁹ - 1), t²²)
//│ 								in mappend₀₁(h⁵⁵, concat₀₁(t⁵⁵))
//│ 							| LH_N  => (fun ys⁶⁵ -> ys⁶⁵)} else (fun ys⁶⁶ -> ys⁶⁶)
//│ 				def take_lz₁₀(n⁷, ls⁷) = 
//│ 					if (n⁷ > 0) then case force⁰(ls⁷) of {
//│ 						LH_C h²⁰ t²⁰ => 
//│ 							let h³⁹ = h²⁰
//│ 							in let t³⁹ = take_lz₁₀((n⁷ - 1), t²⁰)
//│ 							in (fun ys³⁹ -> 
//│ 								let h⁴⁰ = h³⁹
//│ 								in let t⁴⁰ = mappend₁₁(t³⁹, ys³⁹)
//│ 								in mappend₀₁(h⁴⁰, concat₀₁(t⁴⁰)))
//│ 						| LH_N  => (fun ys⁴⁰ -> ys⁴⁰)} else (fun ys⁴¹ -> ys⁴¹)
//│ 			def replicate₀₁(_lh_replicate_arg1⁴, _lh_replicate_arg2⁴) = 
//│ 				if (_lh_replicate_arg1⁴ > 0) then 
//│ 					let h⁵⁴ = _lh_replicate_arg2⁴
//│ 					in let t⁵⁴ = replicate₀₁((_lh_replicate_arg1⁴ - 1), _lh_replicate_arg2⁴)
//│ 					in mappend₀₀(h⁵⁴, concat₀₀(t⁵⁴)) else (fun ys⁶² -> ys⁶²)
//│ 			def splitAt_lz₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴) = 
//│ 				let _lh_percOp_LH_P2_0⁵ = take_lz₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 				in let _lh_percOp_LH_P2_1⁵ = drop_lz₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 				in (fun j⁶ -> (fun _lh_percOp_arg3⁶ -> mappend₂₀(mappend₃₀(concat₀₀(_lh_percOp_LH_P2_0⁵), mappend₄₀(
//│ 					let h⁴⁶ = 't'
//│ 					in let t⁴⁶ = 	
//│ 						let h⁴⁸ = ':'
//│ 						in let t⁴⁸ = (fun ys⁵⁵ -> ys⁵⁵)
//│ 						in (fun ys⁵³ -> 
//│ 							let h⁴⁹ = h⁴⁸
//│ 							in let t⁴⁹ = mappend₄₀(t⁴⁸, ys⁵³)
//│ 							in (fun ys⁵⁴ -> [LH_C h⁴⁹ mappend₂₀(t⁴⁹, ys⁵⁴)]))
//│ 					in (fun ys⁵¹ -> 
//│ 						let h⁴⁷ = h⁴⁶
//│ 						in let t⁴⁷ = mappend₄₀(t⁴⁶, ys⁵¹)
//│ 						in (fun ys⁵² -> [LH_C h⁴⁷ mappend₂₀(t⁴⁷, ys⁵²)])), mappend₅₀(string_of_int⁰(j⁶), 
//│ 					let h⁵⁰ = 'n'
//│ 					in let t⁵⁰ = (fun ys⁵⁷ -> ys⁵⁷)
//│ 					in (fun ys⁵⁶ -> [LH_C h⁵⁰ mappend₂₀(t⁵⁰, ys⁵⁶)])))), percOp₀₁(j⁶, _lh_percOp_LH_P2_1⁵, _lh_percOp_arg3⁶))))
//│ 				where
//│ 				def drop_lz₀₁(_lh_drop_lz_arg1³, _lh_drop_lz_arg2³) = 
//│ 					if (_lh_drop_lz_arg1³ > 0) then lazy⁰(
//│ 						let _lh_matchIdent¹¹ = force⁰(_lh_drop_lz_arg2³)
//│ 						in case _lh_matchIdent¹¹ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz₀₁((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1¹))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2³
//│ 				def take_lz₀₁(n⁶, ls⁶) = 
//│ 					if (n⁶ > 0) then case force⁰(ls⁶) of {
//│ 						LH_C h¹⁴ t¹⁴ => 
//│ 							let h³⁸ = h¹⁴
//│ 							in let t³⁸ = take_lz₀₁((n⁶ - 1), t¹⁴)
//│ 							in mappend₀₀(h³⁸, concat₀₀(t³⁸))
//│ 						| LH_N  => (fun ys³⁷ -> ys³⁷)} else (fun ys³⁸ -> ys³⁸)
//│ 			def take_lz₁₁(n⁸, ls⁸) = 
//│ 				if (n⁸ > 0) then case force⁰(ls⁸) of {
//│ 					LH_C h¹⁵ t¹⁵ => 
//│ 						let h⁴⁴ = h¹⁵
//│ 						in let t⁴⁴ = take_lz₁₁((n⁸ - 1), t¹⁵)
//│ 						in (fun ys⁴⁷ -> 
//│ 							let h⁴⁵ = h⁴⁴
//│ 							in let t⁴⁵ = mappend₁₀(t⁴⁴, ys⁴⁷)
//│ 							in mappend₀₀(h⁴⁵, concat₀₀(t⁴⁵)))
//│ 					| LH_N  => (fun ys⁴⁸ -> ys⁴⁸)} else (fun ys⁴⁹ -> ys⁴⁹)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPiDigits_nofib₀₀^1]
//│ 	[testPiDigits_nofib₀₀^1 · pidgits₀₀^309]
//│ 		[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · divmod₀₀^1188] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · divmod₀₀^1188 · divmod₀₀^620] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · divmod₀₀^1188] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · divmod₀₀^1188 · divmod₀₀^711] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · divmod₀₀^1188] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · divmod₀₀^1188 · hashOp₀₀^582] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · divmod₀₀^1188 · hashOp₀₀^582 · ampOp₀₀^1231] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · divmod₀₀^1188 · hashOp₀₀^657] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · divmod₀₀^1188 · hashOp₀₀^657 · ampOp₀₀^1231] (using original def)
//│ 		[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · hashOp₀₀^1150] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · hashOp₀₀^1150 · ampOp₀₀^1231] (using original def)
//│ 		[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147]
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · concat₀₀^103] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₁₀^75] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₂₀^101] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₂₀^119] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₂₀^138] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₂₀^160] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₃₀^102] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₄₀^107] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₄₀^113] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₄₀^132] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₅₀^151] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₅₀^151 · mappend₂₀^460] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₅₀^151 · mappend₅₀^454] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · mappend₅₀^151] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · min₀₀^65] (hopeless to continue)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173]
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · concat₀₁^1037] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₁₁^1009] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₂₁^1035] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₂₁^1053] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₂₁^1072] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₂₁^1094] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₃₁^1036] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₄₁^1041] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₄₁^1047] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₄₁^1066] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₅₁^1085] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₅₁^1085 · mappend₂₁^41] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₅₁^1085 · mappend₅₁^35] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · mappend₅₁^1085] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · min₀₁^999] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · percOp₀₁^1107] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173] (only one)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · replicate₀₀^1020] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · replicate₀₀^1020 · concat₀₁^903] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · replicate₀₀^1020 · mappend₀₁^900] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · replicate₀₀^1020 · mappend₀₁^900 · mappend₀₁^857] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · replicate₀₀^1020 · mappend₀₁^900] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · replicate₀₀^1020 · mappend₀₁^900 · mappend₂₁^869] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · replicate₀₀^1020 · mappend₀₁^900 · mappend₃₁^863] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · replicate₀₀^1020 · replicate₀₀^891] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · replicate₀₀^1020] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119]
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · concat₀₁^215] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · drop_lz₀₀^208] (hopeless to continue)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · drop_lz₀₀^208 · drop_lz₀₀^390] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · drop_lz₀₀^208] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₂₁^213] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₂₁^231] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₂₁^250] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₂₁^272] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₃₁^214] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₄₁^219] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₄₁^225] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₄₁^244] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₅₁^263] (hopeless to continue)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₅₁^263 · mappend₂₁^41] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₅₁^263 · mappend₅₁^35] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · mappend₅₁^263] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · percOp₀₁^285] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173] (only one)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · take_lz₀₀^203] (hopeless to continue)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · concat₀₁^974] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971 · mappend₀₁^857] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971 · mappend₂₁^869] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971 · mappend₃₁^863] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · take_lz₀₀^962] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · splitAt_lz₀₀^1119 · take_lz₀₀^203] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010] (hopeless to continue)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010 · concat₀₁^435] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010 · mappend₀₁^432] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010 · mappend₀₁^432 · mappend₀₁^857] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010 · mappend₀₁^432] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010 · mappend₀₁^432 · mappend₂₁^869] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010 · mappend₀₁^432 · mappend₃₁^863] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010 · mappend₁₁^427] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010 · take_lz₁₀^417] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · percOp₀₁^173 · take_lz₁₀^1010] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · replicate₀₁^86] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · replicate₀₁^86 · concat₀₀^932] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · replicate₀₁^86 · mappend₀₀^929] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · replicate₀₁^86 · mappend₀₀^929 · mappend₀₀^475] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · replicate₀₁^86 · mappend₀₀^929] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · replicate₀₁^86 · mappend₀₀^929 · mappend₂₀^487] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · replicate₀₁^86 · mappend₀₀^929 · mappend₃₀^481] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · replicate₀₁^86 · replicate₀₁^920] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · replicate₀₁^86] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · concat₀₀^771] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · drop_lz₀₁^764] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · drop_lz₀₁^764 · drop_lz₀₁^325] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · drop_lz₀₁^764] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₂₀^769] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₂₀^787] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₂₀^806] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₂₀^828] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₃₀^770] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₄₀^775] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₄₀^781] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₄₀^800] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₅₀^819] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₅₀^819 · mappend₂₀^460] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₅₀^819 · mappend₅₀^454] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · mappend₅₀^819] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · concat₀₁^1037] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₁₁^1009] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₂₁^1035] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₂₁^1053] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₂₁^1072] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₂₁^1094] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₃₁^1036] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₄₁^1041] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₄₁^1047] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₄₁^1066] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₅₁^1085] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₅₁^1085 · mappend₂₁^41] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₅₁^1085 · mappend₅₁^35] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · mappend₅₁^1085] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · min₀₁^999] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · percOp₀₁^1107] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · replicate₀₀^1020] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · replicate₀₀^1020 · concat₀₁^903] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · replicate₀₀^1020 · mappend₀₁^900] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · replicate₀₀^1020 · mappend₀₁^900 · mappend₀₁^857] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · replicate₀₀^1020 · mappend₀₁^900] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · replicate₀₀^1020 · mappend₀₁^900 · mappend₂₁^869] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · replicate₀₀^1020 · mappend₀₁^900 · mappend₃₁^863] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · replicate₀₀^1020 · replicate₀₀^891] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · replicate₀₀^1020] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · concat₀₁^215] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · drop_lz₀₀^208] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · drop_lz₀₀^208 · drop_lz₀₀^390] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · drop_lz₀₀^208] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₂₁^213] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₂₁^231] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₂₁^250] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₂₁^272] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₃₁^214] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₄₁^219] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₄₁^225] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₄₁^244] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₅₁^263] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₅₁^263 · mappend₂₁^41] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₅₁^263 · mappend₅₁^35] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · mappend₅₁^263] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · percOp₀₁^285] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · take_lz₀₀^203] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · concat₀₁^974] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971] (using original def)
//│ 								[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971 · mappend₀₁^857] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971] (using original def)
//│ 								[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971 · mappend₂₁^869] (using original def)
//│ 								[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · mappend₀₁^971 · mappend₃₁^863] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · take_lz₀₀^203 · take_lz₀₀^962] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · splitAt_lz₀₀^1119 · take_lz₀₀^203] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010 · concat₀₁^435] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010 · mappend₀₁^432] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010 · mappend₀₁^432 · mappend₀₁^857] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010 · mappend₀₁^432] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010 · mappend₀₁^432 · mappend₂₁^869] (using original def)
//│ 							[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010 · mappend₀₁^432 · mappend₃₁^863] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010 · mappend₁₁^427] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010 · take_lz₁₀^417] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · percOp₀₁^841 · take_lz₁₀^1010] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · take_lz₀₁^759] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · take_lz₀₁^759 · concat₀₀^364] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · take_lz₀₁^759 · mappend₀₀^361] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · take_lz₀₁^759 · mappend₀₀^361 · mappend₀₀^475] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · take_lz₀₁^759 · mappend₀₀^361] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · take_lz₀₁^759 · mappend₀₀^361 · mappend₂₀^487] (using original def)
//│ 						[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · take_lz₀₁^759 · mappend₀₀^361 · mappend₃₀^481] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · take_lz₀₁^759 · take_lz₀₁^352] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · splitAt_lz₀₁^185 · take_lz₀₁^759] (using original def)
//│ 			[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76] (hopeless to continue)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76 · concat₀₀^532] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76 · mappend₀₀^529] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76 · mappend₀₀^529 · mappend₀₀^475] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76 · mappend₀₀^529] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76 · mappend₀₀^529 · mappend₂₀^487] (using original def)
//│ 					[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76 · mappend₀₀^529 · mappend₃₀^481] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76 · mappend₁₀^524] (using original def)
//│ 				[testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76 · take_lz₁₁^514] ---> [testPiDigits_nofib₀₀^1 · pidgits₀₀^309 · percOp₀₀^1147 · take_lz₁₁^76] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPiDigits_nofib₀₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀₀(_lh_testPiDigits_nofib_arg1¹) = 
//│ 	pidgits₀₀₀(_lh_testPiDigits_nofib_arg1¹)
//│ 	where
//│ 	def pidgits₀₀₀(_lh_pidgits_arg1¹) = 
//│ 		percOp₀₀₀(0, hashOp₀₀₂(0, 
//│ 			let _lh_ampOp_LH_P3_0⁵ = 1
//│ 			in let _lh_ampOp_LH_P3_1⁵ = 0
//│ 			in let _lh_ampOp_LH_P3_2⁵ = 1
//│ 			in (fun _lh_ampOp_arg1⁹ -> 
//│ 				let y⁵ = ((_lh_ampOp_arg1⁹ * 2) + 1)
//│ 				in let _lh_hashOp_LH_P3_0⁷ = (_lh_ampOp_LH_P3_0⁵ * _lh_ampOp_arg1⁹)
//│ 				in let _lh_hashOp_LH_P3_1⁷ = ((_lh_ampOp_LH_P3_1⁵ + (_lh_ampOp_LH_P3_0⁵ * 2)) * y⁵)
//│ 				in let _lh_hashOp_LH_P3_2⁷ = (_lh_ampOp_LH_P3_2⁵ * y⁵)
//│ 				in (fun k¹⁴ -> 
//│ 					let _lh_matchIdent¹⁵ = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁷ * 3) + _lh_hashOp_LH_P3_1⁷), _lh_hashOp_LH_P3_2⁷)
//│ 					in _lh_matchIdent¹⁵(_lh_hashOp_LH_P3_0⁷, _lh_hashOp_LH_P3_1⁷, _lh_hashOp_LH_P3_2⁷, k¹⁴)))), _lh_pidgits_arg1¹)
//│ 		where
//│ 		def divmod₀₀₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = 
//│ 			let _lh_hashOp_LH_P2_0¹ = div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹)
//│ 			in let _lh_hashOp_LH_P2_1¹ = (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)
//│ 			in (fun _lh_hashOp_LH_P3_0⁴ -> (fun _lh_hashOp_LH_P3_1⁴ -> (fun _lh_hashOp_LH_P3_2⁴ -> (fun k⁹ -> if ((_lh_hashOp_LH_P3_0⁴ > _lh_hashOp_LH_P3_1⁴) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0⁴) >= _lh_hashOp_LH_P3_2⁴)) then force⁰(hashOp₀₀₀(k⁹, 
//│ 				let _lh_ampOp_LH_P3_0³ = _lh_hashOp_LH_P3_0⁴
//│ 				in let _lh_ampOp_LH_P3_1³ = _lh_hashOp_LH_P3_1⁴
//│ 				in let _lh_ampOp_LH_P3_2³ = _lh_hashOp_LH_P3_2⁴
//│ 				in (fun _lh_ampOp_arg1⁷ -> 
//│ 					let y³ = ((_lh_ampOp_arg1⁷ * 2) + 1)
//│ 					in let _lh_hashOp_LH_P3_0⁵ = (_lh_ampOp_LH_P3_0³ * _lh_ampOp_arg1⁷)
//│ 					in let _lh_hashOp_LH_P3_1⁵ = ((_lh_ampOp_LH_P3_1³ + (_lh_ampOp_LH_P3_0³ * 2)) * y³)
//│ 					in let _lh_hashOp_LH_P3_2⁵ = (_lh_ampOp_LH_P3_2³ * y³)
//│ 					in (fun k¹⁰ -> 
//│ 						let _lh_matchIdent¹¹ = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁵ * 3) + _lh_hashOp_LH_P3_1⁵), _lh_hashOp_LH_P3_2⁵)
//│ 						in _lh_matchIdent¹¹(_lh_hashOp_LH_P3_0⁵, _lh_hashOp_LH_P3_1⁵, _lh_hashOp_LH_P3_2⁵, k¹⁰))))) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₁(k⁹, 
//│ 				let _lh_ampOp_LH_P3_0⁴ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ 				in let _lh_ampOp_LH_P3_1⁴ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ 				in let _lh_ampOp_LH_P3_2⁴ = _lh_hashOp_LH_P3_2⁴
//│ 				in (fun _lh_ampOp_arg1⁸ -> 
//│ 					let y⁴ = ((_lh_ampOp_arg1⁸ * 2) + 1)
//│ 					in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁸)
//│ 					in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ 					in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ 					in (fun k¹¹ -> 
//│ 						let _lh_matchIdent¹² = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ 						in _lh_matchIdent¹²(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹¹))))]))))
//│ 			where
//│ 			def hashOp₀₀₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = 
//│ 				lazy⁰(
//│ 					let k¹² = (_lh_hashOp_arg1¹ + 1)
//│ 					in let _lh_matchIdent¹³ = ampOp₀₀₀(k¹², _lh_hashOp_arg2¹)
//│ 					in _lh_matchIdent¹³(k¹²))
//│ 				where
//│ 				def ampOp₀₀₀(_lh_ampOp_arg1⁶, _lh_ampOp_arg2³) = 
//│ 					_lh_ampOp_arg2³(_lh_ampOp_arg1⁶)
//│ 			def hashOp₀₀₁(_lh_hashOp_arg1², _lh_hashOp_arg2²) = 
//│ 				lazy⁰(
//│ 					let k¹³ = (_lh_hashOp_arg1² + 1)
//│ 					in let _lh_matchIdent¹⁴ = ampOp₀₀₁(k¹³, _lh_hashOp_arg2²)
//│ 					in _lh_matchIdent¹⁴(k¹³))
//│ 				where
//│ 				def ampOp₀₀₁(_lh_ampOp_arg1⁴, _lh_ampOp_arg2¹) = 
//│ 					_lh_ampOp_arg2¹(_lh_ampOp_arg1⁴)
//│ 		def hashOp₀₀₂(_lh_hashOp_arg1³, _lh_hashOp_arg2³) = 
//│ 			lazy⁰(
//│ 				let k¹⁵ = (_lh_hashOp_arg1³ + 1)
//│ 				in let _lh_matchIdent¹⁷ = ampOp₀₀₂(k¹⁵, _lh_hashOp_arg2³)
//│ 				in _lh_matchIdent¹⁷(k¹⁵))
//│ 			where
//│ 			def ampOp₀₀₂(_lh_ampOp_arg1⁵, _lh_ampOp_arg2²) = 
//│ 				_lh_ampOp_arg2²(_lh_ampOp_arg1⁵)
//│ 		def percOp₀₀₀(_lh_percOp_arg1³, _lh_percOp_arg2³, _lh_percOp_arg3⁸) = 
//│ 			if (_lh_percOp_arg1³ >= _lh_percOp_arg3⁸) then [LH_N] else 
//│ 				let k⁸ = (_lh_percOp_arg1³ + 10)
//│ 				in let j⁸ = min₀₀₀(_lh_percOp_arg3⁸, k⁸)
//│ 				in let _lh_matchIdent¹⁰ = if (k⁸ > _lh_percOp_arg3⁸) then 
//│ 					let _lh_percOp_LH_P2_0⁵ = mappend₁₀₀(take_lz₁₁₀((_lh_percOp_arg3⁸ % 10), _lh_percOp_arg2³), replicate₀₁₀((k⁸ - _lh_percOp_arg3⁸), [LH_C ' ' [LH_N]]))
//│ 					in let _lh_percOp_LH_P2_1⁵ = lazy⁰([LH_N])
//│ 					in (fun j⁹ -> (fun _lh_percOp_arg3⁹ -> mappend₂₀₀(mappend₃₀₀(concat₀₀₀(_lh_percOp_LH_P2_0⁵), mappend₄₀₀(
//│ 						let h⁵⁵ = 't'
//│ 						in let t⁵⁵ = 	
//│ 							let h⁵⁶ = ':'
//│ 							in let t⁵⁶ = (fun ys⁸⁹ -> ys⁸⁹)
//│ 							in (fun ys⁹⁰ -> 
//│ 								let h⁵⁷ = h⁵⁶
//│ 								in let t⁵⁷ = mappend₄₀₁(t⁵⁶, ys⁹⁰)
//│ 								in (fun ys⁹¹ -> [LH_C h⁵⁷ mappend₂₀₁(t⁵⁷, ys⁹¹)]))
//│ 						in (fun ys⁹² -> 
//│ 							let h⁵⁸ = h⁵⁵
//│ 							in let t⁵⁸ = mappend₄₀₂(t⁵⁵, ys⁹²)
//│ 							in (fun ys⁹³ -> [LH_C h⁵⁸ mappend₂₀₂(t⁵⁸, ys⁹³)])), mappend₅₀₀(string_of_int⁰(j⁹), 
//│ 						let h⁵⁹ = 'n'
//│ 						in let t⁵⁹ = (fun ys⁹⁴ -> ys⁹⁴)
//│ 						in (fun ys⁹⁵ -> [LH_C h⁵⁹ mappend₂₀₃(t⁵⁹, ys⁹⁵)])))), percOp₀₁₀(j⁹, _lh_percOp_LH_P2_1⁵, _lh_percOp_arg3⁹)))) else splitAt_lz₀₁₀(10, _lh_percOp_arg2³)
//│ 				in _lh_matchIdent¹⁰(j⁸, _lh_percOp_arg3⁸)
//│ 			where
//│ 			def concat₀₀₀(lss¹⁶) = 
//│ 				lss¹⁶
//│ 			def mappend₁₀₀(xs⁵², ys¹³¹) = 
//│ 				xs⁵²(ys¹³¹)
//│ 			def mappend₂₀₀(xs¹⁷, ys⁷¹) = 
//│ 				xs¹⁷(ys⁷¹)
//│ 			def mappend₂₀₁(xs¹⁰², ys²³²) = 
//│ 				xs¹⁰²(ys²³²)
//│ 			def mappend₂₀₂(xs⁹⁶, ys²²³) = 
//│ 				xs⁹⁶(ys²²³)
//│ 			def mappend₂₀₃(xs⁴⁹, ys¹²⁷) = 
//│ 				xs⁴⁹(ys¹²⁷)
//│ 			def mappend₃₀₀(xs⁷³, ys¹⁷¹) = 
//│ 				xs⁷³(ys¹⁷¹)
//│ 			def mappend₄₀₀(xs⁵⁶, ys¹³⁵) = 
//│ 				xs⁵⁶(ys¹³⁵)
//│ 			def mappend₄₀₁(xs¹⁶, ys⁷⁰) = 
//│ 				xs¹⁶(ys⁷⁰)
//│ 			def mappend₄₀₂(xs⁷⁶, ys¹⁷⁶) = 
//│ 				xs⁷⁶(ys¹⁷⁶)
//│ 			def mappend₅₀₀(xs³⁹, ys¹¹⁴) = 
//│ 				case xs³⁹ of {
//│ 					LH_C h⁷⁴ t⁷⁴ => 
//│ 						let h⁷⁵ = h⁷⁴
//│ 						in let t⁷⁵ = mappend₅₀₀(t⁷⁴, ys¹¹⁴)
//│ 						in (fun ys¹¹⁵ -> [LH_C h⁷⁵ mappend₂₀₄(t⁷⁵, ys¹¹⁵)])
//│ 					| LH_N  => ys¹¹⁴}
//│ 				where
//│ 				def mappend₂₀₄(xs⁶⁰, ys¹³⁹) = 
//│ 					xs⁶⁰(ys¹³⁹)
//│ 			def min₀₀₀(_lh_min_arg1⁴, _lh_min_arg2⁴) = 
//│ 				if (_lh_min_arg1⁴ > _lh_min_arg2⁴) then _lh_min_arg2⁴ else _lh_min_arg1⁴
//│ 			def percOp₀₁₀(_lh_percOp_arg1², _lh_percOp_arg2², _lh_percOp_arg3⁶) = 
//│ 				if (_lh_percOp_arg1² >= _lh_percOp_arg3⁶) then [LH_N] else 
//│ 					let k⁷ = (_lh_percOp_arg1² + 10)
//│ 					in let j⁶ = min₀₁₀(_lh_percOp_arg3⁶, k⁷)
//│ 					in let _lh_matchIdent⁸ = if (k⁷ > _lh_percOp_arg3⁶) then 
//│ 						let _lh_percOp_LH_P2_0⁴ = mappend₁₁₀(take_lz₁₀₀((_lh_percOp_arg3⁶ % 10), _lh_percOp_arg2²), replicate₀₀₀((k⁷ - _lh_percOp_arg3⁶), [LH_C ' ' [LH_N]]))
//│ 						in let _lh_percOp_LH_P2_1⁴ = lazy⁰([LH_N])
//│ 						in (fun j⁷ -> (fun _lh_percOp_arg3⁷ -> mappend₂₁₀(mappend₃₁₀(concat₀₁₀(_lh_percOp_LH_P2_0⁴), mappend₄₁₀(
//│ 							let h⁴⁴ = 't'
//│ 							in let t⁴⁴ = 	
//│ 								let h⁴⁵ = ':'
//│ 								in let t⁴⁵ = (fun ys⁶² -> ys⁶²)
//│ 								in (fun ys⁶³ -> 
//│ 									let h⁴⁶ = h⁴⁵
//│ 									in let t⁴⁶ = mappend₄₁₁(t⁴⁵, ys⁶³)
//│ 									in (fun ys⁶⁴ -> [LH_C h⁴⁶ mappend₂₁₁(t⁴⁶, ys⁶⁴)]))
//│ 							in (fun ys⁶⁵ -> 
//│ 								let h⁴⁷ = h⁴⁴
//│ 								in let t⁴⁷ = mappend₄₁₂(t⁴⁴, ys⁶⁵)
//│ 								in (fun ys⁶⁶ -> [LH_C h⁴⁷ mappend₂₁₂(t⁴⁷, ys⁶⁶)])), mappend₅₁₀(string_of_int⁰(j⁷), 
//│ 							let h⁴⁸ = 'n'
//│ 							in let t⁴⁸ = (fun ys⁶⁷ -> ys⁶⁷)
//│ 							in (fun ys⁶⁸ -> [LH_C h⁴⁸ mappend₂₁₃(t⁴⁸, ys⁶⁸)])))), percOp₀₁₀(j⁷, _lh_percOp_LH_P2_1⁴, _lh_percOp_arg3⁷)))) else splitAt_lz₀₀₀(10, _lh_percOp_arg2²)
//│ 					in _lh_matchIdent⁸(j⁶, _lh_percOp_arg3⁶)
//│ 				where
//│ 				def concat₀₁₀(lss¹²) = 
//│ 					lss¹²
//│ 				def mappend₁₁₀(xs⁴³, ys¹¹⁹) = 
//│ 					xs⁴³(ys¹¹⁹)
//│ 				def mappend₂₁₀(xs⁵⁴, ys¹³³) = 
//│ 					xs⁵⁴(ys¹³³)
//│ 				def mappend₂₁₁(xs⁹⁹, ys²²⁷) = 
//│ 					xs⁹⁹(ys²²⁷)
//│ 				def mappend₂₁₂(xs⁷⁴, ys¹⁷²) = 
//│ 					xs⁷⁴(ys¹⁷²)
//│ 				def mappend₂₁₃(xs⁷⁹, ys¹⁸¹) = 
//│ 					xs⁷⁹(ys¹⁸¹)
//│ 				def mappend₃₁₀(xs³², ys⁹⁷) = 
//│ 					xs³²(ys⁹⁷)
//│ 				def mappend₄₁₀(xs²¹, ys⁷⁵) = 
//│ 					xs²¹(ys⁷⁵)
//│ 				def mappend₄₁₁(xs⁶⁸, ys¹⁵⁶) = 
//│ 					xs⁶⁸(ys¹⁵⁶)
//│ 				def mappend₄₁₂(xs⁶⁴, ys¹⁴⁵) = 
//│ 					xs⁶⁴(ys¹⁴⁵)
//│ 				def mappend₅₁₀(xs³⁵, ys¹⁰¹) = 
//│ 					case xs³⁵ of {
//│ 						LH_C h⁶² t⁶² => 
//│ 							let h⁶³ = h⁶²
//│ 							in let t⁶³ = mappend₅₁₀(t⁶², ys¹⁰¹)
//│ 							in (fun ys¹⁰² -> [LH_C h⁶³ mappend₂₁₄(t⁶³, ys¹⁰²)])
//│ 						| LH_N  => ys¹⁰¹}
//│ 					where
//│ 					def mappend₂₁₄(xs⁶², ys¹⁴¹) = 
//│ 						xs⁶²(ys¹⁴¹)
//│ 				def min₀₁₀(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def replicate₀₀₀(_lh_replicate_arg1³, _lh_replicate_arg2³) = 
//│ 					if (_lh_replicate_arg1³ > 0) then 
//│ 						let h⁸⁹ = _lh_replicate_arg2³
//│ 						in let t⁸⁹ = replicate₀₀₀((_lh_replicate_arg1³ - 1), _lh_replicate_arg2³)
//│ 						in mappend₀₁₀(h⁸⁹, concat₀₁₁(t⁸⁹)) else (fun ys¹⁵⁵ -> ys¹⁵⁵)
//│ 					where
//│ 					def concat₀₁₁(lss¹³) = 
//│ 						lss¹³
//│ 					def mappend₀₁₀(xs³⁶, ys¹⁰³) = 
//│ 						case xs³⁶ of {
//│ 							LH_C h⁶⁴ t⁶⁴ => 
//│ 								let h⁶⁵ = h⁶⁴
//│ 								in let t⁶⁵ = mappend₀₁₀(t⁶⁴, ys¹⁰³)
//│ 								in (fun ys¹⁰⁴ -> 
//│ 									let h⁶⁶ = h⁶⁵
//│ 									in let t⁶⁶ = mappend₃₁₁(t⁶⁵, ys¹⁰⁴)
//│ 									in (fun ys¹⁰⁵ -> [LH_C h⁶⁶ mappend₂₁₅(t⁶⁶, ys¹⁰⁵)]))
//│ 							| LH_N  => ys¹⁰³}
//│ 						where
//│ 						def mappend₂₁₅(xs¹⁰⁰, ys²²⁸) = 
//│ 							xs¹⁰⁰(ys²²⁸)
//│ 						def mappend₃₁₁(xs⁸¹, ys¹⁹²) = 
//│ 							xs⁸¹(ys¹⁹²)
//│ 				def splitAt_lz₀₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³) = 
//│ 					let _lh_percOp_LH_P2_0⁷ = take_lz₀₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in let _lh_percOp_LH_P2_1⁷ = drop_lz₀₀₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in (fun j¹¹ -> (fun _lh_percOp_arg3¹¹ -> mappend₂₁₆(mappend₃₁₂(concat₀₁₂(_lh_percOp_LH_P2_0⁷), mappend₄₁₃(
//│ 						let h¹⁰⁵ = 't'
//│ 						in let t¹⁰⁵ = 	
//│ 							let h¹⁰⁶ = ':'
//│ 							in let t¹⁰⁶ = (fun ys¹⁸³ -> ys¹⁸³)
//│ 							in (fun ys¹⁸⁴ -> 
//│ 								let h¹⁰⁷ = h¹⁰⁶
//│ 								in let t¹⁰⁷ = mappend₄₁₄(t¹⁰⁶, ys¹⁸⁴)
//│ 								in (fun ys¹⁸⁵ -> [LH_C h¹⁰⁷ mappend₂₁₇(t¹⁰⁷, ys¹⁸⁵)]))
//│ 						in (fun ys¹⁸⁶ -> 
//│ 							let h¹⁰⁸ = h¹⁰⁵
//│ 							in let t¹⁰⁸ = mappend₄₁₅(t¹⁰⁵, ys¹⁸⁶)
//│ 							in (fun ys¹⁸⁷ -> [LH_C h¹⁰⁸ mappend₂₁₈(t¹⁰⁸, ys¹⁸⁷)])), mappend₅₁₁(string_of_int⁰(j¹¹), 
//│ 						let h¹⁰⁹ = 'n'
//│ 						in let t¹⁰⁹ = (fun ys¹⁸⁸ -> ys¹⁸⁸)
//│ 						in (fun ys¹⁸⁹ -> [LH_C h¹⁰⁹ mappend₂₁₉(t¹⁰⁹, ys¹⁸⁹)])))), percOp₀₁₀(j¹¹, _lh_percOp_LH_P2_1⁷, _lh_percOp_arg3¹¹))))
//│ 					where
//│ 					def concat₀₁₂(lss⁴) = 
//│ 						lss⁴
//│ 					def drop_lz₀₀₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 						if (_lh_drop_lz_arg1² > 0) then lazy⁰(
//│ 							let _lh_matchIdent⁹ = force⁰(_lh_drop_lz_arg2²)
//│ 							in case _lh_matchIdent⁹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2²
//│ 					def mappend₂₁₆(xs⁸⁹, ys²⁰⁹) = 
//│ 						xs⁸⁹(ys²⁰⁹)
//│ 					def mappend₂₁₇(xs⁵⁵, ys¹³⁴) = 
//│ 						xs⁵⁵(ys¹³⁴)
//│ 					def mappend₂₁₈(xs²⁹, ys⁸⁷) = 
//│ 						xs²⁹(ys⁸⁷)
//│ 					def mappend₂₁₉(xs⁹⁴, ys²²¹) = 
//│ 						xs⁹⁴(ys²²¹)
//│ 					def mappend₃₁₂(xs²², ys⁷⁶) = 
//│ 						xs²²(ys⁷⁶)
//│ 					def mappend₄₁₃(xs⁴⁰, ys¹¹⁶) = 
//│ 						xs⁴⁰(ys¹¹⁶)
//│ 					def mappend₄₁₄(xs⁹³, ys²²⁰) = 
//│ 						xs⁹³(ys²²⁰)
//│ 					def mappend₄₁₅(xs²⁷, ys⁸⁵) = 
//│ 						xs²⁷(ys⁸⁵)
//│ 					def mappend₅₁₁(xs⁵⁰, ys¹²⁸) = 
//│ 						case xs⁵⁰ of {
//│ 							LH_C h⁷⁸ t⁷⁸ => 
//│ 								let h⁷⁹ = h⁷⁸
//│ 								in let t⁷⁹ = mappend₅₁₁(t⁷⁸, ys¹²⁸)
//│ 								in (fun ys¹²⁹ -> [LH_C h⁷⁹ mappend₂₁₁₀(t⁷⁹, ys¹²⁹)])
//│ 							| LH_N  => ys¹²⁸}
//│ 						where
//│ 						def mappend₂₁₁₀(xs⁴⁷, ys¹²³) = 
//│ 							xs⁴⁷(ys¹²³)
//│ 					def take_lz₀₀₀(n⁸, ls⁸) = 
//│ 						if (n⁸ > 0) then case force⁰(ls⁸) of {
//│ 							LH_C h¹⁰³ t¹⁰³ => 
//│ 								let h¹⁰⁴ = h¹⁰³
//│ 								in let t¹⁰⁴ = take_lz₀₀₀((n⁸ - 1), t¹⁰³)
//│ 								in mappend₀₁₁(h¹⁰⁴, concat₀₁₃(t¹⁰⁴))
//│ 							| LH_N  => (fun ys¹⁷⁹ -> ys¹⁷⁹)} else (fun ys¹⁸⁰ -> ys¹⁸⁰)
//│ 						where
//│ 						def concat₀₁₃(lss⁷) = 
//│ 							lss⁷
//│ 						def mappend₀₁₁(xs⁷², ys¹⁶⁸) = 
//│ 							case xs⁷² of {
//│ 								LH_C h⁹⁷ t⁹⁷ => 
//│ 									let h⁹⁸ = h⁹⁷
//│ 									in let t⁹⁸ = mappend₀₁₁(t⁹⁷, ys¹⁶⁸)
//│ 									in (fun ys¹⁶⁹ -> 
//│ 										let h⁹⁹ = h⁹⁸
//│ 										in let t⁹⁹ = mappend₃₁₃(t⁹⁸, ys¹⁶⁹)
//│ 										in (fun ys¹⁷⁰ -> [LH_C h⁹⁹ mappend₂₁₁₁(t⁹⁹, ys¹⁷⁰)]))
//│ 								| LH_N  => ys¹⁶⁸}
//│ 							where
//│ 							def mappend₂₁₁₁(xs⁸⁰, ys¹⁸²) = 
//│ 								xs⁸⁰(ys¹⁸²)
//│ 							def mappend₃₁₃(xs⁵⁹, ys¹³⁸) = 
//│ 								xs⁵⁹(ys¹³⁸)
//│ 				def take_lz₁₀₀(n⁴, ls⁴) = 
//│ 					if (n⁴ > 0) then case force⁰(ls⁴) of {
//│ 						LH_C h⁷¹ t⁷¹ => 
//│ 							let h⁷² = h⁷¹
//│ 							in let t⁷² = take_lz₁₀₀((n⁴ - 1), t⁷¹)
//│ 							in (fun ys¹¹¹ -> 
//│ 								let h⁷³ = h⁷²
//│ 								in let t⁷³ = mappend₁₁₁(t⁷², ys¹¹¹)
//│ 								in mappend₀₁₂(h⁷³, concat₀₁₄(t⁷³)))
//│ 						| LH_N  => (fun ys¹¹² -> ys¹¹²)} else (fun ys¹¹³ -> ys¹¹³)
//│ 					where
//│ 					def concat₀₁₄(lss¹⁴) = 
//│ 						lss¹⁴
//│ 					def mappend₀₁₂(xs⁸⁵, ys¹⁹⁶) = 
//│ 						case xs⁸⁵ of {
//│ 							LH_C h¹¹² t¹¹² => 
//│ 								let h¹¹³ = h¹¹²
//│ 								in let t¹¹³ = mappend₀₁₂(t¹¹², ys¹⁹⁶)
//│ 								in (fun ys¹⁹⁷ -> 
//│ 									let h¹¹⁴ = h¹¹³
//│ 									in let t¹¹⁴ = mappend₃₁₄(t¹¹³, ys¹⁹⁷)
//│ 									in (fun ys¹⁹⁸ -> [LH_C h¹¹⁴ mappend₂₁₁₂(t¹¹⁴, ys¹⁹⁸)]))
//│ 							| LH_N  => ys¹⁹⁶}
//│ 						where
//│ 						def mappend₂₁₁₂(xs⁴¹, ys¹¹⁷) = 
//│ 							xs⁴¹(ys¹¹⁷)
//│ 						def mappend₃₁₄(xs⁶⁹, ys¹⁵⁷) = 
//│ 							xs⁶⁹(ys¹⁵⁷)
//│ 					def mappend₁₁₁(xs⁸⁶, ys¹⁹⁹) = 
//│ 						xs⁸⁶(ys¹⁹⁹)
//│ 			def replicate₀₁₀(_lh_replicate_arg1², _lh_replicate_arg2²) = 
//│ 				if (_lh_replicate_arg1² > 0) then 
//│ 					let h⁶⁷ = _lh_replicate_arg2²
//│ 					in let t⁶⁷ = replicate₀₁₀((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)
//│ 					in mappend₀₀₀(h⁶⁷, concat₀₀₁(t⁶⁷)) else (fun ys¹⁰⁶ -> ys¹⁰⁶)
//│ 				where
//│ 				def concat₀₀₁(lss¹⁰) = 
//│ 					lss¹⁰
//│ 				def mappend₀₀₀(xs²⁴, ys⁸⁰) = 
//│ 					case xs²⁴ of {
//│ 						LH_C h⁵² t⁵² => 
//│ 							let h⁵³ = h⁵²
//│ 							in let t⁵³ = mappend₀₀₀(t⁵², ys⁸⁰)
//│ 							in (fun ys⁸¹ -> 
//│ 								let h⁵⁴ = h⁵³
//│ 								in let t⁵⁴ = mappend₃₀₁(t⁵³, ys⁸¹)
//│ 								in (fun ys⁸² -> [LH_C h⁵⁴ mappend₂₀₅(t⁵⁴, ys⁸²)]))
//│ 						| LH_N  => ys⁸⁰}
//│ 					where
//│ 					def mappend₂₀₅(xs⁸⁴, ys¹⁹⁵) = 
//│ 						xs⁸⁴(ys¹⁹⁵)
//│ 					def mappend₃₀₁(xs⁵³, ys¹³²) = 
//│ 						xs⁵³(ys¹³²)
//│ 			def splitAt_lz₀₁₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 				let _lh_percOp_LH_P2_0⁶ = take_lz₀₁₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 				in let _lh_percOp_LH_P2_1⁶ = drop_lz₀₁₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 				in (fun j¹⁰ -> (fun _lh_percOp_arg3¹⁰ -> mappend₂₀₆(mappend₃₀₂(concat₀₀₂(_lh_percOp_LH_P2_0⁶), mappend₄₀₃(
//│ 					let h⁹⁰ = 't'
//│ 					in let t⁹⁰ = 	
//│ 						let h⁹¹ = ':'
//│ 						in let t⁹¹ = (fun ys¹⁵⁹ -> ys¹⁵⁹)
//│ 						in (fun ys¹⁶⁰ -> 
//│ 							let h⁹² = h⁹¹
//│ 							in let t⁹² = mappend₄₀₄(t⁹¹, ys¹⁶⁰)
//│ 							in (fun ys¹⁶¹ -> [LH_C h⁹² mappend₂₀₇(t⁹², ys¹⁶¹)]))
//│ 					in (fun ys¹⁶² -> 
//│ 						let h⁹³ = h⁹⁰
//│ 						in let t⁹³ = mappend₄₀₅(t⁹⁰, ys¹⁶²)
//│ 						in (fun ys¹⁶³ -> [LH_C h⁹³ mappend₂₀₈(t⁹³, ys¹⁶³)])), mappend₅₀₁(string_of_int⁰(j¹⁰), 
//│ 					let h⁹⁴ = 'n'
//│ 					in let t⁹⁴ = (fun ys¹⁶⁴ -> ys¹⁶⁴)
//│ 					in (fun ys¹⁶⁵ -> [LH_C h⁹⁴ mappend₂₀₉(t⁹⁴, ys¹⁶⁵)])))), percOp₀₁₁(j¹⁰, _lh_percOp_LH_P2_1⁶, _lh_percOp_arg3¹⁰))))
//│ 				where
//│ 				def concat₀₀₂(lss¹⁵) = 
//│ 					lss¹⁵
//│ 				def drop_lz₀₁₀(_lh_drop_lz_arg1³, _lh_drop_lz_arg2³) = 
//│ 					if (_lh_drop_lz_arg1³ > 0) then lazy⁰(
//│ 						let _lh_matchIdent¹⁶ = force⁰(_lh_drop_lz_arg2³)
//│ 						in case _lh_matchIdent¹⁶ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2³
//│ 				def mappend₂₀₆(xs⁵¹, ys¹³⁰) = 
//│ 					xs⁵¹(ys¹³⁰)
//│ 				def mappend₂₀₇(xs⁹⁵, ys²²²) = 
//│ 					xs⁹⁵(ys²²²)
//│ 				def mappend₂₀₈(xs²⁵, ys⁸³) = 
//│ 					xs²⁵(ys⁸³)
//│ 				def mappend₂₀₉(xs²⁸, ys⁸⁶) = 
//│ 					xs²⁸(ys⁸⁶)
//│ 				def mappend₃₀₂(xs²⁶, ys⁸⁴) = 
//│ 					xs²⁶(ys⁸⁴)
//│ 				def mappend₄₀₃(xs⁴⁵, ys¹²¹) = 
//│ 					xs⁴⁵(ys¹²¹)
//│ 				def mappend₄₀₄(xs⁶⁷, ys¹⁵⁴) = 
//│ 					xs⁶⁷(ys¹⁵⁴)
//│ 				def mappend₄₀₅(xs⁶¹, ys¹⁴⁰) = 
//│ 					xs⁶¹(ys¹⁴⁰)
//│ 				def mappend₅₀₁(xs¹⁴, ys⁶⁰) = 
//│ 					case xs¹⁴ of {
//│ 						LH_C h⁴² t⁴² => 
//│ 							let h⁴³ = h⁴²
//│ 							in let t⁴³ = mappend₅₀₁(t⁴², ys⁶⁰)
//│ 							in (fun ys⁶¹ -> [LH_C h⁴³ mappend₂₀₁₀(t⁴³, ys⁶¹)])
//│ 						| LH_N  => ys⁶⁰}
//│ 					where
//│ 					def mappend₂₀₁₀(xs⁴⁴, ys¹²⁰) = 
//│ 						xs⁴⁴(ys¹²⁰)
//│ 				def percOp₀₁₁(_lh_percOp_arg1⁴, _lh_percOp_arg2⁴, _lh_percOp_arg3¹²) = 
//│ 					if (_lh_percOp_arg1⁴ >= _lh_percOp_arg3¹²) then [LH_N] else 
//│ 						let k¹⁶ = (_lh_percOp_arg1⁴ + 10)
//│ 						in let j¹² = min₀₁₁(_lh_percOp_arg3¹², k¹⁶)
//│ 						in let _lh_matchIdent¹⁸ = if (k¹⁶ > _lh_percOp_arg3¹²) then 
//│ 							let _lh_percOp_LH_P2_0⁸ = mappend₁₁₂(take_lz₁₀₁((_lh_percOp_arg3¹² % 10), _lh_percOp_arg2⁴), replicate₀₀₁((k¹⁶ - _lh_percOp_arg3¹²), [LH_C ' ' [LH_N]]))
//│ 							in let _lh_percOp_LH_P2_1⁸ = lazy⁰([LH_N])
//│ 							in (fun j¹³ -> (fun _lh_percOp_arg3¹³ -> mappend₂₁₁₃(mappend₃₁₅(concat₀₁₅(_lh_percOp_LH_P2_0⁸), mappend₄₁₆(
//│ 								let h¹¹⁵ = 't'
//│ 								in let t¹¹⁵ = 	
//│ 									let h¹¹⁶ = ':'
//│ 									in let t¹¹⁶ = (fun ys²⁰¹ -> ys²⁰¹)
//│ 									in (fun ys²⁰² -> 
//│ 										let h¹¹⁷ = h¹¹⁶
//│ 										in let t¹¹⁷ = mappend₄₁₇(t¹¹⁶, ys²⁰²)
//│ 										in (fun ys²⁰³ -> [LH_C h¹¹⁷ mappend₂₁₁₄(t¹¹⁷, ys²⁰³)]))
//│ 								in (fun ys²⁰⁴ -> 
//│ 									let h¹¹⁸ = h¹¹⁵
//│ 									in let t¹¹⁸ = mappend₄₁₈(t¹¹⁵, ys²⁰⁴)
//│ 									in (fun ys²⁰⁵ -> [LH_C h¹¹⁸ mappend₂₁₁₅(t¹¹⁸, ys²⁰⁵)])), mappend₅₁₂(string_of_int⁰(j¹³), 
//│ 								let h¹¹⁹ = 'n'
//│ 								in let t¹¹⁹ = (fun ys²⁰⁶ -> ys²⁰⁶)
//│ 								in (fun ys²⁰⁷ -> [LH_C h¹¹⁹ mappend₂₁₁₆(t¹¹⁹, ys²⁰⁷)])))), percOp₀₁₁(j¹³, _lh_percOp_LH_P2_1⁸, _lh_percOp_arg3¹³)))) else splitAt_lz₀₀₁(10, _lh_percOp_arg2⁴)
//│ 						in _lh_matchIdent¹⁸(j¹², _lh_percOp_arg3¹²)
//│ 					where
//│ 					def concat₀₁₅(lss⁹) = 
//│ 						lss⁹
//│ 					def mappend₁₁₂(xs⁶⁵, ys¹⁴⁶) = 
//│ 						xs⁶⁵(ys¹⁴⁶)
//│ 					def mappend₂₁₁₃(xs⁷⁷, ys¹⁷⁷) = 
//│ 						xs⁷⁷(ys¹⁷⁷)
//│ 					def mappend₂₁₁₄(xs¹⁵, ys⁶⁹) = 
//│ 						xs¹⁵(ys⁶⁹)
//│ 					def mappend₂₁₁₅(xs³¹, ys⁹⁶) = 
//│ 						xs³¹(ys⁹⁶)
//│ 					def mappend₂₁₁₆(xs²⁰, ys⁷⁴) = 
//│ 						xs²⁰(ys⁷⁴)
//│ 					def mappend₃₁₅(xs⁷⁰, ys¹⁵⁸) = 
//│ 						xs⁷⁰(ys¹⁵⁸)
//│ 					def mappend₄₁₆(xs⁸², ys¹⁹³) = 
//│ 						xs⁸²(ys¹⁹³)
//│ 					def mappend₄₁₇(xs⁸³, ys¹⁹⁴) = 
//│ 						xs⁸³(ys¹⁹⁴)
//│ 					def mappend₄₁₈(xs⁹¹, ys²¹¹) = 
//│ 						xs⁹¹(ys²¹¹)
//│ 					def mappend₅₁₂(xs⁷¹, ys¹⁶⁶) = 
//│ 						case xs⁷¹ of {
//│ 							LH_C h⁹⁵ t⁹⁵ => 
//│ 								let h⁹⁶ = h⁹⁵
//│ 								in let t⁹⁶ = mappend₅₁₂(t⁹⁵, ys¹⁶⁶)
//│ 								in (fun ys¹⁶⁷ -> [LH_C h⁹⁶ mappend₂₁₁₇(t⁹⁶, ys¹⁶⁷)])
//│ 							| LH_N  => ys¹⁶⁶}
//│ 						where
//│ 						def mappend₂₁₁₇(xs³⁰, ys⁸⁸) = 
//│ 							xs³⁰(ys⁸⁸)
//│ 					def min₀₁₁(_lh_min_arg1³, _lh_min_arg2³) = 
//│ 						if (_lh_min_arg1³ > _lh_min_arg2³) then _lh_min_arg2³ else _lh_min_arg1³
//│ 					def replicate₀₀₁(_lh_replicate_arg1⁴, _lh_replicate_arg2⁴) = 
//│ 						if (_lh_replicate_arg1⁴ > 0) then 
//│ 							let h¹²⁵ = _lh_replicate_arg2⁴
//│ 							in let t¹²⁵ = replicate₀₀₁((_lh_replicate_arg1⁴ - 1), _lh_replicate_arg2⁴)
//│ 							in mappend₀₁₃(h¹²⁵, concat₀₁₆(t¹²⁵)) else (fun ys²²⁶ -> ys²²⁶)
//│ 						where
//│ 						def concat₀₁₆(lss⁶) = 
//│ 							lss⁶
//│ 						def mappend₀₁₃(xs²³, ys⁷⁷) = 
//│ 							case xs²³ of {
//│ 								LH_C h⁴⁹ t⁴⁹ => 
//│ 									let h⁵⁰ = h⁴⁹
//│ 									in let t⁵⁰ = mappend₀₁₃(t⁴⁹, ys⁷⁷)
//│ 									in (fun ys⁷⁸ -> 
//│ 										let h⁵¹ = h⁵⁰
//│ 										in let t⁵¹ = mappend₃₁₆(t⁵⁰, ys⁷⁸)
//│ 										in (fun ys⁷⁹ -> [LH_C h⁵¹ mappend₂₁₁₈(t⁵¹, ys⁷⁹)]))
//│ 								| LH_N  => ys⁷⁷}
//│ 							where
//│ 							def mappend₂₁₁₈(xs⁵⁷, ys¹³⁶) = 
//│ 								xs⁵⁷(ys¹³⁶)
//│ 							def mappend₃₁₆(xs⁴⁶, ys¹²²) = 
//│ 								xs⁴⁶(ys¹²²)
//│ 					def splitAt_lz₀₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴) = 
//│ 						let _lh_percOp_LH_P2_0⁹ = take_lz₀₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 						in let _lh_percOp_LH_P2_1⁹ = drop_lz₀₀₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 						in (fun j¹⁴ -> (fun _lh_percOp_arg3¹⁴ -> mappend₂₁₁₉(mappend₃₁₇(concat₀₁₇(_lh_percOp_LH_P2_0⁹), mappend₄₁₉(
//│ 							let h¹²⁰ = 't'
//│ 							in let t¹²⁰ = 	
//│ 								let h¹²¹ = ':'
//│ 								in let t¹²¹ = (fun ys²¹² -> ys²¹²)
//│ 								in (fun ys²¹³ -> 
//│ 									let h¹²² = h¹²¹
//│ 									in let t¹²² = mappend₄₁₁₀(t¹²¹, ys²¹³)
//│ 									in (fun ys²¹⁴ -> [LH_C h¹²² mappend₂₁₂₀(t¹²², ys²¹⁴)]))
//│ 							in (fun ys²¹⁵ -> 
//│ 								let h¹²³ = h¹²⁰
//│ 								in let t¹²³ = mappend₄₁₁₁(t¹²⁰, ys²¹⁵)
//│ 								in (fun ys²¹⁶ -> [LH_C h¹²³ mappend₂₁₂₁(t¹²³, ys²¹⁶)])), mappend₅₁₃(string_of_int⁰(j¹⁴), 
//│ 							let h¹²⁴ = 'n'
//│ 							in let t¹²⁴ = (fun ys²¹⁷ -> ys²¹⁷)
//│ 							in (fun ys²¹⁸ -> [LH_C h¹²⁴ mappend₂₁₂₂(t¹²⁴, ys²¹⁸)])))), percOp₀₁₁(j¹⁴, _lh_percOp_LH_P2_1⁹, _lh_percOp_arg3¹⁴))))
//│ 						where
//│ 						def concat₀₁₇(lss²) = 
//│ 							lss²
//│ 						def drop_lz₀₀₁(_lh_drop_lz_arg1⁴, _lh_drop_lz_arg2⁴) = 
//│ 							if (_lh_drop_lz_arg1⁴ > 0) then lazy⁰(
//│ 								let _lh_matchIdent¹⁹ = force⁰(_lh_drop_lz_arg2⁴)
//│ 								in case _lh_matchIdent¹⁹ of {
//│ 									LH_N  => [LH_N]
//│ 									| LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴))
//│ 									| _  => error⁰}) else _lh_drop_lz_arg2⁴
//│ 						def mappend₂₁₁₉(xs⁹², ys²¹⁹) = 
//│ 							xs⁹²(ys²¹⁹)
//│ 						def mappend₂₁₂₀(xs⁹⁰, ys²¹⁰) = 
//│ 							xs⁹⁰(ys²¹⁰)
//│ 						def mappend₂₁₂₁(xs⁷⁸, ys¹⁷⁸) = 
//│ 							xs⁷⁸(ys¹⁷⁸)
//│ 						def mappend₂₁₂₂(xs⁴⁸, ys¹²⁴) = 
//│ 							xs⁴⁸(ys¹²⁴)
//│ 						def mappend₃₁₇(xs¹⁰³, ys²³³) = 
//│ 							xs¹⁰³(ys²³³)
//│ 						def mappend₄₁₉(xs⁴², ys¹¹⁸) = 
//│ 							xs⁴²(ys¹¹⁸)
//│ 						def mappend₄₁₁₀(xs⁶⁶, ys¹⁴⁷) = 
//│ 							xs⁶⁶(ys¹⁴⁷)
//│ 						def mappend₄₁₁₁(xs³⁴, ys¹⁰⁰) = 
//│ 							xs³⁴(ys¹⁰⁰)
//│ 						def mappend₅₁₃(xs³³, ys⁹⁸) = 
//│ 							case xs³³ of {
//│ 								LH_C h⁶⁰ t⁶⁰ => 
//│ 									let h⁶¹ = h⁶⁰
//│ 									in let t⁶¹ = mappend₅₁₃(t⁶⁰, ys⁹⁸)
//│ 									in (fun ys⁹⁹ -> [LH_C h⁶¹ mappend₂₁₂₃(t⁶¹, ys⁹⁹)])
//│ 								| LH_N  => ys⁹⁸}
//│ 							where
//│ 							def mappend₂₁₂₃(xs¹⁸, ys⁷²) = 
//│ 								xs¹⁸(ys⁷²)
//│ 						def take_lz₀₀₁(n⁵, ls⁵) = 
//│ 							if (n⁵ > 0) then case force⁰(ls⁵) of {
//│ 								LH_C h⁷⁶ t⁷⁶ => 
//│ 									let h⁷⁷ = h⁷⁶
//│ 									in let t⁷⁷ = take_lz₀₀₁((n⁵ - 1), t⁷⁶)
//│ 									in mappend₀₁₄(h⁷⁷, concat₀₁₈(t⁷⁷))
//│ 								| LH_N  => (fun ys¹²⁵ -> ys¹²⁵)} else (fun ys¹²⁶ -> ys¹²⁶)
//│ 							where
//│ 							def concat₀₁₈(lss⁸) = 
//│ 								lss⁸
//│ 							def mappend₀₁₄(xs³⁸, ys¹⁰⁸) = 
//│ 								case xs³⁸ of {
//│ 									LH_C h⁶⁸ t⁶⁸ => 
//│ 										let h⁶⁹ = h⁶⁸
//│ 										in let t⁶⁹ = mappend₀₁₄(t⁶⁸, ys¹⁰⁸)
//│ 										in (fun ys¹⁰⁹ -> 
//│ 											let h⁷⁰ = h⁶⁹
//│ 											in let t⁷⁰ = mappend₃₁₈(t⁶⁹, ys¹⁰⁹)
//│ 											in (fun ys¹¹⁰ -> [LH_C h⁷⁰ mappend₂₁₂₄(t⁷⁰, ys¹¹⁰)]))
//│ 									| LH_N  => ys¹⁰⁸}
//│ 								where
//│ 								def mappend₂₁₂₄(xs¹⁰⁴, ys²³⁴) = 
//│ 									xs¹⁰⁴(ys²³⁴)
//│ 								def mappend₃₁₈(xs¹⁹, ys⁷³) = 
//│ 									xs¹⁹(ys⁷³)
//│ 					def take_lz₁₀₁(n⁷, ls⁷) = 
//│ 						if (n⁷ > 0) then case force⁰(ls⁷) of {
//│ 							LH_C h⁸⁶ t⁸⁶ => 
//│ 								let h⁸⁷ = h⁸⁶
//│ 								in let t⁸⁷ = take_lz₁₀₁((n⁷ - 1), t⁸⁶)
//│ 								in (fun ys¹⁵¹ -> 
//│ 									let h⁸⁸ = h⁸⁷
//│ 									in let t⁸⁸ = mappend₁₁₃(t⁸⁷, ys¹⁵¹)
//│ 									in mappend₀₁₅(h⁸⁸, concat₀₁₉(t⁸⁸)))
//│ 							| LH_N  => (fun ys¹⁵² -> ys¹⁵²)} else (fun ys¹⁵³ -> ys¹⁵³)
//│ 						where
//│ 						def concat₀₁₉(lss³) = 
//│ 							lss³
//│ 						def mappend₀₁₅(xs⁶³, ys¹⁴²) = 
//│ 							case xs⁶³ of {
//│ 								LH_C h⁸⁰ t⁸⁰ => 
//│ 									let h⁸¹ = h⁸⁰
//│ 									in let t⁸¹ = mappend₀₁₅(t⁸⁰, ys¹⁴²)
//│ 									in (fun ys¹⁴³ -> 
//│ 										let h⁸² = h⁸¹
//│ 										in let t⁸² = mappend₃₁₉(t⁸¹, ys¹⁴³)
//│ 										in (fun ys¹⁴⁴ -> [LH_C h⁸² mappend₂₁₂₅(t⁸², ys¹⁴⁴)]))
//│ 								| LH_N  => ys¹⁴²}
//│ 							where
//│ 							def mappend₂₁₂₅(xs⁸⁸, ys²⁰⁸) = 
//│ 								xs⁸⁸(ys²⁰⁸)
//│ 							def mappend₃₁₉(xs⁵⁸, ys¹³⁷) = 
//│ 								xs⁵⁸(ys¹³⁷)
//│ 						def mappend₁₁₃(xs⁹⁷, ys²²⁴) = 
//│ 							xs⁹⁷(ys²²⁴)
//│ 				def take_lz₀₁₀(n⁹, ls⁹) = 
//│ 					if (n⁹ > 0) then case force⁰(ls⁹) of {
//│ 						LH_C h¹¹⁰ t¹¹⁰ => 
//│ 							let h¹¹¹ = h¹¹⁰
//│ 							in let t¹¹¹ = take_lz₀₁₀((n⁹ - 1), t¹¹⁰)
//│ 							in mappend₀₀₁(h¹¹¹, concat₀₀₃(t¹¹¹))
//│ 						| LH_N  => (fun ys¹⁹⁰ -> ys¹⁹⁰)} else (fun ys¹⁹¹ -> ys¹⁹¹)
//│ 					where
//│ 					def concat₀₀₃(lss⁵) = 
//│ 						lss⁵
//│ 					def mappend₀₀₁(xs⁷⁵, ys¹⁷³) = 
//│ 						case xs⁷⁵ of {
//│ 							LH_C h¹⁰⁰ t¹⁰⁰ => 
//│ 								let h¹⁰¹ = h¹⁰⁰
//│ 								in let t¹⁰¹ = mappend₀₀₁(t¹⁰⁰, ys¹⁷³)
//│ 								in (fun ys¹⁷⁴ -> 
//│ 									let h¹⁰² = h¹⁰¹
//│ 									in let t¹⁰² = mappend₃₀₃(t¹⁰¹, ys¹⁷⁴)
//│ 									in (fun ys¹⁷⁵ -> [LH_C h¹⁰² mappend₂₀₁₁(t¹⁰², ys¹⁷⁵)]))
//│ 							| LH_N  => ys¹⁷³}
//│ 						where
//│ 						def mappend₂₀₁₁(xs⁹⁸, ys²²⁵) = 
//│ 							xs⁹⁸(ys²²⁵)
//│ 						def mappend₃₀₃(xs⁸⁷, ys²⁰⁰) = 
//│ 							xs⁸⁷(ys²⁰⁰)
//│ 			def take_lz₁₁₀(n⁶, ls⁶) = 
//│ 				if (n⁶ > 0) then case force⁰(ls⁶) of {
//│ 					LH_C h⁸³ t⁸³ => 
//│ 						let h⁸⁴ = h⁸³
//│ 						in let t⁸⁴ = take_lz₁₁₀((n⁶ - 1), t⁸³)
//│ 						in (fun ys¹⁴⁸ -> 
//│ 							let h⁸⁵ = h⁸⁴
//│ 							in let t⁸⁵ = mappend₁₀₁(t⁸⁴, ys¹⁴⁸)
//│ 							in mappend₀₀₂(h⁸⁵, concat₀₀₄(t⁸⁵)))
//│ 					| LH_N  => (fun ys¹⁴⁹ -> ys¹⁴⁹)} else (fun ys¹⁵⁰ -> ys¹⁵⁰)
//│ 				where
//│ 				def concat₀₀₄(lss¹¹) = 
//│ 					lss¹¹
//│ 				def mappend₀₀₂(xs¹⁰¹, ys²²⁹) = 
//│ 					case xs¹⁰¹ of {
//│ 						LH_C h¹²⁶ t¹²⁶ => 
//│ 							let h¹²⁷ = h¹²⁶
//│ 							in let t¹²⁷ = mappend₀₀₂(t¹²⁶, ys²²⁹)
//│ 							in (fun ys²³⁰ -> 
//│ 								let h¹²⁸ = h¹²⁷
//│ 								in let t¹²⁸ = mappend₃₀₄(t¹²⁷, ys²³⁰)
//│ 								in (fun ys²³¹ -> [LH_C h¹²⁸ mappend₂₀₁₂(t¹²⁸, ys²³¹)]))
//│ 						| LH_N  => ys²²⁹}
//│ 					where
//│ 					def mappend₂₀₁₂(xs¹², ys⁵⁸) = 
//│ 						xs¹²(ys⁵⁸)
//│ 					def mappend₃₀₄(xs³⁷, ys¹⁰⁷) = 
//│ 						xs³⁷(ys¹⁰⁷)
//│ 				def mappend₁₀₁(xs¹³, ys⁵⁹) = 
//│ 					xs¹³(ys⁵⁹)
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 1317 --->
//│ 	case xs³⁶ of {LH_C h⁶⁴ t⁶⁴ => let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₀₁₀(t⁶⁴, ys¹⁰³)
//│ in (fun ys¹⁰⁴ -> let h⁶⁶ = h⁶⁵
//│ in let t⁶⁶ = mappend₃₁₁(t⁶⁵, ys¹⁰⁴)
//│ in (fun ys¹⁰⁵ -> [LH_C h⁶⁶ mappend₂₁₅(t⁶⁶, ys¹⁰⁵)])) | LH_N  => ys¹⁰³}: 1837
//│ [LH_C ' ' [LH_N]]: 1318 --->
//│ 	case xs³⁶ of {LH_C h⁶⁴ t⁶⁴ => let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₀₁₀(t⁶⁴, ys¹⁰³)
//│ in (fun ys¹⁰⁴ -> let h⁶⁶ = h⁶⁵
//│ in let t⁶⁶ = mappend₃₁₁(t⁶⁵, ys¹⁰⁴)
//│ in (fun ys¹⁰⁵ -> [LH_C h⁶⁶ mappend₂₁₅(t⁶⁶, ys¹⁰⁵)])) | LH_N  => ys¹⁰³}: 1837
//│ [LH_N]: 1322 --->
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1476
//│ 	case force⁰(ls⁴) of {LH_C h⁷¹ t⁷¹ => let h⁷² = h⁷¹
//│ in let t⁷² = take_lz₁₀₀((n⁴ - 1), t⁷¹)
//│ in (fun ys¹¹¹ -> let h⁷³ = h⁷²
//│ in let t⁷³ = mappend₁₁₁(t⁷², ys¹¹¹)
//│ in mappend₀₁₂(h⁷³, concat₀₁₄(t⁷³))) | LH_N  => (fun ys¹¹² -> ys¹¹²)}: 1942
//│ 	case force⁰(ls⁸) of {LH_C h¹⁰³ t¹⁰³ => let h¹⁰⁴ = h¹⁰³
//│ in let t¹⁰⁴ = take_lz₀₀₀((n⁸ - 1), t¹⁰³)
//│ in mappend₀₁₁(h¹⁰⁴, concat₀₁₃(t¹⁰⁴)) | LH_N  => (fun ys¹⁷⁹ -> ys¹⁷⁹)}: 2821
//│ [LH_N]: 1463 --->
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1476
//│ 	case force⁰(ls⁴) of {LH_C h⁷¹ t⁷¹ => let h⁷² = h⁷¹
//│ in let t⁷² = take_lz₁₀₀((n⁴ - 1), t⁷¹)
//│ in (fun ys¹¹¹ -> let h⁷³ = h⁷²
//│ in let t⁷³ = mappend₁₁₁(t⁷², ys¹¹¹)
//│ in mappend₀₁₂(h⁷³, concat₀₁₄(t⁷³))) | LH_N  => (fun ys¹¹² -> ys¹¹²)}: 1942
//│ 	case force⁰(ls⁸) of {LH_C h¹⁰³ t¹⁰³ => let h¹⁰⁴ = h¹⁰³
//│ in let t¹⁰⁴ = take_lz₀₀₀((n⁸ - 1), t¹⁰³)
//│ in mappend₀₁₁(h¹⁰⁴, concat₀₁₃(t¹⁰⁴)) | LH_N  => (fun ys¹⁷⁹ -> ys¹⁷⁹)}: 2821
//│ [LH_N]: 1642 --->
//│ 	case xs²⁴ of {LH_C h⁵² t⁵² => let h⁵³ = h⁵²
//│ in let t⁵³ = mappend₀₀₀(t⁵², ys⁸⁰)
//│ in (fun ys⁸¹ -> let h⁵⁴ = h⁵³
//│ in let t⁵⁴ = mappend₃₀₁(t⁵³, ys⁸¹)
//│ in (fun ys⁸² -> [LH_C h⁵⁴ mappend₂₀₅(t⁵⁴, ys⁸²)])) | LH_N  => ys⁸⁰}: 1560
//│ [LH_C ' ' [LH_N]]: 1643 --->
//│ 	case xs²⁴ of {LH_C h⁵² t⁵² => let h⁵³ = h⁵²
//│ in let t⁵³ = mappend₀₀₀(t⁵², ys⁸⁰)
//│ in (fun ys⁸¹ -> let h⁵⁴ = h⁵³
//│ in let t⁵⁴ = mappend₃₀₁(t⁵³, ys⁸¹)
//│ in (fun ys⁸² -> [LH_C h⁵⁴ mappend₂₀₅(t⁵⁴, ys⁸²)])) | LH_N  => ys⁸⁰}: 1560
//│ [LH_N]: 1647 --->
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1476
//│ 	case force⁰(ls⁴) of {LH_C h⁷¹ t⁷¹ => let h⁷² = h⁷¹
//│ in let t⁷² = take_lz₁₀₀((n⁴ - 1), t⁷¹)
//│ in (fun ys¹¹¹ -> let h⁷³ = h⁷²
//│ in let t⁷³ = mappend₁₁₁(t⁷², ys¹¹¹)
//│ in mappend₀₁₂(h⁷³, concat₀₁₄(t⁷³))) | LH_N  => (fun ys¹¹² -> ys¹¹²)}: 1942
//│ 	case force⁰(ls⁸) of {LH_C h¹⁰³ t¹⁰³ => let h¹⁰⁴ = h¹⁰³
//│ in let t¹⁰⁴ = take_lz₀₀₀((n⁸ - 1), t¹⁰³)
//│ in mappend₀₁₁(h¹⁰⁴, concat₀₁₃(t¹⁰⁴)) | LH_N  => (fun ys¹⁷⁹ -> ys¹⁷⁹)}: 2821
//│ [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₁(k⁹, let _lh_ampOp_LH_P3_0⁴ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ in let _lh_ampOp_LH_P3_1⁴ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ in let _lh_ampOp_LH_P3_2⁴ = _lh_hashOp_LH_P3_2⁴
//│ in (fun _lh_ampOp_arg1⁸ -> let y⁴ = ((_lh_ampOp_arg1⁸ * 2) + 1)
//│ in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁸)
//│ in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ in (fun k¹¹ -> let _lh_matchIdent¹² = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ in _lh_matchIdent¹²(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹¹))))]: 2491 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷⁶ t⁷⁶ => let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = take_lz₀₀₁((n⁵ - 1), t⁷⁶)
//│ in mappend₀₁₄(h⁷⁷, concat₀₁₈(t⁷⁷)) | LH_N  => (fun ys¹²⁵ -> ys¹²⁵)}: 2047
//│ 	case force⁰(ls⁶) of {LH_C h⁸³ t⁸³ => let h⁸⁴ = h⁸³
//│ in let t⁸⁴ = take_lz₁₁₀((n⁶ - 1), t⁸³)
//│ in (fun ys¹⁴⁸ -> let h⁸⁵ = h⁸⁴
//│ in let t⁸⁵ = mappend₁₀₁(t⁸⁴, ys¹⁴⁸)
//│ in mappend₀₀₂(h⁸⁵, concat₀₀₄(t⁸⁵))) | LH_N  => (fun ys¹⁴⁹ -> ys¹⁴⁹)}: 2251
//│ 	case force⁰(ls⁷) of {LH_C h⁸⁶ t⁸⁶ => let h⁸⁷ = h⁸⁶
//│ in let t⁸⁷ = take_lz₁₀₁((n⁷ - 1), t⁸⁶)
//│ in (fun ys¹⁵¹ -> let h⁸⁸ = h⁸⁷
//│ in let t⁸⁸ = mappend₁₁₃(t⁸⁷, ys¹⁵¹)
//│ in mappend₀₁₅(h⁸⁸, concat₀₁₉(t⁸⁸))) | LH_N  => (fun ys¹⁵² -> ys¹⁵²)}: 2295
//│ 	case _lh_matchIdent¹⁶ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2928
//│ 	case force⁰(ls⁹) of {LH_C h¹¹⁰ t¹¹⁰ => let h¹¹¹ = h¹¹⁰
//│ in let t¹¹¹ = take_lz₀₁₀((n⁹ - 1), t¹¹⁰)
//│ in mappend₀₀₁(h¹¹¹, concat₀₀₃(t¹¹¹)) | LH_N  => (fun ys¹⁹⁰ -> ys¹⁹⁰)}: 3070
//│ 	case _lh_matchIdent¹⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3521
//│ [LH_N]: 2915 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷⁶ t⁷⁶ => let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = take_lz₀₀₁((n⁵ - 1), t⁷⁶)
//│ in mappend₀₁₄(h⁷⁷, concat₀₁₈(t⁷⁷)) | LH_N  => (fun ys¹²⁵ -> ys¹²⁵)}: 2047
//│ 	case force⁰(ls⁷) of {LH_C h⁸⁶ t⁸⁶ => let h⁸⁷ = h⁸⁶
//│ in let t⁸⁷ = take_lz₁₀₁((n⁷ - 1), t⁸⁶)
//│ in (fun ys¹⁵¹ -> let h⁸⁸ = h⁸⁷
//│ in let t⁸⁸ = mappend₁₁₃(t⁸⁷, ys¹⁵¹)
//│ in mappend₀₁₅(h⁸⁸, concat₀₁₉(t⁸⁸))) | LH_N  => (fun ys¹⁵² -> ys¹⁵²)}: 2295
//│ 	case _lh_matchIdent¹⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3521
//│ [LH_N]: 3201 --->
//│ 	case xs²³ of {LH_C h⁴⁹ t⁴⁹ => let h⁵⁰ = h⁴⁹
//│ in let t⁵⁰ = mappend₀₁₃(t⁴⁹, ys⁷⁷)
//│ in (fun ys⁷⁸ -> let h⁵¹ = h⁵⁰
//│ in let t⁵¹ = mappend₃₁₆(t⁵⁰, ys⁷⁸)
//│ in (fun ys⁷⁹ -> [LH_C h⁵¹ mappend₂₁₁₈(t⁵¹, ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1530
//│ [LH_C ' ' [LH_N]]: 3202 --->
//│ 	case xs²³ of {LH_C h⁴⁹ t⁴⁹ => let h⁵⁰ = h⁴⁹
//│ in let t⁵⁰ = mappend₀₁₃(t⁴⁹, ys⁷⁷)
//│ in (fun ys⁷⁸ -> let h⁵¹ = h⁵⁰
//│ in let t⁵¹ = mappend₃₁₆(t⁵⁰, ys⁷⁸)
//│ in (fun ys⁷⁹ -> [LH_C h⁵¹ mappend₂₁₁₈(t⁵¹, ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1530
//│ [LH_N]: 3206 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷⁶ t⁷⁶ => let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = take_lz₀₀₁((n⁵ - 1), t⁷⁶)
//│ in mappend₀₁₄(h⁷⁷, concat₀₁₈(t⁷⁷)) | LH_N  => (fun ys¹²⁵ -> ys¹²⁵)}: 2047
//│ 	case force⁰(ls⁷) of {LH_C h⁸⁶ t⁸⁶ => let h⁸⁷ = h⁸⁶
//│ in let t⁸⁷ = take_lz₁₀₁((n⁷ - 1), t⁸⁶)
//│ in (fun ys¹⁵¹ -> let h⁸⁸ = h⁸⁷
//│ in let t⁸⁸ = mappend₁₁₃(t⁸⁷, ys¹⁵¹)
//│ in mappend₀₁₅(h⁸⁸, concat₀₁₉(t⁸⁸))) | LH_N  => (fun ys¹⁵² -> ys¹⁵²)}: 2295
//│ 	case _lh_matchIdent¹⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3521
//│ [LH_N]: 3508 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷⁶ t⁷⁶ => let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = take_lz₀₀₁((n⁵ - 1), t⁷⁶)
//│ in mappend₀₁₄(h⁷⁷, concat₀₁₈(t⁷⁷)) | LH_N  => (fun ys¹²⁵ -> ys¹²⁵)}: 2047
//│ 	case force⁰(ls⁷) of {LH_C h⁸⁶ t⁸⁶ => let h⁸⁷ = h⁸⁶
//│ in let t⁸⁷ = take_lz₁₀₁((n⁷ - 1), t⁸⁶)
//│ in (fun ys¹⁵¹ -> let h⁸⁸ = h⁸⁷
//│ in let t⁸⁸ = mappend₁₁₃(t⁸⁷, ys¹⁵¹)
//│ in mappend₀₁₅(h⁸⁸, concat₀₁₉(t⁸⁸))) | LH_N  => (fun ys¹⁵² -> ys¹⁵²)}: 2295
//│ 	case _lh_matchIdent¹⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3521
//│ ------------------
//│ case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1476 --->
//│ 	[LH_N]: 1322
//│ 	[LH_N]: 1463
//│ 	[LH_N]: 1647
//│ case xs²³ of {LH_C h⁴⁹ t⁴⁹ => let h⁵⁰ = h⁴⁹
//│ in let t⁵⁰ = mappend₀₁₃(t⁴⁹, ys⁷⁷)
//│ in (fun ys⁷⁸ -> let h⁵¹ = h⁵⁰
//│ in let t⁵¹ = mappend₃₁₆(t⁵⁰, ys⁷⁸)
//│ in (fun ys⁷⁹ -> [LH_C h⁵¹ mappend₂₁₁₈(t⁵¹, ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1530 --->
//│ 	[LH_N]: 3201
//│ 	[LH_C ' ' [LH_N]]: 3202
//│ case xs²⁴ of {LH_C h⁵² t⁵² => let h⁵³ = h⁵²
//│ in let t⁵³ = mappend₀₀₀(t⁵², ys⁸⁰)
//│ in (fun ys⁸¹ -> let h⁵⁴ = h⁵³
//│ in let t⁵⁴ = mappend₃₀₁(t⁵³, ys⁸¹)
//│ in (fun ys⁸² -> [LH_C h⁵⁴ mappend₂₀₅(t⁵⁴, ys⁸²)])) | LH_N  => ys⁸⁰}: 1560 --->
//│ 	[LH_N]: 1642
//│ 	[LH_C ' ' [LH_N]]: 1643
//│ case xs³⁶ of {LH_C h⁶⁴ t⁶⁴ => let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₀₁₀(t⁶⁴, ys¹⁰³)
//│ in (fun ys¹⁰⁴ -> let h⁶⁶ = h⁶⁵
//│ in let t⁶⁶ = mappend₃₁₁(t⁶⁵, ys¹⁰⁴)
//│ in (fun ys¹⁰⁵ -> [LH_C h⁶⁶ mappend₂₁₅(t⁶⁶, ys¹⁰⁵)])) | LH_N  => ys¹⁰³}: 1837 --->
//│ 	[LH_N]: 1317
//│ 	[LH_C ' ' [LH_N]]: 1318
//│ case force⁰(ls⁴) of {LH_C h⁷¹ t⁷¹ => let h⁷² = h⁷¹
//│ in let t⁷² = take_lz₁₀₀((n⁴ - 1), t⁷¹)
//│ in (fun ys¹¹¹ -> let h⁷³ = h⁷²
//│ in let t⁷³ = mappend₁₁₁(t⁷², ys¹¹¹)
//│ in mappend₀₁₂(h⁷³, concat₀₁₄(t⁷³))) | LH_N  => (fun ys¹¹² -> ys¹¹²)}: 1942 --->
//│ 	[LH_N]: 1322
//│ 	[LH_N]: 1463
//│ 	[LH_N]: 1647
//│ case force⁰(ls⁵) of {LH_C h⁷⁶ t⁷⁶ => let h⁷⁷ = h⁷⁶
//│ in let t⁷⁷ = take_lz₀₀₁((n⁵ - 1), t⁷⁶)
//│ in mappend₀₁₄(h⁷⁷, concat₀₁₈(t⁷⁷)) | LH_N  => (fun ys¹²⁵ -> ys¹²⁵)}: 2047 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₁(k⁹, let _lh_ampOp_LH_P3_0⁴ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ in let _lh_ampOp_LH_P3_1⁴ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ in let _lh_ampOp_LH_P3_2⁴ = _lh_hashOp_LH_P3_2⁴
//│ in (fun _lh_ampOp_arg1⁸ -> let y⁴ = ((_lh_ampOp_arg1⁸ * 2) + 1)
//│ in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁸)
//│ in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ in (fun k¹¹ -> let _lh_matchIdent¹² = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ in _lh_matchIdent¹²(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹¹))))]: 2491
//│ 	[LH_N]: 2915
//│ 	[LH_N]: 3206
//│ 	[LH_N]: 3508
//│ case force⁰(ls⁶) of {LH_C h⁸³ t⁸³ => let h⁸⁴ = h⁸³
//│ in let t⁸⁴ = take_lz₁₁₀((n⁶ - 1), t⁸³)
//│ in (fun ys¹⁴⁸ -> let h⁸⁵ = h⁸⁴
//│ in let t⁸⁵ = mappend₁₀₁(t⁸⁴, ys¹⁴⁸)
//│ in mappend₀₀₂(h⁸⁵, concat₀₀₄(t⁸⁵))) | LH_N  => (fun ys¹⁴⁹ -> ys¹⁴⁹)}: 2251 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₁(k⁹, let _lh_ampOp_LH_P3_0⁴ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ in let _lh_ampOp_LH_P3_1⁴ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ in let _lh_ampOp_LH_P3_2⁴ = _lh_hashOp_LH_P3_2⁴
//│ in (fun _lh_ampOp_arg1⁸ -> let y⁴ = ((_lh_ampOp_arg1⁸ * 2) + 1)
//│ in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁸)
//│ in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ in (fun k¹¹ -> let _lh_matchIdent¹² = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ in _lh_matchIdent¹²(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹¹))))]: 2491
//│ case force⁰(ls⁷) of {LH_C h⁸⁶ t⁸⁶ => let h⁸⁷ = h⁸⁶
//│ in let t⁸⁷ = take_lz₁₀₁((n⁷ - 1), t⁸⁶)
//│ in (fun ys¹⁵¹ -> let h⁸⁸ = h⁸⁷
//│ in let t⁸⁸ = mappend₁₁₃(t⁸⁷, ys¹⁵¹)
//│ in mappend₀₁₅(h⁸⁸, concat₀₁₉(t⁸⁸))) | LH_N  => (fun ys¹⁵² -> ys¹⁵²)}: 2295 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₁(k⁹, let _lh_ampOp_LH_P3_0⁴ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ in let _lh_ampOp_LH_P3_1⁴ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ in let _lh_ampOp_LH_P3_2⁴ = _lh_hashOp_LH_P3_2⁴
//│ in (fun _lh_ampOp_arg1⁸ -> let y⁴ = ((_lh_ampOp_arg1⁸ * 2) + 1)
//│ in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁸)
//│ in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ in (fun k¹¹ -> let _lh_matchIdent¹² = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ in _lh_matchIdent¹²(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹¹))))]: 2491
//│ 	[LH_N]: 2915
//│ 	[LH_N]: 3206
//│ 	[LH_N]: 3508
//│ case force⁰(ls⁸) of {LH_C h¹⁰³ t¹⁰³ => let h¹⁰⁴ = h¹⁰³
//│ in let t¹⁰⁴ = take_lz₀₀₀((n⁸ - 1), t¹⁰³)
//│ in mappend₀₁₁(h¹⁰⁴, concat₀₁₃(t¹⁰⁴)) | LH_N  => (fun ys¹⁷⁹ -> ys¹⁷⁹)}: 2821 --->
//│ 	[LH_N]: 1322
//│ 	[LH_N]: 1463
//│ 	[LH_N]: 1647
//│ case _lh_matchIdent¹⁶ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2928 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₁(k⁹, let _lh_ampOp_LH_P3_0⁴ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ in let _lh_ampOp_LH_P3_1⁴ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ in let _lh_ampOp_LH_P3_2⁴ = _lh_hashOp_LH_P3_2⁴
//│ in (fun _lh_ampOp_arg1⁸ -> let y⁴ = ((_lh_ampOp_arg1⁸ * 2) + 1)
//│ in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁸)
//│ in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ in (fun k¹¹ -> let _lh_matchIdent¹² = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ in _lh_matchIdent¹²(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹¹))))]: 2491
//│ case force⁰(ls⁹) of {LH_C h¹¹⁰ t¹¹⁰ => let h¹¹¹ = h¹¹⁰
//│ in let t¹¹¹ = take_lz₀₁₀((n⁹ - 1), t¹¹⁰)
//│ in mappend₀₀₁(h¹¹¹, concat₀₀₃(t¹¹¹)) | LH_N  => (fun ys¹⁹⁰ -> ys¹⁹⁰)}: 3070 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₁(k⁹, let _lh_ampOp_LH_P3_0⁴ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ in let _lh_ampOp_LH_P3_1⁴ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ in let _lh_ampOp_LH_P3_2⁴ = _lh_hashOp_LH_P3_2⁴
//│ in (fun _lh_ampOp_arg1⁸ -> let y⁴ = ((_lh_ampOp_arg1⁸ * 2) + 1)
//│ in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁸)
//│ in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ in (fun k¹¹ -> let _lh_matchIdent¹² = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ in _lh_matchIdent¹²(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹¹))))]: 2491
//│ case _lh_matchIdent¹⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 3521 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp₀₀₁(k⁹, let _lh_ampOp_LH_P3_0⁴ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ in let _lh_ampOp_LH_P3_1⁴ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ in let _lh_ampOp_LH_P3_2⁴ = _lh_hashOp_LH_P3_2⁴
//│ in (fun _lh_ampOp_arg1⁸ -> let y⁴ = ((_lh_ampOp_arg1⁸ * 2) + 1)
//│ in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁸)
//│ in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ in (fun k¹¹ -> let _lh_matchIdent¹² = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ in _lh_matchIdent¹²(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹¹))))]: 2491
//│ 	[LH_N]: 2915
//│ 	[LH_N]: 3206
//│ 	[LH_N]: 3508
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_N]: 1317 --->
//│ 	case xs³⁶ of {LH_C h⁶⁴ t⁶⁴ => let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₀₁₀(t⁶⁴, ys¹⁰³)
//│ in (fun ys¹⁰⁴ -> let h⁶⁶ = h⁶⁵
//│ in let t⁶⁶ = mappend₃₁₁(t⁶⁵, ys¹⁰⁴)
//│ in (fun ys¹⁰⁵ -> [LH_C h⁶⁶ mappend₂₁₅(t⁶⁶, ys¹⁰⁵)])) | LH_N  => ys¹⁰³}: 1837
//│ [LH_C ' ' [LH_N]]: 1318 --->
//│ 	case xs³⁶ of {LH_C h⁶⁴ t⁶⁴ => let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₀₁₀(t⁶⁴, ys¹⁰³)
//│ in (fun ys¹⁰⁴ -> let h⁶⁶ = h⁶⁵
//│ in let t⁶⁶ = mappend₃₁₁(t⁶⁵, ys¹⁰⁴)
//│ in (fun ys¹⁰⁵ -> [LH_C h⁶⁶ mappend₂₁₅(t⁶⁶, ys¹⁰⁵)])) | LH_N  => ys¹⁰³}: 1837
//│ [LH_N]: 1642 --->
//│ 	case xs²⁴ of {LH_C h⁵² t⁵² => let h⁵³ = h⁵²
//│ in let t⁵³ = mappend₀₀₀(t⁵², ys⁸⁰)
//│ in (fun ys⁸¹ -> let h⁵⁴ = h⁵³
//│ in let t⁵⁴ = mappend₃₀₁(t⁵³, ys⁸¹)
//│ in (fun ys⁸² -> [LH_C h⁵⁴ mappend₂₀₅(t⁵⁴, ys⁸²)])) | LH_N  => ys⁸⁰}: 1560
//│ [LH_C ' ' [LH_N]]: 1643 --->
//│ 	case xs²⁴ of {LH_C h⁵² t⁵² => let h⁵³ = h⁵²
//│ in let t⁵³ = mappend₀₀₀(t⁵², ys⁸⁰)
//│ in (fun ys⁸¹ -> let h⁵⁴ = h⁵³
//│ in let t⁵⁴ = mappend₃₀₁(t⁵³, ys⁸¹)
//│ in (fun ys⁸² -> [LH_C h⁵⁴ mappend₂₀₅(t⁵⁴, ys⁸²)])) | LH_N  => ys⁸⁰}: 1560
//│ [LH_N]: 3201 --->
//│ 	case xs²³ of {LH_C h⁴⁹ t⁴⁹ => let h⁵⁰ = h⁴⁹
//│ in let t⁵⁰ = mappend₀₁₃(t⁴⁹, ys⁷⁷)
//│ in (fun ys⁷⁸ -> let h⁵¹ = h⁵⁰
//│ in let t⁵¹ = mappend₃₁₆(t⁵⁰, ys⁷⁸)
//│ in (fun ys⁷⁹ -> [LH_C h⁵¹ mappend₂₁₁₈(t⁵¹, ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1530
//│ [LH_C ' ' [LH_N]]: 3202 --->
//│ 	case xs²³ of {LH_C h⁴⁹ t⁴⁹ => let h⁵⁰ = h⁴⁹
//│ in let t⁵⁰ = mappend₀₁₃(t⁴⁹, ys⁷⁷)
//│ in (fun ys⁷⁸ -> let h⁵¹ = h⁵⁰
//│ in let t⁵¹ = mappend₃₁₆(t⁵⁰, ys⁷⁸)
//│ in (fun ys⁷⁹ -> [LH_C h⁵¹ mappend₂₁₁₈(t⁵¹, ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1530
//│ ------------------
//│ case xs²³ of {LH_C h⁴⁹ t⁴⁹ => let h⁵⁰ = h⁴⁹
//│ in let t⁵⁰ = mappend₀₁₃(t⁴⁹, ys⁷⁷)
//│ in (fun ys⁷⁸ -> let h⁵¹ = h⁵⁰
//│ in let t⁵¹ = mappend₃₁₆(t⁵⁰, ys⁷⁸)
//│ in (fun ys⁷⁹ -> [LH_C h⁵¹ mappend₂₁₁₈(t⁵¹, ys⁷⁹)])) | LH_N  => ys⁷⁷}: 1530 --->
//│ 	[LH_N]: 3201
//│ 	[LH_C ' ' [LH_N]]: 3202
//│ case xs²⁴ of {LH_C h⁵² t⁵² => let h⁵³ = h⁵²
//│ in let t⁵³ = mappend₀₀₀(t⁵², ys⁸⁰)
//│ in (fun ys⁸¹ -> let h⁵⁴ = h⁵³
//│ in let t⁵⁴ = mappend₃₀₁(t⁵³, ys⁸¹)
//│ in (fun ys⁸² -> [LH_C h⁵⁴ mappend₂₀₅(t⁵⁴, ys⁸²)])) | LH_N  => ys⁸⁰}: 1560 --->
//│ 	[LH_N]: 1642
//│ 	[LH_C ' ' [LH_N]]: 1643
//│ case xs³⁶ of {LH_C h⁶⁴ t⁶⁴ => let h⁶⁵ = h⁶⁴
//│ in let t⁶⁵ = mappend₀₁₀(t⁶⁴, ys¹⁰³)
//│ in (fun ys¹⁰⁴ -> let h⁶⁶ = h⁶⁵
//│ in let t⁶⁶ = mappend₃₁₁(t⁶⁵, ys¹⁰⁴)
//│ in (fun ys¹⁰⁵ -> [LH_C h⁶⁶ mappend₂₁₅(t⁶⁶, ys¹⁰⁵)])) | LH_N  => ys¹⁰³}: 1837 --->
//│ 	[LH_N]: 1317
//│ 	[LH_C ' ' [LH_N]]: 1318
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPiDigits_nofib₀₀₀(primId⁰(5000))
//│ def testPiDigits_nofib₀₀₀(_lh_testPiDigits_nofib_arg1²) = 
//│ 	pidgits₀₀₀(_lh_testPiDigits_nofib_arg1²)
//│ 	where
//│ 	def pidgits₀₀₀(_lh_pidgits_arg1²) = 
//│ 		percOp₀₀₀(0, hashOp₀₀₂(0, 
//│ 			let _lh_ampOp_LH_P3_0⁸ = 1
//│ 			in let _lh_ampOp_LH_P3_1⁸ = 0
//│ 			in let _lh_ampOp_LH_P3_2⁸ = 1
//│ 			in (fun _lh_ampOp_arg1¹⁵ -> 
//│ 				let y⁸ = ((_lh_ampOp_arg1¹⁵ * 2) + 1)
//│ 				in let _lh_hashOp_LH_P3_0¹¹ = (_lh_ampOp_LH_P3_0⁸ * _lh_ampOp_arg1¹⁵)
//│ 				in let _lh_hashOp_LH_P3_1¹¹ = ((_lh_ampOp_LH_P3_1⁸ + (_lh_ampOp_LH_P3_0⁸ * 2)) * y⁸)
//│ 				in let _lh_hashOp_LH_P3_2¹¹ = (_lh_ampOp_LH_P3_2⁸ * y⁸)
//│ 				in (fun k²³ -> 
//│ 					let _lh_matchIdent²⁷ = divmod₀₀₀(((_lh_hashOp_LH_P3_0¹¹ * 3) + _lh_hashOp_LH_P3_1¹¹), _lh_hashOp_LH_P3_2¹¹)
//│ 					in _lh_matchIdent²⁷(_lh_hashOp_LH_P3_0¹¹, _lh_hashOp_LH_P3_1¹¹, _lh_hashOp_LH_P3_2¹¹, k²³)))), _lh_pidgits_arg1²)
//│ 		where
//│ 		def divmod₀₀₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 			let _lh_hashOp_LH_P2_0² = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 			in let _lh_hashOp_LH_P2_1² = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 			in (fun _lh_hashOp_LH_P3_0⁸ -> (fun _lh_hashOp_LH_P3_1⁸ -> (fun _lh_hashOp_LH_P3_2⁸ -> (fun k¹⁸ -> if ((_lh_hashOp_LH_P3_0⁸ > _lh_hashOp_LH_P3_1⁸) || ((_lh_hashOp_LH_P2_1² + _lh_hashOp_LH_P3_0⁸) >= _lh_hashOp_LH_P3_2⁸)) then force⁰(hashOp₀₀₀(k¹⁸, 
//│ 				let _lh_ampOp_LH_P3_0⁶ = _lh_hashOp_LH_P3_0⁸
//│ 				in let _lh_ampOp_LH_P3_1⁶ = _lh_hashOp_LH_P3_1⁸
//│ 				in let _lh_ampOp_LH_P3_2⁶ = _lh_hashOp_LH_P3_2⁸
//│ 				in (fun _lh_ampOp_arg1¹² -> 
//│ 					let y⁶ = ((_lh_ampOp_arg1¹² * 2) + 1)
//│ 					in let _lh_hashOp_LH_P3_0⁹ = (_lh_ampOp_LH_P3_0⁶ * _lh_ampOp_arg1¹²)
//│ 					in let _lh_hashOp_LH_P3_1⁹ = ((_lh_ampOp_LH_P3_1⁶ + (_lh_ampOp_LH_P3_0⁶ * 2)) * y⁶)
//│ 					in let _lh_hashOp_LH_P3_2⁹ = (_lh_ampOp_LH_P3_2⁶ * y⁶)
//│ 					in (fun k¹⁹ -> 
//│ 						let _lh_matchIdent²³ = divmod₀₀₀(((_lh_hashOp_LH_P3_0⁹ * 3) + _lh_hashOp_LH_P3_1⁹), _lh_hashOp_LH_P3_2⁹)
//│ 						in _lh_matchIdent²³(_lh_hashOp_LH_P3_0⁹, _lh_hashOp_LH_P3_1⁹, _lh_hashOp_LH_P3_2⁹, k¹⁹))))) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0²) hashOp₀₀₁(k¹⁸, 
//│ 				let _lh_ampOp_LH_P3_0⁷ = (_lh_hashOp_LH_P3_0⁸ * 10)
//│ 				in let _lh_ampOp_LH_P3_1⁷ = ((_lh_hashOp_LH_P3_1⁸ - (_lh_hashOp_LH_P2_0² * _lh_hashOp_LH_P3_2⁸)) * 10)
//│ 				in let _lh_ampOp_LH_P3_2⁷ = _lh_hashOp_LH_P3_2⁸
//│ 				in (fun _lh_ampOp_arg1¹³ -> 
//│ 					let y⁷ = ((_lh_ampOp_arg1¹³ * 2) + 1)
//│ 					in let _lh_hashOp_LH_P3_0¹⁰ = (_lh_ampOp_LH_P3_0⁷ * _lh_ampOp_arg1¹³)
//│ 					in let _lh_hashOp_LH_P3_1¹⁰ = ((_lh_ampOp_LH_P3_1⁷ + (_lh_ampOp_LH_P3_0⁷ * 2)) * y⁷)
//│ 					in let _lh_hashOp_LH_P3_2¹⁰ = (_lh_ampOp_LH_P3_2⁷ * y⁷)
//│ 					in (fun k²⁰ -> 
//│ 						let _lh_matchIdent²⁴ = divmod₀₀₀(((_lh_hashOp_LH_P3_0¹⁰ * 3) + _lh_hashOp_LH_P3_1¹⁰), _lh_hashOp_LH_P3_2¹⁰)
//│ 						in _lh_matchIdent²⁴(_lh_hashOp_LH_P3_0¹⁰, _lh_hashOp_LH_P3_1¹⁰, _lh_hashOp_LH_P3_2¹⁰, k²⁰))))]))))
//│ 			where
//│ 			def hashOp₀₀₀(_lh_hashOp_arg1⁵, _lh_hashOp_arg2⁵) = 
//│ 				lazy⁰(
//│ 					let k²⁴ = (_lh_hashOp_arg1⁵ + 1)
//│ 					in let _lh_matchIdent²⁹ = ampOp₀₀₀(k²⁴, _lh_hashOp_arg2⁵)
//│ 					in _lh_matchIdent²⁹(k²⁴))
//│ 				where
//│ 				def ampOp₀₀₀(_lh_ampOp_arg1¹⁰, _lh_ampOp_arg2⁴) = 
//│ 					_lh_ampOp_arg2⁴(_lh_ampOp_arg1¹⁰)
//│ 			def hashOp₀₀₁(_lh_hashOp_arg1⁴, _lh_hashOp_arg2⁴) = 
//│ 				lazy⁰(
//│ 					let k²² = (_lh_hashOp_arg1⁴ + 1)
//│ 					in let _lh_matchIdent²⁶ = ampOp₀₀₁(k²², _lh_hashOp_arg2⁴)
//│ 					in _lh_matchIdent²⁶(k²²))
//│ 				where
//│ 				def ampOp₀₀₁(_lh_ampOp_arg1¹¹, _lh_ampOp_arg2⁵) = 
//│ 					_lh_ampOp_arg2⁵(_lh_ampOp_arg1¹¹)
//│ 		def hashOp₀₀₂(_lh_hashOp_arg1⁶, _lh_hashOp_arg2⁶) = 
//│ 			lazy⁰(
//│ 				let k²⁵ = (_lh_hashOp_arg1⁶ + 1)
//│ 				in let _lh_matchIdent³⁰ = ampOp₀₀₂(k²⁵, _lh_hashOp_arg2⁶)
//│ 				in _lh_matchIdent³⁰(k²⁵))
//│ 			where
//│ 			def ampOp₀₀₂(_lh_ampOp_arg1¹⁴, _lh_ampOp_arg2⁶) = 
//│ 				_lh_ampOp_arg2⁶(_lh_ampOp_arg1¹⁴)
//│ 		def percOp₀₀₀(_lh_percOp_arg1⁷, _lh_percOp_arg2⁷, _lh_percOp_arg3²²) = 
//│ 			if (_lh_percOp_arg1⁷ >= _lh_percOp_arg3²²) then [LH_N] else 
//│ 				let k²⁶ = (_lh_percOp_arg1⁷ + 10)
//│ 				in let j²² = min₀₀₀(_lh_percOp_arg3²², k²⁶)
//│ 				in let _lh_matchIdent³¹ = if (k²⁶ > _lh_percOp_arg3²²) then 
//│ 					let _lh_percOp_LH_P2_0¹⁵ = mappend₁₀₀(take_lz₁₁₀((_lh_percOp_arg3²² % 10), _lh_percOp_arg2⁷), replicate₀₁₀((k²⁶ - _lh_percOp_arg3²²), 
//│ 						let h¹⁸⁷ = ' '
//│ 						in let t¹⁸⁷ = (fun ys³⁹⁶ -> ys³⁹⁶)
//│ 						in (fun ys³⁹³ -> 
//│ 							let h¹⁸⁸ = h¹⁸⁷
//│ 							in let t¹⁸⁸ = mappend₀₀₀(t¹⁸⁷, ys³⁹³)
//│ 							in (fun ys³⁹⁴ -> 
//│ 								let h¹⁸⁹ = h¹⁸⁸
//│ 								in let t¹⁸⁹ = mappend₃₀₁(t¹⁸⁸, ys³⁹⁴)
//│ 								in (fun ys³⁹⁵ -> [LH_C h¹⁸⁹ mappend₂₀₅(t¹⁸⁹, ys³⁹⁵)])))))
//│ 					in let _lh_percOp_LH_P2_1¹⁵ = lazy⁰([LH_N])
//│ 					in (fun j²³ -> (fun _lh_percOp_arg3²³ -> mappend₂₀₀(mappend₃₀₀(concat₀₀₀(_lh_percOp_LH_P2_0¹⁵), mappend₄₀₀(
//│ 						let h¹⁹⁰ = 't'
//│ 						in let t¹⁹⁰ = 	
//│ 							let h¹⁹¹ = ':'
//│ 							in let t¹⁹¹ = (fun ys³⁹⁷ -> ys³⁹⁷)
//│ 							in (fun ys³⁹⁸ -> 
//│ 								let h¹⁹² = h¹⁹¹
//│ 								in let t¹⁹² = mappend₄₀₁(t¹⁹¹, ys³⁹⁸)
//│ 								in (fun ys³⁹⁹ -> [LH_C h¹⁹² mappend₂₀₁(t¹⁹², ys³⁹⁹)]))
//│ 						in (fun ys⁴⁰⁰ -> 
//│ 							let h¹⁹³ = h¹⁹⁰
//│ 							in let t¹⁹³ = mappend₄₀₂(t¹⁹⁰, ys⁴⁰⁰)
//│ 							in (fun ys⁴⁰¹ -> [LH_C h¹⁹³ mappend₂₀₂(t¹⁹³, ys⁴⁰¹)])), mappend₅₀₀(string_of_int⁰(j²³), 
//│ 						let h¹⁹⁴ = 'n'
//│ 						in let t¹⁹⁴ = (fun ys⁴⁰² -> ys⁴⁰²)
//│ 						in (fun ys⁴⁰³ -> [LH_C h¹⁹⁴ mappend₂₀₃(t¹⁹⁴, ys⁴⁰³)])))), percOp₀₁₀(j²³, _lh_percOp_LH_P2_1¹⁵, _lh_percOp_arg3²³)))) else splitAt_lz₀₁₀(10, _lh_percOp_arg2⁷)
//│ 				in _lh_matchIdent³¹(j²², _lh_percOp_arg3²²)
//│ 			where
//│ 			def concat₀₀₀(lss²¹) = 
//│ 				lss²¹
//│ 			def mappend₁₀₀(xs¹⁰⁸, ys²³⁸) = 
//│ 				xs¹⁰⁸(ys²³⁸)
//│ 			def mappend₂₀₀(xs¹⁵³, ys³³⁵) = 
//│ 				xs¹⁵³(ys³³⁵)
//│ 			def mappend₂₀₁(xs¹⁸⁷, ys⁴⁰⁴) = 
//│ 				xs¹⁸⁷(ys⁴⁰⁴)
//│ 			def mappend₂₀₂(xs¹⁶⁵, ys³⁶¹) = 
//│ 				xs¹⁶⁵(ys³⁶¹)
//│ 			def mappend₂₀₃(xs¹⁷⁸, ys³⁷⁸) = 
//│ 				xs¹⁷⁸(ys³⁷⁸)
//│ 			def mappend₃₀₀(xs¹⁷⁹, ys³⁷⁹) = 
//│ 				xs¹⁷⁹(ys³⁷⁹)
//│ 			def mappend₄₀₀(xs¹³⁷, ys³⁰⁴) = 
//│ 				xs¹³⁷(ys³⁰⁴)
//│ 			def mappend₄₀₁(xs¹²⁸, ys²⁷⁴) = 
//│ 				xs¹²⁸(ys²⁷⁴)
//│ 			def mappend₄₀₂(xs¹⁷⁵, ys³⁷⁵) = 
//│ 				xs¹⁷⁵(ys³⁷⁵)
//│ 			def mappend₅₀₀(xs¹⁸¹, ys³⁸¹) = 
//│ 				case xs¹⁸¹ of {
//│ 					LH_C h⁷⁴ t⁷⁴ => 
//│ 						let h¹⁸¹ = h⁷⁴
//│ 						in let t¹⁸¹ = mappend₅₀₀(t⁷⁴, ys³⁸¹)
//│ 						in (fun ys³⁸² -> [LH_C h¹⁸¹ mappend₂₀₄(t¹⁸¹, ys³⁸²)])
//│ 					| LH_N  => ys³⁸¹}
//│ 				where
//│ 				def mappend₂₀₄(xs¹⁹⁴, ys⁴¹¹) = 
//│ 					xs¹⁹⁴(ys⁴¹¹)
//│ 			def min₀₀₀(_lh_min_arg1⁵, _lh_min_arg2⁵) = 
//│ 				if (_lh_min_arg1⁵ > _lh_min_arg2⁵) then _lh_min_arg2⁵ else _lh_min_arg1⁵
//│ 			def percOp₀₁₀(_lh_percOp_arg1⁶, _lh_percOp_arg2⁶, _lh_percOp_arg3²⁰) = 
//│ 				if (_lh_percOp_arg1⁶ >= _lh_percOp_arg3²⁰) then [LH_N] else 
//│ 					let k²¹ = (_lh_percOp_arg1⁶ + 10)
//│ 					in let j²⁰ = min₀₁₀(_lh_percOp_arg3²⁰, k²¹)
//│ 					in let _lh_matchIdent²⁵ = if (k²¹ > _lh_percOp_arg3²⁰) then 
//│ 						let _lh_percOp_LH_P2_0¹⁴ = mappend₁₁₀(take_lz₁₀₀((_lh_percOp_arg3²⁰ % 10), _lh_percOp_arg2⁶), replicate₀₀₀((k²¹ - _lh_percOp_arg3²⁰), 
//│ 							let h¹⁶⁸ = ' '
//│ 							in let t¹⁶⁸ = (fun ys³⁴² -> ys³⁴²)
//│ 							in (fun ys³³⁹ -> 
//│ 								let h¹⁶⁹ = h¹⁶⁸
//│ 								in let t¹⁶⁹ = mappend₀₁₀(t¹⁶⁸, ys³³⁹)
//│ 								in (fun ys³⁴⁰ -> 
//│ 									let h¹⁷⁰ = h¹⁶⁹
//│ 									in let t¹⁷⁰ = mappend₃₁₁(t¹⁶⁹, ys³⁴⁰)
//│ 									in (fun ys³⁴¹ -> [LH_C h¹⁷⁰ mappend₂₁₅(t¹⁷⁰, ys³⁴¹)])))))
//│ 						in let _lh_percOp_LH_P2_1¹⁴ = lazy⁰([LH_N])
//│ 						in (fun j²¹ -> (fun _lh_percOp_arg3²¹ -> mappend₂₁₀(mappend₃₁₀(concat₀₁₀(_lh_percOp_LH_P2_0¹⁴), mappend₄₁₀(
//│ 							let h¹⁷¹ = 't'
//│ 							in let t¹⁷¹ = 	
//│ 								let h¹⁷² = ':'
//│ 								in let t¹⁷² = (fun ys³⁴³ -> ys³⁴³)
//│ 								in (fun ys³⁴⁴ -> 
//│ 									let h¹⁷³ = h¹⁷²
//│ 									in let t¹⁷³ = mappend₄₁₁(t¹⁷², ys³⁴⁴)
//│ 									in (fun ys³⁴⁵ -> [LH_C h¹⁷³ mappend₂₁₁(t¹⁷³, ys³⁴⁵)]))
//│ 							in (fun ys³⁴⁶ -> 
//│ 								let h¹⁷⁴ = h¹⁷¹
//│ 								in let t¹⁷⁴ = mappend₄₁₂(t¹⁷¹, ys³⁴⁶)
//│ 								in (fun ys³⁴⁷ -> [LH_C h¹⁷⁴ mappend₂₁₂(t¹⁷⁴, ys³⁴⁷)])), mappend₅₁₀(string_of_int⁰(j²¹), 
//│ 							let h¹⁷⁵ = 'n'
//│ 							in let t¹⁷⁵ = (fun ys³⁴⁸ -> ys³⁴⁸)
//│ 							in (fun ys³⁴⁹ -> [LH_C h¹⁷⁵ mappend₂₁₃(t¹⁷⁵, ys³⁴⁹)])))), percOp₀₁₀(j²¹, _lh_percOp_LH_P2_1¹⁴, _lh_percOp_arg3²¹)))) else splitAt_lz₀₀₀(10, _lh_percOp_arg2⁶)
//│ 					in _lh_matchIdent²⁵(j²⁰, _lh_percOp_arg3²⁰)
//│ 				where
//│ 				def concat₀₁₀(lss²⁵) = 
//│ 					lss²⁵
//│ 				def mappend₁₁₀(xs¹⁴³, ys³¹¹) = 
//│ 					xs¹⁴³(ys³¹¹)
//│ 				def mappend₂₁₀(xs¹⁸⁹, ys⁴⁰⁶) = 
//│ 					xs¹⁸⁹(ys⁴⁰⁶)
//│ 				def mappend₂₁₁(xs¹⁴⁴, ys³¹²) = 
//│ 					xs¹⁴⁴(ys³¹²)
//│ 				def mappend₂₁₂(xs¹²⁹, ys²⁷⁵) = 
//│ 					xs¹²⁹(ys²⁷⁵)
//│ 				def mappend₂₁₃(xs¹⁵⁰, ys³³²) = 
//│ 					xs¹⁵⁰(ys³³²)
//│ 				def mappend₃₁₀(xs¹²³, ys²⁶⁴) = 
//│ 					xs¹²³(ys²⁶⁴)
//│ 				def mappend₄₁₀(xs¹⁷², ys³⁶⁹) = 
//│ 					xs¹⁷²(ys³⁶⁹)
//│ 				def mappend₄₁₁(xs¹⁷⁷, ys³⁷⁷) = 
//│ 					xs¹⁷⁷(ys³⁷⁷)
//│ 				def mappend₄₁₂(xs¹¹³, ys²⁴³) = 
//│ 					xs¹¹³(ys²⁴³)
//│ 				def mappend₅₁₀(xs¹³⁸, ys³⁰⁵) = 
//│ 					case xs¹³⁸ of {
//│ 						LH_C h⁶² t⁶² => 
//│ 							let h¹⁵⁷ = h⁶²
//│ 							in let t¹⁵⁷ = mappend₅₁₀(t⁶², ys³⁰⁵)
//│ 							in (fun ys³⁰⁶ -> [LH_C h¹⁵⁷ mappend₂₁₄(t¹⁵⁷, ys³⁰⁶)])
//│ 						| LH_N  => ys³⁰⁵}
//│ 					where
//│ 					def mappend₂₁₄(xs¹²¹, ys²⁶⁰) = 
//│ 						xs¹²¹(ys²⁶⁰)
//│ 				def min₀₁₀(_lh_min_arg1⁶, _lh_min_arg2⁶) = 
//│ 					if (_lh_min_arg1⁶ > _lh_min_arg2⁶) then _lh_min_arg2⁶ else _lh_min_arg1⁶
//│ 				def replicate₀₀₀(_lh_replicate_arg1⁶, _lh_replicate_arg2⁶) = 
//│ 					if (_lh_replicate_arg1⁶ > 0) then 
//│ 						let h¹⁷⁶ = _lh_replicate_arg2⁶
//│ 						in let t¹⁷⁶ = replicate₀₀₀((_lh_replicate_arg1⁶ - 1), _lh_replicate_arg2⁶)
//│ 						in mappend₀₁₀(h¹⁷⁶, concat₀₁₁(t¹⁷⁶)) else (fun ys³⁵³ -> ys³⁵³)
//│ 					where
//│ 					def concat₀₁₁(lss²⁹) = 
//│ 						lss²⁹
//│ 					def mappend₀₁₀(xs¹⁸⁸, ys⁴⁰⁵) = 
//│ 						xs¹⁸⁸(ys⁴⁰⁵)
//│ 						where
//│ 						def mappend₂₁₅(xs¹⁴⁵, ys³¹³) = 
//│ 							xs¹⁴⁵(ys³¹³)
//│ 						def mappend₃₁₁(xs¹⁸³, ys³⁸⁵) = 
//│ 							xs¹⁸³(ys³⁸⁵)
//│ 				def splitAt_lz₀₀₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷) = 
//│ 					let _lh_percOp_LH_P2_0¹³ = take_lz₀₀₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷)
//│ 					in let _lh_percOp_LH_P2_1¹³ = drop_lz₀₀₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷)
//│ 					in (fun j¹⁹ -> (fun _lh_percOp_arg3¹⁹ -> mappend₂₁₆(mappend₃₁₂(concat₀₁₂(_lh_percOp_LH_P2_0¹³), mappend₄₁₃(
//│ 						let h¹⁶³ = 't'
//│ 						in let t¹⁶³ = 	
//│ 							let h¹⁶⁴ = ':'
//│ 							in let t¹⁶⁴ = (fun ys³²¹ -> ys³²¹)
//│ 							in (fun ys³²² -> 
//│ 								let h¹⁶⁵ = h¹⁶⁴
//│ 								in let t¹⁶⁵ = mappend₄₁₄(t¹⁶⁴, ys³²²)
//│ 								in (fun ys³²³ -> [LH_C h¹⁶⁵ mappend₂₁₇(t¹⁶⁵, ys³²³)]))
//│ 						in (fun ys³²⁴ -> 
//│ 							let h¹⁶⁶ = h¹⁶³
//│ 							in let t¹⁶⁶ = mappend₄₁₅(t¹⁶³, ys³²⁴)
//│ 							in (fun ys³²⁵ -> [LH_C h¹⁶⁶ mappend₂₁₈(t¹⁶⁶, ys³²⁵)])), mappend₅₁₁(string_of_int⁰(j¹⁹), 
//│ 						let h¹⁶⁷ = 'n'
//│ 						in let t¹⁶⁷ = (fun ys³²⁶ -> ys³²⁶)
//│ 						in (fun ys³²⁷ -> [LH_C h¹⁶⁷ mappend₂₁₉(t¹⁶⁷, ys³²⁷)])))), percOp₀₁₀(j¹⁹, _lh_percOp_LH_P2_1¹³, _lh_percOp_arg3¹⁹))))
//│ 					where
//│ 					def concat₀₁₂(lss²³) = 
//│ 						lss²³
//│ 					def drop_lz₀₀₀(_lh_drop_lz_arg1⁶, _lh_drop_lz_arg2⁶) = 
//│ 						if (_lh_drop_lz_arg1⁶ > 0) then lazy⁰(
//│ 							let _lh_matchIdent²² = force⁰(_lh_drop_lz_arg2⁶)
//│ 							in case _lh_matchIdent²² of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz₀₀₀((_lh_drop_lz_arg1⁶ - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2⁶
//│ 					def mappend₂₁₆(xs¹⁶⁶, ys³⁶²) = 
//│ 						xs¹⁶⁶(ys³⁶²)
//│ 					def mappend₂₁₇(xs¹²⁴, ys²⁶⁵) = 
//│ 						xs¹²⁴(ys²⁶⁵)
//│ 					def mappend₂₁₈(xs¹⁰⁶, ys²³⁶) = 
//│ 						xs¹⁰⁶(ys²³⁶)
//│ 					def mappend₂₁₉(xs¹³¹, ys²⁷⁷) = 
//│ 						xs¹³¹(ys²⁷⁷)
//│ 					def mappend₃₁₂(xs¹⁶⁰, ys³⁵⁶) = 
//│ 						xs¹⁶⁰(ys³⁵⁶)
//│ 					def mappend₄₁₃(xs¹⁴⁰, ys³⁰⁸) = 
//│ 						xs¹⁴⁰(ys³⁰⁸)
//│ 					def mappend₄₁₄(xs¹⁰⁷, ys²³⁷) = 
//│ 						xs¹⁰⁷(ys²³⁷)
//│ 					def mappend₄₁₅(xs¹⁵⁴, ys³³⁶) = 
//│ 						xs¹⁵⁴(ys³³⁶)
//│ 					def mappend₅₁₁(xs¹⁸², ys³⁸³) = 
//│ 						case xs¹⁸² of {
//│ 							LH_C h⁷⁸ t⁷⁸ => 
//│ 								let h¹⁸² = h⁷⁸
//│ 								in let t¹⁸² = mappend₅₁₁(t⁷⁸, ys³⁸³)
//│ 								in (fun ys³⁸⁴ -> [LH_C h¹⁸² mappend₂₁₁₀(t¹⁸², ys³⁸⁴)])
//│ 							| LH_N  => ys³⁸³}
//│ 						where
//│ 						def mappend₂₁₁₀(xs¹⁵¹, ys³³³) = 
//│ 							xs¹⁵¹(ys³³³)
//│ 					def take_lz₀₀₀(n¹⁰, ls¹⁰) = 
//│ 						if (n¹⁰ > 0) then case force⁰(ls¹⁰) of {
//│ 							LH_C h¹⁰³ t¹⁰³ => 
//│ 								let h¹³¹ = h¹⁰³
//│ 								in let t¹³¹ = take_lz₀₀₀((n¹⁰ - 1), t¹⁰³)
//│ 								in mappend₀₁₁(h¹³¹, concat₀₁₃(t¹³¹))
//│ 							| LH_N  => (fun ys²⁵¹ -> ys²⁵¹)} else (fun ys²⁵² -> ys²⁵²)
//│ 						where
//│ 						def concat₀₁₃(lss¹⁷) = 
//│ 							lss¹⁷
//│ 						def mappend₀₁₁(xs¹¹⁹, ys²⁵⁶) = 
//│ 							case xs¹¹⁹ of {
//│ 								LH_C h⁹⁷ t⁹⁷ => 
//│ 									let h¹³⁴ = h⁹⁷
//│ 									in let t¹³⁴ = mappend₀₁₁(t⁹⁷, ys²⁵⁶)
//│ 									in (fun ys²⁵⁷ -> 
//│ 										let h¹³⁵ = h¹³⁴
//│ 										in let t¹³⁵ = mappend₃₁₃(t¹³⁴, ys²⁵⁷)
//│ 										in (fun ys²⁵⁸ -> [LH_C h¹³⁵ mappend₂₁₁₁(t¹³⁵, ys²⁵⁸)]))
//│ 								| LH_N  => ys²⁵⁶}
//│ 							where
//│ 							def mappend₂₁₁₁(xs¹⁷⁴, ys³⁷⁴) = 
//│ 								xs¹⁷⁴(ys³⁷⁴)
//│ 							def mappend₃₁₃(xs¹⁹⁷, ys⁴¹⁷) = 
//│ 								xs¹⁹⁷(ys⁴¹⁷)
//│ 				def take_lz₁₀₀(n¹², ls¹²) = 
//│ 					if (n¹² > 0) then case force⁰(ls¹²) of {
//│ 						LH_C h⁷¹ t⁷¹ => 
//│ 							let h¹³⁸ = h⁷¹
//│ 							in let t¹³⁸ = take_lz₁₀₀((n¹² - 1), t⁷¹)
//│ 							in (fun ys²⁶⁶ -> 
//│ 								let h¹³⁹ = h¹³⁸
//│ 								in let t¹³⁹ = mappend₁₁₁(t¹³⁸, ys²⁶⁶)
//│ 								in mappend₀₁₂(h¹³⁹, concat₀₁₄(t¹³⁹)))
//│ 						| LH_N  => (fun ys²⁶⁷ -> ys²⁶⁷)} else (fun ys²⁶⁸ -> ys²⁶⁸)
//│ 					where
//│ 					def concat₀₁₄(lss²⁷) = 
//│ 						lss²⁷
//│ 					def mappend₀₁₂(xs¹⁸⁴, ys³⁸⁶) = 
//│ 						case xs¹⁸⁴ of {
//│ 							LH_C h¹¹² t¹¹² => 
//│ 								let h¹⁸³ = h¹¹²
//│ 								in let t¹⁸³ = mappend₀₁₂(t¹¹², ys³⁸⁶)
//│ 								in (fun ys³⁸⁷ -> 
//│ 									let h¹⁸⁴ = h¹⁸³
//│ 									in let t¹⁸⁴ = mappend₃₁₄(t¹⁸³, ys³⁸⁷)
//│ 									in (fun ys³⁸⁸ -> [LH_C h¹⁸⁴ mappend₂₁₁₂(t¹⁸⁴, ys³⁸⁸)]))
//│ 							| LH_N  => ys³⁸⁶}
//│ 						where
//│ 						def mappend₂₁₁₂(xs¹¹², ys²⁴²) = 
//│ 							xs¹¹²(ys²⁴²)
//│ 						def mappend₃₁₄(xs¹²⁷, ys²⁷¹) = 
//│ 							xs¹²⁷(ys²⁷¹)
//│ 					def mappend₁₁₁(xs¹⁹³, ys⁴¹⁰) = 
//│ 						xs¹⁹³(ys⁴¹⁰)
//│ 			def replicate₀₁₀(_lh_replicate_arg1⁷, _lh_replicate_arg2⁷) = 
//│ 				if (_lh_replicate_arg1⁷ > 0) then 
//│ 					let h¹⁹⁷ = _lh_replicate_arg2⁷
//│ 					in let t¹⁹⁷ = replicate₀₁₀((_lh_replicate_arg1⁷ - 1), _lh_replicate_arg2⁷)
//│ 					in mappend₀₀₀(h¹⁹⁷, concat₀₀₁(t¹⁹⁷)) else (fun ys⁴¹⁶ -> ys⁴¹⁶)
//│ 				where
//│ 				def concat₀₀₁(lss²⁴) = 
//│ 					lss²⁴
//│ 				def mappend₀₀₀(xs¹⁹², ys⁴⁰⁹) = 
//│ 					xs¹⁹²(ys⁴⁰⁹)
//│ 					where
//│ 					def mappend₂₀₅(xs¹³⁹, ys³⁰⁷) = 
//│ 						xs¹³⁹(ys³⁰⁷)
//│ 					def mappend₃₀₁(xs¹⁴⁹, ys³³¹) = 
//│ 						xs¹⁴⁹(ys³³¹)
//│ 			def splitAt_lz₀₁₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵) = 
//│ 				let _lh_percOp_LH_P2_0¹⁰ = take_lz₀₁₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵)
//│ 				in let _lh_percOp_LH_P2_1¹⁰ = drop_lz₀₁₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵)
//│ 				in (fun j¹⁵ -> (fun _lh_percOp_arg3¹⁵ -> mappend₂₀₆(mappend₃₀₂(concat₀₀₂(_lh_percOp_LH_P2_0¹⁰), mappend₄₀₃(
//│ 					let h¹⁴¹ = 't'
//│ 					in let t¹⁴¹ = 	
//│ 						let h¹⁴² = ':'
//│ 						in let t¹⁴² = (fun ys²⁷⁸ -> ys²⁷⁸)
//│ 						in (fun ys²⁷⁹ -> 
//│ 							let h¹⁴³ = h¹⁴²
//│ 							in let t¹⁴³ = mappend₄₀₄(t¹⁴², ys²⁷⁹)
//│ 							in (fun ys²⁸⁰ -> [LH_C h¹⁴³ mappend₂₀₇(t¹⁴³, ys²⁸⁰)]))
//│ 					in (fun ys²⁸¹ -> 
//│ 						let h¹⁴⁴ = h¹⁴¹
//│ 						in let t¹⁴⁴ = mappend₄₀₅(t¹⁴¹, ys²⁸¹)
//│ 						in (fun ys²⁸² -> [LH_C h¹⁴⁴ mappend₂₀₈(t¹⁴⁴, ys²⁸²)])), mappend₅₀₁(string_of_int⁰(j¹⁵), 
//│ 					let h¹⁴⁵ = 'n'
//│ 					in let t¹⁴⁵ = (fun ys²⁸³ -> ys²⁸³)
//│ 					in (fun ys²⁸⁴ -> [LH_C h¹⁴⁵ mappend₂₀₉(t¹⁴⁵, ys²⁸⁴)])))), percOp₀₁₁(j¹⁵, _lh_percOp_LH_P2_1¹⁰, _lh_percOp_arg3¹⁵))))
//│ 				where
//│ 				def concat₀₀₂(lss³¹) = 
//│ 					lss³¹
//│ 				def drop_lz₀₁₀(_lh_drop_lz_arg1⁵, _lh_drop_lz_arg2⁵) = 
//│ 					if (_lh_drop_lz_arg1⁵ > 0) then lazy⁰(
//│ 						let _lh_matchIdent²⁰ = force⁰(_lh_drop_lz_arg2⁵)
//│ 						in case _lh_matchIdent²⁰ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz₀₁₀((_lh_drop_lz_arg1⁵ - 1), _lh_drop_lz_LH_C_1³))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2⁵
//│ 				def mappend₂₀₆(xs¹¹⁸, ys²⁵⁰) = 
//│ 					xs¹¹⁸(ys²⁵⁰)
//│ 				def mappend₂₀₇(xs¹¹⁷, ys²⁴⁹) = 
//│ 					xs¹¹⁷(ys²⁴⁹)
//│ 				def mappend₂₀₈(xs¹⁰⁵, ys²³⁵) = 
//│ 					xs¹⁰⁵(ys²³⁵)
//│ 				def mappend₂₀₉(xs¹⁴⁶, ys³²⁸) = 
//│ 					xs¹⁴⁶(ys³²⁸)
//│ 				def mappend₃₀₂(xs¹³⁴, ys³⁰⁰) = 
//│ 					xs¹³⁴(ys³⁰⁰)
//│ 				def mappend₄₀₃(xs¹⁶³, ys³⁵⁹) = 
//│ 					xs¹⁶³(ys³⁵⁹)
//│ 				def mappend₄₀₄(xs¹⁷³, ys³⁷⁰) = 
//│ 					xs¹⁷³(ys³⁷⁰)
//│ 				def mappend₄₀₅(xs¹¹⁰, ys²⁴⁰) = 
//│ 					xs¹¹⁰(ys²⁴⁰)
//│ 				def mappend₅₀₁(xs¹³⁵, ys³⁰¹) = 
//│ 					case xs¹³⁵ of {
//│ 						LH_C h⁴² t⁴² => 
//│ 							let h¹⁵⁶ = h⁴²
//│ 							in let t¹⁵⁶ = mappend₅₀₁(t⁴², ys³⁰¹)
//│ 							in (fun ys³⁰² -> [LH_C h¹⁵⁶ mappend₂₀₁₀(t¹⁵⁶, ys³⁰²)])
//│ 						| LH_N  => ys³⁰¹}
//│ 					where
//│ 					def mappend₂₀₁₀(xs¹¹¹, ys²⁴¹) = 
//│ 						xs¹¹¹(ys²⁴¹)
//│ 				def percOp₀₁₁(_lh_percOp_arg1⁵, _lh_percOp_arg2⁵, _lh_percOp_arg3¹⁶) = 
//│ 					if (_lh_percOp_arg1⁵ >= _lh_percOp_arg3¹⁶) then [LH_N] else 
//│ 						let k¹⁷ = (_lh_percOp_arg1⁵ + 10)
//│ 						in let j¹⁶ = min₀₁₁(_lh_percOp_arg3¹⁶, k¹⁷)
//│ 						in let _lh_matchIdent²¹ = if (k¹⁷ > _lh_percOp_arg3¹⁶) then 
//│ 							let _lh_percOp_LH_P2_0¹¹ = mappend₁₁₂(take_lz₁₀₁((_lh_percOp_arg3¹⁶ % 10), _lh_percOp_arg2⁵), replicate₀₀₁((k¹⁷ - _lh_percOp_arg3¹⁶), 
//│ 								let h¹⁴⁶ = ' '
//│ 								in let t¹⁴⁶ = (fun ys²⁸⁸ -> ys²⁸⁸)
//│ 								in (fun ys²⁸⁵ -> 
//│ 									let h¹⁴⁷ = h¹⁴⁶
//│ 									in let t¹⁴⁷ = mappend₀₁₃(t¹⁴⁶, ys²⁸⁵)
//│ 									in (fun ys²⁸⁶ -> 
//│ 										let h¹⁴⁸ = h¹⁴⁷
//│ 										in let t¹⁴⁸ = mappend₃₁₆(t¹⁴⁷, ys²⁸⁶)
//│ 										in (fun ys²⁸⁷ -> [LH_C h¹⁴⁸ mappend₂₁₁₈(t¹⁴⁸, ys²⁸⁷)])))))
//│ 							in let _lh_percOp_LH_P2_1¹¹ = lazy⁰([LH_N])
//│ 							in (fun j¹⁷ -> (fun _lh_percOp_arg3¹⁷ -> mappend₂₁₁₃(mappend₃₁₅(concat₀₁₅(_lh_percOp_LH_P2_0¹¹), mappend₄₁₆(
//│ 								let h¹⁴⁹ = 't'
//│ 								in let t¹⁴⁹ = 	
//│ 									let h¹⁵⁰ = ':'
//│ 									in let t¹⁵⁰ = (fun ys²⁸⁹ -> ys²⁸⁹)
//│ 									in (fun ys²⁹⁰ -> 
//│ 										let h¹⁵¹ = h¹⁵⁰
//│ 										in let t¹⁵¹ = mappend₄₁₇(t¹⁵⁰, ys²⁹⁰)
//│ 										in (fun ys²⁹¹ -> [LH_C h¹⁵¹ mappend₂₁₁₄(t¹⁵¹, ys²⁹¹)]))
//│ 								in (fun ys²⁹² -> 
//│ 									let h¹⁵² = h¹⁴⁹
//│ 									in let t¹⁵² = mappend₄₁₈(t¹⁴⁹, ys²⁹²)
//│ 									in (fun ys²⁹³ -> [LH_C h¹⁵² mappend₂₁₁₅(t¹⁵², ys²⁹³)])), mappend₅₁₂(string_of_int⁰(j¹⁷), 
//│ 								let h¹⁵³ = 'n'
//│ 								in let t¹⁵³ = (fun ys²⁹⁴ -> ys²⁹⁴)
//│ 								in (fun ys²⁹⁵ -> [LH_C h¹⁵³ mappend₂₁₁₆(t¹⁵³, ys²⁹⁵)])))), percOp₀₁₁(j¹⁷, _lh_percOp_LH_P2_1¹¹, _lh_percOp_arg3¹⁷)))) else splitAt_lz₀₀₁(10, _lh_percOp_arg2⁵)
//│ 						in _lh_matchIdent²¹(j¹⁶, _lh_percOp_arg3¹⁶)
//│ 					where
//│ 					def concat₀₁₅(lss²⁶) = 
//│ 						lss²⁶
//│ 					def mappend₁₁₂(xs¹⁶⁴, ys³⁶⁰) = 
//│ 						xs¹⁶⁴(ys³⁶⁰)
//│ 					def mappend₂₁₁₃(xs¹⁴¹, ys³⁰⁹) = 
//│ 						xs¹⁴¹(ys³⁰⁹)
//│ 					def mappend₂₁₁₄(xs¹⁵⁵, ys³³⁷) = 
//│ 						xs¹⁵⁵(ys³³⁷)
//│ 					def mappend₂₁₁₅(xs¹⁶⁷, ys³⁶³) = 
//│ 						xs¹⁶⁷(ys³⁶³)
//│ 					def mappend₂₁₁₆(xs¹⁸⁵, ys³⁸⁹) = 
//│ 						xs¹⁸⁵(ys³⁸⁹)
//│ 					def mappend₃₁₅(xs¹³³, ys²⁹⁹) = 
//│ 						xs¹³³(ys²⁹⁹)
//│ 					def mappend₄₁₆(xs¹¹⁴, ys²⁴⁴) = 
//│ 						xs¹¹⁴(ys²⁴⁴)
//│ 					def mappend₄₁₇(xs¹⁹⁰, ys⁴⁰⁷) = 
//│ 						xs¹⁹⁰(ys⁴⁰⁷)
//│ 					def mappend₄₁₈(xs¹⁵⁷, ys³⁵⁰) = 
//│ 						xs¹⁵⁷(ys³⁵⁰)
//│ 					def mappend₅₁₂(xs¹⁶⁹, ys³⁶⁵) = 
//│ 						case xs¹⁶⁹ of {
//│ 							LH_C h⁹⁵ t⁹⁵ => 
//│ 								let h¹⁷⁸ = h⁹⁵
//│ 								in let t¹⁷⁸ = mappend₅₁₂(t⁹⁵, ys³⁶⁵)
//│ 								in (fun ys³⁶⁶ -> [LH_C h¹⁷⁸ mappend₂₁₁₇(t¹⁷⁸, ys³⁶⁶)])
//│ 							| LH_N  => ys³⁶⁵}
//│ 						where
//│ 						def mappend₂₁₁₇(xs¹⁷⁶, ys³⁷⁶) = 
//│ 							xs¹⁷⁶(ys³⁷⁶)
//│ 					def min₀₁₁(_lh_min_arg1⁷, _lh_min_arg2⁷) = 
//│ 						if (_lh_min_arg1⁷ > _lh_min_arg2⁷) then _lh_min_arg2⁷ else _lh_min_arg1⁷
//│ 					def replicate₀₀₁(_lh_replicate_arg1⁵, _lh_replicate_arg2⁵) = 
//│ 						if (_lh_replicate_arg1⁵ > 0) then 
//│ 							let h¹³⁰ = _lh_replicate_arg2⁵
//│ 							in let t¹³⁰ = replicate₀₀₁((_lh_replicate_arg1⁵ - 1), _lh_replicate_arg2⁵)
//│ 							in mappend₀₁₃(h¹³⁰, concat₀₁₆(t¹³⁰)) else (fun ys²⁴⁸ -> ys²⁴⁸)
//│ 						where
//│ 						def concat₀₁₆(lss¹⁹) = 
//│ 							lss¹⁹
//│ 						def mappend₀₁₃(xs¹⁰⁹, ys²³⁹) = 
//│ 							xs¹⁰⁹(ys²³⁹)
//│ 							where
//│ 							def mappend₂₁₁₈(xs¹¹⁵, ys²⁴⁵) = 
//│ 								xs¹¹⁵(ys²⁴⁵)
//│ 							def mappend₃₁₆(xs¹⁶², ys³⁵⁸) = 
//│ 								xs¹⁶²(ys³⁵⁸)
//│ 					def splitAt_lz₀₀₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶) = 
//│ 						let _lh_percOp_LH_P2_0¹² = take_lz₀₀₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶)
//│ 						in let _lh_percOp_LH_P2_1¹² = drop_lz₀₀₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶)
//│ 						in (fun j¹⁸ -> (fun _lh_percOp_arg3¹⁸ -> mappend₂₁₁₉(mappend₃₁₇(concat₀₁₇(_lh_percOp_LH_P2_0¹²), mappend₄₁₉(
//│ 							let h¹⁵⁸ = 't'
//│ 							in let t¹⁵⁸ = 	
//│ 								let h¹⁵⁹ = ':'
//│ 								in let t¹⁵⁹ = (fun ys³¹⁴ -> ys³¹⁴)
//│ 								in (fun ys³¹⁵ -> 
//│ 									let h¹⁶⁰ = h¹⁵⁹
//│ 									in let t¹⁶⁰ = mappend₄₁₁₀(t¹⁵⁹, ys³¹⁵)
//│ 									in (fun ys³¹⁶ -> [LH_C h¹⁶⁰ mappend₂₁₂₀(t¹⁶⁰, ys³¹⁶)]))
//│ 							in (fun ys³¹⁷ -> 
//│ 								let h¹⁶¹ = h¹⁵⁸
//│ 								in let t¹⁶¹ = mappend₄₁₁₁(t¹⁵⁸, ys³¹⁷)
//│ 								in (fun ys³¹⁸ -> [LH_C h¹⁶¹ mappend₂₁₂₁(t¹⁶¹, ys³¹⁸)])), mappend₅₁₃(string_of_int⁰(j¹⁸), 
//│ 							let h¹⁶² = 'n'
//│ 							in let t¹⁶² = (fun ys³¹⁹ -> ys³¹⁹)
//│ 							in (fun ys³²⁰ -> [LH_C h¹⁶² mappend₂₁₂₂(t¹⁶², ys³²⁰)])))), percOp₀₁₁(j¹⁸, _lh_percOp_LH_P2_1¹², _lh_percOp_arg3¹⁸))))
//│ 						where
//│ 						def concat₀₁₇(lss²²) = 
//│ 							lss²²
//│ 						def drop_lz₀₀₁(_lh_drop_lz_arg1⁷, _lh_drop_lz_arg2⁷) = 
//│ 							if (_lh_drop_lz_arg1⁷ > 0) then lazy⁰(
//│ 								let _lh_matchIdent²⁸ = force⁰(_lh_drop_lz_arg2⁷)
//│ 								in case _lh_matchIdent²⁸ of {
//│ 									LH_N  => [LH_N]
//│ 									| LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz₀₀₁((_lh_drop_lz_arg1⁷ - 1), _lh_drop_lz_LH_C_1⁴))
//│ 									| _  => error⁰}) else _lh_drop_lz_arg2⁷
//│ 						def mappend₂₁₁₉(xs¹²⁰, ys²⁵⁹) = 
//│ 							xs¹²⁰(ys²⁵⁹)
//│ 						def mappend₂₁₂₀(xs¹²⁵, ys²⁶⁹) = 
//│ 							xs¹²⁵(ys²⁶⁹)
//│ 						def mappend₂₁₂₁(xs¹⁹⁵, ys⁴¹²) = 
//│ 							xs¹⁹⁵(ys⁴¹²)
//│ 						def mappend₂₁₂₂(xs¹⁵⁹, ys³⁵²) = 
//│ 							xs¹⁵⁹(ys³⁵²)
//│ 						def mappend₃₁₇(xs¹⁵⁸, ys³⁵¹) = 
//│ 							xs¹⁵⁸(ys³⁵¹)
//│ 						def mappend₄₁₉(xs¹⁵⁶, ys³³⁸) = 
//│ 							xs¹⁵⁶(ys³³⁸)
//│ 						def mappend₄₁₁₀(xs¹⁷⁰, ys³⁶⁷) = 
//│ 							xs¹⁷⁰(ys³⁶⁷)
//│ 						def mappend₄₁₁₁(xs¹⁹¹, ys⁴⁰⁸) = 
//│ 							xs¹⁹¹(ys⁴⁰⁸)
//│ 						def mappend₅₁₃(xs¹¹⁶, ys²⁴⁶) = 
//│ 							case xs¹¹⁶ of {
//│ 								LH_C h⁶⁰ t⁶⁰ => 
//│ 									let h¹²⁹ = h⁶⁰
//│ 									in let t¹²⁹ = mappend₅₁₃(t⁶⁰, ys²⁴⁶)
//│ 									in (fun ys²⁴⁷ -> [LH_C h¹²⁹ mappend₂₁₂₃(t¹²⁹, ys²⁴⁷)])
//│ 								| LH_N  => ys²⁴⁶}
//│ 							where
//│ 							def mappend₂₁₂₃(xs¹⁴⁸, ys³³⁰) = 
//│ 								xs¹⁴⁸(ys³³⁰)
//│ 						def take_lz₀₀₁(n¹³, ls¹³) = 
//│ 							if (n¹³ > 0) then case force⁰(ls¹³) of {
//│ 								LH_C h⁷⁶ t⁷⁶ => 
//│ 									let h¹⁴⁰ = h⁷⁶
//│ 									in let t¹⁴⁰ = take_lz₀₀₁((n¹³ - 1), t⁷⁶)
//│ 									in mappend₀₁₄(h¹⁴⁰, concat₀₁₈(t¹⁴⁰))
//│ 								| LH_N  => (fun ys²⁷² -> ys²⁷²)} else (fun ys²⁷³ -> ys²⁷³)
//│ 							where
//│ 							def concat₀₁₈(lss²⁸) = 
//│ 								lss²⁸
//│ 							def mappend₀₁₄(xs¹²², ys²⁶¹) = 
//│ 								case xs¹²² of {
//│ 									LH_C h⁶⁸ t⁶⁸ => 
//│ 										let h¹³⁶ = h⁶⁸
//│ 										in let t¹³⁶ = mappend₀₁₄(t⁶⁸, ys²⁶¹)
//│ 										in (fun ys²⁶² -> 
//│ 											let h¹³⁷ = h¹³⁶
//│ 											in let t¹³⁷ = mappend₃₁₈(t¹³⁶, ys²⁶²)
//│ 											in (fun ys²⁶³ -> [LH_C h¹³⁷ mappend₂₁₂₄(t¹³⁷, ys²⁶³)]))
//│ 									| LH_N  => ys²⁶¹}
//│ 								where
//│ 								def mappend₂₁₂₄(xs¹⁸⁰, ys³⁸⁰) = 
//│ 									xs¹⁸⁰(ys³⁸⁰)
//│ 								def mappend₃₁₈(xs¹²⁶, ys²⁷⁰) = 
//│ 									xs¹²⁶(ys²⁷⁰)
//│ 					def take_lz₁₀₁(n¹⁵, ls¹⁵) = 
//│ 						if (n¹⁵ > 0) then case force⁰(ls¹⁵) of {
//│ 							LH_C h⁸⁶ t⁸⁶ => 
//│ 								let h¹⁷⁹ = h⁸⁶
//│ 								in let t¹⁷⁹ = take_lz₁₀₁((n¹⁵ - 1), t⁸⁶)
//│ 								in (fun ys³⁷¹ -> 
//│ 									let h¹⁸⁰ = h¹⁷⁹
//│ 									in let t¹⁸⁰ = mappend₁₁₃(t¹⁷⁹, ys³⁷¹)
//│ 									in mappend₀₁₅(h¹⁸⁰, concat₀₁₉(t¹⁸⁰)))
//│ 							| LH_N  => (fun ys³⁷² -> ys³⁷²)} else (fun ys³⁷³ -> ys³⁷³)
//│ 						where
//│ 						def concat₀₁₉(lss³⁰) = 
//│ 							lss³⁰
//│ 						def mappend₀₁₅(xs¹⁹⁶, ys⁴¹³) = 
//│ 							case xs¹⁹⁶ of {
//│ 								LH_C h⁸⁰ t⁸⁰ => 
//│ 									let h¹⁹⁵ = h⁸⁰
//│ 									in let t¹⁹⁵ = mappend₀₁₅(t⁸⁰, ys⁴¹³)
//│ 									in (fun ys⁴¹⁴ -> 
//│ 										let h¹⁹⁶ = h¹⁹⁵
//│ 										in let t¹⁹⁶ = mappend₃₁₉(t¹⁹⁵, ys⁴¹⁴)
//│ 										in (fun ys⁴¹⁵ -> [LH_C h¹⁹⁶ mappend₂₁₂₅(t¹⁹⁶, ys⁴¹⁵)]))
//│ 								| LH_N  => ys⁴¹³}
//│ 							where
//│ 							def mappend₂₁₂₅(xs¹⁵², ys³³⁴) = 
//│ 								xs¹⁵²(ys³³⁴)
//│ 							def mappend₃₁₉(xs¹³⁶, ys³⁰³) = 
//│ 								xs¹³⁶(ys³⁰³)
//│ 						def mappend₁₁₃(xs¹⁷¹, ys³⁶⁸) = 
//│ 							xs¹⁷¹(ys³⁶⁸)
//│ 				def take_lz₀₁₀(n¹⁴, ls¹⁴) = 
//│ 					if (n¹⁴ > 0) then case force⁰(ls¹⁴) of {
//│ 						LH_C h¹¹⁰ t¹¹⁰ => 
//│ 							let h¹⁷⁷ = h¹¹⁰
//│ 							in let t¹⁷⁷ = take_lz₀₁₀((n¹⁴ - 1), t¹¹⁰)
//│ 							in mappend₀₀₁(h¹⁷⁷, concat₀₀₃(t¹⁷⁷))
//│ 						| LH_N  => (fun ys³⁵⁴ -> ys³⁵⁴)} else (fun ys³⁵⁵ -> ys³⁵⁵)
//│ 					where
//│ 					def concat₀₀₃(lss²⁰) = 
//│ 						lss²⁰
//│ 					def mappend₀₀₁(xs¹⁸⁶, ys³⁹⁰) = 
//│ 						case xs¹⁸⁶ of {
//│ 							LH_C h¹⁰⁰ t¹⁰⁰ => 
//│ 								let h¹⁸⁵ = h¹⁰⁰
//│ 								in let t¹⁸⁵ = mappend₀₀₁(t¹⁰⁰, ys³⁹⁰)
//│ 								in (fun ys³⁹¹ -> 
//│ 									let h¹⁸⁶ = h¹⁸⁵
//│ 									in let t¹⁸⁶ = mappend₃₀₃(t¹⁸⁵, ys³⁹¹)
//│ 									in (fun ys³⁹² -> [LH_C h¹⁸⁶ mappend₂₀₁₁(t¹⁸⁶, ys³⁹²)]))
//│ 							| LH_N  => ys³⁹⁰}
//│ 						where
//│ 						def mappend₂₀₁₁(xs¹⁶⁸, ys³⁶⁴) = 
//│ 							xs¹⁶⁸(ys³⁶⁴)
//│ 						def mappend₃₀₃(xs¹⁶¹, ys³⁵⁷) = 
//│ 							xs¹⁶¹(ys³⁵⁷)
//│ 			def take_lz₁₁₀(n¹¹, ls¹¹) = 
//│ 				if (n¹¹ > 0) then case force⁰(ls¹¹) of {
//│ 					LH_C h⁸³ t⁸³ => 
//│ 						let h¹³² = h⁸³
//│ 						in let t¹³² = take_lz₁₁₀((n¹¹ - 1), t⁸³)
//│ 						in (fun ys²⁵³ -> 
//│ 							let h¹³³ = h¹³²
//│ 							in let t¹³³ = mappend₁₀₁(t¹³², ys²⁵³)
//│ 							in mappend₀₀₂(h¹³³, concat₀₀₄(t¹³³)))
//│ 					| LH_N  => (fun ys²⁵⁴ -> ys²⁵⁴)} else (fun ys²⁵⁵ -> ys²⁵⁵)
//│ 				where
//│ 				def concat₀₀₄(lss¹⁸) = 
//│ 					lss¹⁸
//│ 				def mappend₀₀₂(xs¹³², ys²⁹⁶) = 
//│ 					case xs¹³² of {
//│ 						LH_C h¹²⁶ t¹²⁶ => 
//│ 							let h¹⁵⁴ = h¹²⁶
//│ 							in let t¹⁵⁴ = mappend₀₀₂(t¹²⁶, ys²⁹⁶)
//│ 							in (fun ys²⁹⁷ -> 
//│ 								let h¹⁵⁵ = h¹⁵⁴
//│ 								in let t¹⁵⁵ = mappend₃₀₄(t¹⁵⁴, ys²⁹⁷)
//│ 								in (fun ys²⁹⁸ -> [LH_C h¹⁵⁵ mappend₂₀₁₂(t¹⁵⁵, ys²⁹⁸)]))
//│ 						| LH_N  => ys²⁹⁶}
//│ 					where
//│ 					def mappend₂₀₁₂(xs¹⁴², ys³¹⁰) = 
//│ 						xs¹⁴²(ys³¹⁰)
//│ 					def mappend₃₀₄(xs¹⁴⁷, ys³²⁹) = 
//│ 						xs¹⁴⁷(ys³²⁹)
//│ 				def mappend₁₀₁(xs¹³⁰, ys²⁷⁶) = 
//│ 					xs¹³⁰(ys²⁷⁶)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

