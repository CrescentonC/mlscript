:NewParser
:ParseOnly

// pidgits n = 0 % (0 # (1,0,1)) where
//   i%ds
//      | i >= n = []
//      | True = (concat h ++ "\t:" ++ show j ++ "\n") ++ j%t
//      where k = i+10;
//            j = min n k;
//            (h,t) | k > n = (take (n`mod`10) ds ++ replicate (k-n) " ",[])
//                  | True = splitAt 10 ds
//   j # s
//      | n>a || r+n>=d = k # t
//      | True = show q : k # (n*10,(a-(q*d))*10,d)
//      where k = j+1; 
//            t@(n,a,d) = k&s; 
//            (q,r) = (n*3+a) `divMod` d
//   j&(n,a,d) = (n*j,(a+n*2)*y,d*y) where y=(j*2+1)

:lhInHaskell
:lhGenOCaml
drop_lz n ls = if n > 0 then lazy (case (force ls) of { [] -> []; (h:t) -> force (drop_lz (n - 1) t) }) else ls
splitAt_lz n xs = (take_lz n xs, drop_lz n xs)
min a b = if a > b then b else a
replicate n x = if n > 0 then (x:(replicate (n - 1) x)) else []
divmod a b = ((a `div` b), (a `mod` b))
percOp i ds n =
  if i >= n then
    []
  else
    let k = (i + 10) in
          let j = (min n k) in
                case (if k > n then ((take_lz (n `mod` 10) ds) ++ (replicate (k-n) " "), (lazy [])) else (splitAt_lz 10 ds)) of {
                  (h, t) -> (concat h) ++ ("t:" ++ ((string_of_int j) ++ "n")) ++ (percOp j t n)
                }
hashOp j s =
  lazy (let k = j + 1 in
      case (ampOp k s) of {
        (n, a, d) -> case (divmod ((n * 3) + a) d) of {
          (q, r) -> if ((n > a) || ((r + n) >= d)) then (force (hashOp k (n, a, d))) else ((string_of_int q) : (hashOp k (n*10, (a-(q*d))*10, d)))
        }
      })
ampOp j (n,a,d) = let y = ((j * 2) + 1) in (n * j, (a + (n * 2)) * y, d * y)
pidgits n = percOp 0 (hashOp 0 (1,0,1)) n
testPiDigits_nofib n = pidgits n
testPiDigits_nofib $ primId 5000
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testPiDigits_nofib_₀^1406(primId⁰(5000))
//│ def ampOp_₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = case _lh_ampOp_arg2¹ of {
//│ 	LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 		let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 		in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 	| _  => error⁰}
//│ def concat_₀(lss¹) = case lss¹ of {
//│ 	LH_C h²⁶ t²⁸ => mappend_₀^1355(h²⁶, concat_₀^1358(t²⁸))
//│ 	| LH_N  => [LH_N]}
//│ def divmod_₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ def drop_lz_₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = if (_lh_drop_lz_arg1¹ > 0) then lazy⁰(
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_drop_lz_arg2¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz_₀^1049((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹))
//│ 		| _  => error⁰}) else _lh_drop_lz_arg2¹
//│ def hashOp_₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = lazy⁰(
//│ 	let k³ = (_lh_hashOp_arg1¹ + 1)
//│ 	in let _lh_matchIdent⁶ = ampOp_₀^1236(k³, _lh_hashOp_arg2¹)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 			let _lh_matchIdent⁷ = divmod_₀^1242(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 			in case _lh_matchIdent⁷ of {
//│ 				LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp_₀^1274(k³, [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀^1286(k³, [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]
//│ 				| _  => error⁰}
//│ 		| _  => error⁰})
//│ def mappend_₀(xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C h²⁵ t²⁷ => [LH_C h²⁵ mappend_₀^1344(t²⁷, ys¹³)]
//│ 	| LH_N  => ys¹³}
//│ def mappend_₁(xs¹⁰, ys¹⁰) = case xs¹⁰ of {
//│ 	LH_C h²¹ t²³ => [LH_C h²¹ mappend_₁^1133(t²³, ys¹⁰)]
//│ 	| LH_N  => ys¹⁰}
//│ def mappend_₂(xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C h²³ t²⁵ => [LH_C h²³ mappend_₂^1198(t²⁵, ys¹¹)]
//│ 	| LH_N  => ys¹¹}
//│ def mappend_₃(xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C h²⁰ t²² => [LH_C h²⁰ mappend_₃^1121(t²², ys⁹)]
//│ 	| LH_N  => ys⁹}
//│ def mappend_₄(xs¹², ys¹²) = case xs¹² of {
//│ 	LH_C h²⁴ t²⁶ => [LH_C h²⁴ mappend_₄^1210(t²⁶, ys¹²)]
//│ 	| LH_N  => ys¹²}
//│ def mappend_₅(xs¹⁴, ys¹⁴) = case xs¹⁴ of {
//│ 	LH_C h²⁸ t³⁰ => [LH_C h²⁸ mappend_₅^1396(t³⁰, ys¹⁴)]
//│ 	| LH_N  => ys¹⁴}
//│ def min_₀(_lh_min_arg1¹, _lh_min_arg2¹) = if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ def percOp_₀(_lh_percOp_arg1¹, _lh_percOp_arg2¹, _lh_percOp_arg3¹) = if (_lh_percOp_arg1¹ >= _lh_percOp_arg3¹) then [LH_N] else 
//│ 	let k² = (_lh_percOp_arg1¹ + 10)
//│ 	in let j¹ = min_₀^951(_lh_percOp_arg3¹, k²)
//│ 	in let _lh_matchIdent⁴ = if (k² > _lh_percOp_arg3¹) then [LH_P2 mappend_₁^961(take_lz_₁^962((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate_₀^972((k² - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz_₀^988(10, _lh_percOp_arg2¹)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend_₂^995(mappend_₃^996(concat_₀^997(_lh_percOp_LH_P2_0¹), mappend_₄^1001([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅^1008(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp_₀^1020(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹))
//│ 		| _  => error⁰}
//│ def pidgits_₀(_lh_pidgits_arg1¹) = percOp_₀^1168(0, hashOp_₀^1171(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ def replicate_₀(_lh_replicate_arg1¹, _lh_replicate_arg2¹) = if (_lh_replicate_arg1¹ > 0) then [LH_C _lh_replicate_arg2¹ replicate_₀^1328((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)] else [LH_N]
//│ def splitAt_lz_₀(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = [LH_P2 take_lz_₀^1183(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀^1188(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ def take_lz_₀(n⁵, ls²⁰) = if (n⁵ > 0) then case force⁰(ls²⁰) of {
//│ 	LH_C h²⁷ t²⁹ => [LH_C h²⁷ take_lz_₀^1378((n⁵ - 1), t²⁹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz_₁(n⁴, ls¹⁹) = if (n⁴ > 0) then case force⁰(ls¹⁹) of {
//│ 	LH_C h²² t²⁴ => [LH_C h²² take_lz_₁^1152((n⁴ - 1), t²⁴)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testPiDigits_nofib_₀(_lh_testPiDigits_nofib_arg1¹) = pidgits_₀^1365(_lh_testPiDigits_nofib_arg1¹)
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec ampOp__d0 _lh_ampOp_arg1_1 _lh_ampOp_arg2_1 =
//│ 		  (match _lh_ampOp_arg2_1 with
//│ 		    | `LH_P3(_lh_ampOp_LH_P3_0_1, _lh_ampOp_LH_P3_1_1, _lh_ampOp_LH_P3_2_1) -> 
//│ 		      (let rec y_1 = ((_lh_ampOp_arg1_1 * 2) + 1) in
//│ 		        (`LH_P3((_lh_ampOp_LH_P3_0_1 * _lh_ampOp_arg1_1), ((_lh_ampOp_LH_P3_1_1 + (_lh_ampOp_LH_P3_0_1 * 2)) * y_1), (_lh_ampOp_LH_P3_2_1 * y_1))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and concat__d0 lss_1 =
//│ 		  (match lss_1 with
//│ 		    | `LH_C(h_2_6, t_2_8) -> 
//│ 		      ((mappend__d0 h_2_6) (concat__d0 t_2_8))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and divmod__d0 _lh_divmod_arg1_1 _lh_divmod_arg2_1 =
//│ 		  (`LH_P2((_lh_divmod_arg1_1 / _lh_divmod_arg2_1), (_lh_divmod_arg1_1 mod _lh_divmod_arg2_1)))
//│ 		and drop_lz__d0 _lh_drop_lz_arg1_1 _lh_drop_lz_arg2_1 =
//│ 		  (if (_lh_drop_lz_arg1_1 > 0) then
//│ 		    (lazy (let rec _lh_matchIdent_5 = (Lazy.force _lh_drop_lz_arg2_1) in
//│ 		      (match _lh_matchIdent_5 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_N)
//│ 		        | `LH_C(_lh_drop_lz_LH_C_0_1, _lh_drop_lz_LH_C_1_1) -> 
//│ 		          (Lazy.force ((drop_lz__d0 (_lh_drop_lz_arg1_1 - 1)) _lh_drop_lz_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		  else
//│ 		    _lh_drop_lz_arg2_1)
//│ 		and hashOp__d0 _lh_hashOp_arg1_1 _lh_hashOp_arg2_1 =
//│ 		  (lazy (let rec k_3 = (_lh_hashOp_arg1_1 + 1) in
//│ 		    (let rec _lh_matchIdent_6 = ((ampOp__d0 k_3) _lh_hashOp_arg2_1) in
//│ 		      (match _lh_matchIdent_6 with
//│ 		        | `LH_P3(_lh_hashOp_LH_P3_0_1, _lh_hashOp_LH_P3_1_1, _lh_hashOp_LH_P3_2_1) -> 
//│ 		          (let rec _lh_matchIdent_7 = ((divmod__d0 ((_lh_hashOp_LH_P3_0_1 * 3) + _lh_hashOp_LH_P3_1_1)) _lh_hashOp_LH_P3_2_1) in
//│ 		            (match _lh_matchIdent_7 with
//│ 		              | `LH_P2(_lh_hashOp_LH_P2_0_1, _lh_hashOp_LH_P2_1_1) -> 
//│ 		                (if ((_lh_hashOp_LH_P3_0_1 > _lh_hashOp_LH_P3_1_1) || ((_lh_hashOp_LH_P2_1_1 + _lh_hashOp_LH_P3_0_1) >= _lh_hashOp_LH_P3_2_1)) then
//│ 		                  (Lazy.force ((hashOp__d0 k_3) (`LH_P3(_lh_hashOp_LH_P3_0_1, _lh_hashOp_LH_P3_1_1, _lh_hashOp_LH_P3_2_1))))
//│ 		                else
//│ 		                  (`LH_C((string_of_int _lh_hashOp_LH_P2_0_1), ((hashOp__d0 k_3) (`LH_P3((_lh_hashOp_LH_P3_0_1 * 10), ((_lh_hashOp_LH_P3_1_1 - (_lh_hashOp_LH_P2_0_1 * _lh_hashOp_LH_P3_2_1)) * 10), _lh_hashOp_LH_P3_2_1))))))
//│ 		              | _ -> 
//│ 		                (failwith "error")))
//│ 		        | _ -> 
//│ 		          (failwith "error")))))
//│ 		and mappend__d0 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(h_2_5, t_2_7) -> 
//│ 		      (`LH_C(h_2_5, ((mappend__d0 t_2_7) ys_1_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_3)
//│ 		and mappend__d1 xs_1_0 ys_1_0 =
//│ 		  (match xs_1_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (`LH_C(h_2_1, ((mappend__d1 t_2_3) ys_1_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_0)
//│ 		and mappend__d2 xs_1_1 ys_1_1 =
//│ 		  (match xs_1_1 with
//│ 		    | `LH_C(h_2_3, t_2_5) -> 
//│ 		      (`LH_C(h_2_3, ((mappend__d2 t_2_5) ys_1_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_1)
//│ 		and mappend__d3 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C(h_2_0, ((mappend__d3 t_2_2) ys_9)))
//│ 		    | `LH_N -> 
//│ 		      ys_9)
//│ 		and mappend__d4 xs_1_2 ys_1_2 =
//│ 		  (match xs_1_2 with
//│ 		    | `LH_C(h_2_4, t_2_6) -> 
//│ 		      (`LH_C(h_2_4, ((mappend__d4 t_2_6) ys_1_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_2)
//│ 		and mappend__d5 xs_1_4 ys_1_4 =
//│ 		  (match xs_1_4 with
//│ 		    | `LH_C(h_2_8, t_3_0) -> 
//│ 		      (`LH_C(h_2_8, ((mappend__d5 t_3_0) ys_1_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_4)
//│ 		and min__d0 _lh_min_arg1_1 _lh_min_arg2_1 =
//│ 		  (if (_lh_min_arg1_1 > _lh_min_arg2_1) then
//│ 		    _lh_min_arg2_1
//│ 		  else
//│ 		    _lh_min_arg1_1)
//│ 		and percOp__d0 _lh_percOp_arg1_1 _lh_percOp_arg2_1 _lh_percOp_arg3_1 =
//│ 		  (if (_lh_percOp_arg1_1 >= _lh_percOp_arg3_1) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (let rec k_2 = (_lh_percOp_arg1_1 + 10) in
//│ 		      (let rec j_1 = ((min__d0 _lh_percOp_arg3_1) k_2) in
//│ 		        (let rec _lh_matchIdent_4 = (if (k_2 > _lh_percOp_arg3_1) then
//│ 		          (`LH_P2(((mappend__d1 ((take_lz__d1 (_lh_percOp_arg3_1 mod 10)) _lh_percOp_arg2_1)) ((replicate__d0 (k_2 - _lh_percOp_arg3_1)) (`LH_C(' ', (`LH_N))))), (lazy (`LH_N))))
//│ 		        else
//│ 		          ((splitAt_lz__d0 10) _lh_percOp_arg2_1)) in
//│ 		          (match _lh_matchIdent_4 with
//│ 		            | `LH_P2(_lh_percOp_LH_P2_0_1, _lh_percOp_LH_P2_1_1) -> 
//│ 		              ((mappend__d2 ((mappend__d3 (concat__d0 _lh_percOp_LH_P2_0_1)) ((mappend__d4 (`LH_C('t', (`LH_C(':', (`LH_N)))))) ((mappend__d5 (string_of_int j_1)) (`LH_C('n', (`LH_N))))))) (((percOp__d0 j_1) _lh_percOp_LH_P2_1_1) _lh_percOp_arg3_1))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))))
//│ 		and pidgits__d0 _lh_pidgits_arg1_1 =
//│ 		  (((percOp__d0 0) ((hashOp__d0 0) (`LH_P3(1, 0, 1)))) _lh_pidgits_arg1_1)
//│ 		and replicate__d0 _lh_replicate_arg1_1 _lh_replicate_arg2_1 =
//│ 		  (if (_lh_replicate_arg1_1 > 0) then
//│ 		    (`LH_C(_lh_replicate_arg2_1, ((replicate__d0 (_lh_replicate_arg1_1 - 1)) _lh_replicate_arg2_1)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and splitAt_lz__d0 _lh_splitAt_lz_arg1_1 _lh_splitAt_lz_arg2_1 =
//│ 		  (`LH_P2(((take_lz__d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1), ((drop_lz__d0 _lh_splitAt_lz_arg1_1) _lh_splitAt_lz_arg2_1)))
//│ 		and take_lz__d0 n_5 ls_2_0 =
//│ 		  (if (n_5 > 0) then
//│ 		    (match (Lazy.force ls_2_0) with
//│ 		      | `LH_C(h_2_7, t_2_9) -> 
//│ 		        (`LH_C(h_2_7, ((take_lz__d0 (n_5 - 1)) t_2_9)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take_lz__d1 n_4 ls_1_9 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match (Lazy.force ls_1_9) with
//│ 		      | `LH_C(h_2_2, t_2_4) -> 
//│ 		        (`LH_C(h_2_2, ((take_lz__d1 (n_4 - 1)) t_2_4)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testPiDigits_nofib__d0 _lh_testPiDigits_nofib_arg1_1 =
//│ 		  (pidgits__d0 _lh_testPiDigits_nofib_arg1_1);;
//│ 		(testPiDigits_nofib__d0 5000)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPiDigits_nofib_₀^1406]
//│ 	[testPiDigits_nofib_₀^1406 · pidgits_₀^1365]
//│ 		[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · hashOp_₀^1171] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · hashOp_₀^1171 · ampOp_₀^1236] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · hashOp_₀^1171 · divmod_₀^1242] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · hashOp_₀^1171 · hashOp_₀^1274] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · hashOp_₀^1171] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · hashOp_₀^1171 · hashOp_₀^1286] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · hashOp_₀^1171] (using original def)
//│ 		[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168]
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · concat_₀^997] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · concat_₀^997 · concat_₀^1358] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · concat_₀^997] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · concat_₀^997 · mappend_₀^1355] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · concat_₀^997 · mappend_₀^1355 · mappend_₀^1344] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · concat_₀^997 · mappend_₀^1355] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₁^961] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₁^961 · mappend_₁^1133] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₁^961] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₂^995]
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₂^995 · mappend_₂^1198] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₂^995] (only one)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₃^996] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₃^996 · mappend_₃^1121] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₃^996] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₄^1001] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₄^1001 · mappend_₄^1210] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₄^1001] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₅^1008] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₅^1008 · mappend_₅^1396] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · mappend_₅^1008] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · min_₀^951] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · concat_₀^997] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · concat_₀^997 · concat_₀^1358] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · concat_₀^997] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · concat_₀^997 · mappend_₀^1355] (using original def)
//│ 						[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · concat_₀^997 · mappend_₀^1355 · mappend_₀^1344] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · concat_₀^997 · mappend_₀^1355] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₁^961] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₁^961 · mappend_₁^1133] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₁^961] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₂^995] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₂^995 · mappend_₂^1198] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₂^995] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₃^996] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₃^996 · mappend_₃^1121] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₃^996] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₄^1001] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₄^1001 · mappend_₄^1210] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₄^1001] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₅^1008] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₅^1008 · mappend_₅^1396] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · mappend_₅^1008] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · min_₀^951] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · percOp_₀^1020] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · replicate_₀^972] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · replicate_₀^972 · replicate_₀^1328] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · replicate_₀^972] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · splitAt_lz_₀^988] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · splitAt_lz_₀^988 · drop_lz_₀^1188] (using original def)
//│ 						[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · splitAt_lz_₀^988 · drop_lz_₀^1188 · drop_lz_₀^1049] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · splitAt_lz_₀^988 · drop_lz_₀^1188] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · splitAt_lz_₀^988 · take_lz_₀^1183] (using original def)
//│ 						[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · splitAt_lz_₀^988 · take_lz_₀^1183 · take_lz_₀^1378] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · splitAt_lz_₀^988 · take_lz_₀^1183] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · take_lz_₁^962] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · take_lz_₁^962 · take_lz_₁^1152] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · percOp_₀^1020 · take_lz_₁^962] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · replicate_₀^972] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · replicate_₀^972 · replicate_₀^1328] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · replicate_₀^972] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · splitAt_lz_₀^988] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · splitAt_lz_₀^988 · drop_lz_₀^1188] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · splitAt_lz_₀^988 · drop_lz_₀^1188 · drop_lz_₀^1049] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · splitAt_lz_₀^988 · drop_lz_₀^1188] (using original def)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · splitAt_lz_₀^988 · take_lz_₀^1183] (using original def)
//│ 					[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · splitAt_lz_₀^988 · take_lz_₀^1183 · take_lz_₀^1378] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · splitAt_lz_₀^988 · take_lz_₀^1183] (using original def)
//│ 			[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · take_lz_₁^962] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · take_lz_₁^962 · take_lz_₁^1152] ---> [testPiDigits_nofib_₀^1406 · pidgits_₀^1365 · percOp_₀^1168 · take_lz_₁^962] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPiDigits_nofib_₀_₀(primId⁰(5000))
//│ def testPiDigits_nofib_₀_₀(_lh_testPiDigits_nofib_arg1¹) = 
//│ 	pidgits_₀_₀(_lh_testPiDigits_nofib_arg1¹)
//│ 	where
//│ 	def pidgits_₀_₀(_lh_pidgits_arg1¹) = 
//│ 		percOp_₀_₀(0, hashOp_₀_₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ 		where
//│ 		def hashOp_₀_₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = 
//│ 			lazy⁰(
//│ 				let k² = (_lh_hashOp_arg1¹ + 1)
//│ 				in let _lh_matchIdent⁴ = ampOp_₀_₀(k², _lh_hashOp_arg2¹)
//│ 				in case _lh_matchIdent⁴ of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 						let _lh_matchIdent⁵ = divmod_₀_₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 						in case _lh_matchIdent⁵ of {
//│ 							LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp_₀_₀(k², [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]
//│ 							| _  => error⁰}
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp_₀_₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = 
//│ 				case _lh_ampOp_arg2¹ of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 					| _  => error⁰}
//│ 			def divmod_₀_₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = 
//│ 				[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]
//│ 		def percOp_₀_₀(_lh_percOp_arg1², _lh_percOp_arg2², _lh_percOp_arg3²) = 
//│ 			if (_lh_percOp_arg1² >= _lh_percOp_arg3²) then [LH_N] else 
//│ 				let k⁴ = (_lh_percOp_arg1² + 10)
//│ 				in let j² = min_₀_₀(_lh_percOp_arg3², k⁴)
//│ 				in let _lh_matchIdent⁹ = if (k⁴ > _lh_percOp_arg3²) then [LH_P2 mappend_₁_₀(take_lz_₁_₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate_₀_₁((k⁴ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz_₀_₁(10, _lh_percOp_arg2²)
//│ 				in case _lh_matchIdent⁹ of {
//│ 					LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend_₂_₀(mappend_₃_₀(concat_₀_₀(_lh_percOp_LH_P2_0²), mappend_₄_₀([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²))
//│ 					| _  => error⁰}
//│ 			where
//│ 			def concat_₀_₀(lss¹) = 
//│ 				case lss¹ of {
//│ 					LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³))
//│ 					| LH_N  => [LH_N]}
//│ 				where
//│ 				def mappend_₀_₀(xs¹⁶, ys¹⁶) = 
//│ 					case xs¹⁶ of {
//│ 						LH_C h²⁴ t²⁴ => [LH_C h²⁴ mappend_₀_₀(t²⁴, ys¹⁶)]
//│ 						| LH_N  => ys¹⁶}
//│ 			def mappend_₁_₀(xs⁸, ys⁸) = 
//│ 				case xs⁸ of {
//│ 					LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)]
//│ 					| LH_N  => ys⁸}
//│ 			def mappend_₂_₀(xs¹¹, ys¹¹) = 
//│ 				case xs¹¹ of {
//│ 					LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)]
//│ 					| LH_N  => ys¹¹}
//│ 			def mappend_₃_₀(xs⁹, ys⁹) = 
//│ 				case xs⁹ of {
//│ 					LH_C h¹² t¹² => [LH_C h¹² mappend_₃_₀(t¹², ys⁹)]
//│ 					| LH_N  => ys⁹}
//│ 			def mappend_₄_₀(xs¹⁵, ys¹⁵) = 
//│ 				case xs¹⁵ of {
//│ 					LH_C h²² t²² => [LH_C h²² mappend_₄_₀(t²², ys¹⁵)]
//│ 					| LH_N  => ys¹⁵}
//│ 			def mappend_₅_₀(xs¹⁰, ys¹⁰) = 
//│ 				case xs¹⁰ of {
//│ 					LH_C h¹³ t¹³ => [LH_C h¹³ mappend_₅_₀(t¹³, ys¹⁰)]
//│ 					| LH_N  => ys¹⁰}
//│ 			def min_₀_₀(_lh_min_arg1¹, _lh_min_arg2¹) = 
//│ 				if (_lh_min_arg1¹ > _lh_min_arg2¹) then _lh_min_arg2¹ else _lh_min_arg1¹
//│ 			def percOp_₀_₁(_lh_percOp_arg1¹, _lh_percOp_arg2¹, _lh_percOp_arg3¹) = 
//│ 				if (_lh_percOp_arg1¹ >= _lh_percOp_arg3¹) then [LH_N] else 
//│ 					let k³ = (_lh_percOp_arg1¹ + 10)
//│ 					in let j¹ = min_₀_₁(_lh_percOp_arg3¹, k³)
//│ 					in let _lh_matchIdent⁶ = if (k³ > _lh_percOp_arg3¹) then [LH_P2 mappend_₁_₁(take_lz_₁_₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate_₀_₀((k³ - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])] else splitAt_lz_₀_₀(10, _lh_percOp_arg2¹)
//│ 					in case _lh_matchIdent⁶ of {
//│ 						LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend_₂_₁(mappend_₃_₁(concat_₀_₁(_lh_percOp_LH_P2_0¹), mappend_₄_₁([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹))
//│ 						| _  => error⁰}
//│ 				where
//│ 				def concat_₀_₁(lss²) = 
//│ 					case lss² of {
//│ 						LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶))
//│ 						| LH_N  => [LH_N]}
//│ 					where
//│ 					def mappend_₀_₁(xs⁷, ys⁷) = 
//│ 						case xs⁷ of {
//│ 							LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_₀_₁(t¹⁰, ys⁷)]
//│ 							| LH_N  => ys⁷}
//│ 				def mappend_₁_₁(xs¹², ys¹²) = 
//│ 					case xs¹² of {
//│ 						LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)]
//│ 						| LH_N  => ys¹²}
//│ 				def mappend_₂_₁(xs¹³, ys¹³) = 
//│ 					case xs¹³ of {
//│ 						LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)]
//│ 						| LH_N  => ys¹³}
//│ 				def mappend_₃_₁(xs⁶, ys⁶) = 
//│ 					case xs⁶ of {
//│ 						LH_C h⁹ t⁹ => [LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)]
//│ 						| LH_N  => ys⁶}
//│ 				def mappend_₄_₁(xs¹⁷, ys¹⁷) = 
//│ 					case xs¹⁷ of {
//│ 						LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)]
//│ 						| LH_N  => ys¹⁷}
//│ 				def mappend_₅_₁(xs¹⁴, ys¹⁴) = 
//│ 					case xs¹⁴ of {
//│ 						LH_C h²¹ t²¹ => [LH_C h²¹ mappend_₅_₁(t²¹, ys¹⁴)]
//│ 						| LH_N  => ys¹⁴}
//│ 				def min_₀_₁(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def replicate_₀_₀(_lh_replicate_arg1¹, _lh_replicate_arg2¹) = 
//│ 					if (_lh_replicate_arg1¹ > 0) then [LH_C _lh_replicate_arg2¹ replicate_₀_₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)] else [LH_N]
//│ 				def splitAt_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 					[LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]
//│ 					where
//│ 					def drop_lz_₀_₀(_lh_drop_lz_arg1¹, _lh_drop_lz_arg2¹) = 
//│ 						if (_lh_drop_lz_arg1¹ > 0) then lazy⁰(
//│ 							let _lh_matchIdent⁷ = force⁰(_lh_drop_lz_arg2¹)
//│ 							in case _lh_matchIdent⁷ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2¹
//│ 					def take_lz_₀_₀(n³, ls³) = 
//│ 						if (n³ > 0) then case force⁰(ls³) of {
//│ 							LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)]
//│ 							| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lz_₁_₀(n², ls²) = 
//│ 					if (n² > 0) then case force⁰(ls²) of {
//│ 						LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 			def replicate_₀_₁(_lh_replicate_arg1², _lh_replicate_arg2²) = 
//│ 				if (_lh_replicate_arg1² > 0) then [LH_C _lh_replicate_arg2² replicate_₀_₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)] else [LH_N]
//│ 			def splitAt_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) = 
//│ 				[LH_P2 take_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]
//│ 				where
//│ 				def drop_lz_₀_₁(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 					if (_lh_drop_lz_arg1² > 0) then lazy⁰(
//│ 						let _lh_matchIdent⁸ = force⁰(_lh_drop_lz_arg2²)
//│ 						in case _lh_matchIdent⁸ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₁((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2²
//│ 				def take_lz_₀_₁(n⁴, ls⁴) = 
//│ 					if (n⁴ > 0) then case force⁰(ls⁴) of {
//│ 						LH_C h¹⁹ t¹⁹ => [LH_C h¹⁹ take_lz_₀_₁((n⁴ - 1), t¹⁹)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 			def take_lz_₁_₁(n⁵, ls⁵) = 
//│ 				if (n⁵ > 0) then case force⁰(ls⁵) of {
//│ 					LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz_₁_₁((n⁵ - 1), t²⁰)]
//│ 					| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)]: 479 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 494 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp_₀_₀(k², [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 641
//│ [LH_C h¹⁰ mappend_₀_₁(t¹⁰, ys⁷)]: 514 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)] | LH_N  => ys⁶}: 481
//│ [LH_P3 1 0 1]: 528 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1180
//│ [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)]: 541 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_C h¹² mappend_₃_₀(t¹², ys⁹)]: 553 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 608 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1180
//│ [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 636 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1180
//│ [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 638 --->
//│ 	case force⁰(ls²) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)] | LH_N  => [LH_N]}: 698
//│ 	case force⁰(ls³) of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)] | LH_N  => [LH_N]}: 820
//│ 	case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 872
//│ 	case _lh_matchIdent⁸ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₁((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 922
//│ 	case force⁰(ls⁴) of {LH_C h¹⁹ t¹⁹ => [LH_C h¹⁹ take_lz_₀_₁((n⁴ - 1), t¹⁹)] | LH_N  => [LH_N]}: 949
//│ 	case force⁰(ls⁵) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz_₁_₁((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1071
//│ [LH_C h¹³ mappend_₅_₀(t¹³, ys¹⁰)]: 661 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)]: 696 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 834
//│ [LH_N]: 697 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 834
//│ [LH_N]: 699 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 834
//│ [LH_N]: 743 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_₀_₁(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 516
//│ [LH_C ' ' [LH_N]]: 744 --->
//│ 	case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_₀_₁(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 516
//│ [LH_N]: 748 --->
//│ 	case force⁰(ls²) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)] | LH_N  => [LH_N]}: 698
//│ 	case force⁰(ls³) of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)] | LH_N  => [LH_N]}: 820
//│ 	case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 872
//│ [LH_P2 mappend_₁_₁(take_lz_₁_₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate_₀_₀((k³ - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 750 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend_₂_₁(mappend_₃_₁(concat_₀_₁(_lh_percOp_LH_P2_0¹), mappend_₄_₁([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 792
//│ [LH_N]: 767 --->
//│ 	case xs¹⁷ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)] | LH_N  => ys¹⁷}: 1227
//│ [LH_C ':' [LH_N]]: 768 --->
//│ 	case xs¹⁷ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)] | LH_N  => ys¹⁷}: 1227
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 769 --->
//│ 	case xs¹⁷ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)] | LH_N  => ys¹⁷}: 1227
//│ [LH_N]: 777 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_C 'n' [LH_N]]: 778 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)]: 818 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_N]: 819 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_N]: 821 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)]: 832 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_N]: 859 --->
//│ 	case force⁰(ls²) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)] | LH_N  => [LH_N]}: 698
//│ 	case force⁰(ls³) of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)] | LH_N  => [LH_N]}: 820
//│ 	case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 872
//│ [LH_C _lh_replicate_arg2¹ replicate_₀_₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 894 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_N]: 895 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_N]: 909 --->
//│ 	case force⁰(ls²) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)] | LH_N  => [LH_N]}: 698
//│ 	case force⁰(ls³) of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)] | LH_N  => [LH_N]}: 820
//│ 	case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 872
//│ [LH_C h¹⁹ take_lz_₀_₁((n⁴ - 1), t¹⁹)]: 947 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_N]: 948 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_N]: 950 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_N]: 994 --->
//│ 	case xs¹⁶ of {LH_C h²⁴ t²⁴ => [LH_C h²⁴ mappend_₀_₀(t²⁴, ys¹⁶)] | LH_N  => ys¹⁶}: 1215
//│ [LH_C ' ' [LH_N]]: 995 --->
//│ 	case xs¹⁶ of {LH_C h²⁴ t²⁴ => [LH_C h²⁴ mappend_₀_₀(t²⁴, ys¹⁶)] | LH_N  => ys¹⁶}: 1215
//│ [LH_N]: 999 --->
//│ 	case force⁰(ls²) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)] | LH_N  => [LH_N]}: 698
//│ 	case force⁰(ls³) of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)] | LH_N  => [LH_N]}: 820
//│ 	case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 872
//│ [LH_P2 mappend_₁_₀(take_lz_₁_₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate_₀_₁((k⁴ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 1001 --->
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend_₂_₀(mappend_₃_₀(concat_₀_₀(_lh_percOp_LH_P2_0²), mappend_₄_₀([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 1043
//│ [LH_N]: 1018 --->
//│ 	case xs¹⁵ of {LH_C h²² t²² => [LH_C h²² mappend_₄_₀(t²², ys¹⁵)] | LH_N  => ys¹⁵}: 1192
//│ [LH_C ':' [LH_N]]: 1019 --->
//│ 	case xs¹⁵ of {LH_C h²² t²² => [LH_C h²² mappend_₄_₀(t²², ys¹⁵)] | LH_N  => ys¹⁵}: 1192
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 1020 --->
//│ 	case xs¹⁵ of {LH_C h²² t²² => [LH_C h²² mappend_₄_₀(t²², ys¹⁵)] | LH_N  => ys¹⁵}: 1192
//│ [LH_N]: 1028 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_C 'n' [LH_N]]: 1029 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_C h²⁰ take_lz_₁_₁((n⁵ - 1), t²⁰)]: 1069 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)] | LH_N  => ys⁸}: 543
//│ [LH_N]: 1070 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)] | LH_N  => ys⁸}: 543
//│ [LH_N]: 1072 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)] | LH_N  => ys⁸}: 543
//│ [LH_C _lh_replicate_arg2² replicate_₀_₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1091 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_N]: 1092 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_P2 take_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 1106 --->
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend_₂_₀(mappend_₃_₀(concat_₀_₀(_lh_percOp_LH_P2_0²), mappend_₄_₀([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 1043
//│ [LH_C h²¹ mappend_₅_₁(t²¹, ys¹⁴)]: 1126 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 1141 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend_₂_₁(mappend_₃_₁(concat_₀_₁(_lh_percOp_LH_P2_0¹), mappend_₄_₁([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 792
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 1177 --->
//│ 	case _lh_matchIdent⁴ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁵ = divmod_₀_₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp_₀_₀(k², [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 644
//│ [LH_C h²² mappend_₄_₀(t²², ys¹⁵)]: 1190 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_N]: 1203 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_₃_₀(t¹², ys⁹)] | LH_N  => ys⁹}: 555
//│ [LH_C h²⁴ mappend_₀_₀(t²⁴, ys¹⁶)]: 1213 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_₃_₀(t¹², ys⁹)] | LH_N  => ys⁹}: 555
//│ [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)]: 1225 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_N]: 1238 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)] | LH_N  => ys⁶}: 481
//│ ------------------
//│ case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)] | LH_N  => ys⁶}: 481 --->
//│ 	[LH_C h¹⁰ mappend_₀_₁(t¹⁰, ys⁷)]: 514
//│ 	[LH_N]: 1238
//│ case xs⁷ of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ mappend_₀_₁(t¹⁰, ys⁷)] | LH_N  => ys⁷}: 516 --->
//│ 	NoProd
//│ 	[LH_N]: 743
//│ 	[LH_C ' ' [LH_N]]: 744
//│ case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)] | LH_N  => ys⁸}: 543 --->
//│ 	[LH_C h²⁰ take_lz_₁_₁((n⁵ - 1), t²⁰)]: 1069
//│ 	[LH_N]: 1070
//│ 	[LH_N]: 1072
//│ case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_₃_₀(t¹², ys⁹)] | LH_N  => ys⁹}: 555 --->
//│ 	[LH_N]: 1203
//│ 	[LH_C h²⁴ mappend_₀_₀(t²⁴, ys¹⁶)]: 1213
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp_₀_₀(k², [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 641 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 494
//│ case _lh_matchIdent⁴ of {LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => let _lh_matchIdent⁵ = divmod_₀_₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp_₀_₀(k², [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰} | _  => error⁰}: 644 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 1177
//│ case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675 --->
//│ 	[LH_C h¹² mappend_₃_₀(t¹², ys⁹)]: 553
//│ 	[LH_C h¹³ mappend_₅_₀(t¹³, ys¹⁰)]: 661
//│ 	[LH_N]: 1028
//│ 	[LH_C 'n' [LH_N]]: 1029
//│ 	[LH_C h²² mappend_₄_₀(t²², ys¹⁵)]: 1190
//│ case force⁰(ls²) of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)] | LH_N  => [LH_N]}: 698 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 638
//│ 	[LH_N]: 748
//│ 	[LH_N]: 859
//│ 	[LH_N]: 909
//│ 	[LH_N]: 999
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend_₂_₁(mappend_₃_₁(concat_₀_₁(_lh_percOp_LH_P2_0¹), mappend_₄_₁([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 792 --->
//│ 	[LH_P2 mappend_₁_₁(take_lz_₁_₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate_₀_₀((k³ - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 750
//│ 	[LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 1141
//│ case force⁰(ls³) of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)] | LH_N  => [LH_N]}: 820 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 638
//│ 	[LH_N]: 748
//│ 	[LH_N]: 859
//│ 	[LH_N]: 909
//│ 	[LH_N]: 999
//│ case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 834 --->
//│ 	[LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)]: 696
//│ 	[LH_N]: 697
//│ 	[LH_N]: 699
//│ case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846 --->
//│ 	[LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)]: 479
//│ 	[LH_N]: 777
//│ 	[LH_C 'n' [LH_N]]: 778
//│ 	[LH_C h²¹ mappend_₅_₁(t²¹, ys¹⁴)]: 1126
//│ 	[LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)]: 1225
//│ case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz_₀_₀((_lh_drop_lz_arg1¹ - 1), _lh_drop_lz_LH_C_1¹)) | _  => error⁰}: 872 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 638
//│ 	[LH_N]: 748
//│ 	[LH_N]: 859
//│ 	[LH_N]: 909
//│ 	[LH_N]: 999
//│ case _lh_matchIdent⁸ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₁((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 922 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 638
//│ case force⁰(ls⁴) of {LH_C h¹⁹ t¹⁹ => [LH_C h¹⁹ take_lz_₀_₁((n⁴ - 1), t¹⁹)] | LH_N  => [LH_N]}: 949 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 638
//│ case _lh_matchIdent⁹ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend_₂_₀(mappend_₃_₀(concat_₀_₀(_lh_percOp_LH_P2_0²), mappend_₄_₀([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 1043 --->
//│ 	[LH_P2 mappend_₁_₀(take_lz_₁_₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate_₀_₁((k⁴ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 1001
//│ 	[LH_P2 take_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 1106
//│ case force⁰(ls⁵) of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lz_₁_₁((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1071 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])]: 638
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1180 --->
//│ 	[LH_P3 1 0 1]: 528
//│ 	[LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹]: 608
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹]: 636
//│ case xs¹⁵ of {LH_C h²² t²² => [LH_C h²² mappend_₄_₀(t²², ys¹⁵)] | LH_N  => ys¹⁵}: 1192 --->
//│ 	[LH_N]: 1018
//│ 	[LH_C ':' [LH_N]]: 1019
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 1020
//│ case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204 --->
//│ 	[LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)]: 541
//│ 	[LH_C h¹⁹ take_lz_₀_₁((n⁴ - 1), t¹⁹)]: 947
//│ 	[LH_N]: 948
//│ 	[LH_N]: 950
//│ 	[LH_C _lh_replicate_arg2² replicate_₀_₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1091
//│ 	[LH_N]: 1092
//│ case xs¹⁶ of {LH_C h²⁴ t²⁴ => [LH_C h²⁴ mappend_₀_₀(t²⁴, ys¹⁶)] | LH_N  => ys¹⁶}: 1215 --->
//│ 	NoProd
//│ 	[LH_N]: 994
//│ 	[LH_C ' ' [LH_N]]: 995
//│ case xs¹⁷ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)] | LH_N  => ys¹⁷}: 1227 --->
//│ 	[LH_N]: 767
//│ 	[LH_C ':' [LH_N]]: 768
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 769
//│ case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239 --->
//│ 	[LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)]: 818
//│ 	[LH_N]: 819
//│ 	[LH_N]: 821
//│ 	[LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)]: 832
//│ 	[LH_C _lh_replicate_arg2¹ replicate_₀_₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 894
//│ 	[LH_N]: 895
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)]: 479 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 494 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp_₀_₀(k², [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 641
//│ [LH_C h¹⁰ mappend_₀_₁(t¹⁰, ys⁷)]: 514 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)] | LH_N  => ys⁶}: 481
//│ [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)]: 541 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_C h¹² mappend_₃_₀(t¹², ys⁹)]: 553 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_C h¹³ mappend_₅_₀(t¹³, ys¹⁰)]: 661 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)]: 696 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 834
//│ [LH_N]: 697 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 834
//│ [LH_N]: 699 --->
//│ 	case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 834
//│ [LH_P2 mappend_₁_₁(take_lz_₁_₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate_₀_₀((k³ - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 750 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend_₂_₁(mappend_₃_₁(concat_₀_₁(_lh_percOp_LH_P2_0¹), mappend_₄_₁([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 792
//│ [LH_N]: 767 --->
//│ 	case xs¹⁷ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)] | LH_N  => ys¹⁷}: 1227
//│ [LH_C ':' [LH_N]]: 768 --->
//│ 	case xs¹⁷ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)] | LH_N  => ys¹⁷}: 1227
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 769 --->
//│ 	case xs¹⁷ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)] | LH_N  => ys¹⁷}: 1227
//│ [LH_N]: 777 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_C 'n' [LH_N]]: 778 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)]: 818 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_N]: 819 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_N]: 821 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)]: 832 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_C _lh_replicate_arg2¹ replicate_₀_₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 894 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_N]: 895 --->
//│ 	case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239
//│ [LH_C h¹⁹ take_lz_₀_₁((n⁴ - 1), t¹⁹)]: 947 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_N]: 948 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_N]: 950 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_P2 mappend_₁_₀(take_lz_₁_₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate_₀_₁((k⁴ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 1001 --->
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend_₂_₀(mappend_₃_₀(concat_₀_₀(_lh_percOp_LH_P2_0²), mappend_₄_₀([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 1043
//│ [LH_N]: 1018 --->
//│ 	case xs¹⁵ of {LH_C h²² t²² => [LH_C h²² mappend_₄_₀(t²², ys¹⁵)] | LH_N  => ys¹⁵}: 1192
//│ [LH_C ':' [LH_N]]: 1019 --->
//│ 	case xs¹⁵ of {LH_C h²² t²² => [LH_C h²² mappend_₄_₀(t²², ys¹⁵)] | LH_N  => ys¹⁵}: 1192
//│ [LH_C 't' [LH_C ':' [LH_N]]]: 1020 --->
//│ 	case xs¹⁵ of {LH_C h²² t²² => [LH_C h²² mappend_₄_₀(t²², ys¹⁵)] | LH_N  => ys¹⁵}: 1192
//│ [LH_N]: 1028 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_C 'n' [LH_N]]: 1029 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_C h²⁰ take_lz_₁_₁((n⁵ - 1), t²⁰)]: 1069 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)] | LH_N  => ys⁸}: 543
//│ [LH_N]: 1070 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)] | LH_N  => ys⁸}: 543
//│ [LH_N]: 1072 --->
//│ 	case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)] | LH_N  => ys⁸}: 543
//│ [LH_C _lh_replicate_arg2² replicate_₀_₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1091 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_N]: 1092 --->
//│ 	case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204
//│ [LH_P2 take_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 1106 --->
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend_₂_₀(mappend_₃_₀(concat_₀_₀(_lh_percOp_LH_P2_0²), mappend_₄_₀([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 1043
//│ [LH_C h²¹ mappend_₅_₁(t²¹, ys¹⁴)]: 1126 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 1141 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend_₂_₁(mappend_₃_₁(concat_₀_₁(_lh_percOp_LH_P2_0¹), mappend_₄_₁([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 792
//│ [LH_C h²² mappend_₄_₀(t²², ys¹⁵)]: 1190 --->
//│ 	case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675
//│ [LH_N]: 1203 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_₃_₀(t¹², ys⁹)] | LH_N  => ys⁹}: 555
//│ [LH_C h²⁴ mappend_₀_₀(t²⁴, ys¹⁶)]: 1213 --->
//│ 	case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_₃_₀(t¹², ys⁹)] | LH_N  => ys⁹}: 555
//│ [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)]: 1225 --->
//│ 	case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846
//│ [LH_N]: 1238 --->
//│ 	case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)] | LH_N  => ys⁶}: 481
//│ ------------------
//│ case xs⁶ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)] | LH_N  => ys⁶}: 481 --->
//│ 	[LH_C h¹⁰ mappend_₀_₁(t¹⁰, ys⁷)]: 514
//│ 	[LH_N]: 1238
//│ case xs⁸ of {LH_C h¹¹ t¹¹ => [LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)] | LH_N  => ys⁸}: 543 --->
//│ 	[LH_C h²⁰ take_lz_₁_₁((n⁵ - 1), t²⁰)]: 1069
//│ 	[LH_N]: 1070
//│ 	[LH_N]: 1072
//│ case xs⁹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_₃_₀(t¹², ys⁹)] | LH_N  => ys⁹}: 555 --->
//│ 	[LH_N]: 1203
//│ 	[LH_C h²⁴ mappend_₀_₀(t²⁴, ys¹⁶)]: 1213
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_hashOp_LH_P2_0¹ _lh_hashOp_LH_P2_1¹ => if ((_lh_hashOp_LH_P3_0¹ > _lh_hashOp_LH_P3_1¹) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0¹) >= _lh_hashOp_LH_P3_2¹)) then force⁰(hashOp_₀_₀(k², [LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀(k², [LH_P3 (_lh_hashOp_LH_P3_0¹ * 10) ((_lh_hashOp_LH_P3_1¹ - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2¹)) * 10) _lh_hashOp_LH_P3_2¹])] | _  => error⁰}: 641 --->
//│ 	[LH_P2 div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹) (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)]: 494
//│ case xs¹¹ of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_₂_₀(t¹⁴, ys¹¹)] | LH_N  => ys¹¹}: 675 --->
//│ 	[LH_C h¹² mappend_₃_₀(t¹², ys⁹)]: 553
//│ 	[LH_C h¹³ mappend_₅_₀(t¹³, ys¹⁰)]: 661
//│ 	[LH_N]: 1028
//│ 	[LH_C 'n' [LH_N]]: 1029
//│ 	[LH_C h²² mappend_₄_₀(t²², ys¹⁵)]: 1190
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_percOp_LH_P2_0¹ _lh_percOp_LH_P2_1¹ => mappend_₂_₁(mappend_₃_₁(concat_₀_₁(_lh_percOp_LH_P2_0¹), mappend_₄_₁([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₁(string_of_int⁰(j¹), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j¹, _lh_percOp_LH_P2_1¹, _lh_percOp_arg3¹)) | _  => error⁰}: 792 --->
//│ 	[LH_P2 mappend_₁_₁(take_lz_₁_₀((_lh_percOp_arg3¹ % 10), _lh_percOp_arg2¹), replicate_₀_₀((k³ - _lh_percOp_arg3¹), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 750
//│ 	[LH_P2 take_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) drop_lz_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)]: 1141
//│ case xs¹² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)] | LH_N  => ys¹²}: 834 --->
//│ 	[LH_C h¹⁵ take_lz_₁_₀((n² - 1), t¹⁵)]: 696
//│ 	[LH_N]: 697
//│ 	[LH_N]: 699
//│ case xs¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_₂_₁(t¹⁸, ys¹³)] | LH_N  => ys¹³}: 846 --->
//│ 	[LH_C h⁹ mappend_₃_₁(t⁹, ys⁶)]: 479
//│ 	[LH_N]: 777
//│ 	[LH_C 'n' [LH_N]]: 778
//│ 	[LH_C h²¹ mappend_₅_₁(t²¹, ys¹⁴)]: 1126
//│ 	[LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)]: 1225
//│ case _lh_matchIdent⁹ of {LH_P2 _lh_percOp_LH_P2_0² _lh_percOp_LH_P2_1² => mappend_₂_₀(mappend_₃_₀(concat_₀_₀(_lh_percOp_LH_P2_0²), mappend_₄_₀([LH_C 't' [LH_C ':' [LH_N]]], mappend_₅_₀(string_of_int⁰(j²), [LH_C 'n' [LH_N]]))), percOp_₀_₁(j², _lh_percOp_LH_P2_1², _lh_percOp_arg3²)) | _  => error⁰}: 1043 --->
//│ 	[LH_P2 mappend_₁_₀(take_lz_₁_₁((_lh_percOp_arg3² % 10), _lh_percOp_arg2²), replicate_₀_₁((k⁴ - _lh_percOp_arg3²), [LH_C ' ' [LH_N]])) lazy⁰([LH_N])]: 1001
//│ 	[LH_P2 take_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹) drop_lz_₀_₁(_lh_splitAt_lz_arg1¹, _lh_splitAt_lz_arg2¹)]: 1106
//│ case xs¹⁵ of {LH_C h²² t²² => [LH_C h²² mappend_₄_₀(t²², ys¹⁵)] | LH_N  => ys¹⁵}: 1192 --->
//│ 	[LH_N]: 1018
//│ 	[LH_C ':' [LH_N]]: 1019
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 1020
//│ case lss¹ of {LH_C h²³ t²³ => mappend_₀_₀(h²³, concat_₀_₀(t²³)) | LH_N  => [LH_N]}: 1204 --->
//│ 	[LH_C h¹¹ mappend_₁_₀(t¹¹, ys⁸)]: 541
//│ 	[LH_C h¹⁹ take_lz_₀_₁((n⁴ - 1), t¹⁹)]: 947
//│ 	[LH_N]: 948
//│ 	[LH_N]: 950
//│ 	[LH_C _lh_replicate_arg2² replicate_₀_₁((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)]: 1091
//│ 	[LH_N]: 1092
//│ case xs¹⁷ of {LH_C h²⁵ t²⁵ => [LH_C h²⁵ mappend_₄_₁(t²⁵, ys¹⁷)] | LH_N  => ys¹⁷}: 1227 --->
//│ 	[LH_N]: 767
//│ 	[LH_C ':' [LH_N]]: 768
//│ 	[LH_C 't' [LH_C ':' [LH_N]]]: 769
//│ case lss² of {LH_C h²⁶ t²⁶ => mappend_₀_₁(h²⁶, concat_₀_₁(t²⁶)) | LH_N  => [LH_N]}: 1239 --->
//│ 	[LH_C h¹⁶ take_lz_₀_₀((n³ - 1), t¹⁶)]: 818
//│ 	[LH_N]: 819
//│ 	[LH_N]: 821
//│ 	[LH_C h¹⁷ mappend_₁_₁(t¹⁷, ys¹²)]: 832
//│ 	[LH_C _lh_replicate_arg2¹ replicate_₀_₀((_lh_replicate_arg1¹ - 1), _lh_replicate_arg2¹)]: 894
//│ 	[LH_N]: 895
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPiDigits_nofib_₀_₀(primId⁰(5000))
//│ def testPiDigits_nofib_₀_₀(_lh_testPiDigits_nofib_arg1²) = 
//│ 	pidgits_₀_₀(_lh_testPiDigits_nofib_arg1²)
//│ 	where
//│ 	def pidgits_₀_₀(_lh_pidgits_arg1²) = 
//│ 		percOp_₀_₀(0, hashOp_₀_₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1²)
//│ 		where
//│ 		def hashOp_₀_₀(_lh_hashOp_arg1², _lh_hashOp_arg2²) = 
//│ 			lazy⁰(
//│ 				let k⁸ = (_lh_hashOp_arg1² + 1)
//│ 				in let _lh_matchIdent¹⁴ = ampOp_₀_₀(k⁸, _lh_hashOp_arg2²)
//│ 				in case _lh_matchIdent¹⁴ of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0¹ _lh_hashOp_LH_P3_1¹ _lh_hashOp_LH_P3_2¹ => 
//│ 						let _lh_matchIdent¹⁵ = divmod_₀_₀(((_lh_hashOp_LH_P3_0¹ * 3) + _lh_hashOp_LH_P3_1¹), _lh_hashOp_LH_P3_2¹)
//│ 						in _lh_matchIdent¹⁵(_lh_hashOp_LH_P3_0¹, _lh_hashOp_LH_P3_1¹, _lh_hashOp_LH_P3_2¹, k⁸)
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp_₀_₀(_lh_ampOp_arg1², _lh_ampOp_arg2²) = 
//│ 				case _lh_ampOp_arg2² of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y² = ((_lh_ampOp_arg1² * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1²) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y²) (_lh_ampOp_LH_P3_2¹ * y²)]
//│ 					| _  => error⁰}
//│ 			def divmod_₀_₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 				let _lh_hashOp_LH_P2_1² = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 				in let _lh_hashOp_LH_P2_0² = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 				in (fun _lh_hashOp_LH_P3_0² -> (fun _lh_hashOp_LH_P3_1² -> (fun _lh_hashOp_LH_P3_2² -> (fun k⁶ -> if ((_lh_hashOp_LH_P3_0² > _lh_hashOp_LH_P3_1²) || ((_lh_hashOp_LH_P2_1² + _lh_hashOp_LH_P3_0²) >= _lh_hashOp_LH_P3_2²)) then force⁰(hashOp_₀_₀(k⁶, [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0²) hashOp_₀_₀(k⁶, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0² * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]))))
//│ 		def percOp_₀_₀(_lh_percOp_arg1⁴, _lh_percOp_arg2⁴, _lh_percOp_arg3⁶) = 
//│ 			if (_lh_percOp_arg1⁴ >= _lh_percOp_arg3⁶) then [LH_N] else 
//│ 				let k⁷ = (_lh_percOp_arg1⁴ + 10)
//│ 				in let j⁶ = min_₀_₀(_lh_percOp_arg3⁶, k⁷)
//│ 				in let _lh_matchIdent¹² = if (k⁷ > _lh_percOp_arg3⁶) then 
//│ 					let _lh_percOp_LH_P2_1⁵ = lazy⁰([LH_N])
//│ 					in let _lh_percOp_LH_P2_0⁵ = mappend_₁_₀(take_lz_₁_₁((_lh_percOp_arg3⁶ % 10), _lh_percOp_arg2⁴), replicate_₀_₁((k⁷ - _lh_percOp_arg3⁶), [LH_C ' ' [LH_N]]))
//│ 					in (fun _lh_percOp_arg3⁷ -> (fun j⁷ -> mappend_₂_₀(mappend_₃_₀(concat_₀_₀(_lh_percOp_LH_P2_0⁵), mappend_₄_₀(
//│ 						let t⁴⁶ = 	
//│ 							let t⁴⁸ = (fun ys⁵⁶ -> ys⁵⁶)
//│ 							in let h⁴⁸ = ':'
//│ 							in (fun ys⁵⁴ -> 
//│ 								let t⁴⁹ = mappend_₄_₀(t⁴⁸, ys⁵⁴)
//│ 								in let h⁴⁹ = h⁴⁸
//│ 								in (fun ys⁵⁵ -> [LH_C h⁴⁹ mappend_₂_₀(t⁴⁹, ys⁵⁵)]))
//│ 						in let h⁴⁶ = 't'
//│ 						in (fun ys⁵² -> 
//│ 							let t⁴⁷ = mappend_₄_₀(t⁴⁶, ys⁵²)
//│ 							in let h⁴⁷ = h⁴⁶
//│ 							in (fun ys⁵³ -> [LH_C h⁴⁷ mappend_₂_₀(t⁴⁷, ys⁵³)])), mappend_₅_₀(string_of_int⁰(j⁷), 
//│ 						let t⁵⁰ = (fun ys⁵⁸ -> ys⁵⁸)
//│ 						in let h⁵⁰ = 'n'
//│ 						in (fun ys⁵⁷ -> [LH_C h⁵⁰ mappend_₂_₀(t⁵⁰, ys⁵⁷)])))), percOp_₀_₁(j⁷, _lh_percOp_LH_P2_1⁵, _lh_percOp_arg3⁷)))) else splitAt_lz_₀_₁(10, _lh_percOp_arg2⁴)
//│ 				in _lh_matchIdent¹²(_lh_percOp_arg3⁶, j⁶)
//│ 			where
//│ 			def concat_₀_₀(lss⁴) = 
//│ 				lss⁴(99)
//│ 				where
//│ 				def mappend_₀_₀(xs²⁶, ys⁵⁹) = 
//│ 					case xs²⁶ of {
//│ 						LH_C h²⁴ t²⁴ => 
//│ 							let t⁵¹ = mappend_₀_₀(t²⁴, ys⁵⁹)
//│ 							in let h⁵¹ = h²⁴
//│ 							in (fun ys⁶⁰ -> 
//│ 								let t⁵² = mappend_₃_₀(t⁵¹, ys⁶⁰)
//│ 								in let h⁵² = h⁵¹
//│ 								in (fun ys⁶¹ -> [LH_C h⁵² mappend_₂_₀(t⁵², ys⁶¹)]))
//│ 						| LH_N  => ys⁵⁹}
//│ 			def mappend_₁_₀(xs²³, ys³⁸) = 
//│ 				xs²³(ys³⁸)
//│ 			def mappend_₂_₀(xs²¹, ys³⁶) = 
//│ 				xs²¹(ys³⁶)
//│ 			def mappend_₃_₀(xs²⁵, ys⁴⁴) = 
//│ 				xs²⁵(ys⁴⁴)
//│ 			def mappend_₄_₀(xs¹⁸, ys³¹) = 
//│ 				xs¹⁸(ys³¹)
//│ 			def mappend_₅_₀(xs¹⁹, ys³²) = 
//│ 				case xs¹⁹ of {
//│ 					LH_C h¹³ t¹³ => 
//│ 						let t³⁶ = mappend_₅_₀(t¹³, ys³²)
//│ 						in let h³⁶ = h¹³
//│ 						in (fun ys³³ -> [LH_C h³⁶ mappend_₂_₀(t³⁶, ys³³)])
//│ 					| LH_N  => ys³²}
//│ 			def min_₀_₀(_lh_min_arg1³, _lh_min_arg2³) = 
//│ 				if (_lh_min_arg1³ > _lh_min_arg2³) then _lh_min_arg2³ else _lh_min_arg1³
//│ 			def percOp_₀_₁(_lh_percOp_arg1³, _lh_percOp_arg2³, _lh_percOp_arg3³) = 
//│ 				if (_lh_percOp_arg1³ >= _lh_percOp_arg3³) then [LH_N] else 
//│ 					let k⁵ = (_lh_percOp_arg1³ + 10)
//│ 					in let j³ = min_₀_₁(_lh_percOp_arg3³, k⁵)
//│ 					in let _lh_matchIdent¹⁰ = if (k⁵ > _lh_percOp_arg3³) then 
//│ 						let _lh_percOp_LH_P2_1³ = lazy⁰([LH_N])
//│ 						in let _lh_percOp_LH_P2_0³ = mappend_₁_₁(take_lz_₁_₀((_lh_percOp_arg3³ % 10), _lh_percOp_arg2³), replicate_₀_₀((k⁵ - _lh_percOp_arg3³), [LH_C ' ' [LH_N]]))
//│ 						in (fun _lh_percOp_arg3⁴ -> (fun j⁴ -> mappend_₂_₁(mappend_₃_₁(concat_₀_₁(_lh_percOp_LH_P2_0³), mappend_₄_₁(
//│ 							let t³⁰ = 	
//│ 								let t³² = (fun ys²⁷ -> ys²⁷)
//│ 								in let h³² = ':'
//│ 								in (fun ys²⁵ -> 
//│ 									let t³³ = mappend_₄_₁(t³², ys²⁵)
//│ 									in let h³³ = h³²
//│ 									in (fun ys²⁶ -> [LH_C h³³ mappend_₂_₁(t³³, ys²⁶)]))
//│ 							in let h³⁰ = 't'
//│ 							in (fun ys²³ -> 
//│ 								let t³¹ = mappend_₄_₁(t³⁰, ys²³)
//│ 								in let h³¹ = h³⁰
//│ 								in (fun ys²⁴ -> [LH_C h³¹ mappend_₂_₁(t³¹, ys²⁴)])), mappend_₅_₁(string_of_int⁰(j⁴), 
//│ 							let t³⁴ = (fun ys²⁹ -> ys²⁹)
//│ 							in let h³⁴ = 'n'
//│ 							in (fun ys²⁸ -> [LH_C h³⁴ mappend_₂_₁(t³⁴, ys²⁸)])))), percOp_₀_₁(j⁴, _lh_percOp_LH_P2_1³, _lh_percOp_arg3⁴)))) else splitAt_lz_₀_₀(10, _lh_percOp_arg2³)
//│ 					in _lh_matchIdent¹⁰(_lh_percOp_arg3³, j³)
//│ 				where
//│ 				def concat_₀_₁(lss³) = 
//│ 					lss³(99)
//│ 					where
//│ 					def mappend_₀_₁(xs²⁴, ys³⁹) = 
//│ 						case xs²⁴ of {
//│ 							LH_C h¹⁰ t¹⁰ => 
//│ 								let t³⁸ = mappend_₀_₁(t¹⁰, ys³⁹)
//│ 								in let h³⁸ = h¹⁰
//│ 								in (fun ys⁴⁰ -> 
//│ 									let t³⁹ = mappend_₃_₁(t³⁸, ys⁴⁰)
//│ 									in let h³⁹ = h³⁸
//│ 									in (fun ys⁴¹ -> [LH_C h³⁹ mappend_₂_₁(t³⁹, ys⁴¹)]))
//│ 							| LH_N  => ys³⁹}
//│ 				def mappend_₁_₁(xs²⁷, ys⁶⁵) = 
//│ 					xs²⁷(ys⁶⁵)
//│ 				def mappend_₂_₁(xs²⁰, ys³⁵) = 
//│ 					xs²⁰(ys³⁵)
//│ 				def mappend_₃_₁(xs²², ys³⁷) = 
//│ 					xs²²(ys³⁷)
//│ 				def mappend_₄_₁(xs²⁹, ys⁶⁸) = 
//│ 					xs²⁹(ys⁶⁸)
//│ 				def mappend_₅_₁(xs²⁸, ys⁶⁶) = 
//│ 					case xs²⁸ of {
//│ 						LH_C h²¹ t²¹ => 
//│ 							let t⁵⁵ = mappend_₅_₁(t²¹, ys⁶⁶)
//│ 							in let h⁵⁵ = h²¹
//│ 							in (fun ys⁶⁷ -> [LH_C h⁵⁵ mappend_₂_₁(t⁵⁵, ys⁶⁷)])
//│ 						| LH_N  => ys⁶⁶}
//│ 				def min_₀_₁(_lh_min_arg1⁴, _lh_min_arg2⁴) = 
//│ 					if (_lh_min_arg1⁴ > _lh_min_arg2⁴) then _lh_min_arg2⁴ else _lh_min_arg1⁴
//│ 				def replicate_₀_₀(_lh_replicate_arg1³, _lh_replicate_arg2³) = 
//│ 					if (_lh_replicate_arg1³ > 0) then 
//│ 						let t³⁵ = replicate_₀_₀((_lh_replicate_arg1³ - 1), _lh_replicate_arg2³)
//│ 						in let h³⁵ = _lh_replicate_arg2³
//│ 						in (fun _lh_dummy⁴ -> mappend_₀_₁(h³⁵, concat_₀_₁(t³⁵))) else (fun _lh_dummy⁵ -> (fun ys³⁰ -> ys³⁰))
//│ 				def splitAt_lz_₀_₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³) = 
//│ 					let _lh_percOp_LH_P2_1⁴ = drop_lz_₀_₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in let _lh_percOp_LH_P2_0⁴ = take_lz_₀_₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 					in (fun _lh_percOp_arg3⁵ -> (fun j⁵ -> mappend_₂_₁(mappend_₃_₁(concat_₀_₁(_lh_percOp_LH_P2_0⁴), mappend_₄_₁(
//│ 						let t⁴¹ = 	
//│ 							let t⁴³ = (fun ys⁴⁹ -> ys⁴⁹)
//│ 							in let h⁴³ = ':'
//│ 							in (fun ys⁴⁷ -> 
//│ 								let t⁴⁴ = mappend_₄_₁(t⁴³, ys⁴⁷)
//│ 								in let h⁴⁴ = h⁴³
//│ 								in (fun ys⁴⁸ -> [LH_C h⁴⁴ mappend_₂_₁(t⁴⁴, ys⁴⁸)]))
//│ 						in let h⁴¹ = 't'
//│ 						in (fun ys⁴⁵ -> 
//│ 							let t⁴² = mappend_₄_₁(t⁴¹, ys⁴⁵)
//│ 							in let h⁴² = h⁴¹
//│ 							in (fun ys⁴⁶ -> [LH_C h⁴² mappend_₂_₁(t⁴², ys⁴⁶)])), mappend_₅_₁(string_of_int⁰(j⁵), 
//│ 						let t⁴⁵ = (fun ys⁵¹ -> ys⁵¹)
//│ 						in let h⁴⁵ = 'n'
//│ 						in (fun ys⁵⁰ -> [LH_C h⁴⁵ mappend_₂_₁(t⁴⁵, ys⁵⁰)])))), percOp_₀_₁(j⁵, _lh_percOp_LH_P2_1⁴, _lh_percOp_arg3⁵))))
//│ 					where
//│ 					def drop_lz_₀_₀(_lh_drop_lz_arg1⁴, _lh_drop_lz_arg2⁴) = 
//│ 						if (_lh_drop_lz_arg1⁴ > 0) then lazy⁰(
//│ 							let _lh_matchIdent¹³ = force⁰(_lh_drop_lz_arg2⁴)
//│ 							in case _lh_matchIdent¹³ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0¹ _lh_drop_lz_LH_C_1¹ => force⁰(drop_lz_₀_₀((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1¹))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2⁴
//│ 					def take_lz_₀_₀(n⁷, ls⁷) = 
//│ 						if (n⁷ > 0) then case force⁰(ls⁷) of {
//│ 							LH_C h¹⁶ t¹⁶ => 
//│ 								let t²⁹ = take_lz_₀_₀((n⁷ - 1), t¹⁶)
//│ 								in let h²⁹ = h¹⁶
//│ 								in (fun _lh_dummy¹ -> mappend_₀_₁(h²⁹, concat_₀_₁(t²⁹)))
//│ 							| LH_N  => (fun _lh_dummy² -> (fun ys²¹ -> ys²¹))} else (fun _lh_dummy³ -> (fun ys²² -> ys²²))
//│ 				def take_lz_₁_₀(n⁹, ls⁹) = 
//│ 					if (n⁹ > 0) then case force⁰(ls⁹) of {
//│ 						LH_C h¹⁵ t¹⁵ => 
//│ 							let t⁵³ = take_lz_₁_₀((n⁹ - 1), t¹⁵)
//│ 							in let h⁵³ = h¹⁵
//│ 							in (fun ys⁶² -> 
//│ 								let t⁵⁴ = mappend_₁_₁(t⁵³, ys⁶²)
//│ 								in let h⁵⁴ = h⁵³
//│ 								in (fun _lh_dummy¹¹ -> mappend_₀_₁(h⁵⁴, concat_₀_₁(t⁵⁴))))
//│ 						| LH_N  => (fun ys⁶³ -> ys⁶³)} else (fun ys⁶⁴ -> ys⁶⁴)
//│ 			def replicate_₀_₁(_lh_replicate_arg1⁴, _lh_replicate_arg2⁴) = 
//│ 				if (_lh_replicate_arg1⁴ > 0) then 
//│ 					let t³⁷ = replicate_₀_₁((_lh_replicate_arg1⁴ - 1), _lh_replicate_arg2⁴)
//│ 					in let h³⁷ = _lh_replicate_arg2⁴
//│ 					in (fun _lh_dummy⁶ -> mappend_₀_₀(h³⁷, concat_₀_₀(t³⁷))) else (fun _lh_dummy⁷ -> (fun ys³⁴ -> ys³⁴))
//│ 			def splitAt_lz_₀_₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴) = 
//│ 				let _lh_percOp_LH_P2_1⁶ = drop_lz_₀_₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 				in let _lh_percOp_LH_P2_0⁶ = take_lz_₀_₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 				in (fun _lh_percOp_arg3⁸ -> (fun j⁸ -> mappend_₂_₀(mappend_₃_₀(concat_₀_₀(_lh_percOp_LH_P2_0⁶), mappend_₄_₀(
//│ 					let t⁵⁶ = 	
//│ 						let t⁵⁸ = (fun ys⁷³ -> ys⁷³)
//│ 						in let h⁵⁸ = ':'
//│ 						in (fun ys⁷¹ -> 
//│ 							let t⁵⁹ = mappend_₄_₀(t⁵⁸, ys⁷¹)
//│ 							in let h⁵⁹ = h⁵⁸
//│ 							in (fun ys⁷² -> [LH_C h⁵⁹ mappend_₂_₀(t⁵⁹, ys⁷²)]))
//│ 					in let h⁵⁶ = 't'
//│ 					in (fun ys⁶⁹ -> 
//│ 						let t⁵⁷ = mappend_₄_₀(t⁵⁶, ys⁶⁹)
//│ 						in let h⁵⁷ = h⁵⁶
//│ 						in (fun ys⁷⁰ -> [LH_C h⁵⁷ mappend_₂_₀(t⁵⁷, ys⁷⁰)])), mappend_₅_₀(string_of_int⁰(j⁸), 
//│ 					let t⁶⁰ = (fun ys⁷⁵ -> ys⁷⁵)
//│ 					in let h⁶⁰ = 'n'
//│ 					in (fun ys⁷⁴ -> [LH_C h⁶⁰ mappend_₂_₀(t⁶⁰, ys⁷⁴)])))), percOp_₀_₁(j⁸, _lh_percOp_LH_P2_1⁶, _lh_percOp_arg3⁸))))
//│ 				where
//│ 				def drop_lz_₀_₁(_lh_drop_lz_arg1³, _lh_drop_lz_arg2³) = 
//│ 					if (_lh_drop_lz_arg1³ > 0) then lazy⁰(
//│ 						let _lh_matchIdent¹¹ = force⁰(_lh_drop_lz_arg2³)
//│ 						in case _lh_matchIdent¹¹ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₁((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1²))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2³
//│ 				def take_lz_₀_₁(n⁸, ls⁸) = 
//│ 					if (n⁸ > 0) then case force⁰(ls⁸) of {
//│ 						LH_C h¹⁹ t¹⁹ => 
//│ 							let t⁴⁰ = take_lz_₀_₁((n⁸ - 1), t¹⁹)
//│ 							in let h⁴⁰ = h¹⁹
//│ 							in (fun _lh_dummy⁸ -> mappend_₀_₀(h⁴⁰, concat_₀_₀(t⁴⁰)))
//│ 						| LH_N  => (fun _lh_dummy⁹ -> (fun ys⁴² -> ys⁴²))} else (fun _lh_dummy¹⁰ -> (fun ys⁴³ -> ys⁴³))
//│ 			def take_lz_₁_₁(n⁶, ls⁶) = 
//│ 				if (n⁶ > 0) then case force⁰(ls⁶) of {
//│ 					LH_C h²⁰ t²⁰ => 
//│ 						let t²⁷ = take_lz_₁_₁((n⁶ - 1), t²⁰)
//│ 						in let h²⁷ = h²⁰
//│ 						in (fun ys¹⁸ -> 
//│ 							let t²⁸ = mappend_₁_₀(t²⁷, ys¹⁸)
//│ 							in let h²⁸ = h²⁷
//│ 							in (fun _lh_dummy⁰ -> mappend_₀_₀(h²⁸, concat_₀_₀(t²⁸))))
//│ 					| LH_N  => (fun ys¹⁹ -> ys¹⁹)} else (fun ys²⁰ -> ys²⁰)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testPiDigits_nofib_₀_₀^1]
//│ 	[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797]
//│ 		[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · hashOp_₀_₀^536] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · hashOp_₀_₀^536 · ampOp_₀_₀^916] (using original def)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · hashOp_₀_₀^536 · divmod_₀_₀^922] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · hashOp_₀_₀^536 · divmod_₀_₀^922 · hashOp_₀_₀^302] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · hashOp_₀_₀^536] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · hashOp_₀_₀^536 · divmod_₀_₀^922 · hashOp_₀_₀^314] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · hashOp_₀_₀^536] (using original def)
//│ 		[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533]
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · concat_₀_₀^697] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₁_₀^672] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₂_₀^695] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₂_₀^712] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₂_₀^732] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₂_₀^754] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₃_₀^696] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₄_₀^701] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₄_₀^705] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₄_₀^725] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₅_₀^745] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₅_₀^745 · mappend_₂_₀^356] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₅_₀^745 · mappend_₅_₀^349] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · mappend_₅_₀^745] (using original def)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · min_₀_₀^659] (hopeless to continue)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767]
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · concat_₀_₁^138] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₁_₁^113] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₂_₁^136] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₂_₁^153] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₂_₁^173] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₂_₁^195] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₃_₁^137] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₄_₁^142] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₄_₁^146] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₄_₁^166] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₅_₁^186] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₅_₁^186 · mappend_₂_₁^1004] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₅_₁^186 · mappend_₅_₁^997] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · mappend_₅_₁^186] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · min_₀_₁^100] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · percOp_₀_₁^208] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767] (only one)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · replicate_₀_₀^124] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · replicate_₀_₀^124 · concat_₀_₁^256] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · replicate_₀_₀^124 · mappend_₀_₁^253] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · replicate_₀_₀^124 · mappend_₀_₁^253 · mappend_₀_₁^451] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · replicate_₀_₀^124 · mappend_₀_₁^253] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · replicate_₀_₀^124 · mappend_₀_₁^253 · mappend_₂_₁^464] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · replicate_₀_₀^124 · mappend_₀_₁^253 · mappend_₃_₁^457] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · replicate_₀_₀^124 · replicate_₀_₀^243] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · replicate_₀_₀^124] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220]
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · concat_₀_₁^560] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · drop_lz_₀_₀^548] (hopeless to continue)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · drop_lz_₀_₀^548 · drop_lz_₀_₀^892] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · drop_lz_₀_₀^548] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₂_₁^558] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₂_₁^575] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₂_₁^595] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₂_₁^617] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₃_₁^559] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₄_₁^564] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₄_₁^568] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₄_₁^588] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₅_₁^608] (hopeless to continue)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₅_₁^608 · mappend_₂_₁^1004] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₅_₁^608 · mappend_₅_₁^997] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · mappend_₅_₁^608] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · percOp_₀_₁^630] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767] (only one)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553] (hopeless to continue)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · concat_₀_₁^72] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69 · mappend_₀_₁^451] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69 · mappend_₂_₁^464] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69 · mappend_₃_₁^457] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · take_lz_₀_₀^59] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114] (hopeless to continue)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114 · concat_₀_₁^858] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114 · mappend_₀_₁^855] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114 · mappend_₀_₁^855 · mappend_₀_₁^451] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114 · mappend_₀_₁^855] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114 · mappend_₀_₁^855 · mappend_₂_₁^464] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114 · mappend_₀_₁^855 · mappend_₃_₁^457] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114 · mappend_₁_₁^849] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114 · take_lz_₁_₀^839] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · percOp_₀_₁^767 · take_lz_₁_₀^114] (using original def)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · replicate_₀_₁^683] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · replicate_₀_₁^683 · concat_₀_₀^417] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · replicate_₀_₁^683 · mappend_₀_₀^414] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · replicate_₀_₁^683 · mappend_₀_₀^414 · mappend_₀_₀^802] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · replicate_₀_₁^683 · mappend_₀_₀^414] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · replicate_₀_₁^683 · mappend_₀_₀^414 · mappend_₂_₀^815] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · replicate_₀_₁^683 · mappend_₀_₀^414 · mappend_₃_₀^808] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · replicate_₀_₁^683 · replicate_₀_₁^404] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · replicate_₀_₁^683] (using original def)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · concat_₀_₀^1044] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · drop_lz_₀_₁^1032] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · drop_lz_₀_₁^1032 · drop_lz_₀_₁^381] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · drop_lz_₀_₁^1032] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₂_₀^1042] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₂_₀^1059] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₂_₀^1079] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₂_₀^1101] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₃_₀^1043] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₄_₀^1048] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₄_₀^1052] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₄_₀^1072] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₅_₀^1092] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₅_₀^1092 · mappend_₂_₀^356] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₅_₀^1092 · mappend_₅_₀^349] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · mappend_₅_₀^1092] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · concat_₀_₁^138] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₁_₁^113] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₂_₁^136] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₂_₁^153] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₂_₁^173] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₂_₁^195] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₃_₁^137] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₄_₁^142] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₄_₁^146] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₄_₁^166] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₅_₁^186] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₅_₁^186 · mappend_₂_₁^1004] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₅_₁^186 · mappend_₅_₁^997] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · mappend_₅_₁^186] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · min_₀_₁^100] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · percOp_₀_₁^208] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · replicate_₀_₀^124] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · replicate_₀_₀^124 · concat_₀_₁^256] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · replicate_₀_₀^124 · mappend_₀_₁^253] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · replicate_₀_₀^124 · mappend_₀_₁^253 · mappend_₀_₁^451] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · replicate_₀_₀^124 · mappend_₀_₁^253] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · replicate_₀_₀^124 · mappend_₀_₁^253 · mappend_₂_₁^464] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · replicate_₀_₀^124 · mappend_₀_₁^253 · mappend_₃_₁^457] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · replicate_₀_₀^124 · replicate_₀_₀^243] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · replicate_₀_₀^124] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · concat_₀_₁^560] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · drop_lz_₀_₀^548] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · drop_lz_₀_₀^548 · drop_lz_₀_₀^892] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · drop_lz_₀_₀^548] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₂_₁^558] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₂_₁^575] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₂_₁^595] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₂_₁^617] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₃_₁^559] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₄_₁^564] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₄_₁^568] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₄_₁^588] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₅_₁^608] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₅_₁^608 · mappend_₂_₁^1004] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₅_₁^608 · mappend_₅_₁^997] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · mappend_₅_₁^608] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · percOp_₀_₁^630] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · concat_₀_₁^72] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69] (using original def)
//│ 								[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69 · mappend_₀_₁^451] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69] (using original def)
//│ 								[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69 · mappend_₂_₁^464] (using original def)
//│ 								[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · mappend_₀_₁^69 · mappend_₃_₁^457] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553 · take_lz_₀_₀^59] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · splitAt_lz_₀_₀^220 · take_lz_₀_₀^553] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114 · concat_₀_₁^858] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114 · mappend_₀_₁^855] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114 · mappend_₀_₁^855 · mappend_₀_₁^451] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114 · mappend_₀_₁^855] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114 · mappend_₀_₁^855 · mappend_₂_₁^464] (using original def)
//│ 							[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114 · mappend_₀_₁^855 · mappend_₃_₁^457] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114 · mappend_₁_₁^849] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114 · take_lz_₁_₀^839] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · percOp_₀_₁^1114 · take_lz_₁_₀^114] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · take_lz_₀_₁^1037] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · take_lz_₀_₁^1037 · concat_₀_₀^511] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · take_lz_₀_₁^1037 · mappend_₀_₀^508] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · take_lz_₀_₁^1037 · mappend_₀_₀^508 · mappend_₀_₀^802] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · take_lz_₀_₁^1037 · mappend_₀_₀^508] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · take_lz_₀_₁^1037 · mappend_₀_₀^508 · mappend_₂_₀^815] (using original def)
//│ 						[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · take_lz_₀_₁^1037 · mappend_₀_₀^508 · mappend_₃_₀^808] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · take_lz_₀_₁^1037 · take_lz_₀_₁^498] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · splitAt_lz_₀_₁^779 · take_lz_₀_₁^1037] (using original def)
//│ 			[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673] (hopeless to continue)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673 · concat_₀_₀^33] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673 · mappend_₀_₀^30] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673 · mappend_₀_₀^30 · mappend_₀_₀^802] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673 · mappend_₀_₀^30] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673 · mappend_₀_₀^30 · mappend_₂_₀^815] (using original def)
//│ 					[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673 · mappend_₀_₀^30 · mappend_₃_₀^808] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673 · mappend_₁_₀^24] (using original def)
//│ 				[testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673 · take_lz_₁_₁^14] ---> [testPiDigits_nofib_₀_₀^1 · pidgits_₀_₀^797 · percOp_₀_₀^533 · take_lz_₁_₁^673] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testPiDigits_nofib_₀_₀_₀(primId⁰(5000))
//│ def testPiDigits_nofib_₀_₀_₀(_lh_testPiDigits_nofib_arg1¹) = 
//│ 	pidgits_₀_₀_₀(_lh_testPiDigits_nofib_arg1¹)
//│ 	where
//│ 	def pidgits_₀_₀_₀(_lh_pidgits_arg1¹) = 
//│ 		percOp_₀_₀_₀(0, hashOp_₀_₀_₀(0, [LH_P3 1 0 1]), _lh_pidgits_arg1¹)
//│ 		where
//│ 		def hashOp_₀_₀_₀(_lh_hashOp_arg1¹, _lh_hashOp_arg2¹) = 
//│ 			lazy⁰(
//│ 				let k⁸ = (_lh_hashOp_arg1¹ + 1)
//│ 				in let _lh_matchIdent¹² = ampOp_₀_₀_₀(k⁸, _lh_hashOp_arg2¹)
//│ 				in case _lh_matchIdent¹² of {
//│ 					LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => 
//│ 						let _lh_matchIdent¹³ = divmod_₀_₀_₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ 						in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸)
//│ 					| _  => error⁰})
//│ 			where
//│ 			def ampOp_₀_₀_₀(_lh_ampOp_arg1¹, _lh_ampOp_arg2¹) = 
//│ 				case _lh_ampOp_arg2¹ of {
//│ 					LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => 
//│ 						let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ 						in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]
//│ 					| _  => error⁰}
//│ 			def divmod_₀_₀_₀(_lh_divmod_arg1¹, _lh_divmod_arg2¹) = 
//│ 				let _lh_hashOp_LH_P2_1¹ = (_lh_divmod_arg1¹ % _lh_divmod_arg2¹)
//│ 				in let _lh_hashOp_LH_P2_0¹ = div⁰(_lh_divmod_arg1¹, _lh_divmod_arg2¹)
//│ 				in (fun _lh_hashOp_LH_P3_0² -> (fun _lh_hashOp_LH_P3_1² -> (fun _lh_hashOp_LH_P3_2² -> (fun k⁵ -> if ((_lh_hashOp_LH_P3_0² > _lh_hashOp_LH_P3_1²) || ((_lh_hashOp_LH_P2_1¹ + _lh_hashOp_LH_P3_0²) >= _lh_hashOp_LH_P3_2²)) then force⁰(hashOp_₀_₀_₀(k⁵, [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²])) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀_₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]))))
//│ 		def percOp_₀_₀_₀(_lh_percOp_arg1², _lh_percOp_arg2², _lh_percOp_arg3⁶) = 
//│ 			if (_lh_percOp_arg1² >= _lh_percOp_arg3⁶) then [LH_N] else 
//│ 				let k⁴ = (_lh_percOp_arg1² + 10)
//│ 				in let j⁶ = min_₀_₀_₀(_lh_percOp_arg3⁶, k⁴)
//│ 				in let _lh_matchIdent⁶ = if (k⁴ > _lh_percOp_arg3⁶) then 
//│ 					let _lh_percOp_LH_P2_1⁴ = lazy⁰([LH_N])
//│ 					in let _lh_percOp_LH_P2_0⁴ = mappend_₁_₀_₀(take_lz_₁_₁_₀((_lh_percOp_arg3⁶ % 10), _lh_percOp_arg2²), replicate_₀_₁_₀((k⁴ - _lh_percOp_arg3⁶), [LH_C ' ' [LH_N]]))
//│ 					in (fun _lh_percOp_arg3⁷ -> (fun j⁷ -> mappend_₂_₀_₀(mappend_₃_₀_₀(concat_₀_₀_₀(_lh_percOp_LH_P2_0⁴), mappend_₄_₀_₀(
//│ 						let t⁴⁷ = 	
//│ 							let t⁴⁸ = (fun ys⁶⁵ -> ys⁶⁵)
//│ 							in let h⁴⁷ = ':'
//│ 							in (fun ys⁶⁶ -> 
//│ 								let t⁴⁹ = mappend_₄_₀_₁(t⁴⁸, ys⁶⁶)
//│ 								in let h⁴⁸ = h⁴⁷
//│ 								in (fun ys⁶⁷ -> [LH_C h⁴⁸ mappend_₂_₀_₁(t⁴⁹, ys⁶⁷)]))
//│ 						in let h⁴⁹ = 't'
//│ 						in (fun ys⁶⁸ -> 
//│ 							let t⁵⁰ = mappend_₄_₀_₂(t⁴⁷, ys⁶⁸)
//│ 							in let h⁵⁰ = h⁴⁹
//│ 							in (fun ys⁶⁹ -> [LH_C h⁵⁰ mappend_₂_₀_₂(t⁵⁰, ys⁶⁹)])), mappend_₅_₀_₀(string_of_int⁰(j⁷), 
//│ 						let t⁵¹ = (fun ys⁷⁰ -> ys⁷⁰)
//│ 						in let h⁵¹ = 'n'
//│ 						in (fun ys⁷¹ -> [LH_C h⁵¹ mappend_₂_₀_₃(t⁵¹, ys⁷¹)])))), percOp_₀_₁_₀(j⁷, _lh_percOp_LH_P2_1⁴, _lh_percOp_arg3⁷)))) else splitAt_lz_₀_₁_₀(10, _lh_percOp_arg2²)
//│ 				in _lh_matchIdent⁶(_lh_percOp_arg3⁶, j⁶)
//│ 			where
//│ 			def concat_₀_₀_₀(lss¹⁵) = 
//│ 				lss¹⁵(99)
//│ 			def mappend_₁_₀_₀(xs⁹⁹, ys²²⁵) = 
//│ 				xs⁹⁹(ys²²⁵)
//│ 			def mappend_₂_₀_₀(xs⁴³, ys¹¹²) = 
//│ 				xs⁴³(ys¹¹²)
//│ 			def mappend_₂_₀_₁(xs⁵⁷, ys¹³⁸) = 
//│ 				xs⁵⁷(ys¹³⁸)
//│ 			def mappend_₂_₀_₂(xs³³, ys¹⁰⁰) = 
//│ 				xs³³(ys¹⁰⁰)
//│ 			def mappend_₂_₀_₃(xs³⁹, ys¹⁰⁶) = 
//│ 				xs³⁹(ys¹⁰⁶)
//│ 			def mappend_₃_₀_₀(xs¹⁴, ys⁶¹) = 
//│ 				xs¹⁴(ys⁶¹)
//│ 			def mappend_₄_₀_₀(xs⁹¹, ys²¹⁵) = 
//│ 				xs⁹¹(ys²¹⁵)
//│ 			def mappend_₄_₀_₁(xs⁸⁸, ys²⁰³) = 
//│ 				xs⁸⁸(ys²⁰³)
//│ 			def mappend_₄_₀_₂(xs⁵¹, ys¹²⁸) = 
//│ 				xs⁵¹(ys¹²⁸)
//│ 			def mappend_₅_₀_₀(xs⁸⁰, ys¹⁸⁷) = 
//│ 				case xs⁸⁰ of {
//│ 					LH_C h¹⁰⁶ t¹⁰⁶ => 
//│ 						let t¹⁰⁷ = mappend_₅_₀_₀(t¹⁰⁶, ys¹⁸⁷)
//│ 						in let h¹⁰⁷ = h¹⁰⁶
//│ 						in (fun ys¹⁸⁸ -> [LH_C h¹⁰⁷ mappend_₂_₀_₄(t¹⁰⁷, ys¹⁸⁸)])
//│ 					| LH_N  => ys¹⁸⁷}
//│ 				where
//│ 				def mappend_₂_₀_₄(xs⁵⁸, ys¹³⁹) = 
//│ 					xs⁵⁸(ys¹³⁹)
//│ 			def min_₀_₀_₀(_lh_min_arg1⁴, _lh_min_arg2⁴) = 
//│ 				if (_lh_min_arg1⁴ > _lh_min_arg2⁴) then _lh_min_arg2⁴ else _lh_min_arg1⁴
//│ 			def percOp_₀_₁_₀(_lh_percOp_arg1³, _lh_percOp_arg2³, _lh_percOp_arg3¹⁰) = 
//│ 				if (_lh_percOp_arg1³ >= _lh_percOp_arg3¹⁰) then [LH_N] else 
//│ 					let k⁶ = (_lh_percOp_arg1³ + 10)
//│ 					in let j¹⁰ = min_₀_₁_₀(_lh_percOp_arg3¹⁰, k⁶)
//│ 					in let _lh_matchIdent¹⁰ = if (k⁶ > _lh_percOp_arg3¹⁰) then 
//│ 						let _lh_percOp_LH_P2_1⁷ = lazy⁰([LH_N])
//│ 						in let _lh_percOp_LH_P2_0⁷ = mappend_₁_₁_₀(take_lz_₁_₀_₀((_lh_percOp_arg3¹⁰ % 10), _lh_percOp_arg2³), replicate_₀_₀_₀((k⁶ - _lh_percOp_arg3¹⁰), [LH_C ' ' [LH_N]]))
//│ 						in (fun _lh_percOp_arg3¹¹ -> (fun j¹¹ -> mappend_₂_₁_₀(mappend_₃_₁_₀(concat_₀_₁_₀(_lh_percOp_LH_P2_0⁷), mappend_₄_₁_₀(
//│ 							let t⁹⁵ = 	
//│ 								let t⁹⁶ = (fun ys¹⁶⁹ -> ys¹⁶⁹)
//│ 								in let h⁹⁵ = ':'
//│ 								in (fun ys¹⁷⁰ -> 
//│ 									let t⁹⁷ = mappend_₄_₁_₁(t⁹⁶, ys¹⁷⁰)
//│ 									in let h⁹⁶ = h⁹⁵
//│ 									in (fun ys¹⁷¹ -> [LH_C h⁹⁶ mappend_₂_₁_₁(t⁹⁷, ys¹⁷¹)]))
//│ 							in let h⁹⁷ = 't'
//│ 							in (fun ys¹⁷² -> 
//│ 								let t⁹⁸ = mappend_₄_₁_₂(t⁹⁵, ys¹⁷²)
//│ 								in let h⁹⁸ = h⁹⁷
//│ 								in (fun ys¹⁷³ -> [LH_C h⁹⁸ mappend_₂_₁_₂(t⁹⁸, ys¹⁷³)])), mappend_₅_₁_₀(string_of_int⁰(j¹¹), 
//│ 							let t⁹⁹ = (fun ys¹⁷⁴ -> ys¹⁷⁴)
//│ 							in let h⁹⁹ = 'n'
//│ 							in (fun ys¹⁷⁵ -> [LH_C h⁹⁹ mappend_₂_₁_₃(t⁹⁹, ys¹⁷⁵)])))), percOp_₀_₁_₀(j¹¹, _lh_percOp_LH_P2_1⁷, _lh_percOp_arg3¹¹)))) else splitAt_lz_₀_₀_₀(10, _lh_percOp_arg2³)
//│ 					in _lh_matchIdent¹⁰(_lh_percOp_arg3¹⁰, j¹⁰)
//│ 				where
//│ 				def concat_₀_₁_₀(lss²) = 
//│ 					lss²(99)
//│ 				def mappend_₁_₁_₀(xs⁸⁴, ys¹⁹⁹) = 
//│ 					xs⁸⁴(ys¹⁹⁹)
//│ 				def mappend_₂_₁_₀(xs⁵³, ys¹³²) = 
//│ 					xs⁵³(ys¹³²)
//│ 				def mappend_₂_₁_₁(xs²⁷, ys⁹⁴) = 
//│ 					xs²⁷(ys⁹⁴)
//│ 				def mappend_₂_₁_₂(xs⁶⁴, ys¹⁵⁶) = 
//│ 					xs⁶⁴(ys¹⁵⁶)
//│ 				def mappend_₂_₁_₃(xs²¹, ys⁸⁸) = 
//│ 					xs²¹(ys⁸⁸)
//│ 				def mappend_₃_₁_₀(xs⁶⁸, ys¹⁶²) = 
//│ 					xs⁶⁸(ys¹⁶²)
//│ 				def mappend_₄_₁_₀(xs²⁸, ys⁹⁵) = 
//│ 					xs²⁸(ys⁹⁵)
//│ 				def mappend_₄_₁_₁(xs²⁶, ys⁹³) = 
//│ 					xs²⁶(ys⁹³)
//│ 				def mappend_₄_₁_₂(xs³², ys⁹⁹) = 
//│ 					xs³²(ys⁹⁹)
//│ 				def mappend_₅_₁_₀(xs¹⁰⁰, ys²²⁶) = 
//│ 					case xs¹⁰⁰ of {
//│ 						LH_C h¹²³ t¹²³ => 
//│ 							let t¹²⁴ = mappend_₅_₁_₀(t¹²³, ys²²⁶)
//│ 							in let h¹²⁴ = h¹²³
//│ 							in (fun ys²²⁷ -> [LH_C h¹²⁴ mappend_₂_₁_₄(t¹²⁴, ys²²⁷)])
//│ 						| LH_N  => ys²²⁶}
//│ 					where
//│ 					def mappend_₂_₁_₄(xs²⁵, ys⁹²) = 
//│ 						xs²⁵(ys⁹²)
//│ 				def min_₀_₁_₀(_lh_min_arg1², _lh_min_arg2²) = 
//│ 					if (_lh_min_arg1² > _lh_min_arg2²) then _lh_min_arg2² else _lh_min_arg1²
//│ 				def replicate_₀_₀_₀(_lh_replicate_arg1², _lh_replicate_arg2²) = 
//│ 					if (_lh_replicate_arg1² > 0) then 
//│ 						let t⁸² = replicate_₀_₀_₀((_lh_replicate_arg1² - 1), _lh_replicate_arg2²)
//│ 						in let h⁸² = _lh_replicate_arg2²
//│ 						in (fun _lh_dummy¹⁵ -> mappend_₀_₁_₀(h⁸², concat_₀_₁_₁(t⁸²))) else (fun _lh_dummy¹⁶ -> (fun ys¹⁴⁴ -> ys¹⁴⁴))
//│ 					where
//│ 					def concat_₀_₁_₁(lss¹⁶) = 
//│ 						lss¹⁶(99)
//│ 					def mappend_₀_₁_₀(xs⁸⁹, ys²¹¹) = 
//│ 						case xs⁸⁹ of {
//│ 							LH_C h¹¹⁸ t¹¹⁸ => 
//│ 								let t¹¹⁹ = mappend_₀_₁_₀(t¹¹⁸, ys²¹¹)
//│ 								in let h¹¹⁹ = h¹¹⁸
//│ 								in (fun ys²¹² -> 
//│ 									let t¹²⁰ = mappend_₃_₁_₁(t¹¹⁹, ys²¹²)
//│ 									in let h¹²⁰ = h¹¹⁹
//│ 									in (fun ys²¹³ -> [LH_C h¹²⁰ mappend_₂_₁_₅(t¹²⁰, ys²¹³)]))
//│ 							| LH_N  => ys²¹¹}
//│ 						where
//│ 						def mappend_₂_₁_₅(xs¹⁶, ys⁷³) = 
//│ 							xs¹⁶(ys⁷³)
//│ 						def mappend_₃_₁_₁(xs⁶⁰, ys¹⁴²) = 
//│ 							xs⁶⁰(ys¹⁴²)
//│ 				def splitAt_lz_₀_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²) = 
//│ 					let _lh_percOp_LH_P2_1⁵ = drop_lz_₀_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 					in let _lh_percOp_LH_P2_0⁵ = take_lz_₀_₀_₀(_lh_splitAt_lz_arg1², _lh_splitAt_lz_arg2²)
//│ 					in (fun _lh_percOp_arg3⁸ -> (fun j⁸ -> mappend_₂_₁_₆(mappend_₃_₁_₂(concat_₀_₁_₂(_lh_percOp_LH_P2_0⁵), mappend_₄_₁_₃(
//│ 						let t⁶⁹ = 	
//│ 							let t⁷⁰ = (fun ys¹²¹ -> ys¹²¹)
//│ 							in let h⁶⁹ = ':'
//│ 							in (fun ys¹²² -> 
//│ 								let t⁷¹ = mappend_₄_₁_₄(t⁷⁰, ys¹²²)
//│ 								in let h⁷⁰ = h⁶⁹
//│ 								in (fun ys¹²³ -> [LH_C h⁷⁰ mappend_₂_₁_₇(t⁷¹, ys¹²³)]))
//│ 						in let h⁷¹ = 't'
//│ 						in (fun ys¹²⁴ -> 
//│ 							let t⁷² = mappend_₄_₁_₅(t⁶⁹, ys¹²⁴)
//│ 							in let h⁷² = h⁷¹
//│ 							in (fun ys¹²⁵ -> [LH_C h⁷² mappend_₂_₁_₈(t⁷², ys¹²⁵)])), mappend_₅_₁_₁(string_of_int⁰(j⁸), 
//│ 						let t⁷³ = (fun ys¹²⁶ -> ys¹²⁶)
//│ 						in let h⁷³ = 'n'
//│ 						in (fun ys¹²⁷ -> [LH_C h⁷³ mappend_₂_₁_₉(t⁷³, ys¹²⁷)])))), percOp_₀_₁_₀(j⁸, _lh_percOp_LH_P2_1⁵, _lh_percOp_arg3⁸))))
//│ 					where
//│ 					def concat_₀_₁_₂(lss⁶) = 
//│ 						lss⁶(99)
//│ 					def drop_lz_₀_₀_₀(_lh_drop_lz_arg1², _lh_drop_lz_arg2²) = 
//│ 						if (_lh_drop_lz_arg1² > 0) then lazy⁰(
//│ 							let _lh_matchIdent⁷ = force⁰(_lh_drop_lz_arg2²)
//│ 							in case _lh_matchIdent⁷ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₀_₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2²
//│ 					def mappend_₂_₁_₆(xs⁷⁶, ys¹⁷⁹) = 
//│ 						xs⁷⁶(ys¹⁷⁹)
//│ 					def mappend_₂_₁_₇(xs⁸³, ys¹⁹¹) = 
//│ 						xs⁸³(ys¹⁹¹)
//│ 					def mappend_₂_₁_₈(xs²⁴, ys⁹¹) = 
//│ 						xs²⁴(ys⁹¹)
//│ 					def mappend_₂_₁_₉(xs⁴⁶, ys¹¹⁶) = 
//│ 						xs⁴⁶(ys¹¹⁶)
//│ 					def mappend_₃_₁_₂(xs⁵⁵, ys¹³⁴) = 
//│ 						xs⁵⁵(ys¹³⁴)
//│ 					def mappend_₄_₁_₃(xs²³, ys⁹⁰) = 
//│ 						xs²³(ys⁹⁰)
//│ 					def mappend_₄_₁_₄(xs⁹³, ys²¹⁷) = 
//│ 						xs⁹³(ys²¹⁷)
//│ 					def mappend_₄_₁_₅(xs²², ys⁸⁹) = 
//│ 						xs²²(ys⁸⁹)
//│ 					def mappend_₅_₁_₁(xs¹², ys⁵⁸) = 
//│ 						case xs¹² of {
//│ 							LH_C h⁴² t⁴² => 
//│ 								let t⁴³ = mappend_₅_₁_₁(t⁴², ys⁵⁸)
//│ 								in let h⁴³ = h⁴²
//│ 								in (fun ys⁵⁹ -> [LH_C h⁴³ mappend_₂_₁_₁₀(t⁴³, ys⁵⁹)])
//│ 							| LH_N  => ys⁵⁸}
//│ 						where
//│ 						def mappend_₂_₁_₁₀(xs⁹², ys²¹⁶) = 
//│ 							xs⁹²(ys²¹⁶)
//│ 					def take_lz_₀_₀_₀(n⁷, ls⁷) = 
//│ 						if (n⁷ > 0) then case force⁰(ls⁷) of {
//│ 							LH_C h⁸⁸ t⁸⁸ => 
//│ 								let t⁸⁹ = take_lz_₀_₀_₀((n⁷ - 1), t⁸⁸)
//│ 								in let h⁸⁹ = h⁸⁸
//│ 								in (fun _lh_dummy¹⁷ -> mappend_₀_₁_₁(h⁸⁹, concat_₀_₁_₃(t⁸⁹)))
//│ 							| LH_N  => (fun _lh_dummy¹⁸ -> (fun ys¹⁵⁴ -> ys¹⁵⁴))} else (fun _lh_dummy¹⁹ -> (fun ys¹⁵⁵ -> ys¹⁵⁵))
//│ 						where
//│ 						def concat_₀_₁_₃(lss³) = 
//│ 							lss³(99)
//│ 						def mappend_₀_₁_₁(xs⁴¹, ys¹⁰⁸) = 
//│ 							case xs⁴¹ of {
//│ 								LH_C h⁶⁴ t⁶⁴ => 
//│ 									let t⁶⁵ = mappend_₀_₁_₁(t⁶⁴, ys¹⁰⁸)
//│ 									in let h⁶⁵ = h⁶⁴
//│ 									in (fun ys¹⁰⁹ -> 
//│ 										let t⁶⁶ = mappend_₃_₁_₃(t⁶⁵, ys¹⁰⁹)
//│ 										in let h⁶⁶ = h⁶⁵
//│ 										in (fun ys¹¹⁰ -> [LH_C h⁶⁶ mappend_₂_₁_₁₁(t⁶⁶, ys¹¹⁰)]))
//│ 								| LH_N  => ys¹⁰⁸}
//│ 							where
//│ 							def mappend_₂_₁_₁₁(xs³⁵, ys¹⁰²) = 
//│ 								xs³⁵(ys¹⁰²)
//│ 							def mappend_₃_₁_₃(xs⁷⁴, ys¹⁷⁷) = 
//│ 								xs⁷⁴(ys¹⁷⁷)
//│ 				def take_lz_₁_₀_₀(n⁴, ls⁴) = 
//│ 					if (n⁴ > 0) then case force⁰(ls⁴) of {
//│ 						LH_C h⁴⁴ t⁴⁴ => 
//│ 							let t⁴⁵ = take_lz_₁_₀_₀((n⁴ - 1), t⁴⁴)
//│ 							in let h⁴⁵ = h⁴⁴
//│ 							in (fun ys⁶² -> 
//│ 								let t⁴⁶ = mappend_₁_₁_₁(t⁴⁵, ys⁶²)
//│ 								in let h⁴⁶ = h⁴⁵
//│ 								in (fun _lh_dummy¹² -> mappend_₀_₁_₂(h⁴⁶, concat_₀_₁_₄(t⁴⁶))))
//│ 						| LH_N  => (fun ys⁶³ -> ys⁶³)} else (fun ys⁶⁴ -> ys⁶⁴)
//│ 					where
//│ 					def concat_₀_₁_₄(lss¹¹) = 
//│ 						lss¹¹(99)
//│ 					def mappend_₀_₁_₂(xs⁷⁸, ys¹⁸¹) = 
//│ 						case xs⁷⁸ of {
//│ 							LH_C h¹⁰⁰ t¹⁰⁰ => 
//│ 								let t¹⁰¹ = mappend_₀_₁_₂(t¹⁰⁰, ys¹⁸¹)
//│ 								in let h¹⁰¹ = h¹⁰⁰
//│ 								in (fun ys¹⁸² -> 
//│ 									let t¹⁰² = mappend_₃_₁_₄(t¹⁰¹, ys¹⁸²)
//│ 									in let h¹⁰² = h¹⁰¹
//│ 									in (fun ys¹⁸³ -> [LH_C h¹⁰² mappend_₂_₁_₁₂(t¹⁰², ys¹⁸³)]))
//│ 							| LH_N  => ys¹⁸¹}
//│ 						where
//│ 						def mappend_₂_₁_₁₂(xs⁷³, ys¹⁷⁶) = 
//│ 							xs⁷³(ys¹⁷⁶)
//│ 						def mappend_₃_₁_₄(xs¹⁹, ys⁸⁴) = 
//│ 							xs¹⁹(ys⁸⁴)
//│ 					def mappend_₁_₁_₁(xs⁹⁴, ys²²⁰) = 
//│ 						xs⁹⁴(ys²²⁰)
//│ 			def replicate_₀_₁_₀(_lh_replicate_arg1⁴, _lh_replicate_arg2⁴) = 
//│ 				if (_lh_replicate_arg1⁴ > 0) then 
//│ 					let t¹²⁵ = replicate_₀_₁_₀((_lh_replicate_arg1⁴ - 1), _lh_replicate_arg2⁴)
//│ 					in let h¹²⁵ = _lh_replicate_arg2⁴
//│ 					in (fun _lh_dummy²⁸ -> mappend_₀_₀_₀(h¹²⁵, concat_₀_₀_₁(t¹²⁵))) else (fun _lh_dummy²⁹ -> (fun ys²²⁹ -> ys²²⁹))
//│ 				where
//│ 				def concat_₀_₀_₁(lss⁷) = 
//│ 					lss⁷(99)
//│ 				def mappend_₀_₀_₀(xs²⁰, ys⁸⁵) = 
//│ 					case xs²⁰ of {
//│ 						LH_C h⁶¹ t⁶¹ => 
//│ 							let t⁶² = mappend_₀_₀_₀(t⁶¹, ys⁸⁵)
//│ 							in let h⁶² = h⁶¹
//│ 							in (fun ys⁸⁶ -> 
//│ 								let t⁶³ = mappend_₃_₀_₁(t⁶², ys⁸⁶)
//│ 								in let h⁶³ = h⁶²
//│ 								in (fun ys⁸⁷ -> [LH_C h⁶³ mappend_₂_₀_₅(t⁶³, ys⁸⁷)]))
//│ 						| LH_N  => ys⁸⁵}
//│ 					where
//│ 					def mappend_₂_₀_₅(xs⁴⁷, ys¹¹⁷) = 
//│ 						xs⁴⁷(ys¹¹⁷)
//│ 					def mappend_₃_₀_₁(xs⁷⁷, ys¹⁸⁰) = 
//│ 						xs⁷⁷(ys¹⁸⁰)
//│ 			def splitAt_lz_₀_₁_₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³) = 
//│ 				let _lh_percOp_LH_P2_1⁶ = drop_lz_₀_₁_₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 				in let _lh_percOp_LH_P2_0⁶ = take_lz_₀_₁_₀(_lh_splitAt_lz_arg1³, _lh_splitAt_lz_arg2³)
//│ 				in (fun _lh_percOp_arg3⁹ -> (fun j⁹ -> mappend_₂_₀_₆(mappend_₃_₀_₂(concat_₀_₀_₂(_lh_percOp_LH_P2_0⁶), mappend_₄_₀_₃(
//│ 					let t⁸³ = 	
//│ 						let t⁸⁴ = (fun ys¹⁴⁷ -> ys¹⁴⁷)
//│ 						in let h⁸³ = ':'
//│ 						in (fun ys¹⁴⁸ -> 
//│ 							let t⁸⁵ = mappend_₄_₀_₄(t⁸⁴, ys¹⁴⁸)
//│ 							in let h⁸⁴ = h⁸³
//│ 							in (fun ys¹⁴⁹ -> [LH_C h⁸⁴ mappend_₂_₀_₇(t⁸⁵, ys¹⁴⁹)]))
//│ 					in let h⁸⁵ = 't'
//│ 					in (fun ys¹⁵⁰ -> 
//│ 						let t⁸⁶ = mappend_₄_₀_₅(t⁸³, ys¹⁵⁰)
//│ 						in let h⁸⁶ = h⁸⁵
//│ 						in (fun ys¹⁵¹ -> [LH_C h⁸⁶ mappend_₂_₀_₈(t⁸⁶, ys¹⁵¹)])), mappend_₅_₀_₁(string_of_int⁰(j⁹), 
//│ 					let t⁸⁷ = (fun ys¹⁵² -> ys¹⁵²)
//│ 					in let h⁸⁷ = 'n'
//│ 					in (fun ys¹⁵³ -> [LH_C h⁸⁷ mappend_₂_₀_₉(t⁸⁷, ys¹⁵³)])))), percOp_₀_₁_₁(j⁹, _lh_percOp_LH_P2_1⁶, _lh_percOp_arg3⁹))))
//│ 				where
//│ 				def concat_₀_₀_₂(lss⁵) = 
//│ 					lss⁵(99)
//│ 				def drop_lz_₀_₁_₀(_lh_drop_lz_arg1³, _lh_drop_lz_arg2³) = 
//│ 					if (_lh_drop_lz_arg1³ > 0) then lazy⁰(
//│ 						let _lh_matchIdent⁸ = force⁰(_lh_drop_lz_arg2³)
//│ 						in case _lh_matchIdent⁸ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz_₀_₁_₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2³
//│ 				def mappend_₂_₀_₆(xs⁷⁵, ys¹⁷⁸) = 
//│ 					xs⁷⁵(ys¹⁷⁸)
//│ 				def mappend_₂_₀_₇(xs¹³, ys⁶⁰) = 
//│ 					xs¹³(ys⁶⁰)
//│ 				def mappend_₂_₀_₈(xs²⁹, ys⁹⁶) = 
//│ 					xs²⁹(ys⁹⁶)
//│ 				def mappend_₂_₀_₉(xs³⁸, ys¹⁰⁵) = 
//│ 					xs³⁸(ys¹⁰⁵)
//│ 				def mappend_₃_₀_₂(xs⁶⁷, ys¹⁶¹) = 
//│ 					xs⁶⁷(ys¹⁶¹)
//│ 				def mappend_₄_₀_₃(xs⁸², ys¹⁹⁰) = 
//│ 					xs⁸²(ys¹⁹⁰)
//│ 				def mappend_₄_₀_₄(xs³⁷, ys¹⁰⁴) = 
//│ 					xs³⁷(ys¹⁰⁴)
//│ 				def mappend_₄_₀_₅(xs⁸⁵, ys²⁰⁰) = 
//│ 					xs⁸⁵(ys²⁰⁰)
//│ 				def mappend_₅_₀_₁(xs⁵⁹, ys¹⁴⁰) = 
//│ 					case xs⁵⁹ of {
//│ 						LH_C h⁸⁰ t⁸⁰ => 
//│ 							let t⁸¹ = mappend_₅_₀_₁(t⁸⁰, ys¹⁴⁰)
//│ 							in let h⁸¹ = h⁸⁰
//│ 							in (fun ys¹⁴¹ -> [LH_C h⁸¹ mappend_₂_₀_₁₀(t⁸¹, ys¹⁴¹)])
//│ 						| LH_N  => ys¹⁴⁰}
//│ 					where
//│ 					def mappend_₂_₀_₁₀(xs¹⁰⁴, ys²³⁴) = 
//│ 						xs¹⁰⁴(ys²³⁴)
//│ 				def percOp_₀_₁_₁(_lh_percOp_arg1⁴, _lh_percOp_arg2⁴, _lh_percOp_arg3¹³) = 
//│ 					if (_lh_percOp_arg1⁴ >= _lh_percOp_arg3¹³) then [LH_N] else 
//│ 						let k⁷ = (_lh_percOp_arg1⁴ + 10)
//│ 						in let j¹³ = min_₀_₁_₁(_lh_percOp_arg3¹³, k⁷)
//│ 						in let _lh_matchIdent¹¹ = if (k⁷ > _lh_percOp_arg3¹³) then 
//│ 							let _lh_percOp_LH_P2_1⁹ = lazy⁰([LH_N])
//│ 							in let _lh_percOp_LH_P2_0⁹ = mappend_₁_₁_₂(take_lz_₁_₀_₁((_lh_percOp_arg3¹³ % 10), _lh_percOp_arg2⁴), replicate_₀_₀_₁((k⁷ - _lh_percOp_arg3¹³), [LH_C ' ' [LH_N]]))
//│ 							in (fun _lh_percOp_arg3¹⁴ -> (fun j¹⁴ -> mappend_₂_₁_₁₃(mappend_₃_₁_₅(concat_₀_₁_₅(_lh_percOp_LH_P2_0⁹), mappend_₄_₁_₆(
//│ 								let t¹¹³ = 	
//│ 									let t¹¹⁴ = (fun ys²⁰⁴ -> ys²⁰⁴)
//│ 									in let h¹¹³ = ':'
//│ 									in (fun ys²⁰⁵ -> 
//│ 										let t¹¹⁵ = mappend_₄_₁_₇(t¹¹⁴, ys²⁰⁵)
//│ 										in let h¹¹⁴ = h¹¹³
//│ 										in (fun ys²⁰⁶ -> [LH_C h¹¹⁴ mappend_₂_₁_₁₄(t¹¹⁵, ys²⁰⁶)]))
//│ 								in let h¹¹⁵ = 't'
//│ 								in (fun ys²⁰⁷ -> 
//│ 									let t¹¹⁶ = mappend_₄_₁_₈(t¹¹³, ys²⁰⁷)
//│ 									in let h¹¹⁶ = h¹¹⁵
//│ 									in (fun ys²⁰⁸ -> [LH_C h¹¹⁶ mappend_₂_₁_₁₅(t¹¹⁶, ys²⁰⁸)])), mappend_₅_₁_₂(string_of_int⁰(j¹⁴), 
//│ 								let t¹¹⁷ = (fun ys²⁰⁹ -> ys²⁰⁹)
//│ 								in let h¹¹⁷ = 'n'
//│ 								in (fun ys²¹⁰ -> [LH_C h¹¹⁷ mappend_₂_₁_₁₆(t¹¹⁷, ys²¹⁰)])))), percOp_₀_₁_₁(j¹⁴, _lh_percOp_LH_P2_1⁹, _lh_percOp_arg3¹⁴)))) else splitAt_lz_₀_₀_₁(10, _lh_percOp_arg2⁴)
//│ 						in _lh_matchIdent¹¹(_lh_percOp_arg3¹³, j¹³)
//│ 					where
//│ 					def concat_₀_₁_₅(lss⁸) = 
//│ 						lss⁸(99)
//│ 					def mappend_₁_₁_₂(xs¹⁵, ys⁷²) = 
//│ 						xs¹⁵(ys⁷²)
//│ 					def mappend_₂_₁_₁₃(xs⁹⁸, ys²²⁴) = 
//│ 						xs⁹⁸(ys²²⁴)
//│ 					def mappend_₂_₁_₁₄(xs⁶², ys¹⁴⁵) = 
//│ 						xs⁶²(ys¹⁴⁵)
//│ 					def mappend_₂_₁_₁₅(xs³⁶, ys¹⁰³) = 
//│ 						xs³⁶(ys¹⁰³)
//│ 					def mappend_₂_₁_₁₆(xs⁷¹, ys¹⁶⁷) = 
//│ 						xs⁷¹(ys¹⁶⁷)
//│ 					def mappend_₃_₁_₅(xs³⁴, ys¹⁰¹) = 
//│ 						xs³⁴(ys¹⁰¹)
//│ 					def mappend_₄_₁_₆(xs⁴⁴, ys¹¹³) = 
//│ 						xs⁴⁴(ys¹¹³)
//│ 					def mappend_₄_₁_₇(xs⁸⁷, ys²⁰²) = 
//│ 						xs⁸⁷(ys²⁰²)
//│ 					def mappend_₄_₁_₈(xs⁹⁰, ys²¹⁴) = 
//│ 						xs⁹⁰(ys²¹⁴)
//│ 					def mappend_₅_₁_₂(xs⁴⁵, ys¹¹⁴) = 
//│ 						case xs⁴⁵ of {
//│ 							LH_C h⁶⁷ t⁶⁷ => 
//│ 								let t⁶⁸ = mappend_₅_₁_₂(t⁶⁷, ys¹¹⁴)
//│ 								in let h⁶⁸ = h⁶⁷
//│ 								in (fun ys¹¹⁵ -> [LH_C h⁶⁸ mappend_₂_₁_₁₇(t⁶⁸, ys¹¹⁵)])
//│ 							| LH_N  => ys¹¹⁴}
//│ 						where
//│ 						def mappend_₂_₁_₁₇(xs⁶⁵, ys¹⁵⁷) = 
//│ 							xs⁶⁵(ys¹⁵⁷)
//│ 					def min_₀_₁_₁(_lh_min_arg1³, _lh_min_arg2³) = 
//│ 						if (_lh_min_arg1³ > _lh_min_arg2³) then _lh_min_arg2³ else _lh_min_arg1³
//│ 					def replicate_₀_₀_₁(_lh_replicate_arg1³, _lh_replicate_arg2³) = 
//│ 						if (_lh_replicate_arg1³ > 0) then 
//│ 							let t⁹⁰ = replicate_₀_₀_₁((_lh_replicate_arg1³ - 1), _lh_replicate_arg2³)
//│ 							in let h⁹⁰ = _lh_replicate_arg2³
//│ 							in (fun _lh_dummy²⁰ -> mappend_₀_₁_₃(h⁹⁰, concat_₀_₁_₆(t⁹⁰))) else (fun _lh_dummy²¹ -> (fun ys¹⁵⁸ -> ys¹⁵⁸))
//│ 						where
//│ 						def concat_₀_₁_₆(lss⁴) = 
//│ 							lss⁴(99)
//│ 						def mappend_₀_₁_₃(xs⁵⁶, ys¹³⁵) = 
//│ 							case xs⁵⁶ of {
//│ 								LH_C h⁷⁷ t⁷⁷ => 
//│ 									let t⁷⁸ = mappend_₀_₁_₃(t⁷⁷, ys¹³⁵)
//│ 									in let h⁷⁸ = h⁷⁷
//│ 									in (fun ys¹³⁶ -> 
//│ 										let t⁷⁹ = mappend_₃_₁_₆(t⁷⁸, ys¹³⁶)
//│ 										in let h⁷⁹ = h⁷⁸
//│ 										in (fun ys¹³⁷ -> [LH_C h⁷⁹ mappend_₂_₁_₁₈(t⁷⁹, ys¹³⁷)]))
//│ 								| LH_N  => ys¹³⁵}
//│ 							where
//│ 							def mappend_₂_₁_₁₈(xs⁴⁹, ys¹¹⁹) = 
//│ 								xs⁴⁹(ys¹¹⁹)
//│ 							def mappend_₃_₁_₆(xs¹⁰², ys²³⁰) = 
//│ 								xs¹⁰²(ys²³⁰)
//│ 					def splitAt_lz_₀_₀_₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴) = 
//│ 						let _lh_percOp_LH_P2_1⁸ = drop_lz_₀_₀_₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 						in let _lh_percOp_LH_P2_0⁸ = take_lz_₀_₀_₁(_lh_splitAt_lz_arg1⁴, _lh_splitAt_lz_arg2⁴)
//│ 						in (fun _lh_percOp_arg3¹² -> (fun j¹² -> mappend_₂_₁_₁₉(mappend_₃_₁_₇(concat_₀_₁_₇(_lh_percOp_LH_P2_0⁸), mappend_₄_₁_₉(
//│ 							let t¹⁰⁸ = 	
//│ 								let t¹⁰⁹ = (fun ys¹⁹² -> ys¹⁹²)
//│ 								in let h¹⁰⁸ = ':'
//│ 								in (fun ys¹⁹³ -> 
//│ 									let t¹¹⁰ = mappend_₄_₁_₁₀(t¹⁰⁹, ys¹⁹³)
//│ 									in let h¹⁰⁹ = h¹⁰⁸
//│ 									in (fun ys¹⁹⁴ -> [LH_C h¹⁰⁹ mappend_₂_₁_₂₀(t¹¹⁰, ys¹⁹⁴)]))
//│ 							in let h¹¹⁰ = 't'
//│ 							in (fun ys¹⁹⁵ -> 
//│ 								let t¹¹¹ = mappend_₄_₁_₁₁(t¹⁰⁸, ys¹⁹⁵)
//│ 								in let h¹¹¹ = h¹¹⁰
//│ 								in (fun ys¹⁹⁶ -> [LH_C h¹¹¹ mappend_₂_₁_₂₁(t¹¹¹, ys¹⁹⁶)])), mappend_₅_₁_₃(string_of_int⁰(j¹²), 
//│ 							let t¹¹² = (fun ys¹⁹⁷ -> ys¹⁹⁷)
//│ 							in let h¹¹² = 'n'
//│ 							in (fun ys¹⁹⁸ -> [LH_C h¹¹² mappend_₂_₁_₂₂(t¹¹², ys¹⁹⁸)])))), percOp_₀_₁_₁(j¹², _lh_percOp_LH_P2_1⁸, _lh_percOp_arg3¹²))))
//│ 						where
//│ 						def concat_₀_₁_₇(lss¹⁰) = 
//│ 							lss¹⁰(99)
//│ 						def drop_lz_₀_₀_₁(_lh_drop_lz_arg1⁴, _lh_drop_lz_arg2⁴) = 
//│ 							if (_lh_drop_lz_arg1⁴ > 0) then lazy⁰(
//│ 								let _lh_matchIdent⁹ = force⁰(_lh_drop_lz_arg2⁴)
//│ 								in case _lh_matchIdent⁹ of {
//│ 									LH_N  => [LH_N]
//│ 									| LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz_₀_₀_₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴))
//│ 									| _  => error⁰}) else _lh_drop_lz_arg2⁴
//│ 						def mappend_₂_₁_₁₉(xs⁴², ys¹¹¹) = 
//│ 							xs⁴²(ys¹¹¹)
//│ 						def mappend_₂_₁_₂₀(xs⁷², ys¹⁶⁸) = 
//│ 							xs⁷²(ys¹⁶⁸)
//│ 						def mappend_₂_₁_₂₁(xs⁸⁶, ys²⁰¹) = 
//│ 							xs⁸⁶(ys²⁰¹)
//│ 						def mappend_₂_₁_₂₂(xs⁹⁶, ys²²²) = 
//│ 							xs⁹⁶(ys²²²)
//│ 						def mappend_₃_₁_₇(xs⁹⁵, ys²²¹) = 
//│ 							xs⁹⁵(ys²²¹)
//│ 						def mappend_₄_₁_₉(xs¹⁰¹, ys²²⁸) = 
//│ 							xs¹⁰¹(ys²²⁸)
//│ 						def mappend_₄_₁_₁₀(xs³¹, ys⁹⁸) = 
//│ 							xs³¹(ys⁹⁸)
//│ 						def mappend_₄_₁_₁₁(xs⁶¹, ys¹⁴³) = 
//│ 							xs⁶¹(ys¹⁴³)
//│ 						def mappend_₅_₁_₃(xs⁶⁶, ys¹⁵⁹) = 
//│ 							case xs⁶⁶ of {
//│ 								LH_C h⁹¹ t⁹¹ => 
//│ 									let t⁹² = mappend_₅_₁_₃(t⁹¹, ys¹⁵⁹)
//│ 									in let h⁹² = h⁹¹
//│ 									in (fun ys¹⁶⁰ -> [LH_C h⁹² mappend_₂_₁_₂₃(t⁹², ys¹⁶⁰)])
//│ 								| LH_N  => ys¹⁵⁹}
//│ 							where
//│ 							def mappend_₂_₁_₂₃(xs⁹⁷, ys²²³) = 
//│ 								xs⁹⁷(ys²²³)
//│ 						def take_lz_₀_₀_₁(n⁹, ls⁹) = 
//│ 							if (n⁹ > 0) then case force⁰(ls⁹) of {
//│ 								LH_C h¹²¹ t¹²¹ => 
//│ 									let t¹²² = take_lz_₀_₀_₁((n⁹ - 1), t¹²¹)
//│ 									in let h¹²² = h¹²¹
//│ 									in (fun _lh_dummy²⁵ -> mappend_₀_₁_₄(h¹²², concat_₀_₁_₈(t¹²²)))
//│ 								| LH_N  => (fun _lh_dummy²⁶ -> (fun ys²¹⁸ -> ys²¹⁸))} else (fun _lh_dummy²⁷ -> (fun ys²¹⁹ -> ys²¹⁹))
//│ 							where
//│ 							def concat_₀_₁_₈(lss⁹) = 
//│ 								lss⁹(99)
//│ 							def mappend_₀_₁_₄(xs¹⁰³, ys²³¹) = 
//│ 								case xs¹⁰³ of {
//│ 									LH_C h¹²⁶ t¹²⁶ => 
//│ 										let t¹²⁷ = mappend_₀_₁_₄(t¹²⁶, ys²³¹)
//│ 										in let h¹²⁷ = h¹²⁶
//│ 										in (fun ys²³² -> 
//│ 											let t¹²⁸ = mappend_₃_₁_₈(t¹²⁷, ys²³²)
//│ 											in let h¹²⁸ = h¹²⁷
//│ 											in (fun ys²³³ -> [LH_C h¹²⁸ mappend_₂_₁_₂₄(t¹²⁸, ys²³³)]))
//│ 									| LH_N  => ys²³¹}
//│ 								where
//│ 								def mappend_₂_₁_₂₄(xs⁴⁰, ys¹⁰⁷) = 
//│ 									xs⁴⁰(ys¹⁰⁷)
//│ 								def mappend_₃_₁_₈(xs⁶³, ys¹⁴⁶) = 
//│ 									xs⁶³(ys¹⁴⁶)
//│ 					def take_lz_₁_₀_₁(n⁵, ls⁵) = 
//│ 						if (n⁵ > 0) then case force⁰(ls⁵) of {
//│ 							LH_C h⁵² t⁵² => 
//│ 								let t⁵³ = take_lz_₁_₀_₁((n⁵ - 1), t⁵²)
//│ 								in let h⁵³ = h⁵²
//│ 								in (fun ys⁷⁵ -> 
//│ 									let t⁵⁴ = mappend_₁_₁_₃(t⁵³, ys⁷⁵)
//│ 									in let h⁵⁴ = h⁵³
//│ 									in (fun _lh_dummy¹³ -> mappend_₀_₁_₅(h⁵⁴, concat_₀_₁_₉(t⁵⁴))))
//│ 							| LH_N  => (fun ys⁷⁶ -> ys⁷⁶)} else (fun ys⁷⁷ -> ys⁷⁷)
//│ 						where
//│ 						def concat_₀_₁_₉(lss¹³) = 
//│ 							lss¹³(99)
//│ 						def mappend_₀_₁_₅(xs⁷⁹, ys¹⁸⁴) = 
//│ 							case xs⁷⁹ of {
//│ 								LH_C h¹⁰³ t¹⁰³ => 
//│ 									let t¹⁰⁴ = mappend_₀_₁_₅(t¹⁰³, ys¹⁸⁴)
//│ 									in let h¹⁰⁴ = h¹⁰³
//│ 									in (fun ys¹⁸⁵ -> 
//│ 										let t¹⁰⁵ = mappend_₃_₁_₉(t¹⁰⁴, ys¹⁸⁵)
//│ 										in let h¹⁰⁵ = h¹⁰⁴
//│ 										in (fun ys¹⁸⁶ -> [LH_C h¹⁰⁵ mappend_₂_₁_₂₅(t¹⁰⁵, ys¹⁸⁶)]))
//│ 								| LH_N  => ys¹⁸⁴}
//│ 							where
//│ 							def mappend_₂_₁_₂₅(xs⁶⁹, ys¹⁶³) = 
//│ 								xs⁶⁹(ys¹⁶³)
//│ 							def mappend_₃_₁_₉(xs⁵⁴, ys¹³³) = 
//│ 								xs⁵⁴(ys¹³³)
//│ 						def mappend_₁_₁_₃(xs³⁰, ys⁹⁷) = 
//│ 							xs³⁰(ys⁹⁷)
//│ 				def take_lz_₀_₁_₀(n⁸, ls⁸) = 
//│ 					if (n⁸ > 0) then case force⁰(ls⁸) of {
//│ 						LH_C h⁹³ t⁹³ => 
//│ 							let t⁹⁴ = take_lz_₀_₁_₀((n⁸ - 1), t⁹³)
//│ 							in let h⁹⁴ = h⁹³
//│ 							in (fun _lh_dummy²² -> mappend_₀_₀_₁(h⁹⁴, concat_₀_₀_₃(t⁹⁴)))
//│ 						| LH_N  => (fun _lh_dummy²³ -> (fun ys¹⁶⁴ -> ys¹⁶⁴))} else (fun _lh_dummy²⁴ -> (fun ys¹⁶⁵ -> ys¹⁶⁵))
//│ 					where
//│ 					def concat_₀_₀_₃(lss¹⁴) = 
//│ 						lss¹⁴(99)
//│ 					def mappend_₀_₀_₁(xs¹⁸, ys⁸¹) = 
//│ 						case xs¹⁸ of {
//│ 							LH_C h⁵⁸ t⁵⁸ => 
//│ 								let t⁵⁹ = mappend_₀_₀_₁(t⁵⁸, ys⁸¹)
//│ 								in let h⁵⁹ = h⁵⁸
//│ 								in (fun ys⁸² -> 
//│ 									let t⁶⁰ = mappend_₃_₀_₃(t⁵⁹, ys⁸²)
//│ 									in let h⁶⁰ = h⁵⁹
//│ 									in (fun ys⁸³ -> [LH_C h⁶⁰ mappend_₂_₀_₁₁(t⁶⁰, ys⁸³)]))
//│ 							| LH_N  => ys⁸¹}
//│ 						where
//│ 						def mappend_₂_₀_₁₁(xs⁵⁰, ys¹²⁰) = 
//│ 							xs⁵⁰(ys¹²⁰)
//│ 						def mappend_₃_₀_₃(xs⁷⁰, ys¹⁶⁶) = 
//│ 							xs⁷⁰(ys¹⁶⁶)
//│ 			def take_lz_₁_₁_₀(n⁶, ls⁶) = 
//│ 				if (n⁶ > 0) then case force⁰(ls⁶) of {
//│ 					LH_C h⁵⁵ t⁵⁵ => 
//│ 						let t⁵⁶ = take_lz_₁_₁_₀((n⁶ - 1), t⁵⁵)
//│ 						in let h⁵⁶ = h⁵⁵
//│ 						in (fun ys⁷⁸ -> 
//│ 							let t⁵⁷ = mappend_₁_₀_₁(t⁵⁶, ys⁷⁸)
//│ 							in let h⁵⁷ = h⁵⁶
//│ 							in (fun _lh_dummy¹⁴ -> mappend_₀_₀_₂(h⁵⁷, concat_₀_₀_₄(t⁵⁷))))
//│ 					| LH_N  => (fun ys⁷⁹ -> ys⁷⁹)} else (fun ys⁸⁰ -> ys⁸⁰)
//│ 				where
//│ 				def concat_₀_₀_₄(lss¹²) = 
//│ 					lss¹²(99)
//│ 				def mappend_₀_₀_₂(xs⁵², ys¹²⁹) = 
//│ 					case xs⁵² of {
//│ 						LH_C h⁷⁴ t⁷⁴ => 
//│ 							let t⁷⁵ = mappend_₀_₀_₂(t⁷⁴, ys¹²⁹)
//│ 							in let h⁷⁵ = h⁷⁴
//│ 							in (fun ys¹³⁰ -> 
//│ 								let t⁷⁶ = mappend_₃_₀_₄(t⁷⁵, ys¹³⁰)
//│ 								in let h⁷⁶ = h⁷⁵
//│ 								in (fun ys¹³¹ -> [LH_C h⁷⁶ mappend_₂_₀_₁₂(t⁷⁶, ys¹³¹)]))
//│ 						| LH_N  => ys¹²⁹}
//│ 					where
//│ 					def mappend_₂_₀_₁₂(xs⁴⁸, ys¹¹⁸) = 
//│ 						xs⁴⁸(ys¹¹⁸)
//│ 					def mappend_₃_₀_₄(xs⁸¹, ys¹⁸⁹) = 
//│ 						xs⁸¹(ys¹⁸⁹)
//│ 				def mappend_₁_₀_₁(xs¹⁷, ys⁷⁴) = 
//│ 					xs¹⁷(ys⁷⁴)
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 1236 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴⁴ t⁴⁴ => let t⁴⁵ = take_lz_₁_₀_₀((n⁴ - 1), t⁴⁴)
//│ in let h⁴⁵ = h⁴⁴
//│ in (fun ys⁶² -> let t⁴⁶ = mappend_₁_₁_₁(t⁴⁵, ys⁶²)
//│ in let h⁴⁶ = h⁴⁵
//│ in (fun _lh_dummy¹² -> mappend_₀_₁_₂(h⁴⁶, concat_₀_₁_₄(t⁴⁶)))) | LH_N  => (fun ys⁶³ -> ys⁶³)}: 1208
//│ 	case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₀_₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1743
//│ 	case force⁰(ls⁷) of {LH_C h⁸⁸ t⁸⁸ => let t⁸⁹ = take_lz_₀_₀_₀((n⁷ - 1), t⁸⁸)
//│ in let h⁸⁹ = h⁸⁸
//│ in (fun _lh_dummy¹⁷ -> mappend_₀_₁_₁(h⁸⁹, concat_₀_₁_₃(t⁸⁹))) | LH_N  => (fun _lh_dummy¹⁸ -> (fun ys¹⁵⁴ -> ys¹⁵⁴))}: 2313
//│ [LH_N]: 1257 --->
//│ 	case xs²⁰ of {LH_C h⁶¹ t⁶¹ => let t⁶² = mappend_₀_₀_₀(t⁶¹, ys⁸⁵)
//│ in let h⁶² = h⁶¹
//│ in (fun ys⁸⁶ -> let t⁶³ = mappend_₃_₀_₁(t⁶², ys⁸⁶)
//│ in let h⁶³ = h⁶²
//│ in (fun ys⁸⁷ -> [LH_C h⁶³ mappend_₂_₀_₅(t⁶³, ys⁸⁷)])) | LH_N  => ys⁸⁵}: 1530
//│ [LH_C ' ' [LH_N]]: 1258 --->
//│ 	case xs²⁰ of {LH_C h⁶¹ t⁶¹ => let t⁶² = mappend_₀_₀_₀(t⁶¹, ys⁸⁵)
//│ in let h⁶² = h⁶¹
//│ in (fun ys⁸⁶ -> let t⁶³ = mappend_₃_₀_₁(t⁶², ys⁸⁶)
//│ in let h⁶³ = h⁶²
//│ in (fun ys⁸⁷ -> [LH_C h⁶³ mappend_₂_₀_₅(t⁶³, ys⁸⁷)])) | LH_N  => ys⁸⁵}: 1530
//│ [LH_N]: 1730 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴⁴ t⁴⁴ => let t⁴⁵ = take_lz_₁_₀_₀((n⁴ - 1), t⁴⁴)
//│ in let h⁴⁵ = h⁴⁴
//│ in (fun ys⁶² -> let t⁴⁶ = mappend_₁_₁_₁(t⁴⁵, ys⁶²)
//│ in let h⁴⁶ = h⁴⁵
//│ in (fun _lh_dummy¹² -> mappend_₀_₁_₂(h⁴⁶, concat_₀_₁_₄(t⁴⁶)))) | LH_N  => (fun ys⁶³ -> ys⁶³)}: 1208
//│ 	case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₀_₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1743
//│ 	case force⁰(ls⁷) of {LH_C h⁸⁸ t⁸⁸ => let t⁸⁹ = take_lz_₀_₀_₀((n⁷ - 1), t⁸⁸)
//│ in let h⁸⁹ = h⁸⁸
//│ in (fun _lh_dummy¹⁷ -> mappend_₀_₁_₁(h⁸⁹, concat_₀_₁_₃(t⁸⁹))) | LH_N  => (fun _lh_dummy¹⁸ -> (fun ys¹⁵⁴ -> ys¹⁵⁴))}: 2313
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 1798 --->
//│ 	case _lh_matchIdent¹² of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹³ = divmod_₀_₀_₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸) | _  => error⁰}: 3213
//│ [LH_P3 1 0 1]: 1999 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1801
//│ [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 2128 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1801
//│ [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 2156 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1801
//│ [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀_₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2158 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵² t⁵² => let t⁵³ = take_lz_₁_₀_₁((n⁵ - 1), t⁵²)
//│ in let h⁵³ = h⁵²
//│ in (fun ys⁷⁵ -> let t⁵⁴ = mappend_₁_₁_₃(t⁵³, ys⁷⁵)
//│ in let h⁵⁴ = h⁵³
//│ in (fun _lh_dummy¹³ -> mappend_₀_₁_₅(h⁵⁴, concat_₀_₁_₉(t⁵⁴)))) | LH_N  => (fun ys⁷⁶ -> ys⁷⁶)}: 1417
//│ 	case force⁰(ls⁶) of {LH_C h⁵⁵ t⁵⁵ => let t⁵⁶ = take_lz_₁_₁_₀((n⁶ - 1), t⁵⁵)
//│ in let h⁵⁶ = h⁵⁵
//│ in (fun ys⁷⁸ -> let t⁵⁷ = mappend_₁_₀_₁(t⁵⁶, ys⁷⁸)
//│ in let h⁵⁷ = h⁵⁶
//│ in (fun _lh_dummy¹⁴ -> mappend_₀_₀_₂(h⁵⁷, concat_₀_₀_₄(t⁵⁷)))) | LH_N  => (fun ys⁷⁹ -> ys⁷⁹)}: 1462
//│ 	case force⁰(ls⁸) of {LH_C h⁹³ t⁹³ => let t⁹⁴ = take_lz_₀_₁_₀((n⁸ - 1), t⁹³)
//│ in let h⁹⁴ = h⁹³
//│ in (fun _lh_dummy²² -> mappend_₀_₀_₁(h⁹⁴, concat_₀_₀_₃(t⁹⁴))) | LH_N  => (fun _lh_dummy²³ -> (fun ys¹⁶⁴ -> ys¹⁶⁴))}: 2432
//│ 	case _lh_matchIdent⁸ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz_₀_₁_₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2472
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz_₀_₀_₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 2502
//│ 	case force⁰(ls⁹) of {LH_C h¹²¹ t¹²¹ => let t¹²² = take_lz_₀_₀_₁((n⁹ - 1), t¹²¹)
//│ in let h¹²² = h¹²¹
//│ in (fun _lh_dummy²⁵ -> mappend_₀_₁_₄(h¹²², concat_₀_₁_₈(t¹²²))) | LH_N  => (fun _lh_dummy²⁶ -> (fun ys²¹⁸ -> ys²¹⁸))}: 3161
//│ [LH_N]: 2459 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵² t⁵² => let t⁵³ = take_lz_₁_₀_₁((n⁵ - 1), t⁵²)
//│ in let h⁵³ = h⁵²
//│ in (fun ys⁷⁵ -> let t⁵⁴ = mappend_₁_₁_₃(t⁵³, ys⁷⁵)
//│ in let h⁵⁴ = h⁵³
//│ in (fun _lh_dummy¹³ -> mappend_₀_₁_₅(h⁵⁴, concat_₀_₁_₉(t⁵⁴)))) | LH_N  => (fun ys⁷⁶ -> ys⁷⁶)}: 1417
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz_₀_₀_₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 2502
//│ 	case force⁰(ls⁹) of {LH_C h¹²¹ t¹²¹ => let t¹²² = take_lz_₀_₀_₁((n⁹ - 1), t¹²¹)
//│ in let h¹²² = h¹²¹
//│ in (fun _lh_dummy²⁵ -> mappend_₀_₁_₄(h¹²², concat_₀_₁_₈(t¹²²))) | LH_N  => (fun _lh_dummy²⁶ -> (fun ys²¹⁸ -> ys²¹⁸))}: 3161
//│ [LH_N]: 2489 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵² t⁵² => let t⁵³ = take_lz_₁_₀_₁((n⁵ - 1), t⁵²)
//│ in let h⁵³ = h⁵²
//│ in (fun ys⁷⁵ -> let t⁵⁴ = mappend_₁_₁_₃(t⁵³, ys⁷⁵)
//│ in let h⁵⁴ = h⁵³
//│ in (fun _lh_dummy¹³ -> mappend_₀_₁_₅(h⁵⁴, concat_₀_₁_₉(t⁵⁴)))) | LH_N  => (fun ys⁷⁶ -> ys⁷⁶)}: 1417
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz_₀_₀_₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 2502
//│ 	case force⁰(ls⁹) of {LH_C h¹²¹ t¹²¹ => let t¹²² = take_lz_₀_₀_₁((n⁹ - 1), t¹²¹)
//│ in let h¹²² = h¹²¹
//│ in (fun _lh_dummy²⁵ -> mappend_₀_₁_₄(h¹²², concat_₀_₁_₈(t¹²²))) | LH_N  => (fun _lh_dummy²⁶ -> (fun ys²¹⁸ -> ys²¹⁸))}: 3161
//│ [LH_N]: 2544 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴⁴ t⁴⁴ => let t⁴⁵ = take_lz_₁_₀_₀((n⁴ - 1), t⁴⁴)
//│ in let h⁴⁵ = h⁴⁴
//│ in (fun ys⁶² -> let t⁴⁶ = mappend_₁_₁_₁(t⁴⁵, ys⁶²)
//│ in let h⁴⁶ = h⁴⁵
//│ in (fun _lh_dummy¹² -> mappend_₀_₁_₂(h⁴⁶, concat_₀_₁_₄(t⁴⁶)))) | LH_N  => (fun ys⁶³ -> ys⁶³)}: 1208
//│ 	case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₀_₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1743
//│ 	case force⁰(ls⁷) of {LH_C h⁸⁸ t⁸⁸ => let t⁸⁹ = take_lz_₀_₀_₀((n⁷ - 1), t⁸⁸)
//│ in let h⁸⁹ = h⁸⁸
//│ in (fun _lh_dummy¹⁷ -> mappend_₀_₁_₁(h⁸⁹, concat_₀_₁_₃(t⁸⁹))) | LH_N  => (fun _lh_dummy¹⁸ -> (fun ys¹⁵⁴ -> ys¹⁵⁴))}: 2313
//│ [LH_N]: 2565 --->
//│ 	case xs⁸⁹ of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = mappend_₀_₁_₀(t¹¹⁸, ys²¹¹)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun ys²¹² -> let t¹²⁰ = mappend_₃_₁_₁(t¹¹⁹, ys²¹²)
//│ in let h¹²⁰ = h¹¹⁹
//│ in (fun ys²¹³ -> [LH_C h¹²⁰ mappend_₂_₁_₅(t¹²⁰, ys²¹³)])) | LH_N  => ys²¹¹}: 3107
//│ [LH_C ' ' [LH_N]]: 2566 --->
//│ 	case xs⁸⁹ of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = mappend_₀_₁_₀(t¹¹⁸, ys²¹¹)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun ys²¹² -> let t¹²⁰ = mappend_₃_₁_₁(t¹¹⁹, ys²¹²)
//│ in let h¹²⁰ = h¹¹⁹
//│ in (fun ys²¹³ -> [LH_C h¹²⁰ mappend_₂_₁_₅(t¹²⁰, ys²¹³)])) | LH_N  => ys²¹¹}: 3107
//│ [LH_N]: 2953 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵² t⁵² => let t⁵³ = take_lz_₁_₀_₁((n⁵ - 1), t⁵²)
//│ in let h⁵³ = h⁵²
//│ in (fun ys⁷⁵ -> let t⁵⁴ = mappend_₁_₁_₃(t⁵³, ys⁷⁵)
//│ in let h⁵⁴ = h⁵³
//│ in (fun _lh_dummy¹³ -> mappend_₀_₁_₅(h⁵⁴, concat_₀_₁_₉(t⁵⁴)))) | LH_N  => (fun ys⁷⁶ -> ys⁷⁶)}: 1417
//│ 	case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz_₀_₀_₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 2502
//│ 	case force⁰(ls⁹) of {LH_C h¹²¹ t¹²¹ => let t¹²² = take_lz_₀_₀_₁((n⁹ - 1), t¹²¹)
//│ in let h¹²² = h¹²¹
//│ in (fun _lh_dummy²⁵ -> mappend_₀_₁_₄(h¹²², concat_₀_₁_₈(t¹²²))) | LH_N  => (fun _lh_dummy²⁶ -> (fun ys²¹⁸ -> ys²¹⁸))}: 3161
//│ [LH_N]: 2974 --->
//│ 	case xs⁵⁶ of {LH_C h⁷⁷ t⁷⁷ => let t⁷⁸ = mappend_₀_₁_₃(t⁷⁷, ys¹³⁵)
//│ in let h⁷⁸ = h⁷⁷
//│ in (fun ys¹³⁶ -> let t⁷⁹ = mappend_₃_₁_₆(t⁷⁸, ys¹³⁶)
//│ in let h⁷⁹ = h⁷⁸
//│ in (fun ys¹³⁷ -> [LH_C h⁷⁹ mappend_₂_₁_₁₈(t⁷⁹, ys¹³⁷)])) | LH_N  => ys¹³⁵}: 1982
//│ [LH_C ' ' [LH_N]]: 2975 --->
//│ 	case xs⁵⁶ of {LH_C h⁷⁷ t⁷⁷ => let t⁷⁸ = mappend_₀_₁_₃(t⁷⁷, ys¹³⁵)
//│ in let h⁷⁸ = h⁷⁷
//│ in (fun ys¹³⁶ -> let t⁷⁹ = mappend_₃_₁_₆(t⁷⁸, ys¹³⁶)
//│ in let h⁷⁹ = h⁷⁸
//│ in (fun ys¹³⁷ -> [LH_C h⁷⁹ mappend_₂_₁_₁₈(t⁷⁹, ys¹³⁷)])) | LH_N  => ys¹³⁵}: 1982
//│ ------------------
//│ case force⁰(ls⁴) of {LH_C h⁴⁴ t⁴⁴ => let t⁴⁵ = take_lz_₁_₀_₀((n⁴ - 1), t⁴⁴)
//│ in let h⁴⁵ = h⁴⁴
//│ in (fun ys⁶² -> let t⁴⁶ = mappend_₁_₁_₁(t⁴⁵, ys⁶²)
//│ in let h⁴⁶ = h⁴⁵
//│ in (fun _lh_dummy¹² -> mappend_₀_₁_₂(h⁴⁶, concat_₀_₁_₄(t⁴⁶)))) | LH_N  => (fun ys⁶³ -> ys⁶³)}: 1208 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1236
//│ 	[LH_N]: 1730
//│ 	[LH_N]: 2544
//│ case force⁰(ls⁵) of {LH_C h⁵² t⁵² => let t⁵³ = take_lz_₁_₀_₁((n⁵ - 1), t⁵²)
//│ in let h⁵³ = h⁵²
//│ in (fun ys⁷⁵ -> let t⁵⁴ = mappend_₁_₁_₃(t⁵³, ys⁷⁵)
//│ in let h⁵⁴ = h⁵³
//│ in (fun _lh_dummy¹³ -> mappend_₀_₁_₅(h⁵⁴, concat_₀_₁_₉(t⁵⁴)))) | LH_N  => (fun ys⁷⁶ -> ys⁷⁶)}: 1417 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀_₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2158
//│ 	[LH_N]: 2459
//│ 	[LH_N]: 2489
//│ 	[LH_N]: 2953
//│ case force⁰(ls⁶) of {LH_C h⁵⁵ t⁵⁵ => let t⁵⁶ = take_lz_₁_₁_₀((n⁶ - 1), t⁵⁵)
//│ in let h⁵⁶ = h⁵⁵
//│ in (fun ys⁷⁸ -> let t⁵⁷ = mappend_₁_₀_₁(t⁵⁶, ys⁷⁸)
//│ in let h⁵⁷ = h⁵⁶
//│ in (fun _lh_dummy¹⁴ -> mappend_₀_₀_₂(h⁵⁷, concat_₀_₀_₄(t⁵⁷)))) | LH_N  => (fun ys⁷⁹ -> ys⁷⁹)}: 1462 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀_₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2158
//│ case xs²⁰ of {LH_C h⁶¹ t⁶¹ => let t⁶² = mappend_₀_₀_₀(t⁶¹, ys⁸⁵)
//│ in let h⁶² = h⁶¹
//│ in (fun ys⁸⁶ -> let t⁶³ = mappend_₃_₀_₁(t⁶², ys⁸⁶)
//│ in let h⁶³ = h⁶²
//│ in (fun ys⁸⁷ -> [LH_C h⁶³ mappend_₂_₀_₅(t⁶³, ys⁸⁷)])) | LH_N  => ys⁸⁵}: 1530 --->
//│ 	[LH_N]: 1257
//│ 	[LH_C ' ' [LH_N]]: 1258
//│ case _lh_matchIdent⁷ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₀_₀((_lh_drop_lz_arg1² - 1), _lh_drop_lz_LH_C_1²)) | _  => error⁰}: 1743 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1236
//│ 	[LH_N]: 1730
//│ 	[LH_N]: 2544
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1801 --->
//│ 	[LH_P3 1 0 1]: 1999
//│ 	[LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 2128
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 2156
//│ case xs⁵⁶ of {LH_C h⁷⁷ t⁷⁷ => let t⁷⁸ = mappend_₀_₁_₃(t⁷⁷, ys¹³⁵)
//│ in let h⁷⁸ = h⁷⁷
//│ in (fun ys¹³⁶ -> let t⁷⁹ = mappend_₃_₁_₆(t⁷⁸, ys¹³⁶)
//│ in let h⁷⁹ = h⁷⁸
//│ in (fun ys¹³⁷ -> [LH_C h⁷⁹ mappend_₂_₁_₁₈(t⁷⁹, ys¹³⁷)])) | LH_N  => ys¹³⁵}: 1982 --->
//│ 	[LH_N]: 2974
//│ 	[LH_C ' ' [LH_N]]: 2975
//│ case force⁰(ls⁷) of {LH_C h⁸⁸ t⁸⁸ => let t⁸⁹ = take_lz_₀_₀_₀((n⁷ - 1), t⁸⁸)
//│ in let h⁸⁹ = h⁸⁸
//│ in (fun _lh_dummy¹⁷ -> mappend_₀_₁_₁(h⁸⁹, concat_₀_₁_₃(t⁸⁹))) | LH_N  => (fun _lh_dummy¹⁸ -> (fun ys¹⁵⁴ -> ys¹⁵⁴))}: 2313 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1236
//│ 	[LH_N]: 1730
//│ 	[LH_N]: 2544
//│ case force⁰(ls⁸) of {LH_C h⁹³ t⁹³ => let t⁹⁴ = take_lz_₀_₁_₀((n⁸ - 1), t⁹³)
//│ in let h⁹⁴ = h⁹³
//│ in (fun _lh_dummy²² -> mappend_₀_₀_₁(h⁹⁴, concat_₀_₀_₃(t⁹⁴))) | LH_N  => (fun _lh_dummy²³ -> (fun ys¹⁶⁴ -> ys¹⁶⁴))}: 2432 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀_₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2158
//│ case _lh_matchIdent⁸ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz_₀_₁_₀((_lh_drop_lz_arg1³ - 1), _lh_drop_lz_LH_C_1³)) | _  => error⁰}: 2472 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀_₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2158
//│ case _lh_matchIdent⁹ of {LH_N  => [LH_N] | LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz_₀_₀_₁((_lh_drop_lz_arg1⁴ - 1), _lh_drop_lz_LH_C_1⁴)) | _  => error⁰}: 2502 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀_₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2158
//│ 	[LH_N]: 2459
//│ 	[LH_N]: 2489
//│ 	[LH_N]: 2953
//│ case xs⁸⁹ of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = mappend_₀_₁_₀(t¹¹⁸, ys²¹¹)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun ys²¹² -> let t¹²⁰ = mappend_₃_₁_₁(t¹¹⁹, ys²¹²)
//│ in let h¹²⁰ = h¹¹⁹
//│ in (fun ys²¹³ -> [LH_C h¹²⁰ mappend_₂_₁_₅(t¹²⁰, ys²¹³)])) | LH_N  => ys²¹¹}: 3107 --->
//│ 	[LH_N]: 2565
//│ 	[LH_C ' ' [LH_N]]: 2566
//│ case force⁰(ls⁹) of {LH_C h¹²¹ t¹²¹ => let t¹²² = take_lz_₀_₀_₁((n⁹ - 1), t¹²¹)
//│ in let h¹²² = h¹²¹
//│ in (fun _lh_dummy²⁵ -> mappend_₀_₁_₄(h¹²², concat_₀_₁_₈(t¹²²))) | LH_N  => (fun _lh_dummy²⁶ -> (fun ys²¹⁸ -> ys²¹⁸))}: 3161 --->
//│ 	[LH_C string_of_int⁰(_lh_hashOp_LH_P2_0¹) hashOp_₀_₀_₀(k⁵, [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²])]: 2158
//│ 	[LH_N]: 2459
//│ 	[LH_N]: 2489
//│ 	[LH_N]: 2953
//│ case _lh_matchIdent¹² of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹³ = divmod_₀_₀_₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸) | _  => error⁰}: 3213 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 1798
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_N]: 1257 --->
//│ 	case xs²⁰ of {LH_C h⁶¹ t⁶¹ => let t⁶² = mappend_₀_₀_₀(t⁶¹, ys⁸⁵)
//│ in let h⁶² = h⁶¹
//│ in (fun ys⁸⁶ -> let t⁶³ = mappend_₃_₀_₁(t⁶², ys⁸⁶)
//│ in let h⁶³ = h⁶²
//│ in (fun ys⁸⁷ -> [LH_C h⁶³ mappend_₂_₀_₅(t⁶³, ys⁸⁷)])) | LH_N  => ys⁸⁵}: 1530
//│ [LH_C ' ' [LH_N]]: 1258 --->
//│ 	case xs²⁰ of {LH_C h⁶¹ t⁶¹ => let t⁶² = mappend_₀_₀_₀(t⁶¹, ys⁸⁵)
//│ in let h⁶² = h⁶¹
//│ in (fun ys⁸⁶ -> let t⁶³ = mappend_₃_₀_₁(t⁶², ys⁸⁶)
//│ in let h⁶³ = h⁶²
//│ in (fun ys⁸⁷ -> [LH_C h⁶³ mappend_₂_₀_₅(t⁶³, ys⁸⁷)])) | LH_N  => ys⁸⁵}: 1530
//│ [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 1798 --->
//│ 	case _lh_matchIdent¹² of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹³ = divmod_₀_₀_₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸) | _  => error⁰}: 3213
//│ [LH_P3 1 0 1]: 1999 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1801
//│ [LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 2128 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1801
//│ [LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 2156 --->
//│ 	case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1801
//│ [LH_N]: 2565 --->
//│ 	case xs⁸⁹ of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = mappend_₀_₁_₀(t¹¹⁸, ys²¹¹)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun ys²¹² -> let t¹²⁰ = mappend_₃_₁_₁(t¹¹⁹, ys²¹²)
//│ in let h¹²⁰ = h¹¹⁹
//│ in (fun ys²¹³ -> [LH_C h¹²⁰ mappend_₂_₁_₅(t¹²⁰, ys²¹³)])) | LH_N  => ys²¹¹}: 3107
//│ [LH_C ' ' [LH_N]]: 2566 --->
//│ 	case xs⁸⁹ of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = mappend_₀_₁_₀(t¹¹⁸, ys²¹¹)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun ys²¹² -> let t¹²⁰ = mappend_₃_₁_₁(t¹¹⁹, ys²¹²)
//│ in let h¹²⁰ = h¹¹⁹
//│ in (fun ys²¹³ -> [LH_C h¹²⁰ mappend_₂_₁_₅(t¹²⁰, ys²¹³)])) | LH_N  => ys²¹¹}: 3107
//│ [LH_N]: 2974 --->
//│ 	case xs⁵⁶ of {LH_C h⁷⁷ t⁷⁷ => let t⁷⁸ = mappend_₀_₁_₃(t⁷⁷, ys¹³⁵)
//│ in let h⁷⁸ = h⁷⁷
//│ in (fun ys¹³⁶ -> let t⁷⁹ = mappend_₃_₁_₆(t⁷⁸, ys¹³⁶)
//│ in let h⁷⁹ = h⁷⁸
//│ in (fun ys¹³⁷ -> [LH_C h⁷⁹ mappend_₂_₁_₁₈(t⁷⁹, ys¹³⁷)])) | LH_N  => ys¹³⁵}: 1982
//│ [LH_C ' ' [LH_N]]: 2975 --->
//│ 	case xs⁵⁶ of {LH_C h⁷⁷ t⁷⁷ => let t⁷⁸ = mappend_₀_₁_₃(t⁷⁷, ys¹³⁵)
//│ in let h⁷⁸ = h⁷⁷
//│ in (fun ys¹³⁶ -> let t⁷⁹ = mappend_₃_₁_₆(t⁷⁸, ys¹³⁶)
//│ in let h⁷⁹ = h⁷⁸
//│ in (fun ys¹³⁷ -> [LH_C h⁷⁹ mappend_₂_₁_₁₈(t⁷⁹, ys¹³⁷)])) | LH_N  => ys¹³⁵}: 1982
//│ ------------------
//│ case xs²⁰ of {LH_C h⁶¹ t⁶¹ => let t⁶² = mappend_₀_₀_₀(t⁶¹, ys⁸⁵)
//│ in let h⁶² = h⁶¹
//│ in (fun ys⁸⁶ -> let t⁶³ = mappend_₃_₀_₁(t⁶², ys⁸⁶)
//│ in let h⁶³ = h⁶²
//│ in (fun ys⁸⁷ -> [LH_C h⁶³ mappend_₂_₀_₅(t⁶³, ys⁸⁷)])) | LH_N  => ys⁸⁵}: 1530 --->
//│ 	[LH_N]: 1257
//│ 	[LH_C ' ' [LH_N]]: 1258
//│ case _lh_ampOp_arg2¹ of {LH_P3 _lh_ampOp_LH_P3_0¹ _lh_ampOp_LH_P3_1¹ _lh_ampOp_LH_P3_2¹ => let y¹ = ((_lh_ampOp_arg1¹ * 2) + 1)
//│ in [LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)] | _  => error⁰}: 1801 --->
//│ 	[LH_P3 1 0 1]: 1999
//│ 	[LH_P3 _lh_hashOp_LH_P3_0² _lh_hashOp_LH_P3_1² _lh_hashOp_LH_P3_2²]: 2128
//│ 	[LH_P3 (_lh_hashOp_LH_P3_0² * 10) ((_lh_hashOp_LH_P3_1² - (_lh_hashOp_LH_P2_0¹ * _lh_hashOp_LH_P3_2²)) * 10) _lh_hashOp_LH_P3_2²]: 2156
//│ case xs⁵⁶ of {LH_C h⁷⁷ t⁷⁷ => let t⁷⁸ = mappend_₀_₁_₃(t⁷⁷, ys¹³⁵)
//│ in let h⁷⁸ = h⁷⁷
//│ in (fun ys¹³⁶ -> let t⁷⁹ = mappend_₃_₁_₆(t⁷⁸, ys¹³⁶)
//│ in let h⁷⁹ = h⁷⁸
//│ in (fun ys¹³⁷ -> [LH_C h⁷⁹ mappend_₂_₁_₁₈(t⁷⁹, ys¹³⁷)])) | LH_N  => ys¹³⁵}: 1982 --->
//│ 	[LH_N]: 2974
//│ 	[LH_C ' ' [LH_N]]: 2975
//│ case xs⁸⁹ of {LH_C h¹¹⁸ t¹¹⁸ => let t¹¹⁹ = mappend_₀_₁_₀(t¹¹⁸, ys²¹¹)
//│ in let h¹¹⁹ = h¹¹⁸
//│ in (fun ys²¹² -> let t¹²⁰ = mappend_₃_₁_₁(t¹¹⁹, ys²¹²)
//│ in let h¹²⁰ = h¹¹⁹
//│ in (fun ys²¹³ -> [LH_C h¹²⁰ mappend_₂_₁_₅(t¹²⁰, ys²¹³)])) | LH_N  => ys²¹¹}: 3107 --->
//│ 	[LH_N]: 2565
//│ 	[LH_C ' ' [LH_N]]: 2566
//│ case _lh_matchIdent¹² of {LH_P3 _lh_hashOp_LH_P3_0³ _lh_hashOp_LH_P3_1³ _lh_hashOp_LH_P3_2³ => let _lh_matchIdent¹³ = divmod_₀_₀_₀(((_lh_hashOp_LH_P3_0³ * 3) + _lh_hashOp_LH_P3_1³), _lh_hashOp_LH_P3_2³)
//│ in _lh_matchIdent¹³(_lh_hashOp_LH_P3_0³, _lh_hashOp_LH_P3_1³, _lh_hashOp_LH_P3_2³, k⁸) | _  => error⁰}: 3213 --->
//│ 	[LH_P3 (_lh_ampOp_LH_P3_0¹ * _lh_ampOp_arg1¹) ((_lh_ampOp_LH_P3_1¹ + (_lh_ampOp_LH_P3_0¹ * 2)) * y¹) (_lh_ampOp_LH_P3_2¹ * y¹)]: 1798
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testPiDigits_nofib_₀_₀_₀(primId⁰(5000))
//│ def testPiDigits_nofib_₀_₀_₀(_lh_testPiDigits_nofib_arg1²) = 
//│ 	pidgits_₀_₀_₀(_lh_testPiDigits_nofib_arg1²)
//│ 	where
//│ 	def pidgits_₀_₀_₀(_lh_pidgits_arg1²) = 
//│ 		percOp_₀_₀_₀(0, hashOp_₀_₀_₀(0, 
//│ 			let _lh_ampOp_LH_P3_2⁴ = 1
//│ 			in let _lh_ampOp_LH_P3_1⁴ = 0
//│ 			in let _lh_ampOp_LH_P3_0⁴ = 1
//│ 			in (fun _lh_ampOp_arg1⁵ -> 
//│ 				let y⁴ = ((_lh_ampOp_arg1⁵ * 2) + 1)
//│ 				in let _lh_hashOp_LH_P3_2⁷ = (_lh_ampOp_LH_P3_2⁴ * y⁴)
//│ 				in let _lh_hashOp_LH_P3_1⁷ = ((_lh_ampOp_LH_P3_1⁴ + (_lh_ampOp_LH_P3_0⁴ * 2)) * y⁴)
//│ 				in let _lh_hashOp_LH_P3_0⁷ = (_lh_ampOp_LH_P3_0⁴ * _lh_ampOp_arg1⁵)
//│ 				in (fun k¹⁵ -> 
//│ 					let _lh_matchIdent²² = divmod_₀_₀_₀(((_lh_hashOp_LH_P3_0⁷ * 3) + _lh_hashOp_LH_P3_1⁷), _lh_hashOp_LH_P3_2⁷)
//│ 					in _lh_matchIdent²²(_lh_hashOp_LH_P3_0⁷, _lh_hashOp_LH_P3_1⁷, _lh_hashOp_LH_P3_2⁷, k¹⁵)))), _lh_pidgits_arg1²)
//│ 		where
//│ 		def hashOp_₀_₀_₀(_lh_hashOp_arg1², _lh_hashOp_arg2²) = 
//│ 			lazy⁰(
//│ 				let k¹⁶ = (_lh_hashOp_arg1² + 1)
//│ 				in let _lh_matchIdent²³ = ampOp_₀_₀_₀(k¹⁶, _lh_hashOp_arg2²)
//│ 				in _lh_matchIdent²³(k¹⁶))
//│ 			where
//│ 			def ampOp_₀_₀_₀(_lh_ampOp_arg1², _lh_ampOp_arg2²) = 
//│ 				_lh_ampOp_arg2²(_lh_ampOp_arg1²)
//│ 			def divmod_₀_₀_₀(_lh_divmod_arg1², _lh_divmod_arg2²) = 
//│ 				let _lh_hashOp_LH_P2_1² = (_lh_divmod_arg1² % _lh_divmod_arg2²)
//│ 				in let _lh_hashOp_LH_P2_0² = div⁰(_lh_divmod_arg1², _lh_divmod_arg2²)
//│ 				in (fun _lh_hashOp_LH_P3_0⁴ -> (fun _lh_hashOp_LH_P3_1⁴ -> (fun _lh_hashOp_LH_P3_2⁴ -> (fun k¹² -> if ((_lh_hashOp_LH_P3_0⁴ > _lh_hashOp_LH_P3_1⁴) || ((_lh_hashOp_LH_P2_1² + _lh_hashOp_LH_P3_0⁴) >= _lh_hashOp_LH_P3_2⁴)) then force⁰(hashOp_₀_₀_₀(k¹², 
//│ 					let _lh_ampOp_LH_P3_2² = _lh_hashOp_LH_P3_2⁴
//│ 					in let _lh_ampOp_LH_P3_1² = _lh_hashOp_LH_P3_1⁴
//│ 					in let _lh_ampOp_LH_P3_0² = _lh_hashOp_LH_P3_0⁴
//│ 					in (fun _lh_ampOp_arg1³ -> 
//│ 						let y² = ((_lh_ampOp_arg1³ * 2) + 1)
//│ 						in let _lh_hashOp_LH_P3_2⁵ = (_lh_ampOp_LH_P3_2² * y²)
//│ 						in let _lh_hashOp_LH_P3_1⁵ = ((_lh_ampOp_LH_P3_1² + (_lh_ampOp_LH_P3_0² * 2)) * y²)
//│ 						in let _lh_hashOp_LH_P3_0⁵ = (_lh_ampOp_LH_P3_0² * _lh_ampOp_arg1³)
//│ 						in (fun k¹³ -> 
//│ 							let _lh_matchIdent²⁰ = divmod_₀_₀_₀(((_lh_hashOp_LH_P3_0⁵ * 3) + _lh_hashOp_LH_P3_1⁵), _lh_hashOp_LH_P3_2⁵)
//│ 							in _lh_matchIdent²⁰(_lh_hashOp_LH_P3_0⁵, _lh_hashOp_LH_P3_1⁵, _lh_hashOp_LH_P3_2⁵, k¹³))))) else [LH_C string_of_int⁰(_lh_hashOp_LH_P2_0²) hashOp_₀_₀_₀(k¹², 
//│ 					let _lh_ampOp_LH_P3_2³ = _lh_hashOp_LH_P3_2⁴
//│ 					in let _lh_ampOp_LH_P3_1³ = ((_lh_hashOp_LH_P3_1⁴ - (_lh_hashOp_LH_P2_0² * _lh_hashOp_LH_P3_2⁴)) * 10)
//│ 					in let _lh_ampOp_LH_P3_0³ = (_lh_hashOp_LH_P3_0⁴ * 10)
//│ 					in (fun _lh_ampOp_arg1⁴ -> 
//│ 						let y³ = ((_lh_ampOp_arg1⁴ * 2) + 1)
//│ 						in let _lh_hashOp_LH_P3_2⁶ = (_lh_ampOp_LH_P3_2³ * y³)
//│ 						in let _lh_hashOp_LH_P3_1⁶ = ((_lh_ampOp_LH_P3_1³ + (_lh_ampOp_LH_P3_0³ * 2)) * y³)
//│ 						in let _lh_hashOp_LH_P3_0⁶ = (_lh_ampOp_LH_P3_0³ * _lh_ampOp_arg1⁴)
//│ 						in (fun k¹⁴ -> 
//│ 							let _lh_matchIdent²¹ = divmod_₀_₀_₀(((_lh_hashOp_LH_P3_0⁶ * 3) + _lh_hashOp_LH_P3_1⁶), _lh_hashOp_LH_P3_2⁶)
//│ 							in _lh_matchIdent²¹(_lh_hashOp_LH_P3_0⁶, _lh_hashOp_LH_P3_1⁶, _lh_hashOp_LH_P3_2⁶, k¹⁴))))]))))
//│ 		def percOp_₀_₀_₀(_lh_percOp_arg1⁷, _lh_percOp_arg2⁷, _lh_percOp_arg3²¹) = 
//│ 			if (_lh_percOp_arg1⁷ >= _lh_percOp_arg3²¹) then [LH_N] else 
//│ 				let k¹¹ = (_lh_percOp_arg1⁷ + 10)
//│ 				in let j²¹ = min_₀_₀_₀(_lh_percOp_arg3²¹, k¹¹)
//│ 				in let _lh_matchIdent¹⁷ = if (k¹¹ > _lh_percOp_arg3²¹) then 
//│ 					let _lh_percOp_LH_P2_1¹⁴ = lazy⁰([LH_N])
//│ 					in let _lh_percOp_LH_P2_0¹⁴ = mappend_₁_₀_₀(take_lz_₁_₁_₀((_lh_percOp_arg3²¹ % 10), _lh_percOp_arg2⁷), replicate_₀_₁_₀((k¹¹ - _lh_percOp_arg3²¹), 
//│ 						let t¹⁷⁴ = (fun ys³⁵⁷ -> ys³⁵⁷)
//│ 						in let h¹⁷⁴ = ' '
//│ 						in (fun ys³⁵⁴ -> 
//│ 							let t¹⁷⁵ = mappend_₀_₀_₀(t¹⁷⁴, ys³⁵⁴)
//│ 							in let h¹⁷⁵ = h¹⁷⁴
//│ 							in (fun ys³⁵⁵ -> 
//│ 								let t¹⁷⁶ = mappend_₃_₀_₁(t¹⁷⁵, ys³⁵⁵)
//│ 								in let h¹⁷⁶ = h¹⁷⁵
//│ 								in (fun ys³⁵⁶ -> [LH_C h¹⁷⁶ mappend_₂_₀_₅(t¹⁷⁶, ys³⁵⁶)])))))
//│ 					in (fun _lh_percOp_arg3²² -> (fun j²² -> mappend_₂_₀_₀(mappend_₃_₀_₀(concat_₀_₀_₀(_lh_percOp_LH_P2_0¹⁴), mappend_₄_₀_₀(
//│ 						let t¹⁷⁷ = 	
//│ 							let t¹⁷⁸ = (fun ys³⁵⁸ -> ys³⁵⁸)
//│ 							in let h¹⁷⁷ = ':'
//│ 							in (fun ys³⁵⁹ -> 
//│ 								let t¹⁷⁹ = mappend_₄_₀_₁(t¹⁷⁸, ys³⁵⁹)
//│ 								in let h¹⁷⁸ = h¹⁷⁷
//│ 								in (fun ys³⁶⁰ -> [LH_C h¹⁷⁸ mappend_₂_₀_₁(t¹⁷⁹, ys³⁶⁰)]))
//│ 						in let h¹⁷⁹ = 't'
//│ 						in (fun ys³⁶¹ -> 
//│ 							let t¹⁸⁰ = mappend_₄_₀_₂(t¹⁷⁷, ys³⁶¹)
//│ 							in let h¹⁸⁰ = h¹⁷⁹
//│ 							in (fun ys³⁶² -> [LH_C h¹⁸⁰ mappend_₂_₀_₂(t¹⁸⁰, ys³⁶²)])), mappend_₅_₀_₀(string_of_int⁰(j²²), 
//│ 						let t¹⁸¹ = (fun ys³⁶³ -> ys³⁶³)
//│ 						in let h¹⁸¹ = 'n'
//│ 						in (fun ys³⁶⁴ -> [LH_C h¹⁸¹ mappend_₂_₀_₃(t¹⁸¹, ys³⁶⁴)])))), percOp_₀_₁_₀(j²², _lh_percOp_LH_P2_1¹⁴, _lh_percOp_arg3²²)))) else splitAt_lz_₀_₁_₀(10, _lh_percOp_arg2⁷)
//│ 				in _lh_matchIdent¹⁷(_lh_percOp_arg3²¹, j²¹)
//│ 			where
//│ 			def concat_₀_₀_₀(lss³⁰) = 
//│ 				lss³⁰(99)
//│ 			def mappend_₁_₀_₀(xs¹²⁰, ys²⁵⁷) = 
//│ 				xs¹²⁰(ys²⁵⁷)
//│ 			def mappend_₂_₀_₀(xs¹⁸³, ys³⁹⁵) = 
//│ 				xs¹⁸³(ys³⁹⁵)
//│ 			def mappend_₂_₀_₁(xs¹³³, ys²⁷³) = 
//│ 				xs¹³³(ys²⁷³)
//│ 			def mappend_₂_₀_₂(xs¹⁹⁴, ys⁴¹²) = 
//│ 				xs¹⁹⁴(ys⁴¹²)
//│ 			def mappend_₂_₀_₃(xs¹⁷⁹, ys³⁸⁸) = 
//│ 				xs¹⁷⁹(ys³⁸⁸)
//│ 			def mappend_₃_₀_₀(xs¹²⁸, ys²⁶⁷) = 
//│ 				xs¹²⁸(ys²⁶⁷)
//│ 			def mappend_₄_₀_₀(xs¹²², ys²⁵⁹) = 
//│ 				xs¹²²(ys²⁵⁹)
//│ 			def mappend_₄_₀_₁(xs¹⁶⁴, ys³⁴⁴) = 
//│ 				xs¹⁶⁴(ys³⁴⁴)
//│ 			def mappend_₄_₀_₂(xs¹³², ys²⁷²) = 
//│ 				xs¹³²(ys²⁷²)
//│ 			def mappend_₅_₀_₀(xs¹³⁶, ys²⁷⁸) = 
//│ 				case xs¹³⁶ of {
//│ 					LH_C h¹⁰⁶ t¹⁰⁶ => 
//│ 						let t¹⁴⁰ = mappend_₅_₀_₀(t¹⁰⁶, ys²⁷⁸)
//│ 						in let h¹⁴⁰ = h¹⁰⁶
//│ 						in (fun ys²⁷⁹ -> [LH_C h¹⁴⁰ mappend_₂_₀_₄(t¹⁴⁰, ys²⁷⁹)])
//│ 					| LH_N  => ys²⁷⁸}
//│ 				where
//│ 				def mappend_₂_₀_₄(xs¹³⁰, ys²⁷⁰) = 
//│ 					xs¹³⁰(ys²⁷⁰)
//│ 			def min_₀_₀_₀(_lh_min_arg1⁵, _lh_min_arg2⁵) = 
//│ 				if (_lh_min_arg1⁵ > _lh_min_arg2⁵) then _lh_min_arg2⁵ else _lh_min_arg1⁵
//│ 			def percOp_₀_₁_₀(_lh_percOp_arg1⁶, _lh_percOp_arg2⁶, _lh_percOp_arg3¹⁸) = 
//│ 				if (_lh_percOp_arg1⁶ >= _lh_percOp_arg3¹⁸) then [LH_N] else 
//│ 					let k¹⁰ = (_lh_percOp_arg1⁶ + 10)
//│ 					in let j¹⁸ = min_₀_₁_₀(_lh_percOp_arg3¹⁸, k¹⁰)
//│ 					in let _lh_matchIdent¹⁵ = if (k¹⁰ > _lh_percOp_arg3¹⁸) then 
//│ 						let _lh_percOp_LH_P2_1¹² = lazy⁰([LH_N])
//│ 						in let _lh_percOp_LH_P2_0¹² = mappend_₁_₁_₀(take_lz_₁_₀_₀((_lh_percOp_arg3¹⁸ % 10), _lh_percOp_arg2⁶), replicate_₀_₀_₀((k¹⁰ - _lh_percOp_arg3¹⁸), 
//│ 							let t¹⁵⁹ = (fun ys³²³ -> ys³²³)
//│ 							in let h¹⁵⁹ = ' '
//│ 							in (fun ys³²⁰ -> 
//│ 								let t¹⁶⁰ = mappend_₀_₁_₀(t¹⁵⁹, ys³²⁰)
//│ 								in let h¹⁶⁰ = h¹⁵⁹
//│ 								in (fun ys³²¹ -> 
//│ 									let t¹⁶¹ = mappend_₃_₁_₁(t¹⁶⁰, ys³²¹)
//│ 									in let h¹⁶¹ = h¹⁶⁰
//│ 									in (fun ys³²² -> [LH_C h¹⁶¹ mappend_₂_₁_₅(t¹⁶¹, ys³²²)])))))
//│ 						in (fun _lh_percOp_arg3¹⁹ -> (fun j¹⁹ -> mappend_₂_₁_₀(mappend_₃_₁_₀(concat_₀_₁_₀(_lh_percOp_LH_P2_0¹²), mappend_₄_₁_₀(
//│ 							let t¹⁶² = 	
//│ 								let t¹⁶³ = (fun ys³²⁴ -> ys³²⁴)
//│ 								in let h¹⁶² = ':'
//│ 								in (fun ys³²⁵ -> 
//│ 									let t¹⁶⁴ = mappend_₄_₁_₁(t¹⁶³, ys³²⁵)
//│ 									in let h¹⁶³ = h¹⁶²
//│ 									in (fun ys³²⁶ -> [LH_C h¹⁶³ mappend_₂_₁_₁(t¹⁶⁴, ys³²⁶)]))
//│ 							in let h¹⁶⁴ = 't'
//│ 							in (fun ys³²⁷ -> 
//│ 								let t¹⁶⁵ = mappend_₄_₁_₂(t¹⁶², ys³²⁷)
//│ 								in let h¹⁶⁵ = h¹⁶⁴
//│ 								in (fun ys³²⁸ -> [LH_C h¹⁶⁵ mappend_₂_₁_₂(t¹⁶⁵, ys³²⁸)])), mappend_₅_₁_₀(string_of_int⁰(j¹⁹), 
//│ 							let t¹⁶⁶ = (fun ys³²⁹ -> ys³²⁹)
//│ 							in let h¹⁶⁶ = 'n'
//│ 							in (fun ys³³⁰ -> [LH_C h¹⁶⁶ mappend_₂_₁_₃(t¹⁶⁶, ys³³⁰)])))), percOp_₀_₁_₀(j¹⁹, _lh_percOp_LH_P2_1¹², _lh_percOp_arg3¹⁹)))) else splitAt_lz_₀_₀_₀(10, _lh_percOp_arg2⁶)
//│ 					in _lh_matchIdent¹⁵(_lh_percOp_arg3¹⁸, j¹⁸)
//│ 				where
//│ 				def concat_₀_₁_₀(lss³¹) = 
//│ 					lss³¹(99)
//│ 				def mappend_₁_₁_₀(xs¹⁴⁷, ys²⁹⁹) = 
//│ 					xs¹⁴⁷(ys²⁹⁹)
//│ 				def mappend_₂_₁_₀(xs¹⁰⁸, ys²³⁸) = 
//│ 					xs¹⁰⁸(ys²³⁸)
//│ 				def mappend_₂_₁_₁(xs¹⁵², ys³¹⁸) = 
//│ 					xs¹⁵²(ys³¹⁸)
//│ 				def mappend_₂_₁_₂(xs¹¹⁷, ys²⁵⁴) = 
//│ 					xs¹¹⁷(ys²⁵⁴)
//│ 				def mappend_₂_₁_₃(xs¹¹², ys²⁴⁴) = 
//│ 					xs¹¹²(ys²⁴⁴)
//│ 				def mappend_₃_₁_₀(xs¹⁵³, ys³¹⁹) = 
//│ 					xs¹⁵³(ys³¹⁹)
//│ 				def mappend_₄_₁_₀(xs¹²⁷, ys²⁶⁶) = 
//│ 					xs¹²⁷(ys²⁶⁶)
//│ 				def mappend_₄_₁_₁(xs¹⁷⁷, ys³⁸⁶) = 
//│ 					xs¹⁷⁷(ys³⁸⁶)
//│ 				def mappend_₄_₁_₂(xs¹²¹, ys²⁵⁸) = 
//│ 					xs¹²¹(ys²⁵⁸)
//│ 				def mappend_₅_₁_₀(xs¹⁸⁸, ys⁴⁰³) = 
//│ 					case xs¹⁸⁸ of {
//│ 						LH_C h¹²³ t¹²³ => 
//│ 							let t¹⁹⁵ = mappend_₅_₁_₀(t¹²³, ys⁴⁰³)
//│ 							in let h¹⁹⁵ = h¹²³
//│ 							in (fun ys⁴⁰⁴ -> [LH_C h¹⁹⁵ mappend_₂_₁_₄(t¹⁹⁵, ys⁴⁰⁴)])
//│ 						| LH_N  => ys⁴⁰³}
//│ 					where
//│ 					def mappend_₂_₁_₄(xs¹⁶⁹, ys³⁷⁴) = 
//│ 						xs¹⁶⁹(ys³⁷⁴)
//│ 				def min_₀_₁_₀(_lh_min_arg1⁶, _lh_min_arg2⁶) = 
//│ 					if (_lh_min_arg1⁶ > _lh_min_arg2⁶) then _lh_min_arg2⁶ else _lh_min_arg1⁶
//│ 				def replicate_₀_₀_₀(_lh_replicate_arg1⁶, _lh_replicate_arg2⁶) = 
//│ 					if (_lh_replicate_arg1⁶ > 0) then 
//│ 						let t¹⁵⁶ = replicate_₀_₀_₀((_lh_replicate_arg1⁶ - 1), _lh_replicate_arg2⁶)
//│ 						in let h¹⁵⁶ = _lh_replicate_arg2⁶
//│ 						in (fun _lh_dummy³³ -> mappend_₀_₁_₀(h¹⁵⁶, concat_₀_₁_₁(t¹⁵⁶))) else (fun _lh_dummy³⁴ -> (fun ys³¹³ -> ys³¹³))
//│ 					where
//│ 					def concat_₀_₁_₁(lss¹⁸) = 
//│ 						lss¹⁸(99)
//│ 					def mappend_₀_₁_₀(xs¹⁸⁴, ys³⁹⁶) = 
//│ 						xs¹⁸⁴(ys³⁹⁶)
//│ 						where
//│ 						def mappend_₂_₁_₅(xs¹¹⁸, ys²⁵⁵) = 
//│ 							xs¹¹⁸(ys²⁵⁵)
//│ 						def mappend_₃_₁_₁(xs¹¹⁰, ys²⁴²) = 
//│ 							xs¹¹⁰(ys²⁴²)
//│ 				def splitAt_lz_₀_₀_₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷) = 
//│ 					let _lh_percOp_LH_P2_1¹⁵ = drop_lz_₀_₀_₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷)
//│ 					in let _lh_percOp_LH_P2_0¹⁵ = take_lz_₀_₀_₀(_lh_splitAt_lz_arg1⁷, _lh_splitAt_lz_arg2⁷)
//│ 					in (fun _lh_percOp_arg3²³ -> (fun j²³ -> mappend_₂_₁_₆(mappend_₃_₁_₂(concat_₀_₁_₂(_lh_percOp_LH_P2_0¹⁵), mappend_₄_₁_₃(
//│ 						let t¹⁸² = 	
//│ 							let t¹⁸³ = (fun ys³⁶⁵ -> ys³⁶⁵)
//│ 							in let h¹⁸² = ':'
//│ 							in (fun ys³⁶⁶ -> 
//│ 								let t¹⁸⁴ = mappend_₄_₁_₄(t¹⁸³, ys³⁶⁶)
//│ 								in let h¹⁸³ = h¹⁸²
//│ 								in (fun ys³⁶⁷ -> [LH_C h¹⁸³ mappend_₂_₁_₇(t¹⁸⁴, ys³⁶⁷)]))
//│ 						in let h¹⁸⁴ = 't'
//│ 						in (fun ys³⁶⁸ -> 
//│ 							let t¹⁸⁵ = mappend_₄_₁_₅(t¹⁸², ys³⁶⁸)
//│ 							in let h¹⁸⁵ = h¹⁸⁴
//│ 							in (fun ys³⁶⁹ -> [LH_C h¹⁸⁵ mappend_₂_₁_₈(t¹⁸⁵, ys³⁶⁹)])), mappend_₅_₁_₁(string_of_int⁰(j²³), 
//│ 						let t¹⁸⁶ = (fun ys³⁷⁰ -> ys³⁷⁰)
//│ 						in let h¹⁸⁶ = 'n'
//│ 						in (fun ys³⁷¹ -> [LH_C h¹⁸⁶ mappend_₂_₁_₉(t¹⁸⁶, ys³⁷¹)])))), percOp_₀_₁_₀(j²³, _lh_percOp_LH_P2_1¹⁵, _lh_percOp_arg3²³))))
//│ 					where
//│ 					def concat_₀_₁_₂(lss²²) = 
//│ 						lss²²(99)
//│ 					def drop_lz_₀_₀_₀(_lh_drop_lz_arg1⁷, _lh_drop_lz_arg2⁷) = 
//│ 						if (_lh_drop_lz_arg1⁷ > 0) then lazy⁰(
//│ 							let _lh_matchIdent¹⁹ = force⁰(_lh_drop_lz_arg2⁷)
//│ 							in case _lh_matchIdent¹⁹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_drop_lz_LH_C_0² _lh_drop_lz_LH_C_1² => force⁰(drop_lz_₀_₀_₀((_lh_drop_lz_arg1⁷ - 1), _lh_drop_lz_LH_C_1²))
//│ 								| _  => error⁰}) else _lh_drop_lz_arg2⁷
//│ 					def mappend_₂_₁_₆(xs¹⁵¹, ys³¹⁷) = 
//│ 						xs¹⁵¹(ys³¹⁷)
//│ 					def mappend_₂_₁_₇(xs¹⁴⁴, ys²⁸⁸) = 
//│ 						xs¹⁴⁴(ys²⁸⁸)
//│ 					def mappend_₂_₁_₈(xs¹⁴², ys²⁸⁶) = 
//│ 						xs¹⁴²(ys²⁸⁶)
//│ 					def mappend_₂_₁_₉(xs¹⁸⁹, ys⁴⁰⁵) = 
//│ 						xs¹⁸⁹(ys⁴⁰⁵)
//│ 					def mappend_₃_₁_₂(xs¹⁹⁰, ys⁴⁰⁶) = 
//│ 						xs¹⁹⁰(ys⁴⁰⁶)
//│ 					def mappend_₄_₁_₃(xs¹⁷³, ys³⁸⁰) = 
//│ 						xs¹⁷³(ys³⁸⁰)
//│ 					def mappend_₄_₁_₄(xs¹⁶³, ys³⁴³) = 
//│ 						xs¹⁶³(ys³⁴³)
//│ 					def mappend_₄_₁_₅(xs¹⁵⁵, ys³³²) = 
//│ 						xs¹⁵⁵(ys³³²)
//│ 					def mappend_₅_₁_₁(xs¹¹⁶, ys²⁵²) = 
//│ 						case xs¹¹⁶ of {
//│ 							LH_C h⁴² t⁴² => 
//│ 								let t¹³⁴ = mappend_₅_₁_₁(t⁴², ys²⁵²)
//│ 								in let h¹³⁴ = h⁴²
//│ 								in (fun ys²⁵³ -> [LH_C h¹³⁴ mappend_₂_₁_₁₀(t¹³⁴, ys²⁵³)])
//│ 							| LH_N  => ys²⁵²}
//│ 						where
//│ 						def mappend_₂_₁_₁₀(xs¹⁸⁰, ys³⁸⁹) = 
//│ 							xs¹⁸⁰(ys³⁸⁹)
//│ 					def take_lz_₀_₀_₀(n¹², ls¹²) = 
//│ 						if (n¹² > 0) then case force⁰(ls¹²) of {
//│ 							LH_C h⁸⁸ t⁸⁸ => 
//│ 								let t¹⁸⁷ = take_lz_₀_₀_₀((n¹² - 1), t⁸⁸)
//│ 								in let h¹⁸⁷ = h⁸⁸
//│ 								in (fun _lh_dummy³⁶ -> mappend_₀_₁_₁(h¹⁸⁷, concat_₀_₁_₃(t¹⁸⁷)))
//│ 							| LH_N  => (fun _lh_dummy³⁷ -> (fun ys³⁷⁷ -> ys³⁷⁷))} else (fun _lh_dummy³⁸ -> (fun ys³⁷⁸ -> ys³⁷⁸))
//│ 						where
//│ 						def concat_₀_₁_₃(lss²³) = 
//│ 							lss²³(99)
//│ 						def mappend_₀_₁_₁(xs¹⁷⁶, ys³⁸³) = 
//│ 							case xs¹⁷⁶ of {
//│ 								LH_C h⁶⁴ t⁶⁴ => 
//│ 									let t¹⁸⁸ = mappend_₀_₁_₁(t⁶⁴, ys³⁸³)
//│ 									in let h¹⁸⁸ = h⁶⁴
//│ 									in (fun ys³⁸⁴ -> 
//│ 										let t¹⁸⁹ = mappend_₃_₁_₃(t¹⁸⁸, ys³⁸⁴)
//│ 										in let h¹⁸⁹ = h¹⁸⁸
//│ 										in (fun ys³⁸⁵ -> [LH_C h¹⁸⁹ mappend_₂_₁_₁₁(t¹⁸⁹, ys³⁸⁵)]))
//│ 								| LH_N  => ys³⁸³}
//│ 							where
//│ 							def mappend_₂_₁_₁₁(xs¹⁵⁸, ys³³⁵) = 
//│ 								xs¹⁵⁸(ys³³⁵)
//│ 							def mappend_₃_₁_₃(xs¹⁴⁶, ys²⁹⁸) = 
//│ 								xs¹⁴⁶(ys²⁹⁸)
//│ 				def take_lz_₁_₀_₀(n¹³, ls¹³) = 
//│ 					if (n¹³ > 0) then case force⁰(ls¹³) of {
//│ 						LH_C h⁴⁴ t⁴⁴ => 
//│ 							let t¹⁹³ = take_lz_₁_₀_₀((n¹³ - 1), t⁴⁴)
//│ 							in let h¹⁹³ = h⁴⁴
//│ 							in (fun ys⁴⁰⁰ -> 
//│ 								let t¹⁹⁴ = mappend_₁_₁_₁(t¹⁹³, ys⁴⁰⁰)
//│ 								in let h¹⁹⁴ = h¹⁹³
//│ 								in (fun _lh_dummy⁴¹ -> mappend_₀_₁_₂(h¹⁹⁴, concat_₀_₁_₄(t¹⁹⁴))))
//│ 						| LH_N  => (fun ys⁴⁰¹ -> ys⁴⁰¹)} else (fun ys⁴⁰² -> ys⁴⁰²)
//│ 					where
//│ 					def concat_₀_₁_₄(lss²⁷) = 
//│ 						lss²⁷(99)
//│ 					def mappend_₀_₁_₂(xs¹²⁶, ys²⁶³) = 
//│ 						case xs¹²⁶ of {
//│ 							LH_C h¹⁰⁰ t¹⁰⁰ => 
//│ 								let t¹³⁵ = mappend_₀_₁_₂(t¹⁰⁰, ys²⁶³)
//│ 								in let h¹³⁵ = h¹⁰⁰
//│ 								in (fun ys²⁶⁴ -> 
//│ 									let t¹³⁶ = mappend_₃_₁_₄(t¹³⁵, ys²⁶⁴)
//│ 									in let h¹³⁶ = h¹³⁵
//│ 									in (fun ys²⁶⁵ -> [LH_C h¹³⁶ mappend_₂_₁_₁₂(t¹³⁶, ys²⁶⁵)]))
//│ 							| LH_N  => ys²⁶³}
//│ 						where
//│ 						def mappend_₂_₁_₁₂(xs¹¹⁹, ys²⁵⁶) = 
//│ 							xs¹¹⁹(ys²⁵⁶)
//│ 						def mappend_₃_₁_₄(xs¹⁹⁶, ys⁴¹⁴) = 
//│ 							xs¹⁹⁶(ys⁴¹⁴)
//│ 					def mappend_₁_₁_₁(xs¹⁶⁷, ys³⁷²) = 
//│ 						xs¹⁶⁷(ys³⁷²)
//│ 			def replicate_₀_₁_₀(_lh_replicate_arg1⁵, _lh_replicate_arg2⁵) = 
//│ 				if (_lh_replicate_arg1⁵ > 0) then 
//│ 					let t¹⁴¹ = replicate_₀_₁_₀((_lh_replicate_arg1⁵ - 1), _lh_replicate_arg2⁵)
//│ 					in let h¹⁴¹ = _lh_replicate_arg2⁵
//│ 					in (fun _lh_dummy³¹ -> mappend_₀_₀_₀(h¹⁴¹, concat_₀_₀_₁(t¹⁴¹))) else (fun _lh_dummy³² -> (fun ys²⁸¹ -> ys²⁸¹))
//│ 				where
//│ 				def concat_₀_₀_₁(lss²⁰) = 
//│ 					lss²⁰(99)
//│ 				def mappend_₀_₀_₀(xs¹²⁵, ys²⁶²) = 
//│ 					xs¹²⁵(ys²⁶²)
//│ 					where
//│ 					def mappend_₂_₀_₅(xs¹⁸⁷, ys³⁹⁹) = 
//│ 						xs¹⁸⁷(ys³⁹⁹)
//│ 					def mappend_₃_₀_₁(xs¹⁴⁸, ys³⁰⁰) = 
//│ 						xs¹⁴⁸(ys³⁰⁰)
//│ 			def splitAt_lz_₀_₁_₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵) = 
//│ 				let _lh_percOp_LH_P2_1¹⁰ = drop_lz_₀_₁_₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵)
//│ 				in let _lh_percOp_LH_P2_0¹⁰ = take_lz_₀_₁_₀(_lh_splitAt_lz_arg1⁵, _lh_splitAt_lz_arg2⁵)
//│ 				in (fun _lh_percOp_arg3¹⁵ -> (fun j¹⁵ -> mappend_₂_₀_₆(mappend_₃_₀_₂(concat_₀_₀_₂(_lh_percOp_LH_P2_0¹⁰), mappend_₄_₀_₃(
//│ 					let t¹⁴² = 	
//│ 						let t¹⁴³ = (fun ys²⁸⁹ -> ys²⁸⁹)
//│ 						in let h¹⁴² = ':'
//│ 						in (fun ys²⁹⁰ -> 
//│ 							let t¹⁴⁴ = mappend_₄_₀_₄(t¹⁴³, ys²⁹⁰)
//│ 							in let h¹⁴³ = h¹⁴²
//│ 							in (fun ys²⁹¹ -> [LH_C h¹⁴³ mappend_₂_₀_₇(t¹⁴⁴, ys²⁹¹)]))
//│ 					in let h¹⁴⁴ = 't'
//│ 					in (fun ys²⁹² -> 
//│ 						let t¹⁴⁵ = mappend_₄_₀_₅(t¹⁴², ys²⁹²)
//│ 						in let h¹⁴⁵ = h¹⁴⁴
//│ 						in (fun ys²⁹³ -> [LH_C h¹⁴⁵ mappend_₂_₀_₈(t¹⁴⁵, ys²⁹³)])), mappend_₅_₀_₁(string_of_int⁰(j¹⁵), 
//│ 					let t¹⁴⁶ = (fun ys²⁹⁴ -> ys²⁹⁴)
//│ 					in let h¹⁴⁶ = 'n'
//│ 					in (fun ys²⁹⁵ -> [LH_C h¹⁴⁶ mappend_₂_₀_₉(t¹⁴⁶, ys²⁹⁵)])))), percOp_₀_₁_₁(j¹⁵, _lh_percOp_LH_P2_1¹⁰, _lh_percOp_arg3¹⁵))))
//│ 				where
//│ 				def concat_₀_₀_₂(lss¹⁷) = 
//│ 					lss¹⁷(99)
//│ 				def drop_lz_₀_₁_₀(_lh_drop_lz_arg1⁵, _lh_drop_lz_arg2⁵) = 
//│ 					if (_lh_drop_lz_arg1⁵ > 0) then lazy⁰(
//│ 						let _lh_matchIdent¹⁶ = force⁰(_lh_drop_lz_arg2⁵)
//│ 						in case _lh_matchIdent¹⁶ of {
//│ 							LH_N  => [LH_N]
//│ 							| LH_C _lh_drop_lz_LH_C_0³ _lh_drop_lz_LH_C_1³ => force⁰(drop_lz_₀_₁_₀((_lh_drop_lz_arg1⁵ - 1), _lh_drop_lz_LH_C_1³))
//│ 							| _  => error⁰}) else _lh_drop_lz_arg2⁵
//│ 				def mappend_₂_₀_₆(xs¹⁷⁸, ys³⁸⁷) = 
//│ 					xs¹⁷⁸(ys³⁸⁷)
//│ 				def mappend_₂_₀_₇(xs¹⁷², ys³⁷⁹) = 
//│ 					xs¹⁷²(ys³⁷⁹)
//│ 				def mappend_₂_₀_₈(xs¹¹⁵, ys²⁵¹) = 
//│ 					xs¹¹⁵(ys²⁵¹)
//│ 				def mappend_₂_₀_₉(xs¹²³, ys²⁶⁰) = 
//│ 					xs¹²³(ys²⁶⁰)
//│ 				def mappend_₃_₀_₂(xs¹⁹¹, ys⁴⁰⁷) = 
//│ 					xs¹⁹¹(ys⁴⁰⁷)
//│ 				def mappend_₄_₀_₃(xs¹⁴⁰, ys²⁸⁴) = 
//│ 					xs¹⁴⁰(ys²⁸⁴)
//│ 				def mappend_₄_₀_₄(xs¹⁶⁰, ys³³⁷) = 
//│ 					xs¹⁶⁰(ys³³⁷)
//│ 				def mappend_₄_₀_₅(xs¹⁹⁷, ys⁴¹⁷) = 
//│ 					xs¹⁹⁷(ys⁴¹⁷)
//│ 				def mappend_₅_₀_₁(xs¹⁴⁵, ys²⁹⁶) = 
//│ 					case xs¹⁴⁵ of {
//│ 						LH_C h⁸⁰ t⁸⁰ => 
//│ 							let t¹⁴⁷ = mappend_₅_₀_₁(t⁸⁰, ys²⁹⁶)
//│ 							in let h¹⁴⁷ = h⁸⁰
//│ 							in (fun ys²⁹⁷ -> [LH_C h¹⁴⁷ mappend_₂_₀_₁₀(t¹⁴⁷, ys²⁹⁷)])
//│ 						| LH_N  => ys²⁹⁶}
//│ 					where
//│ 					def mappend_₂_₀_₁₀(xs¹³⁸, ys²⁸²) = 
//│ 						xs¹³⁸(ys²⁸²)
//│ 				def percOp_₀_₁_₁(_lh_percOp_arg1⁵, _lh_percOp_arg2⁵, _lh_percOp_arg3¹⁶) = 
//│ 					if (_lh_percOp_arg1⁵ >= _lh_percOp_arg3¹⁶) then [LH_N] else 
//│ 						let k⁹ = (_lh_percOp_arg1⁵ + 10)
//│ 						in let j¹⁶ = min_₀_₁_₁(_lh_percOp_arg3¹⁶, k⁹)
//│ 						in let _lh_matchIdent¹⁴ = if (k⁹ > _lh_percOp_arg3¹⁶) then 
//│ 							let _lh_percOp_LH_P2_1¹¹ = lazy⁰([LH_N])
//│ 							in let _lh_percOp_LH_P2_0¹¹ = mappend_₁_₁_₂(take_lz_₁_₀_₁((_lh_percOp_arg3¹⁶ % 10), _lh_percOp_arg2⁵), replicate_₀_₀_₁((k⁹ - _lh_percOp_arg3¹⁶), 
//│ 								let t¹⁴⁸ = (fun ys³⁰⁴ -> ys³⁰⁴)
//│ 								in let h¹⁴⁸ = ' '
//│ 								in (fun ys³⁰¹ -> 
//│ 									let t¹⁴⁹ = mappend_₀_₁_₃(t¹⁴⁸, ys³⁰¹)
//│ 									in let h¹⁴⁹ = h¹⁴⁸
//│ 									in (fun ys³⁰² -> 
//│ 										let t¹⁵⁰ = mappend_₃_₁_₆(t¹⁴⁹, ys³⁰²)
//│ 										in let h¹⁵⁰ = h¹⁴⁹
//│ 										in (fun ys³⁰³ -> [LH_C h¹⁵⁰ mappend_₂_₁_₁₈(t¹⁵⁰, ys³⁰³)])))))
//│ 							in (fun _lh_percOp_arg3¹⁷ -> (fun j¹⁷ -> mappend_₂_₁_₁₃(mappend_₃_₁_₅(concat_₀_₁_₅(_lh_percOp_LH_P2_0¹¹), mappend_₄_₁_₆(
//│ 								let t¹⁵¹ = 	
//│ 									let t¹⁵² = (fun ys³⁰⁵ -> ys³⁰⁵)
//│ 									in let h¹⁵¹ = ':'
//│ 									in (fun ys³⁰⁶ -> 
//│ 										let t¹⁵³ = mappend_₄_₁_₇(t¹⁵², ys³⁰⁶)
//│ 										in let h¹⁵² = h¹⁵¹
//│ 										in (fun ys³⁰⁷ -> [LH_C h¹⁵² mappend_₂_₁_₁₄(t¹⁵³, ys³⁰⁷)]))
//│ 								in let h¹⁵³ = 't'
//│ 								in (fun ys³⁰⁸ -> 
//│ 									let t¹⁵⁴ = mappend_₄_₁_₈(t¹⁵¹, ys³⁰⁸)
//│ 									in let h¹⁵⁴ = h¹⁵³
//│ 									in (fun ys³⁰⁹ -> [LH_C h¹⁵⁴ mappend_₂_₁_₁₅(t¹⁵⁴, ys³⁰⁹)])), mappend_₅_₁_₂(string_of_int⁰(j¹⁷), 
//│ 								let t¹⁵⁵ = (fun ys³¹⁰ -> ys³¹⁰)
//│ 								in let h¹⁵⁵ = 'n'
//│ 								in (fun ys³¹¹ -> [LH_C h¹⁵⁵ mappend_₂_₁_₁₆(t¹⁵⁵, ys³¹¹)])))), percOp_₀_₁_₁(j¹⁷, _lh_percOp_LH_P2_1¹¹, _lh_percOp_arg3¹⁷)))) else splitAt_lz_₀_₀_₁(10, _lh_percOp_arg2⁵)
//│ 						in _lh_matchIdent¹⁴(_lh_percOp_arg3¹⁶, j¹⁶)
//│ 					where
//│ 					def concat_₀_₁_₅(lss²¹) = 
//│ 						lss²¹(99)
//│ 					def mappend_₁_₁_₂(xs¹⁶⁸, ys³⁷³) = 
//│ 						xs¹⁶⁸(ys³⁷³)
//│ 					def mappend_₂_₁_₁₃(xs¹⁷¹, ys³⁷⁶) = 
//│ 						xs¹⁷¹(ys³⁷⁶)
//│ 					def mappend_₂_₁_₁₄(xs¹⁰⁷, ys²³⁷) = 
//│ 						xs¹⁰⁷(ys²³⁷)
//│ 					def mappend_₂_₁_₁₅(xs¹⁸¹, ys³⁹⁰) = 
//│ 						xs¹⁸¹(ys³⁹⁰)
//│ 					def mappend_₂_₁_₁₆(xs¹⁹³, ys⁴¹¹) = 
//│ 						xs¹⁹³(ys⁴¹¹)
//│ 					def mappend_₃_₁_₅(xs¹⁸⁶, ys³⁹⁸) = 
//│ 						xs¹⁸⁶(ys³⁹⁸)
//│ 					def mappend_₄_₁_₆(xs¹⁰⁶, ys²³⁶) = 
//│ 						xs¹⁰⁶(ys²³⁶)
//│ 					def mappend_₄_₁_₇(xs¹⁶⁵, ys³⁴⁵) = 
//│ 						xs¹⁶⁵(ys³⁴⁵)
//│ 					def mappend_₄_₁_₈(xs¹⁶⁶, ys³⁵³) = 
//│ 						xs¹⁶⁶(ys³⁵³)
//│ 					def mappend_₅_₁_₂(xs¹²⁹, ys²⁶⁸) = 
//│ 						case xs¹²⁹ of {
//│ 							LH_C h⁶⁷ t⁶⁷ => 
//│ 								let t¹³⁷ = mappend_₅_₁_₂(t⁶⁷, ys²⁶⁸)
//│ 								in let h¹³⁷ = h⁶⁷
//│ 								in (fun ys²⁶⁹ -> [LH_C h¹³⁷ mappend_₂_₁_₁₇(t¹³⁷, ys²⁶⁹)])
//│ 							| LH_N  => ys²⁶⁸}
//│ 						where
//│ 						def mappend_₂_₁_₁₇(xs¹⁶¹, ys³³⁸) = 
//│ 							xs¹⁶¹(ys³³⁸)
//│ 					def min_₀_₁_₁(_lh_min_arg1⁷, _lh_min_arg2⁷) = 
//│ 						if (_lh_min_arg1⁷ > _lh_min_arg2⁷) then _lh_min_arg2⁷ else _lh_min_arg1⁷
//│ 					def replicate_₀_₀_₁(_lh_replicate_arg1⁷, _lh_replicate_arg2⁷) = 
//│ 						if (_lh_replicate_arg1⁷ > 0) then 
//│ 							let t¹⁹⁰ = replicate_₀_₀_₁((_lh_replicate_arg1⁷ - 1), _lh_replicate_arg2⁷)
//│ 							in let h¹⁹⁰ = _lh_replicate_arg2⁷
//│ 							in (fun _lh_dummy³⁹ -> mappend_₀_₁_₃(h¹⁹⁰, concat_₀_₁_₆(t¹⁹⁰))) else (fun _lh_dummy⁴⁰ -> (fun ys³⁹¹ -> ys³⁹¹))
//│ 						where
//│ 						def concat_₀_₁_₆(lss²⁸) = 
//│ 							lss²⁸(99)
//│ 						def mappend_₀_₁_₃(xs¹⁴¹, ys²⁸⁵) = 
//│ 							xs¹⁴¹(ys²⁸⁵)
//│ 							where
//│ 							def mappend_₂_₁_₁₈(xs¹⁵⁷, ys³³⁴) = 
//│ 								xs¹⁵⁷(ys³³⁴)
//│ 							def mappend_₃_₁_₆(xs¹⁹⁵, ys⁴¹³) = 
//│ 								xs¹⁹⁵(ys⁴¹³)
//│ 					def splitAt_lz_₀_₀_₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶) = 
//│ 						let _lh_percOp_LH_P2_1¹³ = drop_lz_₀_₀_₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶)
//│ 						in let _lh_percOp_LH_P2_0¹³ = take_lz_₀_₀_₁(_lh_splitAt_lz_arg1⁶, _lh_splitAt_lz_arg2⁶)
//│ 						in (fun _lh_percOp_arg3²⁰ -> (fun j²⁰ -> mappend_₂_₁_₁₉(mappend_₃_₁_₇(concat_₀_₁_₇(_lh_percOp_LH_P2_0¹³), mappend_₄_₁_₉(
//│ 							let t¹⁶⁹ = 	
//│ 								let t¹⁷⁰ = (fun ys³⁴⁶ -> ys³⁴⁶)
//│ 								in let h¹⁶⁹ = ':'
//│ 								in (fun ys³⁴⁷ -> 
//│ 									let t¹⁷¹ = mappend_₄_₁_₁₀(t¹⁷⁰, ys³⁴⁷)
//│ 									in let h¹⁷⁰ = h¹⁶⁹
//│ 									in (fun ys³⁴⁸ -> [LH_C h¹⁷⁰ mappend_₂_₁_₂₀(t¹⁷¹, ys³⁴⁸)]))
//│ 							in let h¹⁷¹ = 't'
//│ 							in (fun ys³⁴⁹ -> 
//│ 								let t¹⁷² = mappend_₄_₁_₁₁(t¹⁶⁹, ys³⁴⁹)
//│ 								in let h¹⁷² = h¹⁷¹
//│ 								in (fun ys³⁵⁰ -> [LH_C h¹⁷² mappend_₂_₁_₂₁(t¹⁷², ys³⁵⁰)])), mappend_₅_₁_₃(string_of_int⁰(j²⁰), 
//│ 							let t¹⁷³ = (fun ys³⁵¹ -> ys³⁵¹)
//│ 							in let h¹⁷³ = 'n'
//│ 							in (fun ys³⁵² -> [LH_C h¹⁷³ mappend_₂_₁_₂₂(t¹⁷³, ys³⁵²)])))), percOp_₀_₁_₁(j²⁰, _lh_percOp_LH_P2_1¹³, _lh_percOp_arg3²⁰))))
//│ 						where
//│ 						def concat_₀_₁_₇(lss²⁴) = 
//│ 							lss²⁴(99)
//│ 						def drop_lz_₀_₀_₁(_lh_drop_lz_arg1⁶, _lh_drop_lz_arg2⁶) = 
//│ 							if (_lh_drop_lz_arg1⁶ > 0) then lazy⁰(
//│ 								let _lh_matchIdent¹⁸ = force⁰(_lh_drop_lz_arg2⁶)
//│ 								in case _lh_matchIdent¹⁸ of {
//│ 									LH_N  => [LH_N]
//│ 									| LH_C _lh_drop_lz_LH_C_0⁴ _lh_drop_lz_LH_C_1⁴ => force⁰(drop_lz_₀_₀_₁((_lh_drop_lz_arg1⁶ - 1), _lh_drop_lz_LH_C_1⁴))
//│ 									| _  => error⁰}) else _lh_drop_lz_arg2⁶
//│ 						def mappend_₂_₁_₁₉(xs¹³⁹, ys²⁸³) = 
//│ 							xs¹³⁹(ys²⁸³)
//│ 						def mappend_₂_₁_₂₀(xs¹⁸⁵, ys³⁹⁷) = 
//│ 							xs¹⁸⁵(ys³⁹⁷)
//│ 						def mappend_₂_₁_₂₁(xs¹⁶², ys³⁴²) = 
//│ 							xs¹⁶²(ys³⁴²)
//│ 						def mappend_₂_₁_₂₂(xs¹³⁴, ys²⁷⁴) = 
//│ 							xs¹³⁴(ys²⁷⁴)
//│ 						def mappend_₃_₁_₇(xs¹¹³, ys²⁴⁵) = 
//│ 							xs¹¹³(ys²⁴⁵)
//│ 						def mappend_₄_₁_₉(xs¹⁵⁹, ys³³⁶) = 
//│ 							xs¹⁵⁹(ys³³⁶)
//│ 						def mappend_₄_₁_₁₀(xs¹⁷⁴, ys³⁸¹) = 
//│ 							xs¹⁷⁴(ys³⁸¹)
//│ 						def mappend_₄_₁_₁₁(xs¹⁰⁵, ys²³⁵) = 
//│ 							xs¹⁰⁵(ys²³⁵)
//│ 						def mappend_₅_₁_₃(xs¹¹⁴, ys²⁴⁹) = 
//│ 							case xs¹¹⁴ of {
//│ 								LH_C h⁹¹ t⁹¹ => 
//│ 									let t¹³³ = mappend_₅_₁_₃(t⁹¹, ys²⁴⁹)
//│ 									in let h¹³³ = h⁹¹
//│ 									in (fun ys²⁵⁰ -> [LH_C h¹³³ mappend_₂_₁_₂₃(t¹³³, ys²⁵⁰)])
//│ 								| LH_N  => ys²⁴⁹}
//│ 							where
//│ 							def mappend_₂_₁_₂₃(xs¹⁵⁶, ys³³³) = 
//│ 								xs¹⁵⁶(ys³³³)
//│ 						def take_lz_₀_₀_₁(n¹⁵, ls¹⁵) = 
//│ 							if (n¹⁵ > 0) then case force⁰(ls¹⁵) of {
//│ 								LH_C h¹²¹ t¹²¹ => 
//│ 									let t¹⁹⁷ = take_lz_₀_₀_₁((n¹⁵ - 1), t¹²¹)
//│ 									in let h¹⁹⁷ = h¹²¹
//│ 									in (fun _lh_dummy⁴⁵ -> mappend_₀_₁_₄(h¹⁹⁷, concat_₀_₁_₈(t¹⁹⁷)))
//│ 								| LH_N  => (fun _lh_dummy⁴⁶ -> (fun ys⁴¹⁵ -> ys⁴¹⁵))} else (fun _lh_dummy⁴⁷ -> (fun ys⁴¹⁶ -> ys⁴¹⁶))
//│ 							where
//│ 							def concat_₀_₁_₈(lss²⁹) = 
//│ 								lss²⁹(99)
//│ 							def mappend_₀_₁_₄(xs¹⁰⁹, ys²³⁹) = 
//│ 								case xs¹⁰⁹ of {
//│ 									LH_C h¹²⁶ t¹²⁶ => 
//│ 										let t¹²⁹ = mappend_₀_₁_₄(t¹²⁶, ys²³⁹)
//│ 										in let h¹²⁹ = h¹²⁶
//│ 										in (fun ys²⁴⁰ -> 
//│ 											let t¹³⁰ = mappend_₃_₁_₈(t¹²⁹, ys²⁴⁰)
//│ 											in let h¹³⁰ = h¹²⁹
//│ 											in (fun ys²⁴¹ -> [LH_C h¹³⁰ mappend_₂_₁_₂₄(t¹³⁰, ys²⁴¹)]))
//│ 									| LH_N  => ys²³⁹}
//│ 								where
//│ 								def mappend_₂_₁_₂₄(xs¹⁴⁹, ys³¹²) = 
//│ 									xs¹⁴⁹(ys³¹²)
//│ 								def mappend_₃_₁_₈(xs¹⁷⁵, ys³⁸²) = 
//│ 									xs¹⁷⁵(ys³⁸²)
//│ 					def take_lz_₁_₀_₁(n¹⁰, ls¹⁰) = 
//│ 						if (n¹⁰ > 0) then case force⁰(ls¹⁰) of {
//│ 							LH_C h⁵² t⁵² => 
//│ 								let t¹³¹ = take_lz_₁_₀_₁((n¹⁰ - 1), t⁵²)
//│ 								in let h¹³¹ = h⁵²
//│ 								in (fun ys²⁴⁶ -> 
//│ 									let t¹³² = mappend_₁_₁_₃(t¹³¹, ys²⁴⁶)
//│ 									in let h¹³² = h¹³¹
//│ 									in (fun _lh_dummy³⁰ -> mappend_₀_₁_₅(h¹³², concat_₀_₁_₉(t¹³²))))
//│ 							| LH_N  => (fun ys²⁴⁷ -> ys²⁴⁷)} else (fun ys²⁴⁸ -> ys²⁴⁸)
//│ 						where
//│ 						def concat_₀_₁_₉(lss²⁶) = 
//│ 							lss²⁶(99)
//│ 						def mappend_₀_₁_₅(xs¹³⁵, ys²⁷⁵) = 
//│ 							case xs¹³⁵ of {
//│ 								LH_C h¹⁰³ t¹⁰³ => 
//│ 									let t¹³⁸ = mappend_₀_₁_₅(t¹⁰³, ys²⁷⁵)
//│ 									in let h¹³⁸ = h¹⁰³
//│ 									in (fun ys²⁷⁶ -> 
//│ 										let t¹³⁹ = mappend_₃_₁_₉(t¹³⁸, ys²⁷⁶)
//│ 										in let h¹³⁹ = h¹³⁸
//│ 										in (fun ys²⁷⁷ -> [LH_C h¹³⁹ mappend_₂_₁_₂₅(t¹³⁹, ys²⁷⁷)]))
//│ 								| LH_N  => ys²⁷⁵}
//│ 							where
//│ 							def mappend_₂_₁_₂₅(xs¹⁹², ys⁴⁰⁸) = 
//│ 								xs¹⁹²(ys⁴⁰⁸)
//│ 							def mappend_₃_₁_₉(xs¹⁷⁰, ys³⁷⁵) = 
//│ 								xs¹⁷⁰(ys³⁷⁵)
//│ 						def mappend_₁_₁_₃(xs¹⁴³, ys²⁸⁷) = 
//│ 							xs¹⁴³(ys²⁸⁷)
//│ 				def take_lz_₀_₁_₀(n¹⁴, ls¹⁴) = 
//│ 					if (n¹⁴ > 0) then case force⁰(ls¹⁴) of {
//│ 						LH_C h⁹³ t⁹³ => 
//│ 							let t¹⁹⁶ = take_lz_₀_₁_₀((n¹⁴ - 1), t⁹³)
//│ 							in let h¹⁹⁶ = h⁹³
//│ 							in (fun _lh_dummy⁴² -> mappend_₀_₀_₁(h¹⁹⁶, concat_₀_₀_₃(t¹⁹⁶)))
//│ 						| LH_N  => (fun _lh_dummy⁴³ -> (fun ys⁴⁰⁹ -> ys⁴⁰⁹))} else (fun _lh_dummy⁴⁴ -> (fun ys⁴¹⁰ -> ys⁴¹⁰))
//│ 					where
//│ 					def concat_₀_₀_₃(lss¹⁹) = 
//│ 						lss¹⁹(99)
//│ 					def mappend_₀_₀_₁(xs¹⁵⁰, ys³¹⁴) = 
//│ 						case xs¹⁵⁰ of {
//│ 							LH_C h⁵⁸ t⁵⁸ => 
//│ 								let t¹⁵⁷ = mappend_₀_₀_₁(t⁵⁸, ys³¹⁴)
//│ 								in let h¹⁵⁷ = h⁵⁸
//│ 								in (fun ys³¹⁵ -> 
//│ 									let t¹⁵⁸ = mappend_₃_₀_₃(t¹⁵⁷, ys³¹⁵)
//│ 									in let h¹⁵⁸ = h¹⁵⁷
//│ 									in (fun ys³¹⁶ -> [LH_C h¹⁵⁸ mappend_₂_₀_₁₁(t¹⁵⁸, ys³¹⁶)]))
//│ 							| LH_N  => ys³¹⁴}
//│ 						where
//│ 						def mappend_₂_₀_₁₁(xs¹²⁴, ys²⁶¹) = 
//│ 							xs¹²⁴(ys²⁶¹)
//│ 						def mappend_₃_₀_₃(xs¹¹¹, ys²⁴³) = 
//│ 							xs¹¹¹(ys²⁴³)
//│ 			def take_lz_₁_₁_₀(n¹¹, ls¹¹) = 
//│ 				if (n¹¹ > 0) then case force⁰(ls¹¹) of {
//│ 					LH_C h⁵⁵ t⁵⁵ => 
//│ 						let t¹⁶⁷ = take_lz_₁_₁_₀((n¹¹ - 1), t⁵⁵)
//│ 						in let h¹⁶⁷ = h⁵⁵
//│ 						in (fun ys³³⁹ -> 
//│ 							let t¹⁶⁸ = mappend_₁_₀_₁(t¹⁶⁷, ys³³⁹)
//│ 							in let h¹⁶⁸ = h¹⁶⁷
//│ 							in (fun _lh_dummy³⁵ -> mappend_₀_₀_₂(h¹⁶⁸, concat_₀_₀_₄(t¹⁶⁸))))
//│ 					| LH_N  => (fun ys³⁴⁰ -> ys³⁴⁰)} else (fun ys³⁴¹ -> ys³⁴¹)
//│ 				where
//│ 				def concat_₀_₀_₄(lss²⁵) = 
//│ 					lss²⁵(99)
//│ 				def mappend_₀_₀_₂(xs¹⁸², ys³⁹²) = 
//│ 					case xs¹⁸² of {
//│ 						LH_C h⁷⁴ t⁷⁴ => 
//│ 							let t¹⁹¹ = mappend_₀_₀_₂(t⁷⁴, ys³⁹²)
//│ 							in let h¹⁹¹ = h⁷⁴
//│ 							in (fun ys³⁹³ -> 
//│ 								let t¹⁹² = mappend_₃_₀_₄(t¹⁹¹, ys³⁹³)
//│ 								in let h¹⁹² = h¹⁹¹
//│ 								in (fun ys³⁹⁴ -> [LH_C h¹⁹² mappend_₂_₀_₁₂(t¹⁹², ys³⁹⁴)]))
//│ 						| LH_N  => ys³⁹²}
//│ 					where
//│ 					def mappend_₂_₀_₁₂(xs¹⁵⁴, ys³³¹) = 
//│ 						xs¹⁵⁴(ys³³¹)
//│ 					def mappend_₃_₀_₄(xs¹³⁷, ys²⁸⁰) = 
//│ 						xs¹³⁷(ys²⁸⁰)
//│ 				def mappend_₁_₀_₁(xs¹³¹, ys²⁷¹) = 
//│ 					xs¹³¹(ys²⁷¹)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

