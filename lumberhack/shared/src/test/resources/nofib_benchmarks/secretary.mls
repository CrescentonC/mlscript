:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
power a n = if n == 0 then 1 else a * (power a (n - 1))
dropWhile f [] = []
dropWhile f (h:t) = if (f h) then dropWhile f t else (h:t)
drop n []      = []
drop n (h:t)   = if n > 0 then (drop (n - 1) t) else t
foldl1 f (x:xs) = foldl f x xs
maximum xs = foldl1 (\x -> \y -> if x > y then x else y) xs
nub_lz ls =
  lazy ( case (force ls) of {
    [] -> [];
    (x:xs) -> x:(nub_lz (filter_lz (\y -> not (polyEq x y)) xs))
  })
take_lz n ls =
  if n == 0 then
    []
  else case (force ls) of {
    [] -> [];
    (h:t) -> h:(take_lz (n - 1) t)
  }
infRand m =
  let f = \x -> lazy (((mod x m) + 1):(f (((97 * x) + 11) `mod` (power 2 7)))) in
  f 37
simulate n m proc = (float_of_int (length (filter (\x -> x) [ proc (infRand m) | seed <- [1..n] ]))) /. (float_of_int n)
sim k =
  let proc = \rs ->
              let xs     = take_lz 100 (nub_lz rs) in
              let best   = 100 in
              let bestk  = maximum (take k xs) in
              let afterk = dropWhile (\x -> x < bestk) (drop k xs) in
              polyEq [best] (take 1 afterk)
  in
  simulate 5000 100 proc
testSecretary_nofib dummy = [ sim k | k <- [35..39] ]
testSecretary_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testSecretary_nofib_₀^1334(primId⁰(0))
//│ def dropWhile_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = case _lh_dropWhile_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀^1240(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 	| _  => error⁰}
//│ def drop_₀(_lh_drop_arg1¹, _lh_drop_arg2¹) = case _lh_drop_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀^1319((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 	| _  => error⁰}
//│ def enumFromTo_₀(a⁵, b²) = if (a⁵ <= b²) then [LH_C a⁵ enumFromTo_₀^884((a⁵ + 1), b²)] else [LH_N]
//│ def enumFromTo_₁(a⁶, b³) = if (a⁶ <= b³) then [LH_C a⁶ enumFromTo_₁^1055((a⁶ + 1), b³)] else [LH_N]
//│ def filter_lz_₀(f¹⁶, ls²²) = lazy⁰(case force⁰(ls²²) of {
//│ 	LH_C h²³ t²⁵ => if f¹⁶(h²³) then [LH_C h²³ filter_lz_₀^1282(f¹⁶, t²⁵)] else force⁰(filter_lz_₀^1289(f¹⁶, t²⁵))
//│ 	| LH_N  => [LH_N]})
//│ def filter_₀(f¹⁵, ls²¹) = case ls²¹ of {
//│ 	LH_C h²² t²⁴ => if f¹⁵(h²²) then [LH_C h²² filter_₀^1258(f¹⁵, t²⁴)] else filter_₀^1264(f¹⁵, t²⁴)
//│ 	| LH_N  => [LH_N]}
//│ def foldl1_₀(_lh_foldl1_arg1¹, _lh_foldl1_arg2¹) = case _lh_foldl1_arg2¹ of {
//│ 	LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀^1021(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def foldl_₀(f¹⁴, i³, ls¹⁹) = case ls¹⁹ of {
//│ 	LH_C h²⁰ t²² => foldl_₀^1033(f¹⁴, f¹⁴(i³, h²⁰), t²²)
//│ 	| LH_N  => i³}
//│ def infRand_₀(_lh_infRand_arg1¹) = 
//│ 	let f¹³ = (fun x⁶ -> lazy⁰([LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹³((((97 * x⁶) + 11) % power_₀^970(2, 7)))]))
//│ 	in f¹³(37)
//│ def length_₀(ls²³) = case ls²³ of {
//│ 	LH_C h²⁴ t²⁶ => (1 + length_₀^1305(t²⁶))
//│ 	| LH_N  => 0}
//│ def maximum_₀(_lh_maximum_arg1¹) = foldl1_₀^985((fun x⁷ -> (fun y³ -> if (x⁷ > y³) then x⁷ else y³)), _lh_maximum_arg1¹)
//│ def nub_lz_₀(_lh_nub_lz_arg1¹) = lazy⁰(
//│ 	let _lh_matchIdent² = force⁰(_lh_nub_lz_arg1¹)
//│ 	in case _lh_matchIdent² of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀^928(filter_lz_₀^929((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]
//│ 		| _  => error⁰})
//│ def power_₀(_lh_power_arg1¹, _lh_power_arg2¹) = if (_lh_power_arg2¹ == 0) then 1 else (_lh_power_arg1¹ * power_₀^1183(_lh_power_arg1¹, (_lh_power_arg2¹ - 1)))
//│ def sim_₀(_lh_sim_arg1¹) = 
//│ 	let proc¹ = (fun rs¹ -> 
//│ 		let xs¹⁰ = take_lz_₀^1069(100, nub_lz_₀^1072(rs¹))
//│ 		in let best¹ = 100
//│ 		in let bestk¹ = maximum_₀^1077(take_₀^1078(_lh_sim_arg1¹, xs¹⁰))
//│ 		in let afterk¹ = dropWhile_₀^1084((fun x⁸ -> (x⁸ < bestk¹)), drop_₀^1092(_lh_sim_arg1¹, xs¹⁰))
//│ 		in polyEq⁰([LH_C best¹ [LH_N]], take_₁^1103(1, afterk¹)))
//│ 	in simulate_₀^1114(5000, 100, proc¹)
//│ def simulate_₀(_lh_simulate_arg1¹, _lh_simulate_arg2¹, _lh_simulate_arg3¹) = (float_of_int⁰(length_₀^1198(filter_₀^1199((fun x⁹ -> x⁹), 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_simulate_arg3¹(infRand_₀^1205(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun³(enumFromTo_₁^1217(1, _lh_simulate_arg1¹))))) /. float_of_int⁰(_lh_simulate_arg1¹))
//│ def take_lz_₀(_lh_take_lz_arg1¹, _lh_take_lz_arg2¹) = if (_lh_take_lz_arg1¹ == 0) then [LH_N] else 
//│ 	let _lh_matchIdent³ = force⁰(_lh_take_lz_arg2¹)
//│ 	in case _lh_matchIdent³ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀^1158((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]
//│ 		| _  => error⁰}
//│ def take_₀(n⁴, ls²⁰) = if (n⁴ > 0) then case ls²⁰ of {
//│ 	LH_C h²¹ t²³ => [LH_C h²¹ take_₀^1130((n⁴ - 1), t²³)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_₁(n³, ls¹⁸) = if (n³ > 0) then case ls¹⁸ of {
//│ 	LH_C h¹⁹ t²¹ => [LH_C h¹⁹ take_₁^905((n³ - 1), t²¹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testSecretary_nofib_₀(_lh_testSecretary_nofib_arg1¹) = 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C sim_₀^1001(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(enumFromTo_₀^1012(35, 39))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec dropWhile__d0 _lh_dropWhile_arg1_1 _lh_dropWhile_arg2_1 =
//│ 		  (match _lh_dropWhile_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_dropWhile_LH_C_0_1, _lh_dropWhile_LH_C_1_1) -> 
//│ 		      (if (_lh_dropWhile_arg1_1 _lh_dropWhile_LH_C_0_1) then
//│ 		        ((dropWhile__d0 _lh_dropWhile_arg1_1) _lh_dropWhile_LH_C_1_1)
//│ 		      else
//│ 		        (`LH_C(_lh_dropWhile_LH_C_0_1, _lh_dropWhile_LH_C_1_1)))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and drop__d0 _lh_drop_arg1_1 _lh_drop_arg2_1 =
//│ 		  (match _lh_drop_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_drop_LH_C_0_1, _lh_drop_LH_C_1_1) -> 
//│ 		      (if (_lh_drop_arg1_1 > 0) then
//│ 		        ((drop__d0 (_lh_drop_arg1_1 - 1)) _lh_drop_LH_C_1_1)
//│ 		      else
//│ 		        _lh_drop_LH_C_1_1)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and enumFromTo__d0 a_5 b_2 =
//│ 		  (if (a_5 <= b_2) then
//│ 		    (`LH_C(a_5, ((enumFromTo__d0 (a_5 + 1)) b_2)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFromTo__d1 a_6 b_3 =
//│ 		  (if (a_6 <= b_3) then
//│ 		    (`LH_C(a_6, ((enumFromTo__d1 (a_6 + 1)) b_3)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and filter_lz__d0 f_1_6 ls_2_2 =
//│ 		  (lazy (match (Lazy.force ls_2_2) with
//│ 		    | `LH_C(h_2_3, t_2_5) -> 
//│ 		      (if (f_1_6 h_2_3) then
//│ 		        (`LH_C(h_2_3, ((filter_lz__d0 f_1_6) t_2_5)))
//│ 		      else
//│ 		        (Lazy.force ((filter_lz__d0 f_1_6) t_2_5)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and filter__d0 f_1_5 ls_2_1 =
//│ 		  (match ls_2_1 with
//│ 		    | `LH_C(h_2_2, t_2_4) -> 
//│ 		      (if (f_1_5 h_2_2) then
//│ 		        (`LH_C(h_2_2, ((filter__d0 f_1_5) t_2_4)))
//│ 		      else
//│ 		        ((filter__d0 f_1_5) t_2_4))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and foldl1__d0 _lh_foldl1_arg1_1 _lh_foldl1_arg2_1 =
//│ 		  (match _lh_foldl1_arg2_1 with
//│ 		    | `LH_C(_lh_foldl1_LH_C_0_1, _lh_foldl1_LH_C_1_1) -> 
//│ 		      (((foldl__d0 _lh_foldl1_arg1_1) _lh_foldl1_LH_C_0_1) _lh_foldl1_LH_C_1_1)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and foldl__d0 f_1_4 i_3 ls_1_9 =
//│ 		  (match ls_1_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (((foldl__d0 f_1_4) ((f_1_4 i_3) h_2_0)) t_2_2)
//│ 		    | `LH_N -> 
//│ 		      i_3)
//│ 		and infRand__d0 _lh_infRand_arg1_1 =
//│ 		  (let rec f_1_3 = (fun x_6 -> 
//│ 		    (lazy (`LH_C(((x_6 mod _lh_infRand_arg1_1) + 1), (f_1_3 (((97 * x_6) + 11) mod ((power__d0 2) 7))))))) in
//│ 		    (f_1_3 37))
//│ 		and length__d0 ls_2_3 =
//│ 		  (match ls_2_3 with
//│ 		    | `LH_C(h_2_4, t_2_6) -> 
//│ 		      (1 + (length__d0 t_2_6))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and maximum__d0 _lh_maximum_arg1_1 =
//│ 		  ((foldl1__d0 (fun x_7 y_3 -> 
//│ 		    (if (x_7 > y_3) then
//│ 		      x_7
//│ 		    else
//│ 		      y_3))) _lh_maximum_arg1_1)
//│ 		and nub_lz__d0 _lh_nub_lz_arg1_1 =
//│ 		  (lazy (let rec _lh_matchIdent_2 = (Lazy.force _lh_nub_lz_arg1_1) in
//│ 		    (match _lh_matchIdent_2 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_nub_lz_LH_C_0_1, _lh_nub_lz_LH_C_1_1) -> 
//│ 		        (`LH_C(_lh_nub_lz_LH_C_0_1, (nub_lz__d0 ((filter_lz__d0 (fun y_2 -> 
//│ 		          (not (_lh_nub_lz_LH_C_0_1 = y_2)))) _lh_nub_lz_LH_C_1_1))))
//│ 		      | _ -> 
//│ 		        (failwith "error"))))
//│ 		and power__d0 _lh_power_arg1_1 _lh_power_arg2_1 =
//│ 		  (if (_lh_power_arg2_1 = 0) then
//│ 		    1
//│ 		  else
//│ 		    (_lh_power_arg1_1 * ((power__d0 _lh_power_arg1_1) (_lh_power_arg2_1 - 1))))
//│ 		and sim__d0 _lh_sim_arg1_1 =
//│ 		  (let rec proc_1 = (fun rs_1 -> 
//│ 		    (let rec xs_1_0 = ((take_lz__d0 100) (nub_lz__d0 rs_1)) in
//│ 		      (let rec best_1 = 100 in
//│ 		        (let rec bestk_1 = (maximum__d0 ((take__d0 _lh_sim_arg1_1) xs_1_0)) in
//│ 		          (let rec afterk_1 = ((dropWhile__d0 (fun x_8 -> 
//│ 		            (x_8 < bestk_1))) ((drop__d0 _lh_sim_arg1_1) xs_1_0)) in
//│ 		            ((`LH_C(best_1, (`LH_N))) = ((take__d1 1) afterk_1))))))) in
//│ 		    (((simulate__d0 5000) 100) proc_1))
//│ 		and simulate__d0 _lh_simulate_arg1_1 _lh_simulate_arg2_1 _lh_simulate_arg3_1 =
//│ 		  ((float_of_int (length__d0 ((filter__d0 (fun x_9 -> 
//│ 		    x_9)) (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		    (match _lh_listcomp_fun_para_3 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		        (`LH_C((_lh_simulate_arg3_1 (infRand__d0 _lh_simulate_arg2_1)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_3 ((enumFromTo__d1 1) _lh_simulate_arg1_1)))))) /. (float_of_int _lh_simulate_arg1_1))
//│ 		and take_lz__d0 _lh_take_lz_arg1_1 _lh_take_lz_arg2_1 =
//│ 		  (if (_lh_take_lz_arg1_1 = 0) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (let rec _lh_matchIdent_3 = (Lazy.force _lh_take_lz_arg2_1) in
//│ 		      (match _lh_matchIdent_3 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_N)
//│ 		        | `LH_C(_lh_take_lz_LH_C_0_1, _lh_take_lz_LH_C_1_1) -> 
//│ 		          (`LH_C(_lh_take_lz_LH_C_0_1, ((take_lz__d0 (_lh_take_lz_arg1_1 - 1)) _lh_take_lz_LH_C_1_1)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		and take__d0 n_4 ls_2_0 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match ls_2_0 with
//│ 		      | `LH_C(h_2_1, t_2_3) -> 
//│ 		        (`LH_C(h_2_1, ((take__d0 (n_4 - 1)) t_2_3)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take__d1 n_3 ls_1_8 =
//│ 		  (if (n_3 > 0) then
//│ 		    (match ls_1_8 with
//│ 		      | `LH_C(h_1_9, t_2_1) -> 
//│ 		        (`LH_C(h_1_9, ((take__d1 (n_3 - 1)) t_2_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testSecretary_nofib__d0 _lh_testSecretary_nofib_arg1_1 =
//│ 		  (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		    (match _lh_listcomp_fun_para_2 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		        (`LH_C((sim__d0 _lh_listcomp_fun_ls_h_2), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_2 ((enumFromTo__d0 35) 39)));;
//│ 		(testSecretary_nofib__d0 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C a⁵ enumFromTo_₀((a⁵ + 1), b²)]: 893 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C sim_₀(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1009
//│ [LH_N]: 894 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C sim_₀(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1009
//│ [LH_N]: 926 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 1169
//│ [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀(filter_lz_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 942 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 1169
//│ [LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹³((((97 * x⁶) + 11) % power_₀(2, 7)))]: 977 --->
//│ 	case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀(filter_lz_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 944
//│ 	case force⁰(ls²²) of {LH_C h²³ t²⁵ => if f¹⁶(h²³) then [LH_C h²³ filter_lz_₀(f¹⁶, t²⁵)] else force⁰(filter_lz_₀(f¹⁶, t²⁵)) | LH_N  => [LH_N]}: 1297
//│ [LH_C a⁶ enumFromTo_₁((a⁶ + 1), b³)]: 1064 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1214
//│ [LH_N]: 1065 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1214
//│ [LH_C h²¹ take_₀((n⁴ - 1), t²³)]: 1139 --->
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 1029
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => foldl_₀(f¹⁴, f¹⁴(i³, h²⁰), t²²) | LH_N  => i³}: 1045
//│ [LH_N]: 1140 --->
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 1029
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => foldl_₀(f¹⁴, f¹⁴(i³, h²⁰), t²²) | LH_N  => i³}: 1045
//│ [LH_N]: 1142 --->
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 1029
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => foldl_₀(f¹⁴, f¹⁴(i³, h²⁰), t²²) | LH_N  => i³}: 1045
//│ [LH_N]: 1151 --->
//│ 	case ls¹⁸ of {LH_C h¹⁹ t²¹ => [LH_C h¹⁹ take_₁((n³ - 1), t²¹)] | LH_N  => [LH_N]}: 916
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ take_₀((n⁴ - 1), t²³)] | LH_N  => [LH_N]}: 1141
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 1250
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 1331
//│ [LH_N]: 1156 --->
//│ 	case ls¹⁸ of {LH_C h¹⁹ t²¹ => [LH_C h¹⁹ take_₁((n³ - 1), t²¹)] | LH_N  => [LH_N]}: 916
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ take_₀((n⁴ - 1), t²³)] | LH_N  => [LH_N]}: 1141
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 1250
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 1331
//│ [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 1167 --->
//│ 	case ls¹⁸ of {LH_C h¹⁹ t²¹ => [LH_C h¹⁹ take_₁((n³ - 1), t²¹)] | LH_N  => [LH_N]}: 916
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ take_₀((n⁴ - 1), t²³)] | LH_N  => [LH_N]}: 1141
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 1250
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 1331
//│ [LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1212 --->
//│ 	case ls²¹ of {LH_C h²² t²⁴ => if f¹⁵(h²²) then [LH_C h²² filter_₀(f¹⁵, t²⁴)] else filter_₀(f¹⁵, t²⁴) | LH_N  => [LH_N]}: 1271
//│ [LH_N]: 1213 --->
//│ 	case ls²¹ of {LH_C h²² t²⁴ => if f¹⁵(h²²) then [LH_C h²² filter_₀(f¹⁵, t²⁴)] else filter_₀(f¹⁵, t²⁴) | LH_N  => [LH_N]}: 1271
//│ [LH_N]: 1236 --->
//│ 	case ls¹⁸ of {LH_C h¹⁹ t²¹ => [LH_C h¹⁹ take_₁((n³ - 1), t²¹)] | LH_N  => [LH_N]}: 916
//│ [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 1247 --->
//│ 	case ls¹⁸ of {LH_C h¹⁹ t²¹ => [LH_C h¹⁹ take_₁((n³ - 1), t²¹)] | LH_N  => [LH_N]}: 916
//│ [LH_C h²² filter_₀(f¹⁵, t²⁴)]: 1263 --->
//│ 	case ls²³ of {LH_C h²⁴ t²⁶ => (1 + length_₀(t²⁶)) | LH_N  => 0}: 1310
//│ [LH_N]: 1270 --->
//│ 	case ls²³ of {LH_C h²⁴ t²⁶ => (1 + length_₀(t²⁶)) | LH_N  => 0}: 1310
//│ [LH_C h²³ filter_lz_₀(f¹⁶, t²⁵)]: 1287 --->
//│ 	case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀(filter_lz_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 944
//│ 	case force⁰(ls²²) of {LH_C h²³ t²⁵ => if f¹⁶(h²³) then [LH_C h²³ filter_lz_₀(f¹⁶, t²⁵)] else force⁰(filter_lz_₀(f¹⁶, t²⁵)) | LH_N  => [LH_N]}: 1297
//│ [LH_N]: 1296 --->
//│ 	case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀(filter_lz_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 944
//│ 	case force⁰(ls²²) of {LH_C h²³ t²⁵ => if f¹⁶(h²³) then [LH_C h²³ filter_lz_₀(f¹⁶, t²⁵)] else force⁰(filter_lz_₀(f¹⁶, t²⁵)) | LH_N  => [LH_N]}: 1297
//│ [LH_N]: 1313 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 1250
//│ ------------------
//│ case ls¹⁸ of {LH_C h¹⁹ t²¹ => [LH_C h¹⁹ take_₁((n³ - 1), t²¹)] | LH_N  => [LH_N]}: 916 --->
//│ 	[LH_N]: 1151
//│ 	[LH_N]: 1156
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 1167
//│ 	[LH_N]: 1236
//│ 	[LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 1247
//│ case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀(filter_lz_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 944 --->
//│ 	[LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹³((((97 * x⁶) + 11) % power_₀(2, 7)))]: 977
//│ 	[LH_C h²³ filter_lz_₀(f¹⁶, t²⁵)]: 1287
//│ 	[LH_N]: 1296
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C sim_₀(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1009 --->
//│ 	[LH_C a⁵ enumFromTo_₀((a⁵ + 1), b²)]: 893
//│ 	[LH_N]: 894
//│ case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 1029 --->
//│ 	[LH_C h²¹ take_₀((n⁴ - 1), t²³)]: 1139
//│ 	[LH_N]: 1140
//│ 	[LH_N]: 1142
//│ case ls¹⁹ of {LH_C h²⁰ t²² => foldl_₀(f¹⁴, f¹⁴(i³, h²⁰), t²²) | LH_N  => i³}: 1045 --->
//│ 	[LH_C h²¹ take_₀((n⁴ - 1), t²³)]: 1139
//│ 	[LH_N]: 1140
//│ 	[LH_N]: 1142
//│ case ls²⁰ of {LH_C h²¹ t²³ => [LH_C h²¹ take_₀((n⁴ - 1), t²³)] | LH_N  => [LH_N]}: 1141 --->
//│ 	[LH_N]: 1151
//│ 	[LH_N]: 1156
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 1167
//│ case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 1169 --->
//│ 	[LH_N]: 926
//│ 	[LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀(filter_lz_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 942
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1214 --->
//│ 	[LH_C a⁶ enumFromTo_₁((a⁶ + 1), b³)]: 1064
//│ 	[LH_N]: 1065
//│ case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 1250 --->
//│ 	[LH_N]: 1151
//│ 	[LH_N]: 1156
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 1167
//│ 	[LH_N]: 1313
//│ case ls²¹ of {LH_C h²² t²⁴ => if f¹⁵(h²²) then [LH_C h²² filter_₀(f¹⁵, t²⁴)] else filter_₀(f¹⁵, t²⁴) | LH_N  => [LH_N]}: 1271 --->
//│ 	[LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1212
//│ 	[LH_N]: 1213
//│ case force⁰(ls²²) of {LH_C h²³ t²⁵ => if f¹⁶(h²³) then [LH_C h²³ filter_lz_₀(f¹⁶, t²⁵)] else force⁰(filter_lz_₀(f¹⁶, t²⁵)) | LH_N  => [LH_N]}: 1297 --->
//│ 	[LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹³((((97 * x⁶) + 11) % power_₀(2, 7)))]: 977
//│ 	[LH_C h²³ filter_lz_₀(f¹⁶, t²⁵)]: 1287
//│ 	[LH_N]: 1296
//│ case ls²³ of {LH_C h²⁴ t²⁶ => (1 + length_₀(t²⁶)) | LH_N  => 0}: 1310 --->
//│ 	[LH_C h²² filter_₀(f¹⁵, t²⁴)]: 1263
//│ 	[LH_N]: 1270
//│ case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 1331 --->
//│ 	[LH_N]: 1151
//│ 	[LH_N]: 1156
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 1167
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C a⁵ enumFromTo_₀((a⁵ + 1), b²)]: 893 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C sim_₀(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1009
//│ [LH_N]: 894 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C sim_₀(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1009
//│ [LH_N]: 926 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 1169
//│ [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀(filter_lz_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 942 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 1169
//│ [LH_C a⁶ enumFromTo_₁((a⁶ + 1), b³)]: 1064 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1214
//│ [LH_N]: 1065 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1214
//│ [LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1212 --->
//│ 	case ls²¹ of {LH_C h²² t²⁴ => if f¹⁵(h²²) then [LH_C h²² filter_₀(f¹⁵, t²⁴)] else filter_₀(f¹⁵, t²⁴) | LH_N  => [LH_N]}: 1271
//│ [LH_N]: 1213 --->
//│ 	case ls²¹ of {LH_C h²² t²⁴ => if f¹⁵(h²²) then [LH_C h²² filter_₀(f¹⁵, t²⁴)] else filter_₀(f¹⁵, t²⁴) | LH_N  => [LH_N]}: 1271
//│ [LH_C h²² filter_₀(f¹⁵, t²⁴)]: 1263 --->
//│ 	case ls²³ of {LH_C h²⁴ t²⁶ => (1 + length_₀(t²⁶)) | LH_N  => 0}: 1310
//│ [LH_N]: 1270 --->
//│ 	case ls²³ of {LH_C h²⁴ t²⁶ => (1 + length_₀(t²⁶)) | LH_N  => 0}: 1310
//│ ------------------
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C sim_₀(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1009 --->
//│ 	[LH_C a⁵ enumFromTo_₀((a⁵ + 1), b²)]: 893
//│ 	[LH_N]: 894
//│ case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 1169 --->
//│ 	[LH_N]: 926
//│ 	[LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀(filter_lz_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 942
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1214 --->
//│ 	[LH_C a⁶ enumFromTo_₁((a⁶ + 1), b³)]: 1064
//│ 	[LH_N]: 1065
//│ case ls²¹ of {LH_C h²² t²⁴ => if f¹⁵(h²²) then [LH_C h²² filter_₀(f¹⁵, t²⁴)] else filter_₀(f¹⁵, t²⁴) | LH_N  => [LH_N]}: 1271 --->
//│ 	[LH_C _lh_simulate_arg3¹(infRand_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1212
//│ 	[LH_N]: 1213
//│ case ls²³ of {LH_C h²⁴ t²⁶ => (1 + length_₀(t²⁶)) | LH_N  => 0}: 1310 --->
//│ 	[LH_C h²² filter_₀(f¹⁵, t²⁴)]: 1263
//│ 	[LH_N]: 1270
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testSecretary_nofib_₀(primId⁰(0))
//│ def dropWhile_₀(_lh_dropWhile_arg1², _lh_dropWhile_arg2²) = case _lh_dropWhile_arg2² of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0¹) then dropWhile_₀(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 	| _  => error⁰}
//│ def drop_₀(_lh_drop_arg1², _lh_drop_arg2²) = case _lh_drop_arg2² of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1² > 0) then drop_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 	| _  => error⁰}
//│ def enumFromTo_₀(a⁸, b⁵) = if (a⁸ <= b⁵) then 
//│ 	let _lh_listcomp_fun_ls_t⁵ = enumFromTo_₀((a⁸ + 1), b⁵)
//│ 	in let _lh_listcomp_fun_ls_h⁴ = a⁸
//│ 	in (fun _lh_listcomp_fun⁶ -> [LH_C sim_₀(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁵)]) else (fun _lh_listcomp_fun⁷ -> [LH_N])
//│ def enumFromTo_₁(a⁷, b⁴) = if (a⁷ <= b⁴) then 
//│ 	let _lh_listcomp_fun_ls_t⁴ = enumFromTo_₁((a⁷ + 1), b⁴)
//│ 	in (fun _lh_listcomp_fun⁴ -> (fun _lh_simulate_arg2² -> (fun _lh_simulate_arg3² -> 
//│ 		let t²⁷ = _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)
//│ 		in let h²⁵ = _lh_simulate_arg3²(infRand_₀(_lh_simulate_arg2²))
//│ 		in (fun f¹⁷ -> if f¹⁷(h²⁵) then 
//│ 			let t²⁸ = filter_₀(f¹⁷, t²⁷)
//│ 			in (fun _lh_dummy⁰ -> (1 + length_₀(t²⁸))) else filter_₀(f¹⁷, t²⁷))))) else (fun _lh_listcomp_fun⁵ -> (fun _lh_simulate_arg2³ -> (fun _lh_simulate_arg3³ -> (fun f¹⁸ -> (fun _lh_dummy¹ -> 0)))))
//│ def filter_lz_₀(f²¹, ls²⁷) = lazy⁰(case force⁰(ls²⁷) of {
//│ 	LH_C h²³ t²⁵ => if f²¹(h²³) then [LH_C h²³ filter_lz_₀(f²¹, t²⁵)] else force⁰(filter_lz_₀(f²¹, t²⁵))
//│ 	| LH_N  => [LH_N]})
//│ def filter_₀(f²⁰, ls²⁶) = ls²⁶(f²⁰)
//│ def foldl1_₀(_lh_foldl1_arg1², _lh_foldl1_arg2²) = case _lh_foldl1_arg2² of {
//│ 	LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀(_lh_foldl1_arg1², _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def foldl_₀(f¹⁹, i⁴, ls²⁴) = case ls²⁴ of {
//│ 	LH_C h²⁰ t²² => foldl_₀(f¹⁹, f¹⁹(i⁴, h²⁰), t²²)
//│ 	| LH_N  => i⁴}
//│ def infRand_₀(_lh_infRand_arg1²) = 
//│ 	let f²² = (fun x¹⁰ -> lazy⁰([LH_C ((x¹⁰ mod _lh_infRand_arg1²) + 1) f²²((((97 * x¹⁰) + 11) % power_₀(2, 7)))]))
//│ 	in f²²(37)
//│ def length_₀(ls²⁹) = ls²⁹(99)
//│ def maximum_₀(_lh_maximum_arg1²) = foldl1_₀((fun x¹² -> (fun y⁵ -> if (x¹² > y⁵) then x¹² else y⁵)), _lh_maximum_arg1²)
//│ def nub_lz_₀(_lh_nub_lz_arg1²) = lazy⁰(
//│ 	let _lh_matchIdent⁴ = force⁰(_lh_nub_lz_arg1²)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_N  => (fun _lh_take_lz_arg1² -> [LH_N])
//│ 		| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => 
//│ 			let _lh_take_lz_LH_C_1² = nub_lz_₀(filter_lz_₀((fun y⁴ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y⁴))), _lh_nub_lz_LH_C_1¹))
//│ 			in let _lh_take_lz_LH_C_0² = _lh_nub_lz_LH_C_0¹
//│ 			in (fun _lh_take_lz_arg1³ -> [LH_C _lh_take_lz_LH_C_0² take_lz_₀((_lh_take_lz_arg1³ - 1), _lh_take_lz_LH_C_1²)])
//│ 		| _  => error⁰})
//│ def power_₀(_lh_power_arg1², _lh_power_arg2²) = if (_lh_power_arg2² == 0) then 1 else (_lh_power_arg1² * power_₀(_lh_power_arg1², (_lh_power_arg2² - 1)))
//│ def sim_₀(_lh_sim_arg1²) = 
//│ 	let proc² = (fun rs² -> 
//│ 		let xs¹¹ = take_lz_₀(100, nub_lz_₀(rs²))
//│ 		in let best² = 100
//│ 		in let bestk² = maximum_₀(take_₀(_lh_sim_arg1², xs¹¹))
//│ 		in let afterk² = dropWhile_₀((fun x¹¹ -> (x¹¹ < bestk²)), drop_₀(_lh_sim_arg1², xs¹¹))
//│ 		in polyEq⁰([LH_C best² [LH_N]], take_₁(1, afterk²)))
//│ 	in simulate_₀(5000, 100, proc²)
//│ def simulate_₀(_lh_simulate_arg1², _lh_simulate_arg2⁴, _lh_simulate_arg3⁴) = (float_of_int⁰(length_₀(filter_₀((fun x¹³ -> x¹³), 
//│ 	let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁵ -> _lh_listcomp_fun_para⁵(_lh_listcomp_fun⁹, _lh_simulate_arg2⁴, _lh_simulate_arg3⁴))
//│ 	in _lh_listcomp_fun⁹(enumFromTo_₁(1, _lh_simulate_arg1²))))) /. float_of_int⁰(_lh_simulate_arg1²))
//│ def take_lz_₀(_lh_take_lz_arg1⁴, _lh_take_lz_arg2²) = if (_lh_take_lz_arg1⁴ == 0) then [LH_N] else 
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_take_lz_arg2²)
//│ 	in _lh_matchIdent⁵(_lh_take_lz_arg1⁴)
//│ def take_₀(n⁵, ls²⁵) = if (n⁵ > 0) then case ls²⁵ of {
//│ 	LH_C h²¹ t²³ => [LH_C h²¹ take_₀((n⁵ - 1), t²³)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_₁(n⁶, ls²⁸) = if (n⁶ > 0) then case ls²⁸ of {
//│ 	LH_C h¹⁹ t²¹ => [LH_C h¹⁹ take_₁((n⁶ - 1), t²¹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testSecretary_nofib_₀(_lh_testSecretary_nofib_arg1²) = 
//│ 	let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁸))
//│ 	in _lh_listcomp_fun⁸(enumFromTo_₀(35, 39))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<


