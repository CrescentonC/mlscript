:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
power a n = if n == 0 then 1 else a * (power a (n - 1))
dropWhile f [] = []
dropWhile f (h:t) = if (f h) then dropWhile f t else (h:t)
drop n []      = []
drop n (h:t)   = if n > 0 then (drop (n - 1) t) else t
foldl1 f (x:xs) = foldl f x xs
maximum xs = foldl1 (\x -> \y -> if x > y then x else y) xs
filter_lz p ls =
  lazy (case (force ls) of {
    [] -> [];
    (h:t) -> if (p h) then h:(filter_lz p t) else (force (filter_lz p t))
  })
nub_lz ls =
  lazy ( case (force ls) of {
    [] -> [];
    (x:xs) -> x:(nub_lz (filter_lz (\y -> not (polyEq x y)) xs))
  })
take_lz n ls =
  if n == 0 then
    []
  else case (force ls) of {
    [] -> [];
    (h:t) -> h:(take_lz (n - 1) t)
  }
infRand m =
  let f = \x -> lazy (((mod x m) + 1):(f (((97 * x) + 11) `mod` (power 2 7)))) in
  f 37
simulate n m proc = (float_of_int (length (filter (\x -> x) [ proc (infRand m) | seed <- [1..n] ]))) /. (float_of_int n)
sim k =
  let proc = \rs ->
              let xs     = take_lz 100 (nub_lz rs) in
              let best   = 100 in
              let bestk  = maximum (take k xs) in
              let afterk = dropWhile (\x -> x < bestk) (drop k xs) in
              polyEq [best] (take 1 afterk)
  in
  simulate 5000 100 proc
testSecretary_nofib dummy = [ sim k | k <- [35..39] ]
testSecretary_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testSecretary_nofib_₀^1340(primId⁰(0))
//│ def dropWhile_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = case _lh_dropWhile_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀^1273(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 	| _  => error⁰}
//│ def drop_₀(_lh_drop_arg1¹, _lh_drop_arg2¹) = case _lh_drop_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀^1134((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 	| _  => error⁰}
//│ def enumFromTo_₀(a⁶, b³) = if (a⁶ <= b³) then [LH_C a⁶ enumFromTo_₀^1177((a⁶ + 1), b³)] else [LH_N]
//│ def enumFromTo_₁(a⁵, b²) = if (a⁵ <= b²) then [LH_C a⁵ enumFromTo_₁^1113((a⁵ + 1), b²)] else [LH_N]
//│ def filter_lz_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_arg2¹) = lazy⁰(
//│ 	let _lh_matchIdent⁴ = force⁰(_lh_filter_lz_arg2¹)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀^1036(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz_₀^1043(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹))
//│ 		| _  => error⁰})
//│ def filter_₀(f¹⁴, ls¹⁸) = case ls¹⁸ of {
//│ 	LH_C h¹⁹ t²¹ => if f¹⁴(h¹⁹) then [LH_C h¹⁹ filter_₀^960(f¹⁴, t²¹)] else filter_₀^966(f¹⁴, t²¹)
//│ 	| LH_N  => [LH_N]}
//│ def foldl1_₀(_lh_foldl1_arg1¹, _lh_foldl1_arg2¹) = case _lh_foldl1_arg2¹ of {
//│ 	LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀^1057(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def foldl_₀(f¹², i³, ls¹⁷) = case ls¹⁷ of {
//│ 	LH_C h¹⁸ t²⁰ => foldl_₀^882(f¹², f¹²(i³, h¹⁸), t²⁰)
//│ 	| LH_N  => i³}
//│ def infRand_₀(_lh_infRand_arg1¹) = 
//│ 	let f¹³ = (fun x⁶ -> lazy⁰([LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹³((((97 * x⁶) + 11) % power_₀^940(2, 7)))]))
//│ 	in f¹³(37)
//│ def length_₀(ls²⁰) = case ls²⁰ of {
//│ 	LH_C h²¹ t²³ => (1 + length_₀^1210(t²³))
//│ 	| LH_N  => 0}
//│ def maximum_₀(_lh_maximum_arg1¹) = foldl1_₀^1191((fun x⁸ -> (fun y³ -> if (x⁸ > y³) then x⁸ else y³)), _lh_maximum_arg1¹)
//│ def nub_lz_₀(_lh_nub_lz_arg1¹) = lazy⁰(
//│ 	let _lh_matchIdent³ = force⁰(_lh_nub_lz_arg1¹)
//│ 	in case _lh_matchIdent³ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀^1006(filter_lz_₀^1007((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]
//│ 		| _  => error⁰})
//│ def power_₀(_lh_power_arg1¹, _lh_power_arg2¹) = if (_lh_power_arg2¹ == 0) then 1 else (_lh_power_arg1¹ * power_₀^1158(_lh_power_arg1¹, (_lh_power_arg2¹ - 1)))
//│ def sim_₀(_lh_sim_arg1¹) = 
//│ 	let proc¹ = (fun rs¹ -> 
//│ 		let xs¹⁰ = take_lz_₀^1286(100, nub_lz_₀^1289(rs¹))
//│ 		in let best¹ = 100
//│ 		in let bestk¹ = maximum_₀^1294(take_₀^1295(_lh_sim_arg1¹, xs¹⁰))
//│ 		in let afterk¹ = dropWhile_₀^1301((fun x⁹ -> (x⁹ < bestk¹)), drop_₀^1309(_lh_sim_arg1¹, xs¹⁰))
//│ 		in polyEq⁰([LH_C best¹ [LH_N]], take_₁^1320(1, afterk¹)))
//│ 	in simulate_₀^1331(5000, 100, proc¹)
//│ def simulate_₀(_lh_simulate_arg1¹, _lh_simulate_arg2¹, _lh_simulate_arg3¹) = (float_of_int⁰(length_₀^1070(filter_₀^1071((fun x⁷ -> x⁷), 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_simulate_arg3¹(infRand_₀^1077(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun³(enumFromTo_₁^1089(1, _lh_simulate_arg1¹))))) /. float_of_int⁰(_lh_simulate_arg1¹))
//│ def take_lz_₀(_lh_take_lz_arg1¹, _lh_take_lz_arg2¹) = if (_lh_take_lz_arg1¹ == 0) then [LH_N] else 
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_take_lz_arg2¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀^1252((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]
//│ 		| _  => error⁰}
//│ def take_₀(n⁴, ls²¹) = if (n⁴ > 0) then case ls²¹ of {
//│ 	LH_C h²² t²⁴ => [LH_C h²² take_₀^1224((n⁴ - 1), t²⁴)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_₁(n³, ls¹⁹) = if (n³ > 0) then case ls¹⁹ of {
//│ 	LH_C h²⁰ t²² => [LH_C h²⁰ take_₁^983((n³ - 1), t²²)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testSecretary_nofib_₀(_lh_testSecretary_nofib_arg1¹) = 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C sim_₀^899(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(enumFromTo_₀^910(35, 39))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec dropWhile__d0 _lh_dropWhile_arg1_1 _lh_dropWhile_arg2_1 =
//│ 		  (match _lh_dropWhile_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_dropWhile_LH_C_0_1, _lh_dropWhile_LH_C_1_1) -> 
//│ 		      (if (_lh_dropWhile_arg1_1 _lh_dropWhile_LH_C_0_1) then
//│ 		        ((dropWhile__d0 _lh_dropWhile_arg1_1) _lh_dropWhile_LH_C_1_1)
//│ 		      else
//│ 		        (`LH_C(_lh_dropWhile_LH_C_0_1, _lh_dropWhile_LH_C_1_1)))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and drop__d0 _lh_drop_arg1_1 _lh_drop_arg2_1 =
//│ 		  (match _lh_drop_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_drop_LH_C_0_1, _lh_drop_LH_C_1_1) -> 
//│ 		      (if (_lh_drop_arg1_1 > 0) then
//│ 		        ((drop__d0 (_lh_drop_arg1_1 - 1)) _lh_drop_LH_C_1_1)
//│ 		      else
//│ 		        _lh_drop_LH_C_1_1)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and enumFromTo__d0 a_6 b_3 =
//│ 		  (if (a_6 <= b_3) then
//│ 		    (`LH_C(a_6, ((enumFromTo__d0 (a_6 + 1)) b_3)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFromTo__d1 a_5 b_2 =
//│ 		  (if (a_5 <= b_2) then
//│ 		    (`LH_C(a_5, ((enumFromTo__d1 (a_5 + 1)) b_2)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and filter_lz__d0 _lh_filter_lz_arg1_1 _lh_filter_lz_arg2_1 =
//│ 		  (lazy (let rec _lh_matchIdent_4 = (Lazy.force _lh_filter_lz_arg2_1) in
//│ 		    (match _lh_matchIdent_4 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_filter_lz_LH_C_0_1, _lh_filter_lz_LH_C_1_1) -> 
//│ 		        (if (_lh_filter_lz_arg1_1 _lh_filter_lz_LH_C_0_1) then
//│ 		          (`LH_C(_lh_filter_lz_LH_C_0_1, ((filter_lz__d0 _lh_filter_lz_arg1_1) _lh_filter_lz_LH_C_1_1)))
//│ 		        else
//│ 		          (Lazy.force ((filter_lz__d0 _lh_filter_lz_arg1_1) _lh_filter_lz_LH_C_1_1)))
//│ 		      | _ -> 
//│ 		        (failwith "error"))))
//│ 		and filter__d0 f_1_4 ls_1_8 =
//│ 		  (match ls_1_8 with
//│ 		    | `LH_C(h_1_9, t_2_1) -> 
//│ 		      (if (f_1_4 h_1_9) then
//│ 		        (`LH_C(h_1_9, ((filter__d0 f_1_4) t_2_1)))
//│ 		      else
//│ 		        ((filter__d0 f_1_4) t_2_1))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and foldl1__d0 _lh_foldl1_arg1_1 _lh_foldl1_arg2_1 =
//│ 		  (match _lh_foldl1_arg2_1 with
//│ 		    | `LH_C(_lh_foldl1_LH_C_0_1, _lh_foldl1_LH_C_1_1) -> 
//│ 		      (((foldl__d0 _lh_foldl1_arg1_1) _lh_foldl1_LH_C_0_1) _lh_foldl1_LH_C_1_1)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and foldl__d0 f_1_2 i_3 ls_1_7 =
//│ 		  (match ls_1_7 with
//│ 		    | `LH_C(h_1_8, t_2_0) -> 
//│ 		      (((foldl__d0 f_1_2) ((f_1_2 i_3) h_1_8)) t_2_0)
//│ 		    | `LH_N -> 
//│ 		      i_3)
//│ 		and infRand__d0 _lh_infRand_arg1_1 =
//│ 		  (let rec f_1_3 = (fun x_6 -> 
//│ 		    (lazy (`LH_C(((x_6 mod _lh_infRand_arg1_1) + 1), (f_1_3 (((97 * x_6) + 11) mod ((power__d0 2) 7))))))) in
//│ 		    (f_1_3 37))
//│ 		and length__d0 ls_2_0 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (1 + (length__d0 t_2_3))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and maximum__d0 _lh_maximum_arg1_1 =
//│ 		  ((foldl1__d0 (fun x_8 y_3 -> 
//│ 		    (if (x_8 > y_3) then
//│ 		      x_8
//│ 		    else
//│ 		      y_3))) _lh_maximum_arg1_1)
//│ 		and nub_lz__d0 _lh_nub_lz_arg1_1 =
//│ 		  (lazy (let rec _lh_matchIdent_3 = (Lazy.force _lh_nub_lz_arg1_1) in
//│ 		    (match _lh_matchIdent_3 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_nub_lz_LH_C_0_1, _lh_nub_lz_LH_C_1_1) -> 
//│ 		        (`LH_C(_lh_nub_lz_LH_C_0_1, (nub_lz__d0 ((filter_lz__d0 (fun y_2 -> 
//│ 		          (not (_lh_nub_lz_LH_C_0_1 = y_2)))) _lh_nub_lz_LH_C_1_1))))
//│ 		      | _ -> 
//│ 		        (failwith "error"))))
//│ 		and power__d0 _lh_power_arg1_1 _lh_power_arg2_1 =
//│ 		  (if (_lh_power_arg2_1 = 0) then
//│ 		    1
//│ 		  else
//│ 		    (_lh_power_arg1_1 * ((power__d0 _lh_power_arg1_1) (_lh_power_arg2_1 - 1))))
//│ 		and sim__d0 _lh_sim_arg1_1 =
//│ 		  (let rec proc_1 = (fun rs_1 -> 
//│ 		    (let rec xs_1_0 = ((take_lz__d0 100) (nub_lz__d0 rs_1)) in
//│ 		      (let rec best_1 = 100 in
//│ 		        (let rec bestk_1 = (maximum__d0 ((take__d0 _lh_sim_arg1_1) xs_1_0)) in
//│ 		          (let rec afterk_1 = ((dropWhile__d0 (fun x_9 -> 
//│ 		            (x_9 < bestk_1))) ((drop__d0 _lh_sim_arg1_1) xs_1_0)) in
//│ 		            ((`LH_C(best_1, (`LH_N))) = ((take__d1 1) afterk_1))))))) in
//│ 		    (((simulate__d0 5000) 100) proc_1))
//│ 		and simulate__d0 _lh_simulate_arg1_1 _lh_simulate_arg2_1 _lh_simulate_arg3_1 =
//│ 		  ((float_of_int (length__d0 ((filter__d0 (fun x_7 -> 
//│ 		    x_7)) (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		    (match _lh_listcomp_fun_para_3 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		        (`LH_C((_lh_simulate_arg3_1 (infRand__d0 _lh_simulate_arg2_1)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_3 ((enumFromTo__d1 1) _lh_simulate_arg1_1)))))) /. (float_of_int _lh_simulate_arg1_1))
//│ 		and take_lz__d0 _lh_take_lz_arg1_1 _lh_take_lz_arg2_1 =
//│ 		  (if (_lh_take_lz_arg1_1 = 0) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (let rec _lh_matchIdent_5 = (Lazy.force _lh_take_lz_arg2_1) in
//│ 		      (match _lh_matchIdent_5 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_N)
//│ 		        | `LH_C(_lh_take_lz_LH_C_0_1, _lh_take_lz_LH_C_1_1) -> 
//│ 		          (`LH_C(_lh_take_lz_LH_C_0_1, ((take_lz__d0 (_lh_take_lz_arg1_1 - 1)) _lh_take_lz_LH_C_1_1)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		and take__d0 n_4 ls_2_1 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match ls_2_1 with
//│ 		      | `LH_C(h_2_2, t_2_4) -> 
//│ 		        (`LH_C(h_2_2, ((take__d0 (n_4 - 1)) t_2_4)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take__d1 n_3 ls_1_9 =
//│ 		  (if (n_3 > 0) then
//│ 		    (match ls_1_9 with
//│ 		      | `LH_C(h_2_0, t_2_2) -> 
//│ 		        (`LH_C(h_2_0, ((take__d1 (n_3 - 1)) t_2_2)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testSecretary_nofib__d0 _lh_testSecretary_nofib_arg1_1 =
//│ 		  (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		    (match _lh_listcomp_fun_para_2 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		        (`LH_C((sim__d0 _lh_listcomp_fun_ls_h_2), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_2 ((enumFromTo__d0 35) 39)));;
//│ 		(testSecretary_nofib__d0 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testSecretary_nofib_₀^1340] (hopeless to continue)
//│ 	[testSecretary_nofib_₀^1340 · enumFromTo_₀^910] (using original def)
//│ 		[testSecretary_nofib_₀^1340 · enumFromTo_₀^910 · enumFromTo_₀^1177] ---> [testSecretary_nofib_₀^1340 · enumFromTo_₀^910] (using original def)
//│ 	[testSecretary_nofib_₀^1340 · sim_₀^899] (using original def)
//│ 		[testSecretary_nofib_₀^1340 · sim_₀^899 · dropWhile_₀^1301] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · dropWhile_₀^1301 · dropWhile_₀^1273] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · dropWhile_₀^1301] (using original def)
//│ 		[testSecretary_nofib_₀^1340 · sim_₀^899 · drop_₀^1309] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · drop_₀^1309 · drop_₀^1134] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · drop_₀^1309] (using original def)
//│ 		[testSecretary_nofib_₀^1340 · sim_₀^899 · maximum_₀^1294] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · maximum_₀^1294 · foldl1_₀^1191] (using original def)
//│ 				[testSecretary_nofib_₀^1340 · sim_₀^899 · maximum_₀^1294 · foldl1_₀^1191 · foldl_₀^1057] (using original def)
//│ 					[testSecretary_nofib_₀^1340 · sim_₀^899 · maximum_₀^1294 · foldl1_₀^1191 · foldl_₀^1057 · foldl_₀^882] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · maximum_₀^1294 · foldl1_₀^1191 · foldl_₀^1057] (using original def)
//│ 		[testSecretary_nofib_₀^1340 · sim_₀^899 · nub_lz_₀^1289] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · nub_lz_₀^1289 · filter_lz_₀^1007] (using original def)
//│ 				[testSecretary_nofib_₀^1340 · sim_₀^899 · nub_lz_₀^1289 · filter_lz_₀^1007 · filter_lz_₀^1036] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · nub_lz_₀^1289 · filter_lz_₀^1007] (using original def)
//│ 				[testSecretary_nofib_₀^1340 · sim_₀^899 · nub_lz_₀^1289 · filter_lz_₀^1007 · filter_lz_₀^1043] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · nub_lz_₀^1289 · filter_lz_₀^1007] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · nub_lz_₀^1289 · nub_lz_₀^1006] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · nub_lz_₀^1289] (using original def)
//│ 		[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · enumFromTo_₁^1089] (using original def)
//│ 				[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · enumFromTo_₁^1089 · enumFromTo_₁^1113] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · enumFromTo_₁^1089] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · filter_₀^1071] (using original def)
//│ 				[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · filter_₀^1071 · filter_₀^960] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · filter_₀^1071] (using original def)
//│ 				[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · filter_₀^1071 · filter_₀^966] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · filter_₀^1071] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · infRand_₀^1077] (using original def)
//│ 				[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · infRand_₀^1077 · power_₀^940] (using original def)
//│ 					[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · infRand_₀^1077 · power_₀^940 · power_₀^1158] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · infRand_₀^1077 · power_₀^940] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · length_₀^1070] (using original def)
//│ 				[testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · length_₀^1070 · length_₀^1210] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · simulate_₀^1331 · length_₀^1070] (using original def)
//│ 		[testSecretary_nofib_₀^1340 · sim_₀^899 · take_lz_₀^1286] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · take_lz_₀^1286 · take_lz_₀^1252] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · take_lz_₀^1286] (using original def)
//│ 		[testSecretary_nofib_₀^1340 · sim_₀^899 · take_₀^1295] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · take_₀^1295 · take_₀^1224] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · take_₀^1295] (using original def)
//│ 		[testSecretary_nofib_₀^1340 · sim_₀^899 · take_₁^1320] (using original def)
//│ 			[testSecretary_nofib_₀^1340 · sim_₀^899 · take_₁^1320 · take_₁^983] ---> [testSecretary_nofib_₀^1340 · sim_₀^899 · take_₁^1320] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testSecretary_nofib_₀_₀(primId⁰(0))
//│ def testSecretary_nofib_₀_₀(_lh_testSecretary_nofib_arg1¹) = 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_₀_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun³(enumFromTo_₀_₀(35, 39))
//│ 	where
//│ 	def enumFromTo_₀_₀(a³, b³) = 
//│ 		if (a³ <= b³) then [LH_C a³ enumFromTo_₀_₀((a³ + 1), b³)] else [LH_N]
//│ 	def sim_₀_₀(_lh_sim_arg1¹) = 
//│ 		let proc¹ = (fun rs¹ -> 
//│ 			let xs¹ = take_lz_₀_₀(100, nub_lz_₀_₀(rs¹))
//│ 			in let best¹ = 100
//│ 			in let bestk¹ = maximum_₀_₀(take_₀_₀(_lh_sim_arg1¹, xs¹))
//│ 			in let afterk¹ = dropWhile_₀_₀((fun x⁷ -> (x⁷ < bestk¹)), drop_₀_₀(_lh_sim_arg1¹, xs¹))
//│ 			in polyEq⁰([LH_C best¹ [LH_N]], take_₁_₀(1, afterk¹)))
//│ 		in simulate_₀_₀(5000, 100, proc¹)
//│ 		where
//│ 		def dropWhile_₀_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = 
//│ 			case _lh_dropWhile_arg2¹ of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 				| _  => error⁰}
//│ 		def drop_₀_₀(_lh_drop_arg1¹, _lh_drop_arg2¹) = 
//│ 			case _lh_drop_arg2¹ of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 				| _  => error⁰}
//│ 		def maximum_₀_₀(_lh_maximum_arg1¹) = 
//│ 			foldl1_₀_₀((fun x⁶ -> (fun y³ -> if (x⁶ > y³) then x⁶ else y³)), _lh_maximum_arg1¹)
//│ 			where
//│ 			def foldl1_₀_₀(_lh_foldl1_arg1¹, _lh_foldl1_arg2¹) = 
//│ 				case _lh_foldl1_arg2¹ of {
//│ 					LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl_₀_₀(f⁵, i¹, ls⁸) = 
//│ 					case ls⁸ of {
//│ 						LH_C h⁸ t⁸ => foldl_₀_₀(f⁵, f⁵(i¹, h⁸), t⁸)
//│ 						| LH_N  => i¹}
//│ 		def nub_lz_₀_₀(_lh_nub_lz_arg1¹) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent³ = force⁰(_lh_nub_lz_arg1¹)
//│ 				in case _lh_matchIdent³ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀_₀(filter_lz_₀_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]
//│ 					| _  => error⁰})
//│ 			where
//│ 			def filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_arg2¹) = 
//│ 				lazy⁰(
//│ 					let _lh_matchIdent⁴ = force⁰(_lh_filter_lz_arg2¹)
//│ 					in case _lh_matchIdent⁴ of {
//│ 						LH_N  => [LH_N]
//│ 						| LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹))
//│ 						| _  => error⁰})
//│ 		def simulate_₀_₀(_lh_simulate_arg1¹, _lh_simulate_arg2¹, _lh_simulate_arg3¹) = 
//│ 			(float_of_int⁰(length_₀_₀(filter_₀_₀((fun x⁵ -> x⁵), 
//│ 				let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 					LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 					| LH_N  => [LH_N]})
//│ 				in _lh_listcomp_fun²(enumFromTo_₁_₀(1, _lh_simulate_arg1¹))))) /. float_of_int⁰(_lh_simulate_arg1¹))
//│ 			where
//│ 			def enumFromTo_₁_₀(a², b²) = 
//│ 				if (a² <= b²) then [LH_C a² enumFromTo_₁_₀((a² + 1), b²)] else [LH_N]
//│ 			def filter_₀_₀(f³, ls⁵) = 
//│ 				case ls⁵ of {
//│ 					LH_C h⁵ t⁵ => if f³(h⁵) then [LH_C h⁵ filter_₀_₀(f³, t⁵)] else filter_₀_₀(f³, t⁵)
//│ 					| LH_N  => [LH_N]}
//│ 			def infRand_₀_₀(_lh_infRand_arg1¹) = 
//│ 				let f⁴ = (fun x⁴ -> lazy⁰([LH_C ((x⁴ mod _lh_infRand_arg1¹) + 1) f⁴((((97 * x⁴) + 11) % power_₀_₀(2, 7)))]))
//│ 				in f⁴(37)
//│ 				where
//│ 				def power_₀_₀(_lh_power_arg1¹, _lh_power_arg2¹) = 
//│ 					if (_lh_power_arg2¹ == 0) then 1 else (_lh_power_arg1¹ * power_₀_₀(_lh_power_arg1¹, (_lh_power_arg2¹ - 1)))
//│ 			def length_₀_₀(ls⁹) = 
//│ 				case ls⁹ of {
//│ 					LH_C h⁹ t⁹ => (1 + length_₀_₀(t⁹))
//│ 					| LH_N  => 0}
//│ 		def take_lz_₀_₀(_lh_take_lz_arg1¹, _lh_take_lz_arg2¹) = 
//│ 			if (_lh_take_lz_arg1¹ == 0) then [LH_N] else 
//│ 				let _lh_matchIdent⁵ = force⁰(_lh_take_lz_arg2¹)
//│ 				in case _lh_matchIdent⁵ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]
//│ 					| _  => error⁰}
//│ 		def take_₀_₀(n², ls⁶) = 
//│ 			if (n² > 0) then case ls⁶ of {
//│ 				LH_C h⁶ t⁶ => [LH_C h⁶ take_₀_₀((n² - 1), t⁶)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ 		def take_₁_₀(n³, ls⁷) = 
//│ 			if (n³ > 0) then case ls⁷ of {
//│ 				LH_C h⁷ t⁷ => [LH_C h⁷ take_₁_₀((n³ - 1), t⁷)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C h⁵ filter_₀_₀(f³, t⁵)]: 475 --->
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => (1 + length_₀_₀(t⁹)) | LH_N  => 0}: 922
//│ [LH_N]: 482 --->
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => (1 + length_₀_₀(t⁹)) | LH_N  => 0}: 922
//│ [LH_C ((x⁴ mod _lh_infRand_arg1¹) + 1) f⁴((((97 * x⁴) + 11) % power_₀_₀(2, 7)))]: 515 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀_₀(filter_lz_₀_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 546
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)) | _  => error⁰}: 575
//│ [LH_N]: 528 --->
//│ 	case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 603
//│ [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀_₀(filter_lz_₀_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 544 --->
//│ 	case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 603
//│ [LH_N]: 555 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀_₀(filter_lz_₀_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 546
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)) | _  => error⁰}: 575
//│ [LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)]: 565 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀_₀(filter_lz_₀_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 546
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)) | _  => error⁰}: 575
//│ [LH_N]: 585 --->
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 666
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ take_₀_₀((n² - 1), t⁶)] | LH_N  => [LH_N]}: 687
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 727
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_₁_₀((n³ - 1), t⁷)] | LH_N  => [LH_N]}: 768
//│ [LH_N]: 590 --->
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 666
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ take_₀_₀((n² - 1), t⁶)] | LH_N  => [LH_N]}: 687
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 727
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_₁_₀((n³ - 1), t⁷)] | LH_N  => [LH_N]}: 768
//│ [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 601 --->
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 666
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ take_₀_₀((n² - 1), t⁶)] | LH_N  => [LH_N]}: 687
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 727
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_₁_₀((n³ - 1), t⁷)] | LH_N  => [LH_N]}: 768
//│ [LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 624 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => if f³(h⁵) then [LH_C h⁵ filter_₀_₀(f³, t⁵)] else filter_₀_₀(f³, t⁵) | LH_N  => [LH_N]}: 483
//│ [LH_N]: 625 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => if f³(h⁵) then [LH_C h⁵ filter_₀_₀(f³, t⁵)] else filter_₀_₀(f³, t⁵) | LH_N  => [LH_N]}: 483
//│ [LH_N]: 648 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 727
//│ [LH_C h⁶ take_₀_₀((n² - 1), t⁶)]: 685 --->
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => foldl_₀_₀(f⁵, f⁵(i¹, h⁸), t⁸) | LH_N  => i¹}: 786
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 834
//│ [LH_N]: 686 --->
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => foldl_₀_₀(f⁵, f⁵(i¹, h⁸), t⁸) | LH_N  => i¹}: 786
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 834
//│ [LH_N]: 688 --->
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => foldl_₀_₀(f⁵, f⁵(i¹, h⁸), t⁸) | LH_N  => i¹}: 786
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 834
//│ [LH_N]: 713 --->
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_₁_₀((n³ - 1), t⁷)] | LH_N  => [LH_N]}: 768
//│ [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 724 --->
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_₁_₀((n³ - 1), t⁷)] | LH_N  => [LH_N]}: 768
//│ [LH_C a² enumFromTo_₁_₀((a² + 1), b²)]: 745 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 626
//│ [LH_N]: 746 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 626
//│ [LH_C a³ enumFromTo_₀_₀((a³ + 1), b³)]: 820 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_₀_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 701
//│ [LH_N]: 821 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_₀_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 701
//│ ------------------
//│ case ls⁵ of {LH_C h⁵ t⁵ => if f³(h⁵) then [LH_C h⁵ filter_₀_₀(f³, t⁵)] else filter_₀_₀(f³, t⁵) | LH_N  => [LH_N]}: 483 --->
//│ 	[LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 624
//│ 	[LH_N]: 625
//│ case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀_₀(filter_lz_₀_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 546 --->
//│ 	[LH_C ((x⁴ mod _lh_infRand_arg1¹) + 1) f⁴((((97 * x⁴) + 11) % power_₀_₀(2, 7)))]: 515
//│ 	[LH_N]: 555
//│ 	[LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)]: 565
//│ case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)) | _  => error⁰}: 575 --->
//│ 	[LH_C ((x⁴ mod _lh_infRand_arg1¹) + 1) f⁴((((97 * x⁴) + 11) % power_₀_₀(2, 7)))]: 515
//│ 	[LH_N]: 555
//│ 	[LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀_₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)]: 565
//│ case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 603 --->
//│ 	[LH_N]: 528
//│ 	[LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀_₀(filter_lz_₀_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 544
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 626 --->
//│ 	[LH_C a² enumFromTo_₁_₀((a² + 1), b²)]: 745
//│ 	[LH_N]: 746
//│ case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_₀_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 666 --->
//│ 	[LH_N]: 585
//│ 	[LH_N]: 590
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 601
//│ case ls⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ take_₀_₀((n² - 1), t⁶)] | LH_N  => [LH_N]}: 687 --->
//│ 	[LH_N]: 585
//│ 	[LH_N]: 590
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 601
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_₀_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 701 --->
//│ 	[LH_C a³ enumFromTo_₀_₀((a³ + 1), b³)]: 820
//│ 	[LH_N]: 821
//│ case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_₀_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 727 --->
//│ 	[LH_N]: 585
//│ 	[LH_N]: 590
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 601
//│ 	[LH_N]: 648
//│ case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_₁_₀((n³ - 1), t⁷)] | LH_N  => [LH_N]}: 768 --->
//│ 	[LH_N]: 585
//│ 	[LH_N]: 590
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 601
//│ 	[LH_N]: 713
//│ 	[LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 724
//│ case ls⁸ of {LH_C h⁸ t⁸ => foldl_₀_₀(f⁵, f⁵(i¹, h⁸), t⁸) | LH_N  => i¹}: 786 --->
//│ 	[LH_C h⁶ take_₀_₀((n² - 1), t⁶)]: 685
//│ 	[LH_N]: 686
//│ 	[LH_N]: 688
//│ case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 834 --->
//│ 	[LH_C h⁶ take_₀_₀((n² - 1), t⁶)]: 685
//│ 	[LH_N]: 686
//│ 	[LH_N]: 688
//│ case ls⁹ of {LH_C h⁹ t⁹ => (1 + length_₀_₀(t⁹)) | LH_N  => 0}: 922 --->
//│ 	[LH_C h⁵ filter_₀_₀(f³, t⁵)]: 475
//│ 	[LH_N]: 482
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C h⁵ filter_₀_₀(f³, t⁵)]: 475 --->
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => (1 + length_₀_₀(t⁹)) | LH_N  => 0}: 922
//│ [LH_N]: 482 --->
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => (1 + length_₀_₀(t⁹)) | LH_N  => 0}: 922
//│ [LH_N]: 528 --->
//│ 	case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 603
//│ [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀_₀(filter_lz_₀_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 544 --->
//│ 	case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 603
//│ [LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 624 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => if f³(h⁵) then [LH_C h⁵ filter_₀_₀(f³, t⁵)] else filter_₀_₀(f³, t⁵) | LH_N  => [LH_N]}: 483
//│ [LH_N]: 625 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => if f³(h⁵) then [LH_C h⁵ filter_₀_₀(f³, t⁵)] else filter_₀_₀(f³, t⁵) | LH_N  => [LH_N]}: 483
//│ [LH_C a² enumFromTo_₁_₀((a² + 1), b²)]: 745 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 626
//│ [LH_N]: 746 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 626
//│ [LH_C a³ enumFromTo_₀_₀((a³ + 1), b³)]: 820 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_₀_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 701
//│ [LH_N]: 821 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_₀_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 701
//│ ------------------
//│ case ls⁵ of {LH_C h⁵ t⁵ => if f³(h⁵) then [LH_C h⁵ filter_₀_₀(f³, t⁵)] else filter_₀_₀(f³, t⁵) | LH_N  => [LH_N]}: 483 --->
//│ 	[LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 624
//│ 	[LH_N]: 625
//│ case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_₀_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 603 --->
//│ 	[LH_N]: 528
//│ 	[LH_C _lh_nub_lz_LH_C_0¹ nub_lz_₀_₀(filter_lz_₀_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 544
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand_₀_₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 626 --->
//│ 	[LH_C a² enumFromTo_₁_₀((a² + 1), b²)]: 745
//│ 	[LH_N]: 746
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_₀_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 701 --->
//│ 	[LH_C a³ enumFromTo_₀_₀((a³ + 1), b³)]: 820
//│ 	[LH_N]: 821
//│ case ls⁹ of {LH_C h⁹ t⁹ => (1 + length_₀_₀(t⁹)) | LH_N  => 0}: 922 --->
//│ 	[LH_C h⁵ filter_₀_₀(f³, t⁵)]: 475
//│ 	[LH_N]: 482
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testSecretary_nofib_₀_₀(primId⁰(0))
//│ def testSecretary_nofib_₀_₀(_lh_testSecretary_nofib_arg1²) = 
//│ 	let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁸))
//│ 	in _lh_listcomp_fun⁸(enumFromTo_₀_₀(35, 39))
//│ 	where
//│ 	def enumFromTo_₀_₀(a⁵, b⁵) = 
//│ 		if (a⁵ <= b⁵) then 
//│ 			let _lh_listcomp_fun_ls_t⁵ = enumFromTo_₀_₀((a⁵ + 1), b⁵)
//│ 			in let _lh_listcomp_fun_ls_h⁴ = a⁵
//│ 			in (fun _lh_listcomp_fun⁶ -> [LH_C sim_₀_₀(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁵)]) else (fun _lh_listcomp_fun⁷ -> [LH_N])
//│ 	def sim_₀_₀(_lh_sim_arg1²) = 
//│ 		let proc² = (fun rs² -> 
//│ 			let xs² = take_lz_₀_₀(100, nub_lz_₀_₀(rs²))
//│ 			in let best² = 100
//│ 			in let bestk² = maximum_₀_₀(take_₀_₀(_lh_sim_arg1², xs²))
//│ 			in let afterk² = dropWhile_₀_₀((fun x¹⁰ -> (x¹⁰ < bestk²)), drop_₀_₀(_lh_sim_arg1², xs²))
//│ 			in polyEq⁰([LH_C best² [LH_N]], take_₁_₀(1, afterk²)))
//│ 		in simulate_₀_₀(5000, 100, proc²)
//│ 		where
//│ 		def dropWhile_₀_₀(_lh_dropWhile_arg1², _lh_dropWhile_arg2²) = 
//│ 			case _lh_dropWhile_arg2² of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0¹) then dropWhile_₀_₀(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 				| _  => error⁰}
//│ 		def drop_₀_₀(_lh_drop_arg1², _lh_drop_arg2²) = 
//│ 			case _lh_drop_arg2² of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1² > 0) then drop_₀_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 				| _  => error⁰}
//│ 		def maximum_₀_₀(_lh_maximum_arg1²) = 
//│ 			foldl1_₀_₀((fun x⁸ -> (fun y⁴ -> if (x⁸ > y⁴) then x⁸ else y⁴)), _lh_maximum_arg1²)
//│ 			where
//│ 			def foldl1_₀_₀(_lh_foldl1_arg1², _lh_foldl1_arg2²) = 
//│ 				case _lh_foldl1_arg2² of {
//│ 					LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_₀_₀(_lh_foldl1_arg1², _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl_₀_₀(f⁷, i², ls¹¹) = 
//│ 					case ls¹¹ of {
//│ 						LH_C h⁸ t⁸ => foldl_₀_₀(f⁷, f⁷(i², h⁸), t⁸)
//│ 						| LH_N  => i²}
//│ 		def nub_lz_₀_₀(_lh_nub_lz_arg1²) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent⁸ = force⁰(_lh_nub_lz_arg1²)
//│ 				in case _lh_matchIdent⁸ of {
//│ 					LH_N  => (fun _lh_take_lz_arg1³ -> [LH_N])
//│ 					| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => 
//│ 						let _lh_take_lz_LH_C_1² = nub_lz_₀_₀(filter_lz_₀_₀((fun y⁵ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y⁵))), _lh_nub_lz_LH_C_1¹))
//│ 						in let _lh_take_lz_LH_C_0² = _lh_nub_lz_LH_C_0¹
//│ 						in (fun _lh_take_lz_arg1⁴ -> [LH_C _lh_take_lz_LH_C_0² take_lz_₀_₀((_lh_take_lz_arg1⁴ - 1), _lh_take_lz_LH_C_1²)])
//│ 					| _  => error⁰})
//│ 			where
//│ 			def filter_lz_₀_₀(_lh_filter_lz_arg1², _lh_filter_lz_arg2²) = 
//│ 				lazy⁰(
//│ 					let _lh_matchIdent⁷ = force⁰(_lh_filter_lz_arg2²)
//│ 					in case _lh_matchIdent⁷ of {
//│ 						LH_N  => [LH_N]
//│ 						| LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1²(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz_₀_₀(_lh_filter_lz_arg1², _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz_₀_₀(_lh_filter_lz_arg1², _lh_filter_lz_LH_C_1¹))
//│ 						| _  => error⁰})
//│ 		def simulate_₀_₀(_lh_simulate_arg1², _lh_simulate_arg2⁴, _lh_simulate_arg3⁴) = 
//│ 			(float_of_int⁰(length_₀_₀(filter_₀_₀((fun x¹¹ -> x¹¹), 
//│ 				let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁵ -> _lh_listcomp_fun_para⁵(_lh_listcomp_fun⁹, _lh_simulate_arg2⁴, _lh_simulate_arg3⁴))
//│ 				in _lh_listcomp_fun⁹(enumFromTo_₁_₀(1, _lh_simulate_arg1²))))) /. float_of_int⁰(_lh_simulate_arg1²))
//│ 			where
//│ 			def enumFromTo_₁_₀(a⁴, b⁴) = 
//│ 				if (a⁴ <= b⁴) then 
//│ 					let _lh_listcomp_fun_ls_t⁴ = enumFromTo_₁_₀((a⁴ + 1), b⁴)
//│ 					in (fun _lh_listcomp_fun⁴ -> (fun _lh_simulate_arg2² -> (fun _lh_simulate_arg3² -> 
//│ 						let t¹⁰ = _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)
//│ 						in let h¹⁰ = _lh_simulate_arg3²(infRand_₀_₀(_lh_simulate_arg2²))
//│ 						in (fun f⁸ -> if f⁸(h¹⁰) then 
//│ 							let t¹¹ = filter_₀_₀(f⁸, t¹⁰)
//│ 							in (fun _lh_dummy⁰ -> (1 + length_₀_₀(t¹¹))) else filter_₀_₀(f⁸, t¹⁰))))) else (fun _lh_listcomp_fun⁵ -> (fun _lh_simulate_arg2³ -> (fun _lh_simulate_arg3³ -> (fun f⁹ -> (fun _lh_dummy¹ -> 0)))))
//│ 			def filter_₀_₀(f⁶, ls¹⁰) = 
//│ 				ls¹⁰(f⁶)
//│ 			def infRand_₀_₀(_lh_infRand_arg1²) = 
//│ 				let f¹⁰ = (fun x⁹ -> lazy⁰([LH_C ((x⁹ mod _lh_infRand_arg1²) + 1) f¹⁰((((97 * x⁹) + 11) % power_₀_₀(2, 7)))]))
//│ 				in f¹⁰(37)
//│ 				where
//│ 				def power_₀_₀(_lh_power_arg1², _lh_power_arg2²) = 
//│ 					if (_lh_power_arg2² == 0) then 1 else (_lh_power_arg1² * power_₀_₀(_lh_power_arg1², (_lh_power_arg2² - 1)))
//│ 			def length_₀_₀(ls¹⁴) = 
//│ 				ls¹⁴(99)
//│ 		def take_lz_₀_₀(_lh_take_lz_arg1², _lh_take_lz_arg2²) = 
//│ 			if (_lh_take_lz_arg1² == 0) then [LH_N] else 
//│ 				let _lh_matchIdent⁶ = force⁰(_lh_take_lz_arg2²)
//│ 				in _lh_matchIdent⁶(_lh_take_lz_arg1²)
//│ 		def take_₀_₀(n⁴, ls¹²) = 
//│ 			if (n⁴ > 0) then case ls¹² of {
//│ 				LH_C h⁶ t⁶ => [LH_C h⁶ take_₀_₀((n⁴ - 1), t⁶)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ 		def take_₁_₀(n⁵, ls¹³) = 
//│ 			if (n⁵ > 0) then case ls¹³ of {
//│ 				LH_C h⁷ t⁷ => [LH_C h⁷ take_₁_₀((n⁵ - 1), t⁷)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
