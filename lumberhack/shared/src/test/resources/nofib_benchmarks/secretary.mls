:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
power a n = if n == 0 then 1 else a * (power a (n - 1))
dropWhile f [] = []
dropWhile f (h:t) = if (f h) then dropWhile f t else (h:t)
drop n []      = []
drop n (h:t)   = if n > 0 then (drop (n - 1) t) else t
foldl1 f (x:xs) = foldl f x xs
maximum xs = foldl1 (\x -> \y -> if x > y then x else y) xs
filter_lz p ls =
  lazy (case (force ls) of {
    [] -> [];
    (h:t) -> if (p h) then h:(filter_lz p t) else (force (filter_lz p t))
  })
nub_lz ls =
  lazy ( case (force ls) of {
    [] -> [];
    (x:xs) -> x:(nub_lz (filter_lz (\y -> not (polyEq x y)) xs))
  })
take_lz n ls =
  if n == 0 then
    []
  else case (force ls) of {
    [] -> [];
    (h:t) -> h:(take_lz (n - 1) t)
  }
infRand m =
  let f = \x -> lazy (((mod x m) + 1):(f (((97 * x) + 11) `mod` (power 2 7)))) in
  f 37
simulate n m proc = (float_of_int (length (filter (\x -> x) [ proc (infRand m) | seed <- [1..n] ]))) /. (float_of_int n)
sim k =
  let proc = \rs ->
              let xs     = take_lz 100 (nub_lz rs) in
              let best   = 100 in
              let bestk  = maximum (take k xs) in
              let afterk = dropWhile (\x -> x < bestk) (drop k xs) in
              polyEq [best] (take 1 afterk)
  in
  simulate 5000 100 proc
testSecretary_nofib dummy = [ sim k | k <- [35..39] ]
testSecretary_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testSecretary_nofib₀^1340(primId⁰(0))
//│ def dropWhile₀(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = case _lh_dropWhile_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀^1273(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 	| _  => error⁰}
//│ def drop₀(_lh_drop_arg1¹, _lh_drop_arg2¹) = case _lh_drop_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop₀^1134((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 	| _  => error⁰}
//│ def enumFromTo₀(a⁶, b³) = if (a⁶ <= b³) then [LH_C a⁶ enumFromTo₀^1177((a⁶ + 1), b³)] else [LH_N]
//│ def enumFromTo₁(a⁵, b²) = if (a⁵ <= b²) then [LH_C a⁵ enumFromTo₁^1113((a⁵ + 1), b²)] else [LH_N]
//│ def filter_lz₀(_lh_filter_lz_arg1¹, _lh_filter_lz_arg2¹) = lazy⁰(
//│ 	let _lh_matchIdent⁴ = force⁰(_lh_filter_lz_arg2¹)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀^1036(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz₀^1043(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹))
//│ 		| _  => error⁰})
//│ def filter₀(f¹⁴, ls¹⁸) = case ls¹⁸ of {
//│ 	LH_C h¹⁹ t²¹ => if f¹⁴(h¹⁹) then [LH_C h¹⁹ filter₀^960(f¹⁴, t²¹)] else filter₀^966(f¹⁴, t²¹)
//│ 	| LH_N  => [LH_N]}
//│ def foldl1₀(_lh_foldl1_arg1¹, _lh_foldl1_arg2¹) = case _lh_foldl1_arg2¹ of {
//│ 	LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl₀^1057(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def foldl₀(f¹², i³, ls¹⁷) = case ls¹⁷ of {
//│ 	LH_C h¹⁸ t²⁰ => foldl₀^882(f¹², f¹²(i³, h¹⁸), t²⁰)
//│ 	| LH_N  => i³}
//│ def infRand₀(_lh_infRand_arg1¹) = 
//│ 	let f¹³ = (fun x⁶ -> lazy⁰([LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹³((((97 * x⁶) + 11) % power₀^940(2, 7)))]))
//│ 	in f¹³(37)
//│ def length₀(ls²⁰) = case ls²⁰ of {
//│ 	LH_C h²¹ t²³ => (1 + length₀^1210(t²³))
//│ 	| LH_N  => 0}
//│ def maximum₀(_lh_maximum_arg1¹) = foldl1₀^1191((fun x⁸ -> (fun y³ -> if (x⁸ > y³) then x⁸ else y³)), _lh_maximum_arg1¹)
//│ def nub_lz₀(_lh_nub_lz_arg1¹) = lazy⁰(
//│ 	let _lh_matchIdent³ = force⁰(_lh_nub_lz_arg1¹)
//│ 	in case _lh_matchIdent³ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀^1006(filter_lz₀^1007((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]
//│ 		| _  => error⁰})
//│ def power₀(_lh_power_arg1¹, _lh_power_arg2¹) = if (_lh_power_arg2¹ == 0) then 1 else (_lh_power_arg1¹ * power₀^1158(_lh_power_arg1¹, (_lh_power_arg2¹ - 1)))
//│ def simulate₀(_lh_simulate_arg1¹, _lh_simulate_arg2¹, _lh_simulate_arg3¹) = (float_of_int⁰(length₀^1070(filter₀^1071((fun x⁷ -> x⁷), 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_simulate_arg3¹(infRand₀^1077(_lh_simulate_arg2¹)) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun³(enumFromTo₁^1089(1, _lh_simulate_arg1¹))))) /. float_of_int⁰(_lh_simulate_arg1¹))
//│ def sim₀(_lh_sim_arg1¹) = 
//│ 	let proc¹ = (fun rs¹ -> 
//│ 		let xs¹⁰ = take_lz₀^1286(100, nub_lz₀^1289(rs¹))
//│ 		in let best¹ = 100
//│ 		in let bestk¹ = maximum₀^1294(take₀^1295(_lh_sim_arg1¹, xs¹⁰))
//│ 		in let afterk¹ = dropWhile₀^1301((fun x⁹ -> (x⁹ < bestk¹)), drop₀^1309(_lh_sim_arg1¹, xs¹⁰))
//│ 		in polyEq⁰([LH_C best¹ [LH_N]], take₁^1320(1, afterk¹)))
//│ 	in simulate₀^1331(5000, 100, proc¹)
//│ def take_lz₀(_lh_take_lz_arg1¹, _lh_take_lz_arg2¹) = if (_lh_take_lz_arg1¹ == 0) then [LH_N] else 
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_take_lz_arg2¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz₀^1252((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]
//│ 		| _  => error⁰}
//│ def take₀(n⁴, ls²¹) = if (n⁴ > 0) then case ls²¹ of {
//│ 	LH_C h²² t²⁴ => [LH_C h²² take₀^1224((n⁴ - 1), t²⁴)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take₁(n³, ls¹⁹) = if (n³ > 0) then case ls¹⁹ of {
//│ 	LH_C h²⁰ t²² => [LH_C h²⁰ take₁^983((n³ - 1), t²²)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testSecretary_nofib₀(_lh_testSecretary_nofib_arg1¹) = 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C sim₀^899(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(enumFromTo₀^910(35, 39))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec dropWhile_d0 _lh_dropWhile_arg1_1 _lh_dropWhile_arg2_1 =
//│ 		  (match _lh_dropWhile_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_dropWhile_LH_C_0_1, _lh_dropWhile_LH_C_1_1) -> 
//│ 		      (if (_lh_dropWhile_arg1_1 _lh_dropWhile_LH_C_0_1) then
//│ 		        ((dropWhile_d0 _lh_dropWhile_arg1_1) _lh_dropWhile_LH_C_1_1)
//│ 		      else
//│ 		        (`LH_C(_lh_dropWhile_LH_C_0_1, _lh_dropWhile_LH_C_1_1)))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and drop_d0 _lh_drop_arg1_1 _lh_drop_arg2_1 =
//│ 		  (match _lh_drop_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_drop_LH_C_0_1, _lh_drop_LH_C_1_1) -> 
//│ 		      (if (_lh_drop_arg1_1 > 0) then
//│ 		        ((drop_d0 (_lh_drop_arg1_1 - 1)) _lh_drop_LH_C_1_1)
//│ 		      else
//│ 		        _lh_drop_LH_C_1_1)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and enumFromTo_d0 a_6 b_3 =
//│ 		  (if (a_6 <= b_3) then
//│ 		    (`LH_C(a_6, ((enumFromTo_d0 (a_6 + 1)) b_3)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFromTo_d1 a_5 b_2 =
//│ 		  (if (a_5 <= b_2) then
//│ 		    (`LH_C(a_5, ((enumFromTo_d1 (a_5 + 1)) b_2)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and filter_lz_d0 _lh_filter_lz_arg1_1 _lh_filter_lz_arg2_1 =
//│ 		  (lazy (let rec _lh_matchIdent_4 = (Lazy.force _lh_filter_lz_arg2_1) in
//│ 		    (match _lh_matchIdent_4 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_filter_lz_LH_C_0_1, _lh_filter_lz_LH_C_1_1) -> 
//│ 		        (if (_lh_filter_lz_arg1_1 _lh_filter_lz_LH_C_0_1) then
//│ 		          (`LH_C(_lh_filter_lz_LH_C_0_1, ((filter_lz_d0 _lh_filter_lz_arg1_1) _lh_filter_lz_LH_C_1_1)))
//│ 		        else
//│ 		          (Lazy.force ((filter_lz_d0 _lh_filter_lz_arg1_1) _lh_filter_lz_LH_C_1_1)))
//│ 		      | _ -> 
//│ 		        (failwith "error"))))
//│ 		and filter_d0 f_1_4 ls_1_8 =
//│ 		  (match ls_1_8 with
//│ 		    | `LH_C(h_1_9, t_2_1) -> 
//│ 		      (if (f_1_4 h_1_9) then
//│ 		        (`LH_C(h_1_9, ((filter_d0 f_1_4) t_2_1)))
//│ 		      else
//│ 		        ((filter_d0 f_1_4) t_2_1))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and foldl1_d0 _lh_foldl1_arg1_1 _lh_foldl1_arg2_1 =
//│ 		  (match _lh_foldl1_arg2_1 with
//│ 		    | `LH_C(_lh_foldl1_LH_C_0_1, _lh_foldl1_LH_C_1_1) -> 
//│ 		      (((foldl_d0 _lh_foldl1_arg1_1) _lh_foldl1_LH_C_0_1) _lh_foldl1_LH_C_1_1)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and foldl_d0 f_1_2 i_3 ls_1_7 =
//│ 		  (match ls_1_7 with
//│ 		    | `LH_C(h_1_8, t_2_0) -> 
//│ 		      (((foldl_d0 f_1_2) ((f_1_2 i_3) h_1_8)) t_2_0)
//│ 		    | `LH_N -> 
//│ 		      i_3)
//│ 		and infRand_d0 _lh_infRand_arg1_1 =
//│ 		  (let rec f_1_3 = (fun x_6 -> 
//│ 		    (lazy (`LH_C(((x_6 mod _lh_infRand_arg1_1) + 1), (f_1_3 (((97 * x_6) + 11) mod ((power_d0 2) 7))))))) in
//│ 		    (f_1_3 37))
//│ 		and length_d0 ls_2_0 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (1 + (length_d0 t_2_3))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and maximum_d0 _lh_maximum_arg1_1 =
//│ 		  ((foldl1_d0 (fun x_8 y_3 -> 
//│ 		    (if (x_8 > y_3) then
//│ 		      x_8
//│ 		    else
//│ 		      y_3))) _lh_maximum_arg1_1)
//│ 		and nub_lz_d0 _lh_nub_lz_arg1_1 =
//│ 		  (lazy (let rec _lh_matchIdent_3 = (Lazy.force _lh_nub_lz_arg1_1) in
//│ 		    (match _lh_matchIdent_3 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_nub_lz_LH_C_0_1, _lh_nub_lz_LH_C_1_1) -> 
//│ 		        (`LH_C(_lh_nub_lz_LH_C_0_1, (nub_lz_d0 ((filter_lz_d0 (fun y_2 -> 
//│ 		          (not (_lh_nub_lz_LH_C_0_1 = y_2)))) _lh_nub_lz_LH_C_1_1))))
//│ 		      | _ -> 
//│ 		        (failwith "error"))))
//│ 		and power_d0 _lh_power_arg1_1 _lh_power_arg2_1 =
//│ 		  (if (_lh_power_arg2_1 = 0) then
//│ 		    1
//│ 		  else
//│ 		    (_lh_power_arg1_1 * ((power_d0 _lh_power_arg1_1) (_lh_power_arg2_1 - 1))))
//│ 		and simulate_d0 _lh_simulate_arg1_1 _lh_simulate_arg2_1 _lh_simulate_arg3_1 =
//│ 		  ((float_of_int (length_d0 ((filter_d0 (fun x_7 -> 
//│ 		    x_7)) (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		    (match _lh_listcomp_fun_para_3 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		        (`LH_C((_lh_simulate_arg3_1 (infRand_d0 _lh_simulate_arg2_1)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_3 ((enumFromTo_d1 1) _lh_simulate_arg1_1)))))) /. (float_of_int _lh_simulate_arg1_1))
//│ 		and sim_d0 _lh_sim_arg1_1 =
//│ 		  (let rec proc_1 = (fun rs_1 -> 
//│ 		    (let rec xs_1_0 = ((take_lz_d0 100) (nub_lz_d0 rs_1)) in
//│ 		      (let rec best_1 = 100 in
//│ 		        (let rec bestk_1 = (maximum_d0 ((take_d0 _lh_sim_arg1_1) xs_1_0)) in
//│ 		          (let rec afterk_1 = ((dropWhile_d0 (fun x_9 -> 
//│ 		            (x_9 < bestk_1))) ((drop_d0 _lh_sim_arg1_1) xs_1_0)) in
//│ 		            ((`LH_C(best_1, (`LH_N))) = ((take_d1 1) afterk_1))))))) in
//│ 		    (((simulate_d0 5000) 100) proc_1))
//│ 		and take_lz_d0 _lh_take_lz_arg1_1 _lh_take_lz_arg2_1 =
//│ 		  (if (_lh_take_lz_arg1_1 = 0) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (let rec _lh_matchIdent_5 = (Lazy.force _lh_take_lz_arg2_1) in
//│ 		      (match _lh_matchIdent_5 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_N)
//│ 		        | `LH_C(_lh_take_lz_LH_C_0_1, _lh_take_lz_LH_C_1_1) -> 
//│ 		          (`LH_C(_lh_take_lz_LH_C_0_1, ((take_lz_d0 (_lh_take_lz_arg1_1 - 1)) _lh_take_lz_LH_C_1_1)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		and take_d0 n_4 ls_2_1 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match ls_2_1 with
//│ 		      | `LH_C(h_2_2, t_2_4) -> 
//│ 		        (`LH_C(h_2_2, ((take_d0 (n_4 - 1)) t_2_4)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take_d1 n_3 ls_1_9 =
//│ 		  (if (n_3 > 0) then
//│ 		    (match ls_1_9 with
//│ 		      | `LH_C(h_2_0, t_2_2) -> 
//│ 		        (`LH_C(h_2_0, ((take_d1 (n_3 - 1)) t_2_2)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testSecretary_nofib_d0 _lh_testSecretary_nofib_arg1_1 =
//│ 		  (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		    (match _lh_listcomp_fun_para_2 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		        (`LH_C((sim_d0 _lh_listcomp_fun_ls_h_2), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_2 ((enumFromTo_d0 35) 39)));;
//│ 		(testSecretary_nofib_d0 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testSecretary_nofib₀^1340] (hopeless to continue)
//│ 	[testSecretary_nofib₀^1340 · enumFromTo₀^910] (using original def)
//│ 		[testSecretary_nofib₀^1340 · enumFromTo₀^910 · enumFromTo₀^1177] ---> [testSecretary_nofib₀^1340 · enumFromTo₀^910] (using original def)
//│ 	[testSecretary_nofib₀^1340 · sim₀^899] (using original def)
//│ 		[testSecretary_nofib₀^1340 · sim₀^899 · dropWhile₀^1301] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · dropWhile₀^1301 · dropWhile₀^1273] ---> [testSecretary_nofib₀^1340 · sim₀^899 · dropWhile₀^1301] (using original def)
//│ 		[testSecretary_nofib₀^1340 · sim₀^899 · drop₀^1309] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · drop₀^1309 · drop₀^1134] ---> [testSecretary_nofib₀^1340 · sim₀^899 · drop₀^1309] (using original def)
//│ 		[testSecretary_nofib₀^1340 · sim₀^899 · maximum₀^1294] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · maximum₀^1294 · foldl1₀^1191] (using original def)
//│ 				[testSecretary_nofib₀^1340 · sim₀^899 · maximum₀^1294 · foldl1₀^1191 · foldl₀^1057] (using original def)
//│ 					[testSecretary_nofib₀^1340 · sim₀^899 · maximum₀^1294 · foldl1₀^1191 · foldl₀^1057 · foldl₀^882] ---> [testSecretary_nofib₀^1340 · sim₀^899 · maximum₀^1294 · foldl1₀^1191 · foldl₀^1057] (using original def)
//│ 		[testSecretary_nofib₀^1340 · sim₀^899 · nub_lz₀^1289] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · nub_lz₀^1289 · filter_lz₀^1007] (using original def)
//│ 				[testSecretary_nofib₀^1340 · sim₀^899 · nub_lz₀^1289 · filter_lz₀^1007 · filter_lz₀^1036] ---> [testSecretary_nofib₀^1340 · sim₀^899 · nub_lz₀^1289 · filter_lz₀^1007] (using original def)
//│ 				[testSecretary_nofib₀^1340 · sim₀^899 · nub_lz₀^1289 · filter_lz₀^1007 · filter_lz₀^1043] ---> [testSecretary_nofib₀^1340 · sim₀^899 · nub_lz₀^1289 · filter_lz₀^1007] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · nub_lz₀^1289 · nub_lz₀^1006] ---> [testSecretary_nofib₀^1340 · sim₀^899 · nub_lz₀^1289] (using original def)
//│ 		[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · enumFromTo₁^1089] (using original def)
//│ 				[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · enumFromTo₁^1089 · enumFromTo₁^1113] ---> [testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · enumFromTo₁^1089] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · filter₀^1071] (using original def)
//│ 				[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · filter₀^1071 · filter₀^960] ---> [testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · filter₀^1071] (using original def)
//│ 				[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · filter₀^1071 · filter₀^966] ---> [testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · filter₀^1071] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · infRand₀^1077] (using original def)
//│ 				[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · infRand₀^1077 · power₀^940] (using original def)
//│ 					[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · infRand₀^1077 · power₀^940 · power₀^1158] ---> [testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · infRand₀^1077 · power₀^940] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · length₀^1070] (using original def)
//│ 				[testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · length₀^1070 · length₀^1210] ---> [testSecretary_nofib₀^1340 · sim₀^899 · simulate₀^1331 · length₀^1070] (using original def)
//│ 		[testSecretary_nofib₀^1340 · sim₀^899 · take_lz₀^1286] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · take_lz₀^1286 · take_lz₀^1252] ---> [testSecretary_nofib₀^1340 · sim₀^899 · take_lz₀^1286] (using original def)
//│ 		[testSecretary_nofib₀^1340 · sim₀^899 · take₀^1295] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · take₀^1295 · take₀^1224] ---> [testSecretary_nofib₀^1340 · sim₀^899 · take₀^1295] (using original def)
//│ 		[testSecretary_nofib₀^1340 · sim₀^899 · take₁^1320] (using original def)
//│ 			[testSecretary_nofib₀^1340 · sim₀^899 · take₁^1320 · take₁^983] ---> [testSecretary_nofib₀^1340 · sim₀^899 · take₁^1320] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testSecretary_nofib₀₀(primId⁰(0))
//│ def testSecretary_nofib₀₀(_lh_testSecretary_nofib_arg1¹) = 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim₀₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun³(enumFromTo₀₀(35, 39))
//│ 	where
//│ 	def enumFromTo₀₀(a², b²) = 
//│ 		if (a² <= b²) then [LH_C a² enumFromTo₀₀((a² + 1), b²)] else [LH_N]
//│ 	def sim₀₀(_lh_sim_arg1¹) = 
//│ 		let proc¹ = (fun rs¹ -> 
//│ 			let xs¹ = take_lz₀₀(100, nub_lz₀₀(rs¹))
//│ 			in let best¹ = 100
//│ 			in let bestk¹ = maximum₀₀(take₀₀(_lh_sim_arg1¹, xs¹))
//│ 			in let afterk¹ = dropWhile₀₀((fun x⁷ -> (x⁷ < bestk¹)), drop₀₀(_lh_sim_arg1¹, xs¹))
//│ 			in polyEq⁰([LH_C best¹ [LH_N]], take₁₀(1, afterk¹)))
//│ 		in simulate₀₀(5000, 100, proc¹)
//│ 		where
//│ 		def dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = 
//│ 			case _lh_dropWhile_arg2¹ of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 				| _  => error⁰}
//│ 		def drop₀₀(_lh_drop_arg1¹, _lh_drop_arg2¹) = 
//│ 			case _lh_drop_arg2¹ of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop₀₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 				| _  => error⁰}
//│ 		def maximum₀₀(_lh_maximum_arg1¹) = 
//│ 			foldl1₀₀((fun x⁴ -> (fun y² -> if (x⁴ > y²) then x⁴ else y²)), _lh_maximum_arg1¹)
//│ 			where
//│ 			def foldl1₀₀(_lh_foldl1_arg1¹, _lh_foldl1_arg2¹) = 
//│ 				case _lh_foldl1_arg2¹ of {
//│ 					LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl₀₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl₀₀(f⁴, i¹, ls⁷) = 
//│ 					case ls⁷ of {
//│ 						LH_C h⁷ t⁷ => foldl₀₀(f⁴, f⁴(i¹, h⁷), t⁷)
//│ 						| LH_N  => i¹}
//│ 		def nub_lz₀₀(_lh_nub_lz_arg1¹) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent⁵ = force⁰(_lh_nub_lz_arg1¹)
//│ 				in case _lh_matchIdent⁵ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀₀(filter_lz₀₀((fun y³ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y³))), _lh_nub_lz_LH_C_1¹))]
//│ 					| _  => error⁰})
//│ 			where
//│ 			def filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_arg2¹) = 
//│ 				lazy⁰(
//│ 					let _lh_matchIdent³ = force⁰(_lh_filter_lz_arg2¹)
//│ 					in case _lh_matchIdent³ of {
//│ 						LH_N  => [LH_N]
//│ 						| LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹))
//│ 						| _  => error⁰})
//│ 		def simulate₀₀(_lh_simulate_arg1¹, _lh_simulate_arg2¹, _lh_simulate_arg3¹) = 
//│ 			(float_of_int⁰(length₀₀(filter₀₀((fun x⁶ -> x⁶), 
//│ 				let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 					LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 					| LH_N  => [LH_N]})
//│ 				in _lh_listcomp_fun²(enumFromTo₁₀(1, _lh_simulate_arg1¹))))) /. float_of_int⁰(_lh_simulate_arg1¹))
//│ 			where
//│ 			def enumFromTo₁₀(a³, b³) = 
//│ 				if (a³ <= b³) then [LH_C a³ enumFromTo₁₀((a³ + 1), b³)] else [LH_N]
//│ 			def filter₀₀(f⁵, ls⁸) = 
//│ 				case ls⁸ of {
//│ 					LH_C h⁸ t⁸ => if f⁵(h⁸) then [LH_C h⁸ filter₀₀(f⁵, t⁸)] else filter₀₀(f⁵, t⁸)
//│ 					| LH_N  => [LH_N]}
//│ 			def infRand₀₀(_lh_infRand_arg1¹) = 
//│ 				let f³ = (fun x⁵ -> lazy⁰([LH_C ((x⁵ mod _lh_infRand_arg1¹) + 1) f³((((97 * x⁵) + 11) % power₀₀(2, 7)))]))
//│ 				in f³(37)
//│ 				where
//│ 				def power₀₀(_lh_power_arg1¹, _lh_power_arg2¹) = 
//│ 					if (_lh_power_arg2¹ == 0) then 1 else (_lh_power_arg1¹ * power₀₀(_lh_power_arg1¹, (_lh_power_arg2¹ - 1)))
//│ 			def length₀₀(ls⁹) = 
//│ 				case ls⁹ of {
//│ 					LH_C h⁹ t⁹ => (1 + length₀₀(t⁹))
//│ 					| LH_N  => 0}
//│ 		def take_lz₀₀(_lh_take_lz_arg1¹, _lh_take_lz_arg2¹) = 
//│ 			if (_lh_take_lz_arg1¹ == 0) then [LH_N] else 
//│ 				let _lh_matchIdent⁴ = force⁰(_lh_take_lz_arg2¹)
//│ 				in case _lh_matchIdent⁴ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]
//│ 					| _  => error⁰}
//│ 		def take₀₀(n³, ls⁶) = 
//│ 			if (n³ > 0) then case ls⁶ of {
//│ 				LH_C h⁶ t⁶ => [LH_C h⁶ take₀₀((n³ - 1), t⁶)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ 		def take₁₀(n², ls⁵) = 
//│ 			if (n² > 0) then case ls⁵ of {
//│ 				LH_C h⁵ t⁵ => [LH_C h⁵ take₁₀((n² - 1), t⁵)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 489 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ take₁₀((n² - 1), t⁵)] | LH_N  => [LH_N]}: 483
//│ [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 500 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ take₁₀((n² - 1), t⁵)] | LH_N  => [LH_N]}: 483
//│ [LH_N]: 511 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)) | _  => error⁰}: 531
//│ 	case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀₀(filter_lz₀₀((fun y³ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y³))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 792
//│ [LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)]: 521 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)) | _  => error⁰}: 531
//│ 	case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀₀(filter_lz₀₀((fun y³ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y³))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 792
//│ [LH_C h⁶ take₀₀((n³ - 1), t⁶)]: 552 --->
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl₀₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 668
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => foldl₀₀(f⁴, f⁴(i¹, h⁷), t⁷) | LH_N  => i¹}: 706
//│ [LH_N]: 553 --->
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl₀₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 668
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => foldl₀₀(f⁴, f⁴(i¹, h⁷), t⁷) | LH_N  => i¹}: 706
//│ [LH_N]: 555 --->
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl₀₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 668
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => foldl₀₀(f⁴, f⁴(i¹, h⁷), t⁷) | LH_N  => i¹}: 706
//│ [LH_N]: 564 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ take₁₀((n² - 1), t⁵)] | LH_N  => [LH_N]}: 483
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 503
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ take₀₀((n³ - 1), t⁶)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop₀₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 690
//│ [LH_N]: 569 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ take₁₀((n² - 1), t⁵)] | LH_N  => [LH_N]}: 483
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 503
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ take₀₀((n³ - 1), t⁶)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop₀₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 690
//│ [LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 580 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ take₁₀((n² - 1), t⁵)] | LH_N  => [LH_N]}: 483
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 503
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ take₀₀((n³ - 1), t⁶)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop₀₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 690
//│ [LH_C ((x⁵ mod _lh_infRand_arg1¹) + 1) f³((((97 * x⁵) + 11) % power₀₀(2, 7)))]: 631 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)) | _  => error⁰}: 531
//│ 	case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀₀(filter_lz₀₀((fun y³ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y³))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 792
//│ [LH_C a² enumFromTo₀₀((a² + 1), b²)]: 654 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim₀₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 805
//│ [LH_N]: 655 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim₀₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 805
//│ [LH_N]: 672 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 503
//│ [LH_C a³ enumFromTo₁₀((a³ + 1), b³)]: 725 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 748
//│ [LH_N]: 726 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 748
//│ [LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 746 --->
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => if f⁵(h⁸) then [LH_C h⁸ filter₀₀(f⁵, t⁸)] else filter₀₀(f⁵, t⁸) | LH_N  => [LH_N]}: 834
//│ [LH_N]: 747 --->
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => if f⁵(h⁸) then [LH_C h⁸ filter₀₀(f⁵, t⁸)] else filter₀₀(f⁵, t⁸) | LH_N  => [LH_N]}: 834
//│ [LH_N]: 774 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 582
//│ [LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀₀(filter_lz₀₀((fun y³ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y³))), _lh_nub_lz_LH_C_1¹))]: 790 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 582
//│ [LH_C h⁸ filter₀₀(f⁵, t⁸)]: 826 --->
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => (1 + length₀₀(t⁹)) | LH_N  => 0}: 922
//│ [LH_N]: 833 --->
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => (1 + length₀₀(t⁹)) | LH_N  => 0}: 922
//│ ------------------
//│ case ls⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ take₁₀((n² - 1), t⁵)] | LH_N  => [LH_N]}: 483 --->
//│ 	[LH_N]: 489
//│ 	[LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 500
//│ 	[LH_N]: 564
//│ 	[LH_N]: 569
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 580
//│ case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 503 --->
//│ 	[LH_N]: 564
//│ 	[LH_N]: 569
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 580
//│ 	[LH_N]: 672
//│ case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1¹(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)) | _  => error⁰}: 531 --->
//│ 	[LH_N]: 511
//│ 	[LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)]: 521
//│ 	[LH_C ((x⁵ mod _lh_infRand_arg1¹) + 1) f³((((97 * x⁵) + 11) % power₀₀(2, 7)))]: 631
//│ case ls⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ take₀₀((n³ - 1), t⁶)] | LH_N  => [LH_N]}: 554 --->
//│ 	[LH_N]: 564
//│ 	[LH_N]: 569
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 580
//│ case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 582 --->
//│ 	[LH_N]: 774
//│ 	[LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀₀(filter_lz₀₀((fun y³ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y³))), _lh_nub_lz_LH_C_1¹))]: 790
//│ case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl₀₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 668 --->
//│ 	[LH_C h⁶ take₀₀((n³ - 1), t⁶)]: 552
//│ 	[LH_N]: 553
//│ 	[LH_N]: 555
//│ case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop₀₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 690 --->
//│ 	[LH_N]: 564
//│ 	[LH_N]: 569
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 580
//│ case ls⁷ of {LH_C h⁷ t⁷ => foldl₀₀(f⁴, f⁴(i¹, h⁷), t⁷) | LH_N  => i¹}: 706 --->
//│ 	[LH_C h⁶ take₀₀((n³ - 1), t⁶)]: 552
//│ 	[LH_N]: 553
//│ 	[LH_N]: 555
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 748 --->
//│ 	[LH_C a³ enumFromTo₁₀((a³ + 1), b³)]: 725
//│ 	[LH_N]: 726
//│ case _lh_matchIdent⁵ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀₀(filter_lz₀₀((fun y³ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y³))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 792 --->
//│ 	[LH_N]: 511
//│ 	[LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀₀(_lh_filter_lz_arg1¹, _lh_filter_lz_LH_C_1¹)]: 521
//│ 	[LH_C ((x⁵ mod _lh_infRand_arg1¹) + 1) f³((((97 * x⁵) + 11) % power₀₀(2, 7)))]: 631
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim₀₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 805 --->
//│ 	[LH_C a² enumFromTo₀₀((a² + 1), b²)]: 654
//│ 	[LH_N]: 655
//│ case ls⁸ of {LH_C h⁸ t⁸ => if f⁵(h⁸) then [LH_C h⁸ filter₀₀(f⁵, t⁸)] else filter₀₀(f⁵, t⁸) | LH_N  => [LH_N]}: 834 --->
//│ 	[LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 746
//│ 	[LH_N]: 747
//│ case ls⁹ of {LH_C h⁹ t⁹ => (1 + length₀₀(t⁹)) | LH_N  => 0}: 922 --->
//│ 	[LH_C h⁸ filter₀₀(f⁵, t⁸)]: 826
//│ 	[LH_N]: 833
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C a² enumFromTo₀₀((a² + 1), b²)]: 654 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim₀₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 805
//│ [LH_N]: 655 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim₀₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 805
//│ [LH_C a³ enumFromTo₁₀((a³ + 1), b³)]: 725 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 748
//│ [LH_N]: 726 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 748
//│ [LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 746 --->
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => if f⁵(h⁸) then [LH_C h⁸ filter₀₀(f⁵, t⁸)] else filter₀₀(f⁵, t⁸) | LH_N  => [LH_N]}: 834
//│ [LH_N]: 747 --->
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => if f⁵(h⁸) then [LH_C h⁸ filter₀₀(f⁵, t⁸)] else filter₀₀(f⁵, t⁸) | LH_N  => [LH_N]}: 834
//│ [LH_N]: 774 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 582
//│ [LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀₀(filter_lz₀₀((fun y³ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y³))), _lh_nub_lz_LH_C_1¹))]: 790 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 582
//│ [LH_C h⁸ filter₀₀(f⁵, t⁸)]: 826 --->
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => (1 + length₀₀(t⁹)) | LH_N  => 0}: 922
//│ [LH_N]: 833 --->
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => (1 + length₀₀(t⁹)) | LH_N  => 0}: 922
//│ ------------------
//│ case _lh_matchIdent⁴ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz₀₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 582 --->
//│ 	[LH_N]: 774
//│ 	[LH_C _lh_nub_lz_LH_C_0¹ nub_lz₀₀(filter_lz₀₀((fun y³ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y³))), _lh_nub_lz_LH_C_1¹))]: 790
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 748 --->
//│ 	[LH_C a³ enumFromTo₁₀((a³ + 1), b³)]: 725
//│ 	[LH_N]: 726
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim₀₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 805 --->
//│ 	[LH_C a² enumFromTo₀₀((a² + 1), b²)]: 654
//│ 	[LH_N]: 655
//│ case ls⁸ of {LH_C h⁸ t⁸ => if f⁵(h⁸) then [LH_C h⁸ filter₀₀(f⁵, t⁸)] else filter₀₀(f⁵, t⁸) | LH_N  => [LH_N]}: 834 --->
//│ 	[LH_C _lh_simulate_arg3¹(infRand₀₀(_lh_simulate_arg2¹)) _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 746
//│ 	[LH_N]: 747
//│ case ls⁹ of {LH_C h⁹ t⁹ => (1 + length₀₀(t⁹)) | LH_N  => 0}: 922 --->
//│ 	[LH_C h⁸ filter₀₀(f⁵, t⁸)]: 826
//│ 	[LH_N]: 833
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testSecretary_nofib₀₀(primId⁰(0))
//│ def testSecretary_nofib₀₀(_lh_testSecretary_nofib_arg1²) = 
//│ 	let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁵ -> _lh_listcomp_fun_para⁵(_lh_listcomp_fun⁷))
//│ 	in _lh_listcomp_fun⁷(enumFromTo₀₀(35, 39))
//│ 	where
//│ 	def enumFromTo₀₀(a⁴, b⁴) = 
//│ 		if (a⁴ <= b⁴) then 
//│ 			let _lh_listcomp_fun_ls_t⁴ = enumFromTo₀₀((a⁴ + 1), b⁴)
//│ 			in let _lh_listcomp_fun_ls_h⁴ = a⁴
//│ 			in (fun _lh_listcomp_fun⁴ -> [LH_C sim₀₀(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]) else (fun _lh_listcomp_fun⁵ -> [LH_N])
//│ 	def sim₀₀(_lh_sim_arg1²) = 
//│ 		let proc² = (fun rs² -> 
//│ 			let xs² = take_lz₀₀(100, nub_lz₀₀(rs²))
//│ 			in let best² = 100
//│ 			in let bestk² = maximum₀₀(take₀₀(_lh_sim_arg1², xs²))
//│ 			in let afterk² = dropWhile₀₀((fun x⁸ -> (x⁸ < bestk²)), drop₀₀(_lh_sim_arg1², xs²))
//│ 			in polyEq⁰([LH_C best² [LH_N]], take₁₀(1, afterk²)))
//│ 		in simulate₀₀(5000, 100, proc²)
//│ 		where
//│ 		def dropWhile₀₀(_lh_dropWhile_arg1², _lh_dropWhile_arg2²) = 
//│ 			case _lh_dropWhile_arg2² of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0¹) then dropWhile₀₀(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 				| _  => error⁰}
//│ 		def drop₀₀(_lh_drop_arg1², _lh_drop_arg2²) = 
//│ 			case _lh_drop_arg2² of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1² > 0) then drop₀₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 				| _  => error⁰}
//│ 		def maximum₀₀(_lh_maximum_arg1²) = 
//│ 			foldl1₀₀((fun x¹⁰ -> (fun y⁴ -> if (x¹⁰ > y⁴) then x¹⁰ else y⁴)), _lh_maximum_arg1²)
//│ 			where
//│ 			def foldl1₀₀(_lh_foldl1_arg1², _lh_foldl1_arg2²) = 
//│ 				case _lh_foldl1_arg2² of {
//│ 					LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl₀₀(_lh_foldl1_arg1², _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl₀₀(f⁶, i², ls¹¹) = 
//│ 					case ls¹¹ of {
//│ 						LH_C h⁷ t⁷ => foldl₀₀(f⁶, f⁶(i², h⁷), t⁷)
//│ 						| LH_N  => i²}
//│ 		def nub_lz₀₀(_lh_nub_lz_arg1²) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent⁷ = force⁰(_lh_nub_lz_arg1²)
//│ 				in case _lh_matchIdent⁷ of {
//│ 					LH_N  => (fun _lh_take_lz_arg1³ -> [LH_N])
//│ 					| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => 
//│ 						let _lh_take_lz_LH_C_1² = nub_lz₀₀(filter_lz₀₀((fun y⁵ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y⁵))), _lh_nub_lz_LH_C_1¹))
//│ 						in let _lh_take_lz_LH_C_0² = _lh_nub_lz_LH_C_0¹
//│ 						in (fun _lh_take_lz_arg1⁴ -> [LH_C _lh_take_lz_LH_C_0² take_lz₀₀((_lh_take_lz_arg1⁴ - 1), _lh_take_lz_LH_C_1²)])
//│ 					| _  => error⁰})
//│ 			where
//│ 			def filter_lz₀₀(_lh_filter_lz_arg1², _lh_filter_lz_arg2²) = 
//│ 				lazy⁰(
//│ 					let _lh_matchIdent⁸ = force⁰(_lh_filter_lz_arg2²)
//│ 					in case _lh_matchIdent⁸ of {
//│ 						LH_N  => [LH_N]
//│ 						| LH_C _lh_filter_lz_LH_C_0¹ _lh_filter_lz_LH_C_1¹ => if _lh_filter_lz_arg1²(_lh_filter_lz_LH_C_0¹) then [LH_C _lh_filter_lz_LH_C_0¹ filter_lz₀₀(_lh_filter_lz_arg1², _lh_filter_lz_LH_C_1¹)] else force⁰(filter_lz₀₀(_lh_filter_lz_arg1², _lh_filter_lz_LH_C_1¹))
//│ 						| _  => error⁰})
//│ 		def simulate₀₀(_lh_simulate_arg1², _lh_simulate_arg2², _lh_simulate_arg3²) = 
//│ 			(float_of_int⁰(length₀₀(filter₀₀((fun x⁹ -> x⁹), 
//│ 				let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁶, _lh_simulate_arg2², _lh_simulate_arg3²))
//│ 				in _lh_listcomp_fun⁶(enumFromTo₁₀(1, _lh_simulate_arg1²))))) /. float_of_int⁰(_lh_simulate_arg1²))
//│ 			where
//│ 			def enumFromTo₁₀(a⁵, b⁵) = 
//│ 				if (a⁵ <= b⁵) then 
//│ 					let _lh_listcomp_fun_ls_t⁵ = enumFromTo₁₀((a⁵ + 1), b⁵)
//│ 					in (fun _lh_listcomp_fun⁸ -> (fun _lh_simulate_arg2³ -> (fun _lh_simulate_arg3³ -> 
//│ 						let t¹⁰ = _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁵)
//│ 						in let h¹⁰ = _lh_simulate_arg3³(infRand₀₀(_lh_simulate_arg2³))
//│ 						in (fun f⁹ -> if f⁹(h¹⁰) then 
//│ 							let t¹¹ = filter₀₀(f⁹, t¹⁰)
//│ 							in (fun _lh_dummy⁰ -> (1 + length₀₀(t¹¹))) else filter₀₀(f⁹, t¹⁰))))) else (fun _lh_listcomp_fun⁹ -> (fun _lh_simulate_arg2⁴ -> (fun _lh_simulate_arg3⁴ -> (fun f¹⁰ -> (fun _lh_dummy¹ -> 0)))))
//│ 			def filter₀₀(f⁷, ls¹²) = 
//│ 				ls¹²(f⁷)
//│ 			def infRand₀₀(_lh_infRand_arg1²) = 
//│ 				let f⁸ = (fun x¹¹ -> lazy⁰([LH_C ((x¹¹ mod _lh_infRand_arg1²) + 1) f⁸((((97 * x¹¹) + 11) % power₀₀(2, 7)))]))
//│ 				in f⁸(37)
//│ 				where
//│ 				def power₀₀(_lh_power_arg1², _lh_power_arg2²) = 
//│ 					if (_lh_power_arg2² == 0) then 1 else (_lh_power_arg1² * power₀₀(_lh_power_arg1², (_lh_power_arg2² - 1)))
//│ 			def length₀₀(ls¹³) = 
//│ 				ls¹³(99)
//│ 		def take_lz₀₀(_lh_take_lz_arg1², _lh_take_lz_arg2²) = 
//│ 			if (_lh_take_lz_arg1² == 0) then [LH_N] else 
//│ 				let _lh_matchIdent⁶ = force⁰(_lh_take_lz_arg2²)
//│ 				in _lh_matchIdent⁶(_lh_take_lz_arg1²)
//│ 		def take₀₀(n⁵, ls¹⁴) = 
//│ 			if (n⁵ > 0) then case ls¹⁴ of {
//│ 				LH_C h⁶ t⁶ => [LH_C h⁶ take₀₀((n⁵ - 1), t⁶)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ 		def take₁₀(n⁴, ls¹⁰) = 
//│ 			if (n⁴ > 0) then case ls¹⁰ of {
//│ 				LH_C h⁵ t⁵ => [LH_C h⁵ take₁₀((n⁴ - 1), t⁵)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
