:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
power a n = if n == 0 then 1 else a * (power a (n - 1))
dropWhile f [] = []
dropWhile f (h:t) = if (f h) then dropWhile f t else (h:t)
drop n []      = []
drop n (h:t)   = if n > 0 then (drop (n - 1) t) else t
foldl1 f (x:xs) = foldl f x xs
maximum xs = foldl1 (\x -> \y -> if x > y then x else y) xs
nub_lz ls =
  lazy ( case (force ls) of {
    [] -> [];
    (x:xs) -> x:(nub_lz (filter_lz (\y -> not (polyEq x y)) xs))
  })
take_lz n ls =
  if n == 0 then
    []
  else case (force ls) of {
    [] -> [];
    (h:t) -> h:(take_lz (n - 1) t)
  }
infRand m =
  let f = \x -> lazy (((mod x m) + 1):(f (((97 * x) + 11) `mod` (power 2 7)))) in
  f 37
simulate n m proc = (float_of_int (length (filter (\x -> x) [ proc (infRand m) | seed <- [1..n] ]))) /. (float_of_int n)
sim k =
  let proc = \rs ->
              let xs     = take_lz 100 (nub_lz rs) in
              let best   = 100 in
              let bestk  = maximum (take k xs) in
              let afterk = dropWhile (\x -> x < bestk) (drop k xs) in
              polyEq [best] (take 1 afterk)
  in
  simulate 5000 100 proc
testSecretary_nofib dummy = [ sim k | k <- [35..39] ]
testSecretary_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testSecretary_nofib_lh^439(primId⁰(0))
//│ def dropWhile_lh(_lh_dropWhile_arg1⁰, _lh_dropWhile_arg2⁰) = case _lh_dropWhile_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1⁰(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh^377(_lh_dropWhile_arg1⁰, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰]
//│ 	| _  => error⁰}
//│ def drop_lh(_lh_drop_arg1⁰, _lh_drop_arg2⁰) = case _lh_drop_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh^172((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰
//│ 	| _  => error⁰}
//│ def enumFromTo_lh(a⁰, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromTo_lh^72((a⁰ + 1), b⁰)] else [LH_N]
//│ def filter_lh(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => if f⁰(h⁰) then [LH_C h⁰ filter_lh^6(f⁰, t⁰)] else filter_lh^12(f⁰, t⁰)
//│ 	| LH_N  => [LH_N]}
//│ def filter_lz_lh(f¹, ls¹) = lazy⁰(case force⁰(ls¹) of {
//│ 	LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lz_lh^30(f¹, t¹)] else force⁰(filter_lz_lh^37(f¹, t¹))
//│ 	| LH_N  => [LH_N]})
//│ def foldl1_lh(_lh_foldl1_arg1⁰, _lh_foldl1_arg2⁰) = case _lh_foldl1_arg2⁰ of {
//│ 	LH_C _lh_foldl1_LH_C_0⁰ _lh_foldl1_LH_C_1⁰ => foldl_lh^428(_lh_foldl1_arg1⁰, _lh_foldl1_LH_C_0⁰, _lh_foldl1_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def foldl_lh(f², i⁰, ls²) = case ls² of {
//│ 	LH_C h² t² => foldl_lh^50(f², f²(i⁰, h²), t²)
//│ 	| LH_N  => i⁰}
//│ def infRand_lh(_lh_infRand_arg1⁰) = 
//│ 	let f³ = (fun x³ -> lazy⁰([LH_C ((x³ mod _lh_infRand_arg1⁰) + 1) f³((((97 * x³) + 11) % power_lh^412(2, 7)))]))
//│ 	in f³(37)
//│ def length_lh(ls⁵) = case ls⁵ of {
//│ 	LH_C h⁵ t⁵ => (1 + length_lh^138(t⁵))
//│ 	| LH_N  => 0}
//│ def maximum_lh(_lh_maximum_arg1⁰) = foldl1_lh^187((fun x⁰ -> (fun y⁰ -> if (x⁰ > y⁰) then x⁰ else y⁰)), _lh_maximum_arg1⁰)
//│ def nub_lz_lh(_lh_nub_lz_arg1⁰) = lazy⁰(
//│ 	let _lh_matchIdent¹ = force⁰(_lh_nub_lz_arg1⁰)
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_nub_lz_LH_C_0⁰ _lh_nub_lz_LH_C_1⁰ => [LH_C _lh_nub_lz_LH_C_0⁰ nub_lz_lh^259(filter_lz_lh^260((fun y¹ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0⁰, y¹))), _lh_nub_lz_LH_C_1⁰))]
//│ 		| _  => error⁰})
//│ def power_lh(_lh_power_arg1⁰, _lh_power_arg2⁰) = if (_lh_power_arg2⁰ == 0) then 1 else (_lh_power_arg1⁰ * power_lh^239(_lh_power_arg1⁰, (_lh_power_arg2⁰ - 1)))
//│ def sim_lh(_lh_sim_arg1⁰) = 
//│ 	let proc⁰ = (fun rs⁰ -> 
//│ 		let xs⁰ = take_lz_lh^318(100, nub_lz_lh^321(rs⁰))
//│ 		in let best⁰ = 100
//│ 		in let bestk⁰ = maximum_lh^326(take_lh^327(_lh_sim_arg1⁰, xs⁰))
//│ 		in let afterk⁰ = dropWhile_lh^333((fun x² -> (x² < bestk⁰)), drop_lh^341(_lh_sim_arg1⁰, xs⁰))
//│ 		in polyEq⁰([LH_C best⁰ [LH_N]], take_lh^352(1, afterk⁰)))
//│ 	in simulate_lh^363(5000, 100, proc⁰)
//│ def simulate_lh(_lh_simulate_arg1⁰, _lh_simulate_arg2⁰, _lh_simulate_arg3⁰) = (float_of_int⁰(length_lh^281(filter_lh^282((fun x¹ -> x¹), 
//│ 	let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_simulate_arg3⁰(infRand_lh^288(_lh_simulate_arg2⁰)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun¹(enumFromTo_lh^300(1, _lh_simulate_arg1⁰))))) /. float_of_int⁰(_lh_simulate_arg1⁰))
//│ def take_lh(n⁰, ls³) = if (n⁰ > 0) then case ls³ of {
//│ 	LH_C h³ t³ => [LH_C h³ take_lh^93((n⁰ - 1), t³)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz_lh(n¹, ls⁴) = if (n¹ > 0) then case force⁰(ls⁴) of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ take_lz_lh^118((n¹ - 1), t⁴)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz_lh(_lh_take_lz_arg1⁰, _lh_take_lz_arg2⁰) = if (_lh_take_lz_arg1⁰ == 0) then [LH_N] else 
//│ 	let _lh_matchIdent⁰ = force⁰(_lh_take_lz_arg2⁰)
//│ 	in case _lh_matchIdent⁰ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_take_lz_LH_C_0⁰ _lh_take_lz_LH_C_1⁰ => [LH_C _lh_take_lz_LH_C_0⁰ take_lz_lh^214((_lh_take_lz_arg1⁰ - 1), _lh_take_lz_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ def testSecretary_nofib_lh(_lh_testSecretary_nofib_arg1⁰) = 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C sim_lh^146(_lh_listcomp_fun_ls_h⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(enumFromTo_lh^157(35, 39))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec enumFromTo_lh a_0 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, ((enumFromTo_lh (a_0 + 1)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec dropWhile_lh _lh_dropWhile_arg1_0 _lh_dropWhile_arg2_0 =
//│ 		  (match _lh_dropWhile_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_dropWhile_LH_C_0_0, _lh_dropWhile_LH_C_1_0) -> 
//│ 		      (if (_lh_dropWhile_arg1_0 _lh_dropWhile_LH_C_0_0) then
//│ 		        ((dropWhile_lh _lh_dropWhile_arg1_0) _lh_dropWhile_LH_C_1_0)
//│ 		      else
//│ 		        (`LH_C(_lh_dropWhile_LH_C_0_0, _lh_dropWhile_LH_C_1_0)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec take_lz_lh _lh_take_lz_arg1_0 _lh_take_lz_arg2_0 =
//│ 		  (if (_lh_take_lz_arg1_0 = 0) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (let rec _lh_matchIdent_0 = (Lazy.force _lh_take_lz_arg2_0) in
//│ 		      (match _lh_matchIdent_0 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_N)
//│ 		        | `LH_C(_lh_take_lz_LH_C_0_0, _lh_take_lz_LH_C_1_0) -> 
//│ 		          (`LH_C(_lh_take_lz_LH_C_0_0, ((take_lz_lh (_lh_take_lz_arg1_0 - 1)) _lh_take_lz_LH_C_1_0)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))));;
//│ 		let rec drop_lh _lh_drop_arg1_0 _lh_drop_arg2_0 =
//│ 		  (match _lh_drop_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_drop_LH_C_0_0, _lh_drop_LH_C_1_0) -> 
//│ 		      (if (_lh_drop_arg1_0 > 0) then
//│ 		        ((drop_lh (_lh_drop_arg1_0 - 1)) _lh_drop_LH_C_1_0)
//│ 		      else
//│ 		        _lh_drop_LH_C_1_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec filter_lz_lh f_1 ls_1 =
//│ 		  (lazy (match (Lazy.force ls_1) with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (if (f_1 h_1) then
//│ 		        (`LH_C(h_1, ((filter_lz_lh f_1) t_1)))
//│ 		      else
//│ 		        (Lazy.force ((filter_lz_lh f_1) t_1)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec foldl_lh f_2 i_0 ls_2 =
//│ 		  (match ls_2 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (((foldl_lh f_2) ((f_2 i_0) h_2)) t_2)
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec take_lh n_0 ls_3 =
//│ 		  (if (n_0 > 0) then
//│ 		    (match ls_3 with
//│ 		      | `LH_C(h_3, t_3) -> 
//│ 		        (`LH_C(h_3, ((take_lh (n_0 - 1)) t_3)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec length_lh ls_5 =
//│ 		  (match ls_5 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      (1 + (length_lh t_5))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec power_lh _lh_power_arg1_0 _lh_power_arg2_0 =
//│ 		  (if (_lh_power_arg2_0 = 0) then
//│ 		    1
//│ 		  else
//│ 		    (_lh_power_arg1_0 * ((power_lh _lh_power_arg1_0) (_lh_power_arg2_0 - 1))));;
//│ 		let rec filter_lh f_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (if (f_0 h_0) then
//│ 		        (`LH_C(h_0, ((filter_lh f_0) t_0)))
//│ 		      else
//│ 		        ((filter_lh f_0) t_0))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec nub_lz_lh _lh_nub_lz_arg1_0 =
//│ 		  (lazy (let rec _lh_matchIdent_1 = (Lazy.force _lh_nub_lz_arg1_0) in
//│ 		    (match _lh_matchIdent_1 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_nub_lz_LH_C_0_0, _lh_nub_lz_LH_C_1_0) -> 
//│ 		        (`LH_C(_lh_nub_lz_LH_C_0_0, (nub_lz_lh ((filter_lz_lh (fun y_1 -> 
//│ 		          (not (_lh_nub_lz_LH_C_0_0 = y_1)))) _lh_nub_lz_LH_C_1_0))))
//│ 		      | _ -> 
//│ 		        (failwith "error"))));;
//│ 		let rec foldl1_lh _lh_foldl1_arg1_0 _lh_foldl1_arg2_0 =
//│ 		  (match _lh_foldl1_arg2_0 with
//│ 		    | `LH_C(_lh_foldl1_LH_C_0_0, _lh_foldl1_LH_C_1_0) -> 
//│ 		      (((foldl_lh _lh_foldl1_arg1_0) _lh_foldl1_LH_C_0_0) _lh_foldl1_LH_C_1_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec infRand_lh _lh_infRand_arg1_0 =
//│ 		  (let rec f_3 = (fun x_3 -> 
//│ 		    (lazy (`LH_C(((x_3 mod _lh_infRand_arg1_0) + 1), (f_3 (((97 * x_3) + 11) mod ((power_lh 2) 7))))))) in
//│ 		    (f_3 37));;
//│ 		let rec maximum_lh _lh_maximum_arg1_0 =
//│ 		  ((foldl1_lh (fun x_0 y_0 -> 
//│ 		    (if (x_0 > y_0) then
//│ 		      x_0
//│ 		    else
//│ 		      y_0))) _lh_maximum_arg1_0);;
//│ 		let rec simulate_lh _lh_simulate_arg1_0 _lh_simulate_arg2_0 _lh_simulate_arg3_0 =
//│ 		  ((float_of_int (length_lh ((filter_lh (fun x_1 -> 
//│ 		    x_1)) (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		    (match _lh_listcomp_fun_para_1 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		        (`LH_C((_lh_simulate_arg3_0 (infRand_lh _lh_simulate_arg2_0)), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_1 ((enumFromTo_lh 1) _lh_simulate_arg1_0)))))) /. (float_of_int _lh_simulate_arg1_0));;
//│ 		let rec sim_lh _lh_sim_arg1_0 =
//│ 		  (let rec proc_0 = (fun rs_0 -> 
//│ 		    (let rec xs_0 = ((take_lz_lh 100) (nub_lz_lh rs_0)) in
//│ 		      (let rec best_0 = 100 in
//│ 		        (let rec bestk_0 = (maximum_lh ((take_lh _lh_sim_arg1_0) xs_0)) in
//│ 		          (let rec afterk_0 = ((dropWhile_lh (fun x_2 -> 
//│ 		            (x_2 < bestk_0))) ((drop_lh _lh_sim_arg1_0) xs_0)) in
//│ 		            ((`LH_C(best_0, (`LH_N))) = ((take_lh 1) afterk_0))))))) in
//│ 		    (((simulate_lh 5000) 100) proc_0));;
//│ 		let rec testSecretary_nofib_lh _lh_testSecretary_nofib_arg1_0 =
//│ 		  (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		    (match _lh_listcomp_fun_para_0 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		        (`LH_C((sim_lh _lh_listcomp_fun_ls_h_0), (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_0 ((enumFromTo_lh 35) 39)));;
//│ 		(testSecretary_nofib_lh 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C h⁰ filter_lh(f⁰, t⁰)]: 11 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => (1 + length_lh(t⁵)) | LH_N  => 0}: 143
//│ [LH_N]: 18 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => (1 + length_lh(t⁵)) | LH_N  => 0}: 143
//│ [LH_C h¹ filter_lz_lh(f¹, t¹)]: 35 --->
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lz_lh(f¹, t¹)] else force⁰(filter_lz_lh(f¹, t¹)) | LH_N  => [LH_N]}: 45
//│ 	case _lh_matchIdent¹ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0⁰ _lh_nub_lz_LH_C_1⁰ => [LH_C _lh_nub_lz_LH_C_0⁰ nub_lz_lh(filter_lz_lh((fun y¹ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0⁰, y¹))), _lh_nub_lz_LH_C_1⁰))] | _  => error⁰}: 275
//│ [LH_N]: 44 --->
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lz_lh(f¹, t¹)] else force⁰(filter_lz_lh(f¹, t¹)) | LH_N  => [LH_N]}: 45
//│ 	case _lh_matchIdent¹ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0⁰ _lh_nub_lz_LH_C_1⁰ => [LH_C _lh_nub_lz_LH_C_0⁰ nub_lz_lh(filter_lz_lh((fun y¹ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0⁰, y¹))), _lh_nub_lz_LH_C_1⁰))] | _  => error⁰}: 275
//│ [LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 81 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C sim_lh(_lh_listcomp_fun_ls_h⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 154
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_simulate_arg3⁰(infRand_lh(_lh_simulate_arg2⁰)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 297
//│ [LH_N]: 82 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C sim_lh(_lh_listcomp_fun_ls_h⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 154
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_simulate_arg3⁰(infRand_lh(_lh_simulate_arg2⁰)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 297
//│ [LH_C h³ take_lh((n⁰ - 1), t³)]: 102 --->
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 62
//│ 	case _lh_foldl1_arg2⁰ of {LH_C _lh_foldl1_LH_C_0⁰ _lh_foldl1_LH_C_1⁰ => foldl_lh(_lh_foldl1_arg1⁰, _lh_foldl1_LH_C_0⁰, _lh_foldl1_LH_C_1⁰) | _  => error⁰}: 436
//│ [LH_N]: 103 --->
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 62
//│ 	case _lh_foldl1_arg2⁰ of {LH_C _lh_foldl1_LH_C_0⁰ _lh_foldl1_LH_C_1⁰ => foldl_lh(_lh_foldl1_arg1⁰, _lh_foldl1_LH_C_0⁰, _lh_foldl1_LH_C_1⁰) | _  => error⁰}: 436
//│ [LH_N]: 105 --->
//│ 	NoCons
//│ 	case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 62
//│ 	case _lh_foldl1_arg2⁰ of {LH_C _lh_foldl1_LH_C_0⁰ _lh_foldl1_LH_C_1⁰ => foldl_lh(_lh_foldl1_arg1⁰, _lh_foldl1_LH_C_0⁰, _lh_foldl1_LH_C_1⁰) | _  => error⁰}: 436
//│ [LH_C h⁴ take_lz_lh((n¹ - 1), t⁴)]: 127 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C h³ take_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 104
//│ 	case _lh_drop_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰ | _  => error⁰}: 184
//│ 	case _lh_dropWhile_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1⁰(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh(_lh_dropWhile_arg1⁰, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰] | _  => error⁰}: 387
//│ [LH_N]: 128 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C h³ take_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 104
//│ 	case _lh_drop_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰ | _  => error⁰}: 184
//│ 	case _lh_dropWhile_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1⁰(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh(_lh_dropWhile_arg1⁰, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰] | _  => error⁰}: 387
//│ [LH_N]: 130 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C h³ take_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 104
//│ 	case _lh_drop_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰ | _  => error⁰}: 184
//│ 	case _lh_dropWhile_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1⁰(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh(_lh_dropWhile_arg1⁰, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰] | _  => error⁰}: 387
//│ [LH_N]: 166 --->
//│ 	case _lh_dropWhile_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1⁰(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh(_lh_dropWhile_arg1⁰, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰] | _  => error⁰}: 387
//│ [LH_N]: 207 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C h³ take_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 104
//│ 	case _lh_drop_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰ | _  => error⁰}: 184
//│ 	case _lh_dropWhile_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1⁰(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh(_lh_dropWhile_arg1⁰, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰] | _  => error⁰}: 387
//│ [LH_N]: 212 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C h³ take_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 104
//│ 	case _lh_drop_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰ | _  => error⁰}: 184
//│ 	case _lh_dropWhile_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1⁰(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh(_lh_dropWhile_arg1⁰, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰] | _  => error⁰}: 387
//│ [LH_C _lh_take_lz_LH_C_0⁰ take_lz_lh((_lh_take_lz_arg1⁰ - 1), _lh_take_lz_LH_C_1⁰)]: 223 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C h³ take_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 104
//│ 	case _lh_drop_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰ | _  => error⁰}: 184
//│ 	case _lh_dropWhile_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1⁰(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh(_lh_dropWhile_arg1⁰, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰] | _  => error⁰}: 387
//│ [LH_N]: 257 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴ t⁴ => [LH_C h⁴ take_lz_lh((n¹ - 1), t⁴)] | LH_N  => [LH_N]}: 129
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0⁰ _lh_take_lz_LH_C_1⁰ => [LH_C _lh_take_lz_LH_C_0⁰ take_lz_lh((_lh_take_lz_arg1⁰ - 1), _lh_take_lz_LH_C_1⁰)] | _  => error⁰}: 225
//│ [LH_C _lh_nub_lz_LH_C_0⁰ nub_lz_lh(filter_lz_lh((fun y¹ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0⁰, y¹))), _lh_nub_lz_LH_C_1⁰))]: 273 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴ t⁴ => [LH_C h⁴ take_lz_lh((n¹ - 1), t⁴)] | LH_N  => [LH_N]}: 129
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0⁰ _lh_take_lz_LH_C_1⁰ => [LH_C _lh_take_lz_LH_C_0⁰ take_lz_lh((_lh_take_lz_arg1⁰ - 1), _lh_take_lz_LH_C_1⁰)] | _  => error⁰}: 225
//│ [LH_C _lh_simulate_arg3⁰(infRand_lh(_lh_simulate_arg2⁰)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 295 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => if f⁰(h⁰) then [LH_C h⁰ filter_lh(f⁰, t⁰)] else filter_lh(f⁰, t⁰) | LH_N  => [LH_N]}: 19
//│ [LH_N]: 296 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => if f⁰(h⁰) then [LH_C h⁰ filter_lh(f⁰, t⁰)] else filter_lh(f⁰, t⁰) | LH_N  => [LH_N]}: 19
//│ [LH_N]: 373 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C h³ take_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 104
//│ [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰]: 384 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C h³ take_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 104
//│ [LH_C ((x³ mod _lh_infRand_arg1⁰) + 1) f³((((97 * x³) + 11) % power_lh(2, 7)))]: 419 --->
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lz_lh(f¹, t¹)] else force⁰(filter_lz_lh(f¹, t¹)) | LH_N  => [LH_N]}: 45
//│ 	case _lh_matchIdent¹ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0⁰ _lh_nub_lz_LH_C_1⁰ => [LH_C _lh_nub_lz_LH_C_0⁰ nub_lz_lh(filter_lz_lh((fun y¹ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0⁰, y¹))), _lh_nub_lz_LH_C_1⁰))] | _  => error⁰}: 275
//│ ------------------
//│ case ls⁰ of {LH_C h⁰ t⁰ => if f⁰(h⁰) then [LH_C h⁰ filter_lh(f⁰, t⁰)] else filter_lh(f⁰, t⁰) | LH_N  => [LH_N]}: 19 --->
//│ 	[LH_C _lh_simulate_arg3⁰(infRand_lh(_lh_simulate_arg2⁰)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 295
//│ 	[LH_N]: 296
//│ case force⁰(ls¹) of {LH_C h¹ t¹ => if f¹(h¹) then [LH_C h¹ filter_lz_lh(f¹, t¹)] else force⁰(filter_lz_lh(f¹, t¹)) | LH_N  => [LH_N]}: 45 --->
//│ 	[LH_C h¹ filter_lz_lh(f¹, t¹)]: 35
//│ 	[LH_N]: 44
//│ 	[LH_C ((x³ mod _lh_infRand_arg1⁰) + 1) f³((((97 * x³) + 11) % power_lh(2, 7)))]: 419
//│ case ls² of {LH_C h² t² => foldl_lh(f², f²(i⁰, h²), t²) | LH_N  => i⁰}: 62 --->
//│ 	[LH_C h³ take_lh((n⁰ - 1), t³)]: 102
//│ 	[LH_N]: 103
//│ 	[LH_N]: 105
//│ case ls³ of {LH_C h³ t³ => [LH_C h³ take_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 104 --->
//│ 	[LH_C h⁴ take_lz_lh((n¹ - 1), t⁴)]: 127
//│ 	[LH_N]: 128
//│ 	[LH_N]: 130
//│ 	[LH_N]: 207
//│ 	[LH_N]: 212
//│ 	[LH_C _lh_take_lz_LH_C_0⁰ take_lz_lh((_lh_take_lz_arg1⁰ - 1), _lh_take_lz_LH_C_1⁰)]: 223
//│ 	[LH_N]: 373
//│ 	[LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰]: 384
//│ case force⁰(ls⁴) of {LH_C h⁴ t⁴ => [LH_C h⁴ take_lz_lh((n¹ - 1), t⁴)] | LH_N  => [LH_N]}: 129 --->
//│ 	[LH_N]: 257
//│ 	[LH_C _lh_nub_lz_LH_C_0⁰ nub_lz_lh(filter_lz_lh((fun y¹ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0⁰, y¹))), _lh_nub_lz_LH_C_1⁰))]: 273
//│ case ls⁵ of {LH_C h⁵ t⁵ => (1 + length_lh(t⁵)) | LH_N  => 0}: 143 --->
//│ 	[LH_C h⁰ filter_lh(f⁰, t⁰)]: 11
//│ 	[LH_N]: 18
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C sim_lh(_lh_listcomp_fun_ls_h⁰) _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 154 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 81
//│ 	[LH_N]: 82
//│ case _lh_drop_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰ | _  => error⁰}: 184 --->
//│ 	[LH_C h⁴ take_lz_lh((n¹ - 1), t⁴)]: 127
//│ 	[LH_N]: 128
//│ 	[LH_N]: 130
//│ 	[LH_N]: 207
//│ 	[LH_N]: 212
//│ 	[LH_C _lh_take_lz_LH_C_0⁰ take_lz_lh((_lh_take_lz_arg1⁰ - 1), _lh_take_lz_LH_C_1⁰)]: 223
//│ case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0⁰ _lh_take_lz_LH_C_1⁰ => [LH_C _lh_take_lz_LH_C_0⁰ take_lz_lh((_lh_take_lz_arg1⁰ - 1), _lh_take_lz_LH_C_1⁰)] | _  => error⁰}: 225 --->
//│ 	[LH_N]: 257
//│ 	[LH_C _lh_nub_lz_LH_C_0⁰ nub_lz_lh(filter_lz_lh((fun y¹ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0⁰, y¹))), _lh_nub_lz_LH_C_1⁰))]: 273
//│ case _lh_matchIdent¹ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0⁰ _lh_nub_lz_LH_C_1⁰ => [LH_C _lh_nub_lz_LH_C_0⁰ nub_lz_lh(filter_lz_lh((fun y¹ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0⁰, y¹))), _lh_nub_lz_LH_C_1⁰))] | _  => error⁰}: 275 --->
//│ 	[LH_C h¹ filter_lz_lh(f¹, t¹)]: 35
//│ 	[LH_N]: 44
//│ 	[LH_C ((x³ mod _lh_infRand_arg1⁰) + 1) f³((((97 * x³) + 11) % power_lh(2, 7)))]: 419
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_simulate_arg3⁰(infRand_lh(_lh_simulate_arg2⁰)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 297 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 81
//│ 	[LH_N]: 82
//│ case _lh_dropWhile_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1⁰(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh(_lh_dropWhile_arg1⁰, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰] | _  => error⁰}: 387 --->
//│ 	[LH_C h⁴ take_lz_lh((n¹ - 1), t⁴)]: 127
//│ 	[LH_N]: 128
//│ 	[LH_N]: 130
//│ 	[LH_N]: 166
//│ 	[LH_N]: 207
//│ 	[LH_N]: 212
//│ 	[LH_C _lh_take_lz_LH_C_0⁰ take_lz_lh((_lh_take_lz_arg1⁰ - 1), _lh_take_lz_LH_C_1⁰)]: 223
//│ case _lh_foldl1_arg2⁰ of {LH_C _lh_foldl1_LH_C_0⁰ _lh_foldl1_LH_C_1⁰ => foldl_lh(_lh_foldl1_arg1⁰, _lh_foldl1_LH_C_0⁰, _lh_foldl1_LH_C_1⁰) | _  => error⁰}: 436 --->
//│ 	[LH_C h³ take_lh((n⁰ - 1), t³)]: 102
//│ 	[LH_N]: 103
//│ 	[LH_N]: 105
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C h⁰ filter_lh(f⁰, t⁰)]: 11 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => (1 + length_lh(t⁵)) | LH_N  => 0}: 143
//│ [LH_N]: 18 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => (1 + length_lh(t⁵)) | LH_N  => 0}: 143
//│ [LH_C _lh_simulate_arg3⁰(infRand_lh(_lh_simulate_arg2⁰)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 295 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => if f⁰(h⁰) then [LH_C h⁰ filter_lh(f⁰, t⁰)] else filter_lh(f⁰, t⁰) | LH_N  => [LH_N]}: 19
//│ [LH_N]: 296 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => if f⁰(h⁰) then [LH_C h⁰ filter_lh(f⁰, t⁰)] else filter_lh(f⁰, t⁰) | LH_N  => [LH_N]}: 19
//│ ------------------
//│ case ls⁰ of {LH_C h⁰ t⁰ => if f⁰(h⁰) then [LH_C h⁰ filter_lh(f⁰, t⁰)] else filter_lh(f⁰, t⁰) | LH_N  => [LH_N]}: 19 --->
//│ 	[LH_C _lh_simulate_arg3⁰(infRand_lh(_lh_simulate_arg2⁰)) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 295
//│ 	[LH_N]: 296
//│ case ls⁵ of {LH_C h⁵ t⁵ => (1 + length_lh(t⁵)) | LH_N  => 0}: 143 --->
//│ 	[LH_C h⁰ filter_lh(f⁰, t⁰)]: 11
//│ 	[LH_N]: 18
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testSecretary_nofib_lh(primId⁰(0))
//│ def dropWhile_lh(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = case _lh_dropWhile_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0⁰) then dropWhile_lh(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1⁰) else [LH_C _lh_dropWhile_LH_C_0⁰ _lh_dropWhile_LH_C_1⁰]
//│ 	| _  => error⁰}
//│ def drop_lh(_lh_drop_arg1¹, _lh_drop_arg2¹) = case _lh_drop_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1¹ > 0) then drop_lh((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰
//│ 	| _  => error⁰}
//│ def enumFromTo_lh(a¹, b¹) = if (a¹ <= b¹) then [LH_C a¹ enumFromTo_lh((a¹ + 1), b¹)] else [LH_N]
//│ def filter_lh(f⁶, ls⁹) = ls⁹(f⁶)
//│ def filter_lz_lh(f⁹, ls¹⁰) = lazy⁰(case force⁰(ls¹⁰) of {
//│ 	LH_C h¹ t¹ => if f⁹(h¹) then [LH_C h¹ filter_lz_lh(f⁹, t¹)] else force⁰(filter_lz_lh(f⁹, t¹))
//│ 	| LH_N  => [LH_N]})
//│ def foldl1_lh(_lh_foldl1_arg1¹, _lh_foldl1_arg2¹) = case _lh_foldl1_arg2¹ of {
//│ 	LH_C _lh_foldl1_LH_C_0⁰ _lh_foldl1_LH_C_1⁰ => foldl_lh(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0⁰, _lh_foldl1_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def foldl_lh(f⁴, i¹, ls⁷) = case ls⁷ of {
//│ 	LH_C h² t² => foldl_lh(f⁴, f⁴(i¹, h²), t²)
//│ 	| LH_N  => i¹}
//│ def infRand_lh(_lh_infRand_arg1¹) = 
//│ 	let f⁵ = (fun x⁴ -> lazy⁰([LH_C ((x⁴ mod _lh_infRand_arg1¹) + 1) f⁵((((97 * x⁴) + 11) % power_lh(2, 7)))]))
//│ 	in f⁵(37)
//│ def length_lh(ls⁶) = ls⁶(99)
//│ def maximum_lh(_lh_maximum_arg1¹) = foldl1_lh((fun x⁵ -> (fun y³ -> if (x⁵ > y³) then x⁵ else y³)), _lh_maximum_arg1¹)
//│ def nub_lz_lh(_lh_nub_lz_arg1¹) = lazy⁰(
//│ 	let _lh_matchIdent³ = force⁰(_lh_nub_lz_arg1¹)
//│ 	in case _lh_matchIdent³ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_nub_lz_LH_C_0⁰ _lh_nub_lz_LH_C_1⁰ => [LH_C _lh_nub_lz_LH_C_0⁰ nub_lz_lh(filter_lz_lh((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0⁰, y²))), _lh_nub_lz_LH_C_1⁰))]
//│ 		| _  => error⁰})
//│ def power_lh(_lh_power_arg1¹, _lh_power_arg2¹) = if (_lh_power_arg2¹ == 0) then 1 else (_lh_power_arg1¹ * power_lh(_lh_power_arg1¹, (_lh_power_arg2¹ - 1)))
//│ def sim_lh(_lh_sim_arg1¹) = 
//│ 	let proc¹ = (fun rs¹ -> 
//│ 		let xs¹ = take_lz_lh(100, nub_lz_lh(rs¹))
//│ 		in let best¹ = 100
//│ 		in let bestk¹ = maximum_lh(take_lh(_lh_sim_arg1¹, xs¹))
//│ 		in let afterk¹ = dropWhile_lh((fun x⁷ -> (x⁷ < bestk¹)), drop_lh(_lh_sim_arg1¹, xs¹))
//│ 		in polyEq⁰([LH_C best¹ [LH_N]], take_lh(1, afterk¹)))
//│ 	in simulate_lh(5000, 100, proc¹)
//│ def simulate_lh(_lh_simulate_arg1¹, _lh_simulate_arg2¹, _lh_simulate_arg3¹) = (float_of_int⁰(length_lh(filter_lh((fun x⁶ -> x⁶), 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => 
//│ 			let t⁶ = _lh_listcomp_fun²(_lh_listcomp_fun_ls_t¹)
//│ 			in let h⁶ = _lh_simulate_arg3¹(infRand_lh(_lh_simulate_arg2¹))
//│ 			in (fun f⁷ -> if f⁷(h⁶) then 
//│ 				let t⁷ = filter_lh(f⁷, t⁶)
//│ 				in (fun _lh_dummy⁰ -> (1 + length_lh(t⁷))) else filter_lh(f⁷, t⁶))
//│ 		| LH_N  => (fun f⁸ -> (fun _lh_dummy¹ -> 0))})
//│ 	in _lh_listcomp_fun²(enumFromTo_lh(1, _lh_simulate_arg1¹))))) /. float_of_int⁰(_lh_simulate_arg1¹))
//│ def take_lh(n², ls⁸) = if (n² > 0) then case ls⁸ of {
//│ 	LH_C h³ t³ => [LH_C h³ take_lh((n² - 1), t³)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lz_lh(_lh_take_lz_arg1¹, _lh_take_lz_arg2¹) = if (_lh_take_lz_arg1¹ == 0) then [LH_N] else 
//│ 	let _lh_matchIdent² = force⁰(_lh_take_lz_arg2¹)
//│ 	in case _lh_matchIdent² of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_take_lz_LH_C_0⁰ _lh_take_lz_LH_C_1⁰ => [LH_C _lh_take_lz_LH_C_0⁰ take_lz_lh((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ def testSecretary_nofib_lh(_lh_testSecretary_nofib_arg1¹) = 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C sim_lh(_lh_listcomp_fun_ls_h⁰) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t⁰)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun³(enumFromTo_lh(35, 39))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testSecretary_nofib_lh^1] (hopeless to continue)
//│ 	[testSecretary_nofib_lh^1 · enumFromTo_lh^284] (using original def)
//│ 		[testSecretary_nofib_lh^1 · enumFromTo_lh^284 · enumFromTo_lh^352] ---> [testSecretary_nofib_lh^1 · enumFromTo_lh^284] (using original def)
//│ 	[testSecretary_nofib_lh^1 · sim_lh^273] (using original def)
//│ 		[testSecretary_nofib_lh^1 · sim_lh^273 · dropWhile_lh^307] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · dropWhile_lh^307 · dropWhile_lh^371] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · dropWhile_lh^307] (using original def)
//│ 		[testSecretary_nofib_lh^1 · sim_lh^273 · drop_lh^315] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · drop_lh^315 · drop_lh^41] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · drop_lh^315] (using original def)
//│ 		[testSecretary_nofib_lh^1 · sim_lh^273 · maximum_lh^300] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · maximum_lh^300 · foldl1_lh^163] (using original def)
//│ 				[testSecretary_nofib_lh^1 · sim_lh^273 · maximum_lh^300 · foldl1_lh^163 · foldl_lh^412] (using original def)
//│ 					[testSecretary_nofib_lh^1 · sim_lh^273 · maximum_lh^300 · foldl1_lh^163 · foldl_lh^412 · foldl_lh^110] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · maximum_lh^300 · foldl1_lh^163 · foldl_lh^412] (using original def)
//│ 		[testSecretary_nofib_lh^1 · sim_lh^273 · nub_lz_lh^295] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · nub_lz_lh^295 · filter_lz_lh^86] (using original def)
//│ 				[testSecretary_nofib_lh^1 · sim_lh^273 · nub_lz_lh^295 · filter_lz_lh^86 · filter_lz_lh^392] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · nub_lz_lh^295 · filter_lz_lh^86] (using original def)
//│ 				[testSecretary_nofib_lh^1 · sim_lh^273 · nub_lz_lh^295 · filter_lz_lh^86 · filter_lz_lh^399] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · nub_lz_lh^295 · filter_lz_lh^86] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · nub_lz_lh^295 · nub_lz_lh^85] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · nub_lz_lh^295] (using original def)
//│ 		[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · enumFromTo_lh^254] (using original def)
//│ 				[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · enumFromTo_lh^254 · enumFromTo_lh^352] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · enumFromTo_lh^254] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · filter_lh^209] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · filter_lh^225] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · filter_lh^239] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · infRand_lh^218] (using original def)
//│ 				[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · infRand_lh^218 · power_lh^148] (using original def)
//│ 					[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · infRand_lh^218 · power_lh^148 · power_lh^65] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · infRand_lh^218 · power_lh^148] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · length_lh^208] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · simulate_lh^337 · length_lh^233] (using original def)
//│ 		[testSecretary_nofib_lh^1 · sim_lh^273 · take_lh^301] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · take_lh^301 · take_lh^185] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · take_lh^301] (using original def)
//│ 		[testSecretary_nofib_lh^1 · sim_lh^273 · take_lh^326] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · take_lh^326 · take_lh^185] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · take_lh^326] (using original def)
//│ 		[testSecretary_nofib_lh^1 · sim_lh^273 · take_lz_lh^292] (using original def)
//│ 			[testSecretary_nofib_lh^1 · sim_lh^273 · take_lz_lh^292 · take_lz_lh^18] ---> [testSecretary_nofib_lh^1 · sim_lh^273 · take_lz_lh^292] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testSecretary_nofib_lh_₀(primId⁰(0))
//│ def testSecretary_nofib_lh_₀(_lh_testSecretary_nofib_arg1¹) = 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_lh_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun³(enumFromTo_lh_₀(35, 39))
//│ 	where
//│ 	def enumFromTo_lh_₀(a², b²) = 
//│ 		if (a² <= b²) then [LH_C a² enumFromTo_lh_₀((a² + 1), b²)] else [LH_N]
//│ 	def sim_lh_₀(_lh_sim_arg1¹) = 
//│ 		let proc¹ = (fun rs¹ -> 
//│ 			let xs¹ = take_lz_lh_₀(100, nub_lz_lh_₀(rs¹))
//│ 			in let best¹ = 100
//│ 			in let bestk¹ = maximum_lh_₀(take_lh_₀(_lh_sim_arg1¹, xs¹))
//│ 			in let afterk¹ = dropWhile_lh_₀((fun x⁴ -> (x⁴ < bestk¹)), drop_lh_₀(_lh_sim_arg1¹, xs¹))
//│ 			in polyEq⁰([LH_C best¹ [LH_N]], take_lh_₁(1, afterk¹)))
//│ 		in simulate_lh_₀(5000, 100, proc¹)
//│ 		where
//│ 		def dropWhile_lh_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_arg2¹) = 
//│ 			case _lh_dropWhile_arg2¹ of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_lh_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 				| _  => error⁰}
//│ 		def drop_lh_₀(_lh_drop_arg1¹, _lh_drop_arg2¹) = 
//│ 			case _lh_drop_arg2¹ of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_lh_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 				| _  => error⁰}
//│ 		def maximum_lh_₀(_lh_maximum_arg1¹) = 
//│ 			foldl1_lh_₀((fun x⁷ -> (fun y³ -> if (x⁷ > y³) then x⁷ else y³)), _lh_maximum_arg1¹)
//│ 			where
//│ 			def foldl1_lh_₀(_lh_foldl1_arg1¹, _lh_foldl1_arg2¹) = 
//│ 				case _lh_foldl1_arg2¹ of {
//│ 					LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_lh_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl_lh_₀(f¹², i¹, ls¹¹) = 
//│ 					case ls¹¹ of {
//│ 						LH_C h⁶ t⁸ => foldl_lh_₀(f¹², f¹²(i¹, h⁶), t⁸)
//│ 						| LH_N  => i¹}
//│ 		def nub_lz_lh_₀(_lh_nub_lz_arg1¹) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent³ = force⁰(_lh_nub_lz_arg1¹)
//│ 				in case _lh_matchIdent³ of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_lh_₀(filter_lz_lh_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]
//│ 					| _  => error⁰})
//│ 			where
//│ 			def filter_lz_lh_₀(f¹³, ls¹²) = 
//│ 				lazy⁰(case force⁰(ls¹²) of {
//│ 					LH_C h⁷ t⁹ => if f¹³(h⁷) then [LH_C h⁷ filter_lz_lh_₀(f¹³, t⁹)] else force⁰(filter_lz_lh_₀(f¹³, t⁹))
//│ 					| LH_N  => [LH_N]})
//│ 		def simulate_lh_₀(_lh_simulate_arg1¹, _lh_simulate_arg2¹, _lh_simulate_arg3¹) = 
//│ 			(float_of_int⁰(length_lh_₀(filter_lh_₀((fun x⁵ -> x⁵), 
//│ 				let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 					LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 						let t⁶ = _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ 						in let h⁵ = _lh_simulate_arg3¹(infRand_lh_₀(_lh_simulate_arg2¹))
//│ 						in (fun f⁹ -> if f⁹(h⁵) then 
//│ 							let t⁷ = filter_lh_₁(f⁹, t⁶)
//│ 							in (fun _lh_dummy² -> (1 + length_lh_₁(t⁷))) else filter_lh_₂(f⁹, t⁶))
//│ 					| LH_N  => (fun f¹⁰ -> (fun _lh_dummy³ -> 0))})
//│ 				in _lh_listcomp_fun²(enumFromTo_lh_₁(1, _lh_simulate_arg1¹))))) /. float_of_int⁰(_lh_simulate_arg1¹))
//│ 			where
//│ 			def enumFromTo_lh_₁(a¹, b¹) = 
//│ 				if (a¹ <= b¹) then [LH_C a¹ enumFromTo_lh_₁((a¹ + 1), b¹)] else [LH_N]
//│ 			def filter_lh_₀(f⁶, ls⁶) = 
//│ 				ls⁶(f⁶)
//│ 			def filter_lh_₁(f⁸, ls¹⁰) = 
//│ 				ls¹⁰(f⁸)
//│ 			def filter_lh_₂(f⁷, ls⁸) = 
//│ 				ls⁸(f⁷)
//│ 			def infRand_lh_₀(_lh_infRand_arg1¹) = 
//│ 				let f¹¹ = (fun x⁶ -> lazy⁰([LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹¹((((97 * x⁶) + 11) % power_lh_₀(2, 7)))]))
//│ 				in f¹¹(37)
//│ 				where
//│ 				def power_lh_₀(_lh_power_arg1¹, _lh_power_arg2¹) = 
//│ 					if (_lh_power_arg2¹ == 0) then 1 else (_lh_power_arg1¹ * power_lh_₀(_lh_power_arg1¹, (_lh_power_arg2¹ - 1)))
//│ 			def length_lh_₀(ls⁹) = 
//│ 				ls⁹(99)
//│ 			def length_lh_₁(ls⁵) = 
//│ 				ls⁵(99)
//│ 		def take_lh_₀(n², ls¹³) = 
//│ 			if (n² > 0) then case ls¹³ of {
//│ 				LH_C h⁸ t¹⁰ => [LH_C h⁸ take_lh_₀((n² - 1), t¹⁰)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ 		def take_lh_₁(n¹, ls⁷) = 
//│ 			if (n¹ > 0) then case ls⁷ of {
//│ 				LH_C h⁴ t⁵ => [LH_C h⁴ take_lh_₁((n¹ - 1), t⁵)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ 		def take_lz_lh_₀(_lh_take_lz_arg1¹, _lh_take_lz_arg2¹) = 
//│ 			if (_lh_take_lz_arg1¹ == 0) then [LH_N] else 
//│ 				let _lh_matchIdent² = force⁰(_lh_take_lz_arg2¹)
//│ 				in case _lh_matchIdent² of {
//│ 					LH_N  => [LH_N]
//│ 					| LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]
//│ 					| _  => error⁰}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 482 --->
//│ 	case ls⁷ of {LH_C h⁴ t⁵ => [LH_C h⁴ take_lh_₁((n¹ - 1), t⁵)] | LH_N  => [LH_N]}: 522
//│ [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 493 --->
//│ 	case ls⁷ of {LH_C h⁴ t⁵ => [LH_C h⁴ take_lh_₁((n¹ - 1), t⁵)] | LH_N  => [LH_N]}: 522
//│ [LH_N]: 528 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_lh_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 496
//│ [LH_C a¹ enumFromTo_lh_₁((a¹ + 1), b¹)]: 569 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let t⁶ = _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ in let h⁵ = _lh_simulate_arg3¹(infRand_lh_₀(_lh_simulate_arg2¹))
//│ in (fun f⁹ -> if f⁹(h⁵) then let t⁷ = filter_lh_₁(f⁹, t⁶)
//│ in (fun _lh_dummy² -> (1 + length_lh_₁(t⁷))) else filter_lh_₂(f⁹, t⁶)) | LH_N  => (fun f¹⁰ -> (fun _lh_dummy³ -> 0))}: 660
//│ [LH_N]: 570 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let t⁶ = _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ in let h⁵ = _lh_simulate_arg3¹(infRand_lh_₀(_lh_simulate_arg2¹))
//│ in (fun f⁹ -> if f⁹(h⁵) then let t⁷ = filter_lh_₁(f⁹, t⁶)
//│ in (fun _lh_dummy² -> (1 + length_lh_₁(t⁷))) else filter_lh_₂(f⁹, t⁶)) | LH_N  => (fun f¹⁰ -> (fun _lh_dummy³ -> 0))}: 660
//│ [LH_C a² enumFromTo_lh_₀((a² + 1), b²)]: 601 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_lh_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 777
//│ [LH_N]: 602 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_lh_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 777
//│ [LH_N]: 686 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_lh_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 496
//│ 	case ls⁷ of {LH_C h⁴ t⁵ => [LH_C h⁴ take_lh_₁((n¹ - 1), t⁵)] | LH_N  => [LH_N]}: 522
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_lh_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 546
//│ 	case ls¹³ of {LH_C h⁸ t¹⁰ => [LH_C h⁸ take_lh_₀((n² - 1), t¹⁰)] | LH_N  => [LH_N]}: 877
//│ [LH_N]: 691 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_lh_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 496
//│ 	case ls⁷ of {LH_C h⁴ t⁵ => [LH_C h⁴ take_lh_₁((n¹ - 1), t⁵)] | LH_N  => [LH_N]}: 522
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_lh_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 546
//│ 	case ls¹³ of {LH_C h⁸ t¹⁰ => [LH_C h⁸ take_lh_₀((n² - 1), t¹⁰)] | LH_N  => [LH_N]}: 877
//│ [LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 702 --->
//│ 	case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_lh_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 496
//│ 	case ls⁷ of {LH_C h⁴ t⁵ => [LH_C h⁴ take_lh_₁((n¹ - 1), t⁵)] | LH_N  => [LH_N]}: 522
//│ 	case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_lh_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 546
//│ 	case ls¹³ of {LH_C h⁸ t¹⁰ => [LH_C h⁸ take_lh_₀((n² - 1), t¹⁰)] | LH_N  => [LH_N]}: 877
//│ [LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹¹((((97 * x⁶) + 11) % power_lh_₀(2, 7)))]: 760 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_lh_₀(filter_lz_lh_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 811
//│ 	case force⁰(ls¹²) of {LH_C h⁷ t⁹ => if f¹³(h⁷) then [LH_C h⁷ filter_lz_lh_₀(f¹³, t⁹)] else force⁰(filter_lz_lh_₀(f¹³, t⁹)) | LH_N  => [LH_N]}: 855
//│ [LH_N]: 793 --->
//│ 	case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 704
//│ [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_lh_₀(filter_lz_lh_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 809 --->
//│ 	case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 704
//│ [LH_C h⁷ filter_lz_lh_₀(f¹³, t⁹)]: 845 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_lh_₀(filter_lz_lh_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 811
//│ 	case force⁰(ls¹²) of {LH_C h⁷ t⁹ => if f¹³(h⁷) then [LH_C h⁷ filter_lz_lh_₀(f¹³, t⁹)] else force⁰(filter_lz_lh_₀(f¹³, t⁹)) | LH_N  => [LH_N]}: 855
//│ [LH_N]: 854 --->
//│ 	case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_lh_₀(filter_lz_lh_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 811
//│ 	case force⁰(ls¹²) of {LH_C h⁷ t⁹ => if f¹³(h⁷) then [LH_C h⁷ filter_lz_lh_₀(f¹³, t⁹)] else force⁰(filter_lz_lh_₀(f¹³, t⁹)) | LH_N  => [LH_N]}: 855
//│ [LH_C h⁸ take_lh_₀((n² - 1), t¹⁰)]: 875 --->
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_lh_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 583
//│ 	case ls¹¹ of {LH_C h⁶ t⁸ => foldl_lh_₀(f¹², f¹²(i¹, h⁶), t⁸) | LH_N  => i¹}: 828
//│ [LH_N]: 876 --->
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_lh_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 583
//│ 	case ls¹¹ of {LH_C h⁶ t⁸ => foldl_lh_₀(f¹², f¹²(i¹, h⁶), t⁸) | LH_N  => i¹}: 828
//│ [LH_N]: 878 --->
//│ 	case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_lh_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 583
//│ 	case ls¹¹ of {LH_C h⁶ t⁸ => foldl_lh_₀(f¹², f¹²(i¹, h⁶), t⁸) | LH_N  => i¹}: 828
//│ ------------------
//│ case _lh_dropWhile_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1¹(_lh_dropWhile_LH_C_0¹) then dropWhile_lh_₀(_lh_dropWhile_arg1¹, _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹] | _  => error⁰}: 496 --->
//│ 	[LH_N]: 528
//│ 	[LH_N]: 686
//│ 	[LH_N]: 691
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 702
//│ case ls⁷ of {LH_C h⁴ t⁵ => [LH_C h⁴ take_lh_₁((n¹ - 1), t⁵)] | LH_N  => [LH_N]}: 522 --->
//│ 	[LH_N]: 482
//│ 	[LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]: 493
//│ 	[LH_N]: 686
//│ 	[LH_N]: 691
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 702
//│ case _lh_drop_arg2¹ of {LH_N  => [LH_N] | LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ > 0) then drop_lh_₀((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹ | _  => error⁰}: 546 --->
//│ 	[LH_N]: 686
//│ 	[LH_N]: 691
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 702
//│ case _lh_foldl1_arg2¹ of {LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_lh_₀(_lh_foldl1_arg1¹, _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹) | _  => error⁰}: 583 --->
//│ 	[LH_C h⁸ take_lh_₀((n² - 1), t¹⁰)]: 875
//│ 	[LH_N]: 876
//│ 	[LH_N]: 878
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let t⁶ = _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ in let h⁵ = _lh_simulate_arg3¹(infRand_lh_₀(_lh_simulate_arg2¹))
//│ in (fun f⁹ -> if f⁹(h⁵) then let t⁷ = filter_lh_₁(f⁹, t⁶)
//│ in (fun _lh_dummy² -> (1 + length_lh_₁(t⁷))) else filter_lh_₂(f⁹, t⁶)) | LH_N  => (fun f¹⁰ -> (fun _lh_dummy³ -> 0))}: 660 --->
//│ 	[LH_C a¹ enumFromTo_lh_₁((a¹ + 1), b¹)]: 569
//│ 	[LH_N]: 570
//│ case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 704 --->
//│ 	[LH_N]: 793
//│ 	[LH_C _lh_nub_lz_LH_C_0¹ nub_lz_lh_₀(filter_lz_lh_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 809
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_lh_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 777 --->
//│ 	[LH_C a² enumFromTo_lh_₀((a² + 1), b²)]: 601
//│ 	[LH_N]: 602
//│ case _lh_matchIdent³ of {LH_N  => [LH_N] | LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_lh_₀(filter_lz_lh_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))] | _  => error⁰}: 811 --->
//│ 	[LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹¹((((97 * x⁶) + 11) % power_lh_₀(2, 7)))]: 760
//│ 	[LH_C h⁷ filter_lz_lh_₀(f¹³, t⁹)]: 845
//│ 	[LH_N]: 854
//│ case ls¹¹ of {LH_C h⁶ t⁸ => foldl_lh_₀(f¹², f¹²(i¹, h⁶), t⁸) | LH_N  => i¹}: 828 --->
//│ 	[LH_C h⁸ take_lh_₀((n² - 1), t¹⁰)]: 875
//│ 	[LH_N]: 876
//│ 	[LH_N]: 878
//│ case force⁰(ls¹²) of {LH_C h⁷ t⁹ => if f¹³(h⁷) then [LH_C h⁷ filter_lz_lh_₀(f¹³, t⁹)] else force⁰(filter_lz_lh_₀(f¹³, t⁹)) | LH_N  => [LH_N]}: 855 --->
//│ 	[LH_C ((x⁶ mod _lh_infRand_arg1¹) + 1) f¹¹((((97 * x⁶) + 11) % power_lh_₀(2, 7)))]: 760
//│ 	[LH_C h⁷ filter_lz_lh_₀(f¹³, t⁹)]: 845
//│ 	[LH_N]: 854
//│ case ls¹³ of {LH_C h⁸ t¹⁰ => [LH_C h⁸ take_lh_₀((n² - 1), t¹⁰)] | LH_N  => [LH_N]}: 877 --->
//│ 	[LH_N]: 686
//│ 	[LH_N]: 691
//│ 	[LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)]: 702
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C a¹ enumFromTo_lh_₁((a¹ + 1), b¹)]: 569 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let t⁶ = _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ in let h⁵ = _lh_simulate_arg3¹(infRand_lh_₀(_lh_simulate_arg2¹))
//│ in (fun f⁹ -> if f⁹(h⁵) then let t⁷ = filter_lh_₁(f⁹, t⁶)
//│ in (fun _lh_dummy² -> (1 + length_lh_₁(t⁷))) else filter_lh_₂(f⁹, t⁶)) | LH_N  => (fun f¹⁰ -> (fun _lh_dummy³ -> 0))}: 660
//│ [LH_N]: 570 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let t⁶ = _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ in let h⁵ = _lh_simulate_arg3¹(infRand_lh_₀(_lh_simulate_arg2¹))
//│ in (fun f⁹ -> if f⁹(h⁵) then let t⁷ = filter_lh_₁(f⁹, t⁶)
//│ in (fun _lh_dummy² -> (1 + length_lh_₁(t⁷))) else filter_lh_₂(f⁹, t⁶)) | LH_N  => (fun f¹⁰ -> (fun _lh_dummy³ -> 0))}: 660
//│ [LH_C a² enumFromTo_lh_₀((a² + 1), b²)]: 601 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_lh_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 777
//│ [LH_N]: 602 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_lh_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 777
//│ [LH_N]: 793 --->
//│ 	case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 704
//│ [LH_C _lh_nub_lz_LH_C_0¹ nub_lz_lh_₀(filter_lz_lh_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 809 --->
//│ 	case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 704
//│ ------------------
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let t⁶ = _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ in let h⁵ = _lh_simulate_arg3¹(infRand_lh_₀(_lh_simulate_arg2¹))
//│ in (fun f⁹ -> if f⁹(h⁵) then let t⁷ = filter_lh_₁(f⁹, t⁶)
//│ in (fun _lh_dummy² -> (1 + length_lh_₁(t⁷))) else filter_lh_₂(f⁹, t⁶)) | LH_N  => (fun f¹⁰ -> (fun _lh_dummy³ -> 0))}: 660 --->
//│ 	[LH_C a¹ enumFromTo_lh_₁((a¹ + 1), b¹)]: 569
//│ 	[LH_N]: 570
//│ case _lh_matchIdent² of {LH_N  => [LH_N] | LH_C _lh_take_lz_LH_C_0¹ _lh_take_lz_LH_C_1¹ => [LH_C _lh_take_lz_LH_C_0¹ take_lz_lh_₀((_lh_take_lz_arg1¹ - 1), _lh_take_lz_LH_C_1¹)] | _  => error⁰}: 704 --->
//│ 	[LH_N]: 793
//│ 	[LH_C _lh_nub_lz_LH_C_0¹ nub_lz_lh_₀(filter_lz_lh_₀((fun y² -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y²))), _lh_nub_lz_LH_C_1¹))]: 809
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C sim_lh_₀(_lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 777 --->
//│ 	[LH_C a² enumFromTo_lh_₀((a² + 1), b²)]: 601
//│ 	[LH_N]: 602
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testSecretary_nofib_lh_₀(primId⁰(0))
//│ def testSecretary_nofib_lh_₀(_lh_testSecretary_nofib_arg1²) = 
//│ 	let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁶))
//│ 	in _lh_listcomp_fun⁶(enumFromTo_lh_₀(35, 39))
//│ 	where
//│ 	def enumFromTo_lh_₀(a³, b³) = 
//│ 		if (a³ <= b³) then 
//│ 			let _lh_listcomp_fun_ls_t⁴ = enumFromTo_lh_₀((a³ + 1), b³)
//│ 			in let _lh_listcomp_fun_ls_h⁴ = a³
//│ 			in (fun _lh_listcomp_fun⁴ -> [LH_C sim_lh_₀(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]) else (fun _lh_listcomp_fun⁵ -> [LH_N])
//│ 	def sim_lh_₀(_lh_sim_arg1²) = 
//│ 		let proc² = (fun rs² -> 
//│ 			let xs² = take_lz_lh_₀(100, nub_lz_lh_₀(rs²))
//│ 			in let best² = 100
//│ 			in let bestk² = maximum_lh_₀(take_lh_₀(_lh_sim_arg1², xs²))
//│ 			in let afterk² = dropWhile_lh_₀((fun x⁹ -> (x⁹ < bestk²)), drop_lh_₀(_lh_sim_arg1², xs²))
//│ 			in polyEq⁰([LH_C best² [LH_N]], take_lh_₁(1, afterk²)))
//│ 		in simulate_lh_₀(5000, 100, proc²)
//│ 		where
//│ 		def dropWhile_lh_₀(_lh_dropWhile_arg1², _lh_dropWhile_arg2²) = 
//│ 			case _lh_dropWhile_arg2² of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹ => if _lh_dropWhile_arg1²(_lh_dropWhile_LH_C_0¹) then dropWhile_lh_₀(_lh_dropWhile_arg1², _lh_dropWhile_LH_C_1¹) else [LH_C _lh_dropWhile_LH_C_0¹ _lh_dropWhile_LH_C_1¹]
//│ 				| _  => error⁰}
//│ 		def drop_lh_₀(_lh_drop_arg1², _lh_drop_arg2²) = 
//│ 			case _lh_drop_arg2² of {
//│ 				LH_N  => [LH_N]
//│ 				| LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1² > 0) then drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1¹) else _lh_drop_LH_C_1¹
//│ 				| _  => error⁰}
//│ 		def maximum_lh_₀(_lh_maximum_arg1²) = 
//│ 			foldl1_lh_₀((fun x⁸ -> (fun y⁴ -> if (x⁸ > y⁴) then x⁸ else y⁴)), _lh_maximum_arg1²)
//│ 			where
//│ 			def foldl1_lh_₀(_lh_foldl1_arg1², _lh_foldl1_arg2²) = 
//│ 				case _lh_foldl1_arg2² of {
//│ 					LH_C _lh_foldl1_LH_C_0¹ _lh_foldl1_LH_C_1¹ => foldl_lh_₀(_lh_foldl1_arg1², _lh_foldl1_LH_C_0¹, _lh_foldl1_LH_C_1¹)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl_lh_₀(f¹⁴, i², ls¹⁵) = 
//│ 					case ls¹⁵ of {
//│ 						LH_C h⁶ t⁸ => foldl_lh_₀(f¹⁴, f¹⁴(i², h⁶), t⁸)
//│ 						| LH_N  => i²}
//│ 		def nub_lz_lh_₀(_lh_nub_lz_arg1²) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent⁵ = force⁰(_lh_nub_lz_arg1²)
//│ 				in case _lh_matchIdent⁵ of {
//│ 					LH_N  => (fun _lh_take_lz_arg1³ -> [LH_N])
//│ 					| LH_C _lh_nub_lz_LH_C_0¹ _lh_nub_lz_LH_C_1¹ => 
//│ 						let _lh_take_lz_LH_C_1² = nub_lz_lh_₀(filter_lz_lh_₀((fun y⁵ -> not⁰(polyEq⁰(_lh_nub_lz_LH_C_0¹, y⁵))), _lh_nub_lz_LH_C_1¹))
//│ 						in let _lh_take_lz_LH_C_0² = _lh_nub_lz_LH_C_0¹
//│ 						in (fun _lh_take_lz_arg1⁴ -> [LH_C _lh_take_lz_LH_C_0² take_lz_lh_₀((_lh_take_lz_arg1⁴ - 1), _lh_take_lz_LH_C_1²)])
//│ 					| _  => error⁰})
//│ 			where
//│ 			def filter_lz_lh_₀(f¹⁵, ls¹⁸) = 
//│ 				lazy⁰(case force⁰(ls¹⁸) of {
//│ 					LH_C h⁷ t⁹ => if f¹⁵(h⁷) then [LH_C h⁷ filter_lz_lh_₀(f¹⁵, t⁹)] else force⁰(filter_lz_lh_₀(f¹⁵, t⁹))
//│ 					| LH_N  => [LH_N]})
//│ 		def simulate_lh_₀(_lh_simulate_arg1², _lh_simulate_arg2⁴, _lh_simulate_arg3⁴) = 
//│ 			(float_of_int⁰(length_lh_₀(filter_lh_₀((fun x¹¹ -> x¹¹), 
//│ 				let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁵ -> _lh_listcomp_fun_para⁵(_lh_listcomp_fun⁹, _lh_simulate_arg2⁴, _lh_simulate_arg3⁴))
//│ 				in _lh_listcomp_fun⁹(enumFromTo_lh_₁(1, _lh_simulate_arg1²))))) /. float_of_int⁰(_lh_simulate_arg1²))
//│ 			where
//│ 			def enumFromTo_lh_₁(a⁴, b⁴) = 
//│ 				if (a⁴ <= b⁴) then 
//│ 					let _lh_listcomp_fun_ls_t⁵ = enumFromTo_lh_₁((a⁴ + 1), b⁴)
//│ 					in (fun _lh_listcomp_fun⁷ -> (fun _lh_simulate_arg2² -> (fun _lh_simulate_arg3² -> 
//│ 						let t¹¹ = _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁵)
//│ 						in let h⁹ = _lh_simulate_arg3²(infRand_lh_₀(_lh_simulate_arg2²))
//│ 						in (fun f¹⁹ -> if f¹⁹(h⁹) then 
//│ 							let t¹² = filter_lh_₁(f¹⁹, t¹¹)
//│ 							in (fun _lh_dummy⁴ -> (1 + length_lh_₁(t¹²))) else filter_lh_₂(f¹⁹, t¹¹))))) else (fun _lh_listcomp_fun⁸ -> (fun _lh_simulate_arg2³ -> (fun _lh_simulate_arg3³ -> (fun f²⁰ -> (fun _lh_dummy⁵ -> 0)))))
//│ 			def filter_lh_₀(f¹⁷, ls²¹) = 
//│ 				ls²¹(f¹⁷)
//│ 			def filter_lh_₁(f¹⁶, ls¹⁹) = 
//│ 				ls¹⁹(f¹⁶)
//│ 			def filter_lh_₂(f²¹, ls²²) = 
//│ 				ls²²(f²¹)
//│ 			def infRand_lh_₀(_lh_infRand_arg1²) = 
//│ 				let f¹⁸ = (fun x¹⁰ -> lazy⁰([LH_C ((x¹⁰ mod _lh_infRand_arg1²) + 1) f¹⁸((((97 * x¹⁰) + 11) % power_lh_₀(2, 7)))]))
//│ 				in f¹⁸(37)
//│ 				where
//│ 				def power_lh_₀(_lh_power_arg1², _lh_power_arg2²) = 
//│ 					if (_lh_power_arg2² == 0) then 1 else (_lh_power_arg1² * power_lh_₀(_lh_power_arg1², (_lh_power_arg2² - 1)))
//│ 			def length_lh_₀(ls²⁰) = 
//│ 				ls²⁰(99)
//│ 			def length_lh_₁(ls¹⁷) = 
//│ 				ls¹⁷(99)
//│ 		def take_lh_₀(n⁴, ls¹⁶) = 
//│ 			if (n⁴ > 0) then case ls¹⁶ of {
//│ 				LH_C h⁸ t¹⁰ => [LH_C h⁸ take_lh_₀((n⁴ - 1), t¹⁰)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ 		def take_lh_₁(n³, ls¹⁴) = 
//│ 			if (n³ > 0) then case ls¹⁴ of {
//│ 				LH_C h⁴ t⁵ => [LH_C h⁴ take_lh_₁((n³ - 1), t⁵)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ 		def take_lz_lh_₀(_lh_take_lz_arg1², _lh_take_lz_arg2²) = 
//│ 			if (_lh_take_lz_arg1² == 0) then [LH_N] else 
//│ 				let _lh_matchIdent⁴ = force⁰(_lh_take_lz_arg2²)
//│ 				in _lh_matchIdent⁴(_lh_take_lz_arg1²)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<


