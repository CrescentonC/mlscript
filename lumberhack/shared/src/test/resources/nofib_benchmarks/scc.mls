:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
inList x (h:t) = if x == h then True else inList x t
inList x [] = False
snd (a,b) = b
type Edge  vertex = (vertex, vertex)
type Cycle vertex = [vertex]
stronglyConnComp :: Eq vertex => [Edge vertex] -> [vertex] -> [[vertex]]
stronglyConnComp es vs
  = snd (span_tree (new_range (map swap es)) ([],[]) (snd (dfs (new_range es) ([],[]) vs)))
  where
    swap (x,y) = (y,x)
    new_range [] w = []
    new_range ((x,y):xys) w
        = if x==w
          then (y : (new_range xys w))
          else (new_range xys w)
    span_tree r (vs,ns) [] = (vs,ns)
    span_tree r (vs,ns) (x:xs) =
      if inList x vs then
        span_tree r (vs,ns) xs
      else
        case (dfs r (x:vs,[]) (r x)) of { (vs',ns') -> span_tree r (vs',(x:ns'):ns) xs }
dfs r (vs,ns) [] = (vs,ns)
dfs r (vs,ns) (x:xs) =
  if inList x vs then
    dfs r (vs,ns) xs
  else
    case (dfs r (x:vs,[]) (r x)) of { (vs',ns') -> dfs r (vs',(x:ns')++ns) xs }
testScc_nofib dummy =
  let a = 1 in
  let b = 2 in
  let c = 3 in
  let d = 4 in
  let f = 5 in
  let g = 6 in
  let h = 7 in
  let vertices = [a,b,c,d,f,g,h] in
  let edges = [(b, a),(c, b),(c, d),(c, h),(d, c),(f, a),(f, g),(f, h),(g, f),(h, g)] in
  stronglyConnComp edges vertices
testScc_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testScc_nofib_lh_₁^422(primId⁰(0))
//│ def dfs_lh_₁(_lh_dfs_arg1¹, _lh_dfs_arg2¹, _lh_dfs_arg3¹) = case _lh_dfs_arg2¹ of {
//│ 	LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1² => case _lh_dfs_arg3¹ of {
//│ 		LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²]
//│ 		| LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂^125(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁^130(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else 
//│ 			let _lh_matchIdent¹ = dfs_lh_₁^139(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ 			in case _lh_matchIdent¹ of {
//│ 				LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁^153(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁^157([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def dfs_lh_₂(_lh_dfs_arg1⁰, _lh_dfs_arg2⁰, _lh_dfs_arg3⁰) = case _lh_dfs_arg2⁰ of {
//│ 	LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰ => case _lh_dfs_arg3⁰ of {
//│ 		LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰]
//│ 		| LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃^66(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂^71(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else 
//│ 			let _lh_matchIdent⁰ = dfs_lh_₂^80(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ 			in case _lh_matchIdent⁰ of {
//│ 				LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂^94(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂^98([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def inList_lh_₁(_lh_inList_arg1², _lh_inList_arg2²) = case _lh_inList_arg2² of {
//│ 	LH_C _lh_inList_LH_C_0² _lh_inList_LH_C_1² => if (_lh_inList_arg1² == _lh_inList_LH_C_0²) then [True] else inList_lh_₁^186(_lh_inList_arg1², _lh_inList_LH_C_1²)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inList_lh_₂(_lh_inList_arg1¹, _lh_inList_arg2¹) = case _lh_inList_arg2¹ of {
//│ 	LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₂^50(_lh_inList_arg1¹, _lh_inList_LH_C_1¹)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inList_lh_₃(_lh_inList_arg1⁰, _lh_inList_arg2⁰) = case _lh_inList_arg2⁰ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₃^8(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def map_lh_₁(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h² t² => [LH_C f⁰(h²) map_lh_₁^201(f⁰, t²)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh_₁(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₁^33(t¹, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₂(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂^21(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def snd_lh_₁(_lh_snd_arg1¹) = case _lh_snd_arg1¹ of {
//│ 	LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 	| _  => error⁰}
//│ def snd_lh_₂(_lh_snd_arg1⁰) = case _lh_snd_arg1⁰ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def stronglyConnComp_lh_₁(_lh_stronglyConnComp_arg1⁰, _lh_stronglyConnComp_arg2⁰) = 
//│ 	let new_range⁰ = (fun _lh_new_range_arg1⁰ -> (fun _lh_new_range_arg2⁰ -> case _lh_new_range_arg1⁰ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {
//│ 				LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}))
//│ 	and span_tree⁰ = (fun _lh_span_tree_arg1⁰ -> (fun _lh_span_tree_arg2⁰ -> (fun _lh_span_tree_arg3⁰ -> case _lh_span_tree_arg2⁰ of {
//│ 			LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰ => case _lh_span_tree_arg3⁰ of {
//│ 				LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰]
//│ 				| LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁^253(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else 
//│ 					let _lh_matchIdent² = dfs_lh_₁^267(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ 					in case _lh_matchIdent² of {
//│ 						LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰)
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			| _  => error⁰})))
//│ 	and swap⁰ = (fun _lh_swap_arg1⁰ -> case _lh_swap_arg1⁰ of {
//│ 			LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰]
//│ 			| _  => error⁰}) 
//│ 	in snd_lh_₂^312(span_tree⁰(new_range⁰(map_lh_₁^315(swap⁰, _lh_stronglyConnComp_arg1⁰)), [LH_P2 [LH_N] [LH_N]], snd_lh_₁^326(dfs_lh_₂^327(new_range⁰(_lh_stronglyConnComp_arg1⁰), [LH_P2 [LH_N] [LH_N]], _lh_stronglyConnComp_arg2⁰))))
//│ def testScc_nofib_lh_₁(_lh_testScc_nofib_arg1⁰) = 
//│ 	let a⁰ = 1
//│ 	in let b⁰ = 2
//│ 	in let c⁰ = 3
//│ 	in let d⁰ = 4
//│ 	in let f¹ = 5
//│ 	in let g⁰ = 6
//│ 	in let h³ = 7
//│ 	in let vertices⁰ = [LH_C a⁰ [LH_C b⁰ [LH_C c⁰ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]]]]
//│ 	in let edges⁰ = [LH_C [LH_P2 b⁰ a⁰] [LH_C [LH_P2 c⁰ b⁰] [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]]]
//│ 	in stronglyConnComp_lh_₁^407(edges⁰, vertices⁰)
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec snd_lh__d2 _lh_snd_arg1_0 =
//│ 		  (match _lh_snd_arg1_0 with
//│ 		    | `LH_P2(_lh_snd_LH_P2_0_0, _lh_snd_LH_P2_1_0) -> 
//│ 		      _lh_snd_LH_P2_1_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec inList_lh__d1 _lh_inList_arg1_2 _lh_inList_arg2_2 =
//│ 		  (match _lh_inList_arg2_2 with
//│ 		    | `LH_C(_lh_inList_LH_C_0_2, _lh_inList_LH_C_1_2) -> 
//│ 		      (if (_lh_inList_arg1_2 = _lh_inList_LH_C_0_2) then
//│ 		        true
//│ 		      else
//│ 		        ((inList_lh__d1 _lh_inList_arg1_2) _lh_inList_LH_C_1_2))
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec snd_lh__d1 _lh_snd_arg1_1 =
//│ 		  (match _lh_snd_arg1_1 with
//│ 		    | `LH_P2(_lh_snd_LH_P2_0_1, _lh_snd_LH_P2_1_1) -> 
//│ 		      _lh_snd_LH_P2_1_1
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d1 f_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (`LH_C((f_0 h_2), ((map_lh__d1 f_0) t_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec inList_lh__d3 _lh_inList_arg1_0 _lh_inList_arg2_0 =
//│ 		  (match _lh_inList_arg2_0 with
//│ 		    | `LH_C(_lh_inList_LH_C_0_0, _lh_inList_LH_C_1_0) -> 
//│ 		      (if (_lh_inList_arg1_0 = _lh_inList_LH_C_0_0) then
//│ 		        true
//│ 		      else
//│ 		        ((inList_lh__d3 _lh_inList_arg1_0) _lh_inList_LH_C_1_0))
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d2 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C(h_0, ((mappend_lh__d2 t_0) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec dfs_lh__d2 _lh_dfs_arg1_0 _lh_dfs_arg2_0 _lh_dfs_arg3_0 =
//│ 		  (match _lh_dfs_arg2_0 with
//│ 		    | `LH_P2(_lh_dfs_LH_P2_0_0, _lh_dfs_LH_P2_1_0) -> 
//│ 		      (match _lh_dfs_arg3_0 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_P2(_lh_dfs_LH_P2_0_0, _lh_dfs_LH_P2_1_0))
//│ 		        | `LH_C(_lh_dfs_LH_C_0_0, _lh_dfs_LH_C_1_0) -> 
//│ 		          (if ((inList_lh__d3 _lh_dfs_LH_C_0_0) _lh_dfs_LH_P2_0_0) then
//│ 		            (((dfs_lh__d2 _lh_dfs_arg1_0) (`LH_P2(_lh_dfs_LH_P2_0_0, _lh_dfs_LH_P2_1_0))) _lh_dfs_LH_C_1_0)
//│ 		          else
//│ 		            (let rec _lh_matchIdent_0 = (((dfs_lh__d2 _lh_dfs_arg1_0) (`LH_P2((`LH_C(_lh_dfs_LH_C_0_0, _lh_dfs_LH_P2_0_0)), (`LH_N)))) (_lh_dfs_arg1_0 _lh_dfs_LH_C_0_0)) in
//│ 		              (match _lh_matchIdent_0 with
//│ 		                | `LH_P2(_lh_dfs_LH_P2_0_1, _lh_dfs_LH_P2_1_1) -> 
//│ 		                  (((dfs_lh__d2 _lh_dfs_arg1_0) (`LH_P2(_lh_dfs_LH_P2_0_1, ((mappend_lh__d2 (`LH_C(_lh_dfs_LH_C_0_0, _lh_dfs_LH_P2_1_1))) _lh_dfs_LH_P2_1_0)))) _lh_dfs_LH_C_1_0)
//│ 		                | _ -> 
//│ 		                  (failwith "error"))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d1 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (`LH_C(h_1, ((mappend_lh__d1 t_1) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec inList_lh__d2 _lh_inList_arg1_1 _lh_inList_arg2_1 =
//│ 		  (match _lh_inList_arg2_1 with
//│ 		    | `LH_C(_lh_inList_LH_C_0_1, _lh_inList_LH_C_1_1) -> 
//│ 		      (if (_lh_inList_arg1_1 = _lh_inList_LH_C_0_1) then
//│ 		        true
//│ 		      else
//│ 		        ((inList_lh__d2 _lh_inList_arg1_1) _lh_inList_LH_C_1_1))
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec dfs_lh__d1 _lh_dfs_arg1_1 _lh_dfs_arg2_1 _lh_dfs_arg3_1 =
//│ 		  (match _lh_dfs_arg2_1 with
//│ 		    | `LH_P2(_lh_dfs_LH_P2_0_2, _lh_dfs_LH_P2_1_2) -> 
//│ 		      (match _lh_dfs_arg3_1 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_P2(_lh_dfs_LH_P2_0_2, _lh_dfs_LH_P2_1_2))
//│ 		        | `LH_C(_lh_dfs_LH_C_0_1, _lh_dfs_LH_C_1_1) -> 
//│ 		          (if ((inList_lh__d2 _lh_dfs_LH_C_0_1) _lh_dfs_LH_P2_0_2) then
//│ 		            (((dfs_lh__d1 _lh_dfs_arg1_1) (`LH_P2(_lh_dfs_LH_P2_0_2, _lh_dfs_LH_P2_1_2))) _lh_dfs_LH_C_1_1)
//│ 		          else
//│ 		            (let rec _lh_matchIdent_1 = (((dfs_lh__d1 _lh_dfs_arg1_1) (`LH_P2((`LH_C(_lh_dfs_LH_C_0_1, _lh_dfs_LH_P2_0_2)), (`LH_N)))) (_lh_dfs_arg1_1 _lh_dfs_LH_C_0_1)) in
//│ 		              (match _lh_matchIdent_1 with
//│ 		                | `LH_P2(_lh_dfs_LH_P2_0_3, _lh_dfs_LH_P2_1_3) -> 
//│ 		                  (((dfs_lh__d1 _lh_dfs_arg1_1) (`LH_P2(_lh_dfs_LH_P2_0_3, ((mappend_lh__d1 (`LH_C(_lh_dfs_LH_C_0_1, _lh_dfs_LH_P2_1_3))) _lh_dfs_LH_P2_1_2)))) _lh_dfs_LH_C_1_1)
//│ 		                | _ -> 
//│ 		                  (failwith "error"))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec stronglyConnComp_lh__d1 _lh_stronglyConnComp_arg1_0 _lh_stronglyConnComp_arg2_0 =
//│ 		  let rec new_range_0 = (fun _lh_new_range_arg1_0 _lh_new_range_arg2_0 -> 
//│ 		    (match _lh_new_range_arg1_0 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_new_range_LH_C_0_0, _lh_new_range_LH_C_1_0) -> 
//│ 		        (match _lh_new_range_LH_C_0_0 with
//│ 		          | `LH_P2(_lh_new_range_LH_P2_0_0, _lh_new_range_LH_P2_1_0) -> 
//│ 		            (if (_lh_new_range_LH_P2_0_0 = _lh_new_range_arg2_0) then
//│ 		              (`LH_C(_lh_new_range_LH_P2_1_0, ((new_range_0 _lh_new_range_LH_C_1_0) _lh_new_range_arg2_0)))
//│ 		            else
//│ 		              ((new_range_0 _lh_new_range_LH_C_1_0) _lh_new_range_arg2_0))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		  and span_tree_0 = (fun _lh_span_tree_arg1_0 _lh_span_tree_arg2_0 _lh_span_tree_arg3_0 -> 
//│ 		    (match _lh_span_tree_arg2_0 with
//│ 		      | `LH_P2(_lh_span_tree_LH_P2_0_0, _lh_span_tree_LH_P2_1_0) -> 
//│ 		        (match _lh_span_tree_arg3_0 with
//│ 		          | `LH_N -> 
//│ 		            (`LH_P2(_lh_span_tree_LH_P2_0_0, _lh_span_tree_LH_P2_1_0))
//│ 		          | `LH_C(_lh_span_tree_LH_C_0_0, _lh_span_tree_LH_C_1_0) -> 
//│ 		            (if ((inList_lh__d1 _lh_span_tree_LH_C_0_0) _lh_span_tree_LH_P2_0_0) then
//│ 		              (((span_tree_0 _lh_span_tree_arg1_0) (`LH_P2(_lh_span_tree_LH_P2_0_0, _lh_span_tree_LH_P2_1_0))) _lh_span_tree_LH_C_1_0)
//│ 		            else
//│ 		              (let rec _lh_matchIdent_2 = (((dfs_lh__d1 _lh_span_tree_arg1_0) (`LH_P2((`LH_C(_lh_span_tree_LH_C_0_0, _lh_span_tree_LH_P2_0_0)), (`LH_N)))) (_lh_span_tree_arg1_0 _lh_span_tree_LH_C_0_0)) in
//│ 		                (match _lh_matchIdent_2 with
//│ 		                  | `LH_P2(_lh_span_tree_LH_P2_0_1, _lh_span_tree_LH_P2_1_1) -> 
//│ 		                    (((span_tree_0 _lh_span_tree_arg1_0) (`LH_P2(_lh_span_tree_LH_P2_0_1, (`LH_C((`LH_C(_lh_span_tree_LH_C_0_0, _lh_span_tree_LH_P2_1_1)), _lh_span_tree_LH_P2_1_0))))) _lh_span_tree_LH_C_1_0)
//│ 		                  | _ -> 
//│ 		                    (failwith "error"))))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		  and swap_0 = (fun _lh_swap_arg1_0 -> 
//│ 		    (match _lh_swap_arg1_0 with
//│ 		      | `LH_P2(_lh_swap_LH_P2_0_0, _lh_swap_LH_P2_1_0) -> 
//│ 		        (`LH_P2(_lh_swap_LH_P2_1_0, _lh_swap_LH_P2_0_0))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		  in (snd_lh__d2 (((span_tree_0 (new_range_0 ((map_lh__d1 swap_0) _lh_stronglyConnComp_arg1_0))) (`LH_P2((`LH_N), (`LH_N)))) (snd_lh__d1 (((dfs_lh__d2 (new_range_0 _lh_stronglyConnComp_arg1_0)) (`LH_P2((`LH_N), (`LH_N)))) _lh_stronglyConnComp_arg2_0))));;
//│ 		let rec testScc_nofib_lh__d1 _lh_testScc_nofib_arg1_0 =
//│ 		  (let rec a_0 = 1 in
//│ 		    (let rec b_0 = 2 in
//│ 		      (let rec c_0 = 3 in
//│ 		        (let rec d_0 = 4 in
//│ 		          (let rec f_1 = 5 in
//│ 		            (let rec g_0 = 6 in
//│ 		              (let rec h_3 = 7 in
//│ 		                (let rec vertices_0 = (`LH_C(a_0, (`LH_C(b_0, (`LH_C(c_0, (`LH_C(d_0, (`LH_C(f_1, (`LH_C(g_0, (`LH_C(h_3, (`LH_N))))))))))))))) in
//│ 		                  (let rec edges_0 = (`LH_C((`LH_P2(b_0, a_0)), (`LH_C((`LH_P2(c_0, b_0)), (`LH_C((`LH_P2(c_0, d_0)), (`LH_C((`LH_P2(c_0, h_3)), (`LH_C((`LH_P2(d_0, c_0)), (`LH_C((`LH_P2(f_1, a_0)), (`LH_C((`LH_P2(f_1, g_0)), (`LH_C((`LH_P2(f_1, h_3)), (`LH_C((`LH_P2(g_0, f_1)), (`LH_C((`LH_P2(h_3, g_0)), (`LH_N))))))))))))))))))))) in
//│ 		                    ((stronglyConnComp_lh__d1 edges_0) vertices_0))))))))));;
//│ 		(testScc_nofib_lh__d1 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C h⁰ mappend_lh_₂(t⁰, ys⁰)]: 26 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂(t⁰, ys⁰)] | LH_N  => ys⁰}: 28
//│ 	case _lh_span_tree_arg3⁰ of {LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰] | LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ in case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 299
//│ [LH_C h¹ mappend_lh_₁(t¹, ys¹)]: 38 --->
//│ 	NoCons
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₁(t¹, ys¹)] | LH_N  => ys¹}: 40
//│ [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰]: 65 --->
//│ 	case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰}: 110
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 219
//│ [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰]: 76 --->
//│ 	case _lh_dfs_arg2⁰ of {LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰ => case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 116
//│ [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰]: 85 --->
//│ 	DeadCodeCons
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₃(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 16
//│ [LH_N]: 86 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂(t⁰, ys⁰)] | LH_N  => ys⁰}: 28
//│ 	case _lh_span_tree_arg3⁰ of {LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰] | LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ in case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 299
//│ [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]]: 87 --->
//│ 	case _lh_dfs_arg2⁰ of {LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰ => case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 116
//│ [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹]: 101 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂(t⁰, ys⁰)] | LH_N  => ys⁰}: 28
//│ [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)]: 105 --->
//│ 	case _lh_dfs_arg2⁰ of {LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰ => case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 116
//│ [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²]: 124 --->
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰}: 169
//│ 	case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰}: 295
//│ [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²]: 135 --->
//│ 	case _lh_dfs_arg2¹ of {LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1² => case _lh_dfs_arg3¹ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²] | LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 175
//│ [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²]: 144 --->
//│ 	DeadCodeCons
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₂(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 58
//│ 	case _lh_inList_arg2² of {LH_C _lh_inList_LH_C_0² _lh_inList_LH_C_1² => if (_lh_inList_arg1² == _lh_inList_LH_C_0²) then [True] else inList_lh_₁(_lh_inList_arg1², _lh_inList_LH_C_1²) | LH_N  => [False] | _  => error⁰}: 194
//│ [LH_N]: 145 --->
//│ 	NoCons
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₁(t¹, ys¹)] | LH_N  => ys¹}: 40
//│ [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]]: 146 --->
//│ 	case _lh_dfs_arg2¹ of {LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1² => case _lh_dfs_arg3¹ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²] | LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 175
//│ [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³]: 160 --->
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₁(t¹, ys¹)] | LH_N  => ys¹}: 40
//│ [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)]: 164 --->
//│ 	case _lh_dfs_arg2¹ of {LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1² => case _lh_dfs_arg3¹ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²] | LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 175
//│ [LH_C f⁰(h²) map_lh_₁(f⁰, t²)]: 206 --->
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_N]: 207 --->
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_N]: 222 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ 	case _lh_dfs_arg3¹ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²] | LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 173
//│ [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)]: 235 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ 	case _lh_dfs_arg3¹ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²] | LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 173
//│ [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰]: 252 --->
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 214
//│ [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰]: 263 --->
//│ 	case _lh_span_tree_arg2⁰ of {LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰ => case _lh_span_tree_arg3⁰ of {LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰] | LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ in case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 301
//│ [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰]: 272 --->
//│ 	DeadCodeCons
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₂(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 58
//│ 	case _lh_inList_arg2² of {LH_C _lh_inList_LH_C_0² _lh_inList_LH_C_1² => if (_lh_inList_arg1² == _lh_inList_LH_C_0²) then [True] else inList_lh_₁(_lh_inList_arg1², _lh_inList_LH_C_1²) | LH_N  => [False] | _  => error⁰}: 194
//│ [LH_N]: 273 --->
//│ 	NoCons
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₁(t¹, ys¹)] | LH_N  => ys¹}: 40
//│ [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]]: 274 --->
//│ 	case _lh_dfs_arg2¹ of {LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1² => case _lh_dfs_arg3¹ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²] | LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 175
//│ [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]]: 290 --->
//│ 	case _lh_span_tree_arg2⁰ of {LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰ => case _lh_span_tree_arg3⁰ of {LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰] | LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ in case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 301
//│ [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰]: 308 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ [LH_N]: 322 --->
//│ 	DeadCodeCons
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₂(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 58
//│ 	case _lh_inList_arg2² of {LH_C _lh_inList_LH_C_0² _lh_inList_LH_C_1² => if (_lh_inList_arg1² == _lh_inList_LH_C_0²) then [True] else inList_lh_₁(_lh_inList_arg1², _lh_inList_LH_C_1²) | LH_N  => [False] | _  => error⁰}: 194
//│ [LH_P2 [LH_N] [LH_N]]: 324 --->
//│ 	case _lh_span_tree_arg2⁰ of {LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰ => case _lh_span_tree_arg3⁰ of {LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰] | LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ in case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 301
//│ [LH_N]: 332 --->
//│ 	DeadCodeCons
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₃(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 16
//│ [LH_N]: 333 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂(t⁰, ys⁰)] | LH_N  => ys⁰}: 28
//│ 	case _lh_span_tree_arg3⁰ of {LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰] | LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ in case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 299
//│ [LH_P2 [LH_N] [LH_N]]: 334 --->
//│ 	case _lh_dfs_arg2⁰ of {LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰ => case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 116
//│ [LH_N]: 358 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ [LH_C h³ [LH_N]]: 359 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ [LH_C g⁰ [LH_C h³ [LH_N]]]: 360 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]: 361 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]: 362 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ [LH_C c⁰ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]]: 363 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ [LH_C b⁰ [LH_C c⁰ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]]]: 364 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ [LH_C a⁰ [LH_C b⁰ [LH_C c⁰ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]]]]: 365 --->
//│ 	case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114
//│ [LH_P2 b⁰ a⁰]: 368 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_P2 c⁰ b⁰]: 371 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_P2 c⁰ d⁰]: 374 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_P2 c⁰ h³]: 377 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_P2 d⁰ c⁰]: 380 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_P2 f¹ a⁰]: 383 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_P2 f¹ g⁰]: 386 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_P2 f¹ h³]: 389 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_P2 g⁰ f¹]: 392 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_P2 h³ g⁰]: 395 --->
//│ 	case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243
//│ 	case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310
//│ [LH_N]: 396 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 h³ g⁰] [LH_N]]: 397 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]: 398 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]: 399 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]: 400 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]: 401 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]: 402 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]: 403 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]: 404 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 c⁰ b⁰] [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]]: 405 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ [LH_C [LH_P2 b⁰ a⁰] [LH_C [LH_P2 c⁰ b⁰] [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]]]: 406 --->
//│ 	case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208
//│ 	case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245
//│ ------------------
//│ case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₃(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 16 --->
//│ 	[LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰]: 85
//│ 	[LH_N]: 332
//│ case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂(t⁰, ys⁰)] | LH_N  => ys⁰}: 28 --->
//│ 	[LH_C h⁰ mappend_lh_₂(t⁰, ys⁰)]: 26
//│ 	[LH_N]: 86
//│ 	[LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹]: 101
//│ 	[LH_N]: 333
//│ case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₁(t¹, ys¹)] | LH_N  => ys¹}: 40 --->
//│ 	[LH_C h¹ mappend_lh_₁(t¹, ys¹)]: 38
//│ 	[LH_N]: 145
//│ 	[LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³]: 160
//│ 	[LH_N]: 273
//│ case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₂(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 58 --->
//│ 	[LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²]: 144
//│ 	[LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰]: 272
//│ 	[LH_N]: 322
//│ case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰}: 110 --->
//│ 	[LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰]: 65
//│ case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 114 --->
//│ 	[LH_N]: 222
//│ 	[LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)]: 235
//│ 	[LH_N]: 358
//│ 	[LH_C h³ [LH_N]]: 359
//│ 	[LH_C g⁰ [LH_C h³ [LH_N]]]: 360
//│ 	[LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]: 361
//│ 	[LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]: 362
//│ 	[LH_C c⁰ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]]: 363
//│ 	[LH_C b⁰ [LH_C c⁰ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]]]: 364
//│ 	[LH_C a⁰ [LH_C b⁰ [LH_C c⁰ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]]]]: 365
//│ case _lh_dfs_arg2⁰ of {LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰ => case _lh_dfs_arg3⁰ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰] | LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ in case _lh_matchIdent⁰ of {LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 116 --->
//│ 	[LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰]: 76
//│ 	[LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]]: 87
//│ 	[LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)]: 105
//│ 	[LH_P2 [LH_N] [LH_N]]: 334
//│ case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰}: 169 --->
//│ 	[LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²]: 124
//│ case _lh_dfs_arg3¹ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²] | LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 173 --->
//│ 	[LH_N]: 222
//│ 	[LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)]: 235
//│ case _lh_dfs_arg2¹ of {LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1² => case _lh_dfs_arg3¹ of {LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²] | LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 175 --->
//│ 	[LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²]: 135
//│ 	[LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]]: 146
//│ 	[LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)]: 164
//│ 	[LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]]: 274
//│ case _lh_inList_arg2² of {LH_C _lh_inList_LH_C_0² _lh_inList_LH_C_1² => if (_lh_inList_arg1² == _lh_inList_LH_C_0²) then [True] else inList_lh_₁(_lh_inList_arg1², _lh_inList_LH_C_1²) | LH_N  => [False] | _  => error⁰}: 194 --->
//│ 	[LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²]: 144
//│ 	[LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰]: 272
//│ 	[LH_N]: 322
//│ case ls⁰ of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)] | LH_N  => [LH_N]}: 208 --->
//│ 	[LH_N]: 396
//│ 	[LH_C [LH_P2 h³ g⁰] [LH_N]]: 397
//│ 	[LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]: 398
//│ 	[LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]: 399
//│ 	[LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]: 400
//│ 	[LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]: 401
//│ 	[LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]: 402
//│ 	[LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]: 403
//│ 	[LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]: 404
//│ 	[LH_C [LH_P2 c⁰ b⁰] [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]]: 405
//│ 	[LH_C [LH_P2 b⁰ a⁰] [LH_C [LH_P2 c⁰ b⁰] [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]]]: 406
//│ case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 214 --->
//│ 	[LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰]: 252
//│ case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 219 --->
//│ 	[LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰]: 65
//│ case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰}: 243 --->
//│ 	[LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰]: 308
//│ 	[LH_P2 b⁰ a⁰]: 368
//│ 	[LH_P2 c⁰ b⁰]: 371
//│ 	[LH_P2 c⁰ d⁰]: 374
//│ 	[LH_P2 c⁰ h³]: 377
//│ 	[LH_P2 d⁰ c⁰]: 380
//│ 	[LH_P2 f¹ a⁰]: 383
//│ 	[LH_P2 f¹ g⁰]: 386
//│ 	[LH_P2 f¹ h³]: 389
//│ 	[LH_P2 g⁰ f¹]: 392
//│ 	[LH_P2 h³ g⁰]: 395
//│ case _lh_new_range_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰) | _  => error⁰} | _  => error⁰}: 245 --->
//│ 	[LH_C f⁰(h²) map_lh_₁(f⁰, t²)]: 206
//│ 	[LH_N]: 207
//│ 	[LH_N]: 396
//│ 	[LH_C [LH_P2 h³ g⁰] [LH_N]]: 397
//│ 	[LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]: 398
//│ 	[LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]: 399
//│ 	[LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]: 400
//│ 	[LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]: 401
//│ 	[LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]: 402
//│ 	[LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]: 403
//│ 	[LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]: 404
//│ 	[LH_C [LH_P2 c⁰ b⁰] [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]]: 405
//│ 	[LH_C [LH_P2 b⁰ a⁰] [LH_C [LH_P2 c⁰ b⁰] [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]]]: 406
//│ case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰}: 295 --->
//│ 	[LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²]: 124
//│ case _lh_span_tree_arg3⁰ of {LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰] | LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ in case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 299 --->
//│ 	[LH_C h⁰ mappend_lh_₂(t⁰, ys⁰)]: 26
//│ 	[LH_N]: 86
//│ 	[LH_N]: 333
//│ case _lh_span_tree_arg2⁰ of {LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰ => case _lh_span_tree_arg3⁰ of {LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰] | LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ in case _lh_matchIdent² of {LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 301 --->
//│ 	[LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰]: 263
//│ 	[LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]]: 290
//│ 	[LH_P2 [LH_N] [LH_N]]: 324
//│ case _lh_swap_arg1⁰ of {LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰] | _  => error⁰}: 310 --->
//│ 	[LH_P2 b⁰ a⁰]: 368
//│ 	[LH_P2 c⁰ b⁰]: 371
//│ 	[LH_P2 c⁰ d⁰]: 374
//│ 	[LH_P2 c⁰ h³]: 377
//│ 	[LH_P2 d⁰ c⁰]: 380
//│ 	[LH_P2 f¹ a⁰]: 383
//│ 	[LH_P2 f¹ g⁰]: 386
//│ 	[LH_P2 f¹ h³]: 389
//│ 	[LH_P2 g⁰ f¹]: 392
//│ 	[LH_P2 h³ g⁰]: 395
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testScc_nofib_lh_₁(primId⁰(0))
//│ def dfs_lh_₁(_lh_dfs_arg1³, _lh_dfs_arg2³, _lh_dfs_arg3³) = case _lh_dfs_arg2³ of {
//│ 	LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1² => case _lh_dfs_arg3³ of {
//│ 		LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²]
//│ 		| LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1³, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else 
//│ 			let _lh_matchIdent⁴ = dfs_lh_₁(_lh_dfs_arg1³, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1³(_lh_dfs_LH_C_0¹))
//│ 			in case _lh_matchIdent⁴ of {
//│ 				LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1³, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def dfs_lh_₂(_lh_dfs_arg1², _lh_dfs_arg2², _lh_dfs_arg3²) = case _lh_dfs_arg2² of {
//│ 	LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰ => case _lh_dfs_arg3² of {
//│ 		LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰]
//│ 		| LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1², [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else 
//│ 			let _lh_matchIdent³ = dfs_lh_₂(_lh_dfs_arg1², [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1²(_lh_dfs_LH_C_0⁰))
//│ 			in case _lh_matchIdent³ of {
//│ 				LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1², [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def inList_lh_₁(_lh_inList_arg1⁴, _lh_inList_arg2⁴) = case _lh_inList_arg2⁴ of {
//│ 	LH_C _lh_inList_LH_C_0² _lh_inList_LH_C_1² => if (_lh_inList_arg1⁴ == _lh_inList_LH_C_0²) then [True] else inList_lh_₁(_lh_inList_arg1⁴, _lh_inList_LH_C_1²)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inList_lh_₂(_lh_inList_arg1⁵, _lh_inList_arg2⁵) = case _lh_inList_arg2⁵ of {
//│ 	LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1⁵ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₂(_lh_inList_arg1⁵, _lh_inList_LH_C_1¹)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inList_lh_₃(_lh_inList_arg1³, _lh_inList_arg2³) = case _lh_inList_arg2³ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1³ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₃(_lh_inList_arg1³, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def map_lh_₁(f², ls¹) = case ls¹ of {
//│ 	LH_C h² t² => [LH_C f²(h²) map_lh_₁(f², t²)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh_₁(xs², ys²) = case xs² of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₁(t¹, ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₂(xs³, ys³) = case xs³ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂(t⁰, ys³)]
//│ 	| LH_N  => ys³}
//│ def snd_lh_₁(_lh_snd_arg1³) = case _lh_snd_arg1³ of {
//│ 	LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 	| _  => error⁰}
//│ def snd_lh_₂(_lh_snd_arg1²) = case _lh_snd_arg1² of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def stronglyConnComp_lh_₁(_lh_stronglyConnComp_arg1¹, _lh_stronglyConnComp_arg2¹) = 
//│ 	let swap¹ = (fun _lh_swap_arg1¹ -> case _lh_swap_arg1¹ of {
//│ 			LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰]
//│ 			| _  => error⁰})
//│ 	and span_tree¹ = (fun _lh_span_tree_arg1¹ -> (fun _lh_span_tree_arg2¹ -> (fun _lh_span_tree_arg3¹ -> case _lh_span_tree_arg2¹ of {
//│ 			LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰ => case _lh_span_tree_arg3¹ of {
//│ 				LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰]
//│ 				| LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree¹(_lh_span_tree_arg1¹, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else 
//│ 					let _lh_matchIdent⁵ = dfs_lh_₁(_lh_span_tree_arg1¹, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1¹(_lh_span_tree_LH_C_0⁰))
//│ 					in case _lh_matchIdent⁵ of {
//│ 						LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree¹(_lh_span_tree_arg1¹, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰)
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			| _  => error⁰})))
//│ 	and new_range¹ = (fun _lh_new_range_arg1¹ -> (fun _lh_new_range_arg2¹ -> case _lh_new_range_arg1¹ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {
//│ 				LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2¹) then [LH_C _lh_new_range_LH_P2_1⁰ new_range¹(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2¹)] else new_range¹(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2¹)
//│ 				| _  => error⁰}
//│ 			| _  => error⁰})) 
//│ 	in snd_lh_₂(span_tree¹(new_range¹(map_lh_₁(swap¹, _lh_stronglyConnComp_arg1¹)), [LH_P2 [LH_N] [LH_N]], snd_lh_₁(dfs_lh_₂(new_range¹(_lh_stronglyConnComp_arg1¹), [LH_P2 [LH_N] [LH_N]], _lh_stronglyConnComp_arg2¹))))
//│ def testScc_nofib_lh_₁(_lh_testScc_nofib_arg1¹) = 
//│ 	let a¹ = 1
//│ 	in let b¹ = 2
//│ 	in let c¹ = 3
//│ 	in let d¹ = 4
//│ 	in let f³ = 5
//│ 	in let g¹ = 6
//│ 	in let h⁴ = 7
//│ 	in let vertices¹ = [LH_C a¹ [LH_C b¹ [LH_C c¹ [LH_C d¹ [LH_C f³ [LH_C g¹ [LH_C h⁴ [LH_N]]]]]]]]
//│ 	in let edges¹ = [LH_C [LH_P2 b¹ a¹] [LH_C [LH_P2 c¹ b¹] [LH_C [LH_P2 c¹ d¹] [LH_C [LH_P2 c¹ h⁴] [LH_C [LH_P2 d¹ c¹] [LH_C [LH_P2 f³ a¹] [LH_C [LH_P2 f³ g¹] [LH_C [LH_P2 f³ h⁴] [LH_C [LH_P2 g¹ f³] [LH_C [LH_P2 h⁴ g¹] [LH_N]]]]]]]]]]]
//│ 	in stronglyConnComp_lh_₁(edges¹, vertices¹)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>> consumer ids >>>>>>>
//│ 
//│ <<<<<<< consumer ids <<<<<<<
//│ 
//│ >>>>>>> floating out info >>>>>>>
//│ 
//│ <<<<<<< floating out info <<<<<<<
//│ 
//│ >>>>>>> after inlining >>>>>>>
//│ testScc_nofib_lh_₁(primId⁰(0))
//│ def dfs_lh_₁(_lh_dfs_arg1¹, _lh_dfs_arg2¹, _lh_dfs_arg3¹) = case _lh_dfs_arg2¹ of {
//│ 	LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1² => case _lh_dfs_arg3¹ of {
//│ 		LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²]
//│ 		| LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else 
//│ 			let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ 			in case _lh_matchIdent¹ of {
//│ 				LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def dfs_lh_₂(_lh_dfs_arg1⁰, _lh_dfs_arg2⁰, _lh_dfs_arg3⁰) = case _lh_dfs_arg2⁰ of {
//│ 	LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰ => case _lh_dfs_arg3⁰ of {
//│ 		LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰]
//│ 		| LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else 
//│ 			let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ 			in case _lh_matchIdent⁰ of {
//│ 				LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def inList_lh_₁(_lh_inList_arg1¹, _lh_inList_arg2¹) = case _lh_inList_arg2¹ of {
//│ 	LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁(_lh_inList_arg1¹, _lh_inList_LH_C_1¹)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inList_lh_₂(_lh_inList_arg1², _lh_inList_arg2²) = case _lh_inList_arg2² of {
//│ 	LH_C _lh_inList_LH_C_0² _lh_inList_LH_C_1² => if (_lh_inList_arg1² == _lh_inList_LH_C_0²) then [True] else inList_lh_₂(_lh_inList_arg1², _lh_inList_LH_C_1²)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inList_lh_₃(_lh_inList_arg1⁰, _lh_inList_arg2⁰) = case _lh_inList_arg2⁰ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₃(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def map_lh_₁(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh_₁(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₁(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def mappend_lh_₂(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂(t¹, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def snd_lh_₁(_lh_snd_arg1¹) = case _lh_snd_arg1¹ of {
//│ 	LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 	| _  => error⁰}
//│ def snd_lh_₂(_lh_snd_arg1⁰) = case _lh_snd_arg1⁰ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def stronglyConnComp_lh_₁(_lh_stronglyConnComp_arg1⁰, _lh_stronglyConnComp_arg2⁰) = 
//│ 	let new_range⁰ = (fun _lh_new_range_arg1⁰ -> (fun _lh_new_range_arg2⁰ -> case _lh_new_range_arg1⁰ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {
//│ 				LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}))
//│ 	and span_tree⁰ = (fun _lh_span_tree_arg1⁰ -> (fun _lh_span_tree_arg2⁰ -> (fun _lh_span_tree_arg3⁰ -> case _lh_span_tree_arg2⁰ of {
//│ 			LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰ => case _lh_span_tree_arg3⁰ of {
//│ 				LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰]
//│ 				| LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else 
//│ 					let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ 					in case _lh_matchIdent² of {
//│ 						LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰)
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			| _  => error⁰})))
//│ 	and swap⁰ = (fun _lh_swap_arg1⁰ -> case _lh_swap_arg1⁰ of {
//│ 			LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰]
//│ 			| _  => error⁰}) 
//│ 	in snd_lh_₂(span_tree⁰(new_range⁰(map_lh_₁(swap⁰, _lh_stronglyConnComp_arg1⁰)), [LH_P2 [LH_N] [LH_N]], snd_lh_₁(dfs_lh_₂(new_range⁰(_lh_stronglyConnComp_arg1⁰), [LH_P2 [LH_N] [LH_N]], _lh_stronglyConnComp_arg2⁰))))
//│ def testScc_nofib_lh_₁(_lh_testScc_nofib_arg1⁰) = 
//│ 	let a⁰ = 1
//│ 	in let b⁰ = 2
//│ 	in let c⁰ = 3
//│ 	in let d⁰ = 4
//│ 	in let f¹ = 5
//│ 	in let g⁰ = 6
//│ 	in let h³ = 7
//│ 	in let vertices⁰ = [LH_C a⁰ [LH_C b⁰ [LH_C c⁰ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]]]]
//│ 	in let edges⁰ = [LH_C [LH_P2 b⁰ a⁰] [LH_C [LH_P2 c⁰ b⁰] [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]]]
//│ 	in stronglyConnComp_lh_₁(edges⁰, vertices⁰)
//│ <<<<<<< after inlining <<<<<<<
//│ 
//│ >>>>>>> after floating out >>>>>>>
//│ testScc_nofib_lh_₁(primId⁰(0))
//│ def dfs_lh_₁(_lh_dfs_arg1¹, _lh_dfs_arg2¹, _lh_dfs_arg3¹) = case _lh_dfs_arg2¹ of {
//│ 	LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1² => case _lh_dfs_arg3¹ of {
//│ 		LH_N  => [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²]
//│ 		| LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_C_1¹ => if inList_lh_₂(_lh_dfs_LH_C_0¹, _lh_dfs_LH_P2_0²) then dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0² _lh_dfs_LH_P2_1²], _lh_dfs_LH_C_1¹) else 
//│ 			let _lh_matchIdent¹ = dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 [LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_0²] [LH_N]], _lh_dfs_arg1¹(_lh_dfs_LH_C_0¹))
//│ 			in case _lh_matchIdent¹ of {
//│ 				LH_P2 _lh_dfs_LH_P2_0³ _lh_dfs_LH_P2_1³ => dfs_lh_₁(_lh_dfs_arg1¹, [LH_P2 _lh_dfs_LH_P2_0³ mappend_lh_₁([LH_C _lh_dfs_LH_C_0¹ _lh_dfs_LH_P2_1³], _lh_dfs_LH_P2_1²)], _lh_dfs_LH_C_1¹)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def dfs_lh_₂(_lh_dfs_arg1⁰, _lh_dfs_arg2⁰, _lh_dfs_arg3⁰) = case _lh_dfs_arg2⁰ of {
//│ 	LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰ => case _lh_dfs_arg3⁰ of {
//│ 		LH_N  => [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰]
//│ 		| LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_C_1⁰ => if inList_lh_₃(_lh_dfs_LH_C_0⁰, _lh_dfs_LH_P2_0⁰) then dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0⁰ _lh_dfs_LH_P2_1⁰], _lh_dfs_LH_C_1⁰) else 
//│ 			let _lh_matchIdent⁰ = dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 [LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_0⁰] [LH_N]], _lh_dfs_arg1⁰(_lh_dfs_LH_C_0⁰))
//│ 			in case _lh_matchIdent⁰ of {
//│ 				LH_P2 _lh_dfs_LH_P2_0¹ _lh_dfs_LH_P2_1¹ => dfs_lh_₂(_lh_dfs_arg1⁰, [LH_P2 _lh_dfs_LH_P2_0¹ mappend_lh_₂([LH_C _lh_dfs_LH_C_0⁰ _lh_dfs_LH_P2_1¹], _lh_dfs_LH_P2_1⁰)], _lh_dfs_LH_C_1⁰)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def inList_lh_₁(_lh_inList_arg1¹, _lh_inList_arg2¹) = case _lh_inList_arg2¹ of {
//│ 	LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁(_lh_inList_arg1¹, _lh_inList_LH_C_1¹)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inList_lh_₂(_lh_inList_arg1², _lh_inList_arg2²) = case _lh_inList_arg2² of {
//│ 	LH_C _lh_inList_LH_C_0² _lh_inList_LH_C_1² => if (_lh_inList_arg1² == _lh_inList_LH_C_0²) then [True] else inList_lh_₂(_lh_inList_arg1², _lh_inList_LH_C_1²)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inList_lh_₃(_lh_inList_arg1⁰, _lh_inList_arg2⁰) = case _lh_inList_arg2⁰ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₃(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def map_lh_₁(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h² t² => [LH_C f⁰(h²) map_lh_₁(f⁰, t²)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh_₁(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₁(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def mappend_lh_₂(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂(t¹, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def snd_lh_₁(_lh_snd_arg1¹) = case _lh_snd_arg1¹ of {
//│ 	LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 	| _  => error⁰}
//│ def snd_lh_₂(_lh_snd_arg1⁰) = case _lh_snd_arg1⁰ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def stronglyConnComp_lh_₁(_lh_stronglyConnComp_arg1⁰, _lh_stronglyConnComp_arg2⁰) = 
//│ 	let new_range⁰ = (fun _lh_new_range_arg1⁰ -> (fun _lh_new_range_arg2⁰ -> case _lh_new_range_arg1⁰ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_new_range_LH_C_0⁰ _lh_new_range_LH_C_1⁰ => case _lh_new_range_LH_C_0⁰ of {
//│ 				LH_P2 _lh_new_range_LH_P2_0⁰ _lh_new_range_LH_P2_1⁰ => if (_lh_new_range_LH_P2_0⁰ == _lh_new_range_arg2⁰) then [LH_C _lh_new_range_LH_P2_1⁰ new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)] else new_range⁰(_lh_new_range_LH_C_1⁰, _lh_new_range_arg2⁰)
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}))
//│ 	and span_tree⁰ = (fun _lh_span_tree_arg1⁰ -> (fun _lh_span_tree_arg2⁰ -> (fun _lh_span_tree_arg3⁰ -> case _lh_span_tree_arg2⁰ of {
//│ 			LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰ => case _lh_span_tree_arg3⁰ of {
//│ 				LH_N  => [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰]
//│ 				| LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_C_1⁰ => if inList_lh_₁(_lh_span_tree_LH_C_0⁰, _lh_span_tree_LH_P2_0⁰) then span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0⁰ _lh_span_tree_LH_P2_1⁰], _lh_span_tree_LH_C_1⁰) else 
//│ 					let _lh_matchIdent² = dfs_lh_₁(_lh_span_tree_arg1⁰, [LH_P2 [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_0⁰] [LH_N]], _lh_span_tree_arg1⁰(_lh_span_tree_LH_C_0⁰))
//│ 					in case _lh_matchIdent² of {
//│ 						LH_P2 _lh_span_tree_LH_P2_0¹ _lh_span_tree_LH_P2_1¹ => span_tree⁰(_lh_span_tree_arg1⁰, [LH_P2 _lh_span_tree_LH_P2_0¹ [LH_C [LH_C _lh_span_tree_LH_C_0⁰ _lh_span_tree_LH_P2_1¹] _lh_span_tree_LH_P2_1⁰]], _lh_span_tree_LH_C_1⁰)
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			| _  => error⁰})))
//│ 	and swap⁰ = (fun _lh_swap_arg1⁰ -> case _lh_swap_arg1⁰ of {
//│ 			LH_P2 _lh_swap_LH_P2_0⁰ _lh_swap_LH_P2_1⁰ => [LH_P2 _lh_swap_LH_P2_1⁰ _lh_swap_LH_P2_0⁰]
//│ 			| _  => error⁰}) 
//│ 	in snd_lh_₂(span_tree⁰(new_range⁰(map_lh_₁(swap⁰, _lh_stronglyConnComp_arg1⁰)), [LH_P2 [LH_N] [LH_N]], snd_lh_₁(dfs_lh_₂(new_range⁰(_lh_stronglyConnComp_arg1⁰), [LH_P2 [LH_N] [LH_N]], _lh_stronglyConnComp_arg2⁰))))
//│ def testScc_nofib_lh_₁(_lh_testScc_nofib_arg1⁰) = 
//│ 	let a⁰ = 1
//│ 	in let b⁰ = 2
//│ 	in let c⁰ = 3
//│ 	in let d⁰ = 4
//│ 	in let f¹ = 5
//│ 	in let g⁰ = 6
//│ 	in let h³ = 7
//│ 	in let vertices⁰ = [LH_C a⁰ [LH_C b⁰ [LH_C c⁰ [LH_C d⁰ [LH_C f¹ [LH_C g⁰ [LH_C h³ [LH_N]]]]]]]]
//│ 	in let edges⁰ = [LH_C [LH_P2 b⁰ a⁰] [LH_C [LH_P2 c⁰ b⁰] [LH_C [LH_P2 c⁰ d⁰] [LH_C [LH_P2 c⁰ h³] [LH_C [LH_P2 d⁰ c⁰] [LH_C [LH_P2 f¹ a⁰] [LH_C [LH_P2 f¹ g⁰] [LH_C [LH_P2 f¹ h³] [LH_C [LH_P2 g⁰ f¹] [LH_C [LH_P2 h³ g⁰] [LH_N]]]]]]]]]]]
//│ 	in stronglyConnComp_lh_₁(edges⁰, vertices⁰)
//│ <<<<<<< after floating out <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
