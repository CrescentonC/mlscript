:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
strEq (ha:ta) hbtb = case hbtb of { (hb:tb) -> if polyEq ha hb then strEq ta tb else False; [] -> False }
strEq [] hbtb = case hbtb of { (hb:tb) -> False; [] -> True }
max a b = if a > b then a else b
data MandTree = NS MandTree MandTree | EW MandTree MandTree | Leaf Colour deriving (Show)
-- Colour - colour of a point or rectangle
type Colour = Int
-- Point - 2-Tuple of integers, (Int1,Int2),
--         where Int1 - x-coord of point,
--               Int2 - y-coord of point.
type Point = (Int,Int)
-- MandTuple
type MandTuple = (Int,Int,Int,Int,Colour)
-- size: Size of window - Square 400x400
size :: Int
size = 200
-- build_tree - Constructs mandtree
build_tree :: Point -> Point -> MandTree
build_tree (x1,y1)
           (x2,y2)
           =
            let rec_col = check_perim (x1,y1) (x2,y2) in
            let split   = if (x2-x1) >= (y2-y1) then "NS" else "EW" in
            let split_x = (x2+x1) `div` 2 in
            let split_y = (y2+y1) `div` 2 in
            let nsp1    = (x1,y1) in
            let nsp2    = (split_x, y2) in
            let nsp3    = (split_x+1, y1) in
            let nsp4    = (x2,y2) in
            let ewp1    = (x1,y1) in
            let ewp2    = (x2, split_y) in
            let ewp3    = (x1, split_y+1) in
            let ewp4    = (x2,y2) in
            if rec_col /= (0-1) then
              Leaf rec_col
            else
              if strEq split "NS" then (NS (build_tree nsp1 nsp2) (build_tree nsp3 nsp4)) else (EW (build_tree ewp1 ewp2) (build_tree ewp3 ewp4))
check_perim :: Point -> Point -> Colour
check_perim (x1,y1) (x2,y2) =
              let col1         = point_colour (x1,y1) in
              let col2         = point_colour (x2,y1) in
              let col3         = point_colour (x2,y2) in
              let col4         = point_colour (x1,y2) in
              let corners_diff = if col1 == col2 then (if col1 == col3 then (if col1 == col4 then False else True) else True) else True in
              let check_line = \xcyc xdyd -> 
                                  case xcyc of {
                                    (xc,yc) -> case xdyd of {
                                      (xd,yd) ->
                                        let finished = if (equalp (xd,yd) right) then (xc >= x2)
                                                       else if (equalp (xd,yd) down) then (yc <= y2)
                                                       else if (equalp (xd,yd) left) then (xc <= x1)
                                                       else (yc >= y1)
                                        in
                                        if finished then True
                                        else if ((point_colour (xc,yc)) /= col1) then False
                                        else check_line (xc+xd, yc+yd) (xd,yd)
                                    }
                                  }
              in
              let check_sides =
                            if (check_line (x1+1,y1) right) then
                              if (check_line (x2,y1+1) down) then
                                if (check_line (x2-1,y2) left) then
                                  if (check_line (x1,y2-1) up) then
                                    col1
                                  else
                                    (0-1)
                                else
                                  (0-1)
                              else
                                (0-1)
                            else
                              (0-1)
              in
              if (equalp (x1,y1) (x2,y2)) then
                 point_colour (x1,y1)
              else if corners_diff then
                 0-1
              else
                check_sides
-- Evaluate the color index of a point
-- This is the algoritm described on page 121 of "The Beauty of Fractals"
-- The code is commented with the step numbers from the algorithm.
-- point_colour - Calculates the dwell value of a point.
point_colour :: Point -> Colour
point_colour (x, y) = check_radius (np x) (nq y) 0 0.0 0.0 -- step1
-- check_radius - Calculates the escape radius of a point
check_radius :: Float -> Float -> Int -> Float -> Float -> Colour
check_radius p q k x y =
  let xn = new_x x y p in
  let yn = new_y x y q in
  let r = radius xn yn in
  let kp = k + 1       in
  if kp == num_cols then 0
  else
    if polyGt r (float_of_int m) then
      kp
    else
      check_radius p q (kp) xn yn
-- M Set Properties.
pmn :: Float -- Min p value.
pmn =  0.0 -. 2.25
pmx :: Float -- Max p value.
pmx =   0.75
qmn :: Float -- Min q value.
qmn = 0.0 -. 1.5
qmx :: Float -- Max q value
qmx = 1.5
m :: Int      -- The escape radius, M.
m =  20
--- Misc functions.
equalp :: Point -> Point -> Bool
equalp (x1, y1) (x2, y2) = ((x1 == x2) && (y1 == y2))
-- Set calculation functions.
num_cols :: Int -- The number of colors; num_cols+1 = length (the_colors).
num_cols = 26
delta_p :: Float      -- The change in p per pixel.
delta_p =  (pmx -. pmn) /. (float_of_int (size - 1))
delta_q :: Float      -- The change in q per pixel.
delta_q =  (qmx -. qmn) /. (float_of_int (size - 1))
np :: Int -> Float     -- Calculate a new value of p.
np x = pmn +. ((float_of_int x) *. delta_p)
nq :: Int -> Float     -- Calculate a new value of q.
nq y = qmn +. ((float_of_int y) *. delta_q)
radius :: Float -> Float -> Float       -- Current radius of apoint (x,y).
radius x y = (x *. x) +. (y *. y)
new_x :: Float -> Float -> Float -> Float       -- iterate new x value.
new_x x y p = (x *. x) -. (y *. y) +. p
new_y :: Float -> Float -> Float -> Float       -- iterate new y value.
new_y x y q = (2.0 *. x *. y) +. q
-- Misc. functions for traversing perimeter of rectangle.
up,down,left,right :: Point
up    = ( 0,0-1)
down  = ( 0, 1)
left  = (0-1, 0)
right = ( 1, 0)
-- finite: forces evaluation of a tree
finite            :: MandTree -> Bool
finite (Leaf c)   =  (c == c)
finite (NS t1 t2) =  ((finite t1) && (finite t2))
finite (EW t1 t2) =  ((finite t1) && (finite t2))
testMandel2_nofib n =
  let size' = max (length n) size in
  let tree = (build_tree (0,0) (size', size' `div` 2)) in
  finite tree
testMandel2_nofib $ primId [5]
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testMandel2_nofib_₀^3192(primId⁰([LH_C 5 [LH_N]]))
//│ def build_tree_₀(_lh_build_tree_arg1¹, _lh_build_tree_arg2¹) = case _lh_build_tree_arg1¹ of {
//│ 	LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1² => case _lh_build_tree_arg2¹ of {
//│ 		LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => 
//│ 			let rec_col¹ = check_perim_₀^1932([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ 			in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ 			in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ 			in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ 			in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ 			in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ 			in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ 			in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ 			in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ 			in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ 			in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ 			in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ 			in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀^2026(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀^2035(nsp1¹, nsp2¹) build_tree_₀^2040(nsp3¹, nsp4¹)] else [EW build_tree_₀^2046(ewp1¹, ewp2¹) build_tree_₀^2051(ewp3¹, ewp4¹)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def check_perim_₀(_lh_check_perim_arg1¹, _lh_check_perim_arg2¹) = case _lh_check_perim_arg1¹ of {
//│ 	LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴ => case _lh_check_perim_arg2¹ of {
//│ 		LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵ => 
//│ 			let col1¹ = point_colour_₀^2219([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴])
//│ 			in let col2¹ = point_colour_₁^2224([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴])
//│ 			in let col3¹ = point_colour_₂^2229([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵])
//│ 			in let col4¹ = point_colour_₃^2234([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵])
//│ 			in let corners_diff¹ = if (col1¹ == col2¹) then if (col1¹ == col3¹) then if (col1¹ == col4¹) then [False] else [True] else [True] else [True]
//│ 			in let check_line¹ = (fun xcyc¹ -> (fun xdyd¹ -> 
//│ 				let _lh_matchIdent⁶ = xcyc¹
//│ 				in case _lh_matchIdent⁶ of {
//│ 					LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => 
//│ 						let _lh_matchIdent⁷ = xdyd¹
//│ 						in case _lh_matchIdent⁷ of {
//│ 							LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => 
//│ 								let finished¹ = if equalp_₀^2265([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀^2270) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁^2277([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀^2282) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂^2289([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀^2294) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ 								in if finished¹ then [True] else if (point_colour_₄^2312([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷])
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}))
//│ 			in let check_sides¹ = if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁴ + 1) _lh_check_perim_LH_P2_1⁴], right_₁^2358) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁵ (_lh_check_perim_LH_P2_1⁴ + 1)], down_₁^2369) then if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁵ - 1) _lh_check_perim_LH_P2_1⁵], left_₁^2380) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁴ (_lh_check_perim_LH_P2_1⁵ - 1)], up_₀^2391) then col1¹ else (0 - 1) else (0 - 1) else (0 - 1) else (0 - 1)
//│ 			in if equalp_₃^2418([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴], [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]) then point_colour_₅^2427([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]) else if corners_diff¹ then (0 - 1) else check_sides¹
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def check_radius_₀(_lh_check_radius_arg1¹, _lh_check_radius_arg2¹, _lh_check_radius_arg3¹, _lh_check_radius_arg4¹, _lh_check_radius_arg5¹) = 
//│ 	let xn¹ = new_x_₀^1588(_lh_check_radius_arg4¹, _lh_check_radius_arg5¹, _lh_check_radius_arg1¹)
//│ 	in let yn¹ = new_y_₀^1595(_lh_check_radius_arg4¹, _lh_check_radius_arg5¹, _lh_check_radius_arg2¹)
//│ 	in let r¹ = radius_₀^1602(xn¹, yn¹)
//│ 	in let kp¹ = (_lh_check_radius_arg3¹ + 1)
//│ 	in if (kp¹ == num_cols_₀^1615) then 0 else if polyGt⁰(r¹, float_of_int⁰(m_₀^1622)) then kp¹ else check_radius_₀^1626(_lh_check_radius_arg1¹, _lh_check_radius_arg2¹, kp¹, xn¹, yn¹)
//│ def check_radius_₁(_lh_check_radius_arg1², _lh_check_radius_arg2², _lh_check_radius_arg3², _lh_check_radius_arg4², _lh_check_radius_arg5²) = 
//│ 	let xn² = new_x_₁^1821(_lh_check_radius_arg4², _lh_check_radius_arg5², _lh_check_radius_arg1²)
//│ 	in let yn² = new_y_₁^1828(_lh_check_radius_arg4², _lh_check_radius_arg5², _lh_check_radius_arg2²)
//│ 	in let r² = radius_₁^1835(xn², yn²)
//│ 	in let kp² = (_lh_check_radius_arg3² + 1)
//│ 	in if (kp² == num_cols_₁^1848) then 0 else if polyGt⁰(r², float_of_int⁰(m_₁^1855)) then kp² else check_radius_₁^1859(_lh_check_radius_arg1², _lh_check_radius_arg2², kp², xn², yn²)
//│ def check_radius_₂(_lh_check_radius_arg1⁶, _lh_check_radius_arg2⁶, _lh_check_radius_arg3⁶, _lh_check_radius_arg4⁶, _lh_check_radius_arg5⁶) = 
//│ 	let xn⁶ = new_x_₂^3110(_lh_check_radius_arg4⁶, _lh_check_radius_arg5⁶, _lh_check_radius_arg1⁶)
//│ 	in let yn⁶ = new_y_₂^3117(_lh_check_radius_arg4⁶, _lh_check_radius_arg5⁶, _lh_check_radius_arg2⁶)
//│ 	in let r⁶ = radius_₂^3124(xn⁶, yn⁶)
//│ 	in let kp⁶ = (_lh_check_radius_arg3⁶ + 1)
//│ 	in if (kp⁶ == num_cols_₂^3137) then 0 else if polyGt⁰(r⁶, float_of_int⁰(m_₂^3144)) then kp⁶ else check_radius_₂^3148(_lh_check_radius_arg1⁶, _lh_check_radius_arg2⁶, kp⁶, xn⁶, yn⁶)
//│ def check_radius_₃(_lh_check_radius_arg1³, _lh_check_radius_arg2³, _lh_check_radius_arg3³, _lh_check_radius_arg4³, _lh_check_radius_arg5³) = 
//│ 	let xn³ = new_x_₃^2089(_lh_check_radius_arg4³, _lh_check_radius_arg5³, _lh_check_radius_arg1³)
//│ 	in let yn³ = new_y_₃^2096(_lh_check_radius_arg4³, _lh_check_radius_arg5³, _lh_check_radius_arg2³)
//│ 	in let r³ = radius_₃^2103(xn³, yn³)
//│ 	in let kp³ = (_lh_check_radius_arg3³ + 1)
//│ 	in if (kp³ == num_cols_₃^2116) then 0 else if polyGt⁰(r³, float_of_int⁰(m_₃^2123)) then kp³ else check_radius_₃^2127(_lh_check_radius_arg1³, _lh_check_radius_arg2³, kp³, xn³, yn³)
//│ def check_radius_₄(_lh_check_radius_arg1⁴, _lh_check_radius_arg2⁴, _lh_check_radius_arg3⁴, _lh_check_radius_arg4⁴, _lh_check_radius_arg5⁴) = 
//│ 	let xn⁴ = new_x_₄^2665(_lh_check_radius_arg4⁴, _lh_check_radius_arg5⁴, _lh_check_radius_arg1⁴)
//│ 	in let yn⁴ = new_y_₄^2672(_lh_check_radius_arg4⁴, _lh_check_radius_arg5⁴, _lh_check_radius_arg2⁴)
//│ 	in let r⁴ = radius_₄^2679(xn⁴, yn⁴)
//│ 	in let kp⁴ = (_lh_check_radius_arg3⁴ + 1)
//│ 	in if (kp⁴ == num_cols_₄^2692) then 0 else if polyGt⁰(r⁴, float_of_int⁰(m_₄^2699)) then kp⁴ else check_radius_₄^2703(_lh_check_radius_arg1⁴, _lh_check_radius_arg2⁴, kp⁴, xn⁴, yn⁴)
//│ def check_radius_₅(_lh_check_radius_arg1⁵, _lh_check_radius_arg2⁵, _lh_check_radius_arg3⁵, _lh_check_radius_arg4⁵, _lh_check_radius_arg5⁵) = 
//│ 	let xn⁵ = new_x_₅^3022(_lh_check_radius_arg4⁵, _lh_check_radius_arg5⁵, _lh_check_radius_arg1⁵)
//│ 	in let yn⁵ = new_y_₅^3029(_lh_check_radius_arg4⁵, _lh_check_radius_arg5⁵, _lh_check_radius_arg2⁵)
//│ 	in let r⁵ = radius_₅^3036(xn⁵, yn⁵)
//│ 	in let kp⁵ = (_lh_check_radius_arg3⁵ + 1)
//│ 	in if (kp⁵ == num_cols_₅^3049) then 0 else if polyGt⁰(r⁵, float_of_int⁰(m_₅^3056)) then kp⁵ else check_radius_₅^3060(_lh_check_radius_arg1⁵, _lh_check_radius_arg2⁵, kp⁵, xn⁵, yn⁵)
//│ def delta_p_₀ = ((pmx_₀^2537 -. pmn_₀^2539) /. float_of_int⁰((size_₀^2544 - 1)))
//│ def delta_p_₁ = ((pmx_₁^2498 -. pmn_₂^2500) /. float_of_int⁰((size_₂^2505 - 1)))
//│ def delta_p_₂ = ((pmx_₂^1768 -. pmn_₄^1770) /. float_of_int⁰((size_₄^1775 - 1)))
//│ def delta_p_₃ = ((pmx_₃^1651 -. pmn_₆^1653) /. float_of_int⁰((size_₆^1658 - 1)))
//│ def delta_p_₄ = ((pmx_₄^3177 -. pmn_₈^3179) /. float_of_int⁰((size_₈^3184 - 1)))
//│ def delta_p_₅ = ((pmx_₅^2164 -. pmn_₁₀^2166) /. float_of_int⁰((size_₁₀^2171 - 1)))
//│ def delta_q_₀ = ((qmx_₀^1419 -. qmn_₀^1421) /. float_of_int⁰((size_₁^1426 - 1)))
//│ def delta_q_₁ = ((qmx_₁^2814 -. qmn_₂^2816) /. float_of_int⁰((size_₃^2821 - 1)))
//│ def delta_q_₂ = ((qmx_₂^1692 -. qmn_₄^1694) /. float_of_int⁰((size_₅^1699 - 1)))
//│ def delta_q_₃ = ((qmx_₃^2799 -. qmn_₆^2801) /. float_of_int⁰((size_₇^2806 - 1)))
//│ def delta_q_₄ = ((qmx_₄^2867 -. qmn_₈^2869) /. float_of_int⁰((size_₉^2874 - 1)))
//│ def delta_q_₅ = ((qmx_₅^2646 -. qmn_₁₀^2648) /. float_of_int⁰((size_₁₁^2653 - 1)))
//│ def down_₀ = [LH_P2 0 1]
//│ def down_₁ = [LH_P2 0 1]
//│ def equalp_₀(_lh_equalp_arg1², _lh_equalp_arg2²) = case _lh_equalp_arg1² of {
//│ 	LH_P2 _lh_equalp_LH_P2_0⁴ _lh_equalp_LH_P2_1⁴ => case _lh_equalp_arg2² of {
//│ 		LH_P2 _lh_equalp_LH_P2_0⁵ _lh_equalp_LH_P2_1⁵ => ((_lh_equalp_LH_P2_0⁴ == _lh_equalp_LH_P2_0⁵) && (_lh_equalp_LH_P2_1⁴ == _lh_equalp_LH_P2_1⁵))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def equalp_₁(_lh_equalp_arg1³, _lh_equalp_arg2³) = case _lh_equalp_arg1³ of {
//│ 	LH_P2 _lh_equalp_LH_P2_0⁶ _lh_equalp_LH_P2_1⁶ => case _lh_equalp_arg2³ of {
//│ 		LH_P2 _lh_equalp_LH_P2_0⁷ _lh_equalp_LH_P2_1⁷ => ((_lh_equalp_LH_P2_0⁶ == _lh_equalp_LH_P2_0⁷) && (_lh_equalp_LH_P2_1⁶ == _lh_equalp_LH_P2_1⁷))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def equalp_₂(_lh_equalp_arg1⁴, _lh_equalp_arg2⁴) = case _lh_equalp_arg1⁴ of {
//│ 	LH_P2 _lh_equalp_LH_P2_0⁸ _lh_equalp_LH_P2_1⁸ => case _lh_equalp_arg2⁴ of {
//│ 		LH_P2 _lh_equalp_LH_P2_0⁹ _lh_equalp_LH_P2_1⁹ => ((_lh_equalp_LH_P2_0⁸ == _lh_equalp_LH_P2_0⁹) && (_lh_equalp_LH_P2_1⁸ == _lh_equalp_LH_P2_1⁹))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def equalp_₃(_lh_equalp_arg1¹, _lh_equalp_arg2¹) = case _lh_equalp_arg1¹ of {
//│ 	LH_P2 _lh_equalp_LH_P2_0² _lh_equalp_LH_P2_1² => case _lh_equalp_arg2¹ of {
//│ 		LH_P2 _lh_equalp_LH_P2_0³ _lh_equalp_LH_P2_1³ => ((_lh_equalp_LH_P2_0² == _lh_equalp_LH_P2_0³) && (_lh_equalp_LH_P2_1² == _lh_equalp_LH_P2_1³))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def finite_₀(_lh_finite_arg1¹) = case _lh_finite_arg1¹ of {
//│ 	Leaf _lh_finite_Leaf_0¹ => (_lh_finite_Leaf_0¹ == _lh_finite_Leaf_0¹)
//│ 	| NS _lh_finite_NS_0¹ _lh_finite_NS_1¹ => (finite_₀^2768(_lh_finite_NS_0¹) && finite_₀^2772(_lh_finite_NS_1¹))
//│ 	| EW _lh_finite_EW_0¹ _lh_finite_EW_1¹ => (finite_₀^2777(_lh_finite_EW_0¹) && finite_₀^2781(_lh_finite_EW_1¹))
//│ 	| _  => error⁰}
//│ def left_₀ = [LH_P2 (0 - 1) 0]
//│ def left_₁ = [LH_P2 (0 - 1) 0]
//│ def length_₀(ls¹⁹) = case ls¹⁹ of {
//│ 	LH_C h²⁰ t²² => (1 + length_₀^1526(t²²))
//│ 	| LH_N  => 0}
//│ def m_₀ = 20
//│ def m_₁ = 20
//│ def m_₂ = 20
//│ def m_₃ = 20
//│ def m_₄ = 20
//│ def m_₅ = 20
//│ def max_₀(_lh_max_arg1¹, _lh_max_arg2¹) = if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ def new_x_₀(_lh_new_x_arg1⁴, _lh_new_x_arg2⁴, _lh_new_x_arg3⁴) = (((_lh_new_x_arg1⁴ *. _lh_new_x_arg1⁴) -. (_lh_new_x_arg2⁴ *. _lh_new_x_arg2⁴)) +. _lh_new_x_arg3⁴)
//│ def new_x_₁(_lh_new_x_arg1⁶, _lh_new_x_arg2⁶, _lh_new_x_arg3⁶) = (((_lh_new_x_arg1⁶ *. _lh_new_x_arg1⁶) -. (_lh_new_x_arg2⁶ *. _lh_new_x_arg2⁶)) +. _lh_new_x_arg3⁶)
//│ def new_x_₂(_lh_new_x_arg1¹, _lh_new_x_arg2¹, _lh_new_x_arg3¹) = (((_lh_new_x_arg1¹ *. _lh_new_x_arg1¹) -. (_lh_new_x_arg2¹ *. _lh_new_x_arg2¹)) +. _lh_new_x_arg3¹)
//│ def new_x_₃(_lh_new_x_arg1⁵, _lh_new_x_arg2⁵, _lh_new_x_arg3⁵) = (((_lh_new_x_arg1⁵ *. _lh_new_x_arg1⁵) -. (_lh_new_x_arg2⁵ *. _lh_new_x_arg2⁵)) +. _lh_new_x_arg3⁵)
//│ def new_x_₄(_lh_new_x_arg1², _lh_new_x_arg2², _lh_new_x_arg3²) = (((_lh_new_x_arg1² *. _lh_new_x_arg1²) -. (_lh_new_x_arg2² *. _lh_new_x_arg2²)) +. _lh_new_x_arg3²)
//│ def new_x_₅(_lh_new_x_arg1³, _lh_new_x_arg2³, _lh_new_x_arg3³) = (((_lh_new_x_arg1³ *. _lh_new_x_arg1³) -. (_lh_new_x_arg2³ *. _lh_new_x_arg2³)) +. _lh_new_x_arg3³)
//│ def new_y_₀(_lh_new_y_arg1⁴, _lh_new_y_arg2⁴, _lh_new_y_arg3⁴) = (((2.0 *. _lh_new_y_arg1⁴) *. _lh_new_y_arg2⁴) +. _lh_new_y_arg3⁴)
//│ def new_y_₁(_lh_new_y_arg1⁶, _lh_new_y_arg2⁶, _lh_new_y_arg3⁶) = (((2.0 *. _lh_new_y_arg1⁶) *. _lh_new_y_arg2⁶) +. _lh_new_y_arg3⁶)
//│ def new_y_₂(_lh_new_y_arg1¹, _lh_new_y_arg2¹, _lh_new_y_arg3¹) = (((2.0 *. _lh_new_y_arg1¹) *. _lh_new_y_arg2¹) +. _lh_new_y_arg3¹)
//│ def new_y_₃(_lh_new_y_arg1³, _lh_new_y_arg2³, _lh_new_y_arg3³) = (((2.0 *. _lh_new_y_arg1³) *. _lh_new_y_arg2³) +. _lh_new_y_arg3³)
//│ def new_y_₄(_lh_new_y_arg1², _lh_new_y_arg2², _lh_new_y_arg3²) = (((2.0 *. _lh_new_y_arg1²) *. _lh_new_y_arg2²) +. _lh_new_y_arg3²)
//│ def new_y_₅(_lh_new_y_arg1⁵, _lh_new_y_arg2⁵, _lh_new_y_arg3⁵) = (((2.0 *. _lh_new_y_arg1⁵) *. _lh_new_y_arg2⁵) +. _lh_new_y_arg3⁵)
//│ def np_₀(_lh_np_arg1¹) = (pmn_₁^1535 +. (float_of_int⁰(_lh_np_arg1¹) *. delta_p_₀^1542))
//│ def np_₁(_lh_np_arg1⁶) = (pmn_₃^2962 +. (float_of_int⁰(_lh_np_arg1⁶) *. delta_p_₁^2969))
//│ def np_₂(_lh_np_arg1²) = (pmn_₅^1755 +. (float_of_int⁰(_lh_np_arg1²) *. delta_p_₂^1762))
//│ def np_₃(_lh_np_arg1³) = (pmn_₇^2455 +. (float_of_int⁰(_lh_np_arg1³) *. delta_p_₃^2462))
//│ def np_₄(_lh_np_arg1⁴) = (pmn_₉^2750 +. (float_of_int⁰(_lh_np_arg1⁴) *. delta_p_₄^2757))
//│ def np_₅(_lh_np_arg1⁵) = (pmn_₁₁^2898 +. (float_of_int⁰(_lh_np_arg1⁵) *. delta_p_₅^2905))
//│ def nq_₀(_lh_nq_arg1⁴) = (qmn_₁^2571 +. (float_of_int⁰(_lh_nq_arg1⁴) *. delta_q_₀^2578))
//│ def nq_₁(_lh_nq_arg1²) = (qmn_₃^2078 +. (float_of_int⁰(_lh_nq_arg1²) *. delta_q_₁^2085))
//│ def nq_₂(_lh_nq_arg1⁶) = (qmn_₅^2923 +. (float_of_int⁰(_lh_nq_arg1⁶) *. delta_q_₂^2930))
//│ def nq_₃(_lh_nq_arg1⁵) = (qmn_₇^2910 +. (float_of_int⁰(_lh_nq_arg1⁵) *. delta_q_₃^2917))
//│ def nq_₄(_lh_nq_arg1³) = (qmn_₉^2151 +. (float_of_int⁰(_lh_nq_arg1³) *. delta_q_₄^2158))
//│ def nq_₅(_lh_nq_arg1¹) = (qmn_₁₁^1433 +. (float_of_int⁰(_lh_nq_arg1¹) *. delta_q_₅^1440))
//│ def num_cols_₀ = 26
//│ def num_cols_₁ = 26
//│ def num_cols_₂ = 26
//│ def num_cols_₃ = 26
//│ def num_cols_₄ = 26
//│ def num_cols_₅ = 26
//│ def pmn_₀ = (0.0 -. 2.25)
//│ def pmn_₁ = (0.0 -. 2.25)
//│ def pmn_₁₀ = (0.0 -. 2.25)
//│ def pmn_₁₁ = (0.0 -. 2.25)
//│ def pmn_₂ = (0.0 -. 2.25)
//│ def pmn_₃ = (0.0 -. 2.25)
//│ def pmn_₄ = (0.0 -. 2.25)
//│ def pmn_₅ = (0.0 -. 2.25)
//│ def pmn_₆ = (0.0 -. 2.25)
//│ def pmn_₇ = (0.0 -. 2.25)
//│ def pmn_₈ = (0.0 -. 2.25)
//│ def pmn_₉ = (0.0 -. 2.25)
//│ def pmx_₀ = 0.75
//│ def pmx_₁ = 0.75
//│ def pmx_₂ = 0.75
//│ def pmx_₃ = 0.75
//│ def pmx_₄ = 0.75
//│ def pmx_₅ = 0.75
//│ def point_colour_₀(_lh_point_colour_arg1²) = case _lh_point_colour_arg1² of {
//│ 	LH_P2 _lh_point_colour_LH_P2_0² _lh_point_colour_LH_P2_1² => check_radius_₀^1885(np_₀^1886(_lh_point_colour_LH_P2_0²), nq_₀^1890(_lh_point_colour_LH_P2_1²), 0, 0.0, 0.0)
//│ 	| _  => error⁰}
//│ def point_colour_₁(_lh_point_colour_arg1⁶) = case _lh_point_colour_arg1⁶ of {
//│ 	LH_P2 _lh_point_colour_LH_P2_0⁶ _lh_point_colour_LH_P2_1⁶ => check_radius_₁^3000(np_₁^3001(_lh_point_colour_LH_P2_0⁶), nq_₁^3005(_lh_point_colour_LH_P2_1⁶), 0, 0.0, 0.0)
//│ 	| _  => error⁰}
//│ def point_colour_₂(_lh_point_colour_arg1⁵) = case _lh_point_colour_arg1⁵ of {
//│ 	LH_P2 _lh_point_colour_LH_P2_0⁵ _lh_point_colour_LH_P2_1⁵ => check_radius_₂^2731(np_₂^2732(_lh_point_colour_LH_P2_0⁵), nq_₂^2736(_lh_point_colour_LH_P2_1⁵), 0, 0.0, 0.0)
//│ 	| _  => error⁰}
//│ def point_colour_₃(_lh_point_colour_arg1⁴) = case _lh_point_colour_arg1⁴ of {
//│ 	LH_P2 _lh_point_colour_LH_P2_0⁴ _lh_point_colour_LH_P2_1⁴ => check_radius_₃^2517(np_₃^2518(_lh_point_colour_LH_P2_0⁴), nq_₃^2522(_lh_point_colour_LH_P2_1⁴), 0, 0.0, 0.0)
//│ 	| _  => error⁰}
//│ def point_colour_₄(_lh_point_colour_arg1³) = case _lh_point_colour_arg1³ of {
//│ 	LH_P2 _lh_point_colour_LH_P2_0³ _lh_point_colour_LH_P2_1³ => check_radius_₄^2189(np_₄^2190(_lh_point_colour_LH_P2_0³), nq_₄^2194(_lh_point_colour_LH_P2_1³), 0, 0.0, 0.0)
//│ 	| _  => error⁰}
//│ def point_colour_₅(_lh_point_colour_arg1¹) = case _lh_point_colour_arg1¹ of {
//│ 	LH_P2 _lh_point_colour_LH_P2_0¹ _lh_point_colour_LH_P2_1¹ => check_radius_₅^1547(np_₅^1548(_lh_point_colour_LH_P2_0¹), nq_₅^1552(_lh_point_colour_LH_P2_1¹), 0, 0.0, 0.0)
//│ 	| _  => error⁰}
//│ def qmn_₀ = (0.0 -. 1.5)
//│ def qmn_₁ = (0.0 -. 1.5)
//│ def qmn_₁₀ = (0.0 -. 1.5)
//│ def qmn_₁₁ = (0.0 -. 1.5)
//│ def qmn_₂ = (0.0 -. 1.5)
//│ def qmn_₃ = (0.0 -. 1.5)
//│ def qmn_₄ = (0.0 -. 1.5)
//│ def qmn_₅ = (0.0 -. 1.5)
//│ def qmn_₆ = (0.0 -. 1.5)
//│ def qmn_₇ = (0.0 -. 1.5)
//│ def qmn_₈ = (0.0 -. 1.5)
//│ def qmn_₉ = (0.0 -. 1.5)
//│ def qmx_₀ = 1.5
//│ def qmx_₁ = 1.5
//│ def qmx_₂ = 1.5
//│ def qmx_₃ = 1.5
//│ def qmx_₄ = 1.5
//│ def qmx_₅ = 1.5
//│ def radius_₀(_lh_radius_arg1², _lh_radius_arg2²) = ((_lh_radius_arg1² *. _lh_radius_arg1²) +. (_lh_radius_arg2² *. _lh_radius_arg2²))
//│ def radius_₁(_lh_radius_arg1³, _lh_radius_arg2³) = ((_lh_radius_arg1³ *. _lh_radius_arg1³) +. (_lh_radius_arg2³ *. _lh_radius_arg2³))
//│ def radius_₂(_lh_radius_arg1⁵, _lh_radius_arg2⁵) = ((_lh_radius_arg1⁵ *. _lh_radius_arg1⁵) +. (_lh_radius_arg2⁵ *. _lh_radius_arg2⁵))
//│ def radius_₃(_lh_radius_arg1⁴, _lh_radius_arg2⁴) = ((_lh_radius_arg1⁴ *. _lh_radius_arg1⁴) +. (_lh_radius_arg2⁴ *. _lh_radius_arg2⁴))
//│ def radius_₄(_lh_radius_arg1¹, _lh_radius_arg2¹) = ((_lh_radius_arg1¹ *. _lh_radius_arg1¹) +. (_lh_radius_arg2¹ *. _lh_radius_arg2¹))
//│ def radius_₅(_lh_radius_arg1⁶, _lh_radius_arg2⁶) = ((_lh_radius_arg1⁶ *. _lh_radius_arg1⁶) +. (_lh_radius_arg2⁶ *. _lh_radius_arg2⁶))
//│ def right_₀ = [LH_P2 1 0]
//│ def right_₁ = [LH_P2 1 0]
//│ def size_₀ = 200
//│ def size_₁ = 200
//│ def size_₁₀ = 200
//│ def size_₁₁ = 200
//│ def size_₁₂ = 200
//│ def size_₂ = 200
//│ def size_₃ = 200
//│ def size_₄ = 200
//│ def size_₅ = 200
//│ def size_₆ = 200
//│ def size_₇ = 200
//│ def size_₈ = 200
//│ def size_₉ = 200
//│ def strEq_₀(_lh_strEq_arg1¹, _lh_strEq_arg2¹) = case _lh_strEq_arg1¹ of {
//│ 	LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => 
//│ 		let _lh_matchIdent⁴ = _lh_strEq_arg2¹
//│ 		in case _lh_matchIdent⁴ of {
//│ 			LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀^1453(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False]
//│ 			| LH_N  => [False]
//│ 			| _  => error⁰}
//│ 	| LH_N  => 
//│ 		let _lh_matchIdent⁵ = _lh_strEq_arg2¹
//│ 		in case _lh_matchIdent⁵ of {
//│ 			LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False]
//│ 			| LH_N  => [True]
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def testMandel2_nofib_₀(_lh_testMandel2_nofib_arg1¹) = 
//│ 	let size'¹ = max_₀^2615(length_₀^2616(_lh_testMandel2_nofib_arg1¹), size_₁₂^2620)
//│ 	in let tree¹ = build_tree_₀^2622([LH_P2 0 0], [LH_P2 size'¹ div⁰(size'¹, 2)])
//│ 	in finite_₀^2635(tree¹)
//│ def up_₀ = [LH_P2 0 (0 - 1)]
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec build_tree__d0 _lh_build_tree_arg1_1 _lh_build_tree_arg2_1 =
//│ 		  (match _lh_build_tree_arg1_1 with
//│ 		    | `LH_P2(_lh_build_tree_LH_P2_0_2, _lh_build_tree_LH_P2_1_2) -> 
//│ 		      (match _lh_build_tree_arg2_1 with
//│ 		        | `LH_P2(_lh_build_tree_LH_P2_0_3, _lh_build_tree_LH_P2_1_3) -> 
//│ 		          (let rec rec_col_1 = ((check_perim__d0 (`LH_P2(_lh_build_tree_LH_P2_0_2, _lh_build_tree_LH_P2_1_2))) (`LH_P2(_lh_build_tree_LH_P2_0_3, _lh_build_tree_LH_P2_1_3))) in
//│ 		            (let rec split_1 = (if ((_lh_build_tree_LH_P2_0_3 - _lh_build_tree_LH_P2_0_2) >= (_lh_build_tree_LH_P2_1_3 - _lh_build_tree_LH_P2_1_2)) then
//│ 		              (`LH_C('N', (`LH_C('S', (`LH_N)))))
//│ 		            else
//│ 		              (`LH_C('E', (`LH_C('W', (`LH_N)))))) in
//│ 		              (let rec split_x_1 = ((_lh_build_tree_LH_P2_0_3 + _lh_build_tree_LH_P2_0_2) / 2) in
//│ 		                (let rec split_y_1 = ((_lh_build_tree_LH_P2_1_3 + _lh_build_tree_LH_P2_1_2) / 2) in
//│ 		                  (let rec nsp1_1 = (`LH_P2(_lh_build_tree_LH_P2_0_2, _lh_build_tree_LH_P2_1_2)) in
//│ 		                    (let rec nsp2_1 = (`LH_P2(split_x_1, _lh_build_tree_LH_P2_1_3)) in
//│ 		                      (let rec nsp3_1 = (`LH_P2((split_x_1 + 1), _lh_build_tree_LH_P2_1_2)) in
//│ 		                        (let rec nsp4_1 = (`LH_P2(_lh_build_tree_LH_P2_0_3, _lh_build_tree_LH_P2_1_3)) in
//│ 		                          (let rec ewp1_1 = (`LH_P2(_lh_build_tree_LH_P2_0_2, _lh_build_tree_LH_P2_1_2)) in
//│ 		                            (let rec ewp2_1 = (`LH_P2(_lh_build_tree_LH_P2_0_3, split_y_1)) in
//│ 		                              (let rec ewp3_1 = (`LH_P2(_lh_build_tree_LH_P2_0_2, (split_y_1 + 1))) in
//│ 		                                (let rec ewp4_1 = (`LH_P2(_lh_build_tree_LH_P2_0_3, _lh_build_tree_LH_P2_1_3)) in
//│ 		                                  (if (rec_col_1 <> (0 - 1)) then
//│ 		                                    (`Leaf(rec_col_1))
//│ 		                                  else
//│ 		                                    (if ((strEq__d0 split_1) (`LH_C('N', (`LH_C('S', (`LH_N)))))) then
//│ 		                                      (`NS(((build_tree__d0 nsp1_1) nsp2_1), ((build_tree__d0 nsp3_1) nsp4_1)))
//│ 		                                    else
//│ 		                                      (`EW(((build_tree__d0 ewp1_1) ewp2_1), ((build_tree__d0 ewp3_1) ewp4_1)))))))))))))))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and check_perim__d0 _lh_check_perim_arg1_1 _lh_check_perim_arg2_1 =
//│ 		  (match _lh_check_perim_arg1_1 with
//│ 		    | `LH_P2(_lh_check_perim_LH_P2_0_4, _lh_check_perim_LH_P2_1_4) -> 
//│ 		      (match _lh_check_perim_arg2_1 with
//│ 		        | `LH_P2(_lh_check_perim_LH_P2_0_5, _lh_check_perim_LH_P2_1_5) -> 
//│ 		          (let rec col1_1 = (point_colour__d0 (`LH_P2(_lh_check_perim_LH_P2_0_4, _lh_check_perim_LH_P2_1_4))) in
//│ 		            (let rec col2_1 = (point_colour__d1 (`LH_P2(_lh_check_perim_LH_P2_0_5, _lh_check_perim_LH_P2_1_4))) in
//│ 		              (let rec col3_1 = (point_colour__d2 (`LH_P2(_lh_check_perim_LH_P2_0_5, _lh_check_perim_LH_P2_1_5))) in
//│ 		                (let rec col4_1 = (point_colour__d3 (`LH_P2(_lh_check_perim_LH_P2_0_4, _lh_check_perim_LH_P2_1_5))) in
//│ 		                  (let rec corners_diff_1 = (if (col1_1 = col2_1) then
//│ 		                    (if (col1_1 = col3_1) then
//│ 		                      (if (col1_1 = col4_1) then
//│ 		                        false
//│ 		                      else
//│ 		                        true)
//│ 		                    else
//│ 		                      true)
//│ 		                  else
//│ 		                    true) in
//│ 		                    (let rec check_line_1 = (fun xcyc_1 xdyd_1 -> 
//│ 		                      (let rec _lh_matchIdent_6 = xcyc_1 in
//│ 		                        (match _lh_matchIdent_6 with
//│ 		                          | `LH_P2(_lh_check_perim_LH_P2_0_6, _lh_check_perim_LH_P2_1_6) -> 
//│ 		                            (let rec _lh_matchIdent_7 = xdyd_1 in
//│ 		                              (match _lh_matchIdent_7 with
//│ 		                                | `LH_P2(_lh_check_perim_LH_P2_0_7, _lh_check_perim_LH_P2_1_7) -> 
//│ 		                                  (let rec finished_1 = (if ((equalp__d0 (`LH_P2(_lh_check_perim_LH_P2_0_7, _lh_check_perim_LH_P2_1_7))) right__d0) then
//│ 		                                    (_lh_check_perim_LH_P2_0_6 >= _lh_check_perim_LH_P2_0_5)
//│ 		                                  else
//│ 		                                    (if ((equalp__d1 (`LH_P2(_lh_check_perim_LH_P2_0_7, _lh_check_perim_LH_P2_1_7))) down__d0) then
//│ 		                                      (_lh_check_perim_LH_P2_1_6 <= _lh_check_perim_LH_P2_1_5)
//│ 		                                    else
//│ 		                                      (if ((equalp__d2 (`LH_P2(_lh_check_perim_LH_P2_0_7, _lh_check_perim_LH_P2_1_7))) left__d0) then
//│ 		                                        (_lh_check_perim_LH_P2_0_6 <= _lh_check_perim_LH_P2_0_4)
//│ 		                                      else
//│ 		                                        (_lh_check_perim_LH_P2_1_6 >= _lh_check_perim_LH_P2_1_4)))) in
//│ 		                                    (if finished_1 then
//│ 		                                      true
//│ 		                                    else
//│ 		                                      (if ((point_colour__d4 (`LH_P2(_lh_check_perim_LH_P2_0_6, _lh_check_perim_LH_P2_1_6))) <> col1_1) then
//│ 		                                        false
//│ 		                                      else
//│ 		                                        ((check_line_1 (`LH_P2((_lh_check_perim_LH_P2_0_6 + _lh_check_perim_LH_P2_0_7), (_lh_check_perim_LH_P2_1_6 + _lh_check_perim_LH_P2_1_7)))) (`LH_P2(_lh_check_perim_LH_P2_0_7, _lh_check_perim_LH_P2_1_7))))))
//│ 		                                | _ -> 
//│ 		                                  (failwith "error")))
//│ 		                          | _ -> 
//│ 		                            (failwith "error")))) in
//│ 		                      (let rec check_sides_1 = (if ((check_line_1 (`LH_P2((_lh_check_perim_LH_P2_0_4 + 1), _lh_check_perim_LH_P2_1_4))) right__d1) then
//│ 		                        (if ((check_line_1 (`LH_P2(_lh_check_perim_LH_P2_0_5, (_lh_check_perim_LH_P2_1_4 + 1)))) down__d1) then
//│ 		                          (if ((check_line_1 (`LH_P2((_lh_check_perim_LH_P2_0_5 - 1), _lh_check_perim_LH_P2_1_5))) left__d1) then
//│ 		                            (if ((check_line_1 (`LH_P2(_lh_check_perim_LH_P2_0_4, (_lh_check_perim_LH_P2_1_5 - 1)))) up__d0) then
//│ 		                              col1_1
//│ 		                            else
//│ 		                              (0 - 1))
//│ 		                          else
//│ 		                            (0 - 1))
//│ 		                        else
//│ 		                          (0 - 1))
//│ 		                      else
//│ 		                        (0 - 1)) in
//│ 		                        (if ((equalp__d3 (`LH_P2(_lh_check_perim_LH_P2_0_4, _lh_check_perim_LH_P2_1_4))) (`LH_P2(_lh_check_perim_LH_P2_0_5, _lh_check_perim_LH_P2_1_5))) then
//│ 		                          (point_colour__d5 (`LH_P2(_lh_check_perim_LH_P2_0_4, _lh_check_perim_LH_P2_1_4)))
//│ 		                        else
//│ 		                          (if corners_diff_1 then
//│ 		                            (0 - 1)
//│ 		                          else
//│ 		                            check_sides_1)))))))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and check_radius__d0 _lh_check_radius_arg1_1 _lh_check_radius_arg2_1 _lh_check_radius_arg3_1 _lh_check_radius_arg4_1 _lh_check_radius_arg5_1 =
//│ 		  (let rec xn_1 = (((new_x__d0 _lh_check_radius_arg4_1) _lh_check_radius_arg5_1) _lh_check_radius_arg1_1) in
//│ 		    (let rec yn_1 = (((new_y__d0 _lh_check_radius_arg4_1) _lh_check_radius_arg5_1) _lh_check_radius_arg2_1) in
//│ 		      (let rec r_1 = ((radius__d0 xn_1) yn_1) in
//│ 		        (let rec kp_1 = (_lh_check_radius_arg3_1 + 1) in
//│ 		          (if (kp_1 = num_cols__d0) then
//│ 		            0
//│ 		          else
//│ 		            (if (r_1 > (float_of_int m__d0)) then
//│ 		              kp_1
//│ 		            else
//│ 		              (((((check_radius__d0 _lh_check_radius_arg1_1) _lh_check_radius_arg2_1) kp_1) xn_1) yn_1)))))))
//│ 		and check_radius__d1 _lh_check_radius_arg1_2 _lh_check_radius_arg2_2 _lh_check_radius_arg3_2 _lh_check_radius_arg4_2 _lh_check_radius_arg5_2 =
//│ 		  (let rec xn_2 = (((new_x__d1 _lh_check_radius_arg4_2) _lh_check_radius_arg5_2) _lh_check_radius_arg1_2) in
//│ 		    (let rec yn_2 = (((new_y__d1 _lh_check_radius_arg4_2) _lh_check_radius_arg5_2) _lh_check_radius_arg2_2) in
//│ 		      (let rec r_2 = ((radius__d1 xn_2) yn_2) in
//│ 		        (let rec kp_2 = (_lh_check_radius_arg3_2 + 1) in
//│ 		          (if (kp_2 = num_cols__d1) then
//│ 		            0
//│ 		          else
//│ 		            (if (r_2 > (float_of_int m__d1)) then
//│ 		              kp_2
//│ 		            else
//│ 		              (((((check_radius__d1 _lh_check_radius_arg1_2) _lh_check_radius_arg2_2) kp_2) xn_2) yn_2)))))))
//│ 		and check_radius__d2 _lh_check_radius_arg1_6 _lh_check_radius_arg2_6 _lh_check_radius_arg3_6 _lh_check_radius_arg4_6 _lh_check_radius_arg5_6 =
//│ 		  (let rec xn_6 = (((new_x__d2 _lh_check_radius_arg4_6) _lh_check_radius_arg5_6) _lh_check_radius_arg1_6) in
//│ 		    (let rec yn_6 = (((new_y__d2 _lh_check_radius_arg4_6) _lh_check_radius_arg5_6) _lh_check_radius_arg2_6) in
//│ 		      (let rec r_6 = ((radius__d2 xn_6) yn_6) in
//│ 		        (let rec kp_6 = (_lh_check_radius_arg3_6 + 1) in
//│ 		          (if (kp_6 = num_cols__d2) then
//│ 		            0
//│ 		          else
//│ 		            (if (r_6 > (float_of_int m__d2)) then
//│ 		              kp_6
//│ 		            else
//│ 		              (((((check_radius__d2 _lh_check_radius_arg1_6) _lh_check_radius_arg2_6) kp_6) xn_6) yn_6)))))))
//│ 		and check_radius__d3 _lh_check_radius_arg1_3 _lh_check_radius_arg2_3 _lh_check_radius_arg3_3 _lh_check_radius_arg4_3 _lh_check_radius_arg5_3 =
//│ 		  (let rec xn_3 = (((new_x__d3 _lh_check_radius_arg4_3) _lh_check_radius_arg5_3) _lh_check_radius_arg1_3) in
//│ 		    (let rec yn_3 = (((new_y__d3 _lh_check_radius_arg4_3) _lh_check_radius_arg5_3) _lh_check_radius_arg2_3) in
//│ 		      (let rec r_3 = ((radius__d3 xn_3) yn_3) in
//│ 		        (let rec kp_3 = (_lh_check_radius_arg3_3 + 1) in
//│ 		          (if (kp_3 = num_cols__d3) then
//│ 		            0
//│ 		          else
//│ 		            (if (r_3 > (float_of_int m__d3)) then
//│ 		              kp_3
//│ 		            else
//│ 		              (((((check_radius__d3 _lh_check_radius_arg1_3) _lh_check_radius_arg2_3) kp_3) xn_3) yn_3)))))))
//│ 		and check_radius__d4 _lh_check_radius_arg1_4 _lh_check_radius_arg2_4 _lh_check_radius_arg3_4 _lh_check_radius_arg4_4 _lh_check_radius_arg5_4 =
//│ 		  (let rec xn_4 = (((new_x__d4 _lh_check_radius_arg4_4) _lh_check_radius_arg5_4) _lh_check_radius_arg1_4) in
//│ 		    (let rec yn_4 = (((new_y__d4 _lh_check_radius_arg4_4) _lh_check_radius_arg5_4) _lh_check_radius_arg2_4) in
//│ 		      (let rec r_4 = ((radius__d4 xn_4) yn_4) in
//│ 		        (let rec kp_4 = (_lh_check_radius_arg3_4 + 1) in
//│ 		          (if (kp_4 = num_cols__d4) then
//│ 		            0
//│ 		          else
//│ 		            (if (r_4 > (float_of_int m__d4)) then
//│ 		              kp_4
//│ 		            else
//│ 		              (((((check_radius__d4 _lh_check_radius_arg1_4) _lh_check_radius_arg2_4) kp_4) xn_4) yn_4)))))))
//│ 		and check_radius__d5 _lh_check_radius_arg1_5 _lh_check_radius_arg2_5 _lh_check_radius_arg3_5 _lh_check_radius_arg4_5 _lh_check_radius_arg5_5 =
//│ 		  (let rec xn_5 = (((new_x__d5 _lh_check_radius_arg4_5) _lh_check_radius_arg5_5) _lh_check_radius_arg1_5) in
//│ 		    (let rec yn_5 = (((new_y__d5 _lh_check_radius_arg4_5) _lh_check_radius_arg5_5) _lh_check_radius_arg2_5) in
//│ 		      (let rec r_5 = ((radius__d5 xn_5) yn_5) in
//│ 		        (let rec kp_5 = (_lh_check_radius_arg3_5 + 1) in
//│ 		          (if (kp_5 = num_cols__d5) then
//│ 		            0
//│ 		          else
//│ 		            (if (r_5 > (float_of_int m__d5)) then
//│ 		              kp_5
//│ 		            else
//│ 		              (((((check_radius__d5 _lh_check_radius_arg1_5) _lh_check_radius_arg2_5) kp_5) xn_5) yn_5)))))))
//│ 		and delta_p__d0 =
//│ 		  ((pmx__d0 -. pmn__d0) /. (float_of_int (size__d0 - 1)))
//│ 		and delta_p__d1 =
//│ 		  ((pmx__d1 -. pmn__d2) /. (float_of_int (size__d2 - 1)))
//│ 		and delta_p__d2 =
//│ 		  ((pmx__d2 -. pmn__d4) /. (float_of_int (size__d4 - 1)))
//│ 		and delta_p__d3 =
//│ 		  ((pmx__d3 -. pmn__d6) /. (float_of_int (size__d6 - 1)))
//│ 		and delta_p__d4 =
//│ 		  ((pmx__d4 -. pmn__d8) /. (float_of_int (size__d8 - 1)))
//│ 		and delta_p__d5 =
//│ 		  ((pmx__d5 -. pmn__d1_d0) /. (float_of_int (size__d1_d0 - 1)))
//│ 		and delta_q__d0 =
//│ 		  ((qmx__d0 -. qmn__d0) /. (float_of_int (size__d1 - 1)))
//│ 		and delta_q__d1 =
//│ 		  ((qmx__d1 -. qmn__d2) /. (float_of_int (size__d3 - 1)))
//│ 		and delta_q__d2 =
//│ 		  ((qmx__d2 -. qmn__d4) /. (float_of_int (size__d5 - 1)))
//│ 		and delta_q__d3 =
//│ 		  ((qmx__d3 -. qmn__d6) /. (float_of_int (size__d7 - 1)))
//│ 		and delta_q__d4 =
//│ 		  ((qmx__d4 -. qmn__d8) /. (float_of_int (size__d9 - 1)))
//│ 		and delta_q__d5 =
//│ 		  ((qmx__d5 -. qmn__d1_d0) /. (float_of_int (size__d1_d1 - 1)))
//│ 		and down__d0 =
//│ 		  (`LH_P2(0, 1))
//│ 		and down__d1 =
//│ 		  (`LH_P2(0, 1))
//│ 		and equalp__d0 _lh_equalp_arg1_2 _lh_equalp_arg2_2 =
//│ 		  (match _lh_equalp_arg1_2 with
//│ 		    | `LH_P2(_lh_equalp_LH_P2_0_4, _lh_equalp_LH_P2_1_4) -> 
//│ 		      (match _lh_equalp_arg2_2 with
//│ 		        | `LH_P2(_lh_equalp_LH_P2_0_5, _lh_equalp_LH_P2_1_5) -> 
//│ 		          ((_lh_equalp_LH_P2_0_4 = _lh_equalp_LH_P2_0_5) && (_lh_equalp_LH_P2_1_4 = _lh_equalp_LH_P2_1_5))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and equalp__d1 _lh_equalp_arg1_3 _lh_equalp_arg2_3 =
//│ 		  (match _lh_equalp_arg1_3 with
//│ 		    | `LH_P2(_lh_equalp_LH_P2_0_6, _lh_equalp_LH_P2_1_6) -> 
//│ 		      (match _lh_equalp_arg2_3 with
//│ 		        | `LH_P2(_lh_equalp_LH_P2_0_7, _lh_equalp_LH_P2_1_7) -> 
//│ 		          ((_lh_equalp_LH_P2_0_6 = _lh_equalp_LH_P2_0_7) && (_lh_equalp_LH_P2_1_6 = _lh_equalp_LH_P2_1_7))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and equalp__d2 _lh_equalp_arg1_4 _lh_equalp_arg2_4 =
//│ 		  (match _lh_equalp_arg1_4 with
//│ 		    | `LH_P2(_lh_equalp_LH_P2_0_8, _lh_equalp_LH_P2_1_8) -> 
//│ 		      (match _lh_equalp_arg2_4 with
//│ 		        | `LH_P2(_lh_equalp_LH_P2_0_9, _lh_equalp_LH_P2_1_9) -> 
//│ 		          ((_lh_equalp_LH_P2_0_8 = _lh_equalp_LH_P2_0_9) && (_lh_equalp_LH_P2_1_8 = _lh_equalp_LH_P2_1_9))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and equalp__d3 _lh_equalp_arg1_1 _lh_equalp_arg2_1 =
//│ 		  (match _lh_equalp_arg1_1 with
//│ 		    | `LH_P2(_lh_equalp_LH_P2_0_2, _lh_equalp_LH_P2_1_2) -> 
//│ 		      (match _lh_equalp_arg2_1 with
//│ 		        | `LH_P2(_lh_equalp_LH_P2_0_3, _lh_equalp_LH_P2_1_3) -> 
//│ 		          ((_lh_equalp_LH_P2_0_2 = _lh_equalp_LH_P2_0_3) && (_lh_equalp_LH_P2_1_2 = _lh_equalp_LH_P2_1_3))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and finite__d0 _lh_finite_arg1_1 =
//│ 		  (match _lh_finite_arg1_1 with
//│ 		    | `Leaf(_lh_finite_Leaf_0_1) -> 
//│ 		      (_lh_finite_Leaf_0_1 = _lh_finite_Leaf_0_1)
//│ 		    | `NS(_lh_finite_NS_0_1, _lh_finite_NS_1_1) -> 
//│ 		      ((finite__d0 _lh_finite_NS_0_1) && (finite__d0 _lh_finite_NS_1_1))
//│ 		    | `EW(_lh_finite_EW_0_1, _lh_finite_EW_1_1) -> 
//│ 		      ((finite__d0 _lh_finite_EW_0_1) && (finite__d0 _lh_finite_EW_1_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and left__d0 =
//│ 		  (`LH_P2((0 - 1), 0))
//│ 		and left__d1 =
//│ 		  (`LH_P2((0 - 1), 0))
//│ 		and length__d0 ls_1_9 =
//│ 		  (match ls_1_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (1 + (length__d0 t_2_2))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and m__d0 =
//│ 		  20
//│ 		and m__d1 =
//│ 		  20
//│ 		and m__d2 =
//│ 		  20
//│ 		and m__d3 =
//│ 		  20
//│ 		and m__d4 =
//│ 		  20
//│ 		and m__d5 =
//│ 		  20
//│ 		and max__d0 _lh_max_arg1_1 _lh_max_arg2_1 =
//│ 		  (if (_lh_max_arg1_1 > _lh_max_arg2_1) then
//│ 		    _lh_max_arg1_1
//│ 		  else
//│ 		    _lh_max_arg2_1)
//│ 		and new_x__d0 _lh_new_x_arg1_4 _lh_new_x_arg2_4 _lh_new_x_arg3_4 =
//│ 		  (((_lh_new_x_arg1_4 *. _lh_new_x_arg1_4) -. (_lh_new_x_arg2_4 *. _lh_new_x_arg2_4)) +. _lh_new_x_arg3_4)
//│ 		and new_x__d1 _lh_new_x_arg1_6 _lh_new_x_arg2_6 _lh_new_x_arg3_6 =
//│ 		  (((_lh_new_x_arg1_6 *. _lh_new_x_arg1_6) -. (_lh_new_x_arg2_6 *. _lh_new_x_arg2_6)) +. _lh_new_x_arg3_6)
//│ 		and new_x__d2 _lh_new_x_arg1_1 _lh_new_x_arg2_1 _lh_new_x_arg3_1 =
//│ 		  (((_lh_new_x_arg1_1 *. _lh_new_x_arg1_1) -. (_lh_new_x_arg2_1 *. _lh_new_x_arg2_1)) +. _lh_new_x_arg3_1)
//│ 		and new_x__d3 _lh_new_x_arg1_5 _lh_new_x_arg2_5 _lh_new_x_arg3_5 =
//│ 		  (((_lh_new_x_arg1_5 *. _lh_new_x_arg1_5) -. (_lh_new_x_arg2_5 *. _lh_new_x_arg2_5)) +. _lh_new_x_arg3_5)
//│ 		and new_x__d4 _lh_new_x_arg1_2 _lh_new_x_arg2_2 _lh_new_x_arg3_2 =
//│ 		  (((_lh_new_x_arg1_2 *. _lh_new_x_arg1_2) -. (_lh_new_x_arg2_2 *. _lh_new_x_arg2_2)) +. _lh_new_x_arg3_2)
//│ 		and new_x__d5 _lh_new_x_arg1_3 _lh_new_x_arg2_3 _lh_new_x_arg3_3 =
//│ 		  (((_lh_new_x_arg1_3 *. _lh_new_x_arg1_3) -. (_lh_new_x_arg2_3 *. _lh_new_x_arg2_3)) +. _lh_new_x_arg3_3)
//│ 		and new_y__d0 _lh_new_y_arg1_4 _lh_new_y_arg2_4 _lh_new_y_arg3_4 =
//│ 		  (((2.0 *. _lh_new_y_arg1_4) *. _lh_new_y_arg2_4) +. _lh_new_y_arg3_4)
//│ 		and new_y__d1 _lh_new_y_arg1_6 _lh_new_y_arg2_6 _lh_new_y_arg3_6 =
//│ 		  (((2.0 *. _lh_new_y_arg1_6) *. _lh_new_y_arg2_6) +. _lh_new_y_arg3_6)
//│ 		and new_y__d2 _lh_new_y_arg1_1 _lh_new_y_arg2_1 _lh_new_y_arg3_1 =
//│ 		  (((2.0 *. _lh_new_y_arg1_1) *. _lh_new_y_arg2_1) +. _lh_new_y_arg3_1)
//│ 		and new_y__d3 _lh_new_y_arg1_3 _lh_new_y_arg2_3 _lh_new_y_arg3_3 =
//│ 		  (((2.0 *. _lh_new_y_arg1_3) *. _lh_new_y_arg2_3) +. _lh_new_y_arg3_3)
//│ 		and new_y__d4 _lh_new_y_arg1_2 _lh_new_y_arg2_2 _lh_new_y_arg3_2 =
//│ 		  (((2.0 *. _lh_new_y_arg1_2) *. _lh_new_y_arg2_2) +. _lh_new_y_arg3_2)
//│ 		and new_y__d5 _lh_new_y_arg1_5 _lh_new_y_arg2_5 _lh_new_y_arg3_5 =
//│ 		  (((2.0 *. _lh_new_y_arg1_5) *. _lh_new_y_arg2_5) +. _lh_new_y_arg3_5)
//│ 		and np__d0 _lh_np_arg1_1 =
//│ 		  (pmn__d1 +. ((float_of_int _lh_np_arg1_1) *. delta_p__d0))
//│ 		and np__d1 _lh_np_arg1_6 =
//│ 		  (pmn__d3 +. ((float_of_int _lh_np_arg1_6) *. delta_p__d1))
//│ 		and np__d2 _lh_np_arg1_2 =
//│ 		  (pmn__d5 +. ((float_of_int _lh_np_arg1_2) *. delta_p__d2))
//│ 		and np__d3 _lh_np_arg1_3 =
//│ 		  (pmn__d7 +. ((float_of_int _lh_np_arg1_3) *. delta_p__d3))
//│ 		and np__d4 _lh_np_arg1_4 =
//│ 		  (pmn__d9 +. ((float_of_int _lh_np_arg1_4) *. delta_p__d4))
//│ 		and np__d5 _lh_np_arg1_5 =
//│ 		  (pmn__d1_d1 +. ((float_of_int _lh_np_arg1_5) *. delta_p__d5))
//│ 		and nq__d0 _lh_nq_arg1_4 =
//│ 		  (qmn__d1 +. ((float_of_int _lh_nq_arg1_4) *. delta_q__d0))
//│ 		and nq__d1 _lh_nq_arg1_2 =
//│ 		  (qmn__d3 +. ((float_of_int _lh_nq_arg1_2) *. delta_q__d1))
//│ 		and nq__d2 _lh_nq_arg1_6 =
//│ 		  (qmn__d5 +. ((float_of_int _lh_nq_arg1_6) *. delta_q__d2))
//│ 		and nq__d3 _lh_nq_arg1_5 =
//│ 		  (qmn__d7 +. ((float_of_int _lh_nq_arg1_5) *. delta_q__d3))
//│ 		and nq__d4 _lh_nq_arg1_3 =
//│ 		  (qmn__d9 +. ((float_of_int _lh_nq_arg1_3) *. delta_q__d4))
//│ 		and nq__d5 _lh_nq_arg1_1 =
//│ 		  (qmn__d1_d1 +. ((float_of_int _lh_nq_arg1_1) *. delta_q__d5))
//│ 		and num_cols__d0 =
//│ 		  26
//│ 		and num_cols__d1 =
//│ 		  26
//│ 		and num_cols__d2 =
//│ 		  26
//│ 		and num_cols__d3 =
//│ 		  26
//│ 		and num_cols__d4 =
//│ 		  26
//│ 		and num_cols__d5 =
//│ 		  26
//│ 		and pmn__d0 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d1 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d1_d0 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d1_d1 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d2 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d3 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d4 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d5 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d6 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d7 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d8 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmn__d9 =
//│ 		  (0.0 -. 2.25)
//│ 		and pmx__d0 =
//│ 		  0.75
//│ 		and pmx__d1 =
//│ 		  0.75
//│ 		and pmx__d2 =
//│ 		  0.75
//│ 		and pmx__d3 =
//│ 		  0.75
//│ 		and pmx__d4 =
//│ 		  0.75
//│ 		and pmx__d5 =
//│ 		  0.75
//│ 		and point_colour__d0 _lh_point_colour_arg1_2 =
//│ 		  (match _lh_point_colour_arg1_2 with
//│ 		    | `LH_P2(_lh_point_colour_LH_P2_0_2, _lh_point_colour_LH_P2_1_2) -> 
//│ 		      (((((check_radius__d0 (np__d0 _lh_point_colour_LH_P2_0_2)) (nq__d0 _lh_point_colour_LH_P2_1_2)) 0) 0.0) 0.0)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and point_colour__d1 _lh_point_colour_arg1_6 =
//│ 		  (match _lh_point_colour_arg1_6 with
//│ 		    | `LH_P2(_lh_point_colour_LH_P2_0_6, _lh_point_colour_LH_P2_1_6) -> 
//│ 		      (((((check_radius__d1 (np__d1 _lh_point_colour_LH_P2_0_6)) (nq__d1 _lh_point_colour_LH_P2_1_6)) 0) 0.0) 0.0)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and point_colour__d2 _lh_point_colour_arg1_5 =
//│ 		  (match _lh_point_colour_arg1_5 with
//│ 		    | `LH_P2(_lh_point_colour_LH_P2_0_5, _lh_point_colour_LH_P2_1_5) -> 
//│ 		      (((((check_radius__d2 (np__d2 _lh_point_colour_LH_P2_0_5)) (nq__d2 _lh_point_colour_LH_P2_1_5)) 0) 0.0) 0.0)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and point_colour__d3 _lh_point_colour_arg1_4 =
//│ 		  (match _lh_point_colour_arg1_4 with
//│ 		    | `LH_P2(_lh_point_colour_LH_P2_0_4, _lh_point_colour_LH_P2_1_4) -> 
//│ 		      (((((check_radius__d3 (np__d3 _lh_point_colour_LH_P2_0_4)) (nq__d3 _lh_point_colour_LH_P2_1_4)) 0) 0.0) 0.0)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and point_colour__d4 _lh_point_colour_arg1_3 =
//│ 		  (match _lh_point_colour_arg1_3 with
//│ 		    | `LH_P2(_lh_point_colour_LH_P2_0_3, _lh_point_colour_LH_P2_1_3) -> 
//│ 		      (((((check_radius__d4 (np__d4 _lh_point_colour_LH_P2_0_3)) (nq__d4 _lh_point_colour_LH_P2_1_3)) 0) 0.0) 0.0)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and point_colour__d5 _lh_point_colour_arg1_1 =
//│ 		  (match _lh_point_colour_arg1_1 with
//│ 		    | `LH_P2(_lh_point_colour_LH_P2_0_1, _lh_point_colour_LH_P2_1_1) -> 
//│ 		      (((((check_radius__d5 (np__d5 _lh_point_colour_LH_P2_0_1)) (nq__d5 _lh_point_colour_LH_P2_1_1)) 0) 0.0) 0.0)
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and qmn__d0 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d1 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d1_d0 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d1_d1 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d2 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d3 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d4 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d5 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d6 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d7 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d8 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmn__d9 =
//│ 		  (0.0 -. 1.5)
//│ 		and qmx__d0 =
//│ 		  1.5
//│ 		and qmx__d1 =
//│ 		  1.5
//│ 		and qmx__d2 =
//│ 		  1.5
//│ 		and qmx__d3 =
//│ 		  1.5
//│ 		and qmx__d4 =
//│ 		  1.5
//│ 		and qmx__d5 =
//│ 		  1.5
//│ 		and radius__d0 _lh_radius_arg1_2 _lh_radius_arg2_2 =
//│ 		  ((_lh_radius_arg1_2 *. _lh_radius_arg1_2) +. (_lh_radius_arg2_2 *. _lh_radius_arg2_2))
//│ 		and radius__d1 _lh_radius_arg1_3 _lh_radius_arg2_3 =
//│ 		  ((_lh_radius_arg1_3 *. _lh_radius_arg1_3) +. (_lh_radius_arg2_3 *. _lh_radius_arg2_3))
//│ 		and radius__d2 _lh_radius_arg1_5 _lh_radius_arg2_5 =
//│ 		  ((_lh_radius_arg1_5 *. _lh_radius_arg1_5) +. (_lh_radius_arg2_5 *. _lh_radius_arg2_5))
//│ 		and radius__d3 _lh_radius_arg1_4 _lh_radius_arg2_4 =
//│ 		  ((_lh_radius_arg1_4 *. _lh_radius_arg1_4) +. (_lh_radius_arg2_4 *. _lh_radius_arg2_4))
//│ 		and radius__d4 _lh_radius_arg1_1 _lh_radius_arg2_1 =
//│ 		  ((_lh_radius_arg1_1 *. _lh_radius_arg1_1) +. (_lh_radius_arg2_1 *. _lh_radius_arg2_1))
//│ 		and radius__d5 _lh_radius_arg1_6 _lh_radius_arg2_6 =
//│ 		  ((_lh_radius_arg1_6 *. _lh_radius_arg1_6) +. (_lh_radius_arg2_6 *. _lh_radius_arg2_6))
//│ 		and right__d0 =
//│ 		  (`LH_P2(1, 0))
//│ 		and right__d1 =
//│ 		  (`LH_P2(1, 0))
//│ 		and size__d0 =
//│ 		  200
//│ 		and size__d1 =
//│ 		  200
//│ 		and size__d1_d0 =
//│ 		  200
//│ 		and size__d1_d1 =
//│ 		  200
//│ 		and size__d1_d2 =
//│ 		  200
//│ 		and size__d2 =
//│ 		  200
//│ 		and size__d3 =
//│ 		  200
//│ 		and size__d4 =
//│ 		  200
//│ 		and size__d5 =
//│ 		  200
//│ 		and size__d6 =
//│ 		  200
//│ 		and size__d7 =
//│ 		  200
//│ 		and size__d8 =
//│ 		  200
//│ 		and size__d9 =
//│ 		  200
//│ 		and strEq__d0 _lh_strEq_arg1_1 _lh_strEq_arg2_1 =
//│ 		  (match _lh_strEq_arg1_1 with
//│ 		    | `LH_C(_lh_strEq_LH_C_0_3, _lh_strEq_LH_C_1_3) -> 
//│ 		      (let rec _lh_matchIdent_4 = _lh_strEq_arg2_1 in
//│ 		        (match _lh_matchIdent_4 with
//│ 		          | `LH_C(_lh_strEq_LH_C_0_4, _lh_strEq_LH_C_1_4) -> 
//│ 		            (if (_lh_strEq_LH_C_0_3 = _lh_strEq_LH_C_0_4) then
//│ 		              ((strEq__d0 _lh_strEq_LH_C_1_3) _lh_strEq_LH_C_1_4)
//│ 		            else
//│ 		              false)
//│ 		          | `LH_N -> 
//│ 		            false
//│ 		          | _ -> 
//│ 		            (failwith "error")))
//│ 		    | `LH_N -> 
//│ 		      (let rec _lh_matchIdent_5 = _lh_strEq_arg2_1 in
//│ 		        (match _lh_matchIdent_5 with
//│ 		          | `LH_C(_lh_strEq_LH_C_0_5, _lh_strEq_LH_C_1_5) -> 
//│ 		            false
//│ 		          | `LH_N -> 
//│ 		            true
//│ 		          | _ -> 
//│ 		            (failwith "error")))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and testMandel2_nofib__d0 _lh_testMandel2_nofib_arg1_1 =
//│ 		  (let rec size'_1 = ((max__d0 (length__d0 _lh_testMandel2_nofib_arg1_1)) size__d1_d2) in
//│ 		    (let rec tree_1 = ((build_tree__d0 (`LH_P2(0, 0))) (`LH_P2(size'_1, (size'_1 / 2)))) in
//│ 		      (finite__d0 tree_1)))
//│ 		and up__d0 =
//│ 		  (`LH_P2(0, (0 - 1)));;
//│ 		(testMandel2_nofib__d0 (`LH_C(5, (`LH_N))))
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testMandel2_nofib_₀^3192]
//│ 	[testMandel2_nofib_₀^3192 · build_tree_₀^2622] (hopeless to continue)
//│ 		[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · build_tree_₀^2035] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622] (using original def)
//│ 		[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · build_tree_₀^2040] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622] (using original def)
//│ 		[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · build_tree_₀^2046] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622] (using original def)
//│ 		[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · build_tree_₀^2051] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622] (using original def)
//│ 		[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · down_₀^2282] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · down_₁^2369] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · equalp_₀^2265] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · equalp_₁^2277] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · equalp_₂^2289] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · equalp_₃^2418] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · left_₀^2294] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · left_₁^2380] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · check_radius_₀^1885] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · check_radius_₀^1885 · check_radius_₀^1626] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · check_radius_₀^1885] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · check_radius_₀^1885 · m_₀^1622] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · check_radius_₀^1885 · new_x_₀^1588] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · check_radius_₀^1885 · new_y_₀^1595] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · check_radius_₀^1885 · num_cols_₀^1615] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · check_radius_₀^1885 · radius_₀^1602] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · np_₀^1886] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · np_₀^1886 · delta_p_₀^1542] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · np_₀^1886 · delta_p_₀^1542 · pmn_₀^2539] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · np_₀^1886 · delta_p_₀^1542 · pmx_₀^2537] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · np_₀^1886 · delta_p_₀^1542 · size_₀^2544] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · np_₀^1886 · pmn_₁^1535] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · nq_₀^1890] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · nq_₀^1890 · delta_q_₀^2578] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · nq_₀^1890 · delta_q_₀^2578 · qmn_₀^1421] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · nq_₀^1890 · delta_q_₀^2578 · qmx_₀^1419] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · nq_₀^1890 · delta_q_₀^2578 · size_₁^1426] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₀^2219 · nq_₀^1890 · qmn_₁^2571] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · check_radius_₁^3000] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · check_radius_₁^3000 · check_radius_₁^1859] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · check_radius_₁^3000] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · check_radius_₁^3000 · m_₁^1855] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · check_radius_₁^3000 · new_x_₁^1821] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · check_radius_₁^3000 · new_y_₁^1828] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · check_radius_₁^3000 · num_cols_₁^1848] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · check_radius_₁^3000 · radius_₁^1835] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · np_₁^3001] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · np_₁^3001 · delta_p_₁^2969] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · np_₁^3001 · delta_p_₁^2969 · pmn_₂^2500] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · np_₁^3001 · delta_p_₁^2969 · pmx_₁^2498] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · np_₁^3001 · delta_p_₁^2969 · size_₂^2505] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · np_₁^3001 · pmn_₃^2962] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · nq_₁^3005] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · nq_₁^3005 · delta_q_₁^2085] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · nq_₁^3005 · delta_q_₁^2085 · qmn_₂^2816] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · nq_₁^3005 · delta_q_₁^2085 · qmx_₁^2814] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · nq_₁^3005 · delta_q_₁^2085 · size_₃^2821] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₁^2224 · nq_₁^3005 · qmn_₃^2078] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · check_radius_₂^2731] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · check_radius_₂^2731 · check_radius_₂^3148] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · check_radius_₂^2731] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · check_radius_₂^2731 · m_₂^3144] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · check_radius_₂^2731 · new_x_₂^3110] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · check_radius_₂^2731 · new_y_₂^3117] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · check_radius_₂^2731 · num_cols_₂^3137] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · check_radius_₂^2731 · radius_₂^3124] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · np_₂^2732] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · np_₂^2732 · delta_p_₂^1762] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · np_₂^2732 · delta_p_₂^1762 · pmn_₄^1770] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · np_₂^2732 · delta_p_₂^1762 · pmx_₂^1768] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · np_₂^2732 · delta_p_₂^1762 · size_₄^1775] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · np_₂^2732 · pmn_₅^1755] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · nq_₂^2736] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · nq_₂^2736 · delta_q_₂^2930] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · nq_₂^2736 · delta_q_₂^2930 · qmn_₄^1694] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · nq_₂^2736 · delta_q_₂^2930 · qmx_₂^1692] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · nq_₂^2736 · delta_q_₂^2930 · size_₅^1699] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₂^2229 · nq_₂^2736 · qmn_₅^2923] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · check_radius_₃^2517] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · check_radius_₃^2517 · check_radius_₃^2127] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · check_radius_₃^2517] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · check_radius_₃^2517 · m_₃^2123] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · check_radius_₃^2517 · new_x_₃^2089] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · check_radius_₃^2517 · new_y_₃^2096] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · check_radius_₃^2517 · num_cols_₃^2116] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · check_radius_₃^2517 · radius_₃^2103] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · np_₃^2518] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · np_₃^2518 · delta_p_₃^2462] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · np_₃^2518 · delta_p_₃^2462 · pmn_₆^1653] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · np_₃^2518 · delta_p_₃^2462 · pmx_₃^1651] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · np_₃^2518 · delta_p_₃^2462 · size_₆^1658] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · np_₃^2518 · pmn_₇^2455] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · nq_₃^2522] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · nq_₃^2522 · delta_q_₃^2917] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · nq_₃^2522 · delta_q_₃^2917 · qmn_₆^2801] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · nq_₃^2522 · delta_q_₃^2917 · qmx_₃^2799] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · nq_₃^2522 · delta_q_₃^2917 · size_₇^2806] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₃^2234 · nq_₃^2522 · qmn_₇^2910] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · check_radius_₄^2189] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · check_radius_₄^2189 · check_radius_₄^2703] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · check_radius_₄^2189] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · check_radius_₄^2189 · m_₄^2699] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · check_radius_₄^2189 · new_x_₄^2665] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · check_radius_₄^2189 · new_y_₄^2672] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · check_radius_₄^2189 · num_cols_₄^2692] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · check_radius_₄^2189 · radius_₄^2679] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · np_₄^2190] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · np_₄^2190 · delta_p_₄^2757] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · np_₄^2190 · delta_p_₄^2757 · pmn_₈^3179] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · np_₄^2190 · delta_p_₄^2757 · pmx_₄^3177] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · np_₄^2190 · delta_p_₄^2757 · size_₈^3184] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · np_₄^2190 · pmn_₉^2750] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · nq_₄^2194] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · nq_₄^2194 · delta_q_₄^2158] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · nq_₄^2194 · delta_q_₄^2158 · qmn_₈^2869] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · nq_₄^2194 · delta_q_₄^2158 · qmx_₄^2867] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · nq_₄^2194 · delta_q_₄^2158 · size_₉^2874] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₄^2312 · nq_₄^2194 · qmn_₉^2151] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · check_radius_₅^1547] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · check_radius_₅^1547 · check_radius_₅^3060] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · check_radius_₅^1547] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · check_radius_₅^1547 · m_₅^3056] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · check_radius_₅^1547 · new_x_₅^3022] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · check_radius_₅^1547 · new_y_₅^3029] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · check_radius_₅^1547 · num_cols_₅^3049] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · check_radius_₅^1547 · radius_₅^3036] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · np_₅^1548] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · np_₅^1548 · delta_p_₅^2905] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · np_₅^1548 · delta_p_₅^2905 · pmn_₁₀^2166] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · np_₅^1548 · delta_p_₅^2905 · pmx_₅^2164] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · np_₅^1548 · delta_p_₅^2905 · size_₁₀^2171] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · np_₅^1548 · pmn_₁₁^2898] (using original def)
//│ 				[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · nq_₅^1552] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · nq_₅^1552 · delta_q_₅^1440] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · nq_₅^1552 · delta_q_₅^1440 · qmn_₁₀^2648] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · nq_₅^1552 · delta_q_₅^1440 · qmx_₅^2646] (using original def)
//│ 						[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · nq_₅^1552 · delta_q_₅^1440 · size_₁₁^2653] (using original def)
//│ 					[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · point_colour_₅^2427 · nq_₅^1552 · qmn_₁₁^1433] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · right_₀^2270] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · right_₁^2358] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · check_perim_₀^1932 · up_₀^2391] (using original def)
//│ 		[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · strEq_₀^2026] (using original def)
//│ 			[testMandel2_nofib_₀^3192 · build_tree_₀^2622 · strEq_₀^2026 · strEq_₀^1453] ---> [testMandel2_nofib_₀^3192 · build_tree_₀^2622 · strEq_₀^2026] (using original def)
//│ 	[testMandel2_nofib_₀^3192 · finite_₀^2635] (hopeless to continue)
//│ 		[testMandel2_nofib_₀^3192 · finite_₀^2635 · finite_₀^2768] ---> [testMandel2_nofib_₀^3192 · finite_₀^2635] (using original def)
//│ 		[testMandel2_nofib_₀^3192 · finite_₀^2635 · finite_₀^2772] ---> [testMandel2_nofib_₀^3192 · finite_₀^2635] (using original def)
//│ 		[testMandel2_nofib_₀^3192 · finite_₀^2635 · finite_₀^2777] ---> [testMandel2_nofib_₀^3192 · finite_₀^2635] (using original def)
//│ 		[testMandel2_nofib_₀^3192 · finite_₀^2635 · finite_₀^2781] ---> [testMandel2_nofib_₀^3192 · finite_₀^2635] (using original def)
//│ 	[testMandel2_nofib_₀^3192 · length_₀^2616]
//│ 		[testMandel2_nofib_₀^3192 · length_₀^2616 · length_₀^1526] ---> [testMandel2_nofib_₀^3192 · length_₀^2616] (only one)
//│ 	[testMandel2_nofib_₀^3192 · max_₀^2615] (hopeless to continue)
//│ 	[testMandel2_nofib_₀^3192 · size_₁₂^2620] (hopeless to continue)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testMandel2_nofib_₀_₀(primId⁰([LH_C 5 [LH_N]]))
//│ def testMandel2_nofib_₀_₀(_lh_testMandel2_nofib_arg1¹) = 
//│ 	let size'¹ = max_₀_₀(length_₀_₀(_lh_testMandel2_nofib_arg1¹), size_₁₂_₀)
//│ 	in let tree¹ = build_tree_₀_₀([LH_P2 0 0], [LH_P2 size'¹ div⁰(size'¹, 2)])
//│ 	in finite_₀_₀(tree¹)
//│ 	where
//│ 	def build_tree_₀_₀(_lh_build_tree_arg1¹, _lh_build_tree_arg2¹) = 
//│ 		case _lh_build_tree_arg1¹ of {
//│ 			LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1² => case _lh_build_tree_arg2¹ of {
//│ 				LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => 
//│ 					let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ 					in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ 					in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ 					in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ 					in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ 					in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ 					in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ 					in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ 					in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ 					in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ 					in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ 					in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ 					in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)]
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		where
//│ 		def check_perim_₀_₀(_lh_check_perim_arg1¹, _lh_check_perim_arg2¹) = 
//│ 			case _lh_check_perim_arg1¹ of {
//│ 				LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴ => case _lh_check_perim_arg2¹ of {
//│ 					LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵ => 
//│ 						let col1¹ = point_colour_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴])
//│ 						in let col2¹ = point_colour_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴])
//│ 						in let col3¹ = point_colour_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵])
//│ 						in let col4¹ = point_colour_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵])
//│ 						in let corners_diff¹ = if (col1¹ == col2¹) then if (col1¹ == col3¹) then if (col1¹ == col4¹) then [False] else [True] else [True] else [True]
//│ 						in let check_line¹ = (fun xcyc¹ -> (fun xdyd¹ -> 
//│ 							let _lh_matchIdent⁴ = xcyc¹
//│ 							in case _lh_matchIdent⁴ of {
//│ 								LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => 
//│ 									let _lh_matchIdent⁵ = xdyd¹
//│ 									in case _lh_matchIdent⁵ of {
//│ 										LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => 
//│ 											let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ 											in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷])
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}))
//│ 						in let check_sides¹ = if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁴ + 1) _lh_check_perim_LH_P2_1⁴], right_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁵ (_lh_check_perim_LH_P2_1⁴ + 1)], down_₁_₀) then if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁵ - 1) _lh_check_perim_LH_P2_1⁵], left_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁴ (_lh_check_perim_LH_P2_1⁵ - 1)], up_₀_₀) then col1¹ else (0 - 1) else (0 - 1) else (0 - 1) else (0 - 1)
//│ 						in if equalp_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴], [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]) then point_colour_₅_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]) else if corners_diff¹ then (0 - 1) else check_sides¹
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def down_₀_₀ = 
//│ 				[LH_P2 0 1]
//│ 			def down_₁_₀ = 
//│ 				[LH_P2 0 1]
//│ 			def equalp_₀_₀(_lh_equalp_arg1⁶, _lh_equalp_arg2⁶) = 
//│ 				case _lh_equalp_arg1⁶ of {
//│ 					LH_P2 _lh_equalp_LH_P2_0¹² _lh_equalp_LH_P2_1¹² => case _lh_equalp_arg2⁶ of {
//│ 						LH_P2 _lh_equalp_LH_P2_0¹³ _lh_equalp_LH_P2_1¹³ => ((_lh_equalp_LH_P2_0¹² == _lh_equalp_LH_P2_0¹³) && (_lh_equalp_LH_P2_1¹² == _lh_equalp_LH_P2_1¹³))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 			def equalp_₁_₀(_lh_equalp_arg1⁵, _lh_equalp_arg2⁵) = 
//│ 				case _lh_equalp_arg1⁵ of {
//│ 					LH_P2 _lh_equalp_LH_P2_0¹⁰ _lh_equalp_LH_P2_1¹⁰ => case _lh_equalp_arg2⁵ of {
//│ 						LH_P2 _lh_equalp_LH_P2_0¹¹ _lh_equalp_LH_P2_1¹¹ => ((_lh_equalp_LH_P2_0¹⁰ == _lh_equalp_LH_P2_0¹¹) && (_lh_equalp_LH_P2_1¹⁰ == _lh_equalp_LH_P2_1¹¹))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 			def equalp_₂_₀(_lh_equalp_arg1⁴, _lh_equalp_arg2⁴) = 
//│ 				case _lh_equalp_arg1⁴ of {
//│ 					LH_P2 _lh_equalp_LH_P2_0⁸ _lh_equalp_LH_P2_1⁸ => case _lh_equalp_arg2⁴ of {
//│ 						LH_P2 _lh_equalp_LH_P2_0⁹ _lh_equalp_LH_P2_1⁹ => ((_lh_equalp_LH_P2_0⁸ == _lh_equalp_LH_P2_0⁹) && (_lh_equalp_LH_P2_1⁸ == _lh_equalp_LH_P2_1⁹))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 			def equalp_₃_₀(_lh_equalp_arg1⁷, _lh_equalp_arg2⁷) = 
//│ 				case _lh_equalp_arg1⁷ of {
//│ 					LH_P2 _lh_equalp_LH_P2_0¹⁴ _lh_equalp_LH_P2_1¹⁴ => case _lh_equalp_arg2⁷ of {
//│ 						LH_P2 _lh_equalp_LH_P2_0¹⁵ _lh_equalp_LH_P2_1¹⁵ => ((_lh_equalp_LH_P2_0¹⁴ == _lh_equalp_LH_P2_0¹⁵) && (_lh_equalp_LH_P2_1¹⁴ == _lh_equalp_LH_P2_1¹⁵))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 			def left_₀_₀ = 
//│ 				[LH_P2 (0 - 1) 0]
//│ 			def left_₁_₀ = 
//│ 				[LH_P2 (0 - 1) 0]
//│ 			def point_colour_₀_₀(_lh_point_colour_arg1¹⁰) = 
//│ 				case _lh_point_colour_arg1¹⁰ of {
//│ 					LH_P2 _lh_point_colour_LH_P2_0¹⁰ _lh_point_colour_LH_P2_1¹⁰ => check_radius_₀_₀(np_₀_₀(_lh_point_colour_LH_P2_0¹⁰), nq_₀_₀(_lh_point_colour_LH_P2_1¹⁰), 0, 0.0, 0.0)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def check_radius_₀_₀(_lh_check_radius_arg1¹⁰, _lh_check_radius_arg2¹⁰, _lh_check_radius_arg3¹⁰, _lh_check_radius_arg4¹⁰, _lh_check_radius_arg5¹⁰) = 
//│ 					let xn¹⁰ = new_x_₀_₀(_lh_check_radius_arg4¹⁰, _lh_check_radius_arg5¹⁰, _lh_check_radius_arg1¹⁰)
//│ 					in let yn¹⁰ = new_y_₀_₀(_lh_check_radius_arg4¹⁰, _lh_check_radius_arg5¹⁰, _lh_check_radius_arg2¹⁰)
//│ 					in let r¹⁰ = radius_₀_₀(xn¹⁰, yn¹⁰)
//│ 					in let kp¹⁰ = (_lh_check_radius_arg3¹⁰ + 1)
//│ 					in if (kp¹⁰ == num_cols_₀_₀) then 0 else if polyGt⁰(r¹⁰, float_of_int⁰(m_₀_₀)) then kp¹⁰ else check_radius_₀_₀(_lh_check_radius_arg1¹⁰, _lh_check_radius_arg2¹⁰, kp¹⁰, xn¹⁰, yn¹⁰)
//│ 					where
//│ 					def m_₀_₀ = 
//│ 						20
//│ 					def new_x_₀_₀(_lh_new_x_arg1⁶, _lh_new_x_arg2⁶, _lh_new_x_arg3⁶) = 
//│ 						(((_lh_new_x_arg1⁶ *. _lh_new_x_arg1⁶) -. (_lh_new_x_arg2⁶ *. _lh_new_x_arg2⁶)) +. _lh_new_x_arg3⁶)
//│ 					def new_y_₀_₀(_lh_new_y_arg1⁷, _lh_new_y_arg2⁷, _lh_new_y_arg3⁷) = 
//│ 						(((2.0 *. _lh_new_y_arg1⁷) *. _lh_new_y_arg2⁷) +. _lh_new_y_arg3⁷)
//│ 					def num_cols_₀_₀ = 
//│ 						26
//│ 					def radius_₀_₀(_lh_radius_arg1¹⁰, _lh_radius_arg2¹⁰) = 
//│ 						((_lh_radius_arg1¹⁰ *. _lh_radius_arg1¹⁰) +. (_lh_radius_arg2¹⁰ *. _lh_radius_arg2¹⁰))
//│ 				def np_₀_₀(_lh_np_arg1¹¹) = 
//│ 					(pmn_₁_₀ +. (float_of_int⁰(_lh_np_arg1¹¹) *. delta_p_₀_₀))
//│ 					where
//│ 					def delta_p_₀_₀ = 
//│ 						((pmx_₀_₀ -. pmn_₀_₀) /. float_of_int⁰((size_₀_₀ - 1)))
//│ 						where
//│ 						def pmn_₀_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₀_₀ = 
//│ 							0.75
//│ 						def size_₀_₀ = 
//│ 							200
//│ 					def pmn_₁_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₀_₀(_lh_nq_arg1¹¹) = 
//│ 					(qmn_₁_₀ +. (float_of_int⁰(_lh_nq_arg1¹¹) *. delta_q_₀_₀))
//│ 					where
//│ 					def delta_q_₀_₀ = 
//│ 						((qmx_₀_₀ -. qmn_₀_₀) /. float_of_int⁰((size_₁_₀ - 1)))
//│ 						where
//│ 						def qmn_₀_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₀_₀ = 
//│ 							1.5
//│ 						def size_₁_₀ = 
//│ 							200
//│ 					def qmn_₁_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₁_₀(_lh_point_colour_arg1⁷) = 
//│ 				case _lh_point_colour_arg1⁷ of {
//│ 					LH_P2 _lh_point_colour_LH_P2_0⁷ _lh_point_colour_LH_P2_1⁷ => check_radius_₁_₀(np_₁_₀(_lh_point_colour_LH_P2_0⁷), nq_₁_₀(_lh_point_colour_LH_P2_1⁷), 0, 0.0, 0.0)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def check_radius_₁_₀(_lh_check_radius_arg1⁶, _lh_check_radius_arg2⁶, _lh_check_radius_arg3⁶, _lh_check_radius_arg4⁶, _lh_check_radius_arg5⁶) = 
//│ 					let xn⁶ = new_x_₁_₀(_lh_check_radius_arg4⁶, _lh_check_radius_arg5⁶, _lh_check_radius_arg1⁶)
//│ 					in let yn⁶ = new_y_₁_₀(_lh_check_radius_arg4⁶, _lh_check_radius_arg5⁶, _lh_check_radius_arg2⁶)
//│ 					in let r⁶ = radius_₁_₀(xn⁶, yn⁶)
//│ 					in let kp⁶ = (_lh_check_radius_arg3⁶ + 1)
//│ 					in if (kp⁶ == num_cols_₁_₀) then 0 else if polyGt⁰(r⁶, float_of_int⁰(m_₁_₀)) then kp⁶ else check_radius_₁_₀(_lh_check_radius_arg1⁶, _lh_check_radius_arg2⁶, kp⁶, xn⁶, yn⁶)
//│ 					where
//│ 					def m_₁_₀ = 
//│ 						20
//│ 					def new_x_₁_₀(_lh_new_x_arg1⁹, _lh_new_x_arg2⁹, _lh_new_x_arg3⁹) = 
//│ 						(((_lh_new_x_arg1⁹ *. _lh_new_x_arg1⁹) -. (_lh_new_x_arg2⁹ *. _lh_new_x_arg2⁹)) +. _lh_new_x_arg3⁹)
//│ 					def new_y_₁_₀(_lh_new_y_arg1⁹, _lh_new_y_arg2⁹, _lh_new_y_arg3⁹) = 
//│ 						(((2.0 *. _lh_new_y_arg1⁹) *. _lh_new_y_arg2⁹) +. _lh_new_y_arg3⁹)
//│ 					def num_cols_₁_₀ = 
//│ 						26
//│ 					def radius_₁_₀(_lh_radius_arg1¹¹, _lh_radius_arg2¹¹) = 
//│ 						((_lh_radius_arg1¹¹ *. _lh_radius_arg1¹¹) +. (_lh_radius_arg2¹¹ *. _lh_radius_arg2¹¹))
//│ 				def np_₁_₀(_lh_np_arg1⁹) = 
//│ 					(pmn_₃_₀ +. (float_of_int⁰(_lh_np_arg1⁹) *. delta_p_₁_₀))
//│ 					where
//│ 					def delta_p_₁_₀ = 
//│ 						((pmx_₁_₀ -. pmn_₂_₀) /. float_of_int⁰((size_₂_₀ - 1)))
//│ 						where
//│ 						def pmn_₂_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₁_₀ = 
//│ 							0.75
//│ 						def size_₂_₀ = 
//│ 							200
//│ 					def pmn_₃_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₁_₀(_lh_nq_arg1¹⁰) = 
//│ 					(qmn_₃_₀ +. (float_of_int⁰(_lh_nq_arg1¹⁰) *. delta_q_₁_₀))
//│ 					where
//│ 					def delta_q_₁_₀ = 
//│ 						((qmx_₁_₀ -. qmn_₂_₀) /. float_of_int⁰((size_₃_₀ - 1)))
//│ 						where
//│ 						def qmn_₂_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₁_₀ = 
//│ 							1.5
//│ 						def size_₃_₀ = 
//│ 							200
//│ 					def qmn_₃_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₂_₀(_lh_point_colour_arg1⁸) = 
//│ 				case _lh_point_colour_arg1⁸ of {
//│ 					LH_P2 _lh_point_colour_LH_P2_0⁸ _lh_point_colour_LH_P2_1⁸ => check_radius_₂_₀(np_₂_₀(_lh_point_colour_LH_P2_0⁸), nq_₂_₀(_lh_point_colour_LH_P2_1⁸), 0, 0.0, 0.0)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def check_radius_₂_₀(_lh_check_radius_arg1⁸, _lh_check_radius_arg2⁸, _lh_check_radius_arg3⁸, _lh_check_radius_arg4⁸, _lh_check_radius_arg5⁸) = 
//│ 					let xn⁸ = new_x_₂_₀(_lh_check_radius_arg4⁸, _lh_check_radius_arg5⁸, _lh_check_radius_arg1⁸)
//│ 					in let yn⁸ = new_y_₂_₀(_lh_check_radius_arg4⁸, _lh_check_radius_arg5⁸, _lh_check_radius_arg2⁸)
//│ 					in let r⁸ = radius_₂_₀(xn⁸, yn⁸)
//│ 					in let kp⁸ = (_lh_check_radius_arg3⁸ + 1)
//│ 					in if (kp⁸ == num_cols_₂_₀) then 0 else if polyGt⁰(r⁸, float_of_int⁰(m_₂_₀)) then kp⁸ else check_radius_₂_₀(_lh_check_radius_arg1⁸, _lh_check_radius_arg2⁸, kp⁸, xn⁸, yn⁸)
//│ 					where
//│ 					def m_₂_₀ = 
//│ 						20
//│ 					def new_x_₂_₀(_lh_new_x_arg1¹¹, _lh_new_x_arg2¹¹, _lh_new_x_arg3¹¹) = 
//│ 						(((_lh_new_x_arg1¹¹ *. _lh_new_x_arg1¹¹) -. (_lh_new_x_arg2¹¹ *. _lh_new_x_arg2¹¹)) +. _lh_new_x_arg3¹¹)
//│ 					def new_y_₂_₀(_lh_new_y_arg1⁶, _lh_new_y_arg2⁶, _lh_new_y_arg3⁶) = 
//│ 						(((2.0 *. _lh_new_y_arg1⁶) *. _lh_new_y_arg2⁶) +. _lh_new_y_arg3⁶)
//│ 					def num_cols_₂_₀ = 
//│ 						26
//│ 					def radius_₂_₀(_lh_radius_arg1⁷, _lh_radius_arg2⁷) = 
//│ 						((_lh_radius_arg1⁷ *. _lh_radius_arg1⁷) +. (_lh_radius_arg2⁷ *. _lh_radius_arg2⁷))
//│ 				def np_₂_₀(_lh_np_arg1⁸) = 
//│ 					(pmn_₅_₀ +. (float_of_int⁰(_lh_np_arg1⁸) *. delta_p_₂_₀))
//│ 					where
//│ 					def delta_p_₂_₀ = 
//│ 						((pmx_₂_₀ -. pmn_₄_₀) /. float_of_int⁰((size_₄_₀ - 1)))
//│ 						where
//│ 						def pmn_₄_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₂_₀ = 
//│ 							0.75
//│ 						def size_₄_₀ = 
//│ 							200
//│ 					def pmn_₅_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₂_₀(_lh_nq_arg1⁸) = 
//│ 					(qmn_₅_₀ +. (float_of_int⁰(_lh_nq_arg1⁸) *. delta_q_₂_₀))
//│ 					where
//│ 					def delta_q_₂_₀ = 
//│ 						((qmx_₂_₀ -. qmn_₄_₀) /. float_of_int⁰((size_₅_₀ - 1)))
//│ 						where
//│ 						def qmn_₄_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₂_₀ = 
//│ 							1.5
//│ 						def size_₅_₀ = 
//│ 							200
//│ 					def qmn_₅_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₃_₀(_lh_point_colour_arg1⁹) = 
//│ 				case _lh_point_colour_arg1⁹ of {
//│ 					LH_P2 _lh_point_colour_LH_P2_0⁹ _lh_point_colour_LH_P2_1⁹ => check_radius_₃_₀(np_₃_₀(_lh_point_colour_LH_P2_0⁹), nq_₃_₀(_lh_point_colour_LH_P2_1⁹), 0, 0.0, 0.0)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def check_radius_₃_₀(_lh_check_radius_arg1⁷, _lh_check_radius_arg2⁷, _lh_check_radius_arg3⁷, _lh_check_radius_arg4⁷, _lh_check_radius_arg5⁷) = 
//│ 					let xn⁷ = new_x_₃_₀(_lh_check_radius_arg4⁷, _lh_check_radius_arg5⁷, _lh_check_radius_arg1⁷)
//│ 					in let yn⁷ = new_y_₃_₀(_lh_check_radius_arg4⁷, _lh_check_radius_arg5⁷, _lh_check_radius_arg2⁷)
//│ 					in let r⁷ = radius_₃_₀(xn⁷, yn⁷)
//│ 					in let kp⁷ = (_lh_check_radius_arg3⁷ + 1)
//│ 					in if (kp⁷ == num_cols_₃_₀) then 0 else if polyGt⁰(r⁷, float_of_int⁰(m_₃_₀)) then kp⁷ else check_radius_₃_₀(_lh_check_radius_arg1⁷, _lh_check_radius_arg2⁷, kp⁷, xn⁷, yn⁷)
//│ 					where
//│ 					def m_₃_₀ = 
//│ 						20
//│ 					def new_x_₃_₀(_lh_new_x_arg1⁸, _lh_new_x_arg2⁸, _lh_new_x_arg3⁸) = 
//│ 						(((_lh_new_x_arg1⁸ *. _lh_new_x_arg1⁸) -. (_lh_new_x_arg2⁸ *. _lh_new_x_arg2⁸)) +. _lh_new_x_arg3⁸)
//│ 					def new_y_₃_₀(_lh_new_y_arg1⁸, _lh_new_y_arg2⁸, _lh_new_y_arg3⁸) = 
//│ 						(((2.0 *. _lh_new_y_arg1⁸) *. _lh_new_y_arg2⁸) +. _lh_new_y_arg3⁸)
//│ 					def num_cols_₃_₀ = 
//│ 						26
//│ 					def radius_₃_₀(_lh_radius_arg1⁶, _lh_radius_arg2⁶) = 
//│ 						((_lh_radius_arg1⁶ *. _lh_radius_arg1⁶) +. (_lh_radius_arg2⁶ *. _lh_radius_arg2⁶))
//│ 				def np_₃_₀(_lh_np_arg1¹⁰) = 
//│ 					(pmn_₇_₀ +. (float_of_int⁰(_lh_np_arg1¹⁰) *. delta_p_₃_₀))
//│ 					where
//│ 					def delta_p_₃_₀ = 
//│ 						((pmx_₃_₀ -. pmn_₆_₀) /. float_of_int⁰((size_₆_₀ - 1)))
//│ 						where
//│ 						def pmn_₆_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₃_₀ = 
//│ 							0.75
//│ 						def size_₆_₀ = 
//│ 							200
//│ 					def pmn_₇_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₃_₀(_lh_nq_arg1⁹) = 
//│ 					(qmn_₇_₀ +. (float_of_int⁰(_lh_nq_arg1⁹) *. delta_q_₃_₀))
//│ 					where
//│ 					def delta_q_₃_₀ = 
//│ 						((qmx_₃_₀ -. qmn_₆_₀) /. float_of_int⁰((size_₇_₀ - 1)))
//│ 						where
//│ 						def qmn_₆_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₃_₀ = 
//│ 							1.5
//│ 						def size_₇_₀ = 
//│ 							200
//│ 					def qmn_₇_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₄_₀(_lh_point_colour_arg1¹¹) = 
//│ 				case _lh_point_colour_arg1¹¹ of {
//│ 					LH_P2 _lh_point_colour_LH_P2_0¹¹ _lh_point_colour_LH_P2_1¹¹ => check_radius_₄_₀(np_₄_₀(_lh_point_colour_LH_P2_0¹¹), nq_₄_₀(_lh_point_colour_LH_P2_1¹¹), 0, 0.0, 0.0)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def check_radius_₄_₀(_lh_check_radius_arg1⁹, _lh_check_radius_arg2⁹, _lh_check_radius_arg3⁹, _lh_check_radius_arg4⁹, _lh_check_radius_arg5⁹) = 
//│ 					let xn⁹ = new_x_₄_₀(_lh_check_radius_arg4⁹, _lh_check_radius_arg5⁹, _lh_check_radius_arg1⁹)
//│ 					in let yn⁹ = new_y_₄_₀(_lh_check_radius_arg4⁹, _lh_check_radius_arg5⁹, _lh_check_radius_arg2⁹)
//│ 					in let r⁹ = radius_₄_₀(xn⁹, yn⁹)
//│ 					in let kp⁹ = (_lh_check_radius_arg3⁹ + 1)
//│ 					in if (kp⁹ == num_cols_₄_₀) then 0 else if polyGt⁰(r⁹, float_of_int⁰(m_₄_₀)) then kp⁹ else check_radius_₄_₀(_lh_check_radius_arg1⁹, _lh_check_radius_arg2⁹, kp⁹, xn⁹, yn⁹)
//│ 					where
//│ 					def m_₄_₀ = 
//│ 						20
//│ 					def new_x_₄_₀(_lh_new_x_arg1¹⁰, _lh_new_x_arg2¹⁰, _lh_new_x_arg3¹⁰) = 
//│ 						(((_lh_new_x_arg1¹⁰ *. _lh_new_x_arg1¹⁰) -. (_lh_new_x_arg2¹⁰ *. _lh_new_x_arg2¹⁰)) +. _lh_new_x_arg3¹⁰)
//│ 					def new_y_₄_₀(_lh_new_y_arg1¹¹, _lh_new_y_arg2¹¹, _lh_new_y_arg3¹¹) = 
//│ 						(((2.0 *. _lh_new_y_arg1¹¹) *. _lh_new_y_arg2¹¹) +. _lh_new_y_arg3¹¹)
//│ 					def num_cols_₄_₀ = 
//│ 						26
//│ 					def radius_₄_₀(_lh_radius_arg1⁹, _lh_radius_arg2⁹) = 
//│ 						((_lh_radius_arg1⁹ *. _lh_radius_arg1⁹) +. (_lh_radius_arg2⁹ *. _lh_radius_arg2⁹))
//│ 				def np_₄_₀(_lh_np_arg1⁷) = 
//│ 					(pmn_₉_₀ +. (float_of_int⁰(_lh_np_arg1⁷) *. delta_p_₄_₀))
//│ 					where
//│ 					def delta_p_₄_₀ = 
//│ 						((pmx_₄_₀ -. pmn_₈_₀) /. float_of_int⁰((size_₈_₀ - 1)))
//│ 						where
//│ 						def pmn_₈_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₄_₀ = 
//│ 							0.75
//│ 						def size_₈_₀ = 
//│ 							200
//│ 					def pmn_₉_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₄_₀(_lh_nq_arg1⁷) = 
//│ 					(qmn_₉_₀ +. (float_of_int⁰(_lh_nq_arg1⁷) *. delta_q_₄_₀))
//│ 					where
//│ 					def delta_q_₄_₀ = 
//│ 						((qmx_₄_₀ -. qmn_₈_₀) /. float_of_int⁰((size_₉_₀ - 1)))
//│ 						where
//│ 						def qmn_₈_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₄_₀ = 
//│ 							1.5
//│ 						def size_₉_₀ = 
//│ 							200
//│ 					def qmn_₉_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₅_₀(_lh_point_colour_arg1⁶) = 
//│ 				case _lh_point_colour_arg1⁶ of {
//│ 					LH_P2 _lh_point_colour_LH_P2_0⁶ _lh_point_colour_LH_P2_1⁶ => check_radius_₅_₀(np_₅_₀(_lh_point_colour_LH_P2_0⁶), nq_₅_₀(_lh_point_colour_LH_P2_1⁶), 0, 0.0, 0.0)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def check_radius_₅_₀(_lh_check_radius_arg1¹¹, _lh_check_radius_arg2¹¹, _lh_check_radius_arg3¹¹, _lh_check_radius_arg4¹¹, _lh_check_radius_arg5¹¹) = 
//│ 					let xn¹¹ = new_x_₅_₀(_lh_check_radius_arg4¹¹, _lh_check_radius_arg5¹¹, _lh_check_radius_arg1¹¹)
//│ 					in let yn¹¹ = new_y_₅_₀(_lh_check_radius_arg4¹¹, _lh_check_radius_arg5¹¹, _lh_check_radius_arg2¹¹)
//│ 					in let r¹¹ = radius_₅_₀(xn¹¹, yn¹¹)
//│ 					in let kp¹¹ = (_lh_check_radius_arg3¹¹ + 1)
//│ 					in if (kp¹¹ == num_cols_₅_₀) then 0 else if polyGt⁰(r¹¹, float_of_int⁰(m_₅_₀)) then kp¹¹ else check_radius_₅_₀(_lh_check_radius_arg1¹¹, _lh_check_radius_arg2¹¹, kp¹¹, xn¹¹, yn¹¹)
//│ 					where
//│ 					def m_₅_₀ = 
//│ 						20
//│ 					def new_x_₅_₀(_lh_new_x_arg1⁷, _lh_new_x_arg2⁷, _lh_new_x_arg3⁷) = 
//│ 						(((_lh_new_x_arg1⁷ *. _lh_new_x_arg1⁷) -. (_lh_new_x_arg2⁷ *. _lh_new_x_arg2⁷)) +. _lh_new_x_arg3⁷)
//│ 					def new_y_₅_₀(_lh_new_y_arg1¹⁰, _lh_new_y_arg2¹⁰, _lh_new_y_arg3¹⁰) = 
//│ 						(((2.0 *. _lh_new_y_arg1¹⁰) *. _lh_new_y_arg2¹⁰) +. _lh_new_y_arg3¹⁰)
//│ 					def num_cols_₅_₀ = 
//│ 						26
//│ 					def radius_₅_₀(_lh_radius_arg1⁸, _lh_radius_arg2⁸) = 
//│ 						((_lh_radius_arg1⁸ *. _lh_radius_arg1⁸) +. (_lh_radius_arg2⁸ *. _lh_radius_arg2⁸))
//│ 				def np_₅_₀(_lh_np_arg1⁶) = 
//│ 					(pmn_₁₁_₀ +. (float_of_int⁰(_lh_np_arg1⁶) *. delta_p_₅_₀))
//│ 					where
//│ 					def delta_p_₅_₀ = 
//│ 						((pmx_₅_₀ -. pmn_₁₀_₀) /. float_of_int⁰((size_₁₀_₀ - 1)))
//│ 						where
//│ 						def pmn_₁₀_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₅_₀ = 
//│ 							0.75
//│ 						def size_₁₀_₀ = 
//│ 							200
//│ 					def pmn_₁₁_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₅_₀(_lh_nq_arg1⁶) = 
//│ 					(qmn_₁₁_₀ +. (float_of_int⁰(_lh_nq_arg1⁶) *. delta_q_₅_₀))
//│ 					where
//│ 					def delta_q_₅_₀ = 
//│ 						((qmx_₅_₀ -. qmn_₁₀_₀) /. float_of_int⁰((size_₁₁_₀ - 1)))
//│ 						where
//│ 						def qmn_₁₀_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₅_₀ = 
//│ 							1.5
//│ 						def size_₁₁_₀ = 
//│ 							200
//│ 					def qmn_₁₁_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def right_₀_₀ = 
//│ 				[LH_P2 1 0]
//│ 			def right_₁_₀ = 
//│ 				[LH_P2 1 0]
//│ 			def up_₀_₀ = 
//│ 				[LH_P2 0 (0 - 1)]
//│ 		def strEq_₀_₀(_lh_strEq_arg1¹, _lh_strEq_arg2¹) = 
//│ 			case _lh_strEq_arg1¹ of {
//│ 				LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => 
//│ 					let _lh_matchIdent⁶ = _lh_strEq_arg2¹
//│ 					in case _lh_matchIdent⁶ of {
//│ 						LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False]
//│ 						| LH_N  => [False]
//│ 						| _  => error⁰}
//│ 				| LH_N  => 
//│ 					let _lh_matchIdent⁷ = _lh_strEq_arg2¹
//│ 					in case _lh_matchIdent⁷ of {
//│ 						LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False]
//│ 						| LH_N  => [True]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 	def finite_₀_₀(_lh_finite_arg1¹) = 
//│ 		case _lh_finite_arg1¹ of {
//│ 			Leaf _lh_finite_Leaf_0¹ => (_lh_finite_Leaf_0¹ == _lh_finite_Leaf_0¹)
//│ 			| NS _lh_finite_NS_0¹ _lh_finite_NS_1¹ => (finite_₀_₀(_lh_finite_NS_0¹) && finite_₀_₀(_lh_finite_NS_1¹))
//│ 			| EW _lh_finite_EW_0¹ _lh_finite_EW_1¹ => (finite_₀_₀(_lh_finite_EW_0¹) && finite_₀_₀(_lh_finite_EW_1¹))
//│ 			| _  => error⁰}
//│ 	def length_₀_₀(ls¹) = 
//│ 		case ls¹ of {
//│ 			LH_C h¹ t¹ => (1 + length_₀_₀(t¹))
//│ 			| LH_N  => 0}
//│ 	def max_₀_₀(_lh_max_arg1¹, _lh_max_arg2¹) = 
//│ 		if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ 	def size_₁₂_₀ = 
//│ 		200
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_P2 1 0]: 1876 --->
//│ 	case _lh_equalp_arg2⁶ of {LH_P2 _lh_equalp_LH_P2_0¹³ _lh_equalp_LH_P2_1¹³ => ((_lh_equalp_LH_P2_0¹² == _lh_equalp_LH_P2_0¹³) && (_lh_equalp_LH_P2_1¹² == _lh_equalp_LH_P2_1¹³)) | _  => error⁰}: 3063
//│ [LH_P2 (0 - 1) 0]: 1936 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰}: 2795
//│ [LH_P2 0 0]: 1947 --->
//│ 	case _lh_build_tree_arg1¹ of {LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1² => case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰} | _  => error⁰}: 2661
//│ [LH_P2 size'¹ div⁰(size'¹, 2)]: 1955 --->
//│ 	case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰}: 2659
//│ [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]: 2522 --->
//│ 	case _lh_check_perim_arg1¹ of {LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴ => case _lh_check_perim_arg2¹ of {LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵ => let col1¹ = point_colour_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴])
//│ in let col2¹ = point_colour_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴])
//│ in let col3¹ = point_colour_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵])
//│ in let col4¹ = point_colour_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵])
//│ in let corners_diff¹ = if (col1¹ == col2¹) then if (col1¹ == col3¹) then if (col1¹ == col4¹) then [False] else [True] else [True] else [True]
//│ in let check_line¹ = (fun xcyc¹ -> (fun xdyd¹ -> let _lh_matchIdent⁴ = xcyc¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}))
//│ in let check_sides¹ = if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁴ + 1) _lh_check_perim_LH_P2_1⁴], right_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁵ (_lh_check_perim_LH_P2_1⁴ + 1)], down_₁_₀) then if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁵ - 1) _lh_check_perim_LH_P2_1⁵], left_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁴ (_lh_check_perim_LH_P2_1⁵ - 1)], up_₀_₀) then col1¹ else (0 - 1) else (0 - 1) else (0 - 1) else (0 - 1)
//│ in if equalp_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴], [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]) then point_colour_₅_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]) else if corners_diff¹ then (0 - 1) else check_sides¹ | _  => error⁰} | _  => error⁰}: 2904
//│ [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]: 2526 --->
//│ 	case _lh_check_perim_arg2¹ of {LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵ => let col1¹ = point_colour_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴])
//│ in let col2¹ = point_colour_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴])
//│ in let col3¹ = point_colour_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵])
//│ in let col4¹ = point_colour_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵])
//│ in let corners_diff¹ = if (col1¹ == col2¹) then if (col1¹ == col3¹) then if (col1¹ == col4¹) then [False] else [True] else [True] else [True]
//│ in let check_line¹ = (fun xcyc¹ -> (fun xdyd¹ -> let _lh_matchIdent⁴ = xcyc¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}))
//│ in let check_sides¹ = if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁴ + 1) _lh_check_perim_LH_P2_1⁴], right_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁵ (_lh_check_perim_LH_P2_1⁴ + 1)], down_₁_₀) then if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁵ - 1) _lh_check_perim_LH_P2_1⁵], left_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁴ (_lh_check_perim_LH_P2_1⁵ - 1)], up_₀_₀) then col1¹ else (0 - 1) else (0 - 1) else (0 - 1) else (0 - 1)
//│ in if equalp_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴], [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]) then point_colour_₅_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]) else if corners_diff¹ then (0 - 1) else check_sides¹ | _  => error⁰}: 2902
//│ [LH_N]: 2543 --->
//│ 	case _lh_strEq_arg1¹ of {LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => let _lh_matchIdent⁶ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰} | LH_N  => let _lh_matchIdent⁷ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰} | _  => error⁰}: 3394
//│ [LH_C 'S' [LH_N]]: 2544 --->
//│ 	case _lh_strEq_arg1¹ of {LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => let _lh_matchIdent⁶ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰} | LH_N  => let _lh_matchIdent⁷ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰} | _  => error⁰}: 3394
//│ [LH_C 'N' [LH_C 'S' [LH_N]]]: 2545 --->
//│ 	case _lh_strEq_arg1¹ of {LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => let _lh_matchIdent⁶ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰} | LH_N  => let _lh_matchIdent⁷ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰} | _  => error⁰}: 3394
//│ [LH_N]: 2548 --->
//│ 	case _lh_strEq_arg1¹ of {LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => let _lh_matchIdent⁶ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰} | LH_N  => let _lh_matchIdent⁷ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰} | _  => error⁰}: 3394
//│ [LH_C 'W' [LH_N]]: 2549 --->
//│ 	case _lh_strEq_arg1¹ of {LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => let _lh_matchIdent⁶ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰} | LH_N  => let _lh_matchIdent⁷ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰} | _  => error⁰}: 3394
//│ [LH_C 'E' [LH_C 'W' [LH_N]]]: 2550 --->
//│ 	case _lh_strEq_arg1¹ of {LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => let _lh_matchIdent⁶ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰} | LH_N  => let _lh_matchIdent⁷ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰} | _  => error⁰}: 3394
//│ [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]: 2572 --->
//│ 	case _lh_build_tree_arg1¹ of {LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1² => case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰} | _  => error⁰}: 2661
//│ [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]: 2575 --->
//│ 	case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰}: 2659
//│ [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]: 2582 --->
//│ 	case _lh_build_tree_arg1¹ of {LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1² => case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰} | _  => error⁰}: 2661
//│ [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]: 2585 --->
//│ 	case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰}: 2659
//│ [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]: 2588 --->
//│ 	case _lh_build_tree_arg1¹ of {LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1² => case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰} | _  => error⁰}: 2661
//│ [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]: 2591 --->
//│ 	case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰}: 2659
//│ [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]: 2598 --->
//│ 	case _lh_build_tree_arg1¹ of {LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1² => case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰} | _  => error⁰}: 2661
//│ [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]: 2601 --->
//│ 	case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰}: 2659
//│ [Leaf rec_col¹]: 2612 --->
//│ 	case _lh_finite_arg1¹ of {Leaf _lh_finite_Leaf_0¹ => (_lh_finite_Leaf_0¹ == _lh_finite_Leaf_0¹) | NS _lh_finite_NS_0¹ _lh_finite_NS_1¹ => (finite_₀_₀(_lh_finite_NS_0¹) && finite_₀_₀(_lh_finite_NS_1¹)) | EW _lh_finite_EW_0¹ _lh_finite_EW_1¹ => (finite_₀_₀(_lh_finite_EW_0¹) && finite_₀_₀(_lh_finite_EW_1¹)) | _  => error⁰}: 2410
//│ [LH_N]: 2618 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰}: 3384
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰}: 3391
//│ [LH_C 'S' [LH_N]]: 2619 --->
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰}: 3384
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰}: 3391
//│ [LH_C 'N' [LH_C 'S' [LH_N]]]: 2620 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰}: 3384
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰}: 3391
//│ [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)]: 2632 --->
//│ 	case _lh_finite_arg1¹ of {Leaf _lh_finite_Leaf_0¹ => (_lh_finite_Leaf_0¹ == _lh_finite_Leaf_0¹) | NS _lh_finite_NS_0¹ _lh_finite_NS_1¹ => (finite_₀_₀(_lh_finite_NS_0¹) && finite_₀_₀(_lh_finite_NS_1¹)) | EW _lh_finite_EW_0¹ _lh_finite_EW_1¹ => (finite_₀_₀(_lh_finite_EW_0¹) && finite_₀_₀(_lh_finite_EW_1¹)) | _  => error⁰}: 2410
//│ [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)]: 2643 --->
//│ 	case _lh_finite_arg1¹ of {Leaf _lh_finite_Leaf_0¹ => (_lh_finite_Leaf_0¹ == _lh_finite_Leaf_0¹) | NS _lh_finite_NS_0¹ _lh_finite_NS_1¹ => (finite_₀_₀(_lh_finite_NS_0¹) && finite_₀_₀(_lh_finite_NS_1¹)) | EW _lh_finite_EW_0¹ _lh_finite_EW_1¹ => (finite_₀_₀(_lh_finite_EW_0¹) && finite_₀_₀(_lh_finite_EW_1¹)) | _  => error⁰}: 2410
//│ [LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2675 --->
//│ 	case _lh_point_colour_arg1¹⁰ of {LH_P2 _lh_point_colour_LH_P2_0¹⁰ _lh_point_colour_LH_P2_1¹⁰ => check_radius_₀_₀(np_₀_₀(_lh_point_colour_LH_P2_0¹⁰), nq_₀_₀(_lh_point_colour_LH_P2_1¹⁰), 0, 0.0, 0.0) | _  => error⁰}: 3464
//│ [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴]: 2680 --->
//│ 	case _lh_point_colour_arg1⁷ of {LH_P2 _lh_point_colour_LH_P2_0⁷ _lh_point_colour_LH_P2_1⁷ => check_radius_₁_₀(np_₁_₀(_lh_point_colour_LH_P2_0⁷), nq_₁_₀(_lh_point_colour_LH_P2_1⁷), 0, 0.0, 0.0) | _  => error⁰}: 2304
//│ [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]: 2685 --->
//│ 	case _lh_point_colour_arg1⁸ of {LH_P2 _lh_point_colour_LH_P2_0⁸ _lh_point_colour_LH_P2_1⁸ => check_radius_₂_₀(np_₂_₀(_lh_point_colour_LH_P2_0⁸), nq_₂_₀(_lh_point_colour_LH_P2_1⁸), 0, 0.0, 0.0) | _  => error⁰}: 3331
//│ [LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵]: 2690 --->
//│ 	case _lh_point_colour_arg1⁹ of {LH_P2 _lh_point_colour_LH_P2_0⁹ _lh_point_colour_LH_P2_1⁹ => check_radius_₃_₀(np_₃_₀(_lh_point_colour_LH_P2_0⁹), nq_₃_₀(_lh_point_colour_LH_P2_1⁹), 0, 0.0, 0.0) | _  => error⁰}: 3435
//│ [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]: 2721 --->
//│ 	case _lh_equalp_arg1⁶ of {LH_P2 _lh_equalp_LH_P2_0¹² _lh_equalp_LH_P2_1¹² => case _lh_equalp_arg2⁶ of {LH_P2 _lh_equalp_LH_P2_0¹³ _lh_equalp_LH_P2_1¹³ => ((_lh_equalp_LH_P2_0¹² == _lh_equalp_LH_P2_0¹³) && (_lh_equalp_LH_P2_1¹² == _lh_equalp_LH_P2_1¹³)) | _  => error⁰} | _  => error⁰}: 3065
//│ [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]: 2733 --->
//│ 	case _lh_equalp_arg1⁵ of {LH_P2 _lh_equalp_LH_P2_0¹⁰ _lh_equalp_LH_P2_1¹⁰ => case _lh_equalp_arg2⁵ of {LH_P2 _lh_equalp_LH_P2_0¹¹ _lh_equalp_LH_P2_1¹¹ => ((_lh_equalp_LH_P2_0¹⁰ == _lh_equalp_LH_P2_0¹¹) && (_lh_equalp_LH_P2_1¹⁰ == _lh_equalp_LH_P2_1¹¹)) | _  => error⁰} | _  => error⁰}: 2249
//│ [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]: 2745 --->
//│ 	case _lh_equalp_arg1⁴ of {LH_P2 _lh_equalp_LH_P2_0⁸ _lh_equalp_LH_P2_1⁸ => case _lh_equalp_arg2⁴ of {LH_P2 _lh_equalp_LH_P2_0⁹ _lh_equalp_LH_P2_1⁹ => ((_lh_equalp_LH_P2_0⁸ == _lh_equalp_LH_P2_0⁹) && (_lh_equalp_LH_P2_1⁸ == _lh_equalp_LH_P2_1⁹)) | _  => error⁰} | _  => error⁰}: 2003
//│ [LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]: 2768 --->
//│ 	case _lh_point_colour_arg1¹¹ of {LH_P2 _lh_point_colour_LH_P2_0¹¹ _lh_point_colour_LH_P2_1¹¹ => check_radius_₄_₀(np_₄_₀(_lh_point_colour_LH_P2_0¹¹), nq_₄_₀(_lh_point_colour_LH_P2_1¹¹), 0, 0.0, 0.0) | _  => error⁰}: 3738
//│ [LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)]: 2785 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}: 2798
//│ [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]: 2789 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰}: 2795
//│ [LH_P2 (_lh_check_perim_LH_P2_0⁴ + 1) _lh_check_perim_LH_P2_1⁴]: 2809 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}: 2798
//│ [LH_P2 _lh_check_perim_LH_P2_0⁵ (_lh_check_perim_LH_P2_1⁴ + 1)]: 2820 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}: 2798
//│ [LH_P2 (_lh_check_perim_LH_P2_0⁵ - 1) _lh_check_perim_LH_P2_1⁵]: 2831 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}: 2798
//│ [LH_P2 _lh_check_perim_LH_P2_0⁴ (_lh_check_perim_LH_P2_1⁵ - 1)]: 2842 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}: 2798
//│ [LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2874 --->
//│ 	case _lh_equalp_arg1⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁴ _lh_equalp_LH_P2_1¹⁴ => case _lh_equalp_arg2⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁵ _lh_equalp_LH_P2_1¹⁵ => ((_lh_equalp_LH_P2_0¹⁴ == _lh_equalp_LH_P2_0¹⁵) && (_lh_equalp_LH_P2_1¹⁴ == _lh_equalp_LH_P2_1¹⁵)) | _  => error⁰} | _  => error⁰}: 3187
//│ [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]: 2878 --->
//│ 	case _lh_equalp_arg2⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁵ _lh_equalp_LH_P2_1¹⁵ => ((_lh_equalp_LH_P2_0¹⁴ == _lh_equalp_LH_P2_0¹⁵) && (_lh_equalp_LH_P2_1¹⁴ == _lh_equalp_LH_P2_1¹⁵)) | _  => error⁰}: 3185
//│ [LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2883 --->
//│ 	case _lh_point_colour_arg1⁶ of {LH_P2 _lh_point_colour_LH_P2_0⁶ _lh_point_colour_LH_P2_1⁶ => check_radius_₅_₀(np_₅_₀(_lh_point_colour_LH_P2_0⁶), nq_₅_₀(_lh_point_colour_LH_P2_1⁶), 0, 0.0, 0.0) | _  => error⁰}: 1907
//│ [LH_P2 0 1]: 3351 --->
//│ 	case _lh_equalp_arg2⁵ of {LH_P2 _lh_equalp_LH_P2_0¹¹ _lh_equalp_LH_P2_1¹¹ => ((_lh_equalp_LH_P2_0¹⁰ == _lh_equalp_LH_P2_0¹¹) && (_lh_equalp_LH_P2_1¹⁰ == _lh_equalp_LH_P2_1¹¹)) | _  => error⁰}: 2247
//│ [LH_P2 1 0]: 3445 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰}: 2795
//│ [LH_P2 0 1]: 3522 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰}: 2795
//│ [LH_P2 (0 - 1) 0]: 3545 --->
//│ 	case _lh_equalp_arg2⁴ of {LH_P2 _lh_equalp_LH_P2_0⁹ _lh_equalp_LH_P2_1⁹ => ((_lh_equalp_LH_P2_0⁸ == _lh_equalp_LH_P2_0⁹) && (_lh_equalp_LH_P2_1⁸ == _lh_equalp_LH_P2_1⁹)) | _  => error⁰}: 2001
//│ [LH_P2 0 (0 - 1)]: 3696 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰}: 2795
//│ ------------------
//│ case _lh_point_colour_arg1⁶ of {LH_P2 _lh_point_colour_LH_P2_0⁶ _lh_point_colour_LH_P2_1⁶ => check_radius_₅_₀(np_₅_₀(_lh_point_colour_LH_P2_0⁶), nq_₅_₀(_lh_point_colour_LH_P2_1⁶), 0, 0.0, 0.0) | _  => error⁰}: 1907 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2883
//│ case _lh_equalp_arg2⁴ of {LH_P2 _lh_equalp_LH_P2_0⁹ _lh_equalp_LH_P2_1⁹ => ((_lh_equalp_LH_P2_0⁸ == _lh_equalp_LH_P2_0⁹) && (_lh_equalp_LH_P2_1⁸ == _lh_equalp_LH_P2_1⁹)) | _  => error⁰}: 2001 --->
//│ 	[LH_P2 (0 - 1) 0]: 3545
//│ case _lh_equalp_arg1⁴ of {LH_P2 _lh_equalp_LH_P2_0⁸ _lh_equalp_LH_P2_1⁸ => case _lh_equalp_arg2⁴ of {LH_P2 _lh_equalp_LH_P2_0⁹ _lh_equalp_LH_P2_1⁹ => ((_lh_equalp_LH_P2_0⁸ == _lh_equalp_LH_P2_0⁹) && (_lh_equalp_LH_P2_1⁸ == _lh_equalp_LH_P2_1⁹)) | _  => error⁰} | _  => error⁰}: 2003 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]: 2745
//│ case _lh_equalp_arg2⁵ of {LH_P2 _lh_equalp_LH_P2_0¹¹ _lh_equalp_LH_P2_1¹¹ => ((_lh_equalp_LH_P2_0¹⁰ == _lh_equalp_LH_P2_0¹¹) && (_lh_equalp_LH_P2_1¹⁰ == _lh_equalp_LH_P2_1¹¹)) | _  => error⁰}: 2247 --->
//│ 	[LH_P2 0 1]: 3351
//│ case _lh_equalp_arg1⁵ of {LH_P2 _lh_equalp_LH_P2_0¹⁰ _lh_equalp_LH_P2_1¹⁰ => case _lh_equalp_arg2⁵ of {LH_P2 _lh_equalp_LH_P2_0¹¹ _lh_equalp_LH_P2_1¹¹ => ((_lh_equalp_LH_P2_0¹⁰ == _lh_equalp_LH_P2_0¹¹) && (_lh_equalp_LH_P2_1¹⁰ == _lh_equalp_LH_P2_1¹¹)) | _  => error⁰} | _  => error⁰}: 2249 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]: 2733
//│ case _lh_point_colour_arg1⁷ of {LH_P2 _lh_point_colour_LH_P2_0⁷ _lh_point_colour_LH_P2_1⁷ => check_radius_₁_₀(np_₁_₀(_lh_point_colour_LH_P2_0⁷), nq_₁_₀(_lh_point_colour_LH_P2_1⁷), 0, 0.0, 0.0) | _  => error⁰}: 2304 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴]: 2680
//│ case _lh_finite_arg1¹ of {Leaf _lh_finite_Leaf_0¹ => (_lh_finite_Leaf_0¹ == _lh_finite_Leaf_0¹) | NS _lh_finite_NS_0¹ _lh_finite_NS_1¹ => (finite_₀_₀(_lh_finite_NS_0¹) && finite_₀_₀(_lh_finite_NS_1¹)) | EW _lh_finite_EW_0¹ _lh_finite_EW_1¹ => (finite_₀_₀(_lh_finite_EW_0¹) && finite_₀_₀(_lh_finite_EW_1¹)) | _  => error⁰}: 2410 --->
//│ 	[Leaf rec_col¹]: 2612
//│ 	[NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)]: 2632
//│ 	[EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)]: 2643
//│ case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰}: 2659 --->
//│ 	[LH_P2 size'¹ div⁰(size'¹, 2)]: 1955
//│ 	[LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]: 2575
//│ 	[LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]: 2585
//│ 	[LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]: 2591
//│ 	[LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]: 2601
//│ case _lh_build_tree_arg1¹ of {LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1² => case _lh_build_tree_arg2¹ of {LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => let rec_col¹ = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ in let split¹ = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ in let split_x¹ = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ in let split_y¹ = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ in let nsp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let nsp2¹ = [LH_P2 split_x¹ _lh_build_tree_LH_P2_1³]
//│ in let nsp3¹ = [LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]
//│ in let nsp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in let ewp1¹ = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ in let ewp2¹ = [LH_P2 _lh_build_tree_LH_P2_0³ split_y¹]
//│ in let ewp3¹ = [LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]
//│ in let ewp4¹ = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ in if (rec_col¹ /= (0 - 1)) then [Leaf rec_col¹] else if strEq_₀_₀(split¹, [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1¹, nsp2¹) build_tree_₀_₀(nsp3¹, nsp4¹)] else [EW build_tree_₀_₀(ewp1¹, ewp2¹) build_tree_₀_₀(ewp3¹, ewp4¹)] | _  => error⁰} | _  => error⁰}: 2661 --->
//│ 	[LH_P2 0 0]: 1947
//│ 	[LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]: 2572
//│ 	[LH_P2 (split_x¹ + 1) _lh_build_tree_LH_P2_1²]: 2582
//│ 	[LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]: 2588
//│ 	[LH_P2 _lh_build_tree_LH_P2_0² (split_y¹ + 1)]: 2598
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰}: 2795 --->
//│ 	[LH_P2 (0 - 1) 0]: 1936
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]: 2789
//│ 	[LH_P2 1 0]: 3445
//│ 	[LH_P2 0 1]: 3522
//│ 	[LH_P2 0 (0 - 1)]: 3696
//│ case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}: 2798 --->
//│ 	[LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)]: 2785
//│ 	[LH_P2 (_lh_check_perim_LH_P2_0⁴ + 1) _lh_check_perim_LH_P2_1⁴]: 2809
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁵ (_lh_check_perim_LH_P2_1⁴ + 1)]: 2820
//│ 	[LH_P2 (_lh_check_perim_LH_P2_0⁵ - 1) _lh_check_perim_LH_P2_1⁵]: 2831
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁴ (_lh_check_perim_LH_P2_1⁵ - 1)]: 2842
//│ case _lh_check_perim_arg2¹ of {LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵ => let col1¹ = point_colour_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴])
//│ in let col2¹ = point_colour_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴])
//│ in let col3¹ = point_colour_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵])
//│ in let col4¹ = point_colour_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵])
//│ in let corners_diff¹ = if (col1¹ == col2¹) then if (col1¹ == col3¹) then if (col1¹ == col4¹) then [False] else [True] else [True] else [True]
//│ in let check_line¹ = (fun xcyc¹ -> (fun xdyd¹ -> let _lh_matchIdent⁴ = xcyc¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}))
//│ in let check_sides¹ = if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁴ + 1) _lh_check_perim_LH_P2_1⁴], right_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁵ (_lh_check_perim_LH_P2_1⁴ + 1)], down_₁_₀) then if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁵ - 1) _lh_check_perim_LH_P2_1⁵], left_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁴ (_lh_check_perim_LH_P2_1⁵ - 1)], up_₀_₀) then col1¹ else (0 - 1) else (0 - 1) else (0 - 1) else (0 - 1)
//│ in if equalp_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴], [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]) then point_colour_₅_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]) else if corners_diff¹ then (0 - 1) else check_sides¹ | _  => error⁰}: 2902 --->
//│ 	[LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]: 2526
//│ case _lh_check_perim_arg1¹ of {LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴ => case _lh_check_perim_arg2¹ of {LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵ => let col1¹ = point_colour_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴])
//│ in let col2¹ = point_colour_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴])
//│ in let col3¹ = point_colour_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵])
//│ in let col4¹ = point_colour_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵])
//│ in let corners_diff¹ = if (col1¹ == col2¹) then if (col1¹ == col3¹) then if (col1¹ == col4¹) then [False] else [True] else [True] else [True]
//│ in let check_line¹ = (fun xcyc¹ -> (fun xdyd¹ -> let _lh_matchIdent⁴ = xcyc¹
//│ in case _lh_matchIdent⁴ of {LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => let _lh_matchIdent⁵ = xdyd¹
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => let finished¹ = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ in if finished¹ then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1¹) then [False] else check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]) | _  => error⁰} | _  => error⁰}))
//│ in let check_sides¹ = if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁴ + 1) _lh_check_perim_LH_P2_1⁴], right_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁵ (_lh_check_perim_LH_P2_1⁴ + 1)], down_₁_₀) then if check_line¹([LH_P2 (_lh_check_perim_LH_P2_0⁵ - 1) _lh_check_perim_LH_P2_1⁵], left_₁_₀) then if check_line¹([LH_P2 _lh_check_perim_LH_P2_0⁴ (_lh_check_perim_LH_P2_1⁵ - 1)], up_₀_₀) then col1¹ else (0 - 1) else (0 - 1) else (0 - 1) else (0 - 1)
//│ in if equalp_₃_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴], [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]) then point_colour_₅_₀([LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]) else if corners_diff¹ then (0 - 1) else check_sides¹ | _  => error⁰} | _  => error⁰}: 2904 --->
//│ 	[LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]: 2522
//│ case _lh_equalp_arg2⁶ of {LH_P2 _lh_equalp_LH_P2_0¹³ _lh_equalp_LH_P2_1¹³ => ((_lh_equalp_LH_P2_0¹² == _lh_equalp_LH_P2_0¹³) && (_lh_equalp_LH_P2_1¹² == _lh_equalp_LH_P2_1¹³)) | _  => error⁰}: 3063 --->
//│ 	[LH_P2 1 0]: 1876
//│ case _lh_equalp_arg1⁶ of {LH_P2 _lh_equalp_LH_P2_0¹² _lh_equalp_LH_P2_1¹² => case _lh_equalp_arg2⁶ of {LH_P2 _lh_equalp_LH_P2_0¹³ _lh_equalp_LH_P2_1¹³ => ((_lh_equalp_LH_P2_0¹² == _lh_equalp_LH_P2_0¹³) && (_lh_equalp_LH_P2_1¹² == _lh_equalp_LH_P2_1¹³)) | _  => error⁰} | _  => error⁰}: 3065 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷]: 2721
//│ case _lh_equalp_arg2⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁵ _lh_equalp_LH_P2_1¹⁵ => ((_lh_equalp_LH_P2_0¹⁴ == _lh_equalp_LH_P2_0¹⁵) && (_lh_equalp_LH_P2_1¹⁴ == _lh_equalp_LH_P2_1¹⁵)) | _  => error⁰}: 3185 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]: 2878
//│ case _lh_equalp_arg1⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁴ _lh_equalp_LH_P2_1¹⁴ => case _lh_equalp_arg2⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁵ _lh_equalp_LH_P2_1¹⁵ => ((_lh_equalp_LH_P2_0¹⁴ == _lh_equalp_LH_P2_0¹⁵) && (_lh_equalp_LH_P2_1¹⁴ == _lh_equalp_LH_P2_1¹⁵)) | _  => error⁰} | _  => error⁰}: 3187 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2874
//│ case _lh_point_colour_arg1⁸ of {LH_P2 _lh_point_colour_LH_P2_0⁸ _lh_point_colour_LH_P2_1⁸ => check_radius_₂_₀(np_₂_₀(_lh_point_colour_LH_P2_0⁸), nq_₂_₀(_lh_point_colour_LH_P2_1⁸), 0, 0.0, 0.0) | _  => error⁰}: 3331 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]: 2685
//│ case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰}: 3384 --->
//│ 	[LH_N]: 2618
//│ 	[LH_C 'S' [LH_N]]: 2619
//│ 	[LH_C 'N' [LH_C 'S' [LH_N]]]: 2620
//│ case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰}: 3391 --->
//│ 	[LH_N]: 2618
//│ 	[LH_C 'S' [LH_N]]: 2619
//│ 	[LH_C 'N' [LH_C 'S' [LH_N]]]: 2620
//│ case _lh_strEq_arg1¹ of {LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => let _lh_matchIdent⁶ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁶ of {LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False] | LH_N  => [False] | _  => error⁰} | LH_N  => let _lh_matchIdent⁷ = _lh_strEq_arg2¹
//│ in case _lh_matchIdent⁷ of {LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False] | LH_N  => [True] | _  => error⁰} | _  => error⁰}: 3394 --->
//│ 	[LH_N]: 2543
//│ 	[LH_C 'S' [LH_N]]: 2544
//│ 	[LH_C 'N' [LH_C 'S' [LH_N]]]: 2545
//│ 	[LH_N]: 2548
//│ 	[LH_C 'W' [LH_N]]: 2549
//│ 	[LH_C 'E' [LH_C 'W' [LH_N]]]: 2550
//│ case _lh_point_colour_arg1⁹ of {LH_P2 _lh_point_colour_LH_P2_0⁹ _lh_point_colour_LH_P2_1⁹ => check_radius_₃_₀(np_₃_₀(_lh_point_colour_LH_P2_0⁹), nq_₃_₀(_lh_point_colour_LH_P2_1⁹), 0, 0.0, 0.0) | _  => error⁰}: 3435 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵]: 2690
//│ case _lh_point_colour_arg1¹⁰ of {LH_P2 _lh_point_colour_LH_P2_0¹⁰ _lh_point_colour_LH_P2_1¹⁰ => check_radius_₀_₀(np_₀_₀(_lh_point_colour_LH_P2_0¹⁰), nq_₀_₀(_lh_point_colour_LH_P2_1¹⁰), 0, 0.0, 0.0) | _  => error⁰}: 3464 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2675
//│ case _lh_point_colour_arg1¹¹ of {LH_P2 _lh_point_colour_LH_P2_0¹¹ _lh_point_colour_LH_P2_1¹¹ => check_radius_₄_₀(np_₄_₀(_lh_point_colour_LH_P2_0¹¹), nq_₄_₀(_lh_point_colour_LH_P2_1¹¹), 0, 0.0, 0.0) | _  => error⁰}: 3738 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]: 2768
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 1 0]: 1876 --->
//│ 	case _lh_equalp_arg2⁶ of {LH_P2 _lh_equalp_LH_P2_0¹³ _lh_equalp_LH_P2_1¹³ => ((_lh_equalp_LH_P2_0¹² == _lh_equalp_LH_P2_0¹³) && (_lh_equalp_LH_P2_1¹² == _lh_equalp_LH_P2_1¹³)) | _  => error⁰}: 3063
//│ [LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2675 --->
//│ 	case _lh_point_colour_arg1¹⁰ of {LH_P2 _lh_point_colour_LH_P2_0¹⁰ _lh_point_colour_LH_P2_1¹⁰ => check_radius_₀_₀(np_₀_₀(_lh_point_colour_LH_P2_0¹⁰), nq_₀_₀(_lh_point_colour_LH_P2_1¹⁰), 0, 0.0, 0.0) | _  => error⁰}: 3464
//│ [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴]: 2680 --->
//│ 	case _lh_point_colour_arg1⁷ of {LH_P2 _lh_point_colour_LH_P2_0⁷ _lh_point_colour_LH_P2_1⁷ => check_radius_₁_₀(np_₁_₀(_lh_point_colour_LH_P2_0⁷), nq_₁_₀(_lh_point_colour_LH_P2_1⁷), 0, 0.0, 0.0) | _  => error⁰}: 2304
//│ [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]: 2685 --->
//│ 	case _lh_point_colour_arg1⁸ of {LH_P2 _lh_point_colour_LH_P2_0⁸ _lh_point_colour_LH_P2_1⁸ => check_radius_₂_₀(np_₂_₀(_lh_point_colour_LH_P2_0⁸), nq_₂_₀(_lh_point_colour_LH_P2_1⁸), 0, 0.0, 0.0) | _  => error⁰}: 3331
//│ [LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵]: 2690 --->
//│ 	case _lh_point_colour_arg1⁹ of {LH_P2 _lh_point_colour_LH_P2_0⁹ _lh_point_colour_LH_P2_1⁹ => check_radius_₃_₀(np_₃_₀(_lh_point_colour_LH_P2_0⁹), nq_₃_₀(_lh_point_colour_LH_P2_1⁹), 0, 0.0, 0.0) | _  => error⁰}: 3435
//│ [LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2874 --->
//│ 	case _lh_equalp_arg1⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁴ _lh_equalp_LH_P2_1¹⁴ => case _lh_equalp_arg2⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁵ _lh_equalp_LH_P2_1¹⁵ => ((_lh_equalp_LH_P2_0¹⁴ == _lh_equalp_LH_P2_0¹⁵) && (_lh_equalp_LH_P2_1¹⁴ == _lh_equalp_LH_P2_1¹⁵)) | _  => error⁰} | _  => error⁰}: 3187
//│ [LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]: 2878 --->
//│ 	case _lh_equalp_arg2⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁵ _lh_equalp_LH_P2_1¹⁵ => ((_lh_equalp_LH_P2_0¹⁴ == _lh_equalp_LH_P2_0¹⁵) && (_lh_equalp_LH_P2_1¹⁴ == _lh_equalp_LH_P2_1¹⁵)) | _  => error⁰}: 3185
//│ [LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2883 --->
//│ 	case _lh_point_colour_arg1⁶ of {LH_P2 _lh_point_colour_LH_P2_0⁶ _lh_point_colour_LH_P2_1⁶ => check_radius_₅_₀(np_₅_₀(_lh_point_colour_LH_P2_0⁶), nq_₅_₀(_lh_point_colour_LH_P2_1⁶), 0, 0.0, 0.0) | _  => error⁰}: 1907
//│ [LH_P2 0 1]: 3351 --->
//│ 	case _lh_equalp_arg2⁵ of {LH_P2 _lh_equalp_LH_P2_0¹¹ _lh_equalp_LH_P2_1¹¹ => ((_lh_equalp_LH_P2_0¹⁰ == _lh_equalp_LH_P2_0¹¹) && (_lh_equalp_LH_P2_1¹⁰ == _lh_equalp_LH_P2_1¹¹)) | _  => error⁰}: 2247
//│ [LH_P2 (0 - 1) 0]: 3545 --->
//│ 	case _lh_equalp_arg2⁴ of {LH_P2 _lh_equalp_LH_P2_0⁹ _lh_equalp_LH_P2_1⁹ => ((_lh_equalp_LH_P2_0⁸ == _lh_equalp_LH_P2_0⁹) && (_lh_equalp_LH_P2_1⁸ == _lh_equalp_LH_P2_1⁹)) | _  => error⁰}: 2001
//│ ------------------
//│ case _lh_point_colour_arg1⁶ of {LH_P2 _lh_point_colour_LH_P2_0⁶ _lh_point_colour_LH_P2_1⁶ => check_radius_₅_₀(np_₅_₀(_lh_point_colour_LH_P2_0⁶), nq_₅_₀(_lh_point_colour_LH_P2_1⁶), 0, 0.0, 0.0) | _  => error⁰}: 1907 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2883
//│ case _lh_equalp_arg2⁴ of {LH_P2 _lh_equalp_LH_P2_0⁹ _lh_equalp_LH_P2_1⁹ => ((_lh_equalp_LH_P2_0⁸ == _lh_equalp_LH_P2_0⁹) && (_lh_equalp_LH_P2_1⁸ == _lh_equalp_LH_P2_1⁹)) | _  => error⁰}: 2001 --->
//│ 	[LH_P2 (0 - 1) 0]: 3545
//│ case _lh_equalp_arg2⁵ of {LH_P2 _lh_equalp_LH_P2_0¹¹ _lh_equalp_LH_P2_1¹¹ => ((_lh_equalp_LH_P2_0¹⁰ == _lh_equalp_LH_P2_0¹¹) && (_lh_equalp_LH_P2_1¹⁰ == _lh_equalp_LH_P2_1¹¹)) | _  => error⁰}: 2247 --->
//│ 	[LH_P2 0 1]: 3351
//│ case _lh_point_colour_arg1⁷ of {LH_P2 _lh_point_colour_LH_P2_0⁷ _lh_point_colour_LH_P2_1⁷ => check_radius_₁_₀(np_₁_₀(_lh_point_colour_LH_P2_0⁷), nq_₁_₀(_lh_point_colour_LH_P2_1⁷), 0, 0.0, 0.0) | _  => error⁰}: 2304 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁴]: 2680
//│ case _lh_equalp_arg2⁶ of {LH_P2 _lh_equalp_LH_P2_0¹³ _lh_equalp_LH_P2_1¹³ => ((_lh_equalp_LH_P2_0¹² == _lh_equalp_LH_P2_0¹³) && (_lh_equalp_LH_P2_1¹² == _lh_equalp_LH_P2_1¹³)) | _  => error⁰}: 3063 --->
//│ 	[LH_P2 1 0]: 1876
//│ case _lh_equalp_arg2⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁵ _lh_equalp_LH_P2_1¹⁵ => ((_lh_equalp_LH_P2_0¹⁴ == _lh_equalp_LH_P2_0¹⁵) && (_lh_equalp_LH_P2_1¹⁴ == _lh_equalp_LH_P2_1¹⁵)) | _  => error⁰}: 3185 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]: 2878
//│ case _lh_equalp_arg1⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁴ _lh_equalp_LH_P2_1¹⁴ => case _lh_equalp_arg2⁷ of {LH_P2 _lh_equalp_LH_P2_0¹⁵ _lh_equalp_LH_P2_1¹⁵ => ((_lh_equalp_LH_P2_0¹⁴ == _lh_equalp_LH_P2_0¹⁵) && (_lh_equalp_LH_P2_1¹⁴ == _lh_equalp_LH_P2_1¹⁵)) | _  => error⁰} | _  => error⁰}: 3187 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2874
//│ case _lh_point_colour_arg1⁸ of {LH_P2 _lh_point_colour_LH_P2_0⁸ _lh_point_colour_LH_P2_1⁸ => check_radius_₂_₀(np_₂_₀(_lh_point_colour_LH_P2_0⁸), nq_₂_₀(_lh_point_colour_LH_P2_1⁸), 0, 0.0, 0.0) | _  => error⁰}: 3331 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵]: 2685
//│ case _lh_point_colour_arg1⁹ of {LH_P2 _lh_point_colour_LH_P2_0⁹ _lh_point_colour_LH_P2_1⁹ => check_radius_₃_₀(np_₃_₀(_lh_point_colour_LH_P2_0⁹), nq_₃_₀(_lh_point_colour_LH_P2_1⁹), 0, 0.0, 0.0) | _  => error⁰}: 3435 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁵]: 2690
//│ case _lh_point_colour_arg1¹⁰ of {LH_P2 _lh_point_colour_LH_P2_0¹⁰ _lh_point_colour_LH_P2_1¹⁰ => check_radius_₀_₀(np_₀_₀(_lh_point_colour_LH_P2_0¹⁰), nq_₀_₀(_lh_point_colour_LH_P2_1¹⁰), 0, 0.0, 0.0) | _  => error⁰}: 3464 --->
//│ 	[LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴]: 2675
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testMandel2_nofib_₀_₀(primId⁰([LH_C 5 [LH_N]]))
//│ def testMandel2_nofib_₀_₀(_lh_testMandel2_nofib_arg1²) = 
//│ 	let size'² = max_₀_₀(length_₀_₀(_lh_testMandel2_nofib_arg1²), size_₁₂_₀)
//│ 	in let tree² = build_tree_₀_₀([LH_P2 0 0], [LH_P2 size'² div⁰(size'², 2)])
//│ 	in finite_₀_₀(tree²)
//│ 	where
//│ 	def build_tree_₀_₀(_lh_build_tree_arg1², _lh_build_tree_arg2²) = 
//│ 		case _lh_build_tree_arg1² of {
//│ 			LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1² => case _lh_build_tree_arg2² of {
//│ 				LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³ => 
//│ 					let rec_col² = check_perim_₀_₀([LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²], [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³])
//│ 					in let split² = if ((_lh_build_tree_LH_P2_0³ - _lh_build_tree_LH_P2_0²) >= (_lh_build_tree_LH_P2_1³ - _lh_build_tree_LH_P2_1²)) then [LH_C 'N' [LH_C 'S' [LH_N]]] else [LH_C 'E' [LH_C 'W' [LH_N]]]
//│ 					in let split_x² = div⁰((_lh_build_tree_LH_P2_0³ + _lh_build_tree_LH_P2_0²), 2)
//│ 					in let split_y² = div⁰((_lh_build_tree_LH_P2_1³ + _lh_build_tree_LH_P2_1²), 2)
//│ 					in let nsp1² = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ 					in let nsp2² = [LH_P2 split_x² _lh_build_tree_LH_P2_1³]
//│ 					in let nsp3² = [LH_P2 (split_x² + 1) _lh_build_tree_LH_P2_1²]
//│ 					in let nsp4² = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ 					in let ewp1² = [LH_P2 _lh_build_tree_LH_P2_0² _lh_build_tree_LH_P2_1²]
//│ 					in let ewp2² = [LH_P2 _lh_build_tree_LH_P2_0³ split_y²]
//│ 					in let ewp3² = [LH_P2 _lh_build_tree_LH_P2_0² (split_y² + 1)]
//│ 					in let ewp4² = [LH_P2 _lh_build_tree_LH_P2_0³ _lh_build_tree_LH_P2_1³]
//│ 					in if (rec_col² /= (0 - 1)) then [Leaf rec_col²] else if strEq_₀_₀(split², [LH_C 'N' [LH_C 'S' [LH_N]]]) then [NS build_tree_₀_₀(nsp1², nsp2²) build_tree_₀_₀(nsp3², nsp4²)] else [EW build_tree_₀_₀(ewp1², ewp2²) build_tree_₀_₀(ewp3², ewp4²)]
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		where
//│ 		def check_perim_₀_₀(_lh_check_perim_arg1², _lh_check_perim_arg2²) = 
//│ 			case _lh_check_perim_arg1² of {
//│ 				LH_P2 _lh_check_perim_LH_P2_0⁴ _lh_check_perim_LH_P2_1⁴ => case _lh_check_perim_arg2² of {
//│ 					LH_P2 _lh_check_perim_LH_P2_0⁵ _lh_check_perim_LH_P2_1⁵ => 
//│ 						let col1² = point_colour_₀_₀(
//│ 							let _lh_point_colour_LH_P2_1¹² = _lh_check_perim_LH_P2_1⁴
//│ 							in let _lh_point_colour_LH_P2_0¹² = _lh_check_perim_LH_P2_0⁴
//│ 							in (fun _lh_dummy⁰ -> check_radius_₀_₀(np_₀_₀(_lh_point_colour_LH_P2_0¹²), nq_₀_₀(_lh_point_colour_LH_P2_1¹²), 0, 0.0, 0.0)))
//│ 						in let col2² = point_colour_₁_₀(
//│ 							let _lh_point_colour_LH_P2_1¹³ = _lh_check_perim_LH_P2_1⁴
//│ 							in let _lh_point_colour_LH_P2_0¹³ = _lh_check_perim_LH_P2_0⁵
//│ 							in (fun _lh_dummy¹ -> check_radius_₁_₀(np_₁_₀(_lh_point_colour_LH_P2_0¹³), nq_₁_₀(_lh_point_colour_LH_P2_1¹³), 0, 0.0, 0.0)))
//│ 						in let col3² = point_colour_₂_₀(
//│ 							let _lh_point_colour_LH_P2_1¹⁴ = _lh_check_perim_LH_P2_1⁵
//│ 							in let _lh_point_colour_LH_P2_0¹⁴ = _lh_check_perim_LH_P2_0⁵
//│ 							in (fun _lh_dummy² -> check_radius_₂_₀(np_₂_₀(_lh_point_colour_LH_P2_0¹⁴), nq_₂_₀(_lh_point_colour_LH_P2_1¹⁴), 0, 0.0, 0.0)))
//│ 						in let col4² = point_colour_₃_₀(
//│ 							let _lh_point_colour_LH_P2_1¹⁵ = _lh_check_perim_LH_P2_1⁵
//│ 							in let _lh_point_colour_LH_P2_0¹⁵ = _lh_check_perim_LH_P2_0⁴
//│ 							in (fun _lh_dummy³ -> check_radius_₃_₀(np_₃_₀(_lh_point_colour_LH_P2_0¹⁵), nq_₃_₀(_lh_point_colour_LH_P2_1¹⁵), 0, 0.0, 0.0)))
//│ 						in let corners_diff² = if (col1² == col2²) then if (col1² == col3²) then if (col1² == col4²) then [False] else [True] else [True] else [True]
//│ 						in let check_line² = (fun xcyc² -> (fun xdyd² -> 
//│ 							let _lh_matchIdent⁸ = xcyc²
//│ 							in case _lh_matchIdent⁸ of {
//│ 								LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶ => 
//│ 									let _lh_matchIdent⁹ = xdyd²
//│ 									in case _lh_matchIdent⁹ of {
//│ 										LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷ => 
//│ 											let finished² = if equalp_₀_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], right_₀_₀) then (_lh_check_perim_LH_P2_0⁶ >= _lh_check_perim_LH_P2_0⁵) else if equalp_₁_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], down_₀_₀) then (_lh_check_perim_LH_P2_1⁶ <= _lh_check_perim_LH_P2_1⁵) else if equalp_₂_₀([LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷], left_₀_₀) then (_lh_check_perim_LH_P2_0⁶ <= _lh_check_perim_LH_P2_0⁴) else (_lh_check_perim_LH_P2_1⁶ >= _lh_check_perim_LH_P2_1⁴)
//│ 											in if finished² then [True] else if (point_colour_₄_₀([LH_P2 _lh_check_perim_LH_P2_0⁶ _lh_check_perim_LH_P2_1⁶]) /= col1²) then [False] else check_line²([LH_P2 (_lh_check_perim_LH_P2_0⁶ + _lh_check_perim_LH_P2_0⁷) (_lh_check_perim_LH_P2_1⁶ + _lh_check_perim_LH_P2_1⁷)], [LH_P2 _lh_check_perim_LH_P2_0⁷ _lh_check_perim_LH_P2_1⁷])
//│ 										| _  => error⁰}
//│ 								| _  => error⁰}))
//│ 						in let check_sides² = if check_line²([LH_P2 (_lh_check_perim_LH_P2_0⁴ + 1) _lh_check_perim_LH_P2_1⁴], right_₁_₀) then if check_line²([LH_P2 _lh_check_perim_LH_P2_0⁵ (_lh_check_perim_LH_P2_1⁴ + 1)], down_₁_₀) then if check_line²([LH_P2 (_lh_check_perim_LH_P2_0⁵ - 1) _lh_check_perim_LH_P2_1⁵], left_₁_₀) then if check_line²([LH_P2 _lh_check_perim_LH_P2_0⁴ (_lh_check_perim_LH_P2_1⁵ - 1)], up_₀_₀) then col1² else (0 - 1) else (0 - 1) else (0 - 1) else (0 - 1)
//│ 						in if equalp_₃_₀(
//│ 							let _lh_equalp_LH_P2_1²² = _lh_check_perim_LH_P2_1⁴
//│ 							in let _lh_equalp_LH_P2_0²² = _lh_check_perim_LH_P2_0⁴
//│ 							in (fun _lh_equalp_arg2¹¹ -> _lh_equalp_arg2¹¹(_lh_equalp_LH_P2_0²², _lh_equalp_LH_P2_1²²)), 
//│ 							let _lh_equalp_LH_P2_1²³ = _lh_check_perim_LH_P2_1⁵
//│ 							in let _lh_equalp_LH_P2_0²³ = _lh_check_perim_LH_P2_0⁵
//│ 							in (fun _lh_equalp_LH_P2_0²⁴ -> (fun _lh_equalp_LH_P2_1²⁴ -> ((_lh_equalp_LH_P2_0²⁴ == _lh_equalp_LH_P2_0²³) && (_lh_equalp_LH_P2_1²⁴ == _lh_equalp_LH_P2_1²³))))) then point_colour_₅_₀(
//│ 							let _lh_point_colour_LH_P2_1¹⁶ = _lh_check_perim_LH_P2_1⁴
//│ 							in let _lh_point_colour_LH_P2_0¹⁶ = _lh_check_perim_LH_P2_0⁴
//│ 							in (fun _lh_dummy⁴ -> check_radius_₅_₀(np_₅_₀(_lh_point_colour_LH_P2_0¹⁶), nq_₅_₀(_lh_point_colour_LH_P2_1¹⁶), 0, 0.0, 0.0))) else if corners_diff² then (0 - 1) else check_sides²
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def down_₀_₀ = 
//│ 				let _lh_equalp_LH_P2_1¹⁸ = 1
//│ 				in let _lh_equalp_LH_P2_0¹⁸ = 0
//│ 				in (fun _lh_equalp_LH_P2_0¹⁹ -> (fun _lh_equalp_LH_P2_1¹⁹ -> ((_lh_equalp_LH_P2_0¹⁹ == _lh_equalp_LH_P2_0¹⁸) && (_lh_equalp_LH_P2_1¹⁹ == _lh_equalp_LH_P2_1¹⁸))))
//│ 			def down_₁_₀ = 
//│ 				[LH_P2 0 1]
//│ 			def equalp_₀_₀(_lh_equalp_arg1⁹, _lh_equalp_arg2⁹) = 
//│ 				case _lh_equalp_arg1⁹ of {
//│ 					LH_P2 _lh_equalp_LH_P2_0¹² _lh_equalp_LH_P2_1¹² => _lh_equalp_arg2⁹(_lh_equalp_LH_P2_0¹², _lh_equalp_LH_P2_1¹²)
//│ 					| _  => error⁰}
//│ 			def equalp_₁_₀(_lh_equalp_arg1¹¹, _lh_equalp_arg2¹²) = 
//│ 				case _lh_equalp_arg1¹¹ of {
//│ 					LH_P2 _lh_equalp_LH_P2_0¹⁰ _lh_equalp_LH_P2_1¹⁰ => _lh_equalp_arg2¹²(_lh_equalp_LH_P2_0¹⁰, _lh_equalp_LH_P2_1¹⁰)
//│ 					| _  => error⁰}
//│ 			def equalp_₂_₀(_lh_equalp_arg1⁸, _lh_equalp_arg2⁸) = 
//│ 				case _lh_equalp_arg1⁸ of {
//│ 					LH_P2 _lh_equalp_LH_P2_0⁸ _lh_equalp_LH_P2_1⁸ => _lh_equalp_arg2⁸(_lh_equalp_LH_P2_0⁸, _lh_equalp_LH_P2_1⁸)
//│ 					| _  => error⁰}
//│ 			def equalp_₃_₀(_lh_equalp_arg1¹⁰, _lh_equalp_arg2¹⁰) = 
//│ 				_lh_equalp_arg1¹⁰(_lh_equalp_arg2¹⁰)
//│ 			def left_₀_₀ = 
//│ 				let _lh_equalp_LH_P2_1¹⁶ = 0
//│ 				in let _lh_equalp_LH_P2_0¹⁶ = (0 - 1)
//│ 				in (fun _lh_equalp_LH_P2_0¹⁷ -> (fun _lh_equalp_LH_P2_1¹⁷ -> ((_lh_equalp_LH_P2_0¹⁷ == _lh_equalp_LH_P2_0¹⁶) && (_lh_equalp_LH_P2_1¹⁷ == _lh_equalp_LH_P2_1¹⁶))))
//│ 			def left_₁_₀ = 
//│ 				[LH_P2 (0 - 1) 0]
//│ 			def point_colour_₀_₀(_lh_point_colour_arg1¹⁵) = 
//│ 				_lh_point_colour_arg1¹⁵(99)
//│ 				where
//│ 				def check_radius_₀_₀(_lh_check_radius_arg1¹², _lh_check_radius_arg2¹², _lh_check_radius_arg3¹², _lh_check_radius_arg4¹², _lh_check_radius_arg5¹²) = 
//│ 					let xn¹² = new_x_₀_₀(_lh_check_radius_arg4¹², _lh_check_radius_arg5¹², _lh_check_radius_arg1¹²)
//│ 					in let yn¹² = new_y_₀_₀(_lh_check_radius_arg4¹², _lh_check_radius_arg5¹², _lh_check_radius_arg2¹²)
//│ 					in let r¹² = radius_₀_₀(xn¹², yn¹²)
//│ 					in let kp¹² = (_lh_check_radius_arg3¹² + 1)
//│ 					in if (kp¹² == num_cols_₀_₀) then 0 else if polyGt⁰(r¹², float_of_int⁰(m_₀_₀)) then kp¹² else check_radius_₀_₀(_lh_check_radius_arg1¹², _lh_check_radius_arg2¹², kp¹², xn¹², yn¹²)
//│ 					where
//│ 					def m_₀_₀ = 
//│ 						20
//│ 					def new_x_₀_₀(_lh_new_x_arg1¹³, _lh_new_x_arg2¹³, _lh_new_x_arg3¹³) = 
//│ 						(((_lh_new_x_arg1¹³ *. _lh_new_x_arg1¹³) -. (_lh_new_x_arg2¹³ *. _lh_new_x_arg2¹³)) +. _lh_new_x_arg3¹³)
//│ 					def new_y_₀_₀(_lh_new_y_arg1¹³, _lh_new_y_arg2¹³, _lh_new_y_arg3¹³) = 
//│ 						(((2.0 *. _lh_new_y_arg1¹³) *. _lh_new_y_arg2¹³) +. _lh_new_y_arg3¹³)
//│ 					def num_cols_₀_₀ = 
//│ 						26
//│ 					def radius_₀_₀(_lh_radius_arg1¹⁶, _lh_radius_arg2¹⁶) = 
//│ 						((_lh_radius_arg1¹⁶ *. _lh_radius_arg1¹⁶) +. (_lh_radius_arg2¹⁶ *. _lh_radius_arg2¹⁶))
//│ 				def np_₀_₀(_lh_np_arg1¹⁷) = 
//│ 					(pmn_₁_₀ +. (float_of_int⁰(_lh_np_arg1¹⁷) *. delta_p_₀_₀))
//│ 					where
//│ 					def delta_p_₀_₀ = 
//│ 						((pmx_₀_₀ -. pmn_₀_₀) /. float_of_int⁰((size_₀_₀ - 1)))
//│ 						where
//│ 						def pmn_₀_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₀_₀ = 
//│ 							0.75
//│ 						def size_₀_₀ = 
//│ 							200
//│ 					def pmn_₁_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₀_₀(_lh_nq_arg1¹⁶) = 
//│ 					(qmn_₁_₀ +. (float_of_int⁰(_lh_nq_arg1¹⁶) *. delta_q_₀_₀))
//│ 					where
//│ 					def delta_q_₀_₀ = 
//│ 						((qmx_₀_₀ -. qmn_₀_₀) /. float_of_int⁰((size_₁_₀ - 1)))
//│ 						where
//│ 						def qmn_₀_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₀_₀ = 
//│ 							1.5
//│ 						def size_₁_₀ = 
//│ 							200
//│ 					def qmn_₁_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₁_₀(_lh_point_colour_arg1¹⁴) = 
//│ 				_lh_point_colour_arg1¹⁴(99)
//│ 				where
//│ 				def check_radius_₁_₀(_lh_check_radius_arg1¹⁴, _lh_check_radius_arg2¹⁴, _lh_check_radius_arg3¹⁴, _lh_check_radius_arg4¹⁴, _lh_check_radius_arg5¹⁴) = 
//│ 					let xn¹⁴ = new_x_₁_₀(_lh_check_radius_arg4¹⁴, _lh_check_radius_arg5¹⁴, _lh_check_radius_arg1¹⁴)
//│ 					in let yn¹⁴ = new_y_₁_₀(_lh_check_radius_arg4¹⁴, _lh_check_radius_arg5¹⁴, _lh_check_radius_arg2¹⁴)
//│ 					in let r¹⁴ = radius_₁_₀(xn¹⁴, yn¹⁴)
//│ 					in let kp¹⁴ = (_lh_check_radius_arg3¹⁴ + 1)
//│ 					in if (kp¹⁴ == num_cols_₁_₀) then 0 else if polyGt⁰(r¹⁴, float_of_int⁰(m_₁_₀)) then kp¹⁴ else check_radius_₁_₀(_lh_check_radius_arg1¹⁴, _lh_check_radius_arg2¹⁴, kp¹⁴, xn¹⁴, yn¹⁴)
//│ 					where
//│ 					def m_₁_₀ = 
//│ 						20
//│ 					def new_x_₁_₀(_lh_new_x_arg1¹⁶, _lh_new_x_arg2¹⁶, _lh_new_x_arg3¹⁶) = 
//│ 						(((_lh_new_x_arg1¹⁶ *. _lh_new_x_arg1¹⁶) -. (_lh_new_x_arg2¹⁶ *. _lh_new_x_arg2¹⁶)) +. _lh_new_x_arg3¹⁶)
//│ 					def new_y_₁_₀(_lh_new_y_arg1¹⁴, _lh_new_y_arg2¹⁴, _lh_new_y_arg3¹⁴) = 
//│ 						(((2.0 *. _lh_new_y_arg1¹⁴) *. _lh_new_y_arg2¹⁴) +. _lh_new_y_arg3¹⁴)
//│ 					def num_cols_₁_₀ = 
//│ 						26
//│ 					def radius_₁_₀(_lh_radius_arg1¹², _lh_radius_arg2¹²) = 
//│ 						((_lh_radius_arg1¹² *. _lh_radius_arg1¹²) +. (_lh_radius_arg2¹² *. _lh_radius_arg2¹²))
//│ 				def np_₁_₀(_lh_np_arg1¹⁵) = 
//│ 					(pmn_₃_₀ +. (float_of_int⁰(_lh_np_arg1¹⁵) *. delta_p_₁_₀))
//│ 					where
//│ 					def delta_p_₁_₀ = 
//│ 						((pmx_₁_₀ -. pmn_₂_₀) /. float_of_int⁰((size_₂_₀ - 1)))
//│ 						where
//│ 						def pmn_₂_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₁_₀ = 
//│ 							0.75
//│ 						def size_₂_₀ = 
//│ 							200
//│ 					def pmn_₃_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₁_₀(_lh_nq_arg1¹³) = 
//│ 					(qmn_₃_₀ +. (float_of_int⁰(_lh_nq_arg1¹³) *. delta_q_₁_₀))
//│ 					where
//│ 					def delta_q_₁_₀ = 
//│ 						((qmx_₁_₀ -. qmn_₂_₀) /. float_of_int⁰((size_₃_₀ - 1)))
//│ 						where
//│ 						def qmn_₂_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₁_₀ = 
//│ 							1.5
//│ 						def size_₃_₀ = 
//│ 							200
//│ 					def qmn_₃_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₂_₀(_lh_point_colour_arg1¹³) = 
//│ 				_lh_point_colour_arg1¹³(99)
//│ 				where
//│ 				def check_radius_₂_₀(_lh_check_radius_arg1¹⁷, _lh_check_radius_arg2¹⁷, _lh_check_radius_arg3¹⁷, _lh_check_radius_arg4¹⁷, _lh_check_radius_arg5¹⁷) = 
//│ 					let xn¹⁷ = new_x_₂_₀(_lh_check_radius_arg4¹⁷, _lh_check_radius_arg5¹⁷, _lh_check_radius_arg1¹⁷)
//│ 					in let yn¹⁷ = new_y_₂_₀(_lh_check_radius_arg4¹⁷, _lh_check_radius_arg5¹⁷, _lh_check_radius_arg2¹⁷)
//│ 					in let r¹⁷ = radius_₂_₀(xn¹⁷, yn¹⁷)
//│ 					in let kp¹⁷ = (_lh_check_radius_arg3¹⁷ + 1)
//│ 					in if (kp¹⁷ == num_cols_₂_₀) then 0 else if polyGt⁰(r¹⁷, float_of_int⁰(m_₂_₀)) then kp¹⁷ else check_radius_₂_₀(_lh_check_radius_arg1¹⁷, _lh_check_radius_arg2¹⁷, kp¹⁷, xn¹⁷, yn¹⁷)
//│ 					where
//│ 					def m_₂_₀ = 
//│ 						20
//│ 					def new_x_₂_₀(_lh_new_x_arg1¹⁴, _lh_new_x_arg2¹⁴, _lh_new_x_arg3¹⁴) = 
//│ 						(((_lh_new_x_arg1¹⁴ *. _lh_new_x_arg1¹⁴) -. (_lh_new_x_arg2¹⁴ *. _lh_new_x_arg2¹⁴)) +. _lh_new_x_arg3¹⁴)
//│ 					def new_y_₂_₀(_lh_new_y_arg1¹⁷, _lh_new_y_arg2¹⁷, _lh_new_y_arg3¹⁷) = 
//│ 						(((2.0 *. _lh_new_y_arg1¹⁷) *. _lh_new_y_arg2¹⁷) +. _lh_new_y_arg3¹⁷)
//│ 					def num_cols_₂_₀ = 
//│ 						26
//│ 					def radius_₂_₀(_lh_radius_arg1¹³, _lh_radius_arg2¹³) = 
//│ 						((_lh_radius_arg1¹³ *. _lh_radius_arg1¹³) +. (_lh_radius_arg2¹³ *. _lh_radius_arg2¹³))
//│ 				def np_₂_₀(_lh_np_arg1¹⁶) = 
//│ 					(pmn_₅_₀ +. (float_of_int⁰(_lh_np_arg1¹⁶) *. delta_p_₂_₀))
//│ 					where
//│ 					def delta_p_₂_₀ = 
//│ 						((pmx_₂_₀ -. pmn_₄_₀) /. float_of_int⁰((size_₄_₀ - 1)))
//│ 						where
//│ 						def pmn_₄_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₂_₀ = 
//│ 							0.75
//│ 						def size_₄_₀ = 
//│ 							200
//│ 					def pmn_₅_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₂_₀(_lh_nq_arg1¹²) = 
//│ 					(qmn_₅_₀ +. (float_of_int⁰(_lh_nq_arg1¹²) *. delta_q_₂_₀))
//│ 					where
//│ 					def delta_q_₂_₀ = 
//│ 						((qmx_₂_₀ -. qmn_₄_₀) /. float_of_int⁰((size_₅_₀ - 1)))
//│ 						where
//│ 						def qmn_₄_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₂_₀ = 
//│ 							1.5
//│ 						def size_₅_₀ = 
//│ 							200
//│ 					def qmn_₅_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₃_₀(_lh_point_colour_arg1¹⁶) = 
//│ 				_lh_point_colour_arg1¹⁶(99)
//│ 				where
//│ 				def check_radius_₃_₀(_lh_check_radius_arg1¹⁵, _lh_check_radius_arg2¹⁵, _lh_check_radius_arg3¹⁵, _lh_check_radius_arg4¹⁵, _lh_check_radius_arg5¹⁵) = 
//│ 					let xn¹⁵ = new_x_₃_₀(_lh_check_radius_arg4¹⁵, _lh_check_radius_arg5¹⁵, _lh_check_radius_arg1¹⁵)
//│ 					in let yn¹⁵ = new_y_₃_₀(_lh_check_radius_arg4¹⁵, _lh_check_radius_arg5¹⁵, _lh_check_radius_arg2¹⁵)
//│ 					in let r¹⁵ = radius_₃_₀(xn¹⁵, yn¹⁵)
//│ 					in let kp¹⁵ = (_lh_check_radius_arg3¹⁵ + 1)
//│ 					in if (kp¹⁵ == num_cols_₃_₀) then 0 else if polyGt⁰(r¹⁵, float_of_int⁰(m_₃_₀)) then kp¹⁵ else check_radius_₃_₀(_lh_check_radius_arg1¹⁵, _lh_check_radius_arg2¹⁵, kp¹⁵, xn¹⁵, yn¹⁵)
//│ 					where
//│ 					def m_₃_₀ = 
//│ 						20
//│ 					def new_x_₃_₀(_lh_new_x_arg1¹², _lh_new_x_arg2¹², _lh_new_x_arg3¹²) = 
//│ 						(((_lh_new_x_arg1¹² *. _lh_new_x_arg1¹²) -. (_lh_new_x_arg2¹² *. _lh_new_x_arg2¹²)) +. _lh_new_x_arg3¹²)
//│ 					def new_y_₃_₀(_lh_new_y_arg1¹², _lh_new_y_arg2¹², _lh_new_y_arg3¹²) = 
//│ 						(((2.0 *. _lh_new_y_arg1¹²) *. _lh_new_y_arg2¹²) +. _lh_new_y_arg3¹²)
//│ 					def num_cols_₃_₀ = 
//│ 						26
//│ 					def radius_₃_₀(_lh_radius_arg1¹⁷, _lh_radius_arg2¹⁷) = 
//│ 						((_lh_radius_arg1¹⁷ *. _lh_radius_arg1¹⁷) +. (_lh_radius_arg2¹⁷ *. _lh_radius_arg2¹⁷))
//│ 				def np_₃_₀(_lh_np_arg1¹²) = 
//│ 					(pmn_₇_₀ +. (float_of_int⁰(_lh_np_arg1¹²) *. delta_p_₃_₀))
//│ 					where
//│ 					def delta_p_₃_₀ = 
//│ 						((pmx_₃_₀ -. pmn_₆_₀) /. float_of_int⁰((size_₆_₀ - 1)))
//│ 						where
//│ 						def pmn_₆_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₃_₀ = 
//│ 							0.75
//│ 						def size_₆_₀ = 
//│ 							200
//│ 					def pmn_₇_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₃_₀(_lh_nq_arg1¹⁴) = 
//│ 					(qmn_₇_₀ +. (float_of_int⁰(_lh_nq_arg1¹⁴) *. delta_q_₃_₀))
//│ 					where
//│ 					def delta_q_₃_₀ = 
//│ 						((qmx_₃_₀ -. qmn_₆_₀) /. float_of_int⁰((size_₇_₀ - 1)))
//│ 						where
//│ 						def qmn_₆_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₃_₀ = 
//│ 							1.5
//│ 						def size_₇_₀ = 
//│ 							200
//│ 					def qmn_₇_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₄_₀(_lh_point_colour_arg1¹²) = 
//│ 				case _lh_point_colour_arg1¹² of {
//│ 					LH_P2 _lh_point_colour_LH_P2_0¹¹ _lh_point_colour_LH_P2_1¹¹ => check_radius_₄_₀(np_₄_₀(_lh_point_colour_LH_P2_0¹¹), nq_₄_₀(_lh_point_colour_LH_P2_1¹¹), 0, 0.0, 0.0)
//│ 					| _  => error⁰}
//│ 				where
//│ 				def check_radius_₄_₀(_lh_check_radius_arg1¹³, _lh_check_radius_arg2¹³, _lh_check_radius_arg3¹³, _lh_check_radius_arg4¹³, _lh_check_radius_arg5¹³) = 
//│ 					let xn¹³ = new_x_₄_₀(_lh_check_radius_arg4¹³, _lh_check_radius_arg5¹³, _lh_check_radius_arg1¹³)
//│ 					in let yn¹³ = new_y_₄_₀(_lh_check_radius_arg4¹³, _lh_check_radius_arg5¹³, _lh_check_radius_arg2¹³)
//│ 					in let r¹³ = radius_₄_₀(xn¹³, yn¹³)
//│ 					in let kp¹³ = (_lh_check_radius_arg3¹³ + 1)
//│ 					in if (kp¹³ == num_cols_₄_₀) then 0 else if polyGt⁰(r¹³, float_of_int⁰(m_₄_₀)) then kp¹³ else check_radius_₄_₀(_lh_check_radius_arg1¹³, _lh_check_radius_arg2¹³, kp¹³, xn¹³, yn¹³)
//│ 					where
//│ 					def m_₄_₀ = 
//│ 						20
//│ 					def new_x_₄_₀(_lh_new_x_arg1¹⁵, _lh_new_x_arg2¹⁵, _lh_new_x_arg3¹⁵) = 
//│ 						(((_lh_new_x_arg1¹⁵ *. _lh_new_x_arg1¹⁵) -. (_lh_new_x_arg2¹⁵ *. _lh_new_x_arg2¹⁵)) +. _lh_new_x_arg3¹⁵)
//│ 					def new_y_₄_₀(_lh_new_y_arg1¹⁶, _lh_new_y_arg2¹⁶, _lh_new_y_arg3¹⁶) = 
//│ 						(((2.0 *. _lh_new_y_arg1¹⁶) *. _lh_new_y_arg2¹⁶) +. _lh_new_y_arg3¹⁶)
//│ 					def num_cols_₄_₀ = 
//│ 						26
//│ 					def radius_₄_₀(_lh_radius_arg1¹⁵, _lh_radius_arg2¹⁵) = 
//│ 						((_lh_radius_arg1¹⁵ *. _lh_radius_arg1¹⁵) +. (_lh_radius_arg2¹⁵ *. _lh_radius_arg2¹⁵))
//│ 				def np_₄_₀(_lh_np_arg1¹³) = 
//│ 					(pmn_₉_₀ +. (float_of_int⁰(_lh_np_arg1¹³) *. delta_p_₄_₀))
//│ 					where
//│ 					def delta_p_₄_₀ = 
//│ 						((pmx_₄_₀ -. pmn_₈_₀) /. float_of_int⁰((size_₈_₀ - 1)))
//│ 						where
//│ 						def pmn_₈_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₄_₀ = 
//│ 							0.75
//│ 						def size_₈_₀ = 
//│ 							200
//│ 					def pmn_₉_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₄_₀(_lh_nq_arg1¹⁵) = 
//│ 					(qmn_₉_₀ +. (float_of_int⁰(_lh_nq_arg1¹⁵) *. delta_q_₄_₀))
//│ 					where
//│ 					def delta_q_₄_₀ = 
//│ 						((qmx_₄_₀ -. qmn_₈_₀) /. float_of_int⁰((size_₉_₀ - 1)))
//│ 						where
//│ 						def qmn_₈_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₄_₀ = 
//│ 							1.5
//│ 						def size_₉_₀ = 
//│ 							200
//│ 					def qmn_₉_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def point_colour_₅_₀(_lh_point_colour_arg1¹⁷) = 
//│ 				_lh_point_colour_arg1¹⁷(99)
//│ 				where
//│ 				def check_radius_₅_₀(_lh_check_radius_arg1¹⁶, _lh_check_radius_arg2¹⁶, _lh_check_radius_arg3¹⁶, _lh_check_radius_arg4¹⁶, _lh_check_radius_arg5¹⁶) = 
//│ 					let xn¹⁶ = new_x_₅_₀(_lh_check_radius_arg4¹⁶, _lh_check_radius_arg5¹⁶, _lh_check_radius_arg1¹⁶)
//│ 					in let yn¹⁶ = new_y_₅_₀(_lh_check_radius_arg4¹⁶, _lh_check_radius_arg5¹⁶, _lh_check_radius_arg2¹⁶)
//│ 					in let r¹⁶ = radius_₅_₀(xn¹⁶, yn¹⁶)
//│ 					in let kp¹⁶ = (_lh_check_radius_arg3¹⁶ + 1)
//│ 					in if (kp¹⁶ == num_cols_₅_₀) then 0 else if polyGt⁰(r¹⁶, float_of_int⁰(m_₅_₀)) then kp¹⁶ else check_radius_₅_₀(_lh_check_radius_arg1¹⁶, _lh_check_radius_arg2¹⁶, kp¹⁶, xn¹⁶, yn¹⁶)
//│ 					where
//│ 					def m_₅_₀ = 
//│ 						20
//│ 					def new_x_₅_₀(_lh_new_x_arg1¹⁷, _lh_new_x_arg2¹⁷, _lh_new_x_arg3¹⁷) = 
//│ 						(((_lh_new_x_arg1¹⁷ *. _lh_new_x_arg1¹⁷) -. (_lh_new_x_arg2¹⁷ *. _lh_new_x_arg2¹⁷)) +. _lh_new_x_arg3¹⁷)
//│ 					def new_y_₅_₀(_lh_new_y_arg1¹⁵, _lh_new_y_arg2¹⁵, _lh_new_y_arg3¹⁵) = 
//│ 						(((2.0 *. _lh_new_y_arg1¹⁵) *. _lh_new_y_arg2¹⁵) +. _lh_new_y_arg3¹⁵)
//│ 					def num_cols_₅_₀ = 
//│ 						26
//│ 					def radius_₅_₀(_lh_radius_arg1¹⁴, _lh_radius_arg2¹⁴) = 
//│ 						((_lh_radius_arg1¹⁴ *. _lh_radius_arg1¹⁴) +. (_lh_radius_arg2¹⁴ *. _lh_radius_arg2¹⁴))
//│ 				def np_₅_₀(_lh_np_arg1¹⁴) = 
//│ 					(pmn_₁₁_₀ +. (float_of_int⁰(_lh_np_arg1¹⁴) *. delta_p_₅_₀))
//│ 					where
//│ 					def delta_p_₅_₀ = 
//│ 						((pmx_₅_₀ -. pmn_₁₀_₀) /. float_of_int⁰((size_₁₀_₀ - 1)))
//│ 						where
//│ 						def pmn_₁₀_₀ = 
//│ 							(0.0 -. 2.25)
//│ 						def pmx_₅_₀ = 
//│ 							0.75
//│ 						def size_₁₀_₀ = 
//│ 							200
//│ 					def pmn_₁₁_₀ = 
//│ 						(0.0 -. 2.25)
//│ 				def nq_₅_₀(_lh_nq_arg1¹⁷) = 
//│ 					(qmn_₁₁_₀ +. (float_of_int⁰(_lh_nq_arg1¹⁷) *. delta_q_₅_₀))
//│ 					where
//│ 					def delta_q_₅_₀ = 
//│ 						((qmx_₅_₀ -. qmn_₁₀_₀) /. float_of_int⁰((size_₁₁_₀ - 1)))
//│ 						where
//│ 						def qmn_₁₀_₀ = 
//│ 							(0.0 -. 1.5)
//│ 						def qmx_₅_₀ = 
//│ 							1.5
//│ 						def size_₁₁_₀ = 
//│ 							200
//│ 					def qmn_₁₁_₀ = 
//│ 						(0.0 -. 1.5)
//│ 			def right_₀_₀ = 
//│ 				let _lh_equalp_LH_P2_1²⁰ = 0
//│ 				in let _lh_equalp_LH_P2_0²⁰ = 1
//│ 				in (fun _lh_equalp_LH_P2_0²¹ -> (fun _lh_equalp_LH_P2_1²¹ -> ((_lh_equalp_LH_P2_0²¹ == _lh_equalp_LH_P2_0²⁰) && (_lh_equalp_LH_P2_1²¹ == _lh_equalp_LH_P2_1²⁰))))
//│ 			def right_₁_₀ = 
//│ 				[LH_P2 1 0]
//│ 			def up_₀_₀ = 
//│ 				[LH_P2 0 (0 - 1)]
//│ 		def strEq_₀_₀(_lh_strEq_arg1², _lh_strEq_arg2²) = 
//│ 			case _lh_strEq_arg1² of {
//│ 				LH_C _lh_strEq_LH_C_0³ _lh_strEq_LH_C_1³ => 
//│ 					let _lh_matchIdent¹⁰ = _lh_strEq_arg2²
//│ 					in case _lh_matchIdent¹⁰ of {
//│ 						LH_C _lh_strEq_LH_C_0⁴ _lh_strEq_LH_C_1⁴ => if polyEq⁰(_lh_strEq_LH_C_0³, _lh_strEq_LH_C_0⁴) then strEq_₀_₀(_lh_strEq_LH_C_1³, _lh_strEq_LH_C_1⁴) else [False]
//│ 						| LH_N  => [False]
//│ 						| _  => error⁰}
//│ 				| LH_N  => 
//│ 					let _lh_matchIdent¹¹ = _lh_strEq_arg2²
//│ 					in case _lh_matchIdent¹¹ of {
//│ 						LH_C _lh_strEq_LH_C_0⁵ _lh_strEq_LH_C_1⁵ => [False]
//│ 						| LH_N  => [True]
//│ 						| _  => error⁰}
//│ 				| _  => error⁰}
//│ 	def finite_₀_₀(_lh_finite_arg1²) = 
//│ 		case _lh_finite_arg1² of {
//│ 			Leaf _lh_finite_Leaf_0¹ => (_lh_finite_Leaf_0¹ == _lh_finite_Leaf_0¹)
//│ 			| NS _lh_finite_NS_0¹ _lh_finite_NS_1¹ => (finite_₀_₀(_lh_finite_NS_0¹) && finite_₀_₀(_lh_finite_NS_1¹))
//│ 			| EW _lh_finite_EW_0¹ _lh_finite_EW_1¹ => (finite_₀_₀(_lh_finite_EW_0¹) && finite_₀_₀(_lh_finite_EW_1¹))
//│ 			| _  => error⁰}
//│ 	def length_₀_₀(ls²) = 
//│ 		case ls² of {
//│ 			LH_C h¹ t¹ => (1 + length_₀_₀(t¹))
//│ 			| LH_N  => 0}
//│ 	def max_₀_₀(_lh_max_arg1², _lh_max_arg2²) = 
//│ 		if (_lh_max_arg1² > _lh_max_arg2²) then _lh_max_arg1² else _lh_max_arg2²
//│ 	def size_₁₂_₀ = 
//│ 		200
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
