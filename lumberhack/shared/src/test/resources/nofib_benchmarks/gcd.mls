:NewParser
:ParseOnly


:lhInHaskell
:lhGenOCaml
abs x = if x < 0 then (0 - x) else x
f1 (x,y) = (x, y, gcdE x y)
f2 (_, _, (g, u, v)) = abs (g+u+v)
quotRem a b = (a `div` b, a `mod` b)
test d = let ns = [5000..(5000+d)] in
              let ms = [10000..(10000+d)] in
                    let tripls = map f1 [(x, y) | x <- ns, y <- ms] in
                          let rs = (map f2 tripls) in
                                max' rs
max' [x]      = x
max' (x:y:xs) = if (x<y) then max' (y:xs)  else  max' (x:xs)
g (u1, u2, u3) (v1, v2, v3) =
                   if (v3 == 0) then (u3, u1, u2)
                   else
                      case (quotRem u3 v3) of
                        (q,r) -> g (v1,v2,v3) (u1-(q*v1), u2-(q*v2), r)
gcdE 0 y = (y,0,1)
gcdE x y = g (1,0,x) (0,1,y)
testGcd_nofib x = test x
testGcd_nofib $ primId 200
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testGcd_nofib₀^1109(primId⁰(200))
//│ def abs₀(_lh_abs_arg1¹) = if (_lh_abs_arg1¹ < 0) then (0 - _lh_abs_arg1¹) else _lh_abs_arg1¹
//│ def enumFromTo₀(a⁶, b³) = if (a⁶ <= b³) then [LH_C a⁶ enumFromTo₀^1045((a⁶ + 1), b³)] else [LH_N]
//│ def enumFromTo₁(a⁵, b²) = if (a⁵ <= b²) then [LH_C a⁵ enumFromTo₁^998((a⁵ + 1), b²)] else [LH_N]
//│ def f1₀(_lh_f1_arg1¹) = case _lh_f1_arg1¹ of {
//│ 	LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀^905(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]
//│ 	| _  => error⁰}
//│ def f2₀(_lh_f2_arg1¹) = case _lh_f2_arg1¹ of {
//│ 	LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {
//│ 		LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀^886(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def gcdE₀(_lh_gcdE_arg1¹, _lh_gcdE_arg2¹) = case _lh_gcdE_arg1¹ of {
//│ 	0  => [LH_P3 _lh_gcdE_arg2¹ 0 1]
//│ 	| _  => g₀^1095([LH_P3 1 0 _lh_gcdE_arg1¹], [LH_P3 0 1 _lh_gcdE_arg2¹])}
//│ def g₀(_lh_g_arg1¹, _lh_g_arg2¹) = case _lh_g_arg1¹ of {
//│ 	LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {
//│ 		LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else 
//│ 			let _lh_matchIdent¹ = quotRem₀^925(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ 			in case _lh_matchIdent¹ of {
//│ 				LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀^931([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹])
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def map₀(f¹², ls¹⁹) = case ls¹⁹ of {
//│ 	LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map₀^1016(f¹², t²²)]
//│ 	| LH_N  => [LH_N]}
//│ def map₁(f¹³, ls²⁰) = case ls²⁰ of {
//│ 	LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map₁^1067(f¹³, t²³)]
//│ 	| LH_N  => [LH_N]}
//│ def max'₀(_lh_max'_arg1¹) = case _lh_max'_arg1¹ of {
//│ 	LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {
//│ 		LH_N  => _lh_max'_LH_C_0²
//│ 		| LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀^976([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀^981([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³])
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def quotRem₀(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) = [LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]
//│ def testGcd_nofib₀(_lh_testGcd_nofib_arg1¹) = test₀^1059(_lh_testGcd_nofib_arg1¹)
//│ def test₀(_lh_test_arg1¹) = 
//│ 	let ns¹ = enumFromTo₀^824(5000, (5000 + _lh_test_arg1¹))
//│ 	in let ms¹ = enumFromTo₁^833(10000, (10000 + _lh_test_arg1¹))
//│ 	in let tripls¹ = map₀^842(f1₀^843, 
//│ 		let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 			LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 				let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 					LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 					| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 				in _lh_listcomp_fun³(ms¹)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun²(ns¹))
//│ 	in let rs¹ = map₁^871(f2₀^872, tripls¹)
//│ 	in max'₀^876(rs¹)
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec abs_d0 _lh_abs_arg1_1 =
//│ 		  (if (_lh_abs_arg1_1 < 0) then
//│ 		    (0 - _lh_abs_arg1_1)
//│ 		  else
//│ 		    _lh_abs_arg1_1)
//│ 		and enumFromTo_d0 a_6 b_3 =
//│ 		  (if (a_6 <= b_3) then
//│ 		    (`LH_C(a_6, ((enumFromTo_d0 (a_6 + 1)) b_3)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFromTo_d1 a_5 b_2 =
//│ 		  (if (a_5 <= b_2) then
//│ 		    (`LH_C(a_5, ((enumFromTo_d1 (a_5 + 1)) b_2)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and f1_d0 _lh_f1_arg1_1 =
//│ 		  (match _lh_f1_arg1_1 with
//│ 		    | `LH_P2(_lh_f1_LH_P2_0_1, _lh_f1_LH_P2_1_1) -> 
//│ 		      (`LH_P3(_lh_f1_LH_P2_0_1, _lh_f1_LH_P2_1_1, ((gcdE_d0 _lh_f1_LH_P2_0_1) _lh_f1_LH_P2_1_1)))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and f2_d0 _lh_f2_arg1_1 =
//│ 		  (match _lh_f2_arg1_1 with
//│ 		    | `LH_P3(_lh_f2_LH_P3_0_2, _lh_f2_LH_P3_1_2, _lh_f2_LH_P3_2_2) -> 
//│ 		      (match _lh_f2_LH_P3_2_2 with
//│ 		        | `LH_P3(_lh_f2_LH_P3_0_3, _lh_f2_LH_P3_1_3, _lh_f2_LH_P3_2_3) -> 
//│ 		          (abs_d0 ((_lh_f2_LH_P3_0_3 + _lh_f2_LH_P3_1_3) + _lh_f2_LH_P3_2_3))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and gcdE_d0 _lh_gcdE_arg1_1 _lh_gcdE_arg2_1 =
//│ 		  (match _lh_gcdE_arg1_1 with
//│ 		    | 0 -> 
//│ 		      (`LH_P3(_lh_gcdE_arg2_1, 0, 1))
//│ 		    | _ -> 
//│ 		      ((g_d0 (`LH_P3(1, 0, _lh_gcdE_arg1_1))) (`LH_P3(0, 1, _lh_gcdE_arg2_1))))
//│ 		and g_d0 _lh_g_arg1_1 _lh_g_arg2_1 =
//│ 		  (match _lh_g_arg1_1 with
//│ 		    | `LH_P3(_lh_g_LH_P3_0_2, _lh_g_LH_P3_1_2, _lh_g_LH_P3_2_2) -> 
//│ 		      (match _lh_g_arg2_1 with
//│ 		        | `LH_P3(_lh_g_LH_P3_0_3, _lh_g_LH_P3_1_3, _lh_g_LH_P3_2_3) -> 
//│ 		          (if (_lh_g_LH_P3_2_3 = 0) then
//│ 		            (`LH_P3(_lh_g_LH_P3_2_2, _lh_g_LH_P3_0_2, _lh_g_LH_P3_1_2))
//│ 		          else
//│ 		            (let rec _lh_matchIdent_1 = ((quotRem_d0 _lh_g_LH_P3_2_2) _lh_g_LH_P3_2_3) in
//│ 		              (match _lh_matchIdent_1 with
//│ 		                | `LH_P2(_lh_g_LH_P2_0_1, _lh_g_LH_P2_1_1) -> 
//│ 		                  ((g_d0 (`LH_P3(_lh_g_LH_P3_0_3, _lh_g_LH_P3_1_3, _lh_g_LH_P3_2_3))) (`LH_P3((_lh_g_LH_P3_0_2 - (_lh_g_LH_P2_0_1 * _lh_g_LH_P3_0_3)), (_lh_g_LH_P3_1_2 - (_lh_g_LH_P2_0_1 * _lh_g_LH_P3_1_3)), _lh_g_LH_P2_1_1)))
//│ 		                | _ -> 
//│ 		                  (failwith "error"))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and map_d0 f_1_2 ls_1_9 =
//│ 		  (match ls_1_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C((f_1_2 h_2_0), ((map_d0 f_1_2) t_2_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and map_d1 f_1_3 ls_2_0 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (`LH_C((f_1_3 h_2_1), ((map_d1 f_1_3) t_2_3)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and max'_d0 _lh_max'_arg1_1 =
//│ 		  (match _lh_max'_arg1_1 with
//│ 		    | `LH_C(_lh_max'_LH_C_0_2, _lh_max'_LH_C_1_2) -> 
//│ 		      (match _lh_max'_LH_C_1_2 with
//│ 		        | `LH_N -> 
//│ 		          _lh_max'_LH_C_0_2
//│ 		        | `LH_C(_lh_max'_LH_C_0_3, _lh_max'_LH_C_1_3) -> 
//│ 		          (if (_lh_max'_LH_C_0_2 < _lh_max'_LH_C_0_3) then
//│ 		            (max'_d0 (`LH_C(_lh_max'_LH_C_0_3, _lh_max'_LH_C_1_3)))
//│ 		          else
//│ 		            (max'_d0 (`LH_C(_lh_max'_LH_C_0_2, _lh_max'_LH_C_1_3))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and quotRem_d0 _lh_quotRem_arg1_1 _lh_quotRem_arg2_1 =
//│ 		  (`LH_P2((_lh_quotRem_arg1_1 / _lh_quotRem_arg2_1), (_lh_quotRem_arg1_1 mod _lh_quotRem_arg2_1)))
//│ 		and testGcd_nofib_d0 _lh_testGcd_nofib_arg1_1 =
//│ 		  (test_d0 _lh_testGcd_nofib_arg1_1)
//│ 		and test_d0 _lh_test_arg1_1 =
//│ 		  (let rec ns_1 = ((enumFromTo_d0 5000) (5000 + _lh_test_arg1_1)) in
//│ 		    (let rec ms_1 = ((enumFromTo_d1 10000) (10000 + _lh_test_arg1_1)) in
//│ 		      (let rec tripls_1 = ((map_d0 f1_d0) (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		        (match _lh_listcomp_fun_para_2 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		            (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		              (match _lh_listcomp_fun_para_3 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		                  (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_h_3)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		                | `LH_N -> 
//│ 		                  (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))) in
//│ 		              (_lh_listcomp_fun_3 ms_1))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_2 ns_1))) in
//│ 		        (let rec rs_1 = ((map_d1 f2_d0) tripls_1) in
//│ 		          (max'_d0 rs_1)))));;
//│ 		(testGcd_nofib_d0 200)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testGcd_nofib₀^1109] (hopeless to continue)
//│ 	[testGcd_nofib₀^1109 · test₀^1059] (using original def)
//│ 		[testGcd_nofib₀^1109 · test₀^1059 · enumFromTo₀^824] (using original def)
//│ 			[testGcd_nofib₀^1109 · test₀^1059 · enumFromTo₀^824 · enumFromTo₀^1045] ---> [testGcd_nofib₀^1109 · test₀^1059 · enumFromTo₀^824] (using original def)
//│ 		[testGcd_nofib₀^1109 · test₀^1059 · enumFromTo₁^833] (using original def)
//│ 			[testGcd_nofib₀^1109 · test₀^1059 · enumFromTo₁^833 · enumFromTo₁^998] ---> [testGcd_nofib₀^1109 · test₀^1059 · enumFromTo₁^833] (using original def)
//│ 		[testGcd_nofib₀^1109 · test₀^1059 · f1₀^843] (using original def)
//│ 			[testGcd_nofib₀^1109 · test₀^1059 · f1₀^843 · gcdE₀^905] (using original def)
//│ 				[testGcd_nofib₀^1109 · test₀^1059 · f1₀^843 · gcdE₀^905 · g₀^1095] (using original def)
//│ 					[testGcd_nofib₀^1109 · test₀^1059 · f1₀^843 · gcdE₀^905 · g₀^1095 · g₀^931] ---> [testGcd_nofib₀^1109 · test₀^1059 · f1₀^843 · gcdE₀^905 · g₀^1095] (using original def)
//│ 					[testGcd_nofib₀^1109 · test₀^1059 · f1₀^843 · gcdE₀^905 · g₀^1095 · quotRem₀^925] (using original def)
//│ 		[testGcd_nofib₀^1109 · test₀^1059 · f2₀^872] (using original def)
//│ 			[testGcd_nofib₀^1109 · test₀^1059 · f2₀^872 · abs₀^886] (using original def)
//│ 		[testGcd_nofib₀^1109 · test₀^1059 · map₀^842] (using original def)
//│ 			[testGcd_nofib₀^1109 · test₀^1059 · map₀^842 · map₀^1016] ---> [testGcd_nofib₀^1109 · test₀^1059 · map₀^842] (using original def)
//│ 		[testGcd_nofib₀^1109 · test₀^1059 · map₁^871] (using original def)
//│ 			[testGcd_nofib₀^1109 · test₀^1059 · map₁^871 · map₁^1067] ---> [testGcd_nofib₀^1109 · test₀^1059 · map₁^871] (using original def)
//│ 		[testGcd_nofib₀^1109 · test₀^1059 · max'₀^876] (using original def)
//│ 			[testGcd_nofib₀^1109 · test₀^1059 · max'₀^876 · max'₀^976] ---> [testGcd_nofib₀^1109 · test₀^1059 · max'₀^876] (using original def)
//│ 			[testGcd_nofib₀^1109 · test₀^1059 · max'₀^876 · max'₀^981] ---> [testGcd_nofib₀^1109 · test₀^1059 · max'₀^876] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testGcd_nofib₀₀(primId⁰(200))
//│ def testGcd_nofib₀₀(_lh_testGcd_nofib_arg1¹) = 
//│ 	test₀₀(_lh_testGcd_nofib_arg1¹)
//│ 	where
//│ 	def test₀₀(_lh_test_arg1¹) = 
//│ 		let ns¹ = enumFromTo₀₀(5000, (5000 + _lh_test_arg1¹))
//│ 		in let ms¹ = enumFromTo₁₀(10000, (10000 + _lh_test_arg1¹))
//│ 		in let tripls¹ = map₀₀(f1₀₀, 
//│ 			let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 				LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 					let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 						LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 						| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 					in _lh_listcomp_fun³(ms¹)
//│ 				| LH_N  => [LH_N]})
//│ 			in _lh_listcomp_fun²(ns¹))
//│ 		in let rs¹ = map₁₀(f2₀₀, tripls¹)
//│ 		in max'₀₀(rs¹)
//│ 		where
//│ 		def enumFromTo₀₀(a², b²) = 
//│ 			if (a² <= b²) then [LH_C a² enumFromTo₀₀((a² + 1), b²)] else [LH_N]
//│ 		def enumFromTo₁₀(a³, b³) = 
//│ 			if (a³ <= b³) then [LH_C a³ enumFromTo₁₀((a³ + 1), b³)] else [LH_N]
//│ 		def f1₀₀(_lh_f1_arg1¹) = 
//│ 			case _lh_f1_arg1¹ of {
//│ 				LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]
//│ 				| _  => error⁰}
//│ 			where
//│ 			def gcdE₀₀(_lh_gcdE_arg1¹, _lh_gcdE_arg2¹) = 
//│ 				case _lh_gcdE_arg1¹ of {
//│ 					0  => [LH_P3 _lh_gcdE_arg2¹ 0 1]
//│ 					| _  => g₀₀([LH_P3 1 0 _lh_gcdE_arg1¹], [LH_P3 0 1 _lh_gcdE_arg2¹])}
//│ 				where
//│ 				def g₀₀(_lh_g_arg1¹, _lh_g_arg2¹) = 
//│ 					case _lh_g_arg1¹ of {
//│ 						LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {
//│ 							LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else 
//│ 								let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ 								in case _lh_matchIdent¹ of {
//│ 									LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹])
//│ 									| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					where
//│ 					def quotRem₀₀(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) = 
//│ 						[LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]
//│ 		def f2₀₀(_lh_f2_arg1¹) = 
//│ 			case _lh_f2_arg1¹ of {
//│ 				LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {
//│ 					LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³))
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def abs₀₀(_lh_abs_arg1¹) = 
//│ 				if (_lh_abs_arg1¹ < 0) then (0 - _lh_abs_arg1¹) else _lh_abs_arg1¹
//│ 		def map₀₀(f², ls²) = 
//│ 			case ls² of {
//│ 				LH_C h² t² => [LH_C f²(h²) map₀₀(f², t²)]
//│ 				| LH_N  => [LH_N]}
//│ 		def map₁₀(f³, ls³) = 
//│ 			case ls³ of {
//│ 				LH_C h³ t³ => [LH_C f³(h³) map₁₀(f³, t³)]
//│ 				| LH_N  => [LH_N]}
//│ 		def max'₀₀(_lh_max'_arg1¹) = 
//│ 			case _lh_max'_arg1¹ of {
//│ 				LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {
//│ 					LH_N  => _lh_max'_LH_C_0²
//│ 					| LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³])
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]: 301 --->
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰}: 399
//│ [LH_C f²(h²) map₀₀(f², t²)]: 313 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C f³(h³) map₁₀(f³, t³)] | LH_N  => [LH_N]}: 351
//│ [LH_N]: 314 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C f³(h³) map₁₀(f³, t³)] | LH_N  => [LH_N]}: 351
//│ [LH_C f³(h³) map₁₀(f³, t³)]: 349 --->
//│ 	case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰}: 493
//│ 	case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 495
//│ [LH_N]: 350 --->
//│ 	case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰}: 493
//│ 	case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 495
//│ [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²]: 364 --->
//│ 	case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰}: 336
//│ [LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³]: 375 --->
//│ 	case _lh_g_arg1¹ of {LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 405
//│ [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]: 396 --->
//│ 	case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰}: 403
//│ [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]: 429 --->
//│ 	case _lh_f2_arg1¹ of {LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰} | _  => error⁰}: 338
//│ [LH_C a² enumFromTo₀₀((a² + 1), b²)]: 448 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 537
//│ [LH_N]: 449 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 537
//│ [LH_C a³ enumFromTo₁₀((a³ + 1), b³)]: 468 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 530
//│ [LH_N]: 469 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 530
//│ [LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]: 484 --->
//│ 	case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 495
//│ [LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]: 489 --->
//│ 	case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 495
//│ [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 522 --->
//│ 	case _lh_f1_arg1¹ of {LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)] | _  => error⁰}: 431
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 526 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f²(h²) map₀₀(f², t²)] | LH_N  => [LH_N]}: 315
//│ [LH_N]: 536 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f²(h²) map₀₀(f², t²)] | LH_N  => [LH_N]}: 315
//│ [LH_P3 _lh_gcdE_arg2¹ 0 1]: 561 --->
//│ 	case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰}: 336
//│ [LH_P3 1 0 _lh_gcdE_arg1¹]: 566 --->
//│ 	case _lh_g_arg1¹ of {LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 405
//│ [LH_P3 0 1 _lh_gcdE_arg2¹]: 571 --->
//│ 	case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰}: 403
//│ ------------------
//│ case ls² of {LH_C h² t² => [LH_C f²(h²) map₀₀(f², t²)] | LH_N  => [LH_N]}: 315 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 526
//│ 	[LH_N]: 536
//│ case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰}: 336 --->
//│ 	[LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²]: 364
//│ 	[LH_P3 _lh_gcdE_arg2¹ 0 1]: 561
//│ case _lh_f2_arg1¹ of {LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰} | _  => error⁰}: 338 --->
//│ 	[LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]: 429
//│ case ls³ of {LH_C h³ t³ => [LH_C f³(h³) map₁₀(f³, t³)] | LH_N  => [LH_N]}: 351 --->
//│ 	[LH_C f²(h²) map₀₀(f², t²)]: 313
//│ 	[LH_N]: 314
//│ case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰}: 399 --->
//│ 	[LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]: 301
//│ case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰}: 403 --->
//│ 	[LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]: 396
//│ 	[LH_P3 0 1 _lh_gcdE_arg2¹]: 571
//│ case _lh_g_arg1¹ of {LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 405 --->
//│ 	[LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³]: 375
//│ 	[LH_P3 1 0 _lh_gcdE_arg1¹]: 566
//│ case _lh_f1_arg1¹ of {LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)] | _  => error⁰}: 431 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 522
//│ case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰}: 493 --->
//│ 	[LH_C f³(h³) map₁₀(f³, t³)]: 349
//│ 	[LH_N]: 350
//│ case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 495 --->
//│ 	[LH_C f³(h³) map₁₀(f³, t³)]: 349
//│ 	[LH_N]: 350
//│ 	[LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]: 484
//│ 	[LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]: 489
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 530 --->
//│ 	[LH_C a³ enumFromTo₁₀((a³ + 1), b³)]: 468
//│ 	[LH_N]: 469
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 537 --->
//│ 	[LH_C a² enumFromTo₀₀((a² + 1), b²)]: 448
//│ 	[LH_N]: 449
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]: 301 --->
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰}: 399
//│ [LH_C f²(h²) map₀₀(f², t²)]: 313 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C f³(h³) map₁₀(f³, t³)] | LH_N  => [LH_N]}: 351
//│ [LH_N]: 314 --->
//│ 	case ls³ of {LH_C h³ t³ => [LH_C f³(h³) map₁₀(f³, t³)] | LH_N  => [LH_N]}: 351
//│ [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²]: 364 --->
//│ 	case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰}: 336
//│ [LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³]: 375 --->
//│ 	case _lh_g_arg1¹ of {LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 405
//│ [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]: 396 --->
//│ 	case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰}: 403
//│ [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]: 429 --->
//│ 	case _lh_f2_arg1¹ of {LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰} | _  => error⁰}: 338
//│ [LH_C a² enumFromTo₀₀((a² + 1), b²)]: 448 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 537
//│ [LH_N]: 449 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 537
//│ [LH_C a³ enumFromTo₁₀((a³ + 1), b³)]: 468 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 530
//│ [LH_N]: 469 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 530
//│ [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 522 --->
//│ 	case _lh_f1_arg1¹ of {LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)] | _  => error⁰}: 431
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 526 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f²(h²) map₀₀(f², t²)] | LH_N  => [LH_N]}: 315
//│ [LH_N]: 536 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f²(h²) map₀₀(f², t²)] | LH_N  => [LH_N]}: 315
//│ [LH_P3 _lh_gcdE_arg2¹ 0 1]: 561 --->
//│ 	case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰}: 336
//│ [LH_P3 1 0 _lh_gcdE_arg1¹]: 566 --->
//│ 	case _lh_g_arg1¹ of {LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 405
//│ [LH_P3 0 1 _lh_gcdE_arg2¹]: 571 --->
//│ 	case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰}: 403
//│ ------------------
//│ case ls² of {LH_C h² t² => [LH_C f²(h²) map₀₀(f², t²)] | LH_N  => [LH_N]}: 315 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 526
//│ 	[LH_N]: 536
//│ case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰}: 336 --->
//│ 	[LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²]: 364
//│ 	[LH_P3 _lh_gcdE_arg2¹ 0 1]: 561
//│ case _lh_f2_arg1¹ of {LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs₀₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰} | _  => error⁰}: 338 --->
//│ 	[LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]: 429
//│ case ls³ of {LH_C h³ t³ => [LH_C f³(h³) map₁₀(f³, t³)] | LH_N  => [LH_N]}: 351 --->
//│ 	[LH_C f²(h²) map₀₀(f², t²)]: 313
//│ 	[LH_N]: 314
//│ case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰}: 399 --->
//│ 	[LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]: 301
//│ case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰}: 403 --->
//│ 	[LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]: 396
//│ 	[LH_P3 0 1 _lh_gcdE_arg2¹]: 571
//│ case _lh_g_arg1¹ of {LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem₀₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g₀₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 405 --->
//│ 	[LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³]: 375
//│ 	[LH_P3 1 0 _lh_gcdE_arg1¹]: 566
//│ case _lh_f1_arg1¹ of {LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE₀₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)] | _  => error⁰}: 431 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 522
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 530 --->
//│ 	[LH_C a³ enumFromTo₁₀((a³ + 1), b³)]: 468
//│ 	[LH_N]: 469
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 537 --->
//│ 	[LH_C a² enumFromTo₀₀((a² + 1), b²)]: 448
//│ 	[LH_N]: 449
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testGcd_nofib₀₀(primId⁰(200))
//│ def testGcd_nofib₀₀(_lh_testGcd_nofib_arg1²) = 
//│ 	test₀₀(_lh_testGcd_nofib_arg1²)
//│ 	where
//│ 	def test₀₀(_lh_test_arg1²) = 
//│ 		let ns² = enumFromTo₀₀(5000, (5000 + _lh_test_arg1²))
//│ 		in let ms² = enumFromTo₁₀(10000, (10000 + _lh_test_arg1²))
//│ 		in let tripls² = map₀₀(f1₀₀, 
//│ 			let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(ms², _lh_listcomp_fun⁴))
//│ 			in _lh_listcomp_fun⁴(ns²))
//│ 		in let rs² = map₁₀(f2₀₀, tripls²)
//│ 		in max'₀₀(rs²)
//│ 		where
//│ 		def enumFromTo₀₀(a⁴, b⁴) = 
//│ 			if (a⁴ <= b⁴) then 
//│ 				let _lh_listcomp_fun_ls_h⁴ = a⁴
//│ 				in let _lh_listcomp_fun_ls_t⁴ = enumFromTo₀₀((a⁴ + 1), b⁴)
//│ 				in (fun ms³ -> (fun _lh_listcomp_fun⁵ -> 
//│ 					let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁵ -> _lh_listcomp_fun_para⁵(_lh_listcomp_fun_ls_h⁴, _lh_listcomp_fun⁶, _lh_listcomp_fun⁵, _lh_listcomp_fun_ls_t⁴))
//│ 					in _lh_listcomp_fun⁶(ms³))) else (fun ms⁴ -> (fun _lh_listcomp_fun⁷ -> (fun f⁴ -> (fun f⁵ -> [LH_N]))))
//│ 		def enumFromTo₁₀(a⁵, b⁵) = 
//│ 			if (a⁵ <= b⁵) then 
//│ 				let _lh_listcomp_fun_ls_h⁵ = a⁵
//│ 				in let _lh_listcomp_fun_ls_t⁵ = enumFromTo₁₀((a⁵ + 1), b⁵)
//│ 				in (fun _lh_listcomp_fun_ls_h⁶ -> (fun _lh_listcomp_fun⁸ -> (fun _lh_listcomp_fun⁹ -> (fun _lh_listcomp_fun_ls_t⁶ -> 
//│ 					let h⁴ = 	
//│ 						let _lh_f1_LH_P2_0² = _lh_listcomp_fun_ls_h⁶
//│ 						in let _lh_f1_LH_P2_1² = _lh_listcomp_fun_ls_h⁵
//│ 						in let _lh_f2_LH_P3_0⁶ = _lh_f1_LH_P2_0²
//│ 						in let _lh_f2_LH_P3_1⁶ = _lh_f1_LH_P2_1²
//│ 						in let _lh_f2_LH_P3_2⁶ = gcdE₀₀(_lh_f1_LH_P2_0², _lh_f1_LH_P2_1²)
//│ 						in _lh_f2_LH_P3_2⁶
//│ 					in let t⁴ = _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁵)
//│ 					in (fun f⁷ -> 
//│ 						let h⁵ = f⁷(h⁴)
//│ 						in let t⁵ = map₀₀(f⁷, t⁴)
//│ 						in (fun f⁸ -> [LH_C f⁸(h⁵) map₁₀(f⁸, t⁵)])))))) else (fun _lh_listcomp_fun_ls_h⁷ -> (fun _lh_listcomp_fun¹⁰ -> (fun _lh_listcomp_fun¹¹ -> (fun _lh_listcomp_fun_ls_t⁷ -> _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁷)))))
//│ 		def f1₀₀(_lh_f1_arg1²) = 
//│ 			_lh_f1_arg1²
//│ 			where
//│ 			def gcdE₀₀(_lh_gcdE_arg1², _lh_gcdE_arg2²) = 
//│ 				case _lh_gcdE_arg1² of {
//│ 					0  => 
//│ 						let _lh_f2_LH_P3_0⁴ = _lh_gcdE_arg2²
//│ 						in let _lh_f2_LH_P3_1⁴ = 0
//│ 						in let _lh_f2_LH_P3_2⁴ = 1
//│ 						in abs₀₀(((_lh_f2_LH_P3_0⁴ + _lh_f2_LH_P3_1⁴) + _lh_f2_LH_P3_2⁴))
//│ 					| _  => g₀₀(
//│ 						let _lh_g_LH_P3_0⁴ = 1
//│ 						in let _lh_g_LH_P3_1⁴ = 0
//│ 						in let _lh_g_LH_P3_2⁴ = _lh_gcdE_arg1²
//│ 						in (fun _lh_g_arg2³ -> _lh_g_arg2³(_lh_g_LH_P3_2⁴, _lh_g_LH_P3_0⁴, _lh_g_LH_P3_1⁴)), 
//│ 						let _lh_g_LH_P3_0⁵ = 0
//│ 						in let _lh_g_LH_P3_1⁵ = 1
//│ 						in let _lh_g_LH_P3_2⁵ = _lh_gcdE_arg2²
//│ 						in (fun _lh_g_LH_P3_2⁶ -> (fun _lh_g_LH_P3_0⁶ -> (fun _lh_g_LH_P3_1⁶ -> if (_lh_g_LH_P3_2⁵ == 0) then 
//│ 							let _lh_f2_LH_P3_0⁵ = _lh_g_LH_P3_2⁶
//│ 							in let _lh_f2_LH_P3_1⁵ = _lh_g_LH_P3_0⁶
//│ 							in let _lh_f2_LH_P3_2⁵ = _lh_g_LH_P3_1⁶
//│ 							in abs₀₀(((_lh_f2_LH_P3_0⁵ + _lh_f2_LH_P3_1⁵) + _lh_f2_LH_P3_2⁵)) else 
//│ 							let _lh_matchIdent² = quotRem₀₀(_lh_g_LH_P3_2⁶, _lh_g_LH_P3_2⁵)
//│ 							in _lh_matchIdent²(_lh_g_LH_P3_0⁶, _lh_g_LH_P3_1⁶, _lh_g_LH_P3_0⁵, _lh_g_LH_P3_1⁵, _lh_g_LH_P3_2⁵)))))}
//│ 				where
//│ 				def g₀₀(_lh_g_arg1², _lh_g_arg2²) = 
//│ 					_lh_g_arg1²(_lh_g_arg2²)
//│ 					where
//│ 					def quotRem₀₀(_lh_quotRem_arg1², _lh_quotRem_arg2²) = 
//│ 						let _lh_g_LH_P2_0² = div⁰(_lh_quotRem_arg1², _lh_quotRem_arg2²)
//│ 						in let _lh_g_LH_P2_1² = (_lh_quotRem_arg1² % _lh_quotRem_arg2²)
//│ 						in (fun _lh_g_LH_P3_0⁷ -> (fun _lh_g_LH_P3_1⁷ -> (fun _lh_g_LH_P3_0⁸ -> (fun _lh_g_LH_P3_1⁸ -> (fun _lh_g_LH_P3_2⁷ -> g₀₀(
//│ 							let _lh_g_LH_P3_0⁹ = _lh_g_LH_P3_0⁸
//│ 							in let _lh_g_LH_P3_1⁹ = _lh_g_LH_P3_1⁸
//│ 							in let _lh_g_LH_P3_2⁸ = _lh_g_LH_P3_2⁷
//│ 							in (fun _lh_g_arg2⁴ -> _lh_g_arg2⁴(_lh_g_LH_P3_2⁸, _lh_g_LH_P3_0⁹, _lh_g_LH_P3_1⁹)), 
//│ 							let _lh_g_LH_P3_0¹⁰ = (_lh_g_LH_P3_0⁷ - (_lh_g_LH_P2_0² * _lh_g_LH_P3_0⁸))
//│ 							in let _lh_g_LH_P3_1¹⁰ = (_lh_g_LH_P3_1⁷ - (_lh_g_LH_P2_0² * _lh_g_LH_P3_1⁸))
//│ 							in let _lh_g_LH_P3_2⁹ = _lh_g_LH_P2_1²
//│ 							in (fun _lh_g_LH_P3_2¹⁰ -> (fun _lh_g_LH_P3_0¹¹ -> (fun _lh_g_LH_P3_1¹¹ -> if (_lh_g_LH_P3_2⁹ == 0) then 
//│ 								let _lh_f2_LH_P3_0⁷ = _lh_g_LH_P3_2¹⁰
//│ 								in let _lh_f2_LH_P3_1⁷ = _lh_g_LH_P3_0¹¹
//│ 								in let _lh_f2_LH_P3_2⁷ = _lh_g_LH_P3_1¹¹
//│ 								in abs₀₀(((_lh_f2_LH_P3_0⁷ + _lh_f2_LH_P3_1⁷) + _lh_f2_LH_P3_2⁷)) else 
//│ 								let _lh_matchIdent³ = quotRem₀₀(_lh_g_LH_P3_2¹⁰, _lh_g_LH_P3_2⁹)
//│ 								in _lh_matchIdent³(_lh_g_LH_P3_0¹¹, _lh_g_LH_P3_1¹¹, _lh_g_LH_P3_0¹⁰, _lh_g_LH_P3_1¹⁰, _lh_g_LH_P3_2⁹))))))))))
//│ 		def f2₀₀(_lh_f2_arg1²) = 
//│ 			_lh_f2_arg1²
//│ 			where
//│ 			def abs₀₀(_lh_abs_arg1²) = 
//│ 				if (_lh_abs_arg1² < 0) then (0 - _lh_abs_arg1²) else _lh_abs_arg1²
//│ 		def map₀₀(f⁹, ls⁵) = 
//│ 			ls⁵(f⁹)
//│ 		def map₁₀(f⁶, ls⁴) = 
//│ 			ls⁴(f⁶)
//│ 		def max'₀₀(_lh_max'_arg1²) = 
//│ 			case _lh_max'_arg1² of {
//│ 				LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {
//│ 					LH_N  => _lh_max'_LH_C_0²
//│ 					| LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'₀₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'₀₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³])
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
