:NewParser
:ParseOnly

:lhNoIter
:lhInHaskell
:lhGenOCaml
abs x = if x < 0 then (0 - x) else x
f1 (x,y) = (x, y, gcdE x y)
f2 (_, _, (g, u, v)) = abs (g+u+v)
quotRem a b = (a `div` b, a `mod` b)
test d = let ns = [5000..(5000+d)] in
              let ms = [10000..(10000+d)] in
                    let tripls = map f1 [(x, y) | x <- ns, y <- ms] in
                          let rs = (map f2 tripls) in
                                max' rs
max' [x]      = x
max' (x:y:xs) = if (x<y) then max' (y:xs)  else  max' (x:xs)
g (u1, u2, u3) (v1, v2, v3) =
                   if (v3 == 0) then (u3, u1, u2)
                   else
                      case (quotRem u3 v3) of
                        (q,r) -> g (v1,v2,v3) (u1-(q*v1), u2-(q*v2), r)
gcdE 0 y = (y,0,1)
gcdE x y = g (1,0,x) (0,1,y)
testGcd_nofib x = test x
testGcd_nofib $ primId 200
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testGcd_nofib_₀^1111(primId⁰(200))
//│ def abs_₀(_lh_abs_arg1¹) = if (_lh_abs_arg1¹ < 0) then (0 - _lh_abs_arg1¹) else _lh_abs_arg1¹
//│ def enumFromTo_₀(a⁵, b²) = if (a⁵ <= b²) then [LH_C a⁵ enumFromTo_₀^890((a⁵ + 1), b²)] else [LH_N]
//│ def enumFromTo_₁(a⁶, b³) = if (a⁶ <= b³) then [LH_C a⁶ enumFromTo_₁^1078((a⁶ + 1), b³)] else [LH_N]
//│ def f1_₀(_lh_f1_arg1¹) = case _lh_f1_arg1¹ of {
//│ 	LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE_₀^1005(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]
//│ 	| _  => error⁰}
//│ def f2_₀(_lh_f2_arg1¹) = case _lh_f2_arg1¹ of {
//│ 	LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {
//│ 		LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs_₀^1030(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def g_₀(_lh_g_arg1¹, _lh_g_arg2¹) = case _lh_g_arg1¹ of {
//│ 	LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {
//│ 		LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else 
//│ 			let _lh_matchIdent¹ = quotRem_₀^837(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ 			in case _lh_matchIdent¹ of {
//│ 				LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀^843([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹])
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def gcdE_₀(_lh_gcdE_arg1¹, _lh_gcdE_arg2¹) = case _lh_gcdE_arg1¹ of {
//│ 	0  => [LH_P3 _lh_gcdE_arg2¹ 0 1]
//│ 	| _  => g_₀^1097([LH_P3 1 0 _lh_gcdE_arg1¹], [LH_P3 0 1 _lh_gcdE_arg2¹])}
//│ def map_₀(f¹³, ls²⁰) = case ls²⁰ of {
//│ 	LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_₀^1018(f¹³, t²³)]
//│ 	| LH_N  => [LH_N]}
//│ def map_₁(f¹², ls¹⁹) = case ls¹⁹ of {
//│ 	LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₁^968(f¹², t²²)]
//│ 	| LH_N  => [LH_N]}
//│ def max'_₀(_lh_max'_arg1¹) = case _lh_max'_arg1¹ of {
//│ 	LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {
//│ 		LH_N  => _lh_max'_LH_C_0²
//│ 		| LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀^986([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀^991([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³])
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def quotRem_₀(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) = [LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]
//│ def testGcd_nofib_₀(_lh_testGcd_nofib_arg1¹) = test_₀^880(_lh_testGcd_nofib_arg1¹)
//│ def test_₀(_lh_test_arg1¹) = 
//│ 	let ns¹ = enumFromTo_₀^904(5000, (5000 + _lh_test_arg1¹))
//│ 	in let ms¹ = enumFromTo_₁^913(10000, (10000 + _lh_test_arg1¹))
//│ 	in let tripls¹ = map_₀^922(f1_₀^923, 
//│ 		let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 			LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 				let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 					LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 					| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 				in _lh_listcomp_fun³(ms¹)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun²(ns¹))
//│ 	in let rs¹ = map_₁^951(f2_₀^952, tripls¹)
//│ 	in max'_₀^956(rs¹)
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec abs__d0 _lh_abs_arg1_1 =
//│ 		  (if (_lh_abs_arg1_1 < 0) then
//│ 		    (0 - _lh_abs_arg1_1)
//│ 		  else
//│ 		    _lh_abs_arg1_1)
//│ 		and enumFromTo__d0 a_5 b_2 =
//│ 		  (if (a_5 <= b_2) then
//│ 		    (`LH_C(a_5, ((enumFromTo__d0 (a_5 + 1)) b_2)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFromTo__d1 a_6 b_3 =
//│ 		  (if (a_6 <= b_3) then
//│ 		    (`LH_C(a_6, ((enumFromTo__d1 (a_6 + 1)) b_3)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and f1__d0 _lh_f1_arg1_1 =
//│ 		  (match _lh_f1_arg1_1 with
//│ 		    | `LH_P2(_lh_f1_LH_P2_0_1, _lh_f1_LH_P2_1_1) -> 
//│ 		      (`LH_P3(_lh_f1_LH_P2_0_1, _lh_f1_LH_P2_1_1, ((gcdE__d0 _lh_f1_LH_P2_0_1) _lh_f1_LH_P2_1_1)))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and f2__d0 _lh_f2_arg1_1 =
//│ 		  (match _lh_f2_arg1_1 with
//│ 		    | `LH_P3(_lh_f2_LH_P3_0_2, _lh_f2_LH_P3_1_2, _lh_f2_LH_P3_2_2) -> 
//│ 		      (match _lh_f2_LH_P3_2_2 with
//│ 		        | `LH_P3(_lh_f2_LH_P3_0_3, _lh_f2_LH_P3_1_3, _lh_f2_LH_P3_2_3) -> 
//│ 		          (abs__d0 ((_lh_f2_LH_P3_0_3 + _lh_f2_LH_P3_1_3) + _lh_f2_LH_P3_2_3))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and g__d0 _lh_g_arg1_1 _lh_g_arg2_1 =
//│ 		  (match _lh_g_arg1_1 with
//│ 		    | `LH_P3(_lh_g_LH_P3_0_2, _lh_g_LH_P3_1_2, _lh_g_LH_P3_2_2) -> 
//│ 		      (match _lh_g_arg2_1 with
//│ 		        | `LH_P3(_lh_g_LH_P3_0_3, _lh_g_LH_P3_1_3, _lh_g_LH_P3_2_3) -> 
//│ 		          (if (_lh_g_LH_P3_2_3 = 0) then
//│ 		            (`LH_P3(_lh_g_LH_P3_2_2, _lh_g_LH_P3_0_2, _lh_g_LH_P3_1_2))
//│ 		          else
//│ 		            (let rec _lh_matchIdent_1 = ((quotRem__d0 _lh_g_LH_P3_2_2) _lh_g_LH_P3_2_3) in
//│ 		              (match _lh_matchIdent_1 with
//│ 		                | `LH_P2(_lh_g_LH_P2_0_1, _lh_g_LH_P2_1_1) -> 
//│ 		                  ((g__d0 (`LH_P3(_lh_g_LH_P3_0_3, _lh_g_LH_P3_1_3, _lh_g_LH_P3_2_3))) (`LH_P3((_lh_g_LH_P3_0_2 - (_lh_g_LH_P2_0_1 * _lh_g_LH_P3_0_3)), (_lh_g_LH_P3_1_2 - (_lh_g_LH_P2_0_1 * _lh_g_LH_P3_1_3)), _lh_g_LH_P2_1_1)))
//│ 		                | _ -> 
//│ 		                  (failwith "error"))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and gcdE__d0 _lh_gcdE_arg1_1 _lh_gcdE_arg2_1 =
//│ 		  (match _lh_gcdE_arg1_1 with
//│ 		    | 0 -> 
//│ 		      (`LH_P3(_lh_gcdE_arg2_1, 0, 1))
//│ 		    | _ -> 
//│ 		      ((g__d0 (`LH_P3(1, 0, _lh_gcdE_arg1_1))) (`LH_P3(0, 1, _lh_gcdE_arg2_1))))
//│ 		and map__d0 f_1_3 ls_2_0 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (`LH_C((f_1_3 h_2_1), ((map__d0 f_1_3) t_2_3)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and map__d1 f_1_2 ls_1_9 =
//│ 		  (match ls_1_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C((f_1_2 h_2_0), ((map__d1 f_1_2) t_2_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and max'__d0 _lh_max'_arg1_1 =
//│ 		  (match _lh_max'_arg1_1 with
//│ 		    | `LH_C(_lh_max'_LH_C_0_2, _lh_max'_LH_C_1_2) -> 
//│ 		      (match _lh_max'_LH_C_1_2 with
//│ 		        | `LH_N -> 
//│ 		          _lh_max'_LH_C_0_2
//│ 		        | `LH_C(_lh_max'_LH_C_0_3, _lh_max'_LH_C_1_3) -> 
//│ 		          (if (_lh_max'_LH_C_0_2 < _lh_max'_LH_C_0_3) then
//│ 		            (max'__d0 (`LH_C(_lh_max'_LH_C_0_3, _lh_max'_LH_C_1_3)))
//│ 		          else
//│ 		            (max'__d0 (`LH_C(_lh_max'_LH_C_0_2, _lh_max'_LH_C_1_3))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and quotRem__d0 _lh_quotRem_arg1_1 _lh_quotRem_arg2_1 =
//│ 		  (`LH_P2((_lh_quotRem_arg1_1 / _lh_quotRem_arg2_1), (_lh_quotRem_arg1_1 mod _lh_quotRem_arg2_1)))
//│ 		and testGcd_nofib__d0 _lh_testGcd_nofib_arg1_1 =
//│ 		  (test__d0 _lh_testGcd_nofib_arg1_1)
//│ 		and test__d0 _lh_test_arg1_1 =
//│ 		  (let rec ns_1 = ((enumFromTo__d0 5000) (5000 + _lh_test_arg1_1)) in
//│ 		    (let rec ms_1 = ((enumFromTo__d1 10000) (10000 + _lh_test_arg1_1)) in
//│ 		      (let rec tripls_1 = ((map__d0 f1__d0) (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		        (match _lh_listcomp_fun_para_2 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		            (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		              (match _lh_listcomp_fun_para_3 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		                  (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_h_3)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		                | `LH_N -> 
//│ 		                  (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))) in
//│ 		              (_lh_listcomp_fun_3 ms_1))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_2 ns_1))) in
//│ 		        (let rec rs_1 = ((map__d1 f2__d0) tripls_1) in
//│ 		          (max'__d0 rs_1)))));;
//│ 		(testGcd_nofib__d0 200)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²]: 836 --->
//│ 	case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs_₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰}: 1042
//│ [LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³]: 847 --->
//│ 	case _lh_g_arg1¹ of {LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem_₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 877
//│ [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]: 868 --->
//│ 	case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem_₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰}: 875
//│ [LH_C a⁵ enumFromTo_₀((a⁵ + 1), b²)]: 899 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 944
//│ [LH_N]: 900 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 944
//│ [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 929 --->
//│ 	case _lh_f1_arg1¹ of {LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE_₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)] | _  => error⁰}: 1012
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 933 --->
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_₀(f¹³, t²³)] | LH_N  => [LH_N]}: 1025
//│ [LH_N]: 943 --->
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_₀(f¹³, t²³)] | LH_N  => [LH_N]}: 1025
//│ [LH_C f¹²(h²⁰) map_₁(f¹², t²²)]: 973 --->
//│ 	case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰}: 998
//│ 	case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 1000
//│ [LH_N]: 974 --->
//│ 	case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰}: 998
//│ 	case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 1000
//│ [LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]: 989 --->
//│ 	case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 1000
//│ [LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]: 994 --->
//│ 	case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 1000
//│ [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE_₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]: 1010 --->
//│ 	case _lh_f2_arg1¹ of {LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs_₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰} | _  => error⁰}: 1044
//│ [LH_C f¹³(h²¹) map_₀(f¹³, t²³)]: 1023 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₁(f¹², t²²)] | LH_N  => [LH_N]}: 975
//│ [LH_N]: 1024 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₁(f¹², t²²)] | LH_N  => [LH_N]}: 975
//│ [LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]: 1069 --->
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰}: 871
//│ [LH_C a⁶ enumFromTo_₁((a⁶ + 1), b³)]: 1087 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 937
//│ [LH_N]: 1088 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 937
//│ [LH_P3 _lh_gcdE_arg2¹ 0 1]: 1096 --->
//│ 	case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs_₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰}: 1042
//│ [LH_P3 1 0 _lh_gcdE_arg1¹]: 1101 --->
//│ 	case _lh_g_arg1¹ of {LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem_₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 877
//│ [LH_P3 0 1 _lh_gcdE_arg2¹]: 1106 --->
//│ 	case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem_₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰}: 875
//│ ------------------
//│ case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰}: 871 --->
//│ 	[LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]: 1069
//│ case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem_₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰}: 875 --->
//│ 	[LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]: 868
//│ 	[LH_P3 0 1 _lh_gcdE_arg2¹]: 1106
//│ case _lh_g_arg1¹ of {LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2¹ of {LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else let _lh_matchIdent¹ = quotRem_₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 877 --->
//│ 	[LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³]: 847
//│ 	[LH_P3 1 0 _lh_gcdE_arg1¹]: 1101
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 937 --->
//│ 	[LH_C a⁶ enumFromTo_₁((a⁶ + 1), b³)]: 1087
//│ 	[LH_N]: 1088
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 944 --->
//│ 	[LH_C a⁵ enumFromTo_₀((a⁵ + 1), b²)]: 899
//│ 	[LH_N]: 900
//│ case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₁(f¹², t²²)] | LH_N  => [LH_N]}: 975 --->
//│ 	[LH_C f¹³(h²¹) map_₀(f¹³, t²³)]: 1023
//│ 	[LH_N]: 1024
//│ case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰}: 998 --->
//│ 	[LH_C f¹²(h²⁰) map_₁(f¹², t²²)]: 973
//│ 	[LH_N]: 974
//│ case _lh_max'_arg1¹ of {LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {LH_N  => _lh_max'_LH_C_0² | LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]) | _  => error⁰} | _  => error⁰}: 1000 --->
//│ 	[LH_C f¹²(h²⁰) map_₁(f¹², t²²)]: 973
//│ 	[LH_N]: 974
//│ 	[LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]: 989
//│ 	[LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³]: 994
//│ case _lh_f1_arg1¹ of {LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE_₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)] | _  => error⁰}: 1012 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 929
//│ case ls²⁰ of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_₀(f¹³, t²³)] | LH_N  => [LH_N]}: 1025 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 933
//│ 	[LH_N]: 943
//│ case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs_₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰}: 1042 --->
//│ 	[LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²]: 836
//│ 	[LH_P3 _lh_gcdE_arg2¹ 0 1]: 1096
//│ case _lh_f2_arg1¹ of {LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs_₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰} | _  => error⁰}: 1044 --->
//│ 	[LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE_₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]: 1010
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C a⁵ enumFromTo_₀((a⁵ + 1), b²)]: 899 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 944
//│ [LH_N]: 900 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 944
//│ [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 929 --->
//│ 	case _lh_f1_arg1¹ of {LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE_₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)] | _  => error⁰}: 1012
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 933 --->
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_₀(f¹³, t²³)] | LH_N  => [LH_N]}: 1025
//│ [LH_N]: 943 --->
//│ 	case ls²⁰ of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_₀(f¹³, t²³)] | LH_N  => [LH_N]}: 1025
//│ [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE_₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]: 1010 --->
//│ 	case _lh_f2_arg1¹ of {LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs_₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰} | _  => error⁰}: 1044
//│ [LH_C f¹³(h²¹) map_₀(f¹³, t²³)]: 1023 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₁(f¹², t²²)] | LH_N  => [LH_N]}: 975
//│ [LH_N]: 1024 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₁(f¹², t²²)] | LH_N  => [LH_N]}: 975
//│ [LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]: 1069 --->
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰}: 871
//│ [LH_C a⁶ enumFromTo_₁((a⁶ + 1), b³)]: 1087 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 937
//│ [LH_N]: 1088 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 937
//│ ------------------
//│ case _lh_matchIdent¹ of {LH_P2 _lh_g_LH_P2_0¹ _lh_g_LH_P2_1¹ => g_₀([LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³], [LH_P3 (_lh_g_LH_P3_0² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_0³)) (_lh_g_LH_P3_1² - (_lh_g_LH_P2_0¹ * _lh_g_LH_P3_1³)) _lh_g_LH_P2_1¹]) | _  => error⁰}: 871 --->
//│ 	[LH_P2 div⁰(_lh_quotRem_arg1¹, _lh_quotRem_arg2¹) (_lh_quotRem_arg1¹ % _lh_quotRem_arg2¹)]: 1069
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 937 --->
//│ 	[LH_C a⁶ enumFromTo_₁((a⁶ + 1), b³)]: 1087
//│ 	[LH_N]: 1088
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(ms¹) | LH_N  => [LH_N]}: 944 --->
//│ 	[LH_C a⁵ enumFromTo_₀((a⁵ + 1), b²)]: 899
//│ 	[LH_N]: 900
//│ case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₁(f¹², t²²)] | LH_N  => [LH_N]}: 975 --->
//│ 	[LH_C f¹³(h²¹) map_₀(f¹³, t²³)]: 1023
//│ 	[LH_N]: 1024
//│ case _lh_f1_arg1¹ of {LH_P2 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ => [LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE_₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)] | _  => error⁰}: 1012 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 929
//│ case ls²⁰ of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_₀(f¹³, t²³)] | LH_N  => [LH_N]}: 1025 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 933
//│ 	[LH_N]: 943
//│ case _lh_f2_arg1¹ of {LH_P3 _lh_f2_LH_P3_0² _lh_f2_LH_P3_1² _lh_f2_LH_P3_2² => case _lh_f2_LH_P3_2² of {LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs_₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³)) | _  => error⁰} | _  => error⁰}: 1044 --->
//│ 	[LH_P3 _lh_f1_LH_P2_0¹ _lh_f1_LH_P2_1¹ gcdE_₀(_lh_f1_LH_P2_0¹, _lh_f1_LH_P2_1¹)]: 1010
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testGcd_nofib_₀(primId⁰(200))
//│ def abs_₀(_lh_abs_arg1²) = if (_lh_abs_arg1² < 0) then (0 - _lh_abs_arg1²) else _lh_abs_arg1²
//│ def enumFromTo_₀(a⁸, b⁵) = if (a⁸ <= b⁵) then 
//│ 	let _lh_listcomp_fun_ls_t⁷ = enumFromTo_₀((a⁸ + 1), b⁵)
//│ 	in let _lh_listcomp_fun_ls_h⁷ = a⁸
//│ 	in (fun _lh_listcomp_fun⁹ -> (fun ms³ -> 
//│ 		let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁵ -> _lh_listcomp_fun_para⁵(_lh_listcomp_fun_ls_h⁷, _lh_listcomp_fun¹⁰, _lh_listcomp_fun_ls_t⁷, _lh_listcomp_fun⁹))
//│ 		in _lh_listcomp_fun¹⁰(ms³))) else (fun _lh_listcomp_fun¹¹ -> (fun ms⁴ -> (fun f¹⁷ -> (fun f¹⁸ -> [LH_N]))))
//│ def enumFromTo_₁(a⁷, b⁴) = if (a⁷ <= b⁴) then 
//│ 	let _lh_listcomp_fun_ls_t⁴ = enumFromTo_₁((a⁷ + 1), b⁴)
//│ 	in let _lh_listcomp_fun_ls_h⁴ = a⁷
//│ 	in (fun _lh_listcomp_fun_ls_h⁵ -> (fun _lh_listcomp_fun⁴ -> (fun _lh_listcomp_fun_ls_t⁵ -> (fun _lh_listcomp_fun⁵ -> 
//│ 		let t²⁴ = _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)
//│ 		in let h²² = 	
//│ 			let _lh_f1_LH_P2_1² = _lh_listcomp_fun_ls_h⁴
//│ 			in let _lh_f1_LH_P2_0² = _lh_listcomp_fun_ls_h⁵
//│ 			in (fun _lh_dummy¹ -> 
//│ 				let _lh_f2_LH_P3_2⁴ = gcdE_₀(_lh_f1_LH_P2_0², _lh_f1_LH_P2_1²)
//│ 				in (fun _lh_dummy⁰ -> case _lh_f2_LH_P3_2⁴ of {
//│ 					LH_P3 _lh_f2_LH_P3_0³ _lh_f2_LH_P3_1³ _lh_f2_LH_P3_2³ => abs_₀(((_lh_f2_LH_P3_0³ + _lh_f2_LH_P3_1³) + _lh_f2_LH_P3_2³))
//│ 					| _  => error⁰}))
//│ 		in (fun f¹⁵ -> 
//│ 			let t²⁵ = map_₀(f¹⁵, t²⁴)
//│ 			in let h²³ = f¹⁵(h²²)
//│ 			in (fun f¹⁶ -> [LH_C f¹⁶(h²³) map_₁(f¹⁶, t²⁵)])))))) else (fun _lh_listcomp_fun_ls_h⁶ -> (fun _lh_listcomp_fun⁶ -> (fun _lh_listcomp_fun_ls_t⁶ -> (fun _lh_listcomp_fun⁷ -> _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁶)))))
//│ def f1_₀(_lh_f1_arg1²) = _lh_f1_arg1²(99)
//│ def f2_₀(_lh_f2_arg1²) = _lh_f2_arg1²(99)
//│ def g_₀(_lh_g_arg1², _lh_g_arg2²) = case _lh_g_arg1² of {
//│ 	LH_P3 _lh_g_LH_P3_0² _lh_g_LH_P3_1² _lh_g_LH_P3_2² => case _lh_g_arg2² of {
//│ 		LH_P3 _lh_g_LH_P3_0³ _lh_g_LH_P3_1³ _lh_g_LH_P3_2³ => if (_lh_g_LH_P3_2³ == 0) then [LH_P3 _lh_g_LH_P3_2² _lh_g_LH_P3_0² _lh_g_LH_P3_1²] else 
//│ 			let _lh_matchIdent² = quotRem_₀(_lh_g_LH_P3_2², _lh_g_LH_P3_2³)
//│ 			in _lh_matchIdent²(_lh_g_LH_P3_0², _lh_g_LH_P3_0³, _lh_g_LH_P3_1², _lh_g_LH_P3_1³, _lh_g_LH_P3_2³)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def gcdE_₀(_lh_gcdE_arg1², _lh_gcdE_arg2²) = case _lh_gcdE_arg1² of {
//│ 	0  => [LH_P3 _lh_gcdE_arg2² 0 1]
//│ 	| _  => g_₀([LH_P3 1 0 _lh_gcdE_arg1²], [LH_P3 0 1 _lh_gcdE_arg2²])}
//│ def map_₀(f¹⁴, ls²¹) = ls²¹(f¹⁴)
//│ def map_₁(f¹⁹, ls²²) = ls²²(f¹⁹)
//│ def max'_₀(_lh_max'_arg1²) = case _lh_max'_arg1² of {
//│ 	LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1² => case _lh_max'_LH_C_1² of {
//│ 		LH_N  => _lh_max'_LH_C_0²
//│ 		| LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³ => if (_lh_max'_LH_C_0² < _lh_max'_LH_C_0³) then max'_₀([LH_C _lh_max'_LH_C_0³ _lh_max'_LH_C_1³]) else max'_₀([LH_C _lh_max'_LH_C_0² _lh_max'_LH_C_1³])
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def quotRem_₀(_lh_quotRem_arg1², _lh_quotRem_arg2²) = 
//│ 	let _lh_g_LH_P2_1² = (_lh_quotRem_arg1² % _lh_quotRem_arg2²)
//│ 	in let _lh_g_LH_P2_0² = div⁰(_lh_quotRem_arg1², _lh_quotRem_arg2²)
//│ 	in (fun _lh_g_LH_P3_0⁴ -> (fun _lh_g_LH_P3_0⁵ -> (fun _lh_g_LH_P3_1⁴ -> (fun _lh_g_LH_P3_1⁵ -> (fun _lh_g_LH_P3_2⁴ -> g_₀([LH_P3 _lh_g_LH_P3_0⁵ _lh_g_LH_P3_1⁵ _lh_g_LH_P3_2⁴], [LH_P3 (_lh_g_LH_P3_0⁴ - (_lh_g_LH_P2_0² * _lh_g_LH_P3_0⁵)) (_lh_g_LH_P3_1⁴ - (_lh_g_LH_P2_0² * _lh_g_LH_P3_1⁵)) _lh_g_LH_P2_1²]))))))
//│ def testGcd_nofib_₀(_lh_testGcd_nofib_arg1²) = test_₀(_lh_testGcd_nofib_arg1²)
//│ def test_₀(_lh_test_arg1²) = 
//│ 	let ns² = enumFromTo_₀(5000, (5000 + _lh_test_arg1²))
//│ 	in let ms² = enumFromTo_₁(10000, (10000 + _lh_test_arg1²))
//│ 	in let tripls² = map_₀(f1_₀, 
//│ 		let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁸, ms²))
//│ 		in _lh_listcomp_fun⁸(ns²))
//│ 	in let rs² = map_₁(f2_₀, tripls²)
//│ 	in max'_₀(rs²)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
