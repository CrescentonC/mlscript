:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
runalltests astart astep alim bstart bstep blim = [
                                                      runbench (\a b -> a + b) (\a b -> a + b) "(+)" astart astep alim astart astep alim
                                                    , runbench (\a b -> a - b) (\a b -> a - b) "(-)" astart astep alim astart astep alim
                                                    , runbench (\a b -> a * b) (\a b -> a * b) "(*)" astart astep alim astart astep alim
                                                    , runbench (\a b -> a `div` b) (\a b -> a `div` b) "div" astart astep alim astart astep alim
                                                    , runbench (\a b -> a `mod` b) (\a b -> a `mod` b) "mod" astart astep alim astart astep alim
                                                    , runbench (\a b -> a == b) (\a b -> a == b) "(==)" astart astep alim astart astep alim
                                                    , runbench (\a b -> a < b) (\a b -> a < b) "(<)" astart astep alim astart astep alim
                                                    , runbench (\a b -> a <= b) (\a b -> a <= b) "(<=)" astart astep alim astart astep alim
                                                    , runbench (\a b -> a > b) (\a b -> a > b) "(>)" astart astep alim astart astep alim
                                                    , runbench (\a b -> a >= b) (\a b -> a >= b) "(>=)" astart astep alim astart astep alim
                                                  ]
runbench jop iop opstr astart astep alim bstart bstep blim =
  let _dum = (intbench iop astart astep alim astart astep alim, integerbench jop astart astep alim astart astep alim) in 0
integerbench op astart astep alim bstart bstep blim =
    [ op a b | a <- [ astart,astart+astep..alim ], b <- [ bstart,astart+bstep..blim ]]
intbench op astart astep alim bstart bstep blim =
    [ op a b | a <- [astart,astart+astep..alim ] , b <- [bstart,astart+bstep..blim ]]
testInteger_nofib n = runalltests (0 - n) 31 (0 + n) (0 - n) 31 (0 + n)
testInteger_nofib $ primId 3000
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testInteger_nofib_lh_₁^979(primId⁰(3000))
//│ def enumFromThenTo_lh_₁(a⁰, t⁰, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromThenTo_lh_₁^7(t⁰, ((2 * t⁰) - a⁰), b⁰)] else [LH_N]
//│ def intbench_lh_₁(_lh_intbench_arg1⁰, _lh_intbench_arg2⁰, _lh_intbench_arg3⁰, _lh_intbench_arg4⁰, _lh_intbench_arg5⁰, _lh_intbench_arg6⁰, _lh_intbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 			let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 				| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 			in _lh_listcomp_fun³(enumFromThenTo_lh_₁^99(_lh_intbench_arg5⁰, (_lh_intbench_arg2⁰ + _lh_intbench_arg6⁰), _lh_intbench_arg7⁰))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(enumFromThenTo_lh_₁^116(_lh_intbench_arg2⁰, (_lh_intbench_arg2⁰ + _lh_intbench_arg3⁰), _lh_intbench_arg4⁰))
//│ def integerbench_lh_₁(_lh_integerbench_arg1⁰, _lh_integerbench_arg2⁰, _lh_integerbench_arg3⁰, _lh_integerbench_arg4⁰, _lh_integerbench_arg5⁰, _lh_integerbench_arg6⁰, _lh_integerbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 			let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 				| LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ 			in _lh_listcomp_fun¹(enumFromThenTo_lh_₁^45(_lh_integerbench_arg5⁰, (_lh_integerbench_arg2⁰ + _lh_integerbench_arg6⁰), _lh_integerbench_arg7⁰))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(enumFromThenTo_lh_₁^62(_lh_integerbench_arg2⁰, (_lh_integerbench_arg2⁰ + _lh_integerbench_arg3⁰), _lh_integerbench_arg4⁰))
//│ def runalltests_lh_₁(_lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg4⁰, _lh_runalltests_arg5⁰, _lh_runalltests_arg6⁰) = [LH_C runbench_lh_₁₀^556((fun a¹ -> (fun b¹ -> (a¹ + b¹))), (fun a² -> (fun b² -> (a² + b²))), [LH_C '(' [LH_C '+' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₂^593((fun a³ -> (fun b³ -> (a³ - b³))), (fun a⁴ -> (fun b⁴ -> (a⁴ - b⁴))), [LH_C '(' [LH_C '-' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₄^630((fun a⁵ -> (fun b⁵ -> (a⁵ * b⁵))), (fun a⁶ -> (fun b⁶ -> (a⁶ * b⁶))), [LH_C '(' [LH_C '*' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₅^667((fun a⁷ -> (fun b⁷ -> div⁰(a⁷, b⁷))), (fun a⁸ -> (fun b⁸ -> div⁰(a⁸, b⁸))), [LH_C 'd' [LH_C 'i' [LH_C 'v' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₉^704((fun a⁹ -> (fun b⁹ -> (a⁹ % b⁹))), (fun a¹⁰ -> (fun b¹⁰ -> (a¹⁰ % b¹⁰))), [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₆^741((fun a¹¹ -> (fun b¹¹ -> (a¹¹ == b¹¹))), (fun a¹² -> (fun b¹² -> (a¹² == b¹²))), [LH_C '(' [LH_C '=' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₃^780((fun a¹³ -> (fun b¹³ -> (a¹³ < b¹³))), (fun a¹⁴ -> (fun b¹⁴ -> (a¹⁴ < b¹⁴))), [LH_C '(' [LH_C '<' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₈^817((fun a¹⁵ -> (fun b¹⁵ -> (a¹⁵ <= b¹⁵))), (fun a¹⁶ -> (fun b¹⁶ -> (a¹⁶ <= b¹⁶))), [LH_C '(' [LH_C '<' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₁^856((fun a¹⁷ -> (fun b¹⁷ -> (a¹⁷ > b¹⁷))), (fun a¹⁸ -> (fun b¹⁸ -> (a¹⁸ > b¹⁸))), [LH_C '(' [LH_C '>' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₇^893((fun a¹⁹ -> (fun b¹⁹ -> (a¹⁹ >= b¹⁹))), (fun a²⁰ -> (fun b²⁰ -> (a²⁰ >= b²⁰))), [LH_C '(' [LH_C '>' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_N]]]]]]]]]]]
//│ def runbench_lh_₁(_lh_runbench_arg1⁹, _lh_runbench_arg2⁹, _lh_runbench_arg3⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg7⁹, _lh_runbench_arg8⁹, _lh_runbench_arg9⁹) = 
//│ 	let _dum⁹ = [LH_P2 intbench_lh_₁^514(_lh_runbench_arg2⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹) integerbench_lh_₁^529(_lh_runbench_arg1⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹)]
//│ 	in 0
//│ def runbench_lh_₁₀(_lh_runbench_arg1⁰, _lh_runbench_arg2⁰, _lh_runbench_arg3⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg7⁰, _lh_runbench_arg8⁰, _lh_runbench_arg9⁰) = 
//│ 	let _dum⁰ = [LH_P2 intbench_lh_₁^136(_lh_runbench_arg2⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰) integerbench_lh_₁^151(_lh_runbench_arg1⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰)]
//│ 	in 0
//│ def runbench_lh_₂(_lh_runbench_arg1⁸, _lh_runbench_arg2⁸, _lh_runbench_arg3⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg7⁸, _lh_runbench_arg8⁸, _lh_runbench_arg9⁸) = 
//│ 	let _dum⁸ = [LH_P2 intbench_lh_₁^472(_lh_runbench_arg2⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸) integerbench_lh_₁^487(_lh_runbench_arg1⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸)]
//│ 	in 0
//│ def runbench_lh_₃(_lh_runbench_arg1⁷, _lh_runbench_arg2⁷, _lh_runbench_arg3⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg7⁷, _lh_runbench_arg8⁷, _lh_runbench_arg9⁷) = 
//│ 	let _dum⁷ = [LH_P2 intbench_lh_₁^430(_lh_runbench_arg2⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷) integerbench_lh_₁^445(_lh_runbench_arg1⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷)]
//│ 	in 0
//│ def runbench_lh_₄(_lh_runbench_arg1⁶, _lh_runbench_arg2⁶, _lh_runbench_arg3⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg7⁶, _lh_runbench_arg8⁶, _lh_runbench_arg9⁶) = 
//│ 	let _dum⁶ = [LH_P2 intbench_lh_₁^388(_lh_runbench_arg2⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶) integerbench_lh_₁^403(_lh_runbench_arg1⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶)]
//│ 	in 0
//│ def runbench_lh_₅(_lh_runbench_arg1⁵, _lh_runbench_arg2⁵, _lh_runbench_arg3⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg7⁵, _lh_runbench_arg8⁵, _lh_runbench_arg9⁵) = 
//│ 	let _dum⁵ = [LH_P2 intbench_lh_₁^346(_lh_runbench_arg2⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵) integerbench_lh_₁^361(_lh_runbench_arg1⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵)]
//│ 	in 0
//│ def runbench_lh_₆(_lh_runbench_arg1⁴, _lh_runbench_arg2⁴, _lh_runbench_arg3⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg7⁴, _lh_runbench_arg8⁴, _lh_runbench_arg9⁴) = 
//│ 	let _dum⁴ = [LH_P2 intbench_lh_₁^304(_lh_runbench_arg2⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴) integerbench_lh_₁^319(_lh_runbench_arg1⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴)]
//│ 	in 0
//│ def runbench_lh_₇(_lh_runbench_arg1³, _lh_runbench_arg2³, _lh_runbench_arg3³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg7³, _lh_runbench_arg8³, _lh_runbench_arg9³) = 
//│ 	let _dum³ = [LH_P2 intbench_lh_₁^262(_lh_runbench_arg2³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³) integerbench_lh_₁^277(_lh_runbench_arg1³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³)]
//│ 	in 0
//│ def runbench_lh_₈(_lh_runbench_arg1², _lh_runbench_arg2², _lh_runbench_arg3², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg7², _lh_runbench_arg8², _lh_runbench_arg9²) = 
//│ 	let _dum² = [LH_P2 intbench_lh_₁^220(_lh_runbench_arg2², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²) integerbench_lh_₁^235(_lh_runbench_arg1², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²)]
//│ 	in 0
//│ def runbench_lh_₉(_lh_runbench_arg1¹, _lh_runbench_arg2¹, _lh_runbench_arg3¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg7¹, _lh_runbench_arg8¹, _lh_runbench_arg9¹) = 
//│ 	let _dum¹ = [LH_P2 intbench_lh_₁^178(_lh_runbench_arg2¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹) integerbench_lh_₁^193(_lh_runbench_arg1¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹)]
//│ 	in 0
//│ def testInteger_nofib_lh_₁(_lh_testInteger_nofib_arg1⁰) = runalltests_lh_₁^949((0 - _lh_testInteger_nofib_arg1⁰), 31, (0 + _lh_testInteger_nofib_arg1⁰), (0 - _lh_testInteger_nofib_arg1⁰), 31, (0 + _lh_testInteger_nofib_arg1⁰))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec enumFromThenTo_lh__d1 a_0 t_0 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, (((enumFromThenTo_lh__d1 t_0) ((2 * t_0) - a_0)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec intbench_lh__d1 _lh_intbench_arg1_0 _lh_intbench_arg2_0 _lh_intbench_arg3_0 _lh_intbench_arg4_0 _lh_intbench_arg5_0 _lh_intbench_arg6_0 _lh_intbench_arg7_0 =
//│ 		  (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		    (match _lh_listcomp_fun_para_2 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		        (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		          (match _lh_listcomp_fun_para_3 with
//│ 		            | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		              (`LH_C(((_lh_intbench_arg1_0 _lh_listcomp_fun_ls_h_2) _lh_listcomp_fun_ls_h_3), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		            | `LH_N -> 
//│ 		              (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))) in
//│ 		          (_lh_listcomp_fun_3 (((enumFromThenTo_lh__d1 _lh_intbench_arg5_0) (_lh_intbench_arg2_0 + _lh_intbench_arg6_0)) _lh_intbench_arg7_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_2 (((enumFromThenTo_lh__d1 _lh_intbench_arg2_0) (_lh_intbench_arg2_0 + _lh_intbench_arg3_0)) _lh_intbench_arg4_0)));;
//│ 		let rec integerbench_lh__d1 _lh_integerbench_arg1_0 _lh_integerbench_arg2_0 _lh_integerbench_arg3_0 _lh_integerbench_arg4_0 _lh_integerbench_arg5_0 _lh_integerbench_arg6_0 _lh_integerbench_arg7_0 =
//│ 		  (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		    (match _lh_listcomp_fun_para_0 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		        (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		          (match _lh_listcomp_fun_para_1 with
//│ 		            | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		              (`LH_C(((_lh_integerbench_arg1_0 _lh_listcomp_fun_ls_h_0) _lh_listcomp_fun_ls_h_1), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		            | `LH_N -> 
//│ 		              (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))) in
//│ 		          (_lh_listcomp_fun_1 (((enumFromThenTo_lh__d1 _lh_integerbench_arg5_0) (_lh_integerbench_arg2_0 + _lh_integerbench_arg6_0)) _lh_integerbench_arg7_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_0 (((enumFromThenTo_lh__d1 _lh_integerbench_arg2_0) (_lh_integerbench_arg2_0 + _lh_integerbench_arg3_0)) _lh_integerbench_arg4_0)));;
//│ 		let rec runbench_lh__d4 _lh_runbench_arg1_6 _lh_runbench_arg2_6 _lh_runbench_arg3_6 _lh_runbench_arg4_6 _lh_runbench_arg5_6 _lh_runbench_arg6_6 _lh_runbench_arg7_6 _lh_runbench_arg8_6 _lh_runbench_arg9_6 =
//│ 		  (let rec _dum_6 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_6) _lh_runbench_arg4_6) _lh_runbench_arg5_6) _lh_runbench_arg6_6) _lh_runbench_arg4_6) _lh_runbench_arg5_6) _lh_runbench_arg6_6), (((((((integerbench_lh__d1 _lh_runbench_arg1_6) _lh_runbench_arg4_6) _lh_runbench_arg5_6) _lh_runbench_arg6_6) _lh_runbench_arg4_6) _lh_runbench_arg5_6) _lh_runbench_arg6_6))) in
//│ 		    0);;
//│ 		let rec runbench_lh__d6 _lh_runbench_arg1_4 _lh_runbench_arg2_4 _lh_runbench_arg3_4 _lh_runbench_arg4_4 _lh_runbench_arg5_4 _lh_runbench_arg6_4 _lh_runbench_arg7_4 _lh_runbench_arg8_4 _lh_runbench_arg9_4 =
//│ 		  (let rec _dum_4 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_4) _lh_runbench_arg4_4) _lh_runbench_arg5_4) _lh_runbench_arg6_4) _lh_runbench_arg4_4) _lh_runbench_arg5_4) _lh_runbench_arg6_4), (((((((integerbench_lh__d1 _lh_runbench_arg1_4) _lh_runbench_arg4_4) _lh_runbench_arg5_4) _lh_runbench_arg6_4) _lh_runbench_arg4_4) _lh_runbench_arg5_4) _lh_runbench_arg6_4))) in
//│ 		    0);;
//│ 		let rec runbench_lh__d7 _lh_runbench_arg1_3 _lh_runbench_arg2_3 _lh_runbench_arg3_3 _lh_runbench_arg4_3 _lh_runbench_arg5_3 _lh_runbench_arg6_3 _lh_runbench_arg7_3 _lh_runbench_arg8_3 _lh_runbench_arg9_3 =
//│ 		  (let rec _dum_3 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_3) _lh_runbench_arg4_3) _lh_runbench_arg5_3) _lh_runbench_arg6_3) _lh_runbench_arg4_3) _lh_runbench_arg5_3) _lh_runbench_arg6_3), (((((((integerbench_lh__d1 _lh_runbench_arg1_3) _lh_runbench_arg4_3) _lh_runbench_arg5_3) _lh_runbench_arg6_3) _lh_runbench_arg4_3) _lh_runbench_arg5_3) _lh_runbench_arg6_3))) in
//│ 		    0);;
//│ 		let rec runbench_lh__d9 _lh_runbench_arg1_1 _lh_runbench_arg2_1 _lh_runbench_arg3_1 _lh_runbench_arg4_1 _lh_runbench_arg5_1 _lh_runbench_arg6_1 _lh_runbench_arg7_1 _lh_runbench_arg8_1 _lh_runbench_arg9_1 =
//│ 		  (let rec _dum_1 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_1) _lh_runbench_arg4_1) _lh_runbench_arg5_1) _lh_runbench_arg6_1) _lh_runbench_arg4_1) _lh_runbench_arg5_1) _lh_runbench_arg6_1), (((((((integerbench_lh__d1 _lh_runbench_arg1_1) _lh_runbench_arg4_1) _lh_runbench_arg5_1) _lh_runbench_arg6_1) _lh_runbench_arg4_1) _lh_runbench_arg5_1) _lh_runbench_arg6_1))) in
//│ 		    0);;
//│ 		let rec runbench_lh__d1 _lh_runbench_arg1_9 _lh_runbench_arg2_9 _lh_runbench_arg3_9 _lh_runbench_arg4_9 _lh_runbench_arg5_9 _lh_runbench_arg6_9 _lh_runbench_arg7_9 _lh_runbench_arg8_9 _lh_runbench_arg9_9 =
//│ 		  (let rec _dum_9 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_9) _lh_runbench_arg4_9) _lh_runbench_arg5_9) _lh_runbench_arg6_9) _lh_runbench_arg4_9) _lh_runbench_arg5_9) _lh_runbench_arg6_9), (((((((integerbench_lh__d1 _lh_runbench_arg1_9) _lh_runbench_arg4_9) _lh_runbench_arg5_9) _lh_runbench_arg6_9) _lh_runbench_arg4_9) _lh_runbench_arg5_9) _lh_runbench_arg6_9))) in
//│ 		    0);;
//│ 		let rec runbench_lh__d5 _lh_runbench_arg1_5 _lh_runbench_arg2_5 _lh_runbench_arg3_5 _lh_runbench_arg4_5 _lh_runbench_arg5_5 _lh_runbench_arg6_5 _lh_runbench_arg7_5 _lh_runbench_arg8_5 _lh_runbench_arg9_5 =
//│ 		  (let rec _dum_5 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_5) _lh_runbench_arg4_5) _lh_runbench_arg5_5) _lh_runbench_arg6_5) _lh_runbench_arg4_5) _lh_runbench_arg5_5) _lh_runbench_arg6_5), (((((((integerbench_lh__d1 _lh_runbench_arg1_5) _lh_runbench_arg4_5) _lh_runbench_arg5_5) _lh_runbench_arg6_5) _lh_runbench_arg4_5) _lh_runbench_arg5_5) _lh_runbench_arg6_5))) in
//│ 		    0);;
//│ 		let rec runbench_lh__d1_d0 _lh_runbench_arg1_0 _lh_runbench_arg2_0 _lh_runbench_arg3_0 _lh_runbench_arg4_0 _lh_runbench_arg5_0 _lh_runbench_arg6_0 _lh_runbench_arg7_0 _lh_runbench_arg8_0 _lh_runbench_arg9_0 =
//│ 		  (let rec _dum_0 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0), (((((((integerbench_lh__d1 _lh_runbench_arg1_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0))) in
//│ 		    0);;
//│ 		let rec runbench_lh__d2 _lh_runbench_arg1_8 _lh_runbench_arg2_8 _lh_runbench_arg3_8 _lh_runbench_arg4_8 _lh_runbench_arg5_8 _lh_runbench_arg6_8 _lh_runbench_arg7_8 _lh_runbench_arg8_8 _lh_runbench_arg9_8 =
//│ 		  (let rec _dum_8 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_8) _lh_runbench_arg4_8) _lh_runbench_arg5_8) _lh_runbench_arg6_8) _lh_runbench_arg4_8) _lh_runbench_arg5_8) _lh_runbench_arg6_8), (((((((integerbench_lh__d1 _lh_runbench_arg1_8) _lh_runbench_arg4_8) _lh_runbench_arg5_8) _lh_runbench_arg6_8) _lh_runbench_arg4_8) _lh_runbench_arg5_8) _lh_runbench_arg6_8))) in
//│ 		    0);;
//│ 		let rec runbench_lh__d3 _lh_runbench_arg1_7 _lh_runbench_arg2_7 _lh_runbench_arg3_7 _lh_runbench_arg4_7 _lh_runbench_arg5_7 _lh_runbench_arg6_7 _lh_runbench_arg7_7 _lh_runbench_arg8_7 _lh_runbench_arg9_7 =
//│ 		  (let rec _dum_7 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_7) _lh_runbench_arg4_7) _lh_runbench_arg5_7) _lh_runbench_arg6_7) _lh_runbench_arg4_7) _lh_runbench_arg5_7) _lh_runbench_arg6_7), (((((((integerbench_lh__d1 _lh_runbench_arg1_7) _lh_runbench_arg4_7) _lh_runbench_arg5_7) _lh_runbench_arg6_7) _lh_runbench_arg4_7) _lh_runbench_arg5_7) _lh_runbench_arg6_7))) in
//│ 		    0);;
//│ 		let rec runbench_lh__d8 _lh_runbench_arg1_2 _lh_runbench_arg2_2 _lh_runbench_arg3_2 _lh_runbench_arg4_2 _lh_runbench_arg5_2 _lh_runbench_arg6_2 _lh_runbench_arg7_2 _lh_runbench_arg8_2 _lh_runbench_arg9_2 =
//│ 		  (let rec _dum_2 = (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_2) _lh_runbench_arg4_2) _lh_runbench_arg5_2) _lh_runbench_arg6_2) _lh_runbench_arg4_2) _lh_runbench_arg5_2) _lh_runbench_arg6_2), (((((((integerbench_lh__d1 _lh_runbench_arg1_2) _lh_runbench_arg4_2) _lh_runbench_arg5_2) _lh_runbench_arg6_2) _lh_runbench_arg4_2) _lh_runbench_arg5_2) _lh_runbench_arg6_2))) in
//│ 		    0);;
//│ 		let rec runalltests_lh__d1 _lh_runalltests_arg1_0 _lh_runalltests_arg2_0 _lh_runalltests_arg3_0 _lh_runalltests_arg4_0 _lh_runalltests_arg5_0 _lh_runalltests_arg6_0 =
//│ 		  (`LH_C((((((((((runbench_lh__d1_d0 (fun a_1 b_1 -> 
//│ 		    (a_1 + b_1))) (fun a_2 b_2 -> 
//│ 		    (a_2 + b_2))) (`LH_C('(', (`LH_C('+', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh__d2 (fun a_3 b_3 -> 
//│ 		    (a_3 - b_3))) (fun a_4 b_4 -> 
//│ 		    (a_4 - b_4))) (`LH_C('(', (`LH_C('-', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh__d4 (fun a_5 b_5 -> 
//│ 		    (a_5 * b_5))) (fun a_6 b_6 -> 
//│ 		    (a_6 * b_6))) (`LH_C('(', (`LH_C('*', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh__d5 (fun a_7 b_7 -> 
//│ 		    (a_7 / b_7))) (fun a_8 b_8 -> 
//│ 		    (a_8 / b_8))) (`LH_C('d', (`LH_C('i', (`LH_C('v', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh__d9 (fun a_9 b_9 -> 
//│ 		    (a_9 mod b_9))) (fun a_1_0 b_1_0 -> 
//│ 		    (a_1_0 mod b_1_0))) (`LH_C('m', (`LH_C('o', (`LH_C('d', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh__d6 (fun a_1_1 b_1_1 -> 
//│ 		    (a_1_1 = b_1_1))) (fun a_1_2 b_1_2 -> 
//│ 		    (a_1_2 = b_1_2))) (`LH_C('(', (`LH_C('=', (`LH_C('=', (`LH_C(')', (`LH_N)))))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh__d3 (fun a_1_3 b_1_3 -> 
//│ 		    (a_1_3 < b_1_3))) (fun a_1_4 b_1_4 -> 
//│ 		    (a_1_4 < b_1_4))) (`LH_C('(', (`LH_C('<', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh__d8 (fun a_1_5 b_1_5 -> 
//│ 		    (a_1_5 <= b_1_5))) (fun a_1_6 b_1_6 -> 
//│ 		    (a_1_6 <= b_1_6))) (`LH_C('(', (`LH_C('<', (`LH_C('=', (`LH_C(')', (`LH_N)))))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh__d1 (fun a_1_7 b_1_7 -> 
//│ 		    (a_1_7 > b_1_7))) (fun a_1_8 b_1_8 -> 
//│ 		    (a_1_8 > b_1_8))) (`LH_C('(', (`LH_C('>', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh__d7 (fun a_1_9 b_1_9 -> 
//│ 		    (a_1_9 >= b_1_9))) (fun a_2_0 b_2_0 -> 
//│ 		    (a_2_0 >= b_2_0))) (`LH_C('(', (`LH_C('>', (`LH_C('=', (`LH_C(')', (`LH_N)))))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_N)))))))))))))))))))));;
//│ 		let rec testInteger_nofib_lh__d1 _lh_testInteger_nofib_arg1_0 =
//│ 		  ((((((runalltests_lh__d1 (0 - _lh_testInteger_nofib_arg1_0)) 31) (0 + _lh_testInteger_nofib_arg1_0)) (0 - _lh_testInteger_nofib_arg1_0)) 31) (0 + _lh_testInteger_nofib_arg1_0));;
//│ 		(testInteger_nofib_lh__d1 3000)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C a⁰ enumFromThenTo_lh_₁(t⁰, ((2 * t⁰) - a⁰), b⁰)]: 22 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 42
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(enumFromThenTo_lh_₁(_lh_integerbench_arg5⁰, (_lh_integerbench_arg2⁰ + _lh_integerbench_arg6⁰), _lh_integerbench_arg7⁰)) | LH_N  => [LH_N]}: 59
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 96
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(enumFromThenTo_lh_₁(_lh_intbench_arg5⁰, (_lh_intbench_arg2⁰ + _lh_intbench_arg6⁰), _lh_intbench_arg7⁰)) | LH_N  => [LH_N]}: 113
//│ [LH_N]: 23 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 42
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(enumFromThenTo_lh_₁(_lh_integerbench_arg5⁰, (_lh_integerbench_arg2⁰ + _lh_integerbench_arg6⁰), _lh_integerbench_arg7⁰)) | LH_N  => [LH_N]}: 59
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 96
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(enumFromThenTo_lh_₁(_lh_intbench_arg5⁰, (_lh_intbench_arg2⁰ + _lh_intbench_arg6⁰), _lh_intbench_arg7⁰)) | LH_N  => [LH_N]}: 113
//│ ------------------
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 42 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh_₁(t⁰, ((2 * t⁰) - a⁰), b⁰)]: 22
//│ 	[LH_N]: 23
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(enumFromThenTo_lh_₁(_lh_integerbench_arg5⁰, (_lh_integerbench_arg2⁰ + _lh_integerbench_arg6⁰), _lh_integerbench_arg7⁰)) | LH_N  => [LH_N]}: 59 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh_₁(t⁰, ((2 * t⁰) - a⁰), b⁰)]: 22
//│ 	[LH_N]: 23
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 96 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh_₁(t⁰, ((2 * t⁰) - a⁰), b⁰)]: 22
//│ 	[LH_N]: 23
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(enumFromThenTo_lh_₁(_lh_intbench_arg5⁰, (_lh_intbench_arg2⁰ + _lh_intbench_arg6⁰), _lh_intbench_arg7⁰)) | LH_N  => [LH_N]}: 113 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh_₁(t⁰, ((2 * t⁰) - a⁰), b⁰)]: 22
//│ 	[LH_N]: 23
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testInteger_nofib_lh_₁(primId⁰(3000))
//│ def enumFromThenTo_lh_₁(a⁴¹, t¹, b⁴¹) = if (a⁴¹ <= b⁴¹) then [LH_C a⁴¹ enumFromThenTo_lh_₁(t¹, ((2 * t¹) - a⁴¹), b⁴¹)] else [LH_N]
//│ def intbench_lh_₁(_lh_intbench_arg1¹, _lh_intbench_arg2¹, _lh_intbench_arg3¹, _lh_intbench_arg4¹, _lh_intbench_arg5¹, _lh_intbench_arg6¹, _lh_intbench_arg7¹) = 
//│ 	let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 			let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_intbench_arg1¹(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t³)]
//│ 				| LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t²)})
//│ 			in _lh_listcomp_fun⁵(enumFromThenTo_lh_₁(_lh_intbench_arg5¹, (_lh_intbench_arg2¹ + _lh_intbench_arg6¹), _lh_intbench_arg7¹))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁴(enumFromThenTo_lh_₁(_lh_intbench_arg2¹, (_lh_intbench_arg2¹ + _lh_intbench_arg3¹), _lh_intbench_arg4¹))
//│ def integerbench_lh_₁(_lh_integerbench_arg1¹, _lh_integerbench_arg2¹, _lh_integerbench_arg3¹, _lh_integerbench_arg4¹, _lh_integerbench_arg5¹, _lh_integerbench_arg6¹, _lh_integerbench_arg7¹) = 
//│ 	let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 			let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_integerbench_arg1¹(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t¹)]
//│ 				| LH_N  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁰)})
//│ 			in _lh_listcomp_fun⁷(enumFromThenTo_lh_₁(_lh_integerbench_arg5¹, (_lh_integerbench_arg2¹ + _lh_integerbench_arg6¹), _lh_integerbench_arg7¹))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁶(enumFromThenTo_lh_₁(_lh_integerbench_arg2¹, (_lh_integerbench_arg2¹ + _lh_integerbench_arg3¹), _lh_integerbench_arg4¹))
//│ def runalltests_lh_₁(_lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg4¹, _lh_runalltests_arg5¹, _lh_runalltests_arg6¹) = [LH_C runbench_lh_₁₀((fun a²¹ -> (fun b²¹ -> (a²¹ + b²¹))), (fun a²² -> (fun b²² -> (a²² + b²²))), [LH_C '(' [LH_C '+' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_C runbench_lh_₂((fun a²³ -> (fun b²³ -> (a²³ - b²³))), (fun a²⁴ -> (fun b²⁴ -> (a²⁴ - b²⁴))), [LH_C '(' [LH_C '-' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_C runbench_lh_₄((fun a²⁵ -> (fun b²⁵ -> (a²⁵ * b²⁵))), (fun a²⁶ -> (fun b²⁶ -> (a²⁶ * b²⁶))), [LH_C '(' [LH_C '*' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_C runbench_lh_₅((fun a²⁷ -> (fun b²⁷ -> div⁰(a²⁷, b²⁷))), (fun a²⁸ -> (fun b²⁸ -> div⁰(a²⁸, b²⁸))), [LH_C 'd' [LH_C 'i' [LH_C 'v' [LH_N]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_C runbench_lh_₉((fun a²⁹ -> (fun b²⁹ -> (a²⁹ % b²⁹))), (fun a³⁰ -> (fun b³⁰ -> (a³⁰ % b³⁰))), [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_N]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_C runbench_lh_₆((fun a³¹ -> (fun b³¹ -> (a³¹ == b³¹))), (fun a³² -> (fun b³² -> (a³² == b³²))), [LH_C '(' [LH_C '=' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_C runbench_lh_₃((fun a³³ -> (fun b³³ -> (a³³ < b³³))), (fun a³⁴ -> (fun b³⁴ -> (a³⁴ < b³⁴))), [LH_C '(' [LH_C '<' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_C runbench_lh_₈((fun a³⁵ -> (fun b³⁵ -> (a³⁵ <= b³⁵))), (fun a³⁶ -> (fun b³⁶ -> (a³⁶ <= b³⁶))), [LH_C '(' [LH_C '<' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_C runbench_lh_₁((fun a³⁷ -> (fun b³⁷ -> (a³⁷ > b³⁷))), (fun a³⁸ -> (fun b³⁸ -> (a³⁸ > b³⁸))), [LH_C '(' [LH_C '>' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_C runbench_lh_₇((fun a³⁹ -> (fun b³⁹ -> (a³⁹ >= b³⁹))), (fun a⁴⁰ -> (fun b⁴⁰ -> (a⁴⁰ >= b⁴⁰))), [LH_C '(' [LH_C '>' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹, _lh_runalltests_arg1¹, _lh_runalltests_arg2¹, _lh_runalltests_arg3¹) [LH_N]]]]]]]]]]]
//│ def runbench_lh_₁(_lh_runbench_arg1¹³, _lh_runbench_arg2¹³, _lh_runbench_arg3¹³, _lh_runbench_arg4¹³, _lh_runbench_arg5¹³, _lh_runbench_arg6¹³, _lh_runbench_arg7¹³, _lh_runbench_arg8¹³, _lh_runbench_arg9¹³) = 
//│ 	let _dum¹³ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹³, _lh_runbench_arg4¹³, _lh_runbench_arg5¹³, _lh_runbench_arg6¹³, _lh_runbench_arg4¹³, _lh_runbench_arg5¹³, _lh_runbench_arg6¹³) integerbench_lh_₁(_lh_runbench_arg1¹³, _lh_runbench_arg4¹³, _lh_runbench_arg5¹³, _lh_runbench_arg6¹³, _lh_runbench_arg4¹³, _lh_runbench_arg5¹³, _lh_runbench_arg6¹³)]
//│ 	in 0
//│ def runbench_lh_₁₀(_lh_runbench_arg1¹⁹, _lh_runbench_arg2¹⁹, _lh_runbench_arg3¹⁹, _lh_runbench_arg4¹⁹, _lh_runbench_arg5¹⁹, _lh_runbench_arg6¹⁹, _lh_runbench_arg7¹⁹, _lh_runbench_arg8¹⁹, _lh_runbench_arg9¹⁹) = 
//│ 	let _dum¹⁹ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹⁹, _lh_runbench_arg4¹⁹, _lh_runbench_arg5¹⁹, _lh_runbench_arg6¹⁹, _lh_runbench_arg4¹⁹, _lh_runbench_arg5¹⁹, _lh_runbench_arg6¹⁹) integerbench_lh_₁(_lh_runbench_arg1¹⁹, _lh_runbench_arg4¹⁹, _lh_runbench_arg5¹⁹, _lh_runbench_arg6¹⁹, _lh_runbench_arg4¹⁹, _lh_runbench_arg5¹⁹, _lh_runbench_arg6¹⁹)]
//│ 	in 0
//│ def runbench_lh_₂(_lh_runbench_arg1¹⁵, _lh_runbench_arg2¹⁵, _lh_runbench_arg3¹⁵, _lh_runbench_arg4¹⁵, _lh_runbench_arg5¹⁵, _lh_runbench_arg6¹⁵, _lh_runbench_arg7¹⁵, _lh_runbench_arg8¹⁵, _lh_runbench_arg9¹⁵) = 
//│ 	let _dum¹⁵ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹⁵, _lh_runbench_arg4¹⁵, _lh_runbench_arg5¹⁵, _lh_runbench_arg6¹⁵, _lh_runbench_arg4¹⁵, _lh_runbench_arg5¹⁵, _lh_runbench_arg6¹⁵) integerbench_lh_₁(_lh_runbench_arg1¹⁵, _lh_runbench_arg4¹⁵, _lh_runbench_arg5¹⁵, _lh_runbench_arg6¹⁵, _lh_runbench_arg4¹⁵, _lh_runbench_arg5¹⁵, _lh_runbench_arg6¹⁵)]
//│ 	in 0
//│ def runbench_lh_₃(_lh_runbench_arg1¹⁷, _lh_runbench_arg2¹⁷, _lh_runbench_arg3¹⁷, _lh_runbench_arg4¹⁷, _lh_runbench_arg5¹⁷, _lh_runbench_arg6¹⁷, _lh_runbench_arg7¹⁷, _lh_runbench_arg8¹⁷, _lh_runbench_arg9¹⁷) = 
//│ 	let _dum¹⁷ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹⁷, _lh_runbench_arg4¹⁷, _lh_runbench_arg5¹⁷, _lh_runbench_arg6¹⁷, _lh_runbench_arg4¹⁷, _lh_runbench_arg5¹⁷, _lh_runbench_arg6¹⁷) integerbench_lh_₁(_lh_runbench_arg1¹⁷, _lh_runbench_arg4¹⁷, _lh_runbench_arg5¹⁷, _lh_runbench_arg6¹⁷, _lh_runbench_arg4¹⁷, _lh_runbench_arg5¹⁷, _lh_runbench_arg6¹⁷)]
//│ 	in 0
//│ def runbench_lh_₄(_lh_runbench_arg1¹⁰, _lh_runbench_arg2¹⁰, _lh_runbench_arg3¹⁰, _lh_runbench_arg4¹⁰, _lh_runbench_arg5¹⁰, _lh_runbench_arg6¹⁰, _lh_runbench_arg7¹⁰, _lh_runbench_arg8¹⁰, _lh_runbench_arg9¹⁰) = 
//│ 	let _dum¹⁰ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹⁰, _lh_runbench_arg4¹⁰, _lh_runbench_arg5¹⁰, _lh_runbench_arg6¹⁰, _lh_runbench_arg4¹⁰, _lh_runbench_arg5¹⁰, _lh_runbench_arg6¹⁰) integerbench_lh_₁(_lh_runbench_arg1¹⁰, _lh_runbench_arg4¹⁰, _lh_runbench_arg5¹⁰, _lh_runbench_arg6¹⁰, _lh_runbench_arg4¹⁰, _lh_runbench_arg5¹⁰, _lh_runbench_arg6¹⁰)]
//│ 	in 0
//│ def runbench_lh_₅(_lh_runbench_arg1¹⁴, _lh_runbench_arg2¹⁴, _lh_runbench_arg3¹⁴, _lh_runbench_arg4¹⁴, _lh_runbench_arg5¹⁴, _lh_runbench_arg6¹⁴, _lh_runbench_arg7¹⁴, _lh_runbench_arg8¹⁴, _lh_runbench_arg9¹⁴) = 
//│ 	let _dum¹⁴ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹⁴, _lh_runbench_arg4¹⁴, _lh_runbench_arg5¹⁴, _lh_runbench_arg6¹⁴, _lh_runbench_arg4¹⁴, _lh_runbench_arg5¹⁴, _lh_runbench_arg6¹⁴) integerbench_lh_₁(_lh_runbench_arg1¹⁴, _lh_runbench_arg4¹⁴, _lh_runbench_arg5¹⁴, _lh_runbench_arg6¹⁴, _lh_runbench_arg4¹⁴, _lh_runbench_arg5¹⁴, _lh_runbench_arg6¹⁴)]
//│ 	in 0
//│ def runbench_lh_₆(_lh_runbench_arg1¹⁶, _lh_runbench_arg2¹⁶, _lh_runbench_arg3¹⁶, _lh_runbench_arg4¹⁶, _lh_runbench_arg5¹⁶, _lh_runbench_arg6¹⁶, _lh_runbench_arg7¹⁶, _lh_runbench_arg8¹⁶, _lh_runbench_arg9¹⁶) = 
//│ 	let _dum¹⁶ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹⁶, _lh_runbench_arg4¹⁶, _lh_runbench_arg5¹⁶, _lh_runbench_arg6¹⁶, _lh_runbench_arg4¹⁶, _lh_runbench_arg5¹⁶, _lh_runbench_arg6¹⁶) integerbench_lh_₁(_lh_runbench_arg1¹⁶, _lh_runbench_arg4¹⁶, _lh_runbench_arg5¹⁶, _lh_runbench_arg6¹⁶, _lh_runbench_arg4¹⁶, _lh_runbench_arg5¹⁶, _lh_runbench_arg6¹⁶)]
//│ 	in 0
//│ def runbench_lh_₇(_lh_runbench_arg1¹¹, _lh_runbench_arg2¹¹, _lh_runbench_arg3¹¹, _lh_runbench_arg4¹¹, _lh_runbench_arg5¹¹, _lh_runbench_arg6¹¹, _lh_runbench_arg7¹¹, _lh_runbench_arg8¹¹, _lh_runbench_arg9¹¹) = 
//│ 	let _dum¹¹ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹¹, _lh_runbench_arg4¹¹, _lh_runbench_arg5¹¹, _lh_runbench_arg6¹¹, _lh_runbench_arg4¹¹, _lh_runbench_arg5¹¹, _lh_runbench_arg6¹¹) integerbench_lh_₁(_lh_runbench_arg1¹¹, _lh_runbench_arg4¹¹, _lh_runbench_arg5¹¹, _lh_runbench_arg6¹¹, _lh_runbench_arg4¹¹, _lh_runbench_arg5¹¹, _lh_runbench_arg6¹¹)]
//│ 	in 0
//│ def runbench_lh_₈(_lh_runbench_arg1¹⁸, _lh_runbench_arg2¹⁸, _lh_runbench_arg3¹⁸, _lh_runbench_arg4¹⁸, _lh_runbench_arg5¹⁸, _lh_runbench_arg6¹⁸, _lh_runbench_arg7¹⁸, _lh_runbench_arg8¹⁸, _lh_runbench_arg9¹⁸) = 
//│ 	let _dum¹⁸ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹⁸, _lh_runbench_arg4¹⁸, _lh_runbench_arg5¹⁸, _lh_runbench_arg6¹⁸, _lh_runbench_arg4¹⁸, _lh_runbench_arg5¹⁸, _lh_runbench_arg6¹⁸) integerbench_lh_₁(_lh_runbench_arg1¹⁸, _lh_runbench_arg4¹⁸, _lh_runbench_arg5¹⁸, _lh_runbench_arg6¹⁸, _lh_runbench_arg4¹⁸, _lh_runbench_arg5¹⁸, _lh_runbench_arg6¹⁸)]
//│ 	in 0
//│ def runbench_lh_₉(_lh_runbench_arg1¹², _lh_runbench_arg2¹², _lh_runbench_arg3¹², _lh_runbench_arg4¹², _lh_runbench_arg5¹², _lh_runbench_arg6¹², _lh_runbench_arg7¹², _lh_runbench_arg8¹², _lh_runbench_arg9¹²) = 
//│ 	let _dum¹² = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹², _lh_runbench_arg4¹², _lh_runbench_arg5¹², _lh_runbench_arg6¹², _lh_runbench_arg4¹², _lh_runbench_arg5¹², _lh_runbench_arg6¹²) integerbench_lh_₁(_lh_runbench_arg1¹², _lh_runbench_arg4¹², _lh_runbench_arg5¹², _lh_runbench_arg6¹², _lh_runbench_arg4¹², _lh_runbench_arg5¹², _lh_runbench_arg6¹²)]
//│ 	in 0
//│ def testInteger_nofib_lh_₁(_lh_testInteger_nofib_arg1¹) = runalltests_lh_₁((0 - _lh_testInteger_nofib_arg1¹), 31, (0 + _lh_testInteger_nofib_arg1¹), (0 - _lh_testInteger_nofib_arg1¹), 31, (0 + _lh_testInteger_nofib_arg1¹))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>> consumer ids >>>>>>>
//│ 
//│ <<<<<<< consumer ids <<<<<<<
//│ 
//│ >>>>>>> floating out info >>>>>>>
//│ 
//│ <<<<<<< floating out info <<<<<<<
//│ 
//│ >>>>>>> after inlining >>>>>>>
//│ testInteger_nofib_lh_₁(primId⁰(3000))
//│ def enumFromThenTo_lh_₁(a²⁰, t⁰, b²⁰) = if (a²⁰ <= b²⁰) then [LH_C a²⁰ enumFromThenTo_lh_₁(t⁰, ((2 * t⁰) - a²⁰), b²⁰)] else [LH_N]
//│ def intbench_lh_₁(_lh_intbench_arg1⁰, _lh_intbench_arg2⁰, _lh_intbench_arg3⁰, _lh_intbench_arg4⁰, _lh_intbench_arg5⁰, _lh_intbench_arg6⁰, _lh_intbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 			let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 				| LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ 			in _lh_listcomp_fun¹(enumFromThenTo_lh_₁(_lh_intbench_arg5⁰, (_lh_intbench_arg2⁰ + _lh_intbench_arg6⁰), _lh_intbench_arg7⁰))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(enumFromThenTo_lh_₁(_lh_intbench_arg2⁰, (_lh_intbench_arg2⁰ + _lh_intbench_arg3⁰), _lh_intbench_arg4⁰))
//│ def integerbench_lh_₁(_lh_integerbench_arg1⁰, _lh_integerbench_arg2⁰, _lh_integerbench_arg3⁰, _lh_integerbench_arg4⁰, _lh_integerbench_arg5⁰, _lh_integerbench_arg6⁰, _lh_integerbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 			let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 				| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 			in _lh_listcomp_fun³(enumFromThenTo_lh_₁(_lh_integerbench_arg5⁰, (_lh_integerbench_arg2⁰ + _lh_integerbench_arg6⁰), _lh_integerbench_arg7⁰))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(enumFromThenTo_lh_₁(_lh_integerbench_arg2⁰, (_lh_integerbench_arg2⁰ + _lh_integerbench_arg3⁰), _lh_integerbench_arg4⁰))
//│ def runalltests_lh_₁(_lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg4⁰, _lh_runalltests_arg5⁰, _lh_runalltests_arg6⁰) = [LH_C runbench_lh_₁₀((fun a⁰ -> (fun b⁰ -> (a⁰ + b⁰))), (fun a¹ -> (fun b¹ -> (a¹ + b¹))), [LH_C '(' [LH_C '+' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₂((fun a² -> (fun b² -> (a² - b²))), (fun a³ -> (fun b³ -> (a³ - b³))), [LH_C '(' [LH_C '-' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₄((fun a⁴ -> (fun b⁴ -> (a⁴ * b⁴))), (fun a⁵ -> (fun b⁵ -> (a⁵ * b⁵))), [LH_C '(' [LH_C '*' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₅((fun a⁶ -> (fun b⁶ -> div⁰(a⁶, b⁶))), (fun a⁷ -> (fun b⁷ -> div⁰(a⁷, b⁷))), [LH_C 'd' [LH_C 'i' [LH_C 'v' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₉((fun a⁸ -> (fun b⁸ -> (a⁸ % b⁸))), (fun a⁹ -> (fun b⁹ -> (a⁹ % b⁹))), [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₆((fun a¹⁰ -> (fun b¹⁰ -> (a¹⁰ == b¹⁰))), (fun a¹¹ -> (fun b¹¹ -> (a¹¹ == b¹¹))), [LH_C '(' [LH_C '=' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₃((fun a¹² -> (fun b¹² -> (a¹² < b¹²))), (fun a¹³ -> (fun b¹³ -> (a¹³ < b¹³))), [LH_C '(' [LH_C '<' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₈((fun a¹⁴ -> (fun b¹⁴ -> (a¹⁴ <= b¹⁴))), (fun a¹⁵ -> (fun b¹⁵ -> (a¹⁵ <= b¹⁵))), [LH_C '(' [LH_C '<' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₁((fun a¹⁶ -> (fun b¹⁶ -> (a¹⁶ > b¹⁶))), (fun a¹⁷ -> (fun b¹⁷ -> (a¹⁷ > b¹⁷))), [LH_C '(' [LH_C '>' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₇((fun a¹⁸ -> (fun b¹⁸ -> (a¹⁸ >= b¹⁸))), (fun a¹⁹ -> (fun b¹⁹ -> (a¹⁹ >= b¹⁹))), [LH_C '(' [LH_C '>' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_N]]]]]]]]]]]
//│ def runbench_lh_₁(_lh_runbench_arg1³, _lh_runbench_arg2³, _lh_runbench_arg3³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg7³, _lh_runbench_arg8³, _lh_runbench_arg9³) = 
//│ 	let _dum³ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³) integerbench_lh_₁(_lh_runbench_arg1³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³)]
//│ 	in 0
//│ def runbench_lh_₁₀(_lh_runbench_arg1⁹, _lh_runbench_arg2⁹, _lh_runbench_arg3⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg7⁹, _lh_runbench_arg8⁹, _lh_runbench_arg9⁹) = 
//│ 	let _dum⁹ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹) integerbench_lh_₁(_lh_runbench_arg1⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹)]
//│ 	in 0
//│ def runbench_lh_₂(_lh_runbench_arg1⁵, _lh_runbench_arg2⁵, _lh_runbench_arg3⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg7⁵, _lh_runbench_arg8⁵, _lh_runbench_arg9⁵) = 
//│ 	let _dum⁵ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵) integerbench_lh_₁(_lh_runbench_arg1⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵)]
//│ 	in 0
//│ def runbench_lh_₃(_lh_runbench_arg1⁷, _lh_runbench_arg2⁷, _lh_runbench_arg3⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg7⁷, _lh_runbench_arg8⁷, _lh_runbench_arg9⁷) = 
//│ 	let _dum⁷ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷) integerbench_lh_₁(_lh_runbench_arg1⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷)]
//│ 	in 0
//│ def runbench_lh_₄(_lh_runbench_arg1⁰, _lh_runbench_arg2⁰, _lh_runbench_arg3⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg7⁰, _lh_runbench_arg8⁰, _lh_runbench_arg9⁰) = 
//│ 	let _dum⁰ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰) integerbench_lh_₁(_lh_runbench_arg1⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰)]
//│ 	in 0
//│ def runbench_lh_₅(_lh_runbench_arg1⁴, _lh_runbench_arg2⁴, _lh_runbench_arg3⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg7⁴, _lh_runbench_arg8⁴, _lh_runbench_arg9⁴) = 
//│ 	let _dum⁴ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴) integerbench_lh_₁(_lh_runbench_arg1⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴)]
//│ 	in 0
//│ def runbench_lh_₆(_lh_runbench_arg1⁶, _lh_runbench_arg2⁶, _lh_runbench_arg3⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg7⁶, _lh_runbench_arg8⁶, _lh_runbench_arg9⁶) = 
//│ 	let _dum⁶ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶) integerbench_lh_₁(_lh_runbench_arg1⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶)]
//│ 	in 0
//│ def runbench_lh_₇(_lh_runbench_arg1¹, _lh_runbench_arg2¹, _lh_runbench_arg3¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg7¹, _lh_runbench_arg8¹, _lh_runbench_arg9¹) = 
//│ 	let _dum¹ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹) integerbench_lh_₁(_lh_runbench_arg1¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹)]
//│ 	in 0
//│ def runbench_lh_₈(_lh_runbench_arg1⁸, _lh_runbench_arg2⁸, _lh_runbench_arg3⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg7⁸, _lh_runbench_arg8⁸, _lh_runbench_arg9⁸) = 
//│ 	let _dum⁸ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸) integerbench_lh_₁(_lh_runbench_arg1⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸)]
//│ 	in 0
//│ def runbench_lh_₉(_lh_runbench_arg1², _lh_runbench_arg2², _lh_runbench_arg3², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg7², _lh_runbench_arg8², _lh_runbench_arg9²) = 
//│ 	let _dum² = [LH_P2 intbench_lh_₁(_lh_runbench_arg2², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²) integerbench_lh_₁(_lh_runbench_arg1², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²)]
//│ 	in 0
//│ def testInteger_nofib_lh_₁(_lh_testInteger_nofib_arg1⁰) = runalltests_lh_₁((0 - _lh_testInteger_nofib_arg1⁰), 31, (0 + _lh_testInteger_nofib_arg1⁰), (0 - _lh_testInteger_nofib_arg1⁰), 31, (0 + _lh_testInteger_nofib_arg1⁰))
//│ <<<<<<< after inlining <<<<<<<
//│ 
//│ >>>>>>> after floating out >>>>>>>
//│ testInteger_nofib_lh_₁(primId⁰(3000))
//│ def enumFromThenTo_lh_₁(a²⁰, t⁰, b²⁰) = if (a²⁰ <= b²⁰) then [LH_C a²⁰ enumFromThenTo_lh_₁(t⁰, ((2 * t⁰) - a²⁰), b²⁰)] else [LH_N]
//│ def intbench_lh_₁(_lh_intbench_arg1⁰, _lh_intbench_arg2⁰, _lh_intbench_arg3⁰, _lh_intbench_arg4⁰, _lh_intbench_arg5⁰, _lh_intbench_arg6⁰, _lh_intbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 			let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 				| LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ 			in _lh_listcomp_fun¹(enumFromThenTo_lh_₁(_lh_intbench_arg5⁰, (_lh_intbench_arg2⁰ + _lh_intbench_arg6⁰), _lh_intbench_arg7⁰))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(enumFromThenTo_lh_₁(_lh_intbench_arg2⁰, (_lh_intbench_arg2⁰ + _lh_intbench_arg3⁰), _lh_intbench_arg4⁰))
//│ def integerbench_lh_₁(_lh_integerbench_arg1⁰, _lh_integerbench_arg2⁰, _lh_integerbench_arg3⁰, _lh_integerbench_arg4⁰, _lh_integerbench_arg5⁰, _lh_integerbench_arg6⁰, _lh_integerbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 			let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 				| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 			in _lh_listcomp_fun³(enumFromThenTo_lh_₁(_lh_integerbench_arg5⁰, (_lh_integerbench_arg2⁰ + _lh_integerbench_arg6⁰), _lh_integerbench_arg7⁰))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(enumFromThenTo_lh_₁(_lh_integerbench_arg2⁰, (_lh_integerbench_arg2⁰ + _lh_integerbench_arg3⁰), _lh_integerbench_arg4⁰))
//│ def runalltests_lh_₁(_lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg4⁰, _lh_runalltests_arg5⁰, _lh_runalltests_arg6⁰) = [LH_C runbench_lh_₁₀((fun a⁰ -> (fun b⁰ -> (a⁰ + b⁰))), (fun a¹ -> (fun b¹ -> (a¹ + b¹))), [LH_C '(' [LH_C '+' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₂((fun a² -> (fun b² -> (a² - b²))), (fun a³ -> (fun b³ -> (a³ - b³))), [LH_C '(' [LH_C '-' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₄((fun a⁴ -> (fun b⁴ -> (a⁴ * b⁴))), (fun a⁵ -> (fun b⁵ -> (a⁵ * b⁵))), [LH_C '(' [LH_C '*' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₅((fun a⁶ -> (fun b⁶ -> div⁰(a⁶, b⁶))), (fun a⁷ -> (fun b⁷ -> div⁰(a⁷, b⁷))), [LH_C 'd' [LH_C 'i' [LH_C 'v' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₉((fun a⁸ -> (fun b⁸ -> (a⁸ % b⁸))), (fun a⁹ -> (fun b⁹ -> (a⁹ % b⁹))), [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₆((fun a¹⁰ -> (fun b¹⁰ -> (a¹⁰ == b¹⁰))), (fun a¹¹ -> (fun b¹¹ -> (a¹¹ == b¹¹))), [LH_C '(' [LH_C '=' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₃((fun a¹² -> (fun b¹² -> (a¹² < b¹²))), (fun a¹³ -> (fun b¹³ -> (a¹³ < b¹³))), [LH_C '(' [LH_C '<' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₈((fun a¹⁴ -> (fun b¹⁴ -> (a¹⁴ <= b¹⁴))), (fun a¹⁵ -> (fun b¹⁵ -> (a¹⁵ <= b¹⁵))), [LH_C '(' [LH_C '<' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₁((fun a¹⁶ -> (fun b¹⁶ -> (a¹⁶ > b¹⁶))), (fun a¹⁷ -> (fun b¹⁷ -> (a¹⁷ > b¹⁷))), [LH_C '(' [LH_C '>' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_C runbench_lh_₇((fun a¹⁸ -> (fun b¹⁸ -> (a¹⁸ >= b¹⁸))), (fun a¹⁹ -> (fun b¹⁹ -> (a¹⁹ >= b¹⁹))), [LH_C '(' [LH_C '>' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) [LH_N]]]]]]]]]]]
//│ def runbench_lh_₁(_lh_runbench_arg1³, _lh_runbench_arg2³, _lh_runbench_arg3³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg7³, _lh_runbench_arg8³, _lh_runbench_arg9³) = 
//│ 	let _dum³ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³) integerbench_lh_₁(_lh_runbench_arg1³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³)]
//│ 	in 0
//│ def runbench_lh_₁₀(_lh_runbench_arg1⁹, _lh_runbench_arg2⁹, _lh_runbench_arg3⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg7⁹, _lh_runbench_arg8⁹, _lh_runbench_arg9⁹) = 
//│ 	let _dum⁹ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹) integerbench_lh_₁(_lh_runbench_arg1⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹)]
//│ 	in 0
//│ def runbench_lh_₂(_lh_runbench_arg1⁵, _lh_runbench_arg2⁵, _lh_runbench_arg3⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg7⁵, _lh_runbench_arg8⁵, _lh_runbench_arg9⁵) = 
//│ 	let _dum⁵ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵) integerbench_lh_₁(_lh_runbench_arg1⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵)]
//│ 	in 0
//│ def runbench_lh_₃(_lh_runbench_arg1⁷, _lh_runbench_arg2⁷, _lh_runbench_arg3⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg7⁷, _lh_runbench_arg8⁷, _lh_runbench_arg9⁷) = 
//│ 	let _dum⁷ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷) integerbench_lh_₁(_lh_runbench_arg1⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷)]
//│ 	in 0
//│ def runbench_lh_₄(_lh_runbench_arg1⁰, _lh_runbench_arg2⁰, _lh_runbench_arg3⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg7⁰, _lh_runbench_arg8⁰, _lh_runbench_arg9⁰) = 
//│ 	let _dum⁰ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰) integerbench_lh_₁(_lh_runbench_arg1⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰)]
//│ 	in 0
//│ def runbench_lh_₅(_lh_runbench_arg1⁴, _lh_runbench_arg2⁴, _lh_runbench_arg3⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg7⁴, _lh_runbench_arg8⁴, _lh_runbench_arg9⁴) = 
//│ 	let _dum⁴ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴) integerbench_lh_₁(_lh_runbench_arg1⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴)]
//│ 	in 0
//│ def runbench_lh_₆(_lh_runbench_arg1⁶, _lh_runbench_arg2⁶, _lh_runbench_arg3⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg7⁶, _lh_runbench_arg8⁶, _lh_runbench_arg9⁶) = 
//│ 	let _dum⁶ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶) integerbench_lh_₁(_lh_runbench_arg1⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶)]
//│ 	in 0
//│ def runbench_lh_₇(_lh_runbench_arg1¹, _lh_runbench_arg2¹, _lh_runbench_arg3¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg7¹, _lh_runbench_arg8¹, _lh_runbench_arg9¹) = 
//│ 	let _dum¹ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹) integerbench_lh_₁(_lh_runbench_arg1¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹)]
//│ 	in 0
//│ def runbench_lh_₈(_lh_runbench_arg1⁸, _lh_runbench_arg2⁸, _lh_runbench_arg3⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg7⁸, _lh_runbench_arg8⁸, _lh_runbench_arg9⁸) = 
//│ 	let _dum⁸ = [LH_P2 intbench_lh_₁(_lh_runbench_arg2⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸) integerbench_lh_₁(_lh_runbench_arg1⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸)]
//│ 	in 0
//│ def runbench_lh_₉(_lh_runbench_arg1², _lh_runbench_arg2², _lh_runbench_arg3², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg7², _lh_runbench_arg8², _lh_runbench_arg9²) = 
//│ 	let _dum² = [LH_P2 intbench_lh_₁(_lh_runbench_arg2², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²) integerbench_lh_₁(_lh_runbench_arg1², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²)]
//│ 	in 0
//│ def testInteger_nofib_lh_₁(_lh_testInteger_nofib_arg1⁰) = runalltests_lh_₁((0 - _lh_testInteger_nofib_arg1⁰), 31, (0 + _lh_testInteger_nofib_arg1⁰), (0 - _lh_testInteger_nofib_arg1⁰), 31, (0 + _lh_testInteger_nofib_arg1⁰))
//│ <<<<<<< after floating out <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
