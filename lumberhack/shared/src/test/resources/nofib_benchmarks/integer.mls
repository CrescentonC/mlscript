:NewParser
:ParseOnly

:lhUseZarith
:lhInHaskell
:lhGenOCaml
const0 = z_of_int 0
const2100000000 = z_of_int 2100000000
const14000001 = z_of_int 14000001
z_enumFromThenTo a t b = if z_leq a b then a:(z_enumFromThenTo t (z_sub (z_mul (z_of_int 2) t) a) b) else []
runalltests astart astep alim bstart bstep blim = (
                                                      runbench (\a b -> z_add a b) (\a b -> a + b) "(+)" astart astep alim astart astep alim
                                                    , runbench (\a b -> z_sub a b) (\a b -> a - b) "(-)" astart astep alim astart astep alim
                                                    , runbench (\a b -> z_mul a b) (\a b -> a * b) "(*)" astart astep alim astart astep alim
                                                    , runbench (\a b -> z_div a b) (\a b -> a `div` b) "div" astart astep alim astart astep alim
                                                    , runbench (\a b -> z_mod a b) (\a b -> a `mod` b) "mod" astart astep alim astart astep alim
                                                    , runbench (\a b -> z_equal a b) (\a b -> a == b) "(==)" astart astep alim astart astep alim
                                                    , runbench (\a b -> z_lt a b) (\a b -> a < b) "(<)" astart astep alim astart astep alim
                                                    , runbench (\a b -> z_leq a b) (\a b -> a <= b) "(<=)" astart astep alim astart astep alim
                                                    , runbench (\a b -> z_gt a b) (\a b -> a > b) "(>)" astart astep alim astart astep alim
                                                    , runbench (\a b -> z_geq a b) (\a b -> a >= b) "(>=)" astart astep alim astart astep alim
                                                  )
runbench jop iop opstr astart astep alim bstart bstep blim =
  (intbench iop astart astep alim astart astep alim, integerbench jop astart astep alim astart astep alim)
integerbench op astart astep alim bstart bstep blim =
    [ op a b | a <- z_enumFromThenTo astart (z_add astart astep) alim, b <- z_enumFromThenTo bstart (z_add astart bstep) blim]
intbench op astart astep alim bstart bstep blim =
    [ op a b | a <- [(z_to_int astart),(z_to_int astart)+(z_to_int astep)..(z_to_int alim) ] , b <- [(z_to_int bstart),(z_to_int astart)+(z_to_int bstep)..(z_to_int blim) ]]
testInteger_nofib n = runalltests (z_sub (const0) (const2100000000)) n (const2100000000) (z_sub (const0) (const2100000000)) n (const2100000000)
testInteger_nofib $ primId (const14000001)
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> After Expansion >>>>>>>>>>
//│ testInteger_nofib_lh_₁^1077(primId⁰(const14000001_lh_₁^1079))
//│ def const0_lh_₁ = z_of_int⁰(0)
//│ def const0_lh_₂ = z_of_int⁰(0)
//│ def const14000001_lh_₁ = z_of_int⁰(14000001)
//│ def const2100000000_lh_₁ = z_of_int⁰(2100000000)
//│ def const2100000000_lh_₂ = z_of_int⁰(2100000000)
//│ def const2100000000_lh_₃ = z_of_int⁰(2100000000)
//│ def const2100000000_lh_₄ = z_of_int⁰(2100000000)
//│ def enumFromThenTo_lh_₁(a⁰, t⁰, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromThenTo_lh_₁^36(t⁰, ((2 * t⁰) - a⁰), b⁰)] else [LH_N]
//│ def intbench_lh_₁(_lh_intbench_arg1¹, _lh_intbench_arg2¹, _lh_intbench_arg3¹, _lh_intbench_arg4¹, _lh_intbench_arg5¹, _lh_intbench_arg6¹, _lh_intbench_arg7¹) = 
//│ 	let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => 
//│ 			let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 				LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C _lh_intbench_arg1¹(_lh_listcomp_fun_ls_h⁴, _lh_listcomp_fun_ls_h⁵) _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]
//│ 				| LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ 			in _lh_listcomp_fun⁵(enumFromThenTo_lh_₁^198(z_to_int⁰(_lh_intbench_arg5¹), (z_to_int⁰(_lh_intbench_arg2¹) + z_to_int⁰(_lh_intbench_arg6¹)), z_to_int⁰(_lh_intbench_arg7¹)))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁴(enumFromThenTo_lh_₁^223(z_to_int⁰(_lh_intbench_arg2¹), (z_to_int⁰(_lh_intbench_arg2¹) + z_to_int⁰(_lh_intbench_arg3¹)), z_to_int⁰(_lh_intbench_arg4¹)))
//│ def intbench_lh_₂(_lh_intbench_arg1⁰, _lh_intbench_arg2⁰, _lh_intbench_arg3⁰, _lh_intbench_arg4⁰, _lh_intbench_arg5⁰, _lh_intbench_arg6⁰, _lh_intbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 			let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 				| LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ 			in _lh_listcomp_fun¹(enumFromThenTo_lh_₁^74(z_to_int⁰(_lh_intbench_arg5⁰), (z_to_int⁰(_lh_intbench_arg2⁰) + z_to_int⁰(_lh_intbench_arg6⁰)), z_to_int⁰(_lh_intbench_arg7⁰)))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(enumFromThenTo_lh_₁^99(z_to_int⁰(_lh_intbench_arg2⁰), (z_to_int⁰(_lh_intbench_arg2⁰) + z_to_int⁰(_lh_intbench_arg3⁰)), z_to_int⁰(_lh_intbench_arg4⁰)))
//│ def integerbench_lh_₁(_lh_integerbench_arg1⁰, _lh_integerbench_arg2⁰, _lh_integerbench_arg3⁰, _lh_integerbench_arg4⁰, _lh_integerbench_arg5⁰, _lh_integerbench_arg6⁰, _lh_integerbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 			let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 				| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 			in _lh_listcomp_fun³(z_enumFromThenTo_lh_₁^144(_lh_integerbench_arg5⁰, z_add⁰(_lh_integerbench_arg2⁰, _lh_integerbench_arg6⁰), _lh_integerbench_arg7⁰))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(z_enumFromThenTo_lh_₁^161(_lh_integerbench_arg2⁰, z_add⁰(_lh_integerbench_arg2⁰, _lh_integerbench_arg3⁰), _lh_integerbench_arg4⁰))
//│ def runalltests_lh_₁(_lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg4⁰, _lh_runalltests_arg5⁰, _lh_runalltests_arg6⁰) = [LH_P10 runbench_lh_₃^651((fun a¹ -> (fun b¹ -> z_add⁰(a¹, b¹))), (fun a² -> (fun b² -> (a² + b²))), [LH_C '(' [LH_C '+' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₆^688((fun a³ -> (fun b³ -> z_sub⁰(a³, b³))), (fun a⁴ -> (fun b⁴ -> (a⁴ - b⁴))), [LH_C '(' [LH_C '-' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₇^725((fun a⁵ -> (fun b⁵ -> z_mul⁰(a⁵, b⁵))), (fun a⁶ -> (fun b⁶ -> (a⁶ * b⁶))), [LH_C '(' [LH_C '*' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₂^762((fun a⁷ -> (fun b⁷ -> z_div⁰(a⁷, b⁷))), (fun a⁸ -> (fun b⁸ -> div⁰(a⁸, b⁸))), [LH_C 'd' [LH_C 'i' [LH_C 'v' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₁₀^799((fun a⁹ -> (fun b⁹ -> z_mod⁰(a⁹, b⁹))), (fun a¹⁰ -> (fun b¹⁰ -> (a¹⁰ % b¹⁰))), [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₅^836((fun a¹¹ -> (fun b¹¹ -> z_equal⁰(a¹¹, b¹¹))), (fun a¹² -> (fun b¹² -> (a¹² == b¹²))), [LH_C '(' [LH_C '=' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₁^875((fun a¹³ -> (fun b¹³ -> z_lt⁰(a¹³, b¹³))), (fun a¹⁴ -> (fun b¹⁴ -> (a¹⁴ < b¹⁴))), [LH_C '(' [LH_C '<' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₄^912((fun a¹⁵ -> (fun b¹⁵ -> z_leq⁰(a¹⁵, b¹⁵))), (fun a¹⁶ -> (fun b¹⁶ -> (a¹⁶ <= b¹⁶))), [LH_C '(' [LH_C '<' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₉^951((fun a¹⁷ -> (fun b¹⁷ -> z_gt⁰(a¹⁷, b¹⁷))), (fun a¹⁸ -> (fun b¹⁸ -> (a¹⁸ > b¹⁸))), [LH_C '(' [LH_C '>' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₈^988((fun a¹⁹ -> (fun b¹⁹ -> z_geq⁰(a¹⁹, b¹⁹))), (fun a²⁰ -> (fun b²⁰ -> (a²⁰ >= b²⁰))), [LH_C '(' [LH_C '>' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰)]
//│ def runbench_lh_₁(_lh_runbench_arg1⁹, _lh_runbench_arg2⁹, _lh_runbench_arg3⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg7⁹, _lh_runbench_arg8⁹, _lh_runbench_arg9⁹) = [LH_P2 intbench_lh_₁^611(_lh_runbench_arg2⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹) integerbench_lh_₁^626(_lh_runbench_arg1⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹)]
//│ def runbench_lh_₁₀(_lh_runbench_arg1⁰, _lh_runbench_arg2⁰, _lh_runbench_arg3⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg7⁰, _lh_runbench_arg8⁰, _lh_runbench_arg9⁰) = [LH_P2 intbench_lh_₂^251(_lh_runbench_arg2⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰) integerbench_lh_₁^266(_lh_runbench_arg1⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰)]
//│ def runbench_lh_₂(_lh_runbench_arg1⁸, _lh_runbench_arg2⁸, _lh_runbench_arg3⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg7⁸, _lh_runbench_arg8⁸, _lh_runbench_arg9⁸) = [LH_P2 intbench_lh_₂^571(_lh_runbench_arg2⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸) integerbench_lh_₁^586(_lh_runbench_arg1⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸)]
//│ def runbench_lh_₃(_lh_runbench_arg1⁷, _lh_runbench_arg2⁷, _lh_runbench_arg3⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg7⁷, _lh_runbench_arg8⁷, _lh_runbench_arg9⁷) = [LH_P2 intbench_lh_₂^531(_lh_runbench_arg2⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷) integerbench_lh_₁^546(_lh_runbench_arg1⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷)]
//│ def runbench_lh_₄(_lh_runbench_arg1⁶, _lh_runbench_arg2⁶, _lh_runbench_arg3⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg7⁶, _lh_runbench_arg8⁶, _lh_runbench_arg9⁶) = [LH_P2 intbench_lh_₂^491(_lh_runbench_arg2⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶) integerbench_lh_₁^506(_lh_runbench_arg1⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶)]
//│ def runbench_lh_₅(_lh_runbench_arg1⁵, _lh_runbench_arg2⁵, _lh_runbench_arg3⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg7⁵, _lh_runbench_arg8⁵, _lh_runbench_arg9⁵) = [LH_P2 intbench_lh_₂^451(_lh_runbench_arg2⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵) integerbench_lh_₁^466(_lh_runbench_arg1⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵)]
//│ def runbench_lh_₆(_lh_runbench_arg1⁴, _lh_runbench_arg2⁴, _lh_runbench_arg3⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg7⁴, _lh_runbench_arg8⁴, _lh_runbench_arg9⁴) = [LH_P2 intbench_lh_₂^411(_lh_runbench_arg2⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴) integerbench_lh_₁^426(_lh_runbench_arg1⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴)]
//│ def runbench_lh_₇(_lh_runbench_arg1³, _lh_runbench_arg2³, _lh_runbench_arg3³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg7³, _lh_runbench_arg8³, _lh_runbench_arg9³) = [LH_P2 intbench_lh_₂^371(_lh_runbench_arg2³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³) integerbench_lh_₁^386(_lh_runbench_arg1³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³)]
//│ def runbench_lh_₈(_lh_runbench_arg1², _lh_runbench_arg2², _lh_runbench_arg3², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg7², _lh_runbench_arg8², _lh_runbench_arg9²) = [LH_P2 intbench_lh_₂^331(_lh_runbench_arg2², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²) integerbench_lh_₁^346(_lh_runbench_arg1², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²)]
//│ def runbench_lh_₉(_lh_runbench_arg1¹, _lh_runbench_arg2¹, _lh_runbench_arg3¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg7¹, _lh_runbench_arg8¹, _lh_runbench_arg9¹) = [LH_P2 intbench_lh_₂^291(_lh_runbench_arg2¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹) integerbench_lh_₁^306(_lh_runbench_arg1¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹)]
//│ def testInteger_nofib_lh_₁(_lh_testInteger_nofib_arg1⁰) = runalltests_lh_₁^1052(z_sub⁰(const0_lh_₂^1054, const2100000000_lh_₂^1056), _lh_testInteger_nofib_arg1⁰, const2100000000_lh_₃^1061, z_sub⁰(const0_lh_₁^1064, const2100000000_lh_₄^1066), _lh_testInteger_nofib_arg1⁰, const2100000000_lh_₁^1071)
//│ def z_enumFromThenTo_lh_₁(_lh_z_enumFromThenTo_arg1⁰, _lh_z_enumFromThenTo_arg2⁰, _lh_z_enumFromThenTo_arg3⁰) = if z_leq⁰(_lh_z_enumFromThenTo_arg1⁰, _lh_z_enumFromThenTo_arg3⁰) then [LH_C _lh_z_enumFromThenTo_arg1⁰ z_enumFromThenTo_lh_₁^7(_lh_z_enumFromThenTo_arg2⁰, z_sub⁰(z_mul⁰(z_of_int⁰(2), _lh_z_enumFromThenTo_arg2⁰), _lh_z_enumFromThenTo_arg1⁰), _lh_z_enumFromThenTo_arg3⁰)] else [LH_N]
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec const14000001_lh__d1 =
//│ 		  (Z.of_int 14000001);;
//│ 		let rec enumFromThenTo_lh__d1 a_0 t_0 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, (((enumFromThenTo_lh__d1 t_0) ((2 * t_0) - a_0)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec intbench_lh__d2 _lh_intbench_arg1_0 _lh_intbench_arg2_0 _lh_intbench_arg3_0 _lh_intbench_arg4_0 _lh_intbench_arg5_0 _lh_intbench_arg6_0 _lh_intbench_arg7_0 =
//│ 		  (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		    (match _lh_listcomp_fun_para_0 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		        (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		          (match _lh_listcomp_fun_para_1 with
//│ 		            | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		              (`LH_C(((_lh_intbench_arg1_0 _lh_listcomp_fun_ls_h_0) _lh_listcomp_fun_ls_h_1), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		            | `LH_N -> 
//│ 		              (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))) in
//│ 		          (_lh_listcomp_fun_1 (((enumFromThenTo_lh__d1 (Z.to_int _lh_intbench_arg5_0)) ((Z.to_int _lh_intbench_arg2_0) + (Z.to_int _lh_intbench_arg6_0))) (Z.to_int _lh_intbench_arg7_0))))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_0 (((enumFromThenTo_lh__d1 (Z.to_int _lh_intbench_arg2_0)) ((Z.to_int _lh_intbench_arg2_0) + (Z.to_int _lh_intbench_arg3_0))) (Z.to_int _lh_intbench_arg4_0))));;
//│ 		let rec z_enumFromThenTo_lh__d1 _lh_z_enumFromThenTo_arg1_0 _lh_z_enumFromThenTo_arg2_0 _lh_z_enumFromThenTo_arg3_0 =
//│ 		  (if ((Z.leq _lh_z_enumFromThenTo_arg1_0) _lh_z_enumFromThenTo_arg3_0) then
//│ 		    (`LH_C(_lh_z_enumFromThenTo_arg1_0, (((z_enumFromThenTo_lh__d1 _lh_z_enumFromThenTo_arg2_0) ((Z.sub ((Z.mul (Z.of_int 2)) _lh_z_enumFromThenTo_arg2_0)) _lh_z_enumFromThenTo_arg1_0)) _lh_z_enumFromThenTo_arg3_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec integerbench_lh__d1 _lh_integerbench_arg1_0 _lh_integerbench_arg2_0 _lh_integerbench_arg3_0 _lh_integerbench_arg4_0 _lh_integerbench_arg5_0 _lh_integerbench_arg6_0 _lh_integerbench_arg7_0 =
//│ 		  (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		    (match _lh_listcomp_fun_para_2 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		        (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		          (match _lh_listcomp_fun_para_3 with
//│ 		            | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		              (`LH_C(((_lh_integerbench_arg1_0 _lh_listcomp_fun_ls_h_2) _lh_listcomp_fun_ls_h_3), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		            | `LH_N -> 
//│ 		              (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))) in
//│ 		          (_lh_listcomp_fun_3 (((z_enumFromThenTo_lh__d1 _lh_integerbench_arg5_0) ((Z.add _lh_integerbench_arg2_0) _lh_integerbench_arg6_0)) _lh_integerbench_arg7_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_2 (((z_enumFromThenTo_lh__d1 _lh_integerbench_arg2_0) ((Z.add _lh_integerbench_arg2_0) _lh_integerbench_arg3_0)) _lh_integerbench_arg4_0)));;
//│ 		let rec runbench_lh__d4 _lh_runbench_arg1_6 _lh_runbench_arg2_6 _lh_runbench_arg3_6 _lh_runbench_arg4_6 _lh_runbench_arg5_6 _lh_runbench_arg6_6 _lh_runbench_arg7_6 _lh_runbench_arg8_6 _lh_runbench_arg9_6 =
//│ 		  (`LH_P2((((((((intbench_lh__d2 _lh_runbench_arg2_6) _lh_runbench_arg4_6) _lh_runbench_arg5_6) _lh_runbench_arg6_6) _lh_runbench_arg4_6) _lh_runbench_arg5_6) _lh_runbench_arg6_6), (((((((integerbench_lh__d1 _lh_runbench_arg1_6) _lh_runbench_arg4_6) _lh_runbench_arg5_6) _lh_runbench_arg6_6) _lh_runbench_arg4_6) _lh_runbench_arg5_6) _lh_runbench_arg6_6)));;
//│ 		let rec runbench_lh__d6 _lh_runbench_arg1_4 _lh_runbench_arg2_4 _lh_runbench_arg3_4 _lh_runbench_arg4_4 _lh_runbench_arg5_4 _lh_runbench_arg6_4 _lh_runbench_arg7_4 _lh_runbench_arg8_4 _lh_runbench_arg9_4 =
//│ 		  (`LH_P2((((((((intbench_lh__d2 _lh_runbench_arg2_4) _lh_runbench_arg4_4) _lh_runbench_arg5_4) _lh_runbench_arg6_4) _lh_runbench_arg4_4) _lh_runbench_arg5_4) _lh_runbench_arg6_4), (((((((integerbench_lh__d1 _lh_runbench_arg1_4) _lh_runbench_arg4_4) _lh_runbench_arg5_4) _lh_runbench_arg6_4) _lh_runbench_arg4_4) _lh_runbench_arg5_4) _lh_runbench_arg6_4)));;
//│ 		let rec runbench_lh__d7 _lh_runbench_arg1_3 _lh_runbench_arg2_3 _lh_runbench_arg3_3 _lh_runbench_arg4_3 _lh_runbench_arg5_3 _lh_runbench_arg6_3 _lh_runbench_arg7_3 _lh_runbench_arg8_3 _lh_runbench_arg9_3 =
//│ 		  (`LH_P2((((((((intbench_lh__d2 _lh_runbench_arg2_3) _lh_runbench_arg4_3) _lh_runbench_arg5_3) _lh_runbench_arg6_3) _lh_runbench_arg4_3) _lh_runbench_arg5_3) _lh_runbench_arg6_3), (((((((integerbench_lh__d1 _lh_runbench_arg1_3) _lh_runbench_arg4_3) _lh_runbench_arg5_3) _lh_runbench_arg6_3) _lh_runbench_arg4_3) _lh_runbench_arg5_3) _lh_runbench_arg6_3)));;
//│ 		let rec runbench_lh__d9 _lh_runbench_arg1_1 _lh_runbench_arg2_1 _lh_runbench_arg3_1 _lh_runbench_arg4_1 _lh_runbench_arg5_1 _lh_runbench_arg6_1 _lh_runbench_arg7_1 _lh_runbench_arg8_1 _lh_runbench_arg9_1 =
//│ 		  (`LH_P2((((((((intbench_lh__d2 _lh_runbench_arg2_1) _lh_runbench_arg4_1) _lh_runbench_arg5_1) _lh_runbench_arg6_1) _lh_runbench_arg4_1) _lh_runbench_arg5_1) _lh_runbench_arg6_1), (((((((integerbench_lh__d1 _lh_runbench_arg1_1) _lh_runbench_arg4_1) _lh_runbench_arg5_1) _lh_runbench_arg6_1) _lh_runbench_arg4_1) _lh_runbench_arg5_1) _lh_runbench_arg6_1)));;
//│ 		let rec intbench_lh__d1 _lh_intbench_arg1_1 _lh_intbench_arg2_1 _lh_intbench_arg3_1 _lh_intbench_arg4_1 _lh_intbench_arg5_1 _lh_intbench_arg6_1 _lh_intbench_arg7_1 =
//│ 		  (let rec _lh_listcomp_fun_4 = (fun _lh_listcomp_fun_para_4 -> 
//│ 		    (match _lh_listcomp_fun_para_4 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_4, _lh_listcomp_fun_ls_t_4) -> 
//│ 		        (let rec _lh_listcomp_fun_5 = (fun _lh_listcomp_fun_para_5 -> 
//│ 		          (match _lh_listcomp_fun_para_5 with
//│ 		            | `LH_C(_lh_listcomp_fun_ls_h_5, _lh_listcomp_fun_ls_t_5) -> 
//│ 		              (`LH_C(((_lh_intbench_arg1_1 _lh_listcomp_fun_ls_h_4) _lh_listcomp_fun_ls_h_5), (_lh_listcomp_fun_5 _lh_listcomp_fun_ls_t_5)))
//│ 		            | `LH_N -> 
//│ 		              (_lh_listcomp_fun_4 _lh_listcomp_fun_ls_t_4))) in
//│ 		          (_lh_listcomp_fun_5 (((enumFromThenTo_lh__d1 (Z.to_int _lh_intbench_arg5_1)) ((Z.to_int _lh_intbench_arg2_1) + (Z.to_int _lh_intbench_arg6_1))) (Z.to_int _lh_intbench_arg7_1))))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_4 (((enumFromThenTo_lh__d1 (Z.to_int _lh_intbench_arg2_1)) ((Z.to_int _lh_intbench_arg2_1) + (Z.to_int _lh_intbench_arg3_1))) (Z.to_int _lh_intbench_arg4_1))));;
//│ 		let rec runbench_lh__d1 _lh_runbench_arg1_9 _lh_runbench_arg2_9 _lh_runbench_arg3_9 _lh_runbench_arg4_9 _lh_runbench_arg5_9 _lh_runbench_arg6_9 _lh_runbench_arg7_9 _lh_runbench_arg8_9 _lh_runbench_arg9_9 =
//│ 		  (`LH_P2((((((((intbench_lh__d1 _lh_runbench_arg2_9) _lh_runbench_arg4_9) _lh_runbench_arg5_9) _lh_runbench_arg6_9) _lh_runbench_arg4_9) _lh_runbench_arg5_9) _lh_runbench_arg6_9), (((((((integerbench_lh__d1 _lh_runbench_arg1_9) _lh_runbench_arg4_9) _lh_runbench_arg5_9) _lh_runbench_arg6_9) _lh_runbench_arg4_9) _lh_runbench_arg5_9) _lh_runbench_arg6_9)));;
//│ 		let rec runbench_lh__d5 _lh_runbench_arg1_5 _lh_runbench_arg2_5 _lh_runbench_arg3_5 _lh_runbench_arg4_5 _lh_runbench_arg5_5 _lh_runbench_arg6_5 _lh_runbench_arg7_5 _lh_runbench_arg8_5 _lh_runbench_arg9_5 =
//│ 		  (`LH_P2((((((((intbench_lh__d2 _lh_runbench_arg2_5) _lh_runbench_arg4_5) _lh_runbench_arg5_5) _lh_runbench_arg6_5) _lh_runbench_arg4_5) _lh_runbench_arg5_5) _lh_runbench_arg6_5), (((((((integerbench_lh__d1 _lh_runbench_arg1_5) _lh_runbench_arg4_5) _lh_runbench_arg5_5) _lh_runbench_arg6_5) _lh_runbench_arg4_5) _lh_runbench_arg5_5) _lh_runbench_arg6_5)));;
//│ 		let rec runbench_lh__d1_d0 _lh_runbench_arg1_0 _lh_runbench_arg2_0 _lh_runbench_arg3_0 _lh_runbench_arg4_0 _lh_runbench_arg5_0 _lh_runbench_arg6_0 _lh_runbench_arg7_0 _lh_runbench_arg8_0 _lh_runbench_arg9_0 =
//│ 		  (`LH_P2((((((((intbench_lh__d2 _lh_runbench_arg2_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0), (((((((integerbench_lh__d1 _lh_runbench_arg1_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0)));;
//│ 		let rec runbench_lh__d2 _lh_runbench_arg1_8 _lh_runbench_arg2_8 _lh_runbench_arg3_8 _lh_runbench_arg4_8 _lh_runbench_arg5_8 _lh_runbench_arg6_8 _lh_runbench_arg7_8 _lh_runbench_arg8_8 _lh_runbench_arg9_8 =
//│ 		  (`LH_P2((((((((intbench_lh__d2 _lh_runbench_arg2_8) _lh_runbench_arg4_8) _lh_runbench_arg5_8) _lh_runbench_arg6_8) _lh_runbench_arg4_8) _lh_runbench_arg5_8) _lh_runbench_arg6_8), (((((((integerbench_lh__d1 _lh_runbench_arg1_8) _lh_runbench_arg4_8) _lh_runbench_arg5_8) _lh_runbench_arg6_8) _lh_runbench_arg4_8) _lh_runbench_arg5_8) _lh_runbench_arg6_8)));;
//│ 		let rec runbench_lh__d3 _lh_runbench_arg1_7 _lh_runbench_arg2_7 _lh_runbench_arg3_7 _lh_runbench_arg4_7 _lh_runbench_arg5_7 _lh_runbench_arg6_7 _lh_runbench_arg7_7 _lh_runbench_arg8_7 _lh_runbench_arg9_7 =
//│ 		  (`LH_P2((((((((intbench_lh__d2 _lh_runbench_arg2_7) _lh_runbench_arg4_7) _lh_runbench_arg5_7) _lh_runbench_arg6_7) _lh_runbench_arg4_7) _lh_runbench_arg5_7) _lh_runbench_arg6_7), (((((((integerbench_lh__d1 _lh_runbench_arg1_7) _lh_runbench_arg4_7) _lh_runbench_arg5_7) _lh_runbench_arg6_7) _lh_runbench_arg4_7) _lh_runbench_arg5_7) _lh_runbench_arg6_7)));;
//│ 		let rec runbench_lh__d8 _lh_runbench_arg1_2 _lh_runbench_arg2_2 _lh_runbench_arg3_2 _lh_runbench_arg4_2 _lh_runbench_arg5_2 _lh_runbench_arg6_2 _lh_runbench_arg7_2 _lh_runbench_arg8_2 _lh_runbench_arg9_2 =
//│ 		  (`LH_P2((((((((intbench_lh__d2 _lh_runbench_arg2_2) _lh_runbench_arg4_2) _lh_runbench_arg5_2) _lh_runbench_arg6_2) _lh_runbench_arg4_2) _lh_runbench_arg5_2) _lh_runbench_arg6_2), (((((((integerbench_lh__d1 _lh_runbench_arg1_2) _lh_runbench_arg4_2) _lh_runbench_arg5_2) _lh_runbench_arg6_2) _lh_runbench_arg4_2) _lh_runbench_arg5_2) _lh_runbench_arg6_2)));;
//│ 		let rec runalltests_lh__d1 _lh_runalltests_arg1_0 _lh_runalltests_arg2_0 _lh_runalltests_arg3_0 _lh_runalltests_arg4_0 _lh_runalltests_arg5_0 _lh_runalltests_arg6_0 =
//│ 		  (`LH_P10((((((((((runbench_lh__d3 (fun a_1 b_1 -> 
//│ 		    ((Z.add a_1) b_1))) (fun a_2 b_2 -> 
//│ 		    (a_2 + b_2))) (`LH_C('(', (`LH_C('+', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (((((((((runbench_lh__d6 (fun a_3 b_3 -> 
//│ 		    ((Z.sub a_3) b_3))) (fun a_4 b_4 -> 
//│ 		    (a_4 - b_4))) (`LH_C('(', (`LH_C('-', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (((((((((runbench_lh__d7 (fun a_5 b_5 -> 
//│ 		    ((Z.mul a_5) b_5))) (fun a_6 b_6 -> 
//│ 		    (a_6 * b_6))) (`LH_C('(', (`LH_C('*', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (((((((((runbench_lh__d2 (fun a_7 b_7 -> 
//│ 		    ((Z.div a_7) b_7))) (fun a_8 b_8 -> 
//│ 		    (a_8 / b_8))) (`LH_C('d', (`LH_C('i', (`LH_C('v', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (((((((((runbench_lh__d1_d0 (fun a_9 b_9 -> 
//│ 		    ((Z.rem a_9) b_9))) (fun a_1_0 b_1_0 -> 
//│ 		    (a_1_0 mod b_1_0))) (`LH_C('m', (`LH_C('o', (`LH_C('d', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (((((((((runbench_lh__d5 (fun a_1_1 b_1_1 -> 
//│ 		    ((Z.equal a_1_1) b_1_1))) (fun a_1_2 b_1_2 -> 
//│ 		    (a_1_2 = b_1_2))) (`LH_C('(', (`LH_C('=', (`LH_C('=', (`LH_C(')', (`LH_N)))))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (((((((((runbench_lh__d1 (fun a_1_3 b_1_3 -> 
//│ 		    ((Z.lt a_1_3) b_1_3))) (fun a_1_4 b_1_4 -> 
//│ 		    (a_1_4 < b_1_4))) (`LH_C('(', (`LH_C('<', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (((((((((runbench_lh__d4 (fun a_1_5 b_1_5 -> 
//│ 		    ((Z.leq a_1_5) b_1_5))) (fun a_1_6 b_1_6 -> 
//│ 		    (a_1_6 <= b_1_6))) (`LH_C('(', (`LH_C('<', (`LH_C('=', (`LH_C(')', (`LH_N)))))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (((((((((runbench_lh__d9 (fun a_1_7 b_1_7 -> 
//│ 		    ((Z.gt a_1_7) b_1_7))) (fun a_1_8 b_1_8 -> 
//│ 		    (a_1_8 > b_1_8))) (`LH_C('(', (`LH_C('>', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (((((((((runbench_lh__d8 (fun a_1_9 b_1_9 -> 
//│ 		    ((Z.geq a_1_9) b_1_9))) (fun a_2_0 b_2_0 -> 
//│ 		    (a_2_0 >= b_2_0))) (`LH_C('(', (`LH_C('>', (`LH_C('=', (`LH_C(')', (`LH_N)))))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0)));;
//│ 		let rec const2100000000_lh__d1 =
//│ 		  (Z.of_int 2100000000);;
//│ 		let rec const2100000000_lh__d2 =
//│ 		  (Z.of_int 2100000000);;
//│ 		let rec const0_lh__d1 =
//│ 		  (Z.of_int 0);;
//│ 		let rec const2100000000_lh__d4 =
//│ 		  (Z.of_int 2100000000);;
//│ 		let rec const0_lh__d2 =
//│ 		  (Z.of_int 0);;
//│ 		let rec const2100000000_lh__d3 =
//│ 		  (Z.of_int 2100000000);;
//│ 		let rec testInteger_nofib_lh__d1 _lh_testInteger_nofib_arg1_0 =
//│ 		  ((((((runalltests_lh__d1 ((Z.sub const0_lh__d2) const2100000000_lh__d2)) _lh_testInteger_nofib_arg1_0) const2100000000_lh__d3) ((Z.sub const0_lh__d1) const2100000000_lh__d4)) _lh_testInteger_nofib_arg1_0) const2100000000_lh__d1);;
//│ 		(testInteger_nofib_lh__d1 const14000001_lh__d1)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< After Expansion <<<<<<<<<<
//│ 
//│ >>>>>>> fusion strategies >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< fusion strategies <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testInteger_nofib_lh_₁(primId⁰(const14000001_lh_₁))
//│ def const0_lh_₁ = z_of_int⁰(0)
//│ def const0_lh_₂ = z_of_int⁰(0)
//│ def const14000001_lh_₁ = z_of_int⁰(14000001)
//│ def const2100000000_lh_₁ = z_of_int⁰(2100000000)
//│ def const2100000000_lh_₂ = z_of_int⁰(2100000000)
//│ def const2100000000_lh_₃ = z_of_int⁰(2100000000)
//│ def const2100000000_lh_₄ = z_of_int⁰(2100000000)
//│ def enumFromThenTo_lh_₁(a²⁰, t⁰, b²⁰) = if (a²⁰ <= b²⁰) then [LH_C a²⁰ enumFromThenTo_lh_₁(t⁰, ((2 * t⁰) - a²⁰), b²⁰)] else [LH_N]
//│ def intbench_lh_₁(_lh_intbench_arg1⁰, _lh_intbench_arg2⁰, _lh_intbench_arg3⁰, _lh_intbench_arg4⁰, _lh_intbench_arg5⁰, _lh_intbench_arg6⁰, _lh_intbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 			let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C _lh_intbench_arg1⁰(_lh_listcomp_fun_ls_h⁰, _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 				| LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ 			in _lh_listcomp_fun¹(enumFromThenTo_lh_₁(z_to_int⁰(_lh_intbench_arg5⁰), (z_to_int⁰(_lh_intbench_arg2⁰) + z_to_int⁰(_lh_intbench_arg6⁰)), z_to_int⁰(_lh_intbench_arg7⁰)))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(enumFromThenTo_lh_₁(z_to_int⁰(_lh_intbench_arg2⁰), (z_to_int⁰(_lh_intbench_arg2⁰) + z_to_int⁰(_lh_intbench_arg3⁰)), z_to_int⁰(_lh_intbench_arg4⁰)))
//│ def intbench_lh_₂(_lh_intbench_arg1¹, _lh_intbench_arg2¹, _lh_intbench_arg3¹, _lh_intbench_arg4¹, _lh_intbench_arg5¹, _lh_intbench_arg6¹, _lh_intbench_arg7¹) = 
//│ 	let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => 
//│ 			let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 				LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C _lh_intbench_arg1¹(_lh_listcomp_fun_ls_h⁴, _lh_listcomp_fun_ls_h⁵) _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]
//│ 				| LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ 			in _lh_listcomp_fun⁵(enumFromThenTo_lh_₁(z_to_int⁰(_lh_intbench_arg5¹), (z_to_int⁰(_lh_intbench_arg2¹) + z_to_int⁰(_lh_intbench_arg6¹)), z_to_int⁰(_lh_intbench_arg7¹)))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁴(enumFromThenTo_lh_₁(z_to_int⁰(_lh_intbench_arg2¹), (z_to_int⁰(_lh_intbench_arg2¹) + z_to_int⁰(_lh_intbench_arg3¹)), z_to_int⁰(_lh_intbench_arg4¹)))
//│ def integerbench_lh_₁(_lh_integerbench_arg1⁰, _lh_integerbench_arg2⁰, _lh_integerbench_arg3⁰, _lh_integerbench_arg4⁰, _lh_integerbench_arg5⁰, _lh_integerbench_arg6⁰, _lh_integerbench_arg7⁰) = 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 			let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C _lh_integerbench_arg1⁰(_lh_listcomp_fun_ls_h², _lh_listcomp_fun_ls_h³) _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 				| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 			in _lh_listcomp_fun³(z_enumFromThenTo_lh_₁(_lh_integerbench_arg5⁰, z_add⁰(_lh_integerbench_arg2⁰, _lh_integerbench_arg6⁰), _lh_integerbench_arg7⁰))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(z_enumFromThenTo_lh_₁(_lh_integerbench_arg2⁰, z_add⁰(_lh_integerbench_arg2⁰, _lh_integerbench_arg3⁰), _lh_integerbench_arg4⁰))
//│ def runalltests_lh_₁(_lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg4⁰, _lh_runalltests_arg5⁰, _lh_runalltests_arg6⁰) = [LH_P10 runbench_lh_₃((fun a⁰ -> (fun b⁰ -> z_add⁰(a⁰, b⁰))), (fun a¹ -> (fun b¹ -> (a¹ + b¹))), [LH_C '(' [LH_C '+' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₆((fun a² -> (fun b² -> z_sub⁰(a², b²))), (fun a³ -> (fun b³ -> (a³ - b³))), [LH_C '(' [LH_C '-' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₇((fun a⁴ -> (fun b⁴ -> z_mul⁰(a⁴, b⁴))), (fun a⁵ -> (fun b⁵ -> (a⁵ * b⁵))), [LH_C '(' [LH_C '*' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₂((fun a⁶ -> (fun b⁶ -> z_div⁰(a⁶, b⁶))), (fun a⁷ -> (fun b⁷ -> div⁰(a⁷, b⁷))), [LH_C 'd' [LH_C 'i' [LH_C 'v' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₁₀((fun a⁸ -> (fun b⁸ -> z_mod⁰(a⁸, b⁸))), (fun a⁹ -> (fun b⁹ -> (a⁹ % b⁹))), [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₅((fun a¹⁰ -> (fun b¹⁰ -> z_equal⁰(a¹⁰, b¹⁰))), (fun a¹¹ -> (fun b¹¹ -> (a¹¹ == b¹¹))), [LH_C '(' [LH_C '=' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₁((fun a¹² -> (fun b¹² -> z_lt⁰(a¹², b¹²))), (fun a¹³ -> (fun b¹³ -> (a¹³ < b¹³))), [LH_C '(' [LH_C '<' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₄((fun a¹⁴ -> (fun b¹⁴ -> z_leq⁰(a¹⁴, b¹⁴))), (fun a¹⁵ -> (fun b¹⁵ -> (a¹⁵ <= b¹⁵))), [LH_C '(' [LH_C '<' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₉((fun a¹⁶ -> (fun b¹⁶ -> z_gt⁰(a¹⁶, b¹⁶))), (fun a¹⁷ -> (fun b¹⁷ -> (a¹⁷ > b¹⁷))), [LH_C '(' [LH_C '>' [LH_C ')' [LH_N]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰) runbench_lh_₈((fun a¹⁸ -> (fun b¹⁸ -> z_geq⁰(a¹⁸, b¹⁸))), (fun a¹⁹ -> (fun b¹⁹ -> (a¹⁹ >= b¹⁹))), [LH_C '(' [LH_C '>' [LH_C '=' [LH_C ')' [LH_N]]]]], _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰, _lh_runalltests_arg1⁰, _lh_runalltests_arg2⁰, _lh_runalltests_arg3⁰)]
//│ def runbench_lh_₁(_lh_runbench_arg1², _lh_runbench_arg2², _lh_runbench_arg3², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg7², _lh_runbench_arg8², _lh_runbench_arg9²) = [LH_P2 intbench_lh_₁(_lh_runbench_arg2², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²) integerbench_lh_₁(_lh_runbench_arg1², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6², _lh_runbench_arg4², _lh_runbench_arg5², _lh_runbench_arg6²)]
//│ def runbench_lh_₁₀(_lh_runbench_arg1⁹, _lh_runbench_arg2⁹, _lh_runbench_arg3⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg7⁹, _lh_runbench_arg8⁹, _lh_runbench_arg9⁹) = [LH_P2 intbench_lh_₂(_lh_runbench_arg2⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹) integerbench_lh_₁(_lh_runbench_arg1⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹, _lh_runbench_arg4⁹, _lh_runbench_arg5⁹, _lh_runbench_arg6⁹)]
//│ def runbench_lh_₂(_lh_runbench_arg1⁴, _lh_runbench_arg2⁴, _lh_runbench_arg3⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg7⁴, _lh_runbench_arg8⁴, _lh_runbench_arg9⁴) = [LH_P2 intbench_lh_₂(_lh_runbench_arg2⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴) integerbench_lh_₁(_lh_runbench_arg1⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴, _lh_runbench_arg4⁴, _lh_runbench_arg5⁴, _lh_runbench_arg6⁴)]
//│ def runbench_lh_₃(_lh_runbench_arg1⁷, _lh_runbench_arg2⁷, _lh_runbench_arg3⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg7⁷, _lh_runbench_arg8⁷, _lh_runbench_arg9⁷) = [LH_P2 intbench_lh_₂(_lh_runbench_arg2⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷) integerbench_lh_₁(_lh_runbench_arg1⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷, _lh_runbench_arg4⁷, _lh_runbench_arg5⁷, _lh_runbench_arg6⁷)]
//│ def runbench_lh_₄(_lh_runbench_arg1⁰, _lh_runbench_arg2⁰, _lh_runbench_arg3⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg7⁰, _lh_runbench_arg8⁰, _lh_runbench_arg9⁰) = [LH_P2 intbench_lh_₂(_lh_runbench_arg2⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰) integerbench_lh_₁(_lh_runbench_arg1⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰, _lh_runbench_arg4⁰, _lh_runbench_arg5⁰, _lh_runbench_arg6⁰)]
//│ def runbench_lh_₅(_lh_runbench_arg1³, _lh_runbench_arg2³, _lh_runbench_arg3³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg7³, _lh_runbench_arg8³, _lh_runbench_arg9³) = [LH_P2 intbench_lh_₂(_lh_runbench_arg2³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³) integerbench_lh_₁(_lh_runbench_arg1³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³, _lh_runbench_arg4³, _lh_runbench_arg5³, _lh_runbench_arg6³)]
//│ def runbench_lh_₆(_lh_runbench_arg1⁵, _lh_runbench_arg2⁵, _lh_runbench_arg3⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg7⁵, _lh_runbench_arg8⁵, _lh_runbench_arg9⁵) = [LH_P2 intbench_lh_₂(_lh_runbench_arg2⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵) integerbench_lh_₁(_lh_runbench_arg1⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵, _lh_runbench_arg4⁵, _lh_runbench_arg5⁵, _lh_runbench_arg6⁵)]
//│ def runbench_lh_₇(_lh_runbench_arg1⁶, _lh_runbench_arg2⁶, _lh_runbench_arg3⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg7⁶, _lh_runbench_arg8⁶, _lh_runbench_arg9⁶) = [LH_P2 intbench_lh_₂(_lh_runbench_arg2⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶) integerbench_lh_₁(_lh_runbench_arg1⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶, _lh_runbench_arg4⁶, _lh_runbench_arg5⁶, _lh_runbench_arg6⁶)]
//│ def runbench_lh_₈(_lh_runbench_arg1⁸, _lh_runbench_arg2⁸, _lh_runbench_arg3⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg7⁸, _lh_runbench_arg8⁸, _lh_runbench_arg9⁸) = [LH_P2 intbench_lh_₂(_lh_runbench_arg2⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸) integerbench_lh_₁(_lh_runbench_arg1⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸, _lh_runbench_arg4⁸, _lh_runbench_arg5⁸, _lh_runbench_arg6⁸)]
//│ def runbench_lh_₉(_lh_runbench_arg1¹, _lh_runbench_arg2¹, _lh_runbench_arg3¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg7¹, _lh_runbench_arg8¹, _lh_runbench_arg9¹) = [LH_P2 intbench_lh_₂(_lh_runbench_arg2¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹) integerbench_lh_₁(_lh_runbench_arg1¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹, _lh_runbench_arg4¹, _lh_runbench_arg5¹, _lh_runbench_arg6¹)]
//│ def testInteger_nofib_lh_₁(_lh_testInteger_nofib_arg1⁰) = runalltests_lh_₁(z_sub⁰(const0_lh_₂, const2100000000_lh_₂), _lh_testInteger_nofib_arg1⁰, const2100000000_lh_₃, z_sub⁰(const0_lh_₁, const2100000000_lh_₄), _lh_testInteger_nofib_arg1⁰, const2100000000_lh_₁)
//│ def z_enumFromThenTo_lh_₁(_lh_z_enumFromThenTo_arg1⁰, _lh_z_enumFromThenTo_arg2⁰, _lh_z_enumFromThenTo_arg3⁰) = if z_leq⁰(_lh_z_enumFromThenTo_arg1⁰, _lh_z_enumFromThenTo_arg3⁰) then [LH_C _lh_z_enumFromThenTo_arg1⁰ z_enumFromThenTo_lh_₁(_lh_z_enumFromThenTo_arg2⁰, z_sub⁰(z_mul⁰(z_of_int⁰(2), _lh_z_enumFromThenTo_arg2⁰), _lh_z_enumFromThenTo_arg1⁰), _lh_z_enumFromThenTo_arg3⁰)] else [LH_N]
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
