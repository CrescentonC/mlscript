:NewParser
:ParseOnly

:lhNoIter
:lhInHaskell
:lhGenOCaml
mySnd (a,b) = b
myIsDigit c = let n = int_of_char c in (n >= 48) && (n <= 57)
copy n x = if n <= 0 then [] else x:(copy (n-1) x)
inList x (h:t) = if polyEq x h then True else inList x t
inList x [] = False
eqTupleTwo (a,b) (c,d) = (polyEq a b) && (polyEq c d)
intintComp :: (Int, Int) -> (Int, Int) -> Bool
intintComp (a,b) (c,d) = (a < c) || ((a == c) && (b < d))
intChessSetComp :: (Int, ChessSet) -> (Int, ChessSet) -> Bool
intChessSetComp (a,b) (c,d) = (a < c)
myInit (a:[]) = []
myInit (a:t) = a:(myInit t)
myLast [] = (0-100, 0-100)
myLast (h:t) = go h t
  where
    go h [] = h
    go h (head:t) = go head t
type Tile     = (Int,Int)
data ChessSet = Board Int Int Tile [Tile]
-- instance Eq ChessSet where
--     _ == _ = True
-- instance Ord ChessSet where
--     _ <= _ = True
-- instance Show ChessSet where
--    showsPrec p board@(Board sze n f ts)
--       = showString (printBoard sze 1 sortedTrail)
--         where
--          sortedTrail = quickSort (assignMoveNo ts sze n)
showChessSet (Board sze n f ts) =
  let sortedTrail = quickSortIntInt (assignMoveNo ts sze n) in
  printBoard sze 1 sortedTrail
createBoard::Int -> Tile -> ChessSet
createBoard x t = Board x 1 t [t]
sizeBoard::ChessSet -> Int
sizeBoard (Board s _ _ _) = s
noPieces::ChessSet -> Int
noPieces (Board _ n _ _) = n
addPiece::Tile -> ChessSet -> ChessSet
addPiece t (Board s n f ts) = Board s (n+1) f (t:ts)
deleteFirst::ChessSet -> ChessSet
deleteFirst (Board s n f ts) =
  let ts' = myInit ts in
  Board s (n-1) (myLast ts') ts'
positionPiece::Int -> ChessSet -> Tile
positionPiece x (Board _ n _ ts) = atIndex (n - x) ts
lastPiece::ChessSet -> Tile
lastPiece (Board _ _ _ (t:ts)) = t
firstPiece::ChessSet -> Tile
firstPiece (Board _ _ f _) = f
pieceAtTile::Tile -> ChessSet -> Int
pieceAtTile x (Board _ _ _ ts)
   = find x ts
     where
      find x [] = error "Tile not used"
      find x (y:xs) = if eqTupleTwo x y then (1 + length xs) else find x xs
isSquareFree::Tile -> ChessSet -> Bool
isSquareFree x (Board _ _ _ ts) = not (inList x ts)
assignMoveNo [] size x = []
assignMoveNo ((x,y):t) size z =(((y-1)*size)+x,z):(assignMoveNo t size (z-1))
printBoard s n [] = 
   if (n  > (s*s)) then ""
   else if ((n `mod` s) /= 0) then "*" ++ (spaces (s*s) 1) ++ (printBoard s (n+1) [] )
   else if ((n `mod` s) == 0) then "*|" ++ (printBoard s (n+1) [] )
   else error "printBoard empty list error"
printBoard s n ((i,j):xs) = 
   if (i == n) && ((n `mod` s) == 0) then (string_of_int j) ++ "|" ++ (printBoard s (n+1) xs )
   else if (i==n) && ((n `mod` s) /= 0) then (string_of_int j) ++ (spaces (s*s) j) ++ (printBoard s (n+1) xs )
   else if ((n `mod` s) /= 0) then "*" ++ (spaces (s*s) 1) ++ (printBoard s (n+1) ((i,j):xs) )
   else if ((n `mod` s) == 0) then "*|" ++ (printBoard s (n+1) ((i,j):xs) )
   else error "printBoard non-empty list error"
spaces s y = copy ((logTen s) - (logTen y) + 1) ' '
      where
         logTen 0 = 0
         logTen x = 1 + logTen (x `div` 10)
data Direction = UL | UR | DL |DR | LU | LD | RU | RD
move::Direction -> Tile -> Tile
move UL (x,y) = (x-1,y-2)
move UR (x,y) = (x+1,y-2)
move DL (x,y) = (x-1,y+2)
move DR (x,y) = (x+1,y+2)
move LU (x,y) = (x-2,y-1)
move LD (x,y) = (x-2,y+1)
move RU (x,y) = (x+2,y-1)
move RD (x,y) = (x+2,y+1)
startTour::Tile -> Int -> ChessSet
startTour st size =
  if ((size `mod` 2) == 0) then createBoard size st
  else error "Tour doesnt exist for odd size board"
moveKnight::ChessSet -> Direction -> ChessSet
moveKnight board dir
   = addPiece (move dir (lastPiece board)) board
canMove::ChessSet -> Direction -> Bool
canMove board dir
   = canMoveTo (move dir (lastPiece board)) board
canMoveTo::Tile -> ChessSet -> Bool
canMoveTo (x,y) board =
  let sze = sizeBoard board in
  (x >= 1) && (x <=sze) && (y >= 1) && (y <=sze) && (isSquareFree (x,y) board)
descendents::ChessSet -> [ChessSet]
descendents board =
  if (canJumpFirst board) && (deadEnd (addPiece (firstPiece board) board)) then []
  else
    let singles = singleDescend board in
    let scrut = length singles in
    if scrut == 0 then map mySnd (quickSortIntChessSet (descAndNo board))
    else if scrut == 1 then singles
    else []
singleDescend::ChessSet -> [ChessSet]    
singleDescend board = [x | (y,x) <- descAndNo board, y == 1]
descAndNo::ChessSet -> [(Int,ChessSet)]
descAndNo board
   = [(length (possibleMoves (deleteFirst x)),x) | x<- allDescend board]
allDescend::ChessSet -> [ChessSet]
allDescend board
   =  map (moveKnight board) (possibleMoves board)
possibleMoves::ChessSet -> [Direction]
possibleMoves board
   =[x | x <- [UL,UR,DL,DR,LU,LD,RU,RD], (canMove board x)]
deadEnd::ChessSet -> Bool
deadEnd board = (length (possibleMoves board)) == 0
canJumpFirst::ChessSet -> Bool
canJumpFirst board
  = canMoveTo (firstPiece board) (deleteFirst board)
tourFinished::ChessSet -> Bool
tourFinished board =
  let sze = sizeBoard board in
  ((noPieces board) == (sze*sze)) && (canJumpFirst board)
printTour::[[Char]] -> [Char]
printTour ss =
  case (map (strToInt 0) ss) of {
    [size, number] -> pp (take_lz number (depthSearch (root size) grow isFinished))
  }
    where
      strToInt y []     = y
      strToInt y (x:xs) = strToInt ((10*y) + (int_of_char x - int_of_char '0')) xs
      pp []      = []
      pp ((x,y):xs)     = "|Knights tour with " ++ (string_of_int x)  ++ " backtracking moves|" ++ (showChessSet y) ++ (pp xs)
grow::(Int,ChessSet) -> [(Int,ChessSet)]
grow (x,y) = zip_lz_nl (repeat (x+1)) (descendents y)
isFinished::(Int,ChessSet) -> Bool
isFinished (x,y) = tourFinished y
root::Int -> Queue (Int,ChessSet)
root sze = addAllFront (zip_lz_nl (repeat (1-(sze*sze))) (zipWith startTour [(x,y) | x<-[1..sze], y<-[1..sze]] (copy (sze*sze) sze))) createQueue
-- depthSearch :: (Eq a) => Queue a -> (a -> [a]) -> (a -> Bool) -> Queue a
depthSearch q growFn finFn =
  if (case q of { [] -> True; _ -> False} ) then lazy []
  else if finFn (inquireFront q) then lazy ((inquireFront q):((depthSearch (removeFront q) growFn finFn)))
  else (depthSearch (addAllFront (growFn (inquireFront q)) (removeFront q)) growFn finFn)
type Queue a = [a]
createQueue::Queue a
createQueue = []
addFront::a -> Queue a -> Queue a
addFront x q = x:q
addBack::a -> Queue a -> Queue a
addBack x q = q ++ [x]
addAllFront::[a] -> Queue a -> Queue a
addAllFront list q = list ++ q
addAllBack::[a] -> Queue a -> Queue a
addAllBack list q = q ++ list
inquireFront::Queue a -> a
inquireFront []    = error "Cannot inquire on empty Queue"
inquireFront (h:t) = h
inquireBack::Queue a -> a
inquireBack []     = error "Cannot inquire on empty Queue"
inquireBack [x]    = x
inquireBack (x:xs) = inquireBack xs
removeFront::Queue a -> Queue a
removeFront []    = error "Cannot remove from an empty Queue"
removeFront (h:t) = t
removeBack::Queue a -> Queue a
removeBack []    = error "Cannot inquire on empty Queue"
removeBack [x]   =  []
removeBack (x:xs) = x:(removeBack xs)
-- emptyQueue::(Eq a) => Queue a -> Bool
emptyQueue x = polyEq x []
sizeQueue::Queue b -> Int
sizeQueue xs = length xs
-- quickSort :: (Ord a) => [a] -> [a]
quickSortIntChessSet []     = []
quickSortIntChessSet (x:xs) = (quickSortIntChessSet [y | y<-xs, intChessSetComp y x]) ++ [x] ++ (quickSortIntChessSet [y | y<-xs, not (intChessSetComp y x)])
quickSortIntInt []     = []
quickSortIntInt (x:xs) = (quickSortIntInt [y | y<-xs, intintComp y x]) ++ [x] ++ (quickSortIntInt [y | y<-xs, not (intintComp y x)])
testKnights_nofib ss =
  if (argsOk ss) then
    (length (printTour ss))
  else
    error usageString
  where
    usageString= "|Usage: knights <board size> <no solutions>|"
    argsOk ss = ((length ss) == 2) && (foldr ((\a b -> a && b) . all_digits) True ss)
    all_digits s = foldr ((\a b -> a && b) . myIsDigit) True s
testKnights_nofib $ primId ["8", "1"]
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testKnights_nofib_lh^2057(primId⁰([LH_C [LH_C '8' [LH_N]] [LH_C [LH_C '1' [LH_N]] [LH_N]]]))
//│ def addAllFront_lh(_lh_addAllFront_arg1⁰, _lh_addAllFront_arg2⁰) = mappend_lh^1629(_lh_addAllFront_arg1⁰, _lh_addAllFront_arg2⁰)
//│ def addPiece_lh(_lh_addPiece_arg1⁰, _lh_addPiece_arg2⁰) = case _lh_addPiece_arg2⁰ of {
//│ 	Board _lh_addPiece_Board_0⁰ _lh_addPiece_Board_1⁰ _lh_addPiece_Board_2⁰ _lh_addPiece_Board_3⁰ => [Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]
//│ 	| _  => error⁰}
//│ def allDescend_lh(_lh_allDescend_arg1⁰) = map_lh^1543(moveKnight_lh^1544(_lh_allDescend_arg1⁰), possibleMoves_lh^1548(_lh_allDescend_arg1⁰))
//│ def assignMoveNo_lh(_lh_assignMoveNo_arg1⁰, _lh_assignMoveNo_arg2⁰, _lh_assignMoveNo_arg3⁰) = case _lh_assignMoveNo_arg1⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_assignMoveNo_LH_C_0⁰ _lh_assignMoveNo_LH_C_1⁰ => case _lh_assignMoveNo_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh^873(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def canJumpFirst_lh(_lh_canJumpFirst_arg1⁰) = canMoveTo_lh^1553(firstPiece_lh^1554(_lh_canJumpFirst_arg1⁰), deleteFirst_lh^1558(_lh_canJumpFirst_arg1⁰))
//│ def canMoveTo_lh(_lh_canMoveTo_arg1⁰, _lh_canMoveTo_arg2⁰) = case _lh_canMoveTo_arg1⁰ of {
//│ 	LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => 
//│ 		let sze¹ = sizeBoard_lh^1582(_lh_canMoveTo_arg2⁰)
//│ 		in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh^1616([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰))
//│ 	| _  => error⁰}
//│ def canMove_lh(_lh_canMove_arg1⁰, _lh_canMove_arg2⁰) = canMoveTo_lh^1447(move_lh^1448(_lh_canMove_arg2⁰, lastPiece_lh^1451(_lh_canMove_arg1⁰)), _lh_canMove_arg1⁰)
//│ def copy_lh(_lh_copy_arg1⁰, _lh_copy_arg2⁰) = if (_lh_copy_arg1⁰ <= 0) then [LH_N] else [LH_C _lh_copy_arg2⁰ copy_lh^1781((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]
//│ def createBoard_lh(_lh_createBoard_arg1⁰, _lh_createBoard_arg2⁰) = [Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]
//│ def createQueue_lh = [LH_N]
//│ def deadEnd_lh(_lh_deadEnd_arg1⁰) = (length_lh^1564(possibleMoves_lh^1565(_lh_deadEnd_arg1⁰)) == 0)
//│ def deleteFirst_lh(_lh_deleteFirst_arg1⁰) = case _lh_deleteFirst_arg1⁰ of {
//│ 	Board _lh_deleteFirst_Board_0⁰ _lh_deleteFirst_Board_1⁰ _lh_deleteFirst_Board_2⁰ _lh_deleteFirst_Board_3⁰ => 
//│ 		let ts'⁰ = myInit_lh^1870(_lh_deleteFirst_Board_3⁰)
//│ 		in [Board _lh_deleteFirst_Board_0⁰ (_lh_deleteFirst_Board_1⁰ - 1) myLast_lh^1879(ts'⁰) ts'⁰]
//│ 	| _  => error⁰}
//│ def depthSearch_lh(_lh_depthSearch_arg1⁰, _lh_depthSearch_arg2⁰, _lh_depthSearch_arg3⁰) = if 
//│ 	let _lh_matchIdent¹ = _lh_depthSearch_arg1⁰
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_N  => [True]
//│ 		| _  => [False]} then lazy⁰([LH_N]) else if _lh_depthSearch_arg3⁰(inquireFront_lh^1967(_lh_depthSearch_arg1⁰)) then lazy⁰([LH_C inquireFront_lh^1972(_lh_depthSearch_arg1⁰) depthSearch_lh^1975(removeFront_lh^1976(_lh_depthSearch_arg1⁰), _lh_depthSearch_arg2⁰, _lh_depthSearch_arg3⁰)]) else depthSearch_lh^1986(addAllFront_lh^1987(_lh_depthSearch_arg2⁰(inquireFront_lh^1989(_lh_depthSearch_arg1⁰)), removeFront_lh^1994(_lh_depthSearch_arg1⁰)), _lh_depthSearch_arg2⁰, _lh_depthSearch_arg3⁰)
//│ def descAndNo_lh(_lh_descAndNo_arg1⁰) = 
//│ 	let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 length_lh^1520(possibleMoves_lh^1521(deleteFirst_lh^1522(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁵(allDescend_lh^1537(_lh_descAndNo_arg1⁰))
//│ def descendents_lh(_lh_descendents_arg1⁰) = if (canJumpFirst_lh^2009(_lh_descendents_arg1⁰) && deadEnd_lh^2013(addPiece_lh^2014(firstPiece_lh^2015(_lh_descendents_arg1⁰), _lh_descendents_arg1⁰))) then [LH_N] else 
//│ 	let singles⁰ = singleDescend_lh^2024(_lh_descendents_arg1⁰)
//│ 	in let scrut⁰ = length_lh^2027(singles⁰)
//│ 	in if (scrut⁰ == 0) then map_lh^2035(mySnd_lh^2036, quickSortIntChessSet_lh^2038(descAndNo_lh^2039(_lh_descendents_arg1⁰))) else if (scrut⁰ == 1) then singles⁰ else [LH_N]
//│ def enumFromTo_lh(a⁰, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromTo_lh^79((a⁰ + 1), b⁰)] else [LH_N]
//│ def firstPiece_lh(_lh_firstPiece_arg1⁰) = case _lh_firstPiece_arg1⁰ of {
//│ 	Board _lh_firstPiece_Board_0⁰ _lh_firstPiece_Board_1⁰ _lh_firstPiece_Board_2⁰ _lh_firstPiece_Board_3⁰ => _lh_firstPiece_Board_2⁰
//│ 	| _  => error⁰}
//│ def foldr_lh(f¹, i⁰, ls¹) = case ls¹ of {
//│ 	LH_C h¹ t¹ => f¹(h¹, foldr_lh^19(f¹, i⁰, t¹))
//│ 	| LH_N  => i⁰}
//│ def grow_lh(_lh_grow_arg1⁰) = case _lh_grow_arg1⁰ of {
//│ 	LH_P2 _lh_grow_LH_P2_0⁰ _lh_grow_LH_P2_1⁰ => zip_lz_nl_lh^600(repeat_lh^601((_lh_grow_LH_P2_0⁰ + 1)), descendents_lh^609(_lh_grow_LH_P2_1⁰))
//│ 	| _  => error⁰}
//│ def inList_lh(_lh_inList_arg1⁰, _lh_inList_arg2⁰) = case _lh_inList_arg2⁰ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if polyEq⁰(_lh_inList_arg1⁰, _lh_inList_LH_C_0⁰) then [True] else inList_lh^1717(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inquireFront_lh(_lh_inquireFront_arg1⁰) = case _lh_inquireFront_arg1⁰ of {
//│ 	LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	| LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰
//│ 	| _  => error⁰}
//│ def intChessSetComp_lh(_lh_intChessSetComp_arg1⁰, _lh_intChessSetComp_arg2⁰) = case _lh_intChessSetComp_arg1⁰ of {
//│ 	LH_P2 _lh_intChessSetComp_LH_P2_0⁰ _lh_intChessSetComp_LH_P2_1⁰ => case _lh_intChessSetComp_arg2⁰ of {
//│ 		LH_P2 _lh_intChessSetComp_LH_P2_0¹ _lh_intChessSetComp_LH_P2_1¹ => (_lh_intChessSetComp_LH_P2_0⁰ < _lh_intChessSetComp_LH_P2_0¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def intintComp_lh(_lh_intintComp_arg1⁰, _lh_intintComp_arg2⁰) = case _lh_intintComp_arg1⁰ of {
//│ 	LH_P2 _lh_intintComp_LH_P2_0⁰ _lh_intintComp_LH_P2_1⁰ => case _lh_intintComp_arg2⁰ of {
//│ 		LH_P2 _lh_intintComp_LH_P2_0¹ _lh_intintComp_LH_P2_1¹ => ((_lh_intintComp_LH_P2_0⁰ < _lh_intintComp_LH_P2_0¹) || ((_lh_intintComp_LH_P2_0⁰ == _lh_intintComp_LH_P2_0¹) && (_lh_intintComp_LH_P2_1⁰ < _lh_intintComp_LH_P2_1¹)))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def isFinished_lh(_lh_isFinished_arg1⁰) = case _lh_isFinished_arg1⁰ of {
//│ 	LH_P2 _lh_isFinished_LH_P2_0⁰ _lh_isFinished_LH_P2_1⁰ => tourFinished_lh^1134(_lh_isFinished_LH_P2_1⁰)
//│ 	| _  => error⁰}
//│ def isSquareFree_lh(_lh_isSquareFree_arg1⁰, _lh_isSquareFree_arg2⁰) = case _lh_isSquareFree_arg2⁰ of {
//│ 	Board _lh_isSquareFree_Board_0⁰ _lh_isSquareFree_Board_1⁰ _lh_isSquareFree_Board_2⁰ _lh_isSquareFree_Board_3⁰ => not⁰(inList_lh^1509(_lh_isSquareFree_arg1⁰, _lh_isSquareFree_Board_3⁰))
//│ 	| _  => error⁰}
//│ def lastPiece_lh(_lh_lastPiece_arg1⁰) = case _lh_lastPiece_arg1⁰ of {
//│ 	Board _lh_lastPiece_Board_0⁰ _lh_lastPiece_Board_1⁰ _lh_lastPiece_Board_2⁰ _lh_lastPiece_Board_3⁰ => case _lh_lastPiece_Board_3⁰ of {
//│ 		LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def length_lh(ls³) = case ls³ of {
//│ 	LH_C h³ t³ => (1 + length_lh^130(t³))
//│ 	| LH_N  => 0}
//│ def map_lh(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh^5(f⁰, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh(xs², ys²) = case xs² of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh^139(t⁴, ys²)]
//│ 	| LH_N  => ys²}
//│ def moveKnight_lh(_lh_moveKnight_arg1⁰, _lh_moveKnight_arg2⁰) = addPiece_lh^1489(move_lh^1490(_lh_moveKnight_arg2⁰, lastPiece_lh^1493(_lh_moveKnight_arg1⁰)), _lh_moveKnight_arg1⁰)
//│ def move_lh(_lh_move_arg1⁰, _lh_move_arg2⁰) = case _lh_move_arg1⁰ of {
//│ 	UL  => case _lh_move_arg2⁰ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]
//│ 		| _  => error⁰}
//│ 	| UR  => case _lh_move_arg2⁰ of {
//│ 		LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]
//│ 		| _  => error⁰}
//│ 	| DL  => case _lh_move_arg2⁰ of {
//│ 		LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]
//│ 		| _  => error⁰}
//│ 	| DR  => case _lh_move_arg2⁰ of {
//│ 		LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]
//│ 		| _  => error⁰}
//│ 	| LU  => case _lh_move_arg2⁰ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]
//│ 		| _  => error⁰}
//│ 	| LD  => case _lh_move_arg2⁰ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]
//│ 		| _  => error⁰}
//│ 	| RU  => case _lh_move_arg2⁰ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]
//│ 		| _  => error⁰}
//│ 	| RD  => case _lh_move_arg2⁰ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def myInit_lh(_lh_myInit_arg1⁰) = case _lh_myInit_arg1⁰ of {
//│ 	LH_C _lh_myInit_LH_C_0⁰ _lh_myInit_LH_C_1⁰ => case _lh_myInit_LH_C_1⁰ of {
//│ 		LH_N  => [LH_N]
//│ 		| _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh^591(_lh_myInit_LH_C_1⁰)]}
//│ 	| _  => error⁰}
//│ def myIsDigit_lh(_lh_myIsDigit_arg1⁰) = 
//│ 	let n¹ = int_of_char⁰(_lh_myIsDigit_arg1⁰)
//│ 	in ((n¹ >= 48) && (n¹ <= 57))
//│ def myLast_lh(_lh_myLast_arg1⁰) = case _lh_myLast_arg1⁰ of {
//│ 	LH_N  => [LH_P2 (0 - 100) (0 - 100)]
//│ 	| LH_C _lh_myLast_LH_C_0⁰ _lh_myLast_LH_C_1⁰ => 
//│ 		let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {
//│ 			LH_N  => _lh_go_arg1⁰
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go⁰(_lh_myLast_LH_C_0⁰, _lh_myLast_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def mySnd_lh(_lh_mySnd_arg1⁰) = case _lh_mySnd_arg1⁰ of {
//│ 	LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def noPieces_lh(_lh_noPieces_arg1⁰) = case _lh_noPieces_arg1⁰ of {
//│ 	Board _lh_noPieces_Board_0⁰ _lh_noPieces_Board_1⁰ _lh_noPieces_Board_2⁰ _lh_noPieces_Board_3⁰ => _lh_noPieces_Board_1⁰
//│ 	| _  => error⁰}
//│ def possibleMoves_lh(_lh_possibleMoves_arg1⁰) = 
//│ 	let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh^1141(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁴([LH_C [UL] [LH_C [UR] [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]]])
//│ def printBoard_lh(_lh_printBoard_arg1⁰, _lh_printBoard_arg2⁰, _lh_printBoard_arg3⁰) = case _lh_printBoard_arg3⁰ of {
//│ 	LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh^169(mappend_lh^170([LH_C '*' [LH_N]], spaces_lh^175((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh^186(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh^207([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh^214(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	| LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {
//│ 		LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh^304(mappend_lh^305(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh^315(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh^344(mappend_lh^345(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh^350((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh^361(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh^382(mappend_lh^383([LH_C '*' [LH_N]], spaces_lh^388((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh^399(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh^424([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh^431(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def printTour_lh(_lh_printTour_arg1⁰) = 
//│ 	let strToInt⁰ = (fun _lh_strToInt_arg1⁰ -> (fun _lh_strToInt_arg2⁰ -> case _lh_strToInt_arg2⁰ of {
//│ 			LH_N  => _lh_strToInt_arg1⁰
//│ 			| LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 	and pp⁰ = (fun _lh_pp_arg1⁰ -> case _lh_pp_arg1⁰ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_pp_LH_C_0⁰ _lh_pp_LH_C_1⁰ => case _lh_pp_LH_C_0⁰ of {
//│ 				LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh^1301(mappend_lh^1302(mappend_lh^1303(mappend_lh^1304([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh^1393(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰))
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}) 
//│ 	in let _lh_matchIdent⁰ = map_lh^1407(strToInt⁰(0), _lh_printTour_arg1⁰)
//│ 	in case _lh_matchIdent⁰ of {
//│ 		LH_C _lh_printTour_LH_C_0⁰ _lh_printTour_LH_C_1⁰ => case _lh_printTour_LH_C_1⁰ of {
//│ 			LH_C _lh_printTour_LH_C_0¹ _lh_printTour_LH_C_1¹ => case _lh_printTour_LH_C_1¹ of {
//│ 				LH_N  => pp⁰(take_lz_lh^1418(_lh_printTour_LH_C_0¹, depthSearch_lh^1421(root_lh^1422(_lh_printTour_LH_C_0⁰), grow_lh^1426, isFinished_lh^1428)))
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ def quickSortIntChessSet_lh(_lh_quickSortIntChessSet_arg1⁰) = case _lh_quickSortIntChessSet_arg1⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_quickSortIntChessSet_LH_C_0⁰ _lh_quickSortIntChessSet_LH_C_1⁰ => mappend_lh^1890(mappend_lh^1891(quickSortIntChessSet_lh^1892(
//│ 		let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh^1894(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁷(_lh_quickSortIntChessSet_LH_C_1⁰)), [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]), quickSortIntChessSet_lh^1922(
//│ 		let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh^1925(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁸(_lh_quickSortIntChessSet_LH_C_1⁰)))
//│ 	| _  => error⁰}
//│ def quickSortIntInt_lh(_lh_quickSortIntInt_arg1⁰) = case _lh_quickSortIntInt_arg1⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_quickSortIntInt_LH_C_0⁰ _lh_quickSortIntInt_LH_C_1⁰ => mappend_lh^525(mappend_lh^526(quickSortIntInt_lh^527(
//│ 		let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh^529(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁰(_lh_quickSortIntInt_LH_C_1⁰)), [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]), quickSortIntInt_lh^557(
//│ 		let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 			LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh^560(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun¹(_lh_quickSortIntInt_LH_C_1⁰)))
//│ 	| _  => error⁰}
//│ def removeFront_lh(_lh_removeFront_arg1⁰) = case _lh_removeFront_arg1⁰ of {
//│ 	LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	| LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰
//│ 	| _  => error⁰}
//│ def repeat_lh(x⁰) = lazy⁰([LH_C x⁰ repeat_lh^95(x⁰)])
//│ def root_lh(_lh_root_arg1⁰) = addAllFront_lh^1049(zip_lz_nl_lh^1050(repeat_lh^1051((1 - (_lh_root_arg1⁰ * _lh_root_arg1⁰))), zipWith_lh^1063(startTour_lh^1064, 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 			let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 				| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 			in _lh_listcomp_fun³(enumFromTo_lh^1081(1, _lh_root_arg1⁰))
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(enumFromTo_lh^1092(1, _lh_root_arg1⁰)), copy_lh^1100((_lh_root_arg1⁰ * _lh_root_arg1⁰), _lh_root_arg1⁰))), createQueue_lh^1112)
//│ def showChessSet_lh(_lh_showChessSet_arg1⁰) = case _lh_showChessSet_arg1⁰ of {
//│ 	Board _lh_showChessSet_Board_0⁰ _lh_showChessSet_Board_1⁰ _lh_showChessSet_Board_2⁰ _lh_showChessSet_Board_3⁰ => 
//│ 		let sortedTrail⁰ = quickSortIntInt_lh^617(assignMoveNo_lh^618(_lh_showChessSet_Board_3⁰, _lh_showChessSet_Board_0⁰, _lh_showChessSet_Board_1⁰))
//│ 		in printBoard_lh^626(_lh_showChessSet_Board_0⁰, 1, sortedTrail⁰)
//│ 	| _  => error⁰}
//│ def singleDescend_lh(_lh_singleDescend_arg1⁰) = 
//│ 	let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => case _lh_listcomp_fun_ls_h⁶ of {
//│ 			LH_P2 _lh_singleDescend_LH_P2_0⁰ _lh_singleDescend_LH_P2_1⁰ => if (_lh_singleDescend_LH_P2_0⁰ == 1) then [LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)
//│ 			| _  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁶(descAndNo_lh^1768(_lh_singleDescend_arg1⁰))
//│ def sizeBoard_lh(_lh_sizeBoard_arg1⁰) = case _lh_sizeBoard_arg1⁰ of {
//│ 	Board _lh_sizeBoard_Board_0⁰ _lh_sizeBoard_Board_1⁰ _lh_sizeBoard_Board_2⁰ _lh_sizeBoard_Board_3⁰ => _lh_sizeBoard_Board_0⁰
//│ 	| _  => error⁰}
//│ def spaces_lh(_lh_spaces_arg1⁰, _lh_spaces_arg2⁰) = 
//│ 	let logTen⁰ = (fun _lh_logTen_arg1⁰ -> case _lh_logTen_arg1⁰ of {
//│ 		0  => 0
//│ 		| _  => (1 + logTen⁰(div⁰(_lh_logTen_arg1⁰, 10)))})
//│ 	in copy_lh^835(((logTen⁰(_lh_spaces_arg1⁰) - logTen⁰(_lh_spaces_arg2⁰)) + 1), ' ')
//│ def startTour_lh(_lh_startTour_arg1⁰, _lh_startTour_arg2⁰) = if ((_lh_startTour_arg2⁰ % 2) == 0) then createBoard_lh^1188(_lh_startTour_arg2⁰, _lh_startTour_arg1⁰) else error⁰([LH_C 'T' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'd' [LH_C 'o' [LH_C 'e' [LH_C 's' [LH_C 'n' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'f' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'o' [LH_C 'd' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'i' [LH_C 'z' [LH_C 'e' [LH_C ' ' [LH_C 'b' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ def take_lz_lh(n⁰, ls²) = if (n⁰ > 0) then case force⁰(ls²) of {
//│ 	LH_C h² t² => [LH_C h² take_lz_lh^110((n⁰ - 1), t²)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testKnights_nofib_lh(_lh_testKnights_nofib_arg1⁰) = 
//│ 	let all_digits⁰ = (fun _lh_all_digits_arg1⁰ -> foldr_lh^669((fun _lh_funcomp_x⁰ -> (fun a¹ -> (fun b¹ -> (a¹ && b¹)))(myIsDigit_lh^677(_lh_funcomp_x⁰))), [True], _lh_all_digits_arg1⁰))
//│ 	and argsOk⁰ = (fun _lh_argsOk_arg1⁰ -> ((length_lh^690(_lh_argsOk_arg1⁰) == 2) && foldr_lh^697((fun _lh_funcomp_x¹ -> (fun a² -> (fun b² -> (a² && b²)))(all_digits⁰(_lh_funcomp_x¹))), [True], _lh_argsOk_arg1⁰)))
//│ 	and usageString⁰ = [LH_C '|' [LH_C 'U' [LH_C 's' [LH_C 'a' [LH_C 'g' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_C 'k' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C '<' [LH_C 'b' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'i' [LH_C 'z' [LH_C 'e' [LH_C '>' [LH_C ' ' [LH_C '<' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C 's' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C 's' [LH_C '>' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]] 
//│ 	in if argsOk⁰(_lh_testKnights_nofib_arg1⁰) then length_lh^809(printTour_lh^810(_lh_testKnights_nofib_arg1⁰)) else error⁰(usageString⁰)
//│ def tourFinished_lh(_lh_tourFinished_arg1⁰) = 
//│ 	let sze⁰ = sizeBoard_lh^1009(_lh_tourFinished_arg1⁰)
//│ 	in ((noPieces_lh^1014(_lh_tourFinished_arg1⁰) == (sze⁰ * sze⁰)) && canJumpFirst_lh^1025(_lh_tourFinished_arg1⁰))
//│ def zipWith_lh(f², xs¹, ys¹) = case xs¹ of {
//│ 	LH_C hx¹ tx¹ => case ys¹ of {
//│ 		LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh^58(f², tx¹, ty¹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zip_lz_nl_lh(xs⁰, ys⁰) = case ys⁰ of {
//│ 	LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {
//│ 		LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh^39(tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec take_lz_lh n_0 ls_2 =
//│ 		  (if (n_0 > 0) then
//│ 		    (match (Lazy.force ls_2) with
//│ 		      | `LH_C(h_2, t_2) -> 
//│ 		        (`LH_C(h_2, ((take_lz_lh (n_0 - 1)) t_2)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec sizeBoard_lh _lh_sizeBoard_arg1_0 =
//│ 		  (match _lh_sizeBoard_arg1_0 with
//│ 		    | `Board(_lh_sizeBoard_Board_0_0, _lh_sizeBoard_Board_1_0, _lh_sizeBoard_Board_2_0, _lh_sizeBoard_Board_3_0) -> 
//│ 		      _lh_sizeBoard_Board_0_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec myInit_lh _lh_myInit_arg1_0 =
//│ 		  (match _lh_myInit_arg1_0 with
//│ 		    | `LH_C(_lh_myInit_LH_C_0_0, _lh_myInit_LH_C_1_0) -> 
//│ 		      (match _lh_myInit_LH_C_1_0 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_N)
//│ 		        | _ -> 
//│ 		          (`LH_C(_lh_myInit_LH_C_0_0, (myInit_lh _lh_myInit_LH_C_1_0))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec myLast_lh _lh_myLast_arg1_0 =
//│ 		  (match _lh_myLast_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_P2((0 - 100), (0 - 100)))
//│ 		    | `LH_C(_lh_myLast_LH_C_0_0, _lh_myLast_LH_C_1_0) -> 
//│ 		      (let rec go_0 = (fun _lh_go_arg1_0 _lh_go_arg2_0 -> 
//│ 		        (match _lh_go_arg2_0 with
//│ 		          | `LH_N -> 
//│ 		            _lh_go_arg1_0
//│ 		          | `LH_C(_lh_go_LH_C_0_0, _lh_go_LH_C_1_0) -> 
//│ 		            ((go_0 _lh_go_LH_C_0_0) _lh_go_LH_C_1_0)
//│ 		          | _ -> 
//│ 		            (failwith "error"))) in
//│ 		        ((go_0 _lh_myLast_LH_C_0_0) _lh_myLast_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec deleteFirst_lh _lh_deleteFirst_arg1_0 =
//│ 		  (match _lh_deleteFirst_arg1_0 with
//│ 		    | `Board(_lh_deleteFirst_Board_0_0, _lh_deleteFirst_Board_1_0, _lh_deleteFirst_Board_2_0, _lh_deleteFirst_Board_3_0) -> 
//│ 		      (let rec ts'_0 = (myInit_lh _lh_deleteFirst_Board_3_0) in
//│ 		        (`Board(_lh_deleteFirst_Board_0_0, (_lh_deleteFirst_Board_1_0 - 1), (myLast_lh ts'_0), ts'_0)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec firstPiece_lh _lh_firstPiece_arg1_0 =
//│ 		  (match _lh_firstPiece_arg1_0 with
//│ 		    | `Board(_lh_firstPiece_Board_0_0, _lh_firstPiece_Board_1_0, _lh_firstPiece_Board_2_0, _lh_firstPiece_Board_3_0) -> 
//│ 		      _lh_firstPiece_Board_2_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec inList_lh _lh_inList_arg1_0 _lh_inList_arg2_0 =
//│ 		  (match _lh_inList_arg2_0 with
//│ 		    | `LH_C(_lh_inList_LH_C_0_0, _lh_inList_LH_C_1_0) -> 
//│ 		      (if (_lh_inList_arg1_0 = _lh_inList_LH_C_0_0) then
//│ 		        true
//│ 		      else
//│ 		        ((inList_lh _lh_inList_arg1_0) _lh_inList_LH_C_1_0))
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec isSquareFree_lh _lh_isSquareFree_arg1_0 _lh_isSquareFree_arg2_0 =
//│ 		  (match _lh_isSquareFree_arg2_0 with
//│ 		    | `Board(_lh_isSquareFree_Board_0_0, _lh_isSquareFree_Board_1_0, _lh_isSquareFree_Board_2_0, _lh_isSquareFree_Board_3_0) -> 
//│ 		      (not ((inList_lh _lh_isSquareFree_arg1_0) _lh_isSquareFree_Board_3_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec canMoveTo_lh _lh_canMoveTo_arg1_0 _lh_canMoveTo_arg2_0 =
//│ 		  (match _lh_canMoveTo_arg1_0 with
//│ 		    | `LH_P2(_lh_canMoveTo_LH_P2_0_0, _lh_canMoveTo_LH_P2_1_0) -> 
//│ 		      (let rec sze_1 = (sizeBoard_lh _lh_canMoveTo_arg2_0) in
//│ 		        (((((_lh_canMoveTo_LH_P2_0_0 >= 1) && (_lh_canMoveTo_LH_P2_0_0 <= sze_1)) && (_lh_canMoveTo_LH_P2_1_0 >= 1)) && (_lh_canMoveTo_LH_P2_1_0 <= sze_1)) && ((isSquareFree_lh (`LH_P2(_lh_canMoveTo_LH_P2_0_0, _lh_canMoveTo_LH_P2_1_0))) _lh_canMoveTo_arg2_0)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec canJumpFirst_lh _lh_canJumpFirst_arg1_0 =
//│ 		  ((canMoveTo_lh (firstPiece_lh _lh_canJumpFirst_arg1_0)) (deleteFirst_lh _lh_canJumpFirst_arg1_0));;
//│ 		let rec noPieces_lh _lh_noPieces_arg1_0 =
//│ 		  (match _lh_noPieces_arg1_0 with
//│ 		    | `Board(_lh_noPieces_Board_0_0, _lh_noPieces_Board_1_0, _lh_noPieces_Board_2_0, _lh_noPieces_Board_3_0) -> 
//│ 		      _lh_noPieces_Board_1_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec tourFinished_lh _lh_tourFinished_arg1_0 =
//│ 		  (let rec sze_0 = (sizeBoard_lh _lh_tourFinished_arg1_0) in
//│ 		    (((noPieces_lh _lh_tourFinished_arg1_0) = (sze_0 * sze_0)) && (canJumpFirst_lh _lh_tourFinished_arg1_0)));;
//│ 		let rec isFinished_lh _lh_isFinished_arg1_0 =
//│ 		  (match _lh_isFinished_arg1_0 with
//│ 		    | `LH_P2(_lh_isFinished_LH_P2_0_0, _lh_isFinished_LH_P2_1_0) -> 
//│ 		      (tourFinished_lh _lh_isFinished_LH_P2_1_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      (`LH_C(h_4, ((mappend_lh t_4) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec addAllFront_lh _lh_addAllFront_arg1_0 _lh_addAllFront_arg2_0 =
//│ 		  ((mappend_lh _lh_addAllFront_arg1_0) _lh_addAllFront_arg2_0);;
//│ 		let rec removeFront_lh _lh_removeFront_arg1_0 =
//│ 		  (match _lh_removeFront_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      ((failwith "error") (`LH_C('C', (`LH_C('a', (`LH_C('n', (`LH_C('n', (`LH_C('o', (`LH_C('t', (`LH_C(' ', (`LH_C('r', (`LH_C('e', (`LH_C('m', (`LH_C('o', (`LH_C('v', (`LH_C('e', (`LH_C(' ', (`LH_C('f', (`LH_C('r', (`LH_C('o', (`LH_C('m', (`LH_C(' ', (`LH_C('a', (`LH_C('n', (`LH_C(' ', (`LH_C('e', (`LH_C('m', (`LH_C('p', (`LH_C('t', (`LH_C('y', (`LH_C(' ', (`LH_C('Q', (`LH_C('u', (`LH_C('e', (`LH_C('u', (`LH_C('e', (`LH_N))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		    | `LH_C(_lh_removeFront_LH_C_0_0, _lh_removeFront_LH_C_1_0) -> 
//│ 		      _lh_removeFront_LH_C_1_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec inquireFront_lh _lh_inquireFront_arg1_0 =
//│ 		  (match _lh_inquireFront_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      ((failwith "error") (`LH_C('C', (`LH_C('a', (`LH_C('n', (`LH_C('n', (`LH_C('o', (`LH_C('t', (`LH_C(' ', (`LH_C('i', (`LH_C('n', (`LH_C('q', (`LH_C('u', (`LH_C('i', (`LH_C('r', (`LH_C('e', (`LH_C(' ', (`LH_C('o', (`LH_C('n', (`LH_C(' ', (`LH_C('e', (`LH_C('m', (`LH_C('p', (`LH_C('t', (`LH_C('y', (`LH_C(' ', (`LH_C('Q', (`LH_C('u', (`LH_C('e', (`LH_C('u', (`LH_C('e', (`LH_N))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		    | `LH_C(_lh_inquireFront_LH_C_0_0, _lh_inquireFront_LH_C_1_0) -> 
//│ 		      _lh_inquireFront_LH_C_0_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec depthSearch_lh _lh_depthSearch_arg1_0 _lh_depthSearch_arg2_0 _lh_depthSearch_arg3_0 =
//│ 		  (if (let rec _lh_matchIdent_1 = _lh_depthSearch_arg1_0 in
//│ 		    (match _lh_matchIdent_1 with
//│ 		      | `LH_N -> 
//│ 		        true
//│ 		      | _ -> 
//│ 		        false)) then
//│ 		    (lazy (`LH_N))
//│ 		  else
//│ 		    (if (_lh_depthSearch_arg3_0 (inquireFront_lh _lh_depthSearch_arg1_0)) then
//│ 		      (lazy (`LH_C((inquireFront_lh _lh_depthSearch_arg1_0), (((depthSearch_lh (removeFront_lh _lh_depthSearch_arg1_0)) _lh_depthSearch_arg2_0) _lh_depthSearch_arg3_0))))
//│ 		    else
//│ 		      (((depthSearch_lh ((addAllFront_lh (_lh_depthSearch_arg2_0 (inquireFront_lh _lh_depthSearch_arg1_0))) (removeFront_lh _lh_depthSearch_arg1_0))) _lh_depthSearch_arg2_0) _lh_depthSearch_arg3_0)));;
//│ 		let rec assignMoveNo_lh _lh_assignMoveNo_arg1_0 _lh_assignMoveNo_arg2_0 _lh_assignMoveNo_arg3_0 =
//│ 		  (match _lh_assignMoveNo_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_assignMoveNo_LH_C_0_0, _lh_assignMoveNo_LH_C_1_0) -> 
//│ 		      (match _lh_assignMoveNo_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_assignMoveNo_LH_P2_0_0, _lh_assignMoveNo_LH_P2_1_0) -> 
//│ 		          (`LH_C((`LH_P2((((_lh_assignMoveNo_LH_P2_1_0 - 1) * _lh_assignMoveNo_arg2_0) + _lh_assignMoveNo_LH_P2_0_0), _lh_assignMoveNo_arg3_0)), (((assignMoveNo_lh _lh_assignMoveNo_LH_C_1_0) _lh_assignMoveNo_arg2_0) (_lh_assignMoveNo_arg3_0 - 1))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec copy_lh _lh_copy_arg1_0 _lh_copy_arg2_0 =
//│ 		  (if (_lh_copy_arg1_0 <= 0) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (`LH_C(_lh_copy_arg2_0, ((copy_lh (_lh_copy_arg1_0 - 1)) _lh_copy_arg2_0))));;
//│ 		let rec spaces_lh _lh_spaces_arg1_0 _lh_spaces_arg2_0 =
//│ 		  (let rec logTen_0 = (fun _lh_logTen_arg1_0 -> 
//│ 		    (match _lh_logTen_arg1_0 with
//│ 		      | 0 -> 
//│ 		        0
//│ 		      | _ -> 
//│ 		        (1 + (logTen_0 (_lh_logTen_arg1_0 / 10))))) in
//│ 		    ((copy_lh (((logTen_0 _lh_spaces_arg1_0) - (logTen_0 _lh_spaces_arg2_0)) + 1)) ' '));;
//│ 		let rec printBoard_lh _lh_printBoard_arg1_0 _lh_printBoard_arg2_0 _lh_printBoard_arg3_0 =
//│ 		  (match _lh_printBoard_arg3_0 with
//│ 		    | `LH_N -> 
//│ 		      (if (_lh_printBoard_arg2_0 > (_lh_printBoard_arg1_0 * _lh_printBoard_arg1_0)) then
//│ 		        (`LH_N)
//│ 		      else
//│ 		        (if ((_lh_printBoard_arg2_0 mod _lh_printBoard_arg1_0) <> 0) then
//│ 		          ((mappend_lh ((mappend_lh (`LH_C('*', (`LH_N)))) ((spaces_lh (_lh_printBoard_arg1_0 * _lh_printBoard_arg1_0)) 1))) (((printBoard_lh _lh_printBoard_arg1_0) (_lh_printBoard_arg2_0 + 1)) (`LH_N)))
//│ 		        else
//│ 		          (if ((_lh_printBoard_arg2_0 mod _lh_printBoard_arg1_0) = 0) then
//│ 		            ((mappend_lh (`LH_C('*', (`LH_C('|', (`LH_N)))))) (((printBoard_lh _lh_printBoard_arg1_0) (_lh_printBoard_arg2_0 + 1)) (`LH_N)))
//│ 		          else
//│ 		            ((failwith "error") (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('n', (`LH_C('t', (`LH_C('B', (`LH_C('o', (`LH_C('a', (`LH_C('r', (`LH_C('d', (`LH_C(' ', (`LH_C('e', (`LH_C('m', (`LH_C('p', (`LH_C('t', (`LH_C('y', (`LH_C(' ', (`LH_C('l', (`LH_C('i', (`LH_C('s', (`LH_C('t', (`LH_C(' ', (`LH_C('e', (`LH_C('r', (`LH_C('r', (`LH_C('o', (`LH_C('r', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		    | `LH_C(_lh_printBoard_LH_C_0_0, _lh_printBoard_LH_C_1_0) -> 
//│ 		      (match _lh_printBoard_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_printBoard_LH_P2_0_0, _lh_printBoard_LH_P2_1_0) -> 
//│ 		          (if ((_lh_printBoard_LH_P2_0_0 = _lh_printBoard_arg2_0) && ((_lh_printBoard_arg2_0 mod _lh_printBoard_arg1_0) = 0)) then
//│ 		            ((mappend_lh ((mappend_lh (string_of_int _lh_printBoard_LH_P2_1_0)) (`LH_C('|', (`LH_N))))) (((printBoard_lh _lh_printBoard_arg1_0) (_lh_printBoard_arg2_0 + 1)) _lh_printBoard_LH_C_1_0))
//│ 		          else
//│ 		            (if ((_lh_printBoard_LH_P2_0_0 = _lh_printBoard_arg2_0) && ((_lh_printBoard_arg2_0 mod _lh_printBoard_arg1_0) <> 0)) then
//│ 		              ((mappend_lh ((mappend_lh (string_of_int _lh_printBoard_LH_P2_1_0)) ((spaces_lh (_lh_printBoard_arg1_0 * _lh_printBoard_arg1_0)) _lh_printBoard_LH_P2_1_0))) (((printBoard_lh _lh_printBoard_arg1_0) (_lh_printBoard_arg2_0 + 1)) _lh_printBoard_LH_C_1_0))
//│ 		            else
//│ 		              (if ((_lh_printBoard_arg2_0 mod _lh_printBoard_arg1_0) <> 0) then
//│ 		                ((mappend_lh ((mappend_lh (`LH_C('*', (`LH_N)))) ((spaces_lh (_lh_printBoard_arg1_0 * _lh_printBoard_arg1_0)) 1))) (((printBoard_lh _lh_printBoard_arg1_0) (_lh_printBoard_arg2_0 + 1)) (`LH_C((`LH_P2(_lh_printBoard_LH_P2_0_0, _lh_printBoard_LH_P2_1_0)), _lh_printBoard_LH_C_1_0))))
//│ 		              else
//│ 		                (if ((_lh_printBoard_arg2_0 mod _lh_printBoard_arg1_0) = 0) then
//│ 		                  ((mappend_lh (`LH_C('*', (`LH_C('|', (`LH_N)))))) (((printBoard_lh _lh_printBoard_arg1_0) (_lh_printBoard_arg2_0 + 1)) (`LH_C((`LH_P2(_lh_printBoard_LH_P2_0_0, _lh_printBoard_LH_P2_1_0)), _lh_printBoard_LH_C_1_0))))
//│ 		                else
//│ 		                  ((failwith "error") (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('n', (`LH_C('t', (`LH_C('B', (`LH_C('o', (`LH_C('a', (`LH_C('r', (`LH_C('d', (`LH_C(' ', (`LH_C('n', (`LH_C('o', (`LH_C('n', (`LH_C('-', (`LH_C('e', (`LH_C('m', (`LH_C('p', (`LH_C('t', (`LH_C('y', (`LH_C(' ', (`LH_C('l', (`LH_C('i', (`LH_C('s', (`LH_C('t', (`LH_C(' ', (`LH_C('e', (`LH_C('r', (`LH_C('r', (`LH_C('o', (`LH_C('r', (`LH_N))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec intintComp_lh _lh_intintComp_arg1_0 _lh_intintComp_arg2_0 =
//│ 		  (match _lh_intintComp_arg1_0 with
//│ 		    | `LH_P2(_lh_intintComp_LH_P2_0_0, _lh_intintComp_LH_P2_1_0) -> 
//│ 		      (match _lh_intintComp_arg2_0 with
//│ 		        | `LH_P2(_lh_intintComp_LH_P2_0_1, _lh_intintComp_LH_P2_1_1) -> 
//│ 		          ((_lh_intintComp_LH_P2_0_0 < _lh_intintComp_LH_P2_0_1) || ((_lh_intintComp_LH_P2_0_0 = _lh_intintComp_LH_P2_0_1) && (_lh_intintComp_LH_P2_1_0 < _lh_intintComp_LH_P2_1_1)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec quickSortIntInt_lh _lh_quickSortIntInt_arg1_0 =
//│ 		  (match _lh_quickSortIntInt_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_quickSortIntInt_LH_C_0_0, _lh_quickSortIntInt_LH_C_1_0) -> 
//│ 		      ((mappend_lh ((mappend_lh (quickSortIntInt_lh (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		        (match _lh_listcomp_fun_para_0 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		            (if ((intintComp_lh _lh_listcomp_fun_ls_h_0) _lh_quickSortIntInt_LH_C_0_0) then
//│ 		              (`LH_C(_lh_listcomp_fun_ls_h_0, (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		            else
//│ 		              (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_0 _lh_quickSortIntInt_LH_C_1_0)))) (`LH_C(_lh_quickSortIntInt_LH_C_0_0, (`LH_N))))) (quickSortIntInt_lh (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		        (match _lh_listcomp_fun_para_1 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		            (if (not ((intintComp_lh _lh_listcomp_fun_ls_h_1) _lh_quickSortIntInt_LH_C_0_0)) then
//│ 		              (`LH_C(_lh_listcomp_fun_ls_h_1, (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		            else
//│ 		              (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_1 _lh_quickSortIntInt_LH_C_1_0))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec showChessSet_lh _lh_showChessSet_arg1_0 =
//│ 		  (match _lh_showChessSet_arg1_0 with
//│ 		    | `Board(_lh_showChessSet_Board_0_0, _lh_showChessSet_Board_1_0, _lh_showChessSet_Board_2_0, _lh_showChessSet_Board_3_0) -> 
//│ 		      (let rec sortedTrail_0 = (quickSortIntInt_lh (((assignMoveNo_lh _lh_showChessSet_Board_3_0) _lh_showChessSet_Board_0_0) _lh_showChessSet_Board_1_0)) in
//│ 		        (((printBoard_lh _lh_showChessSet_Board_0_0) 1) sortedTrail_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec zipWith_lh f_2 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(hx_1, tx_1) -> 
//│ 		      (match ys_1 with
//│ 		        | `LH_C(hy_1, ty_1) -> 
//│ 		          (`LH_C(((f_2 hx_1) hy_1), (((zipWith_lh f_2) tx_1) ty_1)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec enumFromTo_lh a_0 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, ((enumFromTo_lh (a_0 + 1)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec createQueue_lh =
//│ 		  (`LH_N);;
//│ 		let rec zip_lz_nl_lh xs_0 ys_0 =
//│ 		  (match ys_0 with
//│ 		    | `LH_C(hy_0, ty_0) -> 
//│ 		      (match (Lazy.force xs_0) with
//│ 		        | `LH_C(hx_0, tx_0) -> 
//│ 		          (`LH_C((`LH_P2(hx_0, hy_0)), ((zip_lz_nl_lh tx_0) ty_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec createBoard_lh _lh_createBoard_arg1_0 _lh_createBoard_arg2_0 =
//│ 		  (`Board(_lh_createBoard_arg1_0, 1, _lh_createBoard_arg2_0, (`LH_C(_lh_createBoard_arg2_0, (`LH_N)))));;
//│ 		let rec startTour_lh _lh_startTour_arg1_0 _lh_startTour_arg2_0 =
//│ 		  (if ((_lh_startTour_arg2_0 mod 2) = 0) then
//│ 		    ((createBoard_lh _lh_startTour_arg2_0) _lh_startTour_arg1_0)
//│ 		  else
//│ 		    ((failwith "error") (`LH_C('T', (`LH_C('o', (`LH_C('u', (`LH_C('r', (`LH_C(' ', (`LH_C('d', (`LH_C('o', (`LH_C('e', (`LH_C('s', (`LH_C('n', (`LH_C('t', (`LH_C(' ', (`LH_C('e', (`LH_C('x', (`LH_C('i', (`LH_C('s', (`LH_C('t', (`LH_C(' ', (`LH_C('f', (`LH_C('o', (`LH_C('r', (`LH_C(' ', (`LH_C('o', (`LH_C('d', (`LH_C('d', (`LH_C(' ', (`LH_C('s', (`LH_C('i', (`LH_C('z', (`LH_C('e', (`LH_C(' ', (`LH_C('b', (`LH_C('o', (`LH_C('a', (`LH_C('r', (`LH_C('d', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));;
//│ 		let rec repeat_lh x_0 =
//│ 		  (lazy (`LH_C(x_0, (repeat_lh x_0))));;
//│ 		let rec root_lh _lh_root_arg1_0 =
//│ 		  ((addAllFront_lh ((zip_lz_nl_lh (repeat_lh (1 - (_lh_root_arg1_0 * _lh_root_arg1_0)))) (((zipWith_lh startTour_lh) (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		    (match _lh_listcomp_fun_para_2 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		        (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		          (match _lh_listcomp_fun_para_3 with
//│ 		            | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		              (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_h_3)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		            | `LH_N -> 
//│ 		              (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))) in
//│ 		          (_lh_listcomp_fun_3 ((enumFromTo_lh 1) _lh_root_arg1_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_2 ((enumFromTo_lh 1) _lh_root_arg1_0)))) ((copy_lh (_lh_root_arg1_0 * _lh_root_arg1_0)) _lh_root_arg1_0)))) createQueue_lh);;
//│ 		let rec map_lh f_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C((f_0 h_0), ((map_lh f_0) t_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec mySnd_lh _lh_mySnd_arg1_0 =
//│ 		  (match _lh_mySnd_arg1_0 with
//│ 		    | `LH_P2(_lh_mySnd_LH_P2_0_0, _lh_mySnd_LH_P2_1_0) -> 
//│ 		      _lh_mySnd_LH_P2_1_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec move_lh _lh_move_arg1_0 _lh_move_arg2_0 =
//│ 		  (match _lh_move_arg1_0 with
//│ 		    | `UL -> 
//│ 		      (match _lh_move_arg2_0 with
//│ 		        | `LH_P2(_lh_move_LH_P2_0_0, _lh_move_LH_P2_1_0) -> 
//│ 		          (`LH_P2((_lh_move_LH_P2_0_0 - 1), (_lh_move_LH_P2_1_0 - 2)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `UR -> 
//│ 		      (match _lh_move_arg2_0 with
//│ 		        | `LH_P2(_lh_move_LH_P2_0_1, _lh_move_LH_P2_1_1) -> 
//│ 		          (`LH_P2((_lh_move_LH_P2_0_1 + 1), (_lh_move_LH_P2_1_1 - 2)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `DL -> 
//│ 		      (match _lh_move_arg2_0 with
//│ 		        | `LH_P2(_lh_move_LH_P2_0_2, _lh_move_LH_P2_1_2) -> 
//│ 		          (`LH_P2((_lh_move_LH_P2_0_2 - 1), (_lh_move_LH_P2_1_2 + 2)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `DR -> 
//│ 		      (match _lh_move_arg2_0 with
//│ 		        | `LH_P2(_lh_move_LH_P2_0_3, _lh_move_LH_P2_1_3) -> 
//│ 		          (`LH_P2((_lh_move_LH_P2_0_3 + 1), (_lh_move_LH_P2_1_3 + 2)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `LU -> 
//│ 		      (match _lh_move_arg2_0 with
//│ 		        | `LH_P2(_lh_move_LH_P2_0_4, _lh_move_LH_P2_1_4) -> 
//│ 		          (`LH_P2((_lh_move_LH_P2_0_4 - 2), (_lh_move_LH_P2_1_4 - 1)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `LD -> 
//│ 		      (match _lh_move_arg2_0 with
//│ 		        | `LH_P2(_lh_move_LH_P2_0_5, _lh_move_LH_P2_1_5) -> 
//│ 		          (`LH_P2((_lh_move_LH_P2_0_5 - 2), (_lh_move_LH_P2_1_5 + 1)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `RU -> 
//│ 		      (match _lh_move_arg2_0 with
//│ 		        | `LH_P2(_lh_move_LH_P2_0_6, _lh_move_LH_P2_1_6) -> 
//│ 		          (`LH_P2((_lh_move_LH_P2_0_6 + 2), (_lh_move_LH_P2_1_6 - 1)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `RD -> 
//│ 		      (match _lh_move_arg2_0 with
//│ 		        | `LH_P2(_lh_move_LH_P2_0_7, _lh_move_LH_P2_1_7) -> 
//│ 		          (`LH_P2((_lh_move_LH_P2_0_7 + 2), (_lh_move_LH_P2_1_7 + 1)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec lastPiece_lh _lh_lastPiece_arg1_0 =
//│ 		  (match _lh_lastPiece_arg1_0 with
//│ 		    | `Board(_lh_lastPiece_Board_0_0, _lh_lastPiece_Board_1_0, _lh_lastPiece_Board_2_0, _lh_lastPiece_Board_3_0) -> 
//│ 		      (match _lh_lastPiece_Board_3_0 with
//│ 		        | `LH_C(_lh_lastPiece_LH_C_0_0, _lh_lastPiece_LH_C_1_0) -> 
//│ 		          _lh_lastPiece_LH_C_0_0
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec canMove_lh _lh_canMove_arg1_0 _lh_canMove_arg2_0 =
//│ 		  ((canMoveTo_lh ((move_lh _lh_canMove_arg2_0) (lastPiece_lh _lh_canMove_arg1_0))) _lh_canMove_arg1_0);;
//│ 		let rec possibleMoves_lh _lh_possibleMoves_arg1_0 =
//│ 		  (let rec _lh_listcomp_fun_4 = (fun _lh_listcomp_fun_para_4 -> 
//│ 		    (match _lh_listcomp_fun_para_4 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_4, _lh_listcomp_fun_ls_t_4) -> 
//│ 		        (if ((canMove_lh _lh_possibleMoves_arg1_0) _lh_listcomp_fun_ls_h_4) then
//│ 		          (`LH_C(_lh_listcomp_fun_ls_h_4, (_lh_listcomp_fun_4 _lh_listcomp_fun_ls_t_4)))
//│ 		        else
//│ 		          (_lh_listcomp_fun_4 _lh_listcomp_fun_ls_t_4))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_4 (`LH_C((`UL), (`LH_C((`UR), (`LH_C((`DL), (`LH_C((`DR), (`LH_C((`LU), (`LH_C((`LD), (`LH_C((`RU), (`LH_C((`RD), (`LH_N)))))))))))))))))));;
//│ 		let rec addPiece_lh _lh_addPiece_arg1_0 _lh_addPiece_arg2_0 =
//│ 		  (match _lh_addPiece_arg2_0 with
//│ 		    | `Board(_lh_addPiece_Board_0_0, _lh_addPiece_Board_1_0, _lh_addPiece_Board_2_0, _lh_addPiece_Board_3_0) -> 
//│ 		      (`Board(_lh_addPiece_Board_0_0, (_lh_addPiece_Board_1_0 + 1), _lh_addPiece_Board_2_0, (`LH_C(_lh_addPiece_arg1_0, _lh_addPiece_Board_3_0))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec moveKnight_lh _lh_moveKnight_arg1_0 _lh_moveKnight_arg2_0 =
//│ 		  ((addPiece_lh ((move_lh _lh_moveKnight_arg2_0) (lastPiece_lh _lh_moveKnight_arg1_0))) _lh_moveKnight_arg1_0);;
//│ 		let rec allDescend_lh _lh_allDescend_arg1_0 =
//│ 		  ((map_lh (moveKnight_lh _lh_allDescend_arg1_0)) (possibleMoves_lh _lh_allDescend_arg1_0));;
//│ 		let rec length_lh ls_3 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      (1 + (length_lh t_3))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec descAndNo_lh _lh_descAndNo_arg1_0 =
//│ 		  (let rec _lh_listcomp_fun_5 = (fun _lh_listcomp_fun_para_5 -> 
//│ 		    (match _lh_listcomp_fun_para_5 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_5, _lh_listcomp_fun_ls_t_5) -> 
//│ 		        (`LH_C((`LH_P2((length_lh (possibleMoves_lh (deleteFirst_lh _lh_listcomp_fun_ls_h_5))), _lh_listcomp_fun_ls_h_5)), (_lh_listcomp_fun_5 _lh_listcomp_fun_ls_t_5)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_5 (allDescend_lh _lh_descAndNo_arg1_0)));;
//│ 		let rec intChessSetComp_lh _lh_intChessSetComp_arg1_0 _lh_intChessSetComp_arg2_0 =
//│ 		  (match _lh_intChessSetComp_arg1_0 with
//│ 		    | `LH_P2(_lh_intChessSetComp_LH_P2_0_0, _lh_intChessSetComp_LH_P2_1_0) -> 
//│ 		      (match _lh_intChessSetComp_arg2_0 with
//│ 		        | `LH_P2(_lh_intChessSetComp_LH_P2_0_1, _lh_intChessSetComp_LH_P2_1_1) -> 
//│ 		          (_lh_intChessSetComp_LH_P2_0_0 < _lh_intChessSetComp_LH_P2_0_1)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec quickSortIntChessSet_lh _lh_quickSortIntChessSet_arg1_0 =
//│ 		  (match _lh_quickSortIntChessSet_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_quickSortIntChessSet_LH_C_0_0, _lh_quickSortIntChessSet_LH_C_1_0) -> 
//│ 		      ((mappend_lh ((mappend_lh (quickSortIntChessSet_lh (let rec _lh_listcomp_fun_7 = (fun _lh_listcomp_fun_para_7 -> 
//│ 		        (match _lh_listcomp_fun_para_7 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_7, _lh_listcomp_fun_ls_t_7) -> 
//│ 		            (if ((intChessSetComp_lh _lh_listcomp_fun_ls_h_7) _lh_quickSortIntChessSet_LH_C_0_0) then
//│ 		              (`LH_C(_lh_listcomp_fun_ls_h_7, (_lh_listcomp_fun_7 _lh_listcomp_fun_ls_t_7)))
//│ 		            else
//│ 		              (_lh_listcomp_fun_7 _lh_listcomp_fun_ls_t_7))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_7 _lh_quickSortIntChessSet_LH_C_1_0)))) (`LH_C(_lh_quickSortIntChessSet_LH_C_0_0, (`LH_N))))) (quickSortIntChessSet_lh (let rec _lh_listcomp_fun_8 = (fun _lh_listcomp_fun_para_8 -> 
//│ 		        (match _lh_listcomp_fun_para_8 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_8, _lh_listcomp_fun_ls_t_8) -> 
//│ 		            (if (not ((intChessSetComp_lh _lh_listcomp_fun_ls_h_8) _lh_quickSortIntChessSet_LH_C_0_0)) then
//│ 		              (`LH_C(_lh_listcomp_fun_ls_h_8, (_lh_listcomp_fun_8 _lh_listcomp_fun_ls_t_8)))
//│ 		            else
//│ 		              (_lh_listcomp_fun_8 _lh_listcomp_fun_ls_t_8))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_8 _lh_quickSortIntChessSet_LH_C_1_0))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec deadEnd_lh _lh_deadEnd_arg1_0 =
//│ 		  ((length_lh (possibleMoves_lh _lh_deadEnd_arg1_0)) = 0);;
//│ 		let rec singleDescend_lh _lh_singleDescend_arg1_0 =
//│ 		  (let rec _lh_listcomp_fun_6 = (fun _lh_listcomp_fun_para_6 -> 
//│ 		    (match _lh_listcomp_fun_para_6 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_6, _lh_listcomp_fun_ls_t_6) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_6 with
//│ 		          | `LH_P2(_lh_singleDescend_LH_P2_0_0, _lh_singleDescend_LH_P2_1_0) -> 
//│ 		            (if (_lh_singleDescend_LH_P2_0_0 = 1) then
//│ 		              (`LH_C(_lh_singleDescend_LH_P2_1_0, (_lh_listcomp_fun_6 _lh_listcomp_fun_ls_t_6)))
//│ 		            else
//│ 		              (_lh_listcomp_fun_6 _lh_listcomp_fun_ls_t_6))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_6 _lh_listcomp_fun_ls_t_6))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_6 (descAndNo_lh _lh_singleDescend_arg1_0)));;
//│ 		let rec descendents_lh _lh_descendents_arg1_0 =
//│ 		  (if ((canJumpFirst_lh _lh_descendents_arg1_0) && (deadEnd_lh ((addPiece_lh (firstPiece_lh _lh_descendents_arg1_0)) _lh_descendents_arg1_0))) then
//│ 		    (`LH_N)
//│ 		  else
//│ 		    (let rec singles_0 = (singleDescend_lh _lh_descendents_arg1_0) in
//│ 		      (let rec scrut_0 = (length_lh singles_0) in
//│ 		        (if (scrut_0 = 0) then
//│ 		          ((map_lh mySnd_lh) (quickSortIntChessSet_lh (descAndNo_lh _lh_descendents_arg1_0)))
//│ 		        else
//│ 		          (if (scrut_0 = 1) then
//│ 		            singles_0
//│ 		          else
//│ 		            (`LH_N))))));;
//│ 		let rec grow_lh _lh_grow_arg1_0 =
//│ 		  (match _lh_grow_arg1_0 with
//│ 		    | `LH_P2(_lh_grow_LH_P2_0_0, _lh_grow_LH_P2_1_0) -> 
//│ 		      ((zip_lz_nl_lh (repeat_lh (_lh_grow_LH_P2_0_0 + 1))) (descendents_lh _lh_grow_LH_P2_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec printTour_lh _lh_printTour_arg1_0 =
//│ 		  let rec strToInt_0 = (fun _lh_strToInt_arg1_0 _lh_strToInt_arg2_0 -> 
//│ 		    (match _lh_strToInt_arg2_0 with
//│ 		      | `LH_N -> 
//│ 		        _lh_strToInt_arg1_0
//│ 		      | `LH_C(_lh_strToInt_LH_C_0_0, _lh_strToInt_LH_C_1_0) -> 
//│ 		        ((strToInt_0 ((10 * _lh_strToInt_arg1_0) + ((int_of_char _lh_strToInt_LH_C_0_0) - (int_of_char '0')))) _lh_strToInt_LH_C_1_0)
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		  and pp_0 = (fun _lh_pp_arg1_0 -> 
//│ 		    (match _lh_pp_arg1_0 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_pp_LH_C_0_0, _lh_pp_LH_C_1_0) -> 
//│ 		        (match _lh_pp_LH_C_0_0 with
//│ 		          | `LH_P2(_lh_pp_LH_P2_0_0, _lh_pp_LH_P2_1_0) -> 
//│ 		            ((mappend_lh ((mappend_lh ((mappend_lh ((mappend_lh (`LH_C('|', (`LH_C('K', (`LH_C('n', (`LH_C('i', (`LH_C('g', (`LH_C('h', (`LH_C('t', (`LH_C('s', (`LH_C(' ', (`LH_C('t', (`LH_C('o', (`LH_C('u', (`LH_C('r', (`LH_C(' ', (`LH_C('w', (`LH_C('i', (`LH_C('t', (`LH_C('h', (`LH_C(' ', (`LH_N)))))))))))))))))))))))))))))))))))))))) (string_of_int _lh_pp_LH_P2_0_0))) (`LH_C(' ', (`LH_C('b', (`LH_C('a', (`LH_C('c', (`LH_C('k', (`LH_C('t', (`LH_C('r', (`LH_C('a', (`LH_C('c', (`LH_C('k', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_C(' ', (`LH_C('m', (`LH_C('o', (`LH_C('v', (`LH_C('e', (`LH_C('s', (`LH_C('|', (`LH_N))))))))))))))))))))))))))))))))))))))))))) (showChessSet_lh _lh_pp_LH_P2_1_0))) (pp_0 _lh_pp_LH_C_1_0))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		  in (let rec _lh_matchIdent_0 = ((map_lh (strToInt_0 0)) _lh_printTour_arg1_0) in
//│ 		    (match _lh_matchIdent_0 with
//│ 		      | `LH_C(_lh_printTour_LH_C_0_0, _lh_printTour_LH_C_1_0) -> 
//│ 		        (match _lh_printTour_LH_C_1_0 with
//│ 		          | `LH_C(_lh_printTour_LH_C_0_1, _lh_printTour_LH_C_1_1) -> 
//│ 		            (match _lh_printTour_LH_C_1_1 with
//│ 		              | `LH_N -> 
//│ 		                (pp_0 ((take_lz_lh _lh_printTour_LH_C_0_1) (((depthSearch_lh (root_lh _lh_printTour_LH_C_0_0)) grow_lh) isFinished_lh)))
//│ 		              | _ -> 
//│ 		                (failwith "error"))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec foldr_lh f_1 i_0 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      ((f_1 h_1) (((foldr_lh f_1) i_0) t_1))
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec myIsDigit_lh _lh_myIsDigit_arg1_0 =
//│ 		  (let rec n_1 = (int_of_char _lh_myIsDigit_arg1_0) in
//│ 		    ((n_1 >= 48) && (n_1 <= 57)));;
//│ 		let rec testKnights_nofib_lh _lh_testKnights_nofib_arg1_0 =
//│ 		  let rec all_digits_0 = (fun _lh_all_digits_arg1_0 -> 
//│ 		    (((foldr_lh (fun _lh_funcomp_x_0 -> 
//│ 		      ((fun a_1 b_1 -> 
//│ 		        (a_1 && b_1)) (myIsDigit_lh _lh_funcomp_x_0)))) true) _lh_all_digits_arg1_0))
//│ 		  and argsOk_0 = (fun _lh_argsOk_arg1_0 -> 
//│ 		    (((length_lh _lh_argsOk_arg1_0) = 2) && (((foldr_lh (fun _lh_funcomp_x_1 -> 
//│ 		      ((fun a_2 b_2 -> 
//│ 		        (a_2 && b_2)) (all_digits_0 _lh_funcomp_x_1)))) true) _lh_argsOk_arg1_0)))
//│ 		  and usageString_0 = (`LH_C('|', (`LH_C('U', (`LH_C('s', (`LH_C('a', (`LH_C('g', (`LH_C('e', (`LH_C(':', (`LH_C(' ', (`LH_C('k', (`LH_C('n', (`LH_C('i', (`LH_C('g', (`LH_C('h', (`LH_C('t', (`LH_C('s', (`LH_C(' ', (`LH_C('<', (`LH_C('b', (`LH_C('o', (`LH_C('a', (`LH_C('r', (`LH_C('d', (`LH_C(' ', (`LH_C('s', (`LH_C('i', (`LH_C('z', (`LH_C('e', (`LH_C('>', (`LH_C(' ', (`LH_C('<', (`LH_C('n', (`LH_C('o', (`LH_C(' ', (`LH_C('s', (`LH_C('o', (`LH_C('l', (`LH_C('u', (`LH_C('t', (`LH_C('i', (`LH_C('o', (`LH_C('n', (`LH_C('s', (`LH_C('>', (`LH_C('|', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		  in (if (argsOk_0 _lh_testKnights_nofib_arg1_0) then
//│ 		    (length_lh (printTour_lh _lh_testKnights_nofib_arg1_0))
//│ 		  else
//│ 		    ((failwith "error") usageString_0));;
//│ 		(testKnights_nofib_lh (`LH_C((`LH_C('8', (`LH_N))), (`LH_C((`LH_C('1', (`LH_N))), (`LH_N))))))
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48
//│ 	case _lh_printTour_LH_C_1¹ of {LH_N  => pp⁰(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh))) | _  => error⁰}: 1433
//│ 	case _lh_printTour_LH_C_1⁰ of {LH_C _lh_printTour_LH_C_0¹ _lh_printTour_LH_C_1¹ => case _lh_printTour_LH_C_1¹ of {LH_N  => pp⁰(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh))) | _  => error⁰} | _  => error⁰}: 1435
//│ 	case _lh_matchIdent⁰ of {LH_C _lh_printTour_LH_C_0⁰ _lh_printTour_LH_C_1⁰ => case _lh_printTour_LH_C_1⁰ of {LH_C _lh_printTour_LH_C_0¹ _lh_printTour_LH_C_1¹ => case _lh_printTour_LH_C_1¹ of {LH_N  => pp⁰(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1437
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1534
//│ [LH_N]: 11 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48
//│ 	case _lh_printTour_LH_C_1¹ of {LH_N  => pp⁰(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh))) | _  => error⁰}: 1433
//│ 	case _lh_printTour_LH_C_1⁰ of {LH_C _lh_printTour_LH_C_0¹ _lh_printTour_LH_C_1¹ => case _lh_printTour_LH_C_1¹ of {LH_N  => pp⁰(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh))) | _  => error⁰} | _  => error⁰}: 1435
//│ 	case _lh_matchIdent⁰ of {LH_C _lh_printTour_LH_C_0⁰ _lh_printTour_LH_C_1⁰ => case _lh_printTour_LH_C_1⁰ of {LH_C _lh_printTour_LH_C_0¹ _lh_printTour_LH_C_1¹ => case _lh_printTour_LH_C_1¹ of {LH_N  => pp⁰(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1437
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1534
//│ [LH_P2 hx⁰ hy⁰]: 38 --->
//│ 	DeadCodeCons
//│ 	case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰}: 517
//│ 	case _lh_grow_arg1⁰ of {LH_P2 _lh_grow_LH_P2_0⁰ _lh_grow_LH_P2_1⁰ => zip_lz_nl_lh(repeat_lh((_lh_grow_LH_P2_0⁰ + 1)), descendents_lh(_lh_grow_LH_P2_1⁰)) | _  => error⁰}: 614
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_isFinished_arg1⁰ of {LH_P2 _lh_isFinished_LH_P2_0⁰ _lh_isFinished_LH_P2_1⁰ => tourFinished_lh(_lh_isFinished_LH_P2_1⁰) | _  => error⁰}: 1138
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ 	case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰}: 1403
//│ [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)]: 44 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_N]: 45 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_N]: 47 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)]: 65 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48
//│ [LH_N]: 66 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48
//│ [LH_N]: 68 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48
//│ [LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 88 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 1078
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(enumFromTo_lh(1, _lh_root_arg1⁰)) | LH_N  => [LH_N]}: 1089
//│ [LH_N]: 89 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 1078
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(enumFromTo_lh(1, _lh_root_arg1⁰)) | LH_N  => [LH_N]}: 1089
//│ [LH_C x⁰ repeat_lh(x⁰)]: 98 --->
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 46
//│ [LH_C h² take_lz_lh((n⁰ - 1), t²)]: 119 --->
//│ 	case _lh_pp_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_pp_LH_C_0⁰ _lh_pp_LH_C_1⁰ => case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 1405
//│ [LH_N]: 120 --->
//│ 	case _lh_pp_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_pp_LH_C_0⁰ _lh_pp_LH_C_1⁰ => case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 1405
//│ [LH_N]: 122 --->
//│ 	case _lh_pp_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_pp_LH_C_0⁰ _lh_pp_LH_C_1⁰ => case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 1405
//│ [LH_C h⁴ mappend_lh(t⁴, ys²)]: 144 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_N]: 159 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_N]: 172 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C '*' [LH_N]]: 173 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_N]: 195 --->
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ [LH_N]: 210 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C '|' [LH_N]]: 211 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C '*' [LH_C '|' [LH_N]]]: 212 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_N]: 223 --->
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ [LH_N]: 311 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C '|' [LH_N]]: 312 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_N]: 385 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C '*' [LH_N]]: 386 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰]: 410 --->
//│ 	case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰}: 517
//│ [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰]: 412 --->
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ [LH_N]: 427 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C '|' [LH_N]]: 428 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C '*' [LH_C '|' [LH_N]]]: 429 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰]: 442 --->
//│ 	case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰}: 517
//│ [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰]: 444 --->
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ [LH_N]: 524 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 538 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 544
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]}: 576
//│ 	case _lh_quickSortIntInt_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntInt_LH_C_0⁰ _lh_quickSortIntInt_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntInt_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_quickSortIntInt_LH_C_1⁰)), [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]), quickSortIntInt_lh(let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_quickSortIntInt_LH_C_1⁰))) | _  => error⁰}: 585
//│ [LH_N]: 543 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 544
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]}: 576
//│ 	case _lh_quickSortIntInt_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntInt_LH_C_0⁰ _lh_quickSortIntInt_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntInt_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_quickSortIntInt_LH_C_1⁰)), [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]), quickSortIntInt_lh(let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_quickSortIntInt_LH_C_1⁰))) | _  => error⁰}: 585
//│ [LH_N]: 553 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]: 554 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 570 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 544
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]}: 576
//│ 	case _lh_quickSortIntInt_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntInt_LH_C_0⁰ _lh_quickSortIntInt_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntInt_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_quickSortIntInt_LH_C_1⁰)), [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]), quickSortIntInt_lh(let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_quickSortIntInt_LH_C_1⁰))) | _  => error⁰}: 585
//│ [LH_N]: 575 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 544
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]}: 576
//│ 	case _lh_quickSortIntInt_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntInt_LH_C_0⁰ _lh_quickSortIntInt_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntInt_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_quickSortIntInt_LH_C_1⁰)), [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]), quickSortIntInt_lh(let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_quickSortIntInt_LH_C_1⁰))) | _  => error⁰}: 585
//│ [LH_N]: 589 --->
//│ 	DeadCodeCons
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 657
//│ 	case _lh_myLast_arg1⁰ of {LH_N  => [LH_P2 (0 - 100) (0 - 100)] | LH_C _lh_myLast_LH_C_0⁰ _lh_myLast_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_myLast_LH_C_0⁰, _lh_myLast_LH_C_1⁰) | _  => error⁰}: 667
//│ 	case _lh_lastPiece_Board_3⁰ of {LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰ | _  => error⁰}: 1577
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if polyEq⁰(_lh_inList_arg1⁰, _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 1725
//│ [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]: 594 --->
//│ 	DeadCodeCons
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 657
//│ 	case _lh_myLast_arg1⁰ of {LH_N  => [LH_P2 (0 - 100) (0 - 100)] | LH_C _lh_myLast_LH_C_0⁰ _lh_myLast_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_myLast_LH_C_0⁰, _lh_myLast_LH_C_1⁰) | _  => error⁰}: 667
//│ 	case _lh_lastPiece_Board_3⁰ of {LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰ | _  => error⁰}: 1577
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if polyEq⁰(_lh_inList_arg1⁰, _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 1725
//│ [LH_N]: 856 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 544
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]}: 576
//│ 	case _lh_quickSortIntInt_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntInt_LH_C_0⁰ _lh_quickSortIntInt_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntInt_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_quickSortIntInt_LH_C_1⁰)), [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]), quickSortIntInt_lh(let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_quickSortIntInt_LH_C_1⁰))) | _  => error⁰}: 585
//│ [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872 --->
//│ 	DeadCodeCons
//│ 	case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰}: 517
//│ 	case _lh_grow_arg1⁰ of {LH_P2 _lh_grow_LH_P2_0⁰ _lh_grow_LH_P2_1⁰ => zip_lz_nl_lh(repeat_lh((_lh_grow_LH_P2_0⁰ + 1)), descendents_lh(_lh_grow_LH_P2_1⁰)) | _  => error⁰}: 614
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_isFinished_arg1⁰ of {LH_P2 _lh_isFinished_LH_P2_0⁰ _lh_isFinished_LH_P2_1⁰ => tourFinished_lh(_lh_isFinished_LH_P2_1⁰) | _  => error⁰}: 1138
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ 	case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰}: 1403
//│ 	case _lh_intintComp_arg2⁰ of {LH_P2 _lh_intintComp_LH_P2_0¹ _lh_intintComp_LH_P2_1¹ => ((_lh_intintComp_LH_P2_0⁰ < _lh_intintComp_LH_P2_0¹) || ((_lh_intintComp_LH_P2_0⁰ == _lh_intintComp_LH_P2_0¹) && (_lh_intintComp_LH_P2_1⁰ < _lh_intintComp_LH_P2_1¹))) | _  => error⁰}: 1484
//│ 	case _lh_intintComp_arg1⁰ of {LH_P2 _lh_intintComp_LH_P2_0⁰ _lh_intintComp_LH_P2_1⁰ => case _lh_intintComp_arg2⁰ of {LH_P2 _lh_intintComp_LH_P2_0¹ _lh_intintComp_LH_P2_1¹ => ((_lh_intintComp_LH_P2_0⁰ < _lh_intintComp_LH_P2_0¹) || ((_lh_intintComp_LH_P2_0⁰ == _lh_intintComp_LH_P2_0¹) && (_lh_intintComp_LH_P2_1⁰ < _lh_intintComp_LH_P2_1¹))) | _  => error⁰} | _  => error⁰}: 1486
//│ [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))]: 884 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 544
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]}: 576
//│ 	case _lh_quickSortIntInt_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntInt_LH_C_0⁰ _lh_quickSortIntInt_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntInt_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_quickSortIntInt_LH_C_1⁰)), [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]), quickSortIntInt_lh(let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_quickSortIntInt_LH_C_1⁰))) | _  => error⁰}: 585
//│ [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004
//│ 	case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626
//│ [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004
//│ 	case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626
//│ [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004
//│ 	case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626
//│ [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004
//│ 	case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626
//│ [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004
//│ 	case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626
//│ [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004
//│ 	case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626
//│ [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004
//│ 	case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626
//│ [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004
//│ 	case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626
//│ [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990
//│ 	case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004
//│ 	case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1074 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 69
//│ [LH_N]: 1088 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 69
//│ [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 1150 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ [LH_N]: 1155 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ [UL]: 1159 --->
//│ 	DeadCodeCons
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ [UR]: 1160 --->
//│ 	DeadCodeCons
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ [DL]: 1161 --->
//│ 	DeadCodeCons
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ [DR]: 1162 --->
//│ 	DeadCodeCons
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ [LU]: 1163 --->
//│ 	DeadCodeCons
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ [LD]: 1164 --->
//│ 	DeadCodeCons
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ [RU]: 1165 --->
//│ 	DeadCodeCons
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ [RD]: 1166 --->
//│ 	DeadCodeCons
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ [LH_N]: 1167 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [RD] [LH_N]]: 1168 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [RU] [LH_C [RD] [LH_N]]]: 1169 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]: 1170 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]: 1171 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]: 1172 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]: 1173 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [UR] [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]]: 1174 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [UL] [LH_C [UR] [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]]]: 1175 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_N]: 1299 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_N]: 1324 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C ' ' [LH_N]]: 1325 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'h' [LH_C ' ' [LH_N]]]: 1326 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]: 1327 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]: 1328 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]: 1329 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]: 1330 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]: 1331 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]: 1332 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]: 1333 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]: 1334 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]: 1335 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]: 1336 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]: 1337 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]: 1338 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]: 1339 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]: 1340 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]: 1341 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]: 1342 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]: 1343 --->
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ [LH_N]: 1370 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C '|' [LH_N]]: 1371 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 's' [LH_C '|' [LH_N]]]: 1372 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]: 1373 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]: 1374 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]: 1375 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]: 1376 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]: 1377 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]: 1378 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]: 1379 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]: 1380 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]: 1381 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]: 1382 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]: 1383 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]: 1384 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]: 1385 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]: 1386 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]: 1387 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]: 1388 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]: 1389 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]: 1390 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_N]: 1441 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528 --->
//│ 	DeadCodeCons
//│ 	case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰}: 517
//│ 	case _lh_grow_arg1⁰ of {LH_P2 _lh_grow_LH_P2_0⁰ _lh_grow_LH_P2_1⁰ => zip_lz_nl_lh(repeat_lh((_lh_grow_LH_P2_0⁰ + 1)), descendents_lh(_lh_grow_LH_P2_1⁰)) | _  => error⁰}: 614
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_intChessSetComp_arg2⁰ of {LH_P2 _lh_intChessSetComp_LH_P2_0¹ _lh_intChessSetComp_LH_P2_1¹ => (_lh_intChessSetComp_LH_P2_0⁰ < _lh_intChessSetComp_LH_P2_0¹) | _  => error⁰}: 1128
//│ 	case _lh_intChessSetComp_arg1⁰ of {LH_P2 _lh_intChessSetComp_LH_P2_0⁰ _lh_intChessSetComp_LH_P2_1⁰ => case _lh_intChessSetComp_arg2⁰ of {LH_P2 _lh_intChessSetComp_LH_P2_0¹ _lh_intChessSetComp_LH_P2_1¹ => (_lh_intChessSetComp_LH_P2_0⁰ < _lh_intChessSetComp_LH_P2_0¹) | _  => error⁰} | _  => error⁰}: 1130
//│ 	case _lh_isFinished_arg1⁰ of {LH_P2 _lh_isFinished_LH_P2_0⁰ _lh_isFinished_LH_P2_1⁰ => tourFinished_lh(_lh_isFinished_LH_P2_1⁰) | _  => error⁰}: 1138
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ 	case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰}: 1403
//│ 	case _lh_listcomp_fun_ls_h⁶ of {LH_P2 _lh_singleDescend_LH_P2_0⁰ _lh_singleDescend_LH_P2_1⁰ => if (_lh_singleDescend_LH_P2_0⁰ == 1) then [LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | _  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 1763
//│ [LH_C [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 1532 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => case _lh_listcomp_fun_ls_h⁶ of {LH_P2 _lh_singleDescend_LH_P2_0⁰ _lh_singleDescend_LH_P2_1⁰ => if (_lh_singleDescend_LH_P2_0⁰ == 1) then [LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | _  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)} | LH_N  => [LH_N]}: 1765
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]}: 1909
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]}: 1941
//│ 	case _lh_quickSortIntChessSet_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntChessSet_LH_C_0⁰ _lh_quickSortIntChessSet_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntChessSet_lh(let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(_lh_quickSortIntChessSet_LH_C_1⁰)), [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]), quickSortIntChessSet_lh(let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(_lh_quickSortIntChessSet_LH_C_1⁰))) | _  => error⁰}: 1950
//│ [LH_N]: 1533 --->
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => case _lh_listcomp_fun_ls_h⁶ of {LH_P2 _lh_singleDescend_LH_P2_0⁰ _lh_singleDescend_LH_P2_1⁰ => if (_lh_singleDescend_LH_P2_0⁰ == 1) then [LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | _  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)} | LH_N  => [LH_N]}: 1765
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]}: 1909
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]}: 1941
//│ 	case _lh_quickSortIntChessSet_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntChessSet_LH_C_0⁰ _lh_quickSortIntChessSet_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntChessSet_lh(let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(_lh_quickSortIntChessSet_LH_C_1⁰)), [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]), quickSortIntChessSet_lh(let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(_lh_quickSortIntChessSet_LH_C_1⁰))) | _  => error⁰}: 1950
//│ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]: 1738 --->
//│ 	DeadCodeCons
//│ 	case _lh_myInit_LH_C_1⁰ of {LH_N  => [LH_N] | _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]}: 595
//│ 	case _lh_myInit_arg1⁰ of {LH_C _lh_myInit_LH_C_0⁰ _lh_myInit_LH_C_1⁰ => case _lh_myInit_LH_C_1⁰ of {LH_N  => [LH_N] | _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]} | _  => error⁰}: 597
//│ 	case _lh_assignMoveNo_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_assignMoveNo_LH_C_0⁰ _lh_assignMoveNo_LH_C_1⁰ => case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰} | _  => error⁰}: 888
//│ 	case _lh_lastPiece_Board_3⁰ of {LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰ | _  => error⁰}: 1577
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if polyEq⁰(_lh_inList_arg1⁰, _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 1725
//│ [Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739 --->
//│ 	DeadCodeCons
//│ 	case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰}: 517
//│ 	case _lh_grow_arg1⁰ of {LH_P2 _lh_grow_LH_P2_0⁰ _lh_grow_LH_P2_1⁰ => zip_lz_nl_lh(repeat_lh((_lh_grow_LH_P2_0⁰ + 1)), descendents_lh(_lh_grow_LH_P2_1⁰)) | _  => error⁰}: 614
//│ 	case _lh_showChessSet_arg1⁰ of {Board _lh_showChessSet_Board_0⁰ _lh_showChessSet_Board_1⁰ _lh_showChessSet_Board_2⁰ _lh_showChessSet_Board_3⁰ => let sortedTrail⁰ = quickSortIntInt_lh(assignMoveNo_lh(_lh_showChessSet_Board_3⁰, _lh_showChessSet_Board_0⁰, _lh_showChessSet_Board_1⁰))
//│ in printBoard_lh(_lh_showChessSet_Board_0⁰, 1, sortedTrail⁰) | _  => error⁰}: 635
//│ 	case _lh_logTen_arg1⁰ of {0  => 0 | _  => (1 + logTen⁰(div⁰(_lh_logTen_arg1⁰, 10)))}: 833
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_isFinished_arg1⁰ of {LH_P2 _lh_isFinished_LH_P2_0⁰ _lh_isFinished_LH_P2_1⁰ => tourFinished_lh(_lh_isFinished_LH_P2_1⁰) | _  => error⁰}: 1138
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ 	case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰}: 1403
//│ 	case _lh_sizeBoard_arg1⁰ of {Board _lh_sizeBoard_Board_0⁰ _lh_sizeBoard_Board_1⁰ _lh_sizeBoard_Board_2⁰ _lh_sizeBoard_Board_3⁰ => _lh_sizeBoard_Board_0⁰ | _  => error⁰}: 1445
//│ 	case _lh_firstPiece_arg1⁰ of {Board _lh_firstPiece_Board_0⁰ _lh_firstPiece_Board_1⁰ _lh_firstPiece_Board_2⁰ _lh_firstPiece_Board_3⁰ => _lh_firstPiece_Board_2⁰ | _  => error⁰}: 1505
//│ 	case _lh_isSquareFree_arg2⁰ of {Board _lh_isSquareFree_Board_0⁰ _lh_isSquareFree_Board_1⁰ _lh_isSquareFree_Board_2⁰ _lh_isSquareFree_Board_3⁰ => not⁰(inList_lh(_lh_isSquareFree_arg1⁰, _lh_isSquareFree_Board_3⁰)) | _  => error⁰}: 1516
//│ 	case _lh_lastPiece_arg1⁰ of {Board _lh_lastPiece_Board_0⁰ _lh_lastPiece_Board_1⁰ _lh_lastPiece_Board_2⁰ _lh_lastPiece_Board_3⁰ => case _lh_lastPiece_Board_3⁰ of {LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰ | _  => error⁰} | _  => error⁰}: 1579
//│ 	case _lh_addPiece_arg2⁰ of {Board _lh_addPiece_Board_0⁰ _lh_addPiece_Board_1⁰ _lh_addPiece_Board_2⁰ _lh_addPiece_Board_3⁰ => [Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]] | _  => error⁰}: 1741
//│ 	case _lh_deleteFirst_arg1⁰ of {Board _lh_deleteFirst_Board_0⁰ _lh_deleteFirst_Board_1⁰ _lh_deleteFirst_Board_2⁰ _lh_deleteFirst_Board_3⁰ => let ts'⁰ = myInit_lh(_lh_deleteFirst_Board_3⁰)
//│ in [Board _lh_deleteFirst_Board_0⁰ (_lh_deleteFirst_Board_1⁰ - 1) myLast_lh(ts'⁰) ts'⁰] | _  => error⁰}: 1886
//│ 	case _lh_noPieces_arg1⁰ of {Board _lh_noPieces_Board_0⁰ _lh_noPieces_Board_1⁰ _lh_noPieces_Board_2⁰ _lh_noPieces_Board_3⁰ => _lh_noPieces_Board_1⁰ | _  => error⁰}: 1955
//│ [LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 1755 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ [LH_N]: 1764 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ [LH_N]: 1779 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ys¹ of {LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)] | LH_N  => [LH_N]}: 67
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C _lh_copy_arg2⁰ copy_lh((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]: 1790 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ys¹ of {LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)] | LH_N  => [LH_N]}: 67
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_N]: 1864 --->
//│ 	DeadCodeCons
//│ 	case _lh_myInit_LH_C_1⁰ of {LH_N  => [LH_N] | _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]}: 595
//│ 	case _lh_myInit_arg1⁰ of {LH_C _lh_myInit_LH_C_0⁰ _lh_myInit_LH_C_1⁰ => case _lh_myInit_LH_C_1⁰ of {LH_N  => [LH_N] | _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]} | _  => error⁰}: 597
//│ 	case _lh_assignMoveNo_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_assignMoveNo_LH_C_0⁰ _lh_assignMoveNo_LH_C_1⁰ => case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰} | _  => error⁰}: 888
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if polyEq⁰(_lh_inList_arg1⁰, _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 1725
//│ [LH_C _lh_createBoard_arg2⁰ [LH_N]]: 1865 --->
//│ 	DeadCodeCons
//│ 	case _lh_myInit_LH_C_1⁰ of {LH_N  => [LH_N] | _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]}: 595
//│ 	case _lh_myInit_arg1⁰ of {LH_C _lh_myInit_LH_C_0⁰ _lh_myInit_LH_C_1⁰ => case _lh_myInit_LH_C_1⁰ of {LH_N  => [LH_N] | _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]} | _  => error⁰}: 597
//│ 	case _lh_assignMoveNo_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_assignMoveNo_LH_C_0⁰ _lh_assignMoveNo_LH_C_1⁰ => case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰} | _  => error⁰}: 888
//│ 	case _lh_lastPiece_Board_3⁰ of {LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰ | _  => error⁰}: 1577
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if polyEq⁰(_lh_inList_arg1⁰, _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 1725
//│ [Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866 --->
//│ 	DeadCodeCons
//│ 	case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰}: 517
//│ 	case _lh_grow_arg1⁰ of {LH_P2 _lh_grow_LH_P2_0⁰ _lh_grow_LH_P2_1⁰ => zip_lz_nl_lh(repeat_lh((_lh_grow_LH_P2_0⁰ + 1)), descendents_lh(_lh_grow_LH_P2_1⁰)) | _  => error⁰}: 614
//│ 	case _lh_showChessSet_arg1⁰ of {Board _lh_showChessSet_Board_0⁰ _lh_showChessSet_Board_1⁰ _lh_showChessSet_Board_2⁰ _lh_showChessSet_Board_3⁰ => let sortedTrail⁰ = quickSortIntInt_lh(assignMoveNo_lh(_lh_showChessSet_Board_3⁰, _lh_showChessSet_Board_0⁰, _lh_showChessSet_Board_1⁰))
//│ in printBoard_lh(_lh_showChessSet_Board_0⁰, 1, sortedTrail⁰) | _  => error⁰}: 635
//│ 	case _lh_logTen_arg1⁰ of {0  => 0 | _  => (1 + logTen⁰(div⁰(_lh_logTen_arg1⁰, 10)))}: 833
//│ 	case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006
//│ 	case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118
//│ 	case _lh_isFinished_arg1⁰ of {LH_P2 _lh_isFinished_LH_P2_0⁰ _lh_isFinished_LH_P2_1⁰ => tourFinished_lh(_lh_isFinished_LH_P2_1⁰) | _  => error⁰}: 1138
//│ 	case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295
//│ 	case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰}: 1403
//│ 	case _lh_sizeBoard_arg1⁰ of {Board _lh_sizeBoard_Board_0⁰ _lh_sizeBoard_Board_1⁰ _lh_sizeBoard_Board_2⁰ _lh_sizeBoard_Board_3⁰ => _lh_sizeBoard_Board_0⁰ | _  => error⁰}: 1445
//│ 	case _lh_firstPiece_arg1⁰ of {Board _lh_firstPiece_Board_0⁰ _lh_firstPiece_Board_1⁰ _lh_firstPiece_Board_2⁰ _lh_firstPiece_Board_3⁰ => _lh_firstPiece_Board_2⁰ | _  => error⁰}: 1505
//│ 	case _lh_isSquareFree_arg2⁰ of {Board _lh_isSquareFree_Board_0⁰ _lh_isSquareFree_Board_1⁰ _lh_isSquareFree_Board_2⁰ _lh_isSquareFree_Board_3⁰ => not⁰(inList_lh(_lh_isSquareFree_arg1⁰, _lh_isSquareFree_Board_3⁰)) | _  => error⁰}: 1516
//│ 	case _lh_lastPiece_arg1⁰ of {Board _lh_lastPiece_Board_0⁰ _lh_lastPiece_Board_1⁰ _lh_lastPiece_Board_2⁰ _lh_lastPiece_Board_3⁰ => case _lh_lastPiece_Board_3⁰ of {LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰ | _  => error⁰} | _  => error⁰}: 1579
//│ 	case _lh_addPiece_arg2⁰ of {Board _lh_addPiece_Board_0⁰ _lh_addPiece_Board_1⁰ _lh_addPiece_Board_2⁰ _lh_addPiece_Board_3⁰ => [Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]] | _  => error⁰}: 1741
//│ 	case _lh_deleteFirst_arg1⁰ of {Board _lh_deleteFirst_Board_0⁰ _lh_deleteFirst_Board_1⁰ _lh_deleteFirst_Board_2⁰ _lh_deleteFirst_Board_3⁰ => let ts'⁰ = myInit_lh(_lh_deleteFirst_Board_3⁰)
//│ in [Board _lh_deleteFirst_Board_0⁰ (_lh_deleteFirst_Board_1⁰ - 1) myLast_lh(ts'⁰) ts'⁰] | _  => error⁰}: 1886
//│ 	case _lh_noPieces_arg1⁰ of {Board _lh_noPieces_Board_0⁰ _lh_noPieces_Board_1⁰ _lh_noPieces_Board_2⁰ _lh_noPieces_Board_3⁰ => _lh_noPieces_Board_1⁰ | _  => error⁰}: 1955
//│ [Board _lh_deleteFirst_Board_0⁰ (_lh_deleteFirst_Board_1⁰ - 1) myLast_lh(ts'⁰) ts'⁰]: 1883 --->
//│ 	case _lh_sizeBoard_arg1⁰ of {Board _lh_sizeBoard_Board_0⁰ _lh_sizeBoard_Board_1⁰ _lh_sizeBoard_Board_2⁰ _lh_sizeBoard_Board_3⁰ => _lh_sizeBoard_Board_0⁰ | _  => error⁰}: 1445
//│ 	case _lh_isSquareFree_arg2⁰ of {Board _lh_isSquareFree_Board_0⁰ _lh_isSquareFree_Board_1⁰ _lh_isSquareFree_Board_2⁰ _lh_isSquareFree_Board_3⁰ => not⁰(inList_lh(_lh_isSquareFree_arg1⁰, _lh_isSquareFree_Board_3⁰)) | _  => error⁰}: 1516
//│ 	case _lh_lastPiece_arg1⁰ of {Board _lh_lastPiece_Board_0⁰ _lh_lastPiece_Board_1⁰ _lh_lastPiece_Board_2⁰ _lh_lastPiece_Board_3⁰ => case _lh_lastPiece_Board_3⁰ of {LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰ | _  => error⁰} | _  => error⁰}: 1579
//│ [LH_N]: 1889 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1903 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]}: 1909
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]}: 1941
//│ 	case _lh_quickSortIntChessSet_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntChessSet_LH_C_0⁰ _lh_quickSortIntChessSet_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntChessSet_lh(let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(_lh_quickSortIntChessSet_LH_C_1⁰)), [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]), quickSortIntChessSet_lh(let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(_lh_quickSortIntChessSet_LH_C_1⁰))) | _  => error⁰}: 1950
//│ [LH_N]: 1908 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]}: 1909
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]}: 1941
//│ 	case _lh_quickSortIntChessSet_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntChessSet_LH_C_0⁰ _lh_quickSortIntChessSet_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntChessSet_lh(let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(_lh_quickSortIntChessSet_LH_C_1⁰)), [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]), quickSortIntChessSet_lh(let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(_lh_quickSortIntChessSet_LH_C_1⁰))) | _  => error⁰}: 1950
//│ [LH_N]: 1918 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]: 1919 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135
//│ 	case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146
//│ 	case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519
//│ 	case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708
//│ 	case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858
//│ 	case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961
//│ [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1935 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]}: 1909
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]}: 1941
//│ 	case _lh_quickSortIntChessSet_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntChessSet_LH_C_0⁰ _lh_quickSortIntChessSet_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntChessSet_lh(let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(_lh_quickSortIntChessSet_LH_C_1⁰)), [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]), quickSortIntChessSet_lh(let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(_lh_quickSortIntChessSet_LH_C_1⁰))) | _  => error⁰}: 1950
//│ [LH_N]: 1940 --->
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]}: 1909
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]}: 1941
//│ 	case _lh_quickSortIntChessSet_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntChessSet_LH_C_0⁰ _lh_quickSortIntChessSet_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntChessSet_lh(let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(_lh_quickSortIntChessSet_LH_C_1⁰)), [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]), quickSortIntChessSet_lh(let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(_lh_quickSortIntChessSet_LH_C_1⁰))) | _  => error⁰}: 1950
//│ [LH_N]: 1964 --->
//│ 	case force⁰(ls²) of {LH_C h² t² => [LH_C h² take_lz_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 121
//│ [LH_C inquireFront_lh(_lh_depthSearch_arg1⁰) depthSearch_lh(removeFront_lh(_lh_depthSearch_arg1⁰), _lh_depthSearch_arg2⁰, _lh_depthSearch_arg3⁰)]: 1984 --->
//│ 	case force⁰(ls²) of {LH_C h² t² => [LH_C h² take_lz_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 121
//│ [LH_N]: 2023 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48
//│ [LH_N]: 2050 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48
//│ ------------------
//│ case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C h⁴ mappend_lh(t⁴, ys²)]: 144
//│ 	[LH_N]: 159
//│ 	[LH_N]: 311
//│ 	[LH_C '|' [LH_N]]: 312
//│ 	[LH_N]: 524
//│ 	[LH_N]: 553
//│ 	[LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]: 554
//│ 	[LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 1150
//│ 	[LH_N]: 1155
//│ 	[LH_N]: 1299
//│ 	[LH_N]: 1370
//│ 	[LH_C '|' [LH_N]]: 1371
//│ 	[LH_C 's' [LH_C '|' [LH_N]]]: 1372
//│ 	[LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]: 1373
//│ 	[LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]: 1374
//│ 	[LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]: 1375
//│ 	[LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]: 1376
//│ 	[LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]: 1377
//│ 	[LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]: 1378
//│ 	[LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]: 1379
//│ 	[LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]: 1380
//│ 	[LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]: 1381
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]: 1382
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]: 1383
//│ 	[LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]: 1384
//│ 	[LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]: 1385
//│ 	[LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]: 1386
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]: 1387
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]: 1388
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]: 1389
//│ 	[LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]: 1390
//│ 	[LH_N]: 1441
//│ 	[LH_N]: 1779
//│ 	[LH_C _lh_copy_arg2⁰ copy_lh((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]: 1790
//│ 	[LH_N]: 1889
//│ 	[LH_N]: 1918
//│ 	[LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]: 1919
//│ case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 46 --->
//│ 	[LH_C x⁰ repeat_lh(x⁰)]: 98
//│ case ys⁰ of {LH_C hy⁰ ty⁰ => case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 48 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ 	[LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)]: 65
//│ 	[LH_N]: 66
//│ 	[LH_N]: 68
//│ 	[LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 1755
//│ 	[LH_N]: 1764
//│ 	[LH_N]: 2023
//│ 	[LH_N]: 2050
//│ case ys¹ of {LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)] | LH_N  => [LH_N]}: 67 --->
//│ 	[LH_N]: 1779
//│ 	[LH_C _lh_copy_arg2⁰ copy_lh((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]: 1790
//│ case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 69 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1074
//│ 	[LH_N]: 1088
//│ case force⁰(ls²) of {LH_C h² t² => [LH_C h² take_lz_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 121 --->
//│ 	[LH_N]: 1964
//│ 	[LH_C inquireFront_lh(_lh_depthSearch_arg1⁰) depthSearch_lh(removeFront_lh(_lh_depthSearch_arg1⁰), _lh_depthSearch_arg2⁰, _lh_depthSearch_arg3⁰)]: 1984
//│ case ls³ of {LH_C h³ t³ => (1 + length_lh(t³)) | LH_N  => 0}: 135 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C h⁴ mappend_lh(t⁴, ys²)]: 144
//│ 	[LH_N]: 159
//│ 	[LH_N]: 311
//│ 	[LH_C '|' [LH_N]]: 312
//│ 	[LH_N]: 524
//│ 	[LH_N]: 553
//│ 	[LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]: 554
//│ 	[LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 1150
//│ 	[LH_N]: 1155
//│ 	[LH_N]: 1299
//│ 	[LH_N]: 1370
//│ 	[LH_C '|' [LH_N]]: 1371
//│ 	[LH_C 's' [LH_C '|' [LH_N]]]: 1372
//│ 	[LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]: 1373
//│ 	[LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]: 1374
//│ 	[LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]: 1375
//│ 	[LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]: 1376
//│ 	[LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]: 1377
//│ 	[LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]: 1378
//│ 	[LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]: 1379
//│ 	[LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]: 1380
//│ 	[LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]: 1381
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]: 1382
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]: 1383
//│ 	[LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]: 1384
//│ 	[LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]: 1385
//│ 	[LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]: 1386
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]: 1387
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]: 1388
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]: 1389
//│ 	[LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]: 1390
//│ 	[LH_N]: 1441
//│ 	[LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 1755
//│ 	[LH_N]: 1764
//│ 	[LH_N]: 1779
//│ 	[LH_C _lh_copy_arg2⁰ copy_lh((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]: 1790
//│ 	[LH_N]: 1889
//│ 	[LH_N]: 1918
//│ 	[LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]: 1919
//│ case xs² of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys²)] | LH_N  => ys²}: 146 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)]: 44
//│ 	[LH_N]: 45
//│ 	[LH_N]: 47
//│ 	[LH_C h⁴ mappend_lh(t⁴, ys²)]: 144
//│ 	[LH_N]: 159
//│ 	[LH_N]: 172
//│ 	[LH_C '*' [LH_N]]: 173
//│ 	[LH_N]: 210
//│ 	[LH_C '|' [LH_N]]: 211
//│ 	[LH_C '*' [LH_C '|' [LH_N]]]: 212
//│ 	[LH_N]: 311
//│ 	[LH_C '|' [LH_N]]: 312
//│ 	[LH_N]: 385
//│ 	[LH_C '*' [LH_N]]: 386
//│ 	[LH_N]: 427
//│ 	[LH_C '|' [LH_N]]: 428
//│ 	[LH_C '*' [LH_C '|' [LH_N]]]: 429
//│ 	[LH_N]: 524
//│ 	[LH_N]: 553
//│ 	[LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]: 554
//│ 	[LH_N]: 1299
//│ 	[LH_N]: 1324
//│ 	[LH_C ' ' [LH_N]]: 1325
//│ 	[LH_C 'h' [LH_C ' ' [LH_N]]]: 1326
//│ 	[LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]: 1327
//│ 	[LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]: 1328
//│ 	[LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]: 1329
//│ 	[LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]: 1330
//│ 	[LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]: 1331
//│ 	[LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]: 1332
//│ 	[LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]: 1333
//│ 	[LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]: 1334
//│ 	[LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]: 1335
//│ 	[LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]: 1336
//│ 	[LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]: 1337
//│ 	[LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]: 1338
//│ 	[LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]: 1339
//│ 	[LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]: 1340
//│ 	[LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]: 1341
//│ 	[LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]: 1342
//│ 	[LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]: 1343
//│ 	[LH_N]: 1370
//│ 	[LH_C '|' [LH_N]]: 1371
//│ 	[LH_C 's' [LH_C '|' [LH_N]]]: 1372
//│ 	[LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]: 1373
//│ 	[LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]: 1374
//│ 	[LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]: 1375
//│ 	[LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]: 1376
//│ 	[LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]: 1377
//│ 	[LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]: 1378
//│ 	[LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]: 1379
//│ 	[LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]: 1380
//│ 	[LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]: 1381
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]: 1382
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]: 1383
//│ 	[LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]: 1384
//│ 	[LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]: 1385
//│ 	[LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]: 1386
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]: 1387
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]: 1388
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]: 1389
//│ 	[LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]: 1390
//│ 	[LH_N]: 1441
//│ 	[LH_N]: 1779
//│ 	[LH_C _lh_copy_arg2⁰ copy_lh((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]: 1790
//│ 	[LH_N]: 1889
//│ 	[LH_N]: 1918
//│ 	[LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]: 1919
//│ case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰}: 517 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_P2 hx⁰ hy⁰]: 38
//│ 	[LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰]: 410
//│ 	[LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰]: 442
//│ 	[LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_printBoard_arg3⁰ of {LH_N  => if (_lh_printBoard_arg2⁰ > (_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰)) then [LH_N] else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2⁰) && ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1⁰ * _lh_printBoard_arg1⁰), 1)), printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2⁰ % _lh_printBoard_arg1⁰) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1⁰, (_lh_printBoard_arg2⁰ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | _  => error⁰} | _  => error⁰}: 519 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C h⁴ mappend_lh(t⁴, ys²)]: 144
//│ 	[LH_N]: 159
//│ 	[LH_N]: 195
//│ 	[LH_N]: 223
//│ 	[LH_N]: 311
//│ 	[LH_C '|' [LH_N]]: 312
//│ 	[LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰]: 412
//│ 	[LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰]: 444
//│ 	[LH_N]: 524
//│ 	[LH_N]: 553
//│ 	[LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]: 554
//│ 	[LH_N]: 1299
//│ 	[LH_N]: 1370
//│ 	[LH_C '|' [LH_N]]: 1371
//│ 	[LH_C 's' [LH_C '|' [LH_N]]]: 1372
//│ 	[LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]: 1373
//│ 	[LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]: 1374
//│ 	[LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]: 1375
//│ 	[LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]: 1376
//│ 	[LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]: 1377
//│ 	[LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]: 1378
//│ 	[LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]: 1379
//│ 	[LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]: 1380
//│ 	[LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]: 1381
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]: 1382
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]: 1383
//│ 	[LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]: 1384
//│ 	[LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]: 1385
//│ 	[LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]: 1386
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]: 1387
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]: 1388
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]: 1389
//│ 	[LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]: 1390
//│ 	[LH_N]: 1441
//│ 	[LH_N]: 1779
//│ 	[LH_C _lh_copy_arg2⁰ copy_lh((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]: 1790
//│ 	[LH_N]: 1889
//│ 	[LH_N]: 1918
//│ 	[LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]: 1919
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 544 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 538
//│ 	[LH_N]: 543
//│ 	[LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 570
//│ 	[LH_N]: 575
//│ 	[LH_N]: 856
//│ 	[LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))]: 884
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]}: 576 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 538
//│ 	[LH_N]: 543
//│ 	[LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 570
//│ 	[LH_N]: 575
//│ 	[LH_N]: 856
//│ 	[LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))]: 884
//│ case _lh_quickSortIntInt_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntInt_LH_C_0⁰ _lh_quickSortIntInt_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntInt_lh(let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_quickSortIntInt_LH_C_1⁰)), [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]), quickSortIntInt_lh(let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_quickSortIntInt_LH_C_1⁰))) | _  => error⁰}: 585 --->
//│ 	[LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 538
//│ 	[LH_N]: 543
//│ 	[LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 570
//│ 	[LH_N]: 575
//│ 	[LH_N]: 856
//│ 	[LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))]: 884
//│ case _lh_myInit_LH_C_1⁰ of {LH_N  => [LH_N] | _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]}: 595 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]: 1738
//│ 	[LH_N]: 1864
//│ 	[LH_C _lh_createBoard_arg2⁰ [LH_N]]: 1865
//│ case _lh_myInit_arg1⁰ of {LH_C _lh_myInit_LH_C_0⁰ _lh_myInit_LH_C_1⁰ => case _lh_myInit_LH_C_1⁰ of {LH_N  => [LH_N] | _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]} | _  => error⁰}: 597 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]: 1738
//│ 	[LH_N]: 1864
//│ 	[LH_C _lh_createBoard_arg2⁰ [LH_N]]: 1865
//│ case _lh_grow_arg1⁰ of {LH_P2 _lh_grow_LH_P2_0⁰ _lh_grow_LH_P2_1⁰ => zip_lz_nl_lh(repeat_lh((_lh_grow_LH_P2_0⁰ + 1)), descendents_lh(_lh_grow_LH_P2_1⁰)) | _  => error⁰}: 614 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 hx⁰ hy⁰]: 38
//│ 	[LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_showChessSet_arg1⁰ of {Board _lh_showChessSet_Board_0⁰ _lh_showChessSet_Board_1⁰ _lh_showChessSet_Board_2⁰ _lh_showChessSet_Board_3⁰ => let sortedTrail⁰ = quickSortIntInt_lh(assignMoveNo_lh(_lh_showChessSet_Board_3⁰, _lh_showChessSet_Board_0⁰, _lh_showChessSet_Board_1⁰))
//│ in printBoard_lh(_lh_showChessSet_Board_0⁰, 1, sortedTrail⁰) | _  => error⁰}: 635 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 657 --->
//│ 	[LH_N]: 589
//│ 	[LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]: 594
//│ case _lh_myLast_arg1⁰ of {LH_N  => [LH_P2 (0 - 100) (0 - 100)] | LH_C _lh_myLast_LH_C_0⁰ _lh_myLast_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_myLast_LH_C_0⁰, _lh_myLast_LH_C_1⁰) | _  => error⁰}: 667 --->
//│ 	[LH_N]: 589
//│ 	[LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]: 594
//│ case _lh_logTen_arg1⁰ of {0  => 0 | _  => (1 + logTen⁰(div⁰(_lh_logTen_arg1⁰, 10)))}: 833 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰}: 886 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_assignMoveNo_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_assignMoveNo_LH_C_0⁰ _lh_assignMoveNo_LH_C_1⁰ => case _lh_assignMoveNo_LH_C_0⁰ of {LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2⁰, (_lh_assignMoveNo_arg3⁰ - 1))] | _  => error⁰} | _  => error⁰}: 888 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]: 1738
//│ 	[LH_N]: 1864
//│ 	[LH_C _lh_createBoard_arg2⁰ [LH_N]]: 1865
//│ case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰}: 906 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰}: 920 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰}: 934 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰}: 948 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰}: 962 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰}: 976 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰}: 990 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰}: 1004 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_move_arg1⁰ of {UL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)] | _  => error⁰} | UR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)] | _  => error⁰} | DL  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)] | _  => error⁰} | DR  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)] | _  => error⁰} | LU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)] | _  => error⁰} | LD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)] | _  => error⁰} | RU  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)] | _  => error⁰} | RD  => case _lh_move_arg2⁰ of {LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)] | _  => error⁰} | _  => error⁰}: 1006 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_P2 hx⁰ hy⁰]: 38
//│ 	[LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872
//│ 	[UL]: 1159
//│ 	[UR]: 1160
//│ 	[DL]: 1161
//│ 	[DR]: 1162
//│ 	[LU]: 1163
//│ 	[LD]: 1164
//│ 	[RU]: 1165
//│ 	[RD]: 1166
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 1078 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 88
//│ 	[LH_N]: 89
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(enumFromTo_lh(1, _lh_root_arg1⁰)) | LH_N  => [LH_N]}: 1089 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 88
//│ 	[LH_N]: 89
//│ case _lh_mySnd_arg1⁰ of {LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰ | _  => error⁰}: 1118 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_P2 hx⁰ hy⁰]: 38
//│ 	[LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872
//│ 	[UL]: 1159
//│ 	[UR]: 1160
//│ 	[DL]: 1161
//│ 	[DR]: 1162
//│ 	[LU]: 1163
//│ 	[LD]: 1164
//│ 	[RU]: 1165
//│ 	[RD]: 1166
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_intChessSetComp_arg2⁰ of {LH_P2 _lh_intChessSetComp_LH_P2_0¹ _lh_intChessSetComp_LH_P2_1¹ => (_lh_intChessSetComp_LH_P2_0⁰ < _lh_intChessSetComp_LH_P2_0¹) | _  => error⁰}: 1128 --->
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ case _lh_intChessSetComp_arg1⁰ of {LH_P2 _lh_intChessSetComp_LH_P2_0⁰ _lh_intChessSetComp_LH_P2_1⁰ => case _lh_intChessSetComp_arg2⁰ of {LH_P2 _lh_intChessSetComp_LH_P2_0¹ _lh_intChessSetComp_LH_P2_1¹ => (_lh_intChessSetComp_LH_P2_0⁰ < _lh_intChessSetComp_LH_P2_0¹) | _  => error⁰} | _  => error⁰}: 1130 --->
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ case _lh_isFinished_arg1⁰ of {LH_P2 _lh_isFinished_LH_P2_0⁰ _lh_isFinished_LH_P2_1⁰ => tourFinished_lh(_lh_isFinished_LH_P2_1⁰) | _  => error⁰}: 1138 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 hx⁰ hy⁰]: 38
//│ 	[LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156 --->
//│ 	[LH_N]: 1167
//│ 	[LH_C [RD] [LH_N]]: 1168
//│ 	[LH_C [RU] [LH_C [RD] [LH_N]]]: 1169
//│ 	[LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]: 1170
//│ 	[LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]: 1171
//│ 	[LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]: 1172
//│ 	[LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]: 1173
//│ 	[LH_C [UR] [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]]: 1174
//│ 	[LH_C [UL] [LH_C [UR] [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]]]: 1175
//│ case _lh_strToInt_arg2⁰ of {LH_N  => _lh_strToInt_arg1⁰ | LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt⁰(((10 * _lh_strToInt_arg1⁰) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰) | _  => error⁰}: 1295 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_P2 hx⁰ hy⁰]: 38
//│ 	[LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872
//│ 	[UL]: 1159
//│ 	[UR]: 1160
//│ 	[DL]: 1161
//│ 	[DR]: 1162
//│ 	[LU]: 1163
//│ 	[LD]: 1164
//│ 	[RU]: 1165
//│ 	[RD]: 1166
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰}: 1403 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 hx⁰ hy⁰]: 38
//│ 	[LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_pp_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_pp_LH_C_0⁰ _lh_pp_LH_C_1⁰ => case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 1405 --->
//│ 	[LH_C h² take_lz_lh((n⁰ - 1), t²)]: 119
//│ 	[LH_N]: 120
//│ 	[LH_N]: 122
//│ case _lh_printTour_LH_C_1¹ of {LH_N  => pp⁰(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh))) | _  => error⁰}: 1433 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ case _lh_printTour_LH_C_1⁰ of {LH_C _lh_printTour_LH_C_0¹ _lh_printTour_LH_C_1¹ => case _lh_printTour_LH_C_1¹ of {LH_N  => pp⁰(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh))) | _  => error⁰} | _  => error⁰}: 1435 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ case _lh_matchIdent⁰ of {LH_C _lh_printTour_LH_C_0⁰ _lh_printTour_LH_C_1⁰ => case _lh_printTour_LH_C_1⁰ of {LH_C _lh_printTour_LH_C_0¹ _lh_printTour_LH_C_1¹ => case _lh_printTour_LH_C_1¹ of {LH_N  => pp⁰(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh))) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1437 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ case _lh_sizeBoard_arg1⁰ of {Board _lh_sizeBoard_Board_0⁰ _lh_sizeBoard_Board_1⁰ _lh_sizeBoard_Board_2⁰ _lh_sizeBoard_Board_3⁰ => _lh_sizeBoard_Board_0⁰ | _  => error⁰}: 1445 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ 	[Board _lh_deleteFirst_Board_0⁰ (_lh_deleteFirst_Board_1⁰ - 1) myLast_lh(ts'⁰) ts'⁰]: 1883
//│ case _lh_intintComp_arg2⁰ of {LH_P2 _lh_intintComp_LH_P2_0¹ _lh_intintComp_LH_P2_1¹ => ((_lh_intintComp_LH_P2_0⁰ < _lh_intintComp_LH_P2_0¹) || ((_lh_intintComp_LH_P2_0⁰ == _lh_intintComp_LH_P2_0¹) && (_lh_intintComp_LH_P2_1⁰ < _lh_intintComp_LH_P2_1¹))) | _  => error⁰}: 1484 --->
//│ 	[LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872
//│ case _lh_intintComp_arg1⁰ of {LH_P2 _lh_intintComp_LH_P2_0⁰ _lh_intintComp_LH_P2_1⁰ => case _lh_intintComp_arg2⁰ of {LH_P2 _lh_intintComp_LH_P2_0¹ _lh_intintComp_LH_P2_1¹ => ((_lh_intintComp_LH_P2_0⁰ < _lh_intintComp_LH_P2_0¹) || ((_lh_intintComp_LH_P2_0⁰ == _lh_intintComp_LH_P2_0¹) && (_lh_intintComp_LH_P2_1⁰ < _lh_intintComp_LH_P2_1¹))) | _  => error⁰} | _  => error⁰}: 1486 --->
//│ 	[LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2⁰) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3⁰]: 872
//│ case _lh_firstPiece_arg1⁰ of {Board _lh_firstPiece_Board_0⁰ _lh_firstPiece_Board_1⁰ _lh_firstPiece_Board_2⁰ _lh_firstPiece_Board_3⁰ => _lh_firstPiece_Board_2⁰ | _  => error⁰}: 1505 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_isSquareFree_arg2⁰ of {Board _lh_isSquareFree_Board_0⁰ _lh_isSquareFree_Board_1⁰ _lh_isSquareFree_Board_2⁰ _lh_isSquareFree_Board_3⁰ => not⁰(inList_lh(_lh_isSquareFree_arg1⁰, _lh_isSquareFree_Board_3⁰)) | _  => error⁰}: 1516 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ 	[Board _lh_deleteFirst_Board_0⁰ (_lh_deleteFirst_Board_1⁰ - 1) myLast_lh(ts'⁰) ts'⁰]: 1883
//│ case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1534 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ case _lh_lastPiece_Board_3⁰ of {LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰ | _  => error⁰}: 1577 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_N]: 589
//│ 	[LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]: 594
//│ 	[LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]: 1738
//│ 	[LH_C _lh_createBoard_arg2⁰ [LH_N]]: 1865
//│ case _lh_lastPiece_arg1⁰ of {Board _lh_lastPiece_Board_0⁰ _lh_lastPiece_Board_1⁰ _lh_lastPiece_Board_2⁰ _lh_lastPiece_Board_3⁰ => case _lh_lastPiece_Board_3⁰ of {LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰ | _  => error⁰} | _  => error⁰}: 1579 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ 	[Board _lh_deleteFirst_Board_0⁰ (_lh_deleteFirst_Board_1⁰ - 1) myLast_lh(ts'⁰) ts'⁰]: 1883
//│ case _lh_canMoveTo_arg1⁰ of {LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => let sze¹ = sizeBoard_lh(_lh_canMoveTo_arg2⁰)
//│ in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze¹)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze¹)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2⁰)) | _  => error⁰}: 1626 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]: 904
//│ 	[LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]: 918
//│ 	[LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]: 932
//│ 	[LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]: 946
//│ 	[LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]: 960
//│ 	[LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]: 974
//│ 	[LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]: 988
//│ 	[LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]: 1002
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]: 1070
//│ case _lh_removeFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰ | _  => error⁰}: 1708 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C h⁴ mappend_lh(t⁴, ys²)]: 144
//│ 	[LH_N]: 159
//│ 	[LH_N]: 311
//│ 	[LH_C '|' [LH_N]]: 312
//│ 	[LH_N]: 524
//│ 	[LH_N]: 553
//│ 	[LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]: 554
//│ 	[LH_N]: 1299
//│ 	[LH_N]: 1370
//│ 	[LH_C '|' [LH_N]]: 1371
//│ 	[LH_C 's' [LH_C '|' [LH_N]]]: 1372
//│ 	[LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]: 1373
//│ 	[LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]: 1374
//│ 	[LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]: 1375
//│ 	[LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]: 1376
//│ 	[LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]: 1377
//│ 	[LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]: 1378
//│ 	[LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]: 1379
//│ 	[LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]: 1380
//│ 	[LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]: 1381
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]: 1382
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]: 1383
//│ 	[LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]: 1384
//│ 	[LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]: 1385
//│ 	[LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]: 1386
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]: 1387
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]: 1388
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]: 1389
//│ 	[LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]: 1390
//│ 	[LH_N]: 1441
//│ 	[LH_N]: 1779
//│ 	[LH_C _lh_copy_arg2⁰ copy_lh((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]: 1790
//│ 	[LH_N]: 1889
//│ 	[LH_N]: 1918
//│ 	[LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]: 1919
//│ case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if polyEq⁰(_lh_inList_arg1⁰, _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 1725 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_N]: 589
//│ 	[LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]: 594
//│ 	[LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]: 1738
//│ 	[LH_N]: 1864
//│ 	[LH_C _lh_createBoard_arg2⁰ [LH_N]]: 1865
//│ case _lh_addPiece_arg2⁰ of {Board _lh_addPiece_Board_0⁰ _lh_addPiece_Board_1⁰ _lh_addPiece_Board_2⁰ _lh_addPiece_Board_3⁰ => [Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]] | _  => error⁰}: 1741 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_listcomp_fun_ls_h⁶ of {LH_P2 _lh_singleDescend_LH_P2_0⁰ _lh_singleDescend_LH_P2_1⁰ => if (_lh_singleDescend_LH_P2_0⁰ == 1) then [LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | _  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}: 1763 --->
//│ 	[LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵]: 1528
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => case _lh_listcomp_fun_ls_h⁶ of {LH_P2 _lh_singleDescend_LH_P2_0⁰ _lh_singleDescend_LH_P2_1⁰ => if (_lh_singleDescend_LH_P2_0⁰ == 1) then [LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶) | _  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)} | LH_N  => [LH_N]}: 1765 --->
//│ 	[LH_C [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 1532
//│ 	[LH_N]: 1533
//│ case _lh_inquireFront_arg1⁰ of {LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) | LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰ | _  => error⁰}: 1858 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C h⁴ mappend_lh(t⁴, ys²)]: 144
//│ 	[LH_N]: 159
//│ 	[LH_N]: 311
//│ 	[LH_C '|' [LH_N]]: 312
//│ 	[LH_N]: 524
//│ 	[LH_N]: 553
//│ 	[LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]: 554
//│ 	[LH_N]: 1299
//│ 	[LH_N]: 1370
//│ 	[LH_C '|' [LH_N]]: 1371
//│ 	[LH_C 's' [LH_C '|' [LH_N]]]: 1372
//│ 	[LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]: 1373
//│ 	[LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]: 1374
//│ 	[LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]: 1375
//│ 	[LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]: 1376
//│ 	[LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]: 1377
//│ 	[LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]: 1378
//│ 	[LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]: 1379
//│ 	[LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]: 1380
//│ 	[LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]: 1381
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]: 1382
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]: 1383
//│ 	[LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]: 1384
//│ 	[LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]: 1385
//│ 	[LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]: 1386
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]: 1387
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]: 1388
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]: 1389
//│ 	[LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]: 1390
//│ 	[LH_N]: 1441
//│ 	[LH_N]: 1779
//│ 	[LH_C _lh_copy_arg2⁰ copy_lh((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]: 1790
//│ 	[LH_N]: 1889
//│ 	[LH_N]: 1918
//│ 	[LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]: 1919
//│ case _lh_deleteFirst_arg1⁰ of {Board _lh_deleteFirst_Board_0⁰ _lh_deleteFirst_Board_1⁰ _lh_deleteFirst_Board_2⁰ _lh_deleteFirst_Board_3⁰ => let ts'⁰ = myInit_lh(_lh_deleteFirst_Board_3⁰)
//│ in [Board _lh_deleteFirst_Board_0⁰ (_lh_deleteFirst_Board_1⁰ - 1) myLast_lh(ts'⁰) ts'⁰] | _  => error⁰}: 1886 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]}: 1909 --->
//│ 	[LH_C [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 1532
//│ 	[LH_N]: 1533
//│ 	[LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1903
//│ 	[LH_N]: 1908
//│ 	[LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1935
//│ 	[LH_N]: 1940
//│ case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]}: 1941 --->
//│ 	[LH_C [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 1532
//│ 	[LH_N]: 1533
//│ 	[LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1903
//│ 	[LH_N]: 1908
//│ 	[LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1935
//│ 	[LH_N]: 1940
//│ case _lh_quickSortIntChessSet_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_quickSortIntChessSet_LH_C_0⁰ _lh_quickSortIntChessSet_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntChessSet_lh(let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁷(_lh_quickSortIntChessSet_LH_C_1⁰)), [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]), quickSortIntChessSet_lh(let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁸(_lh_quickSortIntChessSet_LH_C_1⁰))) | _  => error⁰}: 1950 --->
//│ 	[LH_C [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 1532
//│ 	[LH_N]: 1533
//│ 	[LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1903
//│ 	[LH_N]: 1908
//│ 	[LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1935
//│ 	[LH_N]: 1940
//│ case _lh_noPieces_arg1⁰ of {Board _lh_noPieces_Board_0⁰ _lh_noPieces_Board_1⁰ _lh_noPieces_Board_2⁰ _lh_noPieces_Board_3⁰ => _lh_noPieces_Board_1⁰ | _  => error⁰}: 1955 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1⁰ _lh_addPiece_Board_3⁰]]: 1739
//│ 	[Board _lh_createBoard_arg1⁰ 1 _lh_createBoard_arg2⁰ [LH_C _lh_createBoard_arg2⁰ [LH_N]]]: 1866
//│ case _lh_matchIdent¹ of {LH_N  => [True] | _  => [False]}: 1961 --->
//│ 	DeadCodeProd
//│ 	NoProd
//│ 	[LH_C h⁴ mappend_lh(t⁴, ys²)]: 144
//│ 	[LH_N]: 159
//│ 	[LH_N]: 311
//│ 	[LH_C '|' [LH_N]]: 312
//│ 	[LH_N]: 524
//│ 	[LH_N]: 553
//│ 	[LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]: 554
//│ 	[LH_N]: 1299
//│ 	[LH_N]: 1370
//│ 	[LH_C '|' [LH_N]]: 1371
//│ 	[LH_C 's' [LH_C '|' [LH_N]]]: 1372
//│ 	[LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]: 1373
//│ 	[LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]: 1374
//│ 	[LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]: 1375
//│ 	[LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]: 1376
//│ 	[LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]: 1377
//│ 	[LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]: 1378
//│ 	[LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]: 1379
//│ 	[LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]: 1380
//│ 	[LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]: 1381
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]: 1382
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]: 1383
//│ 	[LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]: 1384
//│ 	[LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]: 1385
//│ 	[LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]: 1386
//│ 	[LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]: 1387
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]: 1388
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]: 1389
//│ 	[LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]: 1390
//│ 	[LH_N]: 1441
//│ 	[LH_N]: 1779
//│ 	[LH_C _lh_copy_arg2⁰ copy_lh((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)]: 1790
//│ 	[LH_N]: 1889
//│ 	[LH_N]: 1918
//│ 	[LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]: 1919
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C x⁰ repeat_lh(x⁰)]: 98 --->
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 46
//│ [LH_C h² take_lz_lh((n⁰ - 1), t²)]: 119 --->
//│ 	case _lh_pp_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_pp_LH_C_0⁰ _lh_pp_LH_C_1⁰ => case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 1405
//│ [LH_N]: 120 --->
//│ 	case _lh_pp_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_pp_LH_C_0⁰ _lh_pp_LH_C_1⁰ => case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 1405
//│ [LH_N]: 122 --->
//│ 	case _lh_pp_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_pp_LH_C_0⁰ _lh_pp_LH_C_1⁰ => case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 1405
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1074 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 69
//│ [LH_N]: 1088 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 69
//│ [LH_N]: 1167 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [RD] [LH_N]]: 1168 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [RU] [LH_C [RD] [LH_N]]]: 1169 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]: 1170 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]: 1171 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]: 1172 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]: 1173 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [UR] [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]]: 1174 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_C [UL] [LH_C [UR] [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]]]: 1175 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156
//│ [LH_N]: 1964 --->
//│ 	case force⁰(ls²) of {LH_C h² t² => [LH_C h² take_lz_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 121
//│ [LH_C inquireFront_lh(_lh_depthSearch_arg1⁰) depthSearch_lh(removeFront_lh(_lh_depthSearch_arg1⁰), _lh_depthSearch_arg2⁰, _lh_depthSearch_arg3⁰)]: 1984 --->
//│ 	case force⁰(ls²) of {LH_C h² t² => [LH_C h² take_lz_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 121
//│ ------------------
//│ case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lz_nl_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 46 --->
//│ 	[LH_C x⁰ repeat_lh(x⁰)]: 98
//│ case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C f²(hx¹, hy¹) zipWith_lh(f², tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 69 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1074
//│ 	[LH_N]: 1088
//│ case force⁰(ls²) of {LH_C h² t² => [LH_C h² take_lz_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 121 --->
//│ 	[LH_N]: 1964
//│ 	[LH_C inquireFront_lh(_lh_depthSearch_arg1⁰) depthSearch_lh(removeFront_lh(_lh_depthSearch_arg1⁰), _lh_depthSearch_arg2⁰, _lh_depthSearch_arg3⁰)]: 1984
//│ case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => if canMove_lh(_lh_possibleMoves_arg1⁰, _lh_listcomp_fun_ls_h⁴) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴) | LH_N  => [LH_N]}: 1156 --->
//│ 	[LH_N]: 1167
//│ 	[LH_C [RD] [LH_N]]: 1168
//│ 	[LH_C [RU] [LH_C [RD] [LH_N]]]: 1169
//│ 	[LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]: 1170
//│ 	[LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]: 1171
//│ 	[LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]: 1172
//│ 	[LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]: 1173
//│ 	[LH_C [UR] [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]]: 1174
//│ 	[LH_C [UL] [LH_C [UR] [LH_C [DL] [LH_C [DR] [LH_C [LU] [LH_C [LD] [LH_C [RU] [LH_C [RD] [LH_N]]]]]]]]]: 1175
//│ case _lh_pp_arg1⁰ of {LH_N  => [LH_N] | LH_C _lh_pp_LH_C_0⁰ _lh_pp_LH_C_1⁰ => case _lh_pp_LH_C_0⁰ of {LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁰(_lh_pp_LH_C_1⁰)) | _  => error⁰} | _  => error⁰}: 1405 --->
//│ 	[LH_C h² take_lz_lh((n⁰ - 1), t²)]: 119
//│ 	[LH_N]: 120
//│ 	[LH_N]: 122
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testKnights_nofib_lh(primId⁰([LH_C [LH_C '8' [LH_N]] [LH_C [LH_C '1' [LH_N]] [LH_N]]]))
//│ def addAllFront_lh(_lh_addAllFront_arg1¹, _lh_addAllFront_arg2¹) = mappend_lh(_lh_addAllFront_arg1¹, _lh_addAllFront_arg2¹)
//│ def addPiece_lh(_lh_addPiece_arg1¹, _lh_addPiece_arg2¹) = case _lh_addPiece_arg2¹ of {
//│ 	Board _lh_addPiece_Board_0⁰ _lh_addPiece_Board_1⁰ _lh_addPiece_Board_2⁰ _lh_addPiece_Board_3⁰ => [Board _lh_addPiece_Board_0⁰ (_lh_addPiece_Board_1⁰ + 1) _lh_addPiece_Board_2⁰ [LH_C _lh_addPiece_arg1¹ _lh_addPiece_Board_3⁰]]
//│ 	| _  => error⁰}
//│ def allDescend_lh(_lh_allDescend_arg1¹) = map_lh(moveKnight_lh(_lh_allDescend_arg1¹), possibleMoves_lh(_lh_allDescend_arg1¹))
//│ def assignMoveNo_lh(_lh_assignMoveNo_arg1¹, _lh_assignMoveNo_arg2¹, _lh_assignMoveNo_arg3¹) = case _lh_assignMoveNo_arg1¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_assignMoveNo_LH_C_0⁰ _lh_assignMoveNo_LH_C_1⁰ => case _lh_assignMoveNo_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assignMoveNo_LH_P2_0⁰ _lh_assignMoveNo_LH_P2_1⁰ => [LH_C [LH_P2 (((_lh_assignMoveNo_LH_P2_1⁰ - 1) * _lh_assignMoveNo_arg2¹) + _lh_assignMoveNo_LH_P2_0⁰) _lh_assignMoveNo_arg3¹] assignMoveNo_lh(_lh_assignMoveNo_LH_C_1⁰, _lh_assignMoveNo_arg2¹, (_lh_assignMoveNo_arg3¹ - 1))]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def canJumpFirst_lh(_lh_canJumpFirst_arg1¹) = canMoveTo_lh(firstPiece_lh(_lh_canJumpFirst_arg1¹), deleteFirst_lh(_lh_canJumpFirst_arg1¹))
//│ def canMoveTo_lh(_lh_canMoveTo_arg1¹, _lh_canMoveTo_arg2¹) = case _lh_canMoveTo_arg1¹ of {
//│ 	LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰ => 
//│ 		let sze³ = sizeBoard_lh(_lh_canMoveTo_arg2¹)
//│ 		in (((((_lh_canMoveTo_LH_P2_0⁰ >= 1) && (_lh_canMoveTo_LH_P2_0⁰ <= sze³)) && (_lh_canMoveTo_LH_P2_1⁰ >= 1)) && (_lh_canMoveTo_LH_P2_1⁰ <= sze³)) && isSquareFree_lh([LH_P2 _lh_canMoveTo_LH_P2_0⁰ _lh_canMoveTo_LH_P2_1⁰], _lh_canMoveTo_arg2¹))
//│ 	| _  => error⁰}
//│ def canMove_lh(_lh_canMove_arg1¹, _lh_canMove_arg2¹) = canMoveTo_lh(move_lh(_lh_canMove_arg2¹, lastPiece_lh(_lh_canMove_arg1¹)), _lh_canMove_arg1¹)
//│ def copy_lh(_lh_copy_arg1¹, _lh_copy_arg2¹) = if (_lh_copy_arg1¹ <= 0) then [LH_N] else [LH_C _lh_copy_arg2¹ copy_lh((_lh_copy_arg1¹ - 1), _lh_copy_arg2¹)]
//│ def createBoard_lh(_lh_createBoard_arg1¹, _lh_createBoard_arg2¹) = [Board _lh_createBoard_arg1¹ 1 _lh_createBoard_arg2¹ [LH_C _lh_createBoard_arg2¹ [LH_N]]]
//│ def createQueue_lh = [LH_N]
//│ def deadEnd_lh(_lh_deadEnd_arg1¹) = (length_lh(possibleMoves_lh(_lh_deadEnd_arg1¹)) == 0)
//│ def deleteFirst_lh(_lh_deleteFirst_arg1¹) = case _lh_deleteFirst_arg1¹ of {
//│ 	Board _lh_deleteFirst_Board_0⁰ _lh_deleteFirst_Board_1⁰ _lh_deleteFirst_Board_2⁰ _lh_deleteFirst_Board_3⁰ => 
//│ 		let ts'¹ = myInit_lh(_lh_deleteFirst_Board_3⁰)
//│ 		in [Board _lh_deleteFirst_Board_0⁰ (_lh_deleteFirst_Board_1⁰ - 1) myLast_lh(ts'¹) ts'¹]
//│ 	| _  => error⁰}
//│ def depthSearch_lh(_lh_depthSearch_arg1¹, _lh_depthSearch_arg2¹, _lh_depthSearch_arg3¹) = if 
//│ 	let _lh_matchIdent³ = _lh_depthSearch_arg1¹
//│ 	in case _lh_matchIdent³ of {
//│ 		LH_N  => [True]
//│ 		| _  => [False]} then lazy⁰((fun n⁴ -> (fun pp³ -> [LH_N]))) else if _lh_depthSearch_arg3¹(inquireFront_lh(_lh_depthSearch_arg1¹)) then lazy⁰(
//│ 	let t⁵ = depthSearch_lh(removeFront_lh(_lh_depthSearch_arg1¹), _lh_depthSearch_arg2¹, _lh_depthSearch_arg3¹)
//│ 	in let h⁵ = inquireFront_lh(_lh_depthSearch_arg1¹)
//│ 	in (fun n⁵ -> 
//│ 		let _lh_pp_LH_C_1¹ = take_lz_lh((n⁵ - 1), t⁵)
//│ 		in let _lh_pp_LH_C_0¹ = h⁵
//│ 		in (fun pp⁴ -> case _lh_pp_LH_C_0¹ of {
//│ 			LH_P2 _lh_pp_LH_P2_0⁰ _lh_pp_LH_P2_1⁰ => mappend_lh(mappend_lh(mappend_lh(mappend_lh([LH_C '|' [LH_C 'K' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C 't' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'w' [LH_C 'i' [LH_C 't' [LH_C 'h' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]], string_of_int⁰(_lh_pp_LH_P2_0⁰)), [LH_C ' ' [LH_C 'b' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 't' [LH_C 'r' [LH_C 'a' [LH_C 'c' [LH_C 'k' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_C ' ' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 's' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]), showChessSet_lh(_lh_pp_LH_P2_1⁰)), pp⁴(_lh_pp_LH_C_1¹))
//│ 			| _  => error⁰}))) else depthSearch_lh(addAllFront_lh(_lh_depthSearch_arg2¹(inquireFront_lh(_lh_depthSearch_arg1¹)), removeFront_lh(_lh_depthSearch_arg1¹)), _lh_depthSearch_arg2¹, _lh_depthSearch_arg3¹)
//│ def descAndNo_lh(_lh_descAndNo_arg1¹) = 
//│ 	let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 length_lh(possibleMoves_lh(deleteFirst_lh(_lh_listcomp_fun_ls_h⁵))) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁵)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁹(allDescend_lh(_lh_descAndNo_arg1¹))
//│ def descendents_lh(_lh_descendents_arg1¹) = if (canJumpFirst_lh(_lh_descendents_arg1¹) && deadEnd_lh(addPiece_lh(firstPiece_lh(_lh_descendents_arg1¹), _lh_descendents_arg1¹))) then [LH_N] else 
//│ 	let singles¹ = singleDescend_lh(_lh_descendents_arg1¹)
//│ 	in let scrut¹ = length_lh(singles¹)
//│ 	in if (scrut¹ == 0) then map_lh(mySnd_lh, quickSortIntChessSet_lh(descAndNo_lh(_lh_descendents_arg1¹))) else if (scrut¹ == 1) then singles¹ else [LH_N]
//│ def enumFromTo_lh(a⁵, b⁵) = if (a⁵ <= b⁵) then [LH_C a⁵ enumFromTo_lh((a⁵ + 1), b⁵)] else [LH_N]
//│ def firstPiece_lh(_lh_firstPiece_arg1¹) = case _lh_firstPiece_arg1¹ of {
//│ 	Board _lh_firstPiece_Board_0⁰ _lh_firstPiece_Board_1⁰ _lh_firstPiece_Board_2⁰ _lh_firstPiece_Board_3⁰ => _lh_firstPiece_Board_2⁰
//│ 	| _  => error⁰}
//│ def foldr_lh(f⁶, i¹, ls⁶) = case ls⁶ of {
//│ 	LH_C h¹ t¹ => f⁶(h¹, foldr_lh(f⁶, i¹, t¹))
//│ 	| LH_N  => i¹}
//│ def grow_lh(_lh_grow_arg1¹) = case _lh_grow_arg1¹ of {
//│ 	LH_P2 _lh_grow_LH_P2_0⁰ _lh_grow_LH_P2_1⁰ => zip_lz_nl_lh(repeat_lh((_lh_grow_LH_P2_0⁰ + 1)), descendents_lh(_lh_grow_LH_P2_1⁰))
//│ 	| _  => error⁰}
//│ def inList_lh(_lh_inList_arg1¹, _lh_inList_arg2¹) = case _lh_inList_arg2¹ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if polyEq⁰(_lh_inList_arg1¹, _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1¹, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def inquireFront_lh(_lh_inquireFront_arg1¹) = case _lh_inquireFront_arg1¹ of {
//│ 	LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C 'q' [LH_C 'u' [LH_C 'i' [LH_C 'r' [LH_C 'e' [LH_C ' ' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	| LH_C _lh_inquireFront_LH_C_0⁰ _lh_inquireFront_LH_C_1⁰ => _lh_inquireFront_LH_C_0⁰
//│ 	| _  => error⁰}
//│ def intChessSetComp_lh(_lh_intChessSetComp_arg1¹, _lh_intChessSetComp_arg2¹) = case _lh_intChessSetComp_arg1¹ of {
//│ 	LH_P2 _lh_intChessSetComp_LH_P2_0⁰ _lh_intChessSetComp_LH_P2_1⁰ => case _lh_intChessSetComp_arg2¹ of {
//│ 		LH_P2 _lh_intChessSetComp_LH_P2_0¹ _lh_intChessSetComp_LH_P2_1¹ => (_lh_intChessSetComp_LH_P2_0⁰ < _lh_intChessSetComp_LH_P2_0¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def intintComp_lh(_lh_intintComp_arg1¹, _lh_intintComp_arg2¹) = case _lh_intintComp_arg1¹ of {
//│ 	LH_P2 _lh_intintComp_LH_P2_0⁰ _lh_intintComp_LH_P2_1⁰ => case _lh_intintComp_arg2¹ of {
//│ 		LH_P2 _lh_intintComp_LH_P2_0¹ _lh_intintComp_LH_P2_1¹ => ((_lh_intintComp_LH_P2_0⁰ < _lh_intintComp_LH_P2_0¹) || ((_lh_intintComp_LH_P2_0⁰ == _lh_intintComp_LH_P2_0¹) && (_lh_intintComp_LH_P2_1⁰ < _lh_intintComp_LH_P2_1¹)))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def isFinished_lh(_lh_isFinished_arg1¹) = case _lh_isFinished_arg1¹ of {
//│ 	LH_P2 _lh_isFinished_LH_P2_0⁰ _lh_isFinished_LH_P2_1⁰ => tourFinished_lh(_lh_isFinished_LH_P2_1⁰)
//│ 	| _  => error⁰}
//│ def isSquareFree_lh(_lh_isSquareFree_arg1¹, _lh_isSquareFree_arg2¹) = case _lh_isSquareFree_arg2¹ of {
//│ 	Board _lh_isSquareFree_Board_0⁰ _lh_isSquareFree_Board_1⁰ _lh_isSquareFree_Board_2⁰ _lh_isSquareFree_Board_3⁰ => not⁰(inList_lh(_lh_isSquareFree_arg1¹, _lh_isSquareFree_Board_3⁰))
//│ 	| _  => error⁰}
//│ def lastPiece_lh(_lh_lastPiece_arg1¹) = case _lh_lastPiece_arg1¹ of {
//│ 	Board _lh_lastPiece_Board_0⁰ _lh_lastPiece_Board_1⁰ _lh_lastPiece_Board_2⁰ _lh_lastPiece_Board_3⁰ => case _lh_lastPiece_Board_3⁰ of {
//│ 		LH_C _lh_lastPiece_LH_C_0⁰ _lh_lastPiece_LH_C_1⁰ => _lh_lastPiece_LH_C_0⁰
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def length_lh(ls⁵) = case ls⁵ of {
//│ 	LH_C h³ t³ => (1 + length_lh(t³))
//│ 	| LH_N  => 0}
//│ def map_lh(f⁷, ls⁷) = case ls⁷ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁷(h⁰) map_lh(f⁷, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh(xs⁵, ys⁷) = case xs⁵ of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh(t⁴, ys⁷)]
//│ 	| LH_N  => ys⁷}
//│ def moveKnight_lh(_lh_moveKnight_arg1¹, _lh_moveKnight_arg2¹) = addPiece_lh(move_lh(_lh_moveKnight_arg2¹, lastPiece_lh(_lh_moveKnight_arg1¹)), _lh_moveKnight_arg1¹)
//│ def move_lh(_lh_move_arg1¹, _lh_move_arg2¹) = case _lh_move_arg1¹ of {
//│ 	UL  => case _lh_move_arg2¹ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁰ _lh_move_LH_P2_1⁰ => [LH_P2 (_lh_move_LH_P2_0⁰ - 1) (_lh_move_LH_P2_1⁰ - 2)]
//│ 		| _  => error⁰}
//│ 	| UR  => case _lh_move_arg2¹ of {
//│ 		LH_P2 _lh_move_LH_P2_0¹ _lh_move_LH_P2_1¹ => [LH_P2 (_lh_move_LH_P2_0¹ + 1) (_lh_move_LH_P2_1¹ - 2)]
//│ 		| _  => error⁰}
//│ 	| DL  => case _lh_move_arg2¹ of {
//│ 		LH_P2 _lh_move_LH_P2_0² _lh_move_LH_P2_1² => [LH_P2 (_lh_move_LH_P2_0² - 1) (_lh_move_LH_P2_1² + 2)]
//│ 		| _  => error⁰}
//│ 	| DR  => case _lh_move_arg2¹ of {
//│ 		LH_P2 _lh_move_LH_P2_0³ _lh_move_LH_P2_1³ => [LH_P2 (_lh_move_LH_P2_0³ + 1) (_lh_move_LH_P2_1³ + 2)]
//│ 		| _  => error⁰}
//│ 	| LU  => case _lh_move_arg2¹ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁴ _lh_move_LH_P2_1⁴ => [LH_P2 (_lh_move_LH_P2_0⁴ - 2) (_lh_move_LH_P2_1⁴ - 1)]
//│ 		| _  => error⁰}
//│ 	| LD  => case _lh_move_arg2¹ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁵ _lh_move_LH_P2_1⁵ => [LH_P2 (_lh_move_LH_P2_0⁵ - 2) (_lh_move_LH_P2_1⁵ + 1)]
//│ 		| _  => error⁰}
//│ 	| RU  => case _lh_move_arg2¹ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁶ _lh_move_LH_P2_1⁶ => [LH_P2 (_lh_move_LH_P2_0⁶ + 2) (_lh_move_LH_P2_1⁶ - 1)]
//│ 		| _  => error⁰}
//│ 	| RD  => case _lh_move_arg2¹ of {
//│ 		LH_P2 _lh_move_LH_P2_0⁷ _lh_move_LH_P2_1⁷ => [LH_P2 (_lh_move_LH_P2_0⁷ + 2) (_lh_move_LH_P2_1⁷ + 1)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def myInit_lh(_lh_myInit_arg1¹) = case _lh_myInit_arg1¹ of {
//│ 	LH_C _lh_myInit_LH_C_0⁰ _lh_myInit_LH_C_1⁰ => case _lh_myInit_LH_C_1⁰ of {
//│ 		LH_N  => [LH_N]
//│ 		| _  => [LH_C _lh_myInit_LH_C_0⁰ myInit_lh(_lh_myInit_LH_C_1⁰)]}
//│ 	| _  => error⁰}
//│ def myIsDigit_lh(_lh_myIsDigit_arg1¹) = 
//│ 	let n² = int_of_char⁰(_lh_myIsDigit_arg1¹)
//│ 	in ((n² >= 48) && (n² <= 57))
//│ def myLast_lh(_lh_myLast_arg1¹) = case _lh_myLast_arg1¹ of {
//│ 	LH_N  => [LH_P2 (0 - 100) (0 - 100)]
//│ 	| LH_C _lh_myLast_LH_C_0⁰ _lh_myLast_LH_C_1⁰ => 
//│ 		let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {
//│ 			LH_N  => _lh_go_arg1¹
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go¹(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go¹(_lh_myLast_LH_C_0⁰, _lh_myLast_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def mySnd_lh(_lh_mySnd_arg1¹) = case _lh_mySnd_arg1¹ of {
//│ 	LH_P2 _lh_mySnd_LH_P2_0⁰ _lh_mySnd_LH_P2_1⁰ => _lh_mySnd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def noPieces_lh(_lh_noPieces_arg1¹) = case _lh_noPieces_arg1¹ of {
//│ 	Board _lh_noPieces_Board_0⁰ _lh_noPieces_Board_1⁰ _lh_noPieces_Board_2⁰ _lh_noPieces_Board_3⁰ => _lh_noPieces_Board_1⁰
//│ 	| _  => error⁰}
//│ def possibleMoves_lh(_lh_possibleMoves_arg1¹) = 
//│ 	let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹² -> _lh_listcomp_fun_para¹²(_lh_listcomp_fun¹², _lh_possibleMoves_arg1¹))
//│ 	in _lh_listcomp_fun¹²(
//│ 		let _lh_listcomp_fun_ls_t⁹ = 	
//│ 			let _lh_listcomp_fun_ls_t¹⁰ = 	
//│ 				let _lh_listcomp_fun_ls_t¹¹ = 	
//│ 					let _lh_listcomp_fun_ls_t¹² = 	
//│ 						let _lh_listcomp_fun_ls_t¹³ = 	
//│ 							let _lh_listcomp_fun_ls_t¹⁴ = 	
//│ 								let _lh_listcomp_fun_ls_t¹⁵ = 	
//│ 									let _lh_listcomp_fun_ls_t¹⁶ = (fun _lh_listcomp_fun²¹ -> (fun _lh_possibleMoves_arg1¹⁰ -> [LH_N]))
//│ 									in let _lh_listcomp_fun_ls_h¹⁶ = [RD]
//│ 									in (fun _lh_listcomp_fun²⁰ -> (fun _lh_possibleMoves_arg1⁹ -> if canMove_lh(_lh_possibleMoves_arg1⁹, _lh_listcomp_fun_ls_h¹⁶) then [LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)] else _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)))
//│ 								in let _lh_listcomp_fun_ls_h¹⁵ = [RU]
//│ 								in (fun _lh_listcomp_fun¹⁹ -> (fun _lh_possibleMoves_arg1⁸ -> if canMove_lh(_lh_possibleMoves_arg1⁸, _lh_listcomp_fun_ls_h¹⁵) then [LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] else _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)))
//│ 							in let _lh_listcomp_fun_ls_h¹⁴ = [LD]
//│ 							in (fun _lh_listcomp_fun¹⁸ -> (fun _lh_possibleMoves_arg1⁷ -> if canMove_lh(_lh_possibleMoves_arg1⁷, _lh_listcomp_fun_ls_h¹⁴) then [LH_C _lh_listcomp_fun_ls_h¹⁴ _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)] else _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)))
//│ 						in let _lh_listcomp_fun_ls_h¹³ = [LU]
//│ 						in (fun _lh_listcomp_fun¹⁷ -> (fun _lh_possibleMoves_arg1⁶ -> if canMove_lh(_lh_possibleMoves_arg1⁶, _lh_listcomp_fun_ls_h¹³) then [LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] else _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)))
//│ 					in let _lh_listcomp_fun_ls_h¹² = [DR]
//│ 					in (fun _lh_listcomp_fun¹⁶ -> (fun _lh_possibleMoves_arg1⁵ -> if canMove_lh(_lh_possibleMoves_arg1⁵, _lh_listcomp_fun_ls_h¹²) then [LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)] else _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)))
//│ 				in let _lh_listcomp_fun_ls_h¹¹ = [DL]
//│ 				in (fun _lh_listcomp_fun¹⁵ -> (fun _lh_possibleMoves_arg1⁴ -> if canMove_lh(_lh_possibleMoves_arg1⁴, _lh_listcomp_fun_ls_h¹¹) then [LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] else _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)))
//│ 			in let _lh_listcomp_fun_ls_h¹⁰ = [UR]
//│ 			in (fun _lh_listcomp_fun¹⁴ -> (fun _lh_possibleMoves_arg1³ -> if canMove_lh(_lh_possibleMoves_arg1³, _lh_listcomp_fun_ls_h¹⁰) then [LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)] else _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t¹⁰)))
//│ 		in let _lh_listcomp_fun_ls_h⁹ = [UL]
//│ 		in (fun _lh_listcomp_fun¹³ -> (fun _lh_possibleMoves_arg1² -> if canMove_lh(_lh_possibleMoves_arg1², _lh_listcomp_fun_ls_h⁹) then [LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t⁹)] else _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t⁹))))
//│ def printBoard_lh(_lh_printBoard_arg1¹, _lh_printBoard_arg2¹, _lh_printBoard_arg3¹) = case _lh_printBoard_arg3¹ of {
//│ 	LH_N  => if (_lh_printBoard_arg2¹ > (_lh_printBoard_arg1¹ * _lh_printBoard_arg1¹)) then [LH_N] else if ((_lh_printBoard_arg2¹ % _lh_printBoard_arg1¹) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1¹ * _lh_printBoard_arg1¹), 1)), printBoard_lh(_lh_printBoard_arg1¹, (_lh_printBoard_arg2¹ + 1), [LH_N])) else if ((_lh_printBoard_arg2¹ % _lh_printBoard_arg1¹) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1¹, (_lh_printBoard_arg2¹ + 1), [LH_N])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	| LH_C _lh_printBoard_LH_C_0⁰ _lh_printBoard_LH_C_1⁰ => case _lh_printBoard_LH_C_0⁰ of {
//│ 		LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰ => if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2¹) && ((_lh_printBoard_arg2¹ % _lh_printBoard_arg1¹) == 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), [LH_C '|' [LH_N]]), printBoard_lh(_lh_printBoard_arg1¹, (_lh_printBoard_arg2¹ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_LH_P2_0⁰ == _lh_printBoard_arg2¹) && ((_lh_printBoard_arg2¹ % _lh_printBoard_arg1¹) /= 0)) then mappend_lh(mappend_lh(string_of_int⁰(_lh_printBoard_LH_P2_1⁰), spaces_lh((_lh_printBoard_arg1¹ * _lh_printBoard_arg1¹), _lh_printBoard_LH_P2_1⁰)), printBoard_lh(_lh_printBoard_arg1¹, (_lh_printBoard_arg2¹ + 1), _lh_printBoard_LH_C_1⁰)) else if ((_lh_printBoard_arg2¹ % _lh_printBoard_arg1¹) /= 0) then mappend_lh(mappend_lh([LH_C '*' [LH_N]], spaces_lh((_lh_printBoard_arg1¹ * _lh_printBoard_arg1¹), 1)), printBoard_lh(_lh_printBoard_arg1¹, (_lh_printBoard_arg2¹ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else if ((_lh_printBoard_arg2¹ % _lh_printBoard_arg1¹) == 0) then mappend_lh([LH_C '*' [LH_C '|' [LH_N]]], printBoard_lh(_lh_printBoard_arg1¹, (_lh_printBoard_arg2¹ + 1), [LH_C [LH_P2 _lh_printBoard_LH_P2_0⁰ _lh_printBoard_LH_P2_1⁰] _lh_printBoard_LH_C_1⁰])) else error⁰([LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'B' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 'n' [LH_C 'o' [LH_C 'n' [LH_C '-' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'l' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def printTour_lh(_lh_printTour_arg1¹) = 
//│ 	let strToInt¹ = (fun _lh_strToInt_arg1¹ -> (fun _lh_strToInt_arg2¹ -> case _lh_strToInt_arg2¹ of {
//│ 			LH_N  => _lh_strToInt_arg1¹
//│ 			| LH_C _lh_strToInt_LH_C_0⁰ _lh_strToInt_LH_C_1⁰ => strToInt¹(((10 * _lh_strToInt_arg1¹) + (int_of_char⁰(_lh_strToInt_LH_C_0⁰) - int_of_char⁰('0'))), _lh_strToInt_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 	and pp² = (fun _lh_pp_arg1¹ -> _lh_pp_arg1¹(pp²)) 
//│ 	in let _lh_matchIdent² = map_lh(strToInt¹(0), _lh_printTour_arg1¹)
//│ 	in case _lh_matchIdent² of {
//│ 		LH_C _lh_printTour_LH_C_0⁰ _lh_printTour_LH_C_1⁰ => case _lh_printTour_LH_C_1⁰ of {
//│ 			LH_C _lh_printTour_LH_C_0¹ _lh_printTour_LH_C_1¹ => case _lh_printTour_LH_C_1¹ of {
//│ 				LH_N  => pp²(take_lz_lh(_lh_printTour_LH_C_0¹, depthSearch_lh(root_lh(_lh_printTour_LH_C_0⁰), grow_lh, isFinished_lh)))
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ def quickSortIntChessSet_lh(_lh_quickSortIntChessSet_arg1¹) = case _lh_quickSortIntChessSet_arg1¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_quickSortIntChessSet_LH_C_0⁰ _lh_quickSortIntChessSet_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntChessSet_lh(
//│ 		let _lh_listcomp_fun²⁴ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => if intChessSetComp_lh(_lh_listcomp_fun_ls_h⁷, _lh_quickSortIntChessSet_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun²⁴(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun²⁴(_lh_listcomp_fun_ls_t⁷)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun²⁴(_lh_quickSortIntChessSet_LH_C_1⁰)), [LH_C _lh_quickSortIntChessSet_LH_C_0⁰ [LH_N]]), quickSortIntChessSet_lh(
//│ 		let _lh_listcomp_fun²⁵ = (fun _lh_listcomp_fun_para¹⁶ -> case _lh_listcomp_fun_para¹⁶ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => if not⁰(intChessSetComp_lh(_lh_listcomp_fun_ls_h⁸, _lh_quickSortIntChessSet_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t⁸)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun²⁵(_lh_quickSortIntChessSet_LH_C_1⁰)))
//│ 	| _  => error⁰}
//│ def quickSortIntInt_lh(_lh_quickSortIntInt_arg1¹) = case _lh_quickSortIntInt_arg1¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_quickSortIntInt_LH_C_0⁰ _lh_quickSortIntInt_LH_C_1⁰ => mappend_lh(mappend_lh(quickSortIntInt_lh(
//│ 		let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if intintComp_lh(_lh_listcomp_fun_ls_h⁰, _lh_quickSortIntInt_LH_C_0⁰) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁰)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun¹⁰(_lh_quickSortIntInt_LH_C_1⁰)), [LH_C _lh_quickSortIntInt_LH_C_0⁰ [LH_N]]), quickSortIntInt_lh(
//│ 		let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 			LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => if not⁰(intintComp_lh(_lh_listcomp_fun_ls_h¹, _lh_quickSortIntInt_LH_C_0⁰)) then [LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹)
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun¹¹(_lh_quickSortIntInt_LH_C_1⁰)))
//│ 	| _  => error⁰}
//│ def removeFront_lh(_lh_removeFront_arg1¹) = case _lh_removeFront_arg1¹ of {
//│ 	LH_N  => error⁰([LH_C 'C' [LH_C 'a' [LH_C 'n' [LH_C 'n' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'r' [LH_C 'e' [LH_C 'm' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C ' ' [LH_C 'f' [LH_C 'r' [LH_C 'o' [LH_C 'm' [LH_C ' ' [LH_C 'a' [LH_C 'n' [LH_C ' ' [LH_C 'e' [LH_C 'm' [LH_C 'p' [LH_C 't' [LH_C 'y' [LH_C ' ' [LH_C 'Q' [LH_C 'u' [LH_C 'e' [LH_C 'u' [LH_C 'e' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ 	| LH_C _lh_removeFront_LH_C_0⁰ _lh_removeFront_LH_C_1⁰ => _lh_removeFront_LH_C_1⁰
//│ 	| _  => error⁰}
//│ def repeat_lh(x¹) = lazy⁰(
//│ 	let tx² = repeat_lh(x¹)
//│ 	in let hx² = x¹
//│ 	in (fun hy² -> (fun ty² -> [LH_C [LH_P2 hx² hy²] zip_lz_nl_lh(tx², ty²)])))
//│ def root_lh(_lh_root_arg1¹) = addAllFront_lh(zip_lz_nl_lh(repeat_lh((1 - (_lh_root_arg1¹ * _lh_root_arg1¹))), zipWith_lh(startTour_lh, 
//│ 	let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 			let _lh_listcomp_fun²³ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {
//│ 				LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => 
//│ 					let tx³ = _lh_listcomp_fun²³(_lh_listcomp_fun_ls_t³)
//│ 					in let hx³ = [LH_P2 _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_h³]
//│ 					in (fun f⁴ -> (fun ys⁵ -> case ys⁵ of {
//│ 						LH_C hy¹ ty¹ => [LH_C f⁴(hx³, hy¹) zipWith_lh(f⁴, tx³, ty¹)]
//│ 						| LH_N  => [LH_N]}))
//│ 				| LH_N  => _lh_listcomp_fun²²(_lh_listcomp_fun_ls_t²)})
//│ 			in _lh_listcomp_fun²³(enumFromTo_lh(1, _lh_root_arg1¹))
//│ 		| LH_N  => (fun f⁵ -> (fun ys⁶ -> [LH_N]))})
//│ 	in _lh_listcomp_fun²²(enumFromTo_lh(1, _lh_root_arg1¹)), copy_lh((_lh_root_arg1¹ * _lh_root_arg1¹), _lh_root_arg1¹))), createQueue_lh)
//│ def showChessSet_lh(_lh_showChessSet_arg1¹) = case _lh_showChessSet_arg1¹ of {
//│ 	Board _lh_showChessSet_Board_0⁰ _lh_showChessSet_Board_1⁰ _lh_showChessSet_Board_2⁰ _lh_showChessSet_Board_3⁰ => 
//│ 		let sortedTrail¹ = quickSortIntInt_lh(assignMoveNo_lh(_lh_showChessSet_Board_3⁰, _lh_showChessSet_Board_0⁰, _lh_showChessSet_Board_1⁰))
//│ 		in printBoard_lh(_lh_showChessSet_Board_0⁰, 1, sortedTrail¹)
//│ 	| _  => error⁰}
//│ def singleDescend_lh(_lh_singleDescend_arg1¹) = 
//│ 	let _lh_listcomp_fun²⁶ = (fun _lh_listcomp_fun_para¹⁷ -> case _lh_listcomp_fun_para¹⁷ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => case _lh_listcomp_fun_ls_h⁶ of {
//│ 			LH_P2 _lh_singleDescend_LH_P2_0⁰ _lh_singleDescend_LH_P2_1⁰ => if (_lh_singleDescend_LH_P2_0⁰ == 1) then [LH_C _lh_singleDescend_LH_P2_1⁰ _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t⁶)
//│ 			| _  => _lh_listcomp_fun²⁶(_lh_listcomp_fun_ls_t⁶)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²⁶(descAndNo_lh(_lh_singleDescend_arg1¹))
//│ def sizeBoard_lh(_lh_sizeBoard_arg1¹) = case _lh_sizeBoard_arg1¹ of {
//│ 	Board _lh_sizeBoard_Board_0⁰ _lh_sizeBoard_Board_1⁰ _lh_sizeBoard_Board_2⁰ _lh_sizeBoard_Board_3⁰ => _lh_sizeBoard_Board_0⁰
//│ 	| _  => error⁰}
//│ def spaces_lh(_lh_spaces_arg1¹, _lh_spaces_arg2¹) = 
//│ 	let logTen¹ = (fun _lh_logTen_arg1¹ -> case _lh_logTen_arg1¹ of {
//│ 		0  => 0
//│ 		| _  => (1 + logTen¹(div⁰(_lh_logTen_arg1¹, 10)))})
//│ 	in copy_lh(((logTen¹(_lh_spaces_arg1¹) - logTen¹(_lh_spaces_arg2¹)) + 1), ' ')
//│ def startTour_lh(_lh_startTour_arg1¹, _lh_startTour_arg2¹) = if ((_lh_startTour_arg2¹ % 2) == 0) then createBoard_lh(_lh_startTour_arg2¹, _lh_startTour_arg1¹) else error⁰([LH_C 'T' [LH_C 'o' [LH_C 'u' [LH_C 'r' [LH_C ' ' [LH_C 'd' [LH_C 'o' [LH_C 'e' [LH_C 's' [LH_C 'n' [LH_C 't' [LH_C ' ' [LH_C 'e' [LH_C 'x' [LH_C 'i' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'f' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'o' [LH_C 'd' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'i' [LH_C 'z' [LH_C 'e' [LH_C ' ' [LH_C 'b' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
//│ def take_lz_lh(n³, ls⁴) = if (n³ > 0) then force⁰(ls⁴, n³) else (fun pp¹ -> [LH_N])
//│ def testKnights_nofib_lh(_lh_testKnights_nofib_arg1¹) = 
//│ 	let all_digits¹ = (fun _lh_all_digits_arg1¹ -> foldr_lh((fun _lh_funcomp_x² -> (fun a³ -> (fun b³ -> (a³ && b³)))(myIsDigit_lh(_lh_funcomp_x²))), [True], _lh_all_digits_arg1¹))
//│ 	and argsOk¹ = (fun _lh_argsOk_arg1¹ -> ((length_lh(_lh_argsOk_arg1¹) == 2) && foldr_lh((fun _lh_funcomp_x³ -> (fun a⁴ -> (fun b⁴ -> (a⁴ && b⁴)))(all_digits¹(_lh_funcomp_x³))), [True], _lh_argsOk_arg1¹)))
//│ 	and usageString¹ = [LH_C '|' [LH_C 'U' [LH_C 's' [LH_C 'a' [LH_C 'g' [LH_C 'e' [LH_C ':' [LH_C ' ' [LH_C 'k' [LH_C 'n' [LH_C 'i' [LH_C 'g' [LH_C 'h' [LH_C 't' [LH_C 's' [LH_C ' ' [LH_C '<' [LH_C 'b' [LH_C 'o' [LH_C 'a' [LH_C 'r' [LH_C 'd' [LH_C ' ' [LH_C 's' [LH_C 'i' [LH_C 'z' [LH_C 'e' [LH_C '>' [LH_C ' ' [LH_C '<' [LH_C 'n' [LH_C 'o' [LH_C ' ' [LH_C 's' [LH_C 'o' [LH_C 'l' [LH_C 'u' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C 's' [LH_C '>' [LH_C '|' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]] 
//│ 	in if argsOk¹(_lh_testKnights_nofib_arg1¹) then length_lh(printTour_lh(_lh_testKnights_nofib_arg1¹)) else error⁰(usageString¹)
//│ def tourFinished_lh(_lh_tourFinished_arg1¹) = 
//│ 	let sze² = sizeBoard_lh(_lh_tourFinished_arg1¹)
//│ 	in ((noPieces_lh(_lh_tourFinished_arg1¹) == (sze² * sze²)) && canJumpFirst_lh(_lh_tourFinished_arg1¹))
//│ def zipWith_lh(f³, xs³, ys³) = xs³(f³, ys³)
//│ def zip_lz_nl_lh(xs⁴, ys⁴) = case ys⁴ of {
//│ 	LH_C hy⁰ ty⁰ => force⁰(xs⁴, hy⁰, ty⁰)
//│ 	| LH_N  => [LH_N]}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
