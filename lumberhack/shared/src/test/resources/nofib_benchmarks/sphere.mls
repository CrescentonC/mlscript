

:lhInHaskell
:lhGenOCaml
pi = 3.141592653589793
null [] = True
null (h:t) = False
fst (a,b) = a
snd (a,b) = b
epsilon, infinity :: Double
epsilon  = 0.000001
infinity = 100000000.0
type Vector = (Double, Double, Double)
vecadd, vecsub, vecmult :: Vector -> Vector -> Vector
vecadd  (x1,y1,z1) (x2,y2,z2) = (x1+.x2, y1+.y2, z1+.z2)
vecsub  (x1,y1,z1) (x2,y2,z2) = (x1-.x2, y1-.y2, z1-.z2)
vecmult (x1,y1,z1) (x2,y2,z2) = (x1*.x2, y1*.y2, z1*.z2)
vecsum :: [Vector] -> Vector
vecsum param = foldr vecadd (0.0,0.0,0.0) param
vecnorm :: Vector -> (Vector, Double)
vecnorm (x,y,z) =
  let len = sqrt ((x *. x) +. (y *. y) +. (z *. z)) in
  ((x /. len, y /. len, z /. len), len)
vecscale :: Vector -> Double -> Vector
vecscale (x,y,z) a = (a *. x, a *. y, a *. z)
vecdot :: Vector -> Vector -> Double
vecdot (x1,y1,z1) (x2,y2,z2) = (x1 *. x2) +. (y1 *. y2) +. (z1 *. z2)
veccross :: Vector -> Vector -> Vector
veccross (x1,y1,z1) (x2,y2,z2) = ((y1 *. z2) -. (y2 *. z1), (z1*.x2) -. (z2 *. x1), (x1 *. y2) -. (x2 *. y1))
is_zerovector :: Vector -> Bool
is_zerovector (x,y,z) = (polyLt x epsilon) && (polyLt y epsilon) && (polyLt z epsilon)
data Light = Directional Vector Vector | Point Vector Vector
lightpos :: Light -> Vector
lightpos (Point pos col) = pos
lightdir :: Light -> Vector
lightdir (Directional dir col) = fst (vecnorm dir)
lightcolour :: Light -> Vector
lightcolour (Directional dir col) = col
lightcolour (Point pos col)       = col
data Surfspec = Ambient Vector        -- all but specpow default to zero
              | Diffuse Vector
              | Specular Vector
              | Specpow Double        -- default 8
              | Reflect Double
              | Transmit Double
              | Refract Double        -- default 1, like air == no refraction
              | Body Vector           -- body colour, default (1, 1, 1)
ambientsurf :: [Surfspec] -> Vector
ambientsurf ss = head ([ s | Ambient s <- ss] ++ [(0.0,0.0,0.0)])
diffusesurf :: [Surfspec] -> Vector
diffusesurf ss = head ([ s | Diffuse s <- ss] ++ [(0.0,0.0,0.0)])
specularsurf :: [Surfspec] -> Vector
specularsurf ss = head ([ s | Specular s <- ss] ++ [(0.0,0.0,0.0)])
specpowsurf :: [Surfspec] -> Double
specpowsurf ss = head ([ s | Specpow s <- ss] ++ [8.0])
reflectsurf :: [Surfspec] -> Double
reflectsurf ss = head ([ s | Reflect s <- ss] ++ [0.0])
transmitsurf :: [Surfspec] -> Double
transmitsurf ss = head ([ s | Transmit s <- ss] ++ [0.0])
refractsurf :: [Surfspec] -> Double
refractsurf ss = head ([ s | Refract s <- ss] ++ [1.0])
bodysurf :: [Surfspec] -> Vector
bodysurf ss = head ([ s | Body s <- ss] ++ [(1.0,1.0,1.0)])
data Sphere = Sphere Vector Double [Surfspec] -- pos, radius, surface type
spheresurf :: Sphere -> [Surfspec]
spheresurf (Sphere pos rad surf) = surf
lookat = (0.0,0.0,0.0)
vup = (0.0,0.0,1.0)
fov :: Double
fov = 45.0
-- testspheres :: [Sphere]
-- testspheres = testspheres
s2 :: [Surfspec]
s2 = [Ambient (0.035, 0.0325, 0.025), Diffuse (0.5, 0.45, 0.35), Specular (0.8, 0.8, 0.8), Specpow 3.0, Reflect 0.5]
testspheres :: [Sphere]
testspheres = [(Sphere (0.0,0.0,0.0) 0.5 (s2)),
               (Sphere (0.272166,0.272166,0.544331) 0.166667 (s2)),
               (Sphere (0.643951,0.172546,0.0) 0.166667 (s2)),
               (Sphere (0.172546,0.643951,0.0) 0.166667 (s2)),
               (Sphere (0.0 -. 0.371785,0.0996195,0.544331) 0.166667 (s2)),
               (Sphere (0.0 -. 0.471405,0.471405,0.0) 0.166667 (s2)),
               (Sphere (0.0 -. 0.643951,0.0 -. 0.172546,0.0) 0.166667 (s2)),
               (Sphere (0.0996195,0.0 -. 0.371785,0.544331) 0.166667 (s2)),
               (Sphere (0.0 -. 0.172546,0.0 -. 0.643951,0.0) 0.166667 (s2)),
               (Sphere (0.471405,0.0 -. 0.471405,0.0) 0.166667 (s2))]
testlights :: [Light]
testlights = [Point (4.0, 3.0, 2.0) (0.288675,0.288675,0.288675),
              Point (1.0, 0.0 -. 4.0, 4.0) (0.288675,0.288675,0.288675),
              Point (0.0 -. 3.0,1.0,5.0) (0.288675,0.288675,0.288675)]
lookfrom, background :: Vector
lookfrom   = (2.1, 1.3, 1.7)
background = (0.078, 0.361, 0.753)
ray :: Int -> [((Int, Int),Vector)]
ray winsize =
  let lights = (testlights) in
  case (camparams lookfrom (lookat) (vup) fov (float_of_int winsize)) of {
    (firstray, scrnx, scrny) ->
      let f = \i -> \j -> tracepixel (testspheres) lights (float_of_int i) (float_of_int j) firstray scrnx scrny in
      [ ((i,j), f i j) | i<-[0..(winsize-1)], j<-[0..(winsize-1)]]
  }
dtor :: Double -> Double
dtor x = (x *. pi) /. (180.0)
camparams :: Vector -> Vector -> Vector -> Double -> Double
           -> (Vector, Vector, Vector)
camparams lookfrom lookat vup fov winsize =
  let initfirstray = vecsub lookat lookfrom in
  case (vecnorm initfirstray) of {
    (lookdir, dist) -> case (vecnorm (veccross lookdir vup)) of {
      (scrni, _) -> case (vecnorm (veccross scrni lookdir)) of {
        (scrnj, _) ->
          let xfov = fov in
          let yfov = fov in
          let xwinsize = winsize in
          let ywinsize = winsize in
          let magx = 2.0 *. dist *. (tan (dtor (xfov /. 2.0))) /. xwinsize in
          let magy = 2.0 *. dist *. (tan (dtor (yfov /. 2.0))) /. ywinsize in
          let scrnx = vecscale scrni magx in
          let scrny = vecscale scrnj magy in
          let firstray = vecsub initfirstray (vecadd (vecscale scrnx (0.5 *. xwinsize)) (vecscale scrny (0.5 *. ywinsize))) in
          (firstray, scrnx, scrny)
      }
    }
  }  
tracepixel ::  [Sphere] -> [Light] -> Double -> Double -> Vector -> Vector -> Vector -> Vector
tracepixel spheres lights x y firstray scrnx scrny =
  let pos = lookfrom in
  case (vecnorm (vecadd (vecadd firstray (vecscale scrnx x)) (vecscale scrny y))) of {
    (dir, _) -> case (trace spheres pos dir) of {
      (hit, dist, sp) ->
        if hit then
          shade lights sp pos dir dist (1.0,1.0,1.0)
        else
          background
    }
  }
trace :: [Sphere] -> Vector -> Vector -> (Bool,Double,Sphere)
trace spheres pos dir =
  let f = \d1s1 -> \d2s2 -> case d1s1 of {
    (d1,s1) -> case d2s2 of {
      (d2,s2) -> if polyLt d1 d2 then (d1,s1) else (d2,s2)
    }
  } in
  let sphmap = \xss -> case xss of {
    [] -> [];
    (x:xs) ->
      case (sphereintersect pos dir x) of {
        (is_hit, where_hit) -> if is_hit then (where_hit, x):(sphmap xs) else sphmap xs
      }
  } in
  let dists = sphmap spheres in
  if (null dists)
  then (False, infinity, head spheres)
  else case (foldr f (head dists) (tail dists)) of { (mindist, sp) -> (True, mindist, sp) }
shade :: [Light] -> Sphere -> Vector -> Vector -> Double -> Vector -> Vector
shade lights sp lookpos dir dist contrib =
  let hitpos = vecadd lookpos (vecscale dir dist) in
  let ambientlight = (1.0, 1.0, 1.0) in
  let surf = spheresurf sp in
  let amb = vecmult ambientlight (ambientsurf surf) in
  let norm = spherenormal hitpos sp in
  let refl = vecadd dir (vecscale norm ((0.0 -. 2.0) *. (vecdot dir norm))) in
  let diff = vecsum (map (\l->lightray l hitpos norm refl surf) lights) in
  let transmitted = transmitsurf surf in
  let simple = vecadd amb diff in
  let trintensity = vecscale (bodysurf surf) transmitted in
  case (if polyLt transmitted epsilon then (False, simple) else transmitray lights simple hitpos dir (refractsurf surf) trintensity contrib norm) of {
    (is_tir, trcol) ->
      let reflsurf = vecscale (specularsurf surf) (reflectsurf surf) in
      let reflectiv = if (is_tir) then (vecadd trintensity reflsurf) else reflsurf in
      let rcol = if is_zerovector reflectiv then trcol else reflectray hitpos refl lights reflectiv contrib trcol in
      rcol
  }
transmitray :: [Light] -> Vector -> Vector -> Vector -> Double -> Vector -> Vector -> Vector -> (Bool, Vector)
transmitray lights colour pos dir index intens contrib norm =
  let newcontrib = vecmult intens contrib in
  case (refractray index dir norm) of {
    (is_tir, newdir) ->
      let nearpos = vecadd pos (vecscale newdir epsilon) in
      case (trace (testspheres) nearpos newdir) of {
        (is_hit, dist, sp) ->
          let newcol = if is_hit then shade lights sp nearpos newdir dist newcontrib else background in
          if is_zerovector newcontrib
          then (False, colour)
          else (False, vecadd (vecmult newcol intens) colour)
      }
  }   
reflectray :: Vector -> Vector -> [Light] -> Vector -> Vector -> Vector -> Vector
reflectray pos newdir lights intens contrib colour =
  let newcontrib = vecmult intens contrib in
  let nearpos = vecadd pos (vecscale newdir epsilon) in
  case (trace (testspheres) nearpos newdir) of {
    (is_hit, dist, sp) ->
      let newcol = if is_hit then shade lights sp nearpos newdir dist newcontrib else background in
      if is_zerovector newcontrib
      then colour
      else vecadd colour (vecmult newcol intens)
  }
refractray :: Double -> Vector -> Vector -> (Bool,Vector)
refractray newindex olddir innorm =
  let dotp = 0.0 -. (vecdot olddir innorm) in
  case (if polyLt dotp 0.0 then (vecscale innorm (0.0 -. 1.0), 0.0 -. dotp, 1.0 /. newindex) else (innorm, dotp, newindex)) of {
    (norm, k, nr) ->
      let disc = 1.0 -. nr *. nr *. (1.0 -. (k *. k)) in
      let t = (nr *. k) -. (sqrt disc) in
      if polyLt disc 0.0 then (True, (0.0,0.0,0.0)) else (False, vecadd (vecscale norm t) (vecscale olddir nr))
  }
lightray :: Light -> Vector -> Vector -> Vector -> [Surfspec] -> Vector
lightray l pos norm refl surf =
  case (lightdirection l pos) of { (ldir, dist) ->
    let cosangle = vecdot ldir norm in
    case (shadowed pos ldir (lightcolour l)) of { (is_inshadow, lcolour) ->
      if is_inshadow then (0.0,0.0,0.0)
      else
        let diff = diffusesurf surf in
        let spow = specpowsurf surf in
          if (polyLeq cosangle 0.0) then
            let bodycol = bodysurf surf in
            let cosalpha = 0.0 -. (vecdot refl ldir) in
            let diffcont = vecmult (vecscale diff (0.0 -. cosangle)) lcolour in
            let speccont = if polyLeq cosalpha 0.0 then (0.0,0.0,0.0) else vecmult (vecscale bodycol (cosalpha**spow)) lcolour in
            vecadd diffcont speccont
          else
            let spec = specularsurf surf in
            let cosalpha = vecdot refl ldir in
            let diffcont = vecmult (vecscale diff cosangle) lcolour in
            let speccont = if polyLeq cosalpha 0.0 then (0.0,0.0,0.0) else vecmult (vecscale spec (cosalpha**spow)) lcolour in
            vecadd diffcont speccont
    }
  }
lightdirection :: Light -> Vector -> (Vector, Double)
lightdirection (Directional dir col) pt = (fst (vecnorm dir), infinity)
lightdirection (Point pos col) pt       = vecnorm (vecsub pos pt)
shadowed :: Vector -> Vector -> a -> (Bool,a)
shadowed pos dir lcolour =
  case (trace (testspheres) (vecadd pos (vecscale dir epsilon)) dir) of {
    (is_hit, dist, sp) -> if not is_hit then (False, lcolour) else (True, lcolour)
  }
sphereintersect :: Vector -> Vector -> Sphere -> (Bool,Double)
sphereintersect pos dir (Sphere spos rad _) =
  let m = vecsub pos spos in
  let bm = vecdot m dir in
  let m2 = vecdot m m in
  let disc = (bm *. bm) -. m2 +. (rad *. rad) in
  let slo = 0.0 -. bm -. (sqrt disc) in
  let shi = 0.0 -. bm +. (sqrt disc) in
  if polyLt disc 0.0 then
    (False, 0.0)
  else if polyLt slo 0.0 then
    if polyLt shi 0.0 then
      (False, 0.0)
    else 
      (True, shi)
  else (True, slo)
spherenormal :: Vector-> Sphere -> Vector
spherenormal pos (Sphere spos rad _) = vecscale (vecsub pos spos) (1.0 /. rad)
hash :: [Vector] -> Int
hash param =
  let u8 = \x -> (int_of_float . (\x -> 255.0 *. x)) x in
  foldr (\rgb acc -> case rgb of { (r,g,b) -> (u8 r) + ((u8 g) * 7) + ((u8 b) * 23) + (acc * 61) }) 0 param
run winsize = hash (map snd (ray winsize))
testSphere_nofib n = run n
testSphere_nofib $ primId 30
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> after expansion >>>>>>>>>>
//│ testSphere_nofib_lh_₁(primId⁰(30))
//│ def ambientsurf_lh_₁(_lh_ambientsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => case _lh_listcomp_fun_ls_h⁷ of {
//│ 			Ambient _lh_ambientsurf_Ambient_0⁰ => [LH_C _lh_ambientsurf_Ambient_0⁰ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]
//│ 			| _  => _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁷(_lh_ambientsurf_arg1⁰), [LH_C [LH_P3 0.0 0.0 0.0] [LH_N]]))
//│ def background_lh_₁ = [LH_P3 0.078 0.361 0.753]
//│ def bodysurf_lh_₁(_lh_bodysurf_arg1¹) = head_lh_₄(mappend_lh_₂(
//│ 	let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => case _lh_listcomp_fun_ls_h⁸ of {
//│ 			Body _lh_bodysurf_Body_0¹ => [LH_C _lh_bodysurf_Body_0¹ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]
//│ 			| _  => _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁸(_lh_bodysurf_arg1¹), [LH_C [LH_P3 1.0 1.0 1.0] [LH_N]]))
//│ def bodysurf_lh_₂(_lh_bodysurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 			Body _lh_bodysurf_Body_0⁰ => [LH_C _lh_bodysurf_Body_0⁰ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 			| _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun¹(_lh_bodysurf_arg1⁰), [LH_C [LH_P3 1.0 1.0 1.0] [LH_N]]))
//│ def camparams_lh_₁(_lh_camparams_arg1⁰, _lh_camparams_arg2⁰, _lh_camparams_arg3⁰, _lh_camparams_arg4⁰, _lh_camparams_arg5⁰) = 
//│ 	let initfirstray⁰ = vecsub_lh_₁(_lh_camparams_arg2⁰, _lh_camparams_arg1⁰)
//│ 	in let _lh_matchIdent¹³ = vecnorm_lh_₂(initfirstray⁰)
//│ 	in case _lh_matchIdent¹³ of {
//│ 		LH_P2 _lh_camparams_LH_P2_0⁰ _lh_camparams_LH_P2_1⁰ => 
//│ 			let _lh_matchIdent¹⁴ = vecnorm_lh_₃(veccross_lh_₂(_lh_camparams_LH_P2_0⁰, _lh_camparams_arg3⁰))
//│ 			in case _lh_matchIdent¹⁴ of {
//│ 				LH_P2 _lh_camparams_LH_P2_0¹ _lh_camparams_LH_P2_1¹ => 
//│ 					let _lh_matchIdent¹⁵ = vecnorm_lh_₄(veccross_lh_₁(_lh_camparams_LH_P2_0¹, _lh_camparams_LH_P2_0⁰))
//│ 					in case _lh_matchIdent¹⁵ of {
//│ 						LH_P2 _lh_camparams_LH_P2_0² _lh_camparams_LH_P2_1² => 
//│ 							let xfov⁰ = _lh_camparams_arg4⁰
//│ 							in let yfov⁰ = _lh_camparams_arg4⁰
//│ 							in let xwinsize⁰ = _lh_camparams_arg5⁰
//│ 							in let ywinsize⁰ = _lh_camparams_arg5⁰
//│ 							in let magx⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₁((xfov⁰ /. 2.0)))) /. xwinsize⁰)
//│ 							in let magy⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₂((yfov⁰ /. 2.0)))) /. ywinsize⁰)
//│ 							in let scrnx⁰ = vecscale_lh_₆(_lh_camparams_LH_P2_0¹, magx⁰)
//│ 							in let scrny⁰ = vecscale_lh_₅(_lh_camparams_LH_P2_0², magy⁰)
//│ 							in let firstray⁰ = vecsub_lh_₂(initfirstray⁰, vecadd_lh_₃(vecscale_lh_₃(scrnx⁰, (0.5 *. xwinsize⁰)), vecscale_lh_₄(scrny⁰, (0.5 *. ywinsize⁰))))
//│ 							in [LH_P3 firstray⁰ scrnx⁰ scrny⁰]}}}
//│ def diffusesurf_lh_₁(_lh_diffusesurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => case _lh_listcomp_fun_ls_h³ of {
//│ 			Diffuse _lh_diffusesurf_Diffuse_0⁰ => [LH_C _lh_diffusesurf_Diffuse_0⁰ _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 			| _  => _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun³(_lh_diffusesurf_arg1⁰), [LH_C [LH_P3 0.0 0.0 0.0] [LH_N]]))
//│ def dtor_lh_₁(_lh_dtor_arg1¹) = ((_lh_dtor_arg1¹ *. pi_lh_₁) /. 180.0)
//│ def dtor_lh_₂(_lh_dtor_arg1⁰) = ((_lh_dtor_arg1⁰ *. pi_lh_₂) /. 180.0)
//│ def enumFromTo_lh_₁(a¹, b¹) = if (a¹ <= b¹) then [LH_C a¹ enumFromTo_lh_₁((a¹ + 1), b¹)] else [LH_N]
//│ def enumFromTo_lh_₂(a⁰, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromTo_lh_₂((a⁰ + 1), b⁰)] else [LH_N]
//│ def epsilon_lh_₁ = 0.000001
//│ def epsilon_lh_₂ = 0.000001
//│ def foldr_lh_₁(f³, i¹, ls⁸) = case ls⁸ of {
//│ 	LH_C h¹¹ t¹² => f³(h¹¹, foldr_lh_₁(f³, i¹, t¹²))
//│ 	| LH_N  => i¹}
//│ def foldr_lh_₂(f¹, i⁰, ls⁶) = case ls⁶ of {
//│ 	LH_C h⁹ t¹⁰ => f¹(h⁹, foldr_lh_₂(f¹, i⁰, t¹⁰))
//│ 	| LH_N  => i⁰}
//│ def fov_lh_₁ = 45.0
//│ def fst_lh_₁(_lh_fst_arg1⁰) = case _lh_fst_arg1⁰ of {
//│ 	LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰}
//│ def hash_lh_₁(_lh_hash_arg1⁰) = 
//│ 	let u8⁰ = (fun x⁰ -> (fun _lh_funcomp_x⁰ -> int_of_float⁰((fun x¹ -> (255.0 *. x¹))(_lh_funcomp_x⁰)))(x⁰))
//│ 	in foldr_lh_₁((fun rgb⁰ -> (fun acc⁰ -> 
//│ 		let _lh_matchIdent¹⁸ = rgb⁰
//│ 		in case _lh_matchIdent¹⁸ of {
//│ 			LH_P3 _lh_hash_LH_P3_0⁰ _lh_hash_LH_P3_1⁰ _lh_hash_LH_P3_2⁰ => (((u8⁰(_lh_hash_LH_P3_0⁰) + (u8⁰(_lh_hash_LH_P3_1⁰) * 7)) + (u8⁰(_lh_hash_LH_P3_2⁰) * 23)) + (acc⁰ * 61))})), 0, _lh_hash_arg1⁰)
//│ def head_lh_₁(ls⁷) = case ls⁷ of {
//│ 	LH_C h¹⁰ t¹¹ => h¹⁰
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls⁴) = case ls⁴ of {
//│ 	LH_C h⁷ t⁸ => h⁷
//│ 	| LH_N  => error⁰}
//│ def head_lh_₃(ls²) = case ls² of {
//│ 	LH_C h⁵ t⁶ => h⁵
//│ 	| LH_N  => error⁰}
//│ def head_lh_₄(ls¹) = case ls¹ of {
//│ 	LH_C h² t³ => h²
//│ 	| LH_N  => error⁰}
//│ def head_lh_₅(ls⁰) = case ls⁰ of {
//│ 	LH_C h¹ t² => h¹
//│ 	| LH_N  => error⁰}
//│ def infinity_lh_₁ = 100000000.0
//│ def is_zerovector_lh_₁(_lh_is_zerovector_arg1⁰) = case _lh_is_zerovector_arg1⁰ of {
//│ 	LH_P3 _lh_is_zerovector_LH_P3_0⁰ _lh_is_zerovector_LH_P3_1⁰ _lh_is_zerovector_LH_P3_2⁰ => ((polyLt⁰(_lh_is_zerovector_LH_P3_0⁰, epsilon_lh_₂) && polyLt⁰(_lh_is_zerovector_LH_P3_1⁰, epsilon_lh_₂)) && polyLt⁰(_lh_is_zerovector_LH_P3_2⁰, epsilon_lh_₂))}
//│ def lightcolour_lh_₁(_lh_lightcolour_arg1⁰) = case _lh_lightcolour_arg1⁰ of {
//│ 	Directional _lh_lightcolour_Directional_0⁰ _lh_lightcolour_Directional_1⁰ => _lh_lightcolour_Directional_1⁰
//│ 	| Point _lh_lightcolour_Point_0⁰ _lh_lightcolour_Point_1⁰ => _lh_lightcolour_Point_1⁰}
//│ def lightdirection_lh_₁(_lh_lightdirection_arg1⁰, _lh_lightdirection_arg2⁰) = case _lh_lightdirection_arg1⁰ of {
//│ 	Directional _lh_lightdirection_Directional_0⁰ _lh_lightdirection_Directional_1⁰ => [LH_P2 fst_lh_₁(vecnorm_lh_₄(_lh_lightdirection_Directional_0⁰)) infinity_lh_₁]
//│ 	| Point _lh_lightdirection_Point_0⁰ _lh_lightdirection_Point_1⁰ => vecnorm_lh_₄(vecsub_lh_₃(_lh_lightdirection_Point_0⁰, _lh_lightdirection_arg2⁰))}
//│ def lightray_lh_₁(_lh_lightray_arg1⁰, _lh_lightray_arg2⁰, _lh_lightray_arg3⁰, _lh_lightray_arg4⁰, _lh_lightray_arg5⁰) = 
//│ 	let _lh_matchIdent⁵ = lightdirection_lh_₁(_lh_lightray_arg1⁰, _lh_lightray_arg2⁰)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_P2 _lh_lightray_LH_P2_0⁰ _lh_lightray_LH_P2_1⁰ => 
//│ 			let cosangle⁰ = vecdot_lh_₅(_lh_lightray_LH_P2_0⁰, _lh_lightray_arg3⁰)
//│ 			in let _lh_matchIdent⁶ = shadowed_lh_₁(_lh_lightray_arg2⁰, _lh_lightray_LH_P2_0⁰, lightcolour_lh_₁(_lh_lightray_arg1⁰))
//│ 			in case _lh_matchIdent⁶ of {
//│ 				LH_P2 _lh_lightray_LH_P2_0¹ _lh_lightray_LH_P2_1¹ => if _lh_lightray_LH_P2_0¹ then [LH_P3 0.0 0.0 0.0] else 
//│ 					let diff⁰ = diffusesurf_lh_₁(_lh_lightray_arg5⁰)
//│ 					in let spow⁰ = specpowsurf_lh_₁(_lh_lightray_arg5⁰)
//│ 					in if polyLeq⁰(cosangle⁰, 0.0) then 
//│ 						let bodycol⁰ = bodysurf_lh_₂(_lh_lightray_arg5⁰)
//│ 						in let cosalpha⁰ = (0.0 -. vecdot_lh_₆(_lh_lightray_arg4⁰, _lh_lightray_LH_P2_0⁰))
//│ 						in let diffcont⁰ = vecmult_lh_₅(vecscale_lh_₁₃(diff⁰, (0.0 -. cosangle⁰)), _lh_lightray_LH_P2_1¹)
//│ 						in let speccont⁰ = if polyLeq⁰(cosalpha⁰, 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₃(vecscale_lh_₁₂(bodycol⁰, (cosalpha⁰ ** spow⁰)), _lh_lightray_LH_P2_1¹)
//│ 						in vecadd_lh_₉(diffcont⁰, speccont⁰) else 
//│ 						let spec⁰ = specularsurf_lh_₂(_lh_lightray_arg5⁰)
//│ 						in let cosalpha¹ = vecdot_lh_₄(_lh_lightray_arg4⁰, _lh_lightray_LH_P2_0⁰)
//│ 						in let diffcont¹ = vecmult_lh_₄(vecscale_lh_₁₄(diff⁰, cosangle⁰), _lh_lightray_LH_P2_1¹)
//│ 						in let speccont¹ = if polyLeq⁰(cosalpha¹, 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₂(vecscale_lh_₁₁(spec⁰, (cosalpha¹ ** spow⁰)), _lh_lightray_LH_P2_1¹)
//│ 						in vecadd_lh_₈(diffcont¹, speccont¹)}}
//│ def lookat_lh_₁ = [LH_P3 0.0 0.0 0.0]
//│ def lookfrom_lh_₁ = [LH_P3 2.1 1.3 1.7]
//│ def lookfrom_lh_₂ = [LH_P3 2.1 1.3 1.7]
//│ def map_lh_₁(f⁴, ls⁹) = case ls⁹ of {
//│ 	LH_C h¹² t¹³ => [LH_C f⁴(h¹²) map_lh_₁(f⁴, t¹³)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₂(f⁰, ls³) = case ls³ of {
//│ 	LH_C h⁶ t⁷ => [LH_C f⁰(h⁶) map_lh_₂(f⁰, t⁷)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh_₁(xs², ys²) = case xs² of {
//│ 	LH_C h⁴ t⁵ => [LH_C h⁴ mappend_lh_₁(t⁵, ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₂(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h³ t⁴ => [LH_C h³ mappend_lh_₂(t⁴, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₃(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def null_lh_₁(_lh_null_arg1⁰) = case _lh_null_arg1⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False]}
//│ def pi_lh_₁ = 3.141592653589793
//│ def pi_lh_₂ = 3.141592653589793
//│ def ray_lh_₁(_lh_ray_arg1⁰) = 
//│ 	let lights⁰ = testlights_lh_₁
//│ 	in let _lh_matchIdent¹⁹ = camparams_lh_₁(lookfrom_lh_₁, lookat_lh_₁, vup_lh_₁, fov_lh_₁, float_of_int⁰(_lh_ray_arg1⁰))
//│ 	in case _lh_matchIdent¹⁹ of {
//│ 		LH_P3 _lh_ray_LH_P3_0⁰ _lh_ray_LH_P3_1⁰ _lh_ray_LH_P3_2⁰ => 
//│ 			let f⁵ = (fun i² -> (fun j⁰ -> tracepixel_lh_₁(testspheres_lh_₁, lights⁰, float_of_int⁰(i²), float_of_int⁰(j⁰), _lh_ray_LH_P3_0⁰, _lh_ray_LH_P3_1⁰, _lh_ray_LH_P3_2⁰)))
//│ 			in let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 				LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => 
//│ 					let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 						LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]
//│ 						| LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ 					in _lh_listcomp_fun¹¹(enumFromTo_lh_₂(0, (_lh_ray_arg1⁰ - 1)))
//│ 				| LH_N  => [LH_N]})
//│ 			in _lh_listcomp_fun¹⁰(enumFromTo_lh_₁(0, (_lh_ray_arg1⁰ - 1)))}
//│ def reflectray_lh_₁(_lh_reflectray_arg1⁰, _lh_reflectray_arg2⁰, _lh_reflectray_arg3⁰, _lh_reflectray_arg4⁰, _lh_reflectray_arg5⁰, _lh_reflectray_arg6⁰) = 
//│ 	let newcontrib⁰ = vecmult_lh_₅(_lh_reflectray_arg4⁰, _lh_reflectray_arg5⁰)
//│ 	in let nearpos⁰ = vecadd_lh_₉(_lh_reflectray_arg1⁰, vecscale_lh_₁₄(_lh_reflectray_arg2⁰, epsilon_lh_₂))
//│ 	in let _lh_matchIdent² = trace_lh_₁(testspheres_lh_₁, nearpos⁰, _lh_reflectray_arg2⁰)
//│ 	in case _lh_matchIdent² of {
//│ 		LH_P3 _lh_reflectray_LH_P3_0⁰ _lh_reflectray_LH_P3_1⁰ _lh_reflectray_LH_P3_2⁰ => 
//│ 			let newcol⁰ = if _lh_reflectray_LH_P3_0⁰ then shade_lh_₁(_lh_reflectray_arg3⁰, _lh_reflectray_LH_P3_2⁰, nearpos⁰, _lh_reflectray_arg2⁰, _lh_reflectray_LH_P3_1⁰, newcontrib⁰) else background_lh_₁
//│ 			in if is_zerovector_lh_₁(newcontrib⁰) then _lh_reflectray_arg6⁰ else vecadd_lh_₉(_lh_reflectray_arg6⁰, vecmult_lh_₅(newcol⁰, _lh_reflectray_arg4⁰))}
//│ def reflectsurf_lh_₁(_lh_reflectsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => case _lh_listcomp_fun_ls_h⁴ of {
//│ 			Reflect _lh_reflectsurf_Reflect_0⁰ => [LH_C _lh_reflectsurf_Reflect_0⁰ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]
//│ 			| _  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁴(_lh_reflectsurf_arg1⁰), [LH_C 0.0 [LH_N]]))
//│ def refractray_lh_₁(_lh_refractray_arg1⁰, _lh_refractray_arg2⁰, _lh_refractray_arg3⁰) = 
//│ 	let dotp⁰ = (0.0 -. vecdot_lh_₆(_lh_refractray_arg2⁰, _lh_refractray_arg3⁰))
//│ 	in let _lh_matchIdent⁰ = if polyLt⁰(dotp⁰, 0.0) then [LH_P3 vecscale_lh_₁₄(_lh_refractray_arg3⁰, (0.0 -. 1.0)) (0.0 -. dotp⁰) (1.0 /. _lh_refractray_arg1⁰)] else [LH_P3 _lh_refractray_arg3⁰ dotp⁰ _lh_refractray_arg1⁰]
//│ 	in case _lh_matchIdent⁰ of {
//│ 		LH_P3 _lh_refractray_LH_P3_0⁰ _lh_refractray_LH_P3_1⁰ _lh_refractray_LH_P3_2⁰ => 
//│ 			let disc⁰ = (((1.0 -. _lh_refractray_LH_P3_2⁰) *. _lh_refractray_LH_P3_2⁰) *. (1.0 -. (_lh_refractray_LH_P3_1⁰ *. _lh_refractray_LH_P3_1⁰)))
//│ 			in let t⁰ = ((_lh_refractray_LH_P3_2⁰ *. _lh_refractray_LH_P3_1⁰) -. sqrt⁰(disc⁰))
//│ 			in if polyLt⁰(disc⁰, 0.0) then [LH_P2 [True] [LH_P3 0.0 0.0 0.0]] else [LH_P2 [False] vecadd_lh_₉(vecscale_lh_₁₄(_lh_refractray_LH_P3_0⁰, t⁰), vecscale_lh_₁₄(_lh_refractray_arg2⁰, _lh_refractray_LH_P3_2⁰))]}
//│ def refractsurf_lh_₁(_lh_refractsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => case _lh_listcomp_fun_ls_h⁵ of {
//│ 			Refract _lh_refractsurf_Refract_0⁰ => [LH_C _lh_refractsurf_Refract_0⁰ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]
//│ 			| _  => _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁵(_lh_refractsurf_arg1⁰), [LH_C 1.0 [LH_N]]))
//│ def run_lh_₁(_lh_run_arg1⁰) = hash_lh_₁(map_lh_₁(snd_lh_₁, ray_lh_₁(_lh_run_arg1⁰)))
//│ def s2_lh_₁ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₁₀ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₂ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₃ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₄ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₅ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₆ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₇ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₈ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₉ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def shade_lh_₁(_lh_shade_arg1⁰, _lh_shade_arg2⁰, _lh_shade_arg3⁰, _lh_shade_arg4⁰, _lh_shade_arg5⁰, _lh_shade_arg6⁰) = 
//│ 	let hitpos⁰ = vecadd_lh_₆(_lh_shade_arg3⁰, vecscale_lh_₇(_lh_shade_arg4⁰, _lh_shade_arg5⁰))
//│ 	in let ambientlight⁰ = [LH_P3 1.0 1.0 1.0]
//│ 	in let surf⁰ = spheresurf_lh_₁(_lh_shade_arg2⁰)
//│ 	in let amb⁰ = vecmult_lh_₁(ambientlight⁰, ambientsurf_lh_₁(surf⁰))
//│ 	in let norm⁰ = spherenormal_lh_₁(hitpos⁰, _lh_shade_arg2⁰)
//│ 	in let refl⁰ = vecadd_lh_₇(_lh_shade_arg4⁰, vecscale_lh_₉(norm⁰, ((0.0 -. 2.0) *. vecdot_lh_₁(_lh_shade_arg4⁰, norm⁰))))
//│ 	in let diff¹ = vecsum_lh_₁(map_lh_₂((fun l⁰ -> lightray_lh_₁(l⁰, hitpos⁰, norm⁰, refl⁰, surf⁰)), _lh_shade_arg1⁰))
//│ 	in let transmitted⁰ = transmitsurf_lh_₁(surf⁰)
//│ 	in let simple⁰ = vecadd_lh_₅(amb⁰, diff¹)
//│ 	in let trintensity⁰ = vecscale_lh_₈(bodysurf_lh_₁(surf⁰), transmitted⁰)
//│ 	in let _lh_matchIdent⁷ = if polyLt⁰(transmitted⁰, epsilon_lh_₁) then [LH_P2 [False] simple⁰] else transmitray_lh_₁(_lh_shade_arg1⁰, simple⁰, hitpos⁰, _lh_shade_arg4⁰, refractsurf_lh_₁(surf⁰), trintensity⁰, _lh_shade_arg6⁰, norm⁰)
//│ 	in case _lh_matchIdent⁷ of {
//│ 		LH_P2 _lh_shade_LH_P2_0⁰ _lh_shade_LH_P2_1⁰ => 
//│ 			let reflsurf⁰ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁰), reflectsurf_lh_₁(surf⁰))
//│ 			in let reflectiv⁰ = if _lh_shade_LH_P2_0⁰ then vecadd_lh_₄(trintensity⁰, reflsurf⁰) else reflsurf⁰
//│ 			in let rcol⁰ = if is_zerovector_lh_₁(reflectiv⁰) then _lh_shade_LH_P2_1⁰ else reflectray_lh_₁(hitpos⁰, refl⁰, _lh_shade_arg1⁰, reflectiv⁰, _lh_shade_arg6⁰, _lh_shade_LH_P2_1⁰)
//│ 			in rcol⁰}
//│ def shadowed_lh_₁(_lh_shadowed_arg1⁰, _lh_shadowed_arg2⁰, _lh_shadowed_arg3⁰) = 
//│ 	let _lh_matchIdent¹ = trace_lh_₁(testspheres_lh_₁, vecadd_lh_₉(_lh_shadowed_arg1⁰, vecscale_lh_₁₄(_lh_shadowed_arg2⁰, epsilon_lh_₂)), _lh_shadowed_arg2⁰)
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P3 _lh_shadowed_LH_P3_0⁰ _lh_shadowed_LH_P3_1⁰ _lh_shadowed_LH_P3_2⁰ => if not⁰(_lh_shadowed_LH_P3_0⁰) then [LH_P2 [False] _lh_shadowed_arg3⁰] else [LH_P2 [True] _lh_shadowed_arg3⁰]}
//│ def snd_lh_₁(_lh_snd_arg1⁰) = case _lh_snd_arg1⁰ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰}
//│ def specpowsurf_lh_₁(_lh_specpowsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => case _lh_listcomp_fun_ls_h⁰ of {
//│ 			Specpow _lh_specpowsurf_Specpow_0⁰ => [LH_C _lh_specpowsurf_Specpow_0⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]
//│ 			| _  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(_lh_specpowsurf_arg1⁰), [LH_C 8.0 [LH_N]]))
//│ def specularsurf_lh_₁(_lh_specularsurf_arg1¹) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => case _lh_listcomp_fun_ls_h⁶ of {
//│ 			Specular _lh_specularsurf_Specular_0¹ => [LH_C _lh_specularsurf_Specular_0¹ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]
//│ 			| _  => _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁶(_lh_specularsurf_arg1¹), [LH_C [LH_P3 0.0 0.0 0.0] [LH_N]]))
//│ def specularsurf_lh_₂(_lh_specularsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => case _lh_listcomp_fun_ls_h² of {
//│ 			Specular _lh_specularsurf_Specular_0⁰ => [LH_C _lh_specularsurf_Specular_0⁰ _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 			| _  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(_lh_specularsurf_arg1⁰), [LH_C [LH_P3 0.0 0.0 0.0] [LH_N]]))
//│ def sphereintersect_lh_₁(_lh_sphereintersect_arg1⁰, _lh_sphereintersect_arg2⁰, _lh_sphereintersect_arg3⁰) = case _lh_sphereintersect_arg3⁰ of {
//│ 	Sphere _lh_sphereintersect_Sphere_0⁰ _lh_sphereintersect_Sphere_1⁰ _lh_sphereintersect_Sphere_2⁰ => 
//│ 		let m⁰ = vecsub_lh_₃(_lh_sphereintersect_arg1⁰, _lh_sphereintersect_Sphere_0⁰)
//│ 		in let bm⁰ = vecdot_lh_₂(m⁰, _lh_sphereintersect_arg2⁰)
//│ 		in let m2⁰ = vecdot_lh_₃(m⁰, m⁰)
//│ 		in let disc¹ = (((bm⁰ *. bm⁰) -. m2⁰) +. (_lh_sphereintersect_Sphere_1⁰ *. _lh_sphereintersect_Sphere_1⁰))
//│ 		in let slo⁰ = ((0.0 -. bm⁰) -. sqrt⁰(disc¹))
//│ 		in let shi⁰ = ((0.0 -. bm⁰) +. sqrt⁰(disc¹))
//│ 		in if polyLt⁰(disc¹, 0.0) then [LH_P2 [False] 0.0] else if polyLt⁰(slo⁰, 0.0) then if polyLt⁰(shi⁰, 0.0) then [LH_P2 [False] 0.0] else [LH_P2 [True] shi⁰] else [LH_P2 [True] slo⁰]}
//│ def spherenormal_lh_₁(_lh_spherenormal_arg1⁰, _lh_spherenormal_arg2⁰) = case _lh_spherenormal_arg2⁰ of {
//│ 	Sphere _lh_spherenormal_Sphere_0⁰ _lh_spherenormal_Sphere_1⁰ _lh_spherenormal_Sphere_2⁰ => vecscale_lh_₁₄(vecsub_lh_₃(_lh_spherenormal_arg1⁰, _lh_spherenormal_Sphere_0⁰), (1.0 /. _lh_spherenormal_Sphere_1⁰))}
//│ def spheresurf_lh_₁(_lh_spheresurf_arg1⁰) = case _lh_spheresurf_arg1⁰ of {
//│ 	Sphere _lh_spheresurf_Sphere_0⁰ _lh_spheresurf_Sphere_1⁰ _lh_spheresurf_Sphere_2⁰ => _lh_spheresurf_Sphere_2⁰}
//│ def tail_lh_₁(ls⁵) = case ls⁵ of {
//│ 	LH_C h⁸ t⁹ => t⁹
//│ 	| LH_N  => error⁰}
//│ def testSphere_nofib_lh_₁(_lh_testSphere_nofib_arg1⁰) = run_lh_₁(_lh_testSphere_nofib_arg1⁰)
//│ def testlights_lh_₁ = [LH_C [Point [LH_P3 4.0 3.0 2.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_C [Point [LH_P3 1.0 (0.0 -. 4.0) 4.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_C [Point [LH_P3 (0.0 -. 3.0) 1.0 5.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_N]]]]
//│ def testspheres_lh_₁ = [LH_C [Sphere [LH_P3 0.0 0.0 0.0] 0.5 s2_lh_₆] [LH_C [Sphere [LH_P3 0.272166 0.272166 0.544331] 0.166667 s2_lh_₃] [LH_C [Sphere [LH_P3 0.643951 0.172546 0.0] 0.166667 s2_lh_₉] [LH_C [Sphere [LH_P3 0.172546 0.643951 0.0] 0.166667 s2_lh_₅] [LH_C [Sphere [LH_P3 (0.0 -. 0.371785) 0.0996195 0.544331] 0.166667 s2_lh_₇] [LH_C [Sphere [LH_P3 (0.0 -. 0.471405) 0.471405 0.0] 0.166667 s2_lh_₂] [LH_C [Sphere [LH_P3 (0.0 -. 0.643951) (0.0 -. 0.172546) 0.0] 0.166667 s2_lh_₁] [LH_C [Sphere [LH_P3 0.0996195 (0.0 -. 0.371785) 0.544331] 0.166667 s2_lh_₄] [LH_C [Sphere [LH_P3 (0.0 -. 0.172546) (0.0 -. 0.643951) 0.0] 0.166667 s2_lh_₈] [LH_C [Sphere [LH_P3 0.471405 (0.0 -. 0.471405) 0.0] 0.166667 s2_lh_₁₀] [LH_N]]]]]]]]]]]
//│ def trace_lh_₁(_lh_trace_arg1⁰, _lh_trace_arg2⁰, _lh_trace_arg3⁰) = 
//│ 	let f² = (fun d1s1⁰ -> (fun d2s2⁰ -> 
//│ 		let _lh_matchIdent⁸ = d1s1⁰
//│ 		in case _lh_matchIdent⁸ of {
//│ 			LH_P2 _lh_trace_LH_P2_0⁰ _lh_trace_LH_P2_1⁰ => 
//│ 				let _lh_matchIdent⁹ = d2s2⁰
//│ 				in case _lh_matchIdent⁹ of {
//│ 					LH_P2 _lh_trace_LH_P2_0¹ _lh_trace_LH_P2_1¹ => if polyLt⁰(_lh_trace_LH_P2_0⁰, _lh_trace_LH_P2_0¹) then [LH_P2 _lh_trace_LH_P2_0⁰ _lh_trace_LH_P2_1⁰] else [LH_P2 _lh_trace_LH_P2_0¹ _lh_trace_LH_P2_1¹]}}))
//│ 	in let sphmap⁰ = (fun xss⁰ -> 
//│ 		let _lh_matchIdent¹⁰ = xss⁰
//│ 		in case _lh_matchIdent¹⁰ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_trace_LH_C_0⁰ _lh_trace_LH_C_1⁰ => 
//│ 				let _lh_matchIdent¹¹ = sphereintersect_lh_₁(_lh_trace_arg2⁰, _lh_trace_arg3⁰, _lh_trace_LH_C_0⁰)
//│ 				in case _lh_matchIdent¹¹ of {
//│ 					LH_P2 _lh_trace_LH_P2_0² _lh_trace_LH_P2_1² => if _lh_trace_LH_P2_0² then [LH_C [LH_P2 _lh_trace_LH_P2_1² _lh_trace_LH_C_0⁰] sphmap⁰(_lh_trace_LH_C_1⁰)] else sphmap⁰(_lh_trace_LH_C_1⁰)}})
//│ 	in let dists⁰ = sphmap⁰(_lh_trace_arg1⁰)
//│ 	in if null_lh_₁(dists⁰) then [LH_P3 [False] infinity_lh_₁ head_lh_₂(_lh_trace_arg1⁰)] else 
//│ 		let _lh_matchIdent¹² = foldr_lh_₂(f², head_lh_₁(dists⁰), tail_lh_₁(dists⁰))
//│ 		in case _lh_matchIdent¹² of {
//│ 			LH_P2 _lh_trace_LH_P2_0³ _lh_trace_LH_P2_1³ => [LH_P3 [True] _lh_trace_LH_P2_0³ _lh_trace_LH_P2_1³]}
//│ def tracepixel_lh_₁(_lh_tracepixel_arg1⁰, _lh_tracepixel_arg2⁰, _lh_tracepixel_arg3⁰, _lh_tracepixel_arg4⁰, _lh_tracepixel_arg5⁰, _lh_tracepixel_arg6⁰, _lh_tracepixel_arg7⁰) = 
//│ 	let pos⁰ = lookfrom_lh_₂
//│ 	in let _lh_matchIdent¹⁶ = vecnorm_lh_₁(vecadd_lh_₁(vecadd_lh_₂(_lh_tracepixel_arg5⁰, vecscale_lh_₁(_lh_tracepixel_arg6⁰, _lh_tracepixel_arg3⁰)), vecscale_lh_₂(_lh_tracepixel_arg7⁰, _lh_tracepixel_arg4⁰)))
//│ 	in case _lh_matchIdent¹⁶ of {
//│ 		LH_P2 _lh_tracepixel_LH_P2_0⁰ _lh_tracepixel_LH_P2_1⁰ => 
//│ 			let _lh_matchIdent¹⁷ = trace_lh_₁(_lh_tracepixel_arg1⁰, pos⁰, _lh_tracepixel_LH_P2_0⁰)
//│ 			in case _lh_matchIdent¹⁷ of {
//│ 				LH_P3 _lh_tracepixel_LH_P3_0⁰ _lh_tracepixel_LH_P3_1⁰ _lh_tracepixel_LH_P3_2⁰ => if _lh_tracepixel_LH_P3_0⁰ then shade_lh_₁(_lh_tracepixel_arg2⁰, _lh_tracepixel_LH_P3_2⁰, pos⁰, _lh_tracepixel_LH_P2_0⁰, _lh_tracepixel_LH_P3_1⁰, [LH_P3 1.0 1.0 1.0]) else background_lh_₁}}
//│ def transmitray_lh_₁(_lh_transmitray_arg1⁰, _lh_transmitray_arg2⁰, _lh_transmitray_arg3⁰, _lh_transmitray_arg4⁰, _lh_transmitray_arg5⁰, _lh_transmitray_arg6⁰, _lh_transmitray_arg7⁰, _lh_transmitray_arg8⁰) = 
//│ 	let newcontrib¹ = vecmult_lh_₅(_lh_transmitray_arg6⁰, _lh_transmitray_arg7⁰)
//│ 	in let _lh_matchIdent³ = refractray_lh_₁(_lh_transmitray_arg5⁰, _lh_transmitray_arg4⁰, _lh_transmitray_arg8⁰)
//│ 	in case _lh_matchIdent³ of {
//│ 		LH_P2 _lh_transmitray_LH_P2_0⁰ _lh_transmitray_LH_P2_1⁰ => 
//│ 			let nearpos¹ = vecadd_lh_₉(_lh_transmitray_arg3⁰, vecscale_lh_₁₄(_lh_transmitray_LH_P2_1⁰, epsilon_lh_₂))
//│ 			in let _lh_matchIdent⁴ = trace_lh_₁(testspheres_lh_₁, nearpos¹, _lh_transmitray_LH_P2_1⁰)
//│ 			in case _lh_matchIdent⁴ of {
//│ 				LH_P3 _lh_transmitray_LH_P3_0⁰ _lh_transmitray_LH_P3_1⁰ _lh_transmitray_LH_P3_2⁰ => 
//│ 					let newcol¹ = if _lh_transmitray_LH_P3_0⁰ then shade_lh_₁(_lh_transmitray_arg1⁰, _lh_transmitray_LH_P3_2⁰, nearpos¹, _lh_transmitray_LH_P2_1⁰, _lh_transmitray_LH_P3_1⁰, newcontrib¹) else background_lh_₁
//│ 					in if is_zerovector_lh_₁(newcontrib¹) then [LH_P2 [False] _lh_transmitray_arg2⁰] else [LH_P2 [False] vecadd_lh_₉(vecmult_lh_₅(newcol¹, _lh_transmitray_arg6⁰), _lh_transmitray_arg2⁰)]}}
//│ def transmitsurf_lh_₁(_lh_transmitsurf_arg1⁰) = head_lh_₃(mappend_lh_₁(
//│ 	let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => case _lh_listcomp_fun_ls_h⁹ of {
//│ 			Transmit _lh_transmitsurf_Transmit_0⁰ => [LH_C _lh_transmitsurf_Transmit_0⁰ _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)]
//│ 			| _  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)}
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁹(_lh_transmitsurf_arg1⁰), [LH_C 0.0 [LH_N]]))
//│ def vecadd_lh_₁(_lh_vecadd_arg1⁸, _lh_vecadd_arg2⁸) = case _lh_vecadd_arg1⁸ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0¹⁶ _lh_vecadd_LH_P3_1¹⁶ _lh_vecadd_LH_P3_2¹⁶ => case _lh_vecadd_arg2⁸ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0¹⁷ _lh_vecadd_LH_P3_1¹⁷ _lh_vecadd_LH_P3_2¹⁷ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁶ +. _lh_vecadd_LH_P3_0¹⁷) (_lh_vecadd_LH_P3_1¹⁶ +. _lh_vecadd_LH_P3_1¹⁷) (_lh_vecadd_LH_P3_2¹⁶ +. _lh_vecadd_LH_P3_2¹⁷)]}}
//│ def vecadd_lh_₂(_lh_vecadd_arg1⁷, _lh_vecadd_arg2⁷) = case _lh_vecadd_arg1⁷ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0¹⁴ _lh_vecadd_LH_P3_1¹⁴ _lh_vecadd_LH_P3_2¹⁴ => case _lh_vecadd_arg2⁷ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0¹⁵ _lh_vecadd_LH_P3_1¹⁵ _lh_vecadd_LH_P3_2¹⁵ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁴ +. _lh_vecadd_LH_P3_0¹⁵) (_lh_vecadd_LH_P3_1¹⁴ +. _lh_vecadd_LH_P3_1¹⁵) (_lh_vecadd_LH_P3_2¹⁴ +. _lh_vecadd_LH_P3_2¹⁵)]}}
//│ def vecadd_lh_₃(_lh_vecadd_arg1⁶, _lh_vecadd_arg2⁶) = case _lh_vecadd_arg1⁶ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0¹² _lh_vecadd_LH_P3_1¹² _lh_vecadd_LH_P3_2¹² => case _lh_vecadd_arg2⁶ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0¹³ _lh_vecadd_LH_P3_1¹³ _lh_vecadd_LH_P3_2¹³ => [LH_P3 (_lh_vecadd_LH_P3_0¹² +. _lh_vecadd_LH_P3_0¹³) (_lh_vecadd_LH_P3_1¹² +. _lh_vecadd_LH_P3_1¹³) (_lh_vecadd_LH_P3_2¹² +. _lh_vecadd_LH_P3_2¹³)]}}
//│ def vecadd_lh_₄(_lh_vecadd_arg1⁵, _lh_vecadd_arg2⁵) = case _lh_vecadd_arg1⁵ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0¹⁰ _lh_vecadd_LH_P3_1¹⁰ _lh_vecadd_LH_P3_2¹⁰ => case _lh_vecadd_arg2⁵ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0¹¹ _lh_vecadd_LH_P3_1¹¹ _lh_vecadd_LH_P3_2¹¹ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁰ +. _lh_vecadd_LH_P3_0¹¹) (_lh_vecadd_LH_P3_1¹⁰ +. _lh_vecadd_LH_P3_1¹¹) (_lh_vecadd_LH_P3_2¹⁰ +. _lh_vecadd_LH_P3_2¹¹)]}}
//│ def vecadd_lh_₅(_lh_vecadd_arg1⁴, _lh_vecadd_arg2⁴) = case _lh_vecadd_arg1⁴ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0⁸ _lh_vecadd_LH_P3_1⁸ _lh_vecadd_LH_P3_2⁸ => case _lh_vecadd_arg2⁴ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0⁹ _lh_vecadd_LH_P3_1⁹ _lh_vecadd_LH_P3_2⁹ => [LH_P3 (_lh_vecadd_LH_P3_0⁸ +. _lh_vecadd_LH_P3_0⁹) (_lh_vecadd_LH_P3_1⁸ +. _lh_vecadd_LH_P3_1⁹) (_lh_vecadd_LH_P3_2⁸ +. _lh_vecadd_LH_P3_2⁹)]}}
//│ def vecadd_lh_₆(_lh_vecadd_arg1³, _lh_vecadd_arg2³) = case _lh_vecadd_arg1³ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0⁶ _lh_vecadd_LH_P3_1⁶ _lh_vecadd_LH_P3_2⁶ => case _lh_vecadd_arg2³ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0⁷ _lh_vecadd_LH_P3_1⁷ _lh_vecadd_LH_P3_2⁷ => [LH_P3 (_lh_vecadd_LH_P3_0⁶ +. _lh_vecadd_LH_P3_0⁷) (_lh_vecadd_LH_P3_1⁶ +. _lh_vecadd_LH_P3_1⁷) (_lh_vecadd_LH_P3_2⁶ +. _lh_vecadd_LH_P3_2⁷)]}}
//│ def vecadd_lh_₇(_lh_vecadd_arg1², _lh_vecadd_arg2²) = case _lh_vecadd_arg1² of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0⁴ _lh_vecadd_LH_P3_1⁴ _lh_vecadd_LH_P3_2⁴ => case _lh_vecadd_arg2² of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0⁵ _lh_vecadd_LH_P3_1⁵ _lh_vecadd_LH_P3_2⁵ => [LH_P3 (_lh_vecadd_LH_P3_0⁴ +. _lh_vecadd_LH_P3_0⁵) (_lh_vecadd_LH_P3_1⁴ +. _lh_vecadd_LH_P3_1⁵) (_lh_vecadd_LH_P3_2⁴ +. _lh_vecadd_LH_P3_2⁵)]}}
//│ def vecadd_lh_₈(_lh_vecadd_arg1¹, _lh_vecadd_arg2¹) = case _lh_vecadd_arg1¹ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0² _lh_vecadd_LH_P3_1² _lh_vecadd_LH_P3_2² => case _lh_vecadd_arg2¹ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0³ _lh_vecadd_LH_P3_1³ _lh_vecadd_LH_P3_2³ => [LH_P3 (_lh_vecadd_LH_P3_0² +. _lh_vecadd_LH_P3_0³) (_lh_vecadd_LH_P3_1² +. _lh_vecadd_LH_P3_1³) (_lh_vecadd_LH_P3_2² +. _lh_vecadd_LH_P3_2³)]}}
//│ def vecadd_lh_₉(_lh_vecadd_arg1⁰, _lh_vecadd_arg2⁰) = case _lh_vecadd_arg1⁰ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0⁰ _lh_vecadd_LH_P3_1⁰ _lh_vecadd_LH_P3_2⁰ => case _lh_vecadd_arg2⁰ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0¹ _lh_vecadd_LH_P3_1¹ _lh_vecadd_LH_P3_2¹ => [LH_P3 (_lh_vecadd_LH_P3_0⁰ +. _lh_vecadd_LH_P3_0¹) (_lh_vecadd_LH_P3_1⁰ +. _lh_vecadd_LH_P3_1¹) (_lh_vecadd_LH_P3_2⁰ +. _lh_vecadd_LH_P3_2¹)]}}
//│ def veccross_lh_₁(_lh_veccross_arg1¹, _lh_veccross_arg2¹) = case _lh_veccross_arg1¹ of {
//│ 	LH_P3 _lh_veccross_LH_P3_0² _lh_veccross_LH_P3_1² _lh_veccross_LH_P3_2² => case _lh_veccross_arg2¹ of {
//│ 		LH_P3 _lh_veccross_LH_P3_0³ _lh_veccross_LH_P3_1³ _lh_veccross_LH_P3_2³ => [LH_P3 ((_lh_veccross_LH_P3_1² *. _lh_veccross_LH_P3_2³) -. (_lh_veccross_LH_P3_1³ *. _lh_veccross_LH_P3_2²)) ((_lh_veccross_LH_P3_2² *. _lh_veccross_LH_P3_0³) -. (_lh_veccross_LH_P3_2³ *. _lh_veccross_LH_P3_0²)) ((_lh_veccross_LH_P3_0² *. _lh_veccross_LH_P3_1³) -. (_lh_veccross_LH_P3_0³ *. _lh_veccross_LH_P3_1²))]}}
//│ def veccross_lh_₂(_lh_veccross_arg1⁰, _lh_veccross_arg2⁰) = case _lh_veccross_arg1⁰ of {
//│ 	LH_P3 _lh_veccross_LH_P3_0⁰ _lh_veccross_LH_P3_1⁰ _lh_veccross_LH_P3_2⁰ => case _lh_veccross_arg2⁰ of {
//│ 		LH_P3 _lh_veccross_LH_P3_0¹ _lh_veccross_LH_P3_1¹ _lh_veccross_LH_P3_2¹ => [LH_P3 ((_lh_veccross_LH_P3_1⁰ *. _lh_veccross_LH_P3_2¹) -. (_lh_veccross_LH_P3_1¹ *. _lh_veccross_LH_P3_2⁰)) ((_lh_veccross_LH_P3_2⁰ *. _lh_veccross_LH_P3_0¹) -. (_lh_veccross_LH_P3_2¹ *. _lh_veccross_LH_P3_0⁰)) ((_lh_veccross_LH_P3_0⁰ *. _lh_veccross_LH_P3_1¹) -. (_lh_veccross_LH_P3_0¹ *. _lh_veccross_LH_P3_1⁰))]}}
//│ def vecdot_lh_₁(_lh_vecdot_arg1⁵, _lh_vecdot_arg2⁵) = case _lh_vecdot_arg1⁵ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0¹⁰ _lh_vecdot_LH_P3_1¹⁰ _lh_vecdot_LH_P3_2¹⁰ => case _lh_vecdot_arg2⁵ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0¹¹ _lh_vecdot_LH_P3_1¹¹ _lh_vecdot_LH_P3_2¹¹ => (((_lh_vecdot_LH_P3_0¹⁰ *. _lh_vecdot_LH_P3_0¹¹) +. (_lh_vecdot_LH_P3_1¹⁰ *. _lh_vecdot_LH_P3_1¹¹)) +. (_lh_vecdot_LH_P3_2¹⁰ *. _lh_vecdot_LH_P3_2¹¹))}}
//│ def vecdot_lh_₂(_lh_vecdot_arg1⁴, _lh_vecdot_arg2⁴) = case _lh_vecdot_arg1⁴ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0⁸ _lh_vecdot_LH_P3_1⁸ _lh_vecdot_LH_P3_2⁸ => case _lh_vecdot_arg2⁴ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0⁹ _lh_vecdot_LH_P3_1⁹ _lh_vecdot_LH_P3_2⁹ => (((_lh_vecdot_LH_P3_0⁸ *. _lh_vecdot_LH_P3_0⁹) +. (_lh_vecdot_LH_P3_1⁸ *. _lh_vecdot_LH_P3_1⁹)) +. (_lh_vecdot_LH_P3_2⁸ *. _lh_vecdot_LH_P3_2⁹))}}
//│ def vecdot_lh_₃(_lh_vecdot_arg1³, _lh_vecdot_arg2³) = case _lh_vecdot_arg1³ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0⁶ _lh_vecdot_LH_P3_1⁶ _lh_vecdot_LH_P3_2⁶ => case _lh_vecdot_arg2³ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0⁷ _lh_vecdot_LH_P3_1⁷ _lh_vecdot_LH_P3_2⁷ => (((_lh_vecdot_LH_P3_0⁶ *. _lh_vecdot_LH_P3_0⁷) +. (_lh_vecdot_LH_P3_1⁶ *. _lh_vecdot_LH_P3_1⁷)) +. (_lh_vecdot_LH_P3_2⁶ *. _lh_vecdot_LH_P3_2⁷))}}
//│ def vecdot_lh_₄(_lh_vecdot_arg1², _lh_vecdot_arg2²) = case _lh_vecdot_arg1² of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0⁴ _lh_vecdot_LH_P3_1⁴ _lh_vecdot_LH_P3_2⁴ => case _lh_vecdot_arg2² of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0⁵ _lh_vecdot_LH_P3_1⁵ _lh_vecdot_LH_P3_2⁵ => (((_lh_vecdot_LH_P3_0⁴ *. _lh_vecdot_LH_P3_0⁵) +. (_lh_vecdot_LH_P3_1⁴ *. _lh_vecdot_LH_P3_1⁵)) +. (_lh_vecdot_LH_P3_2⁴ *. _lh_vecdot_LH_P3_2⁵))}}
//│ def vecdot_lh_₅(_lh_vecdot_arg1¹, _lh_vecdot_arg2¹) = case _lh_vecdot_arg1¹ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0² _lh_vecdot_LH_P3_1² _lh_vecdot_LH_P3_2² => case _lh_vecdot_arg2¹ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0³ _lh_vecdot_LH_P3_1³ _lh_vecdot_LH_P3_2³ => (((_lh_vecdot_LH_P3_0² *. _lh_vecdot_LH_P3_0³) +. (_lh_vecdot_LH_P3_1² *. _lh_vecdot_LH_P3_1³)) +. (_lh_vecdot_LH_P3_2² *. _lh_vecdot_LH_P3_2³))}}
//│ def vecdot_lh_₆(_lh_vecdot_arg1⁰, _lh_vecdot_arg2⁰) = case _lh_vecdot_arg1⁰ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0⁰ _lh_vecdot_LH_P3_1⁰ _lh_vecdot_LH_P3_2⁰ => case _lh_vecdot_arg2⁰ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0¹ _lh_vecdot_LH_P3_1¹ _lh_vecdot_LH_P3_2¹ => (((_lh_vecdot_LH_P3_0⁰ *. _lh_vecdot_LH_P3_0¹) +. (_lh_vecdot_LH_P3_1⁰ *. _lh_vecdot_LH_P3_1¹)) +. (_lh_vecdot_LH_P3_2⁰ *. _lh_vecdot_LH_P3_2¹))}}
//│ def vecmult_lh_₁(_lh_vecmult_arg1⁴, _lh_vecmult_arg2⁴) = case _lh_vecmult_arg1⁴ of {
//│ 	LH_P3 _lh_vecmult_LH_P3_0⁸ _lh_vecmult_LH_P3_1⁸ _lh_vecmult_LH_P3_2⁸ => case _lh_vecmult_arg2⁴ of {
//│ 		LH_P3 _lh_vecmult_LH_P3_0⁹ _lh_vecmult_LH_P3_1⁹ _lh_vecmult_LH_P3_2⁹ => [LH_P3 (_lh_vecmult_LH_P3_0⁸ *. _lh_vecmult_LH_P3_0⁹) (_lh_vecmult_LH_P3_1⁸ *. _lh_vecmult_LH_P3_1⁹) (_lh_vecmult_LH_P3_2⁸ *. _lh_vecmult_LH_P3_2⁹)]}}
//│ def vecmult_lh_₂(_lh_vecmult_arg1³, _lh_vecmult_arg2³) = case _lh_vecmult_arg1³ of {
//│ 	LH_P3 _lh_vecmult_LH_P3_0⁶ _lh_vecmult_LH_P3_1⁶ _lh_vecmult_LH_P3_2⁶ => case _lh_vecmult_arg2³ of {
//│ 		LH_P3 _lh_vecmult_LH_P3_0⁷ _lh_vecmult_LH_P3_1⁷ _lh_vecmult_LH_P3_2⁷ => [LH_P3 (_lh_vecmult_LH_P3_0⁶ *. _lh_vecmult_LH_P3_0⁷) (_lh_vecmult_LH_P3_1⁶ *. _lh_vecmult_LH_P3_1⁷) (_lh_vecmult_LH_P3_2⁶ *. _lh_vecmult_LH_P3_2⁷)]}}
//│ def vecmult_lh_₃(_lh_vecmult_arg1², _lh_vecmult_arg2²) = case _lh_vecmult_arg1² of {
//│ 	LH_P3 _lh_vecmult_LH_P3_0⁴ _lh_vecmult_LH_P3_1⁴ _lh_vecmult_LH_P3_2⁴ => case _lh_vecmult_arg2² of {
//│ 		LH_P3 _lh_vecmult_LH_P3_0⁵ _lh_vecmult_LH_P3_1⁵ _lh_vecmult_LH_P3_2⁵ => [LH_P3 (_lh_vecmult_LH_P3_0⁴ *. _lh_vecmult_LH_P3_0⁵) (_lh_vecmult_LH_P3_1⁴ *. _lh_vecmult_LH_P3_1⁵) (_lh_vecmult_LH_P3_2⁴ *. _lh_vecmult_LH_P3_2⁵)]}}
//│ def vecmult_lh_₄(_lh_vecmult_arg1¹, _lh_vecmult_arg2¹) = case _lh_vecmult_arg1¹ of {
//│ 	LH_P3 _lh_vecmult_LH_P3_0² _lh_vecmult_LH_P3_1² _lh_vecmult_LH_P3_2² => case _lh_vecmult_arg2¹ of {
//│ 		LH_P3 _lh_vecmult_LH_P3_0³ _lh_vecmult_LH_P3_1³ _lh_vecmult_LH_P3_2³ => [LH_P3 (_lh_vecmult_LH_P3_0² *. _lh_vecmult_LH_P3_0³) (_lh_vecmult_LH_P3_1² *. _lh_vecmult_LH_P3_1³) (_lh_vecmult_LH_P3_2² *. _lh_vecmult_LH_P3_2³)]}}
//│ def vecmult_lh_₅(_lh_vecmult_arg1⁰, _lh_vecmult_arg2⁰) = case _lh_vecmult_arg1⁰ of {
//│ 	LH_P3 _lh_vecmult_LH_P3_0⁰ _lh_vecmult_LH_P3_1⁰ _lh_vecmult_LH_P3_2⁰ => case _lh_vecmult_arg2⁰ of {
//│ 		LH_P3 _lh_vecmult_LH_P3_0¹ _lh_vecmult_LH_P3_1¹ _lh_vecmult_LH_P3_2¹ => [LH_P3 (_lh_vecmult_LH_P3_0⁰ *. _lh_vecmult_LH_P3_0¹) (_lh_vecmult_LH_P3_1⁰ *. _lh_vecmult_LH_P3_1¹) (_lh_vecmult_LH_P3_2⁰ *. _lh_vecmult_LH_P3_2¹)]}}
//│ def vecnorm_lh_₁(_lh_vecnorm_arg1³) = case _lh_vecnorm_arg1³ of {
//│ 	LH_P3 _lh_vecnorm_LH_P3_0³ _lh_vecnorm_LH_P3_1³ _lh_vecnorm_LH_P3_2³ => 
//│ 		let len³ = sqrt⁰((((_lh_vecnorm_LH_P3_0³ *. _lh_vecnorm_LH_P3_0³) +. (_lh_vecnorm_LH_P3_1³ *. _lh_vecnorm_LH_P3_1³)) +. (_lh_vecnorm_LH_P3_2³ *. _lh_vecnorm_LH_P3_2³)))
//│ 		in [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0³ /. len³) (_lh_vecnorm_LH_P3_1³ /. len³) (_lh_vecnorm_LH_P3_2³ /. len³)] len³]}
//│ def vecnorm_lh_₂(_lh_vecnorm_arg1²) = case _lh_vecnorm_arg1² of {
//│ 	LH_P3 _lh_vecnorm_LH_P3_0² _lh_vecnorm_LH_P3_1² _lh_vecnorm_LH_P3_2² => 
//│ 		let len² = sqrt⁰((((_lh_vecnorm_LH_P3_0² *. _lh_vecnorm_LH_P3_0²) +. (_lh_vecnorm_LH_P3_1² *. _lh_vecnorm_LH_P3_1²)) +. (_lh_vecnorm_LH_P3_2² *. _lh_vecnorm_LH_P3_2²)))
//│ 		in [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0² /. len²) (_lh_vecnorm_LH_P3_1² /. len²) (_lh_vecnorm_LH_P3_2² /. len²)] len²]}
//│ def vecnorm_lh_₃(_lh_vecnorm_arg1¹) = case _lh_vecnorm_arg1¹ of {
//│ 	LH_P3 _lh_vecnorm_LH_P3_0¹ _lh_vecnorm_LH_P3_1¹ _lh_vecnorm_LH_P3_2¹ => 
//│ 		let len¹ = sqrt⁰((((_lh_vecnorm_LH_P3_0¹ *. _lh_vecnorm_LH_P3_0¹) +. (_lh_vecnorm_LH_P3_1¹ *. _lh_vecnorm_LH_P3_1¹)) +. (_lh_vecnorm_LH_P3_2¹ *. _lh_vecnorm_LH_P3_2¹)))
//│ 		in [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0¹ /. len¹) (_lh_vecnorm_LH_P3_1¹ /. len¹) (_lh_vecnorm_LH_P3_2¹ /. len¹)] len¹]}
//│ def vecnorm_lh_₄(_lh_vecnorm_arg1⁰) = case _lh_vecnorm_arg1⁰ of {
//│ 	LH_P3 _lh_vecnorm_LH_P3_0⁰ _lh_vecnorm_LH_P3_1⁰ _lh_vecnorm_LH_P3_2⁰ => 
//│ 		let len⁰ = sqrt⁰((((_lh_vecnorm_LH_P3_0⁰ *. _lh_vecnorm_LH_P3_0⁰) +. (_lh_vecnorm_LH_P3_1⁰ *. _lh_vecnorm_LH_P3_1⁰)) +. (_lh_vecnorm_LH_P3_2⁰ *. _lh_vecnorm_LH_P3_2⁰)))
//│ 		in [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0⁰ /. len⁰) (_lh_vecnorm_LH_P3_1⁰ /. len⁰) (_lh_vecnorm_LH_P3_2⁰ /. len⁰)] len⁰]}
//│ def vecscale_lh_₁(_lh_vecscale_arg1¹³, _lh_vecscale_arg2¹³) = case _lh_vecscale_arg1¹³ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹³ _lh_vecscale_LH_P3_1¹³ _lh_vecscale_LH_P3_2¹³ => [LH_P3 (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_0¹³) (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_1¹³) (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_2¹³)]}
//│ def vecscale_lh_₁₀(_lh_vecscale_arg1⁴, _lh_vecscale_arg2⁴) = case _lh_vecscale_arg1⁴ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁴ _lh_vecscale_LH_P3_1⁴ _lh_vecscale_LH_P3_2⁴ => [LH_P3 (_lh_vecscale_arg2⁴ *. _lh_vecscale_LH_P3_0⁴) (_lh_vecscale_arg2⁴ *. _lh_vecscale_LH_P3_1⁴) (_lh_vecscale_arg2⁴ *. _lh_vecscale_LH_P3_2⁴)]}
//│ def vecscale_lh_₁₁(_lh_vecscale_arg1³, _lh_vecscale_arg2³) = case _lh_vecscale_arg1³ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0³ _lh_vecscale_LH_P3_1³ _lh_vecscale_LH_P3_2³ => [LH_P3 (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_0³) (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_1³) (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_2³)]}
//│ def vecscale_lh_₁₂(_lh_vecscale_arg1², _lh_vecscale_arg2²) = case _lh_vecscale_arg1² of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0² _lh_vecscale_LH_P3_1² _lh_vecscale_LH_P3_2² => [LH_P3 (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_0²) (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_1²) (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_2²)]}
//│ def vecscale_lh_₁₃(_lh_vecscale_arg1¹, _lh_vecscale_arg2¹) = case _lh_vecscale_arg1¹ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹ _lh_vecscale_LH_P3_1¹ _lh_vecscale_LH_P3_2¹ => [LH_P3 (_lh_vecscale_arg2¹ *. _lh_vecscale_LH_P3_0¹) (_lh_vecscale_arg2¹ *. _lh_vecscale_LH_P3_1¹) (_lh_vecscale_arg2¹ *. _lh_vecscale_LH_P3_2¹)]}
//│ def vecscale_lh_₁₄(_lh_vecscale_arg1⁰, _lh_vecscale_arg2⁰) = case _lh_vecscale_arg1⁰ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁰ _lh_vecscale_LH_P3_1⁰ _lh_vecscale_LH_P3_2⁰ => [LH_P3 (_lh_vecscale_arg2⁰ *. _lh_vecscale_LH_P3_0⁰) (_lh_vecscale_arg2⁰ *. _lh_vecscale_LH_P3_1⁰) (_lh_vecscale_arg2⁰ *. _lh_vecscale_LH_P3_2⁰)]}
//│ def vecscale_lh_₂(_lh_vecscale_arg1¹², _lh_vecscale_arg2¹²) = case _lh_vecscale_arg1¹² of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹² _lh_vecscale_LH_P3_1¹² _lh_vecscale_LH_P3_2¹² => [LH_P3 (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_0¹²) (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_1¹²) (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_2¹²)]}
//│ def vecscale_lh_₃(_lh_vecscale_arg1¹¹, _lh_vecscale_arg2¹¹) = case _lh_vecscale_arg1¹¹ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹¹ _lh_vecscale_LH_P3_1¹¹ _lh_vecscale_LH_P3_2¹¹ => [LH_P3 (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_0¹¹) (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_1¹¹) (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_2¹¹)]}
//│ def vecscale_lh_₄(_lh_vecscale_arg1¹⁰, _lh_vecscale_arg2¹⁰) = case _lh_vecscale_arg1¹⁰ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹⁰ _lh_vecscale_LH_P3_1¹⁰ _lh_vecscale_LH_P3_2¹⁰ => [LH_P3 (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_0¹⁰) (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_1¹⁰) (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_2¹⁰)]}
//│ def vecscale_lh_₅(_lh_vecscale_arg1⁹, _lh_vecscale_arg2⁹) = case _lh_vecscale_arg1⁹ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁹ _lh_vecscale_LH_P3_1⁹ _lh_vecscale_LH_P3_2⁹ => [LH_P3 (_lh_vecscale_arg2⁹ *. _lh_vecscale_LH_P3_0⁹) (_lh_vecscale_arg2⁹ *. _lh_vecscale_LH_P3_1⁹) (_lh_vecscale_arg2⁹ *. _lh_vecscale_LH_P3_2⁹)]}
//│ def vecscale_lh_₆(_lh_vecscale_arg1⁸, _lh_vecscale_arg2⁸) = case _lh_vecscale_arg1⁸ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁸ _lh_vecscale_LH_P3_1⁸ _lh_vecscale_LH_P3_2⁸ => [LH_P3 (_lh_vecscale_arg2⁸ *. _lh_vecscale_LH_P3_0⁸) (_lh_vecscale_arg2⁸ *. _lh_vecscale_LH_P3_1⁸) (_lh_vecscale_arg2⁸ *. _lh_vecscale_LH_P3_2⁸)]}
//│ def vecscale_lh_₇(_lh_vecscale_arg1⁷, _lh_vecscale_arg2⁷) = case _lh_vecscale_arg1⁷ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁷ _lh_vecscale_LH_P3_1⁷ _lh_vecscale_LH_P3_2⁷ => [LH_P3 (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_0⁷) (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_1⁷) (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_2⁷)]}
//│ def vecscale_lh_₈(_lh_vecscale_arg1⁶, _lh_vecscale_arg2⁶) = case _lh_vecscale_arg1⁶ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁶ _lh_vecscale_LH_P3_1⁶ _lh_vecscale_LH_P3_2⁶ => [LH_P3 (_lh_vecscale_arg2⁶ *. _lh_vecscale_LH_P3_0⁶) (_lh_vecscale_arg2⁶ *. _lh_vecscale_LH_P3_1⁶) (_lh_vecscale_arg2⁶ *. _lh_vecscale_LH_P3_2⁶)]}
//│ def vecscale_lh_₉(_lh_vecscale_arg1⁵, _lh_vecscale_arg2⁵) = case _lh_vecscale_arg1⁵ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁵ _lh_vecscale_LH_P3_1⁵ _lh_vecscale_LH_P3_2⁵ => [LH_P3 (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_0⁵) (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_1⁵) (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_2⁵)]}
//│ def vecsub_lh_₁(_lh_vecsub_arg1², _lh_vecsub_arg2²) = case _lh_vecsub_arg1² of {
//│ 	LH_P3 _lh_vecsub_LH_P3_0⁴ _lh_vecsub_LH_P3_1⁴ _lh_vecsub_LH_P3_2⁴ => case _lh_vecsub_arg2² of {
//│ 		LH_P3 _lh_vecsub_LH_P3_0⁵ _lh_vecsub_LH_P3_1⁵ _lh_vecsub_LH_P3_2⁵ => [LH_P3 (_lh_vecsub_LH_P3_0⁴ -. _lh_vecsub_LH_P3_0⁵) (_lh_vecsub_LH_P3_1⁴ -. _lh_vecsub_LH_P3_1⁵) (_lh_vecsub_LH_P3_2⁴ -. _lh_vecsub_LH_P3_2⁵)]}}
//│ def vecsub_lh_₂(_lh_vecsub_arg1¹, _lh_vecsub_arg2¹) = case _lh_vecsub_arg1¹ of {
//│ 	LH_P3 _lh_vecsub_LH_P3_0² _lh_vecsub_LH_P3_1² _lh_vecsub_LH_P3_2² => case _lh_vecsub_arg2¹ of {
//│ 		LH_P3 _lh_vecsub_LH_P3_0³ _lh_vecsub_LH_P3_1³ _lh_vecsub_LH_P3_2³ => [LH_P3 (_lh_vecsub_LH_P3_0² -. _lh_vecsub_LH_P3_0³) (_lh_vecsub_LH_P3_1² -. _lh_vecsub_LH_P3_1³) (_lh_vecsub_LH_P3_2² -. _lh_vecsub_LH_P3_2³)]}}
//│ def vecsub_lh_₃(_lh_vecsub_arg1⁰, _lh_vecsub_arg2⁰) = case _lh_vecsub_arg1⁰ of {
//│ 	LH_P3 _lh_vecsub_LH_P3_0⁰ _lh_vecsub_LH_P3_1⁰ _lh_vecsub_LH_P3_2⁰ => case _lh_vecsub_arg2⁰ of {
//│ 		LH_P3 _lh_vecsub_LH_P3_0¹ _lh_vecsub_LH_P3_1¹ _lh_vecsub_LH_P3_2¹ => [LH_P3 (_lh_vecsub_LH_P3_0⁰ -. _lh_vecsub_LH_P3_0¹) (_lh_vecsub_LH_P3_1⁰ -. _lh_vecsub_LH_P3_1¹) (_lh_vecsub_LH_P3_2⁰ -. _lh_vecsub_LH_P3_2¹)]}}
//│ def vecsum_lh_₁(_lh_vecsum_arg1⁰) = foldr_lh_₂(vecadd_lh_₉, [LH_P3 0.0 0.0 0.0], _lh_vecsum_arg1⁰)
//│ def vup_lh_₁ = [LH_P3 0.0 0.0 1.0]
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec foldr_lh__d1 f_3 i_1 ls_8 =
//│ 		  (match ls_8 with
//│ 		    | `LH_C(h_1_1, t_1_2) -> 
//│ 		      ((f_3 h_1_1) (((foldr_lh__d1 f_3) i_1) t_1_2))
//│ 		    | `LH_N -> 
//│ 		      i_1);;
//│ 		let rec hash_lh__d1 _lh_hash_arg1_0 =
//│ 		  (let rec u8_0 = (fun x_0 -> 
//│ 		    ((fun _lh_funcomp_x_0 -> 
//│ 		      (int_of_float ((fun x_1 -> 
//│ 		        (255.0 *. x_1)) _lh_funcomp_x_0))) x_0)) in
//│ 		    (((foldr_lh__d1 (fun rgb_0 acc_0 -> 
//│ 		      (let rec _lh_matchIdent_1_8 = rgb_0 in
//│ 		        (match _lh_matchIdent_1_8 with
//│ 		          | `LH_P3(_lh_hash_LH_P3_0_0, _lh_hash_LH_P3_1_0, _lh_hash_LH_P3_2_0) -> 
//│ 		            ((((u8_0 _lh_hash_LH_P3_0_0) + ((u8_0 _lh_hash_LH_P3_1_0) * 7)) + ((u8_0 _lh_hash_LH_P3_2_0) * 23)) + (acc_0 * 61)))))) 0) _lh_hash_arg1_0));;
//│ 		let rec map_lh__d1 f_4 ls_9 =
//│ 		  (match ls_9 with
//│ 		    | `LH_C(h_1_2, t_1_3) -> 
//│ 		      (`LH_C((f_4 h_1_2), ((map_lh__d1 f_4) t_1_3)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec snd_lh__d1 _lh_snd_arg1_0 =
//│ 		  (match _lh_snd_arg1_0 with
//│ 		    | `LH_P2(_lh_snd_LH_P2_0_0, _lh_snd_LH_P2_1_0) -> 
//│ 		      _lh_snd_LH_P2_1_0);;
//│ 		let rec enumFromTo_lh__d1 a_1 b_1 =
//│ 		  (if (a_1 <= b_1) then
//│ 		    (`LH_C(a_1, ((enumFromTo_lh__d1 (a_1 + 1)) b_1)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec vecscale_lh__d2 _lh_vecscale_arg1_1_2 _lh_vecscale_arg2_1_2 =
//│ 		  (match _lh_vecscale_arg1_1_2 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_1_2, _lh_vecscale_LH_P3_1_1_2, _lh_vecscale_LH_P3_2_1_2) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_1_2 *. _lh_vecscale_LH_P3_0_1_2), (_lh_vecscale_arg2_1_2 *. _lh_vecscale_LH_P3_1_1_2), (_lh_vecscale_arg2_1_2 *. _lh_vecscale_LH_P3_2_1_2))));;
//│ 		let rec mappend_lh__d3 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_0, t_1) -> 
//│ 		      (`LH_C(h_0, ((mappend_lh__d3 t_1) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec head_lh__d5 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_1, t_2) -> 
//│ 		      h_1
//│ 		    | `LH_N -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec specularsurf_lh__d1 _lh_specularsurf_arg1_1 =
//│ 		  (head_lh__d5 ((mappend_lh__d3 (let rec _lh_listcomp_fun_6 = (fun _lh_listcomp_fun_para_6 -> 
//│ 		    (match _lh_listcomp_fun_para_6 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_6, _lh_listcomp_fun_ls_t_6) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_6 with
//│ 		          | `Specular(_lh_specularsurf_Specular_0_1) -> 
//│ 		            (`LH_C(_lh_specularsurf_Specular_0_1, (_lh_listcomp_fun_6 _lh_listcomp_fun_ls_t_6)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_6 _lh_listcomp_fun_ls_t_6))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_6 _lh_specularsurf_arg1_1))) (`LH_C((`LH_P3(0.0, 0.0, 0.0)), (`LH_N)))));;
//│ 		let rec vecscale_lh__d7 _lh_vecscale_arg1_7 _lh_vecscale_arg2_7 =
//│ 		  (match _lh_vecscale_arg1_7 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_7, _lh_vecscale_LH_P3_1_7, _lh_vecscale_LH_P3_2_7) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_7 *. _lh_vecscale_LH_P3_0_7), (_lh_vecscale_arg2_7 *. _lh_vecscale_LH_P3_1_7), (_lh_vecscale_arg2_7 *. _lh_vecscale_LH_P3_2_7))));;
//│ 		let rec reflectsurf_lh__d1 _lh_reflectsurf_arg1_0 =
//│ 		  (head_lh__d5 ((mappend_lh__d3 (let rec _lh_listcomp_fun_4 = (fun _lh_listcomp_fun_para_4 -> 
//│ 		    (match _lh_listcomp_fun_para_4 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_4, _lh_listcomp_fun_ls_t_4) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_4 with
//│ 		          | `Reflect(_lh_reflectsurf_Reflect_0_0) -> 
//│ 		            (`LH_C(_lh_reflectsurf_Reflect_0_0, (_lh_listcomp_fun_4 _lh_listcomp_fun_ls_t_4)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_4 _lh_listcomp_fun_ls_t_4))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_4 _lh_reflectsurf_arg1_0))) (`LH_C(0.0, (`LH_N)))));;
//│ 		let rec vecdot_lh__d6 _lh_vecdot_arg1_0 _lh_vecdot_arg2_0 =
//│ 		  (match _lh_vecdot_arg1_0 with
//│ 		    | `LH_P3(_lh_vecdot_LH_P3_0_0, _lh_vecdot_LH_P3_1_0, _lh_vecdot_LH_P3_2_0) -> 
//│ 		      (match _lh_vecdot_arg2_0 with
//│ 		        | `LH_P3(_lh_vecdot_LH_P3_0_1, _lh_vecdot_LH_P3_1_1, _lh_vecdot_LH_P3_2_1) -> 
//│ 		          (((_lh_vecdot_LH_P3_0_0 *. _lh_vecdot_LH_P3_0_1) +. (_lh_vecdot_LH_P3_1_0 *. _lh_vecdot_LH_P3_1_1)) +. (_lh_vecdot_LH_P3_2_0 *. _lh_vecdot_LH_P3_2_1))));;
//│ 		let rec vecmult_lh__d5 _lh_vecmult_arg1_0 _lh_vecmult_arg2_0 =
//│ 		  (match _lh_vecmult_arg1_0 with
//│ 		    | `LH_P3(_lh_vecmult_LH_P3_0_0, _lh_vecmult_LH_P3_1_0, _lh_vecmult_LH_P3_2_0) -> 
//│ 		      (match _lh_vecmult_arg2_0 with
//│ 		        | `LH_P3(_lh_vecmult_LH_P3_0_1, _lh_vecmult_LH_P3_1_1, _lh_vecmult_LH_P3_2_1) -> 
//│ 		          (`LH_P3((_lh_vecmult_LH_P3_0_0 *. _lh_vecmult_LH_P3_0_1), (_lh_vecmult_LH_P3_1_0 *. _lh_vecmult_LH_P3_1_1), (_lh_vecmult_LH_P3_2_0 *. _lh_vecmult_LH_P3_2_1)))));;
//│ 		let rec specpowsurf_lh__d1 _lh_specpowsurf_arg1_0 =
//│ 		  (head_lh__d5 ((mappend_lh__d3 (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		    (match _lh_listcomp_fun_para_0 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_0 with
//│ 		          | `Specpow(_lh_specpowsurf_Specpow_0_0) -> 
//│ 		            (`LH_C(_lh_specpowsurf_Specpow_0_0, (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_0 _lh_specpowsurf_arg1_0))) (`LH_C(8.0, (`LH_N)))));;
//│ 		let rec vecadd_lh__d9 _lh_vecadd_arg1_0 _lh_vecadd_arg2_0 =
//│ 		  (match _lh_vecadd_arg1_0 with
//│ 		    | `LH_P3(_lh_vecadd_LH_P3_0_0, _lh_vecadd_LH_P3_1_0, _lh_vecadd_LH_P3_2_0) -> 
//│ 		      (match _lh_vecadd_arg2_0 with
//│ 		        | `LH_P3(_lh_vecadd_LH_P3_0_1, _lh_vecadd_LH_P3_1_1, _lh_vecadd_LH_P3_2_1) -> 
//│ 		          (`LH_P3((_lh_vecadd_LH_P3_0_0 +. _lh_vecadd_LH_P3_0_1), (_lh_vecadd_LH_P3_1_0 +. _lh_vecadd_LH_P3_1_1), (_lh_vecadd_LH_P3_2_0 +. _lh_vecadd_LH_P3_2_1)))));;
//│ 		let rec vecscale_lh__d1_d4 _lh_vecscale_arg1_0 _lh_vecscale_arg2_0 =
//│ 		  (match _lh_vecscale_arg1_0 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_0, _lh_vecscale_LH_P3_1_0, _lh_vecscale_LH_P3_2_0) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_0 *. _lh_vecscale_LH_P3_0_0), (_lh_vecscale_arg2_0 *. _lh_vecscale_LH_P3_1_0), (_lh_vecscale_arg2_0 *. _lh_vecscale_LH_P3_2_0))));;
//│ 		let rec specularsurf_lh__d2 _lh_specularsurf_arg1_0 =
//│ 		  (head_lh__d5 ((mappend_lh__d3 (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		    (match _lh_listcomp_fun_para_2 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_2 with
//│ 		          | `Specular(_lh_specularsurf_Specular_0_0) -> 
//│ 		            (`LH_C(_lh_specularsurf_Specular_0_0, (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_2 _lh_specularsurf_arg1_0))) (`LH_C((`LH_P3(0.0, 0.0, 0.0)), (`LH_N)))));;
//│ 		let rec vecadd_lh__d8 _lh_vecadd_arg1_1 _lh_vecadd_arg2_1 =
//│ 		  (match _lh_vecadd_arg1_1 with
//│ 		    | `LH_P3(_lh_vecadd_LH_P3_0_2, _lh_vecadd_LH_P3_1_2, _lh_vecadd_LH_P3_2_2) -> 
//│ 		      (match _lh_vecadd_arg2_1 with
//│ 		        | `LH_P3(_lh_vecadd_LH_P3_0_3, _lh_vecadd_LH_P3_1_3, _lh_vecadd_LH_P3_2_3) -> 
//│ 		          (`LH_P3((_lh_vecadd_LH_P3_0_2 +. _lh_vecadd_LH_P3_0_3), (_lh_vecadd_LH_P3_1_2 +. _lh_vecadd_LH_P3_1_3), (_lh_vecadd_LH_P3_2_2 +. _lh_vecadd_LH_P3_2_3)))));;
//│ 		let rec infinity_lh__d1 =
//│ 		  100000000.0;;
//│ 		let rec fst_lh__d1 _lh_fst_arg1_0 =
//│ 		  (match _lh_fst_arg1_0 with
//│ 		    | `LH_P2(_lh_fst_LH_P2_0_0, _lh_fst_LH_P2_1_0) -> 
//│ 		      _lh_fst_LH_P2_0_0);;
//│ 		let rec vecsub_lh__d3 _lh_vecsub_arg1_0 _lh_vecsub_arg2_0 =
//│ 		  (match _lh_vecsub_arg1_0 with
//│ 		    | `LH_P3(_lh_vecsub_LH_P3_0_0, _lh_vecsub_LH_P3_1_0, _lh_vecsub_LH_P3_2_0) -> 
//│ 		      (match _lh_vecsub_arg2_0 with
//│ 		        | `LH_P3(_lh_vecsub_LH_P3_0_1, _lh_vecsub_LH_P3_1_1, _lh_vecsub_LH_P3_2_1) -> 
//│ 		          (`LH_P3((_lh_vecsub_LH_P3_0_0 -. _lh_vecsub_LH_P3_0_1), (_lh_vecsub_LH_P3_1_0 -. _lh_vecsub_LH_P3_1_1), (_lh_vecsub_LH_P3_2_0 -. _lh_vecsub_LH_P3_2_1)))));;
//│ 		let rec vecnorm_lh__d4 _lh_vecnorm_arg1_0 =
//│ 		  (match _lh_vecnorm_arg1_0 with
//│ 		    | `LH_P3(_lh_vecnorm_LH_P3_0_0, _lh_vecnorm_LH_P3_1_0, _lh_vecnorm_LH_P3_2_0) -> 
//│ 		      (let rec len_0 = (sqrt (((_lh_vecnorm_LH_P3_0_0 *. _lh_vecnorm_LH_P3_0_0) +. (_lh_vecnorm_LH_P3_1_0 *. _lh_vecnorm_LH_P3_1_0)) +. (_lh_vecnorm_LH_P3_2_0 *. _lh_vecnorm_LH_P3_2_0))) in
//│ 		        (`LH_P2((`LH_P3((_lh_vecnorm_LH_P3_0_0 /. len_0), (_lh_vecnorm_LH_P3_1_0 /. len_0), (_lh_vecnorm_LH_P3_2_0 /. len_0))), len_0))));;
//│ 		let rec lightdirection_lh__d1 _lh_lightdirection_arg1_0 _lh_lightdirection_arg2_0 =
//│ 		  (match _lh_lightdirection_arg1_0 with
//│ 		    | `Directional(_lh_lightdirection_Directional_0_0, _lh_lightdirection_Directional_1_0) -> 
//│ 		      (`LH_P2((fst_lh__d1 (vecnorm_lh__d4 _lh_lightdirection_Directional_0_0)), infinity_lh__d1))
//│ 		    | `Point(_lh_lightdirection_Point_0_0, _lh_lightdirection_Point_1_0) -> 
//│ 		      (vecnorm_lh__d4 ((vecsub_lh__d3 _lh_lightdirection_Point_0_0) _lh_lightdirection_arg2_0)));;
//│ 		let rec lightcolour_lh__d1 _lh_lightcolour_arg1_0 =
//│ 		  (match _lh_lightcolour_arg1_0 with
//│ 		    | `Directional(_lh_lightcolour_Directional_0_0, _lh_lightcolour_Directional_1_0) -> 
//│ 		      _lh_lightcolour_Directional_1_0
//│ 		    | `Point(_lh_lightcolour_Point_0_0, _lh_lightcolour_Point_1_0) -> 
//│ 		      _lh_lightcolour_Point_1_0);;
//│ 		let rec vecscale_lh__d1_d1 _lh_vecscale_arg1_3 _lh_vecscale_arg2_3 =
//│ 		  (match _lh_vecscale_arg1_3 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_3, _lh_vecscale_LH_P3_1_3, _lh_vecscale_LH_P3_2_3) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_3 *. _lh_vecscale_LH_P3_0_3), (_lh_vecscale_arg2_3 *. _lh_vecscale_LH_P3_1_3), (_lh_vecscale_arg2_3 *. _lh_vecscale_LH_P3_2_3))));;
//│ 		let rec bodysurf_lh__d2 _lh_bodysurf_arg1_0 =
//│ 		  (head_lh__d5 ((mappend_lh__d3 (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		    (match _lh_listcomp_fun_para_1 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_1 with
//│ 		          | `Body(_lh_bodysurf_Body_0_0) -> 
//│ 		            (`LH_C(_lh_bodysurf_Body_0_0, (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_1 _lh_bodysurf_arg1_0))) (`LH_C((`LH_P3(1.0, 1.0, 1.0)), (`LH_N)))));;
//│ 		let rec vecdot_lh__d5 _lh_vecdot_arg1_1 _lh_vecdot_arg2_1 =
//│ 		  (match _lh_vecdot_arg1_1 with
//│ 		    | `LH_P3(_lh_vecdot_LH_P3_0_2, _lh_vecdot_LH_P3_1_2, _lh_vecdot_LH_P3_2_2) -> 
//│ 		      (match _lh_vecdot_arg2_1 with
//│ 		        | `LH_P3(_lh_vecdot_LH_P3_0_3, _lh_vecdot_LH_P3_1_3, _lh_vecdot_LH_P3_2_3) -> 
//│ 		          (((_lh_vecdot_LH_P3_0_2 *. _lh_vecdot_LH_P3_0_3) +. (_lh_vecdot_LH_P3_1_2 *. _lh_vecdot_LH_P3_1_3)) +. (_lh_vecdot_LH_P3_2_2 *. _lh_vecdot_LH_P3_2_3))));;
//│ 		let rec head_lh__d2 ls_4 =
//│ 		  (match ls_4 with
//│ 		    | `LH_C(h_7, t_8) -> 
//│ 		      h_7
//│ 		    | `LH_N -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec foldr_lh__d2 f_1 i_0 ls_6 =
//│ 		  (match ls_6 with
//│ 		    | `LH_C(h_9, t_1_0) -> 
//│ 		      ((f_1 h_9) (((foldr_lh__d2 f_1) i_0) t_1_0))
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec tail_lh__d1 ls_5 =
//│ 		  (match ls_5 with
//│ 		    | `LH_C(h_8, t_9) -> 
//│ 		      t_9
//│ 		    | `LH_N -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec vecdot_lh__d2 _lh_vecdot_arg1_4 _lh_vecdot_arg2_4 =
//│ 		  (match _lh_vecdot_arg1_4 with
//│ 		    | `LH_P3(_lh_vecdot_LH_P3_0_8, _lh_vecdot_LH_P3_1_8, _lh_vecdot_LH_P3_2_8) -> 
//│ 		      (match _lh_vecdot_arg2_4 with
//│ 		        | `LH_P3(_lh_vecdot_LH_P3_0_9, _lh_vecdot_LH_P3_1_9, _lh_vecdot_LH_P3_2_9) -> 
//│ 		          (((_lh_vecdot_LH_P3_0_8 *. _lh_vecdot_LH_P3_0_9) +. (_lh_vecdot_LH_P3_1_8 *. _lh_vecdot_LH_P3_1_9)) +. (_lh_vecdot_LH_P3_2_8 *. _lh_vecdot_LH_P3_2_9))));;
//│ 		let rec vecdot_lh__d3 _lh_vecdot_arg1_3 _lh_vecdot_arg2_3 =
//│ 		  (match _lh_vecdot_arg1_3 with
//│ 		    | `LH_P3(_lh_vecdot_LH_P3_0_6, _lh_vecdot_LH_P3_1_6, _lh_vecdot_LH_P3_2_6) -> 
//│ 		      (match _lh_vecdot_arg2_3 with
//│ 		        | `LH_P3(_lh_vecdot_LH_P3_0_7, _lh_vecdot_LH_P3_1_7, _lh_vecdot_LH_P3_2_7) -> 
//│ 		          (((_lh_vecdot_LH_P3_0_6 *. _lh_vecdot_LH_P3_0_7) +. (_lh_vecdot_LH_P3_1_6 *. _lh_vecdot_LH_P3_1_7)) +. (_lh_vecdot_LH_P3_2_6 *. _lh_vecdot_LH_P3_2_7))));;
//│ 		let rec sphereintersect_lh__d1 _lh_sphereintersect_arg1_0 _lh_sphereintersect_arg2_0 _lh_sphereintersect_arg3_0 =
//│ 		  (match _lh_sphereintersect_arg3_0 with
//│ 		    | `Sphere(_lh_sphereintersect_Sphere_0_0, _lh_sphereintersect_Sphere_1_0, _lh_sphereintersect_Sphere_2_0) -> 
//│ 		      (let rec m_0 = ((vecsub_lh__d3 _lh_sphereintersect_arg1_0) _lh_sphereintersect_Sphere_0_0) in
//│ 		        (let rec bm_0 = ((vecdot_lh__d2 m_0) _lh_sphereintersect_arg2_0) in
//│ 		          (let rec m2_0 = ((vecdot_lh__d3 m_0) m_0) in
//│ 		            (let rec disc_1 = (((bm_0 *. bm_0) -. m2_0) +. (_lh_sphereintersect_Sphere_1_0 *. _lh_sphereintersect_Sphere_1_0)) in
//│ 		              (let rec slo_0 = ((0.0 -. bm_0) -. (sqrt disc_1)) in
//│ 		                (let rec shi_0 = ((0.0 -. bm_0) +. (sqrt disc_1)) in
//│ 		                  (if (disc_1 < 0.0) then
//│ 		                    (`LH_P2(false, 0.0))
//│ 		                  else
//│ 		                    (if (slo_0 < 0.0) then
//│ 		                      (if (shi_0 < 0.0) then
//│ 		                        (`LH_P2(false, 0.0))
//│ 		                      else
//│ 		                        (`LH_P2(true, shi_0)))
//│ 		                    else
//│ 		                      (`LH_P2(true, slo_0)))))))))));;
//│ 		let rec null_lh__d1 _lh_null_arg1_0 =
//│ 		  (match _lh_null_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_null_LH_C_0_0, _lh_null_LH_C_1_0) -> 
//│ 		      false);;
//│ 		let rec head_lh__d1 ls_7 =
//│ 		  (match ls_7 with
//│ 		    | `LH_C(h_1_0, t_1_1) -> 
//│ 		      h_1_0
//│ 		    | `LH_N -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec trace_lh__d1 _lh_trace_arg1_0 _lh_trace_arg2_0 _lh_trace_arg3_0 =
//│ 		  (let rec f_2 = (fun d1s1_0 d2s2_0 -> 
//│ 		    (let rec _lh_matchIdent_8 = d1s1_0 in
//│ 		      (match _lh_matchIdent_8 with
//│ 		        | `LH_P2(_lh_trace_LH_P2_0_0, _lh_trace_LH_P2_1_0) -> 
//│ 		          (let rec _lh_matchIdent_9 = d2s2_0 in
//│ 		            (match _lh_matchIdent_9 with
//│ 		              | `LH_P2(_lh_trace_LH_P2_0_1, _lh_trace_LH_P2_1_1) -> 
//│ 		                (if (_lh_trace_LH_P2_0_0 < _lh_trace_LH_P2_0_1) then
//│ 		                  (`LH_P2(_lh_trace_LH_P2_0_0, _lh_trace_LH_P2_1_0))
//│ 		                else
//│ 		                  (`LH_P2(_lh_trace_LH_P2_0_1, _lh_trace_LH_P2_1_1)))))))) in
//│ 		    (let rec sphmap_0 = (fun xss_0 -> 
//│ 		      (let rec _lh_matchIdent_1_0 = xss_0 in
//│ 		        (match _lh_matchIdent_1_0 with
//│ 		          | `LH_N -> 
//│ 		            (`LH_N)
//│ 		          | `LH_C(_lh_trace_LH_C_0_0, _lh_trace_LH_C_1_0) -> 
//│ 		            (let rec _lh_matchIdent_1_1 = (((sphereintersect_lh__d1 _lh_trace_arg2_0) _lh_trace_arg3_0) _lh_trace_LH_C_0_0) in
//│ 		              (match _lh_matchIdent_1_1 with
//│ 		                | `LH_P2(_lh_trace_LH_P2_0_2, _lh_trace_LH_P2_1_2) -> 
//│ 		                  (if _lh_trace_LH_P2_0_2 then
//│ 		                    (`LH_C((`LH_P2(_lh_trace_LH_P2_1_2, _lh_trace_LH_C_0_0)), (sphmap_0 _lh_trace_LH_C_1_0)))
//│ 		                  else
//│ 		                    (sphmap_0 _lh_trace_LH_C_1_0))))))) in
//│ 		      (let rec dists_0 = (sphmap_0 _lh_trace_arg1_0) in
//│ 		        (if (null_lh__d1 dists_0) then
//│ 		          (`LH_P3(false, infinity_lh__d1, (head_lh__d2 _lh_trace_arg1_0)))
//│ 		        else
//│ 		          (let rec _lh_matchIdent_1_2 = (((foldr_lh__d2 f_2) (head_lh__d1 dists_0)) (tail_lh__d1 dists_0)) in
//│ 		            (match _lh_matchIdent_1_2 with
//│ 		              | `LH_P2(_lh_trace_LH_P2_0_3, _lh_trace_LH_P2_1_3) -> 
//│ 		                (`LH_P3(true, _lh_trace_LH_P2_0_3, _lh_trace_LH_P2_1_3))))))));;
//│ 		let rec epsilon_lh__d2 =
//│ 		  0.000001;;
//│ 		let rec s2_lh__d2 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec s2_lh__d8 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec s2_lh__d7 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec s2_lh__d5 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec s2_lh__d6 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec s2_lh__d1_d0 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec s2_lh__d4 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec s2_lh__d9 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec s2_lh__d3 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec s2_lh__d1 =
//│ 		  (`LH_C((`Ambient((`LH_P3(0.035, 0.0325, 0.025)))), (`LH_C((`Diffuse((`LH_P3(0.5, 0.45, 0.35)))), (`LH_C((`Specular((`LH_P3(0.8, 0.8, 0.8)))), (`LH_C((`Specpow(3.0)), (`LH_C((`Reflect(0.5)), (`LH_N)))))))))));;
//│ 		let rec testspheres_lh__d1 =
//│ 		  (`LH_C((`Sphere((`LH_P3(0.0, 0.0, 0.0)), 0.5, s2_lh__d6)), (`LH_C((`Sphere((`LH_P3(0.272166, 0.272166, 0.544331)), 0.166667, s2_lh__d3)), (`LH_C((`Sphere((`LH_P3(0.643951, 0.172546, 0.0)), 0.166667, s2_lh__d9)), (`LH_C((`Sphere((`LH_P3(0.172546, 0.643951, 0.0)), 0.166667, s2_lh__d5)), (`LH_C((`Sphere((`LH_P3((0.0 -. 0.371785), 0.0996195, 0.544331)), 0.166667, s2_lh__d7)), (`LH_C((`Sphere((`LH_P3((0.0 -. 0.471405), 0.471405, 0.0)), 0.166667, s2_lh__d2)), (`LH_C((`Sphere((`LH_P3((0.0 -. 0.643951), (0.0 -. 0.172546), 0.0)), 0.166667, s2_lh__d1)), (`LH_C((`Sphere((`LH_P3(0.0996195, (0.0 -. 0.371785), 0.544331)), 0.166667, s2_lh__d4)), (`LH_C((`Sphere((`LH_P3((0.0 -. 0.172546), (0.0 -. 0.643951), 0.0)), 0.166667, s2_lh__d8)), (`LH_C((`Sphere((`LH_P3(0.471405, (0.0 -. 0.471405), 0.0)), 0.166667, s2_lh__d1_d0)), (`LH_N)))))))))))))))))))));;
//│ 		let rec shadowed_lh__d1 _lh_shadowed_arg1_0 _lh_shadowed_arg2_0 _lh_shadowed_arg3_0 =
//│ 		  (let rec _lh_matchIdent_1 = (((trace_lh__d1 testspheres_lh__d1) ((vecadd_lh__d9 _lh_shadowed_arg1_0) ((vecscale_lh__d1_d4 _lh_shadowed_arg2_0) epsilon_lh__d2))) _lh_shadowed_arg2_0) in
//│ 		    (match _lh_matchIdent_1 with
//│ 		      | `LH_P3(_lh_shadowed_LH_P3_0_0, _lh_shadowed_LH_P3_1_0, _lh_shadowed_LH_P3_2_0) -> 
//│ 		        (if (not _lh_shadowed_LH_P3_0_0) then
//│ 		          (`LH_P2(false, _lh_shadowed_arg3_0))
//│ 		        else
//│ 		          (`LH_P2(true, _lh_shadowed_arg3_0)))));;
//│ 		let rec vecscale_lh__d1_d3 _lh_vecscale_arg1_1 _lh_vecscale_arg2_1 =
//│ 		  (match _lh_vecscale_arg1_1 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_1, _lh_vecscale_LH_P3_1_1, _lh_vecscale_LH_P3_2_1) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_1 *. _lh_vecscale_LH_P3_0_1), (_lh_vecscale_arg2_1 *. _lh_vecscale_LH_P3_1_1), (_lh_vecscale_arg2_1 *. _lh_vecscale_LH_P3_2_1))));;
//│ 		let rec vecmult_lh__d4 _lh_vecmult_arg1_1 _lh_vecmult_arg2_1 =
//│ 		  (match _lh_vecmult_arg1_1 with
//│ 		    | `LH_P3(_lh_vecmult_LH_P3_0_2, _lh_vecmult_LH_P3_1_2, _lh_vecmult_LH_P3_2_2) -> 
//│ 		      (match _lh_vecmult_arg2_1 with
//│ 		        | `LH_P3(_lh_vecmult_LH_P3_0_3, _lh_vecmult_LH_P3_1_3, _lh_vecmult_LH_P3_2_3) -> 
//│ 		          (`LH_P3((_lh_vecmult_LH_P3_0_2 *. _lh_vecmult_LH_P3_0_3), (_lh_vecmult_LH_P3_1_2 *. _lh_vecmult_LH_P3_1_3), (_lh_vecmult_LH_P3_2_2 *. _lh_vecmult_LH_P3_2_3)))));;
//│ 		let rec vecmult_lh__d3 _lh_vecmult_arg1_2 _lh_vecmult_arg2_2 =
//│ 		  (match _lh_vecmult_arg1_2 with
//│ 		    | `LH_P3(_lh_vecmult_LH_P3_0_4, _lh_vecmult_LH_P3_1_4, _lh_vecmult_LH_P3_2_4) -> 
//│ 		      (match _lh_vecmult_arg2_2 with
//│ 		        | `LH_P3(_lh_vecmult_LH_P3_0_5, _lh_vecmult_LH_P3_1_5, _lh_vecmult_LH_P3_2_5) -> 
//│ 		          (`LH_P3((_lh_vecmult_LH_P3_0_4 *. _lh_vecmult_LH_P3_0_5), (_lh_vecmult_LH_P3_1_4 *. _lh_vecmult_LH_P3_1_5), (_lh_vecmult_LH_P3_2_4 *. _lh_vecmult_LH_P3_2_5)))));;
//│ 		let rec diffusesurf_lh__d1 _lh_diffusesurf_arg1_0 =
//│ 		  (head_lh__d5 ((mappend_lh__d3 (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		    (match _lh_listcomp_fun_para_3 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_3 with
//│ 		          | `Diffuse(_lh_diffusesurf_Diffuse_0_0) -> 
//│ 		            (`LH_C(_lh_diffusesurf_Diffuse_0_0, (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_3 _lh_diffusesurf_arg1_0))) (`LH_C((`LH_P3(0.0, 0.0, 0.0)), (`LH_N)))));;
//│ 		let rec vecscale_lh__d1_d2 _lh_vecscale_arg1_2 _lh_vecscale_arg2_2 =
//│ 		  (match _lh_vecscale_arg1_2 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_2, _lh_vecscale_LH_P3_1_2, _lh_vecscale_LH_P3_2_2) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_2 *. _lh_vecscale_LH_P3_0_2), (_lh_vecscale_arg2_2 *. _lh_vecscale_LH_P3_1_2), (_lh_vecscale_arg2_2 *. _lh_vecscale_LH_P3_2_2))));;
//│ 		let rec vecmult_lh__d2 _lh_vecmult_arg1_3 _lh_vecmult_arg2_3 =
//│ 		  (match _lh_vecmult_arg1_3 with
//│ 		    | `LH_P3(_lh_vecmult_LH_P3_0_6, _lh_vecmult_LH_P3_1_6, _lh_vecmult_LH_P3_2_6) -> 
//│ 		      (match _lh_vecmult_arg2_3 with
//│ 		        | `LH_P3(_lh_vecmult_LH_P3_0_7, _lh_vecmult_LH_P3_1_7, _lh_vecmult_LH_P3_2_7) -> 
//│ 		          (`LH_P3((_lh_vecmult_LH_P3_0_6 *. _lh_vecmult_LH_P3_0_7), (_lh_vecmult_LH_P3_1_6 *. _lh_vecmult_LH_P3_1_7), (_lh_vecmult_LH_P3_2_6 *. _lh_vecmult_LH_P3_2_7)))));;
//│ 		let rec vecdot_lh__d4 _lh_vecdot_arg1_2 _lh_vecdot_arg2_2 =
//│ 		  (match _lh_vecdot_arg1_2 with
//│ 		    | `LH_P3(_lh_vecdot_LH_P3_0_4, _lh_vecdot_LH_P3_1_4, _lh_vecdot_LH_P3_2_4) -> 
//│ 		      (match _lh_vecdot_arg2_2 with
//│ 		        | `LH_P3(_lh_vecdot_LH_P3_0_5, _lh_vecdot_LH_P3_1_5, _lh_vecdot_LH_P3_2_5) -> 
//│ 		          (((_lh_vecdot_LH_P3_0_4 *. _lh_vecdot_LH_P3_0_5) +. (_lh_vecdot_LH_P3_1_4 *. _lh_vecdot_LH_P3_1_5)) +. (_lh_vecdot_LH_P3_2_4 *. _lh_vecdot_LH_P3_2_5))));;
//│ 		let rec lightray_lh__d1 _lh_lightray_arg1_0 _lh_lightray_arg2_0 _lh_lightray_arg3_0 _lh_lightray_arg4_0 _lh_lightray_arg5_0 =
//│ 		  (let rec _lh_matchIdent_5 = ((lightdirection_lh__d1 _lh_lightray_arg1_0) _lh_lightray_arg2_0) in
//│ 		    (match _lh_matchIdent_5 with
//│ 		      | `LH_P2(_lh_lightray_LH_P2_0_0, _lh_lightray_LH_P2_1_0) -> 
//│ 		        (let rec cosangle_0 = ((vecdot_lh__d5 _lh_lightray_LH_P2_0_0) _lh_lightray_arg3_0) in
//│ 		          (let rec _lh_matchIdent_6 = (((shadowed_lh__d1 _lh_lightray_arg2_0) _lh_lightray_LH_P2_0_0) (lightcolour_lh__d1 _lh_lightray_arg1_0)) in
//│ 		            (match _lh_matchIdent_6 with
//│ 		              | `LH_P2(_lh_lightray_LH_P2_0_1, _lh_lightray_LH_P2_1_1) -> 
//│ 		                (if _lh_lightray_LH_P2_0_1 then
//│ 		                  (`LH_P3(0.0, 0.0, 0.0))
//│ 		                else
//│ 		                  (let rec diff_0 = (diffusesurf_lh__d1 _lh_lightray_arg5_0) in
//│ 		                    (let rec spow_0 = (specpowsurf_lh__d1 _lh_lightray_arg5_0) in
//│ 		                      (if (cosangle_0 <= 0.0) then
//│ 		                        (let rec bodycol_0 = (bodysurf_lh__d2 _lh_lightray_arg5_0) in
//│ 		                          (let rec cosalpha_0 = (0.0 -. ((vecdot_lh__d6 _lh_lightray_arg4_0) _lh_lightray_LH_P2_0_0)) in
//│ 		                            (let rec diffcont_0 = ((vecmult_lh__d5 ((vecscale_lh__d1_d3 diff_0) (0.0 -. cosangle_0))) _lh_lightray_LH_P2_1_1) in
//│ 		                              (let rec speccont_0 = (if (cosalpha_0 <= 0.0) then
//│ 		                                (`LH_P3(0.0, 0.0, 0.0))
//│ 		                              else
//│ 		                                ((vecmult_lh__d3 ((vecscale_lh__d1_d2 bodycol_0) (cosalpha_0 ** spow_0))) _lh_lightray_LH_P2_1_1)) in
//│ 		                                ((vecadd_lh__d9 diffcont_0) speccont_0)))))
//│ 		                      else
//│ 		                        (let rec spec_0 = (specularsurf_lh__d2 _lh_lightray_arg5_0) in
//│ 		                          (let rec cosalpha_1 = ((vecdot_lh__d4 _lh_lightray_arg4_0) _lh_lightray_LH_P2_0_0) in
//│ 		                            (let rec diffcont_1 = ((vecmult_lh__d4 ((vecscale_lh__d1_d4 diff_0) cosangle_0)) _lh_lightray_LH_P2_1_1) in
//│ 		                              (let rec speccont_1 = (if (cosalpha_1 <= 0.0) then
//│ 		                                (`LH_P3(0.0, 0.0, 0.0))
//│ 		                              else
//│ 		                                ((vecmult_lh__d2 ((vecscale_lh__d1_d1 spec_0) (cosalpha_1 ** spow_0))) _lh_lightray_LH_P2_1_1)) in
//│ 		                                ((vecadd_lh__d8 diffcont_1) speccont_1))))))))))))));;
//│ 		let rec vecadd_lh__d6 _lh_vecadd_arg1_3 _lh_vecadd_arg2_3 =
//│ 		  (match _lh_vecadd_arg1_3 with
//│ 		    | `LH_P3(_lh_vecadd_LH_P3_0_6, _lh_vecadd_LH_P3_1_6, _lh_vecadd_LH_P3_2_6) -> 
//│ 		      (match _lh_vecadd_arg2_3 with
//│ 		        | `LH_P3(_lh_vecadd_LH_P3_0_7, _lh_vecadd_LH_P3_1_7, _lh_vecadd_LH_P3_2_7) -> 
//│ 		          (`LH_P3((_lh_vecadd_LH_P3_0_6 +. _lh_vecadd_LH_P3_0_7), (_lh_vecadd_LH_P3_1_6 +. _lh_vecadd_LH_P3_1_7), (_lh_vecadd_LH_P3_2_6 +. _lh_vecadd_LH_P3_2_7)))));;
//│ 		let rec is_zerovector_lh__d1 _lh_is_zerovector_arg1_0 =
//│ 		  (match _lh_is_zerovector_arg1_0 with
//│ 		    | `LH_P3(_lh_is_zerovector_LH_P3_0_0, _lh_is_zerovector_LH_P3_1_0, _lh_is_zerovector_LH_P3_2_0) -> 
//│ 		      (((_lh_is_zerovector_LH_P3_0_0 < epsilon_lh__d2) && (_lh_is_zerovector_LH_P3_1_0 < epsilon_lh__d2)) && (_lh_is_zerovector_LH_P3_2_0 < epsilon_lh__d2)));;
//│ 		let rec vecdot_lh__d1 _lh_vecdot_arg1_5 _lh_vecdot_arg2_5 =
//│ 		  (match _lh_vecdot_arg1_5 with
//│ 		    | `LH_P3(_lh_vecdot_LH_P3_0_1_0, _lh_vecdot_LH_P3_1_1_0, _lh_vecdot_LH_P3_2_1_0) -> 
//│ 		      (match _lh_vecdot_arg2_5 with
//│ 		        | `LH_P3(_lh_vecdot_LH_P3_0_1_1, _lh_vecdot_LH_P3_1_1_1, _lh_vecdot_LH_P3_2_1_1) -> 
//│ 		          (((_lh_vecdot_LH_P3_0_1_0 *. _lh_vecdot_LH_P3_0_1_1) +. (_lh_vecdot_LH_P3_1_1_0 *. _lh_vecdot_LH_P3_1_1_1)) +. (_lh_vecdot_LH_P3_2_1_0 *. _lh_vecdot_LH_P3_2_1_1))));;
//│ 		let rec refractray_lh__d1 _lh_refractray_arg1_0 _lh_refractray_arg2_0 _lh_refractray_arg3_0 =
//│ 		  (let rec dotp_0 = (0.0 -. ((vecdot_lh__d6 _lh_refractray_arg2_0) _lh_refractray_arg3_0)) in
//│ 		    (let rec _lh_matchIdent_0 = (if (dotp_0 < 0.0) then
//│ 		      (`LH_P3(((vecscale_lh__d1_d4 _lh_refractray_arg3_0) (0.0 -. 1.0)), (0.0 -. dotp_0), (1.0 /. _lh_refractray_arg1_0)))
//│ 		    else
//│ 		      (`LH_P3(_lh_refractray_arg3_0, dotp_0, _lh_refractray_arg1_0))) in
//│ 		      (match _lh_matchIdent_0 with
//│ 		        | `LH_P3(_lh_refractray_LH_P3_0_0, _lh_refractray_LH_P3_1_0, _lh_refractray_LH_P3_2_0) -> 
//│ 		          (let rec disc_0 = (((1.0 -. _lh_refractray_LH_P3_2_0) *. _lh_refractray_LH_P3_2_0) *. (1.0 -. (_lh_refractray_LH_P3_1_0 *. _lh_refractray_LH_P3_1_0))) in
//│ 		            (let rec t_0 = ((_lh_refractray_LH_P3_2_0 *. _lh_refractray_LH_P3_1_0) -. (sqrt disc_0)) in
//│ 		              (if (disc_0 < 0.0) then
//│ 		                (`LH_P2(true, (`LH_P3(0.0, 0.0, 0.0))))
//│ 		              else
//│ 		                (`LH_P2(false, ((vecadd_lh__d9 ((vecscale_lh__d1_d4 _lh_refractray_LH_P3_0_0) t_0)) ((vecscale_lh__d1_d4 _lh_refractray_arg2_0) _lh_refractray_LH_P3_2_0))))))))));;
//│ 		let rec background_lh__d1 =
//│ 		  (`LH_P3(0.078, 0.361, 0.753));;
//│ 		let rec ambientsurf_lh__d1 _lh_ambientsurf_arg1_0 =
//│ 		  (head_lh__d5 ((mappend_lh__d3 (let rec _lh_listcomp_fun_7 = (fun _lh_listcomp_fun_para_7 -> 
//│ 		    (match _lh_listcomp_fun_para_7 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_7, _lh_listcomp_fun_ls_t_7) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_7 with
//│ 		          | `Ambient(_lh_ambientsurf_Ambient_0_0) -> 
//│ 		            (`LH_C(_lh_ambientsurf_Ambient_0_0, (_lh_listcomp_fun_7 _lh_listcomp_fun_ls_t_7)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_7 _lh_listcomp_fun_ls_t_7))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_7 _lh_ambientsurf_arg1_0))) (`LH_C((`LH_P3(0.0, 0.0, 0.0)), (`LH_N)))));;
//│ 		let rec vecadd_lh__d4 _lh_vecadd_arg1_5 _lh_vecadd_arg2_5 =
//│ 		  (match _lh_vecadd_arg1_5 with
//│ 		    | `LH_P3(_lh_vecadd_LH_P3_0_1_0, _lh_vecadd_LH_P3_1_1_0, _lh_vecadd_LH_P3_2_1_0) -> 
//│ 		      (match _lh_vecadd_arg2_5 with
//│ 		        | `LH_P3(_lh_vecadd_LH_P3_0_1_1, _lh_vecadd_LH_P3_1_1_1, _lh_vecadd_LH_P3_2_1_1) -> 
//│ 		          (`LH_P3((_lh_vecadd_LH_P3_0_1_0 +. _lh_vecadd_LH_P3_0_1_1), (_lh_vecadd_LH_P3_1_1_0 +. _lh_vecadd_LH_P3_1_1_1), (_lh_vecadd_LH_P3_2_1_0 +. _lh_vecadd_LH_P3_2_1_1)))));;
//│ 		let rec head_lh__d4 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_2, t_3) -> 
//│ 		      h_2
//│ 		    | `LH_N -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec mappend_lh__d2 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_3, t_4) -> 
//│ 		      (`LH_C(h_3, ((mappend_lh__d2 t_4) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec bodysurf_lh__d1 _lh_bodysurf_arg1_1 =
//│ 		  (head_lh__d4 ((mappend_lh__d2 (let rec _lh_listcomp_fun_8 = (fun _lh_listcomp_fun_para_8 -> 
//│ 		    (match _lh_listcomp_fun_para_8 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_8, _lh_listcomp_fun_ls_t_8) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_8 with
//│ 		          | `Body(_lh_bodysurf_Body_0_1) -> 
//│ 		            (`LH_C(_lh_bodysurf_Body_0_1, (_lh_listcomp_fun_8 _lh_listcomp_fun_ls_t_8)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_8 _lh_listcomp_fun_ls_t_8))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_8 _lh_bodysurf_arg1_1))) (`LH_C((`LH_P3(1.0, 1.0, 1.0)), (`LH_N)))));;
//│ 		let rec spherenormal_lh__d1 _lh_spherenormal_arg1_0 _lh_spherenormal_arg2_0 =
//│ 		  (match _lh_spherenormal_arg2_0 with
//│ 		    | `Sphere(_lh_spherenormal_Sphere_0_0, _lh_spherenormal_Sphere_1_0, _lh_spherenormal_Sphere_2_0) -> 
//│ 		      ((vecscale_lh__d1_d4 ((vecsub_lh__d3 _lh_spherenormal_arg1_0) _lh_spherenormal_Sphere_0_0)) (1.0 /. _lh_spherenormal_Sphere_1_0)));;
//│ 		let rec spheresurf_lh__d1 _lh_spheresurf_arg1_0 =
//│ 		  (match _lh_spheresurf_arg1_0 with
//│ 		    | `Sphere(_lh_spheresurf_Sphere_0_0, _lh_spheresurf_Sphere_1_0, _lh_spheresurf_Sphere_2_0) -> 
//│ 		      _lh_spheresurf_Sphere_2_0);;
//│ 		let rec vecscale_lh__d8 _lh_vecscale_arg1_6 _lh_vecscale_arg2_6 =
//│ 		  (match _lh_vecscale_arg1_6 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_6, _lh_vecscale_LH_P3_1_6, _lh_vecscale_LH_P3_2_6) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_6 *. _lh_vecscale_LH_P3_0_6), (_lh_vecscale_arg2_6 *. _lh_vecscale_LH_P3_1_6), (_lh_vecscale_arg2_6 *. _lh_vecscale_LH_P3_2_6))));;
//│ 		let rec vecscale_lh__d9 _lh_vecscale_arg1_5 _lh_vecscale_arg2_5 =
//│ 		  (match _lh_vecscale_arg1_5 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_5, _lh_vecscale_LH_P3_1_5, _lh_vecscale_LH_P3_2_5) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_5 *. _lh_vecscale_LH_P3_0_5), (_lh_vecscale_arg2_5 *. _lh_vecscale_LH_P3_1_5), (_lh_vecscale_arg2_5 *. _lh_vecscale_LH_P3_2_5))));;
//│ 		let rec map_lh__d2 f_0 ls_3 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_6, t_7) -> 
//│ 		      (`LH_C((f_0 h_6), ((map_lh__d2 f_0) t_7)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec vecadd_lh__d7 _lh_vecadd_arg1_2 _lh_vecadd_arg2_2 =
//│ 		  (match _lh_vecadd_arg1_2 with
//│ 		    | `LH_P3(_lh_vecadd_LH_P3_0_4, _lh_vecadd_LH_P3_1_4, _lh_vecadd_LH_P3_2_4) -> 
//│ 		      (match _lh_vecadd_arg2_2 with
//│ 		        | `LH_P3(_lh_vecadd_LH_P3_0_5, _lh_vecadd_LH_P3_1_5, _lh_vecadd_LH_P3_2_5) -> 
//│ 		          (`LH_P3((_lh_vecadd_LH_P3_0_4 +. _lh_vecadd_LH_P3_0_5), (_lh_vecadd_LH_P3_1_4 +. _lh_vecadd_LH_P3_1_5), (_lh_vecadd_LH_P3_2_4 +. _lh_vecadd_LH_P3_2_5)))));;
//│ 		let rec refractsurf_lh__d1 _lh_refractsurf_arg1_0 =
//│ 		  (head_lh__d5 ((mappend_lh__d3 (let rec _lh_listcomp_fun_5 = (fun _lh_listcomp_fun_para_5 -> 
//│ 		    (match _lh_listcomp_fun_para_5 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_5, _lh_listcomp_fun_ls_t_5) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_5 with
//│ 		          | `Refract(_lh_refractsurf_Refract_0_0) -> 
//│ 		            (`LH_C(_lh_refractsurf_Refract_0_0, (_lh_listcomp_fun_5 _lh_listcomp_fun_ls_t_5)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_5 _lh_listcomp_fun_ls_t_5))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_5 _lh_refractsurf_arg1_0))) (`LH_C(1.0, (`LH_N)))));;
//│ 		let rec vecadd_lh__d5 _lh_vecadd_arg1_4 _lh_vecadd_arg2_4 =
//│ 		  (match _lh_vecadd_arg1_4 with
//│ 		    | `LH_P3(_lh_vecadd_LH_P3_0_8, _lh_vecadd_LH_P3_1_8, _lh_vecadd_LH_P3_2_8) -> 
//│ 		      (match _lh_vecadd_arg2_4 with
//│ 		        | `LH_P3(_lh_vecadd_LH_P3_0_9, _lh_vecadd_LH_P3_1_9, _lh_vecadd_LH_P3_2_9) -> 
//│ 		          (`LH_P3((_lh_vecadd_LH_P3_0_8 +. _lh_vecadd_LH_P3_0_9), (_lh_vecadd_LH_P3_1_8 +. _lh_vecadd_LH_P3_1_9), (_lh_vecadd_LH_P3_2_8 +. _lh_vecadd_LH_P3_2_9)))));;
//│ 		let rec vecscale_lh__d1_d0 _lh_vecscale_arg1_4 _lh_vecscale_arg2_4 =
//│ 		  (match _lh_vecscale_arg1_4 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_4, _lh_vecscale_LH_P3_1_4, _lh_vecscale_LH_P3_2_4) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_4 *. _lh_vecscale_LH_P3_0_4), (_lh_vecscale_arg2_4 *. _lh_vecscale_LH_P3_1_4), (_lh_vecscale_arg2_4 *. _lh_vecscale_LH_P3_2_4))));;
//│ 		let rec vecmult_lh__d1 _lh_vecmult_arg1_4 _lh_vecmult_arg2_4 =
//│ 		  (match _lh_vecmult_arg1_4 with
//│ 		    | `LH_P3(_lh_vecmult_LH_P3_0_8, _lh_vecmult_LH_P3_1_8, _lh_vecmult_LH_P3_2_8) -> 
//│ 		      (match _lh_vecmult_arg2_4 with
//│ 		        | `LH_P3(_lh_vecmult_LH_P3_0_9, _lh_vecmult_LH_P3_1_9, _lh_vecmult_LH_P3_2_9) -> 
//│ 		          (`LH_P3((_lh_vecmult_LH_P3_0_8 *. _lh_vecmult_LH_P3_0_9), (_lh_vecmult_LH_P3_1_8 *. _lh_vecmult_LH_P3_1_9), (_lh_vecmult_LH_P3_2_8 *. _lh_vecmult_LH_P3_2_9)))));;
//│ 		let rec epsilon_lh__d1 =
//│ 		  0.000001;;
//│ 		let rec vecsum_lh__d1 _lh_vecsum_arg1_0 =
//│ 		  (((foldr_lh__d2 vecadd_lh__d9) (`LH_P3(0.0, 0.0, 0.0))) _lh_vecsum_arg1_0);;
//│ 		let rec mappend_lh__d1 xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_4, t_5) -> 
//│ 		      (`LH_C(h_4, ((mappend_lh__d1 t_5) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec head_lh__d3 ls_2 =
//│ 		  (match ls_2 with
//│ 		    | `LH_C(h_5, t_6) -> 
//│ 		      h_5
//│ 		    | `LH_N -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec transmitsurf_lh__d1 _lh_transmitsurf_arg1_0 =
//│ 		  (head_lh__d3 ((mappend_lh__d1 (let rec _lh_listcomp_fun_9 = (fun _lh_listcomp_fun_para_9 -> 
//│ 		    (match _lh_listcomp_fun_para_9 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_9, _lh_listcomp_fun_ls_t_9) -> 
//│ 		        (match _lh_listcomp_fun_ls_h_9 with
//│ 		          | `Transmit(_lh_transmitsurf_Transmit_0_0) -> 
//│ 		            (`LH_C(_lh_transmitsurf_Transmit_0_0, (_lh_listcomp_fun_9 _lh_listcomp_fun_ls_t_9)))
//│ 		          | _ -> 
//│ 		            (_lh_listcomp_fun_9 _lh_listcomp_fun_ls_t_9))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_9 _lh_transmitsurf_arg1_0))) (`LH_C(0.0, (`LH_N)))));;
//│ 		let rec reflectray_lh__d1 _lh_reflectray_arg1_0 _lh_reflectray_arg2_0 _lh_reflectray_arg3_0 _lh_reflectray_arg4_0 _lh_reflectray_arg5_0 _lh_reflectray_arg6_0 =
//│ 		  (let rec newcontrib_0 = ((vecmult_lh__d5 _lh_reflectray_arg4_0) _lh_reflectray_arg5_0) in
//│ 		    (let rec nearpos_0 = ((vecadd_lh__d9 _lh_reflectray_arg1_0) ((vecscale_lh__d1_d4 _lh_reflectray_arg2_0) epsilon_lh__d2)) in
//│ 		      (let rec _lh_matchIdent_2 = (((trace_lh__d1 testspheres_lh__d1) nearpos_0) _lh_reflectray_arg2_0) in
//│ 		        (match _lh_matchIdent_2 with
//│ 		          | `LH_P3(_lh_reflectray_LH_P3_0_0, _lh_reflectray_LH_P3_1_0, _lh_reflectray_LH_P3_2_0) -> 
//│ 		            (let rec newcol_0 = (if _lh_reflectray_LH_P3_0_0 then
//│ 		              ((((((shade_lh__d1 _lh_reflectray_arg3_0) _lh_reflectray_LH_P3_2_0) nearpos_0) _lh_reflectray_arg2_0) _lh_reflectray_LH_P3_1_0) newcontrib_0)
//│ 		            else
//│ 		              background_lh__d1) in
//│ 		              (if (is_zerovector_lh__d1 newcontrib_0) then
//│ 		                _lh_reflectray_arg6_0
//│ 		              else
//│ 		                ((vecadd_lh__d9 _lh_reflectray_arg6_0) ((vecmult_lh__d5 newcol_0) _lh_reflectray_arg4_0))))))))
//│ 		and
//│ 		shade_lh__d1 _lh_shade_arg1_0 _lh_shade_arg2_0 _lh_shade_arg3_0 _lh_shade_arg4_0 _lh_shade_arg5_0 _lh_shade_arg6_0 =
//│ 		  (let rec hitpos_0 = ((vecadd_lh__d6 _lh_shade_arg3_0) ((vecscale_lh__d7 _lh_shade_arg4_0) _lh_shade_arg5_0)) in
//│ 		    (let rec ambientlight_0 = (`LH_P3(1.0, 1.0, 1.0)) in
//│ 		      (let rec surf_0 = (spheresurf_lh__d1 _lh_shade_arg2_0) in
//│ 		        (let rec amb_0 = ((vecmult_lh__d1 ambientlight_0) (ambientsurf_lh__d1 surf_0)) in
//│ 		          (let rec norm_0 = ((spherenormal_lh__d1 hitpos_0) _lh_shade_arg2_0) in
//│ 		            (let rec refl_0 = ((vecadd_lh__d7 _lh_shade_arg4_0) ((vecscale_lh__d9 norm_0) ((0.0 -. 2.0) *. ((vecdot_lh__d1 _lh_shade_arg4_0) norm_0)))) in
//│ 		              (let rec diff_1 = (vecsum_lh__d1 ((map_lh__d2 (fun l_0 -> 
//│ 		                (((((lightray_lh__d1 l_0) hitpos_0) norm_0) refl_0) surf_0))) _lh_shade_arg1_0)) in
//│ 		                (let rec transmitted_0 = (transmitsurf_lh__d1 surf_0) in
//│ 		                  (let rec simple_0 = ((vecadd_lh__d5 amb_0) diff_1) in
//│ 		                    (let rec trintensity_0 = ((vecscale_lh__d8 (bodysurf_lh__d1 surf_0)) transmitted_0) in
//│ 		                      (let rec _lh_matchIdent_7 = (if (transmitted_0 < epsilon_lh__d1) then
//│ 		                        (`LH_P2(false, simple_0))
//│ 		                      else
//│ 		                        ((((((((transmitray_lh__d1 _lh_shade_arg1_0) simple_0) hitpos_0) _lh_shade_arg4_0) (refractsurf_lh__d1 surf_0)) trintensity_0) _lh_shade_arg6_0) norm_0)) in
//│ 		                        (match _lh_matchIdent_7 with
//│ 		                          | `LH_P2(_lh_shade_LH_P2_0_0, _lh_shade_LH_P2_1_0) -> 
//│ 		                            (let rec reflsurf_0 = ((vecscale_lh__d1_d0 (specularsurf_lh__d1 surf_0)) (reflectsurf_lh__d1 surf_0)) in
//│ 		                              (let rec reflectiv_0 = (if _lh_shade_LH_P2_0_0 then
//│ 		                                ((vecadd_lh__d4 trintensity_0) reflsurf_0)
//│ 		                              else
//│ 		                                reflsurf_0) in
//│ 		                                (let rec rcol_0 = (if (is_zerovector_lh__d1 reflectiv_0) then
//│ 		                                  _lh_shade_LH_P2_1_0
//│ 		                                else
//│ 		                                  ((((((reflectray_lh__d1 hitpos_0) refl_0) _lh_shade_arg1_0) reflectiv_0) _lh_shade_arg6_0) _lh_shade_LH_P2_1_0)) in
//│ 		                                  rcol_0)))))))))))))))
//│ 		and
//│ 		transmitray_lh__d1 _lh_transmitray_arg1_0 _lh_transmitray_arg2_0 _lh_transmitray_arg3_0 _lh_transmitray_arg4_0 _lh_transmitray_arg5_0 _lh_transmitray_arg6_0 _lh_transmitray_arg7_0 _lh_transmitray_arg8_0 =
//│ 		  (let rec newcontrib_1 = ((vecmult_lh__d5 _lh_transmitray_arg6_0) _lh_transmitray_arg7_0) in
//│ 		    (let rec _lh_matchIdent_3 = (((refractray_lh__d1 _lh_transmitray_arg5_0) _lh_transmitray_arg4_0) _lh_transmitray_arg8_0) in
//│ 		      (match _lh_matchIdent_3 with
//│ 		        | `LH_P2(_lh_transmitray_LH_P2_0_0, _lh_transmitray_LH_P2_1_0) -> 
//│ 		          (let rec nearpos_1 = ((vecadd_lh__d9 _lh_transmitray_arg3_0) ((vecscale_lh__d1_d4 _lh_transmitray_LH_P2_1_0) epsilon_lh__d2)) in
//│ 		            (let rec _lh_matchIdent_4 = (((trace_lh__d1 testspheres_lh__d1) nearpos_1) _lh_transmitray_LH_P2_1_0) in
//│ 		              (match _lh_matchIdent_4 with
//│ 		                | `LH_P3(_lh_transmitray_LH_P3_0_0, _lh_transmitray_LH_P3_1_0, _lh_transmitray_LH_P3_2_0) -> 
//│ 		                  (let rec newcol_1 = (if _lh_transmitray_LH_P3_0_0 then
//│ 		                    ((((((shade_lh__d1 _lh_transmitray_arg1_0) _lh_transmitray_LH_P3_2_0) nearpos_1) _lh_transmitray_LH_P2_1_0) _lh_transmitray_LH_P3_1_0) newcontrib_1)
//│ 		                  else
//│ 		                    background_lh__d1) in
//│ 		                    (if (is_zerovector_lh__d1 newcontrib_1) then
//│ 		                      (`LH_P2(false, _lh_transmitray_arg2_0))
//│ 		                    else
//│ 		                      (`LH_P2(false, ((vecadd_lh__d9 ((vecmult_lh__d5 newcol_1) _lh_transmitray_arg6_0)) _lh_transmitray_arg2_0)))))))))));;
//│ 		let rec vecadd_lh__d1 _lh_vecadd_arg1_8 _lh_vecadd_arg2_8 =
//│ 		  (match _lh_vecadd_arg1_8 with
//│ 		    | `LH_P3(_lh_vecadd_LH_P3_0_1_6, _lh_vecadd_LH_P3_1_1_6, _lh_vecadd_LH_P3_2_1_6) -> 
//│ 		      (match _lh_vecadd_arg2_8 with
//│ 		        | `LH_P3(_lh_vecadd_LH_P3_0_1_7, _lh_vecadd_LH_P3_1_1_7, _lh_vecadd_LH_P3_2_1_7) -> 
//│ 		          (`LH_P3((_lh_vecadd_LH_P3_0_1_6 +. _lh_vecadd_LH_P3_0_1_7), (_lh_vecadd_LH_P3_1_1_6 +. _lh_vecadd_LH_P3_1_1_7), (_lh_vecadd_LH_P3_2_1_6 +. _lh_vecadd_LH_P3_2_1_7)))));;
//│ 		let rec lookfrom_lh__d2 =
//│ 		  (`LH_P3(2.1, 1.3, 1.7));;
//│ 		let rec vecadd_lh__d2 _lh_vecadd_arg1_7 _lh_vecadd_arg2_7 =
//│ 		  (match _lh_vecadd_arg1_7 with
//│ 		    | `LH_P3(_lh_vecadd_LH_P3_0_1_4, _lh_vecadd_LH_P3_1_1_4, _lh_vecadd_LH_P3_2_1_4) -> 
//│ 		      (match _lh_vecadd_arg2_7 with
//│ 		        | `LH_P3(_lh_vecadd_LH_P3_0_1_5, _lh_vecadd_LH_P3_1_1_5, _lh_vecadd_LH_P3_2_1_5) -> 
//│ 		          (`LH_P3((_lh_vecadd_LH_P3_0_1_4 +. _lh_vecadd_LH_P3_0_1_5), (_lh_vecadd_LH_P3_1_1_4 +. _lh_vecadd_LH_P3_1_1_5), (_lh_vecadd_LH_P3_2_1_4 +. _lh_vecadd_LH_P3_2_1_5)))));;
//│ 		let rec vecscale_lh__d1 _lh_vecscale_arg1_1_3 _lh_vecscale_arg2_1_3 =
//│ 		  (match _lh_vecscale_arg1_1_3 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_1_3, _lh_vecscale_LH_P3_1_1_3, _lh_vecscale_LH_P3_2_1_3) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_1_3 *. _lh_vecscale_LH_P3_0_1_3), (_lh_vecscale_arg2_1_3 *. _lh_vecscale_LH_P3_1_1_3), (_lh_vecscale_arg2_1_3 *. _lh_vecscale_LH_P3_2_1_3))));;
//│ 		let rec vecnorm_lh__d1 _lh_vecnorm_arg1_3 =
//│ 		  (match _lh_vecnorm_arg1_3 with
//│ 		    | `LH_P3(_lh_vecnorm_LH_P3_0_3, _lh_vecnorm_LH_P3_1_3, _lh_vecnorm_LH_P3_2_3) -> 
//│ 		      (let rec len_3 = (sqrt (((_lh_vecnorm_LH_P3_0_3 *. _lh_vecnorm_LH_P3_0_3) +. (_lh_vecnorm_LH_P3_1_3 *. _lh_vecnorm_LH_P3_1_3)) +. (_lh_vecnorm_LH_P3_2_3 *. _lh_vecnorm_LH_P3_2_3))) in
//│ 		        (`LH_P2((`LH_P3((_lh_vecnorm_LH_P3_0_3 /. len_3), (_lh_vecnorm_LH_P3_1_3 /. len_3), (_lh_vecnorm_LH_P3_2_3 /. len_3))), len_3))));;
//│ 		let rec tracepixel_lh__d1 _lh_tracepixel_arg1_0 _lh_tracepixel_arg2_0 _lh_tracepixel_arg3_0 _lh_tracepixel_arg4_0 _lh_tracepixel_arg5_0 _lh_tracepixel_arg6_0 _lh_tracepixel_arg7_0 =
//│ 		  (let rec pos_0 = lookfrom_lh__d2 in
//│ 		    (let rec _lh_matchIdent_1_6 = (vecnorm_lh__d1 ((vecadd_lh__d1 ((vecadd_lh__d2 _lh_tracepixel_arg5_0) ((vecscale_lh__d1 _lh_tracepixel_arg6_0) _lh_tracepixel_arg3_0))) ((vecscale_lh__d2 _lh_tracepixel_arg7_0) _lh_tracepixel_arg4_0))) in
//│ 		      (match _lh_matchIdent_1_6 with
//│ 		        | `LH_P2(_lh_tracepixel_LH_P2_0_0, _lh_tracepixel_LH_P2_1_0) -> 
//│ 		          (let rec _lh_matchIdent_1_7 = (((trace_lh__d1 _lh_tracepixel_arg1_0) pos_0) _lh_tracepixel_LH_P2_0_0) in
//│ 		            (match _lh_matchIdent_1_7 with
//│ 		              | `LH_P3(_lh_tracepixel_LH_P3_0_0, _lh_tracepixel_LH_P3_1_0, _lh_tracepixel_LH_P3_2_0) -> 
//│ 		                (if _lh_tracepixel_LH_P3_0_0 then
//│ 		                  ((((((shade_lh__d1 _lh_tracepixel_arg2_0) _lh_tracepixel_LH_P3_2_0) pos_0) _lh_tracepixel_LH_P2_0_0) _lh_tracepixel_LH_P3_1_0) (`LH_P3(1.0, 1.0, 1.0)))
//│ 		                else
//│ 		                  background_lh__d1))))));;
//│ 		let rec fov_lh__d1 =
//│ 		  45.0;;
//│ 		let rec lookat_lh__d1 =
//│ 		  (`LH_P3(0.0, 0.0, 0.0));;
//│ 		let rec lookfrom_lh__d1 =
//│ 		  (`LH_P3(2.1, 1.3, 1.7));;
//│ 		let rec testlights_lh__d1 =
//│ 		  (`LH_C((`Point((`LH_P3(4.0, 3.0, 2.0)), (`LH_P3(0.288675, 0.288675, 0.288675)))), (`LH_C((`Point((`LH_P3(1.0, (0.0 -. 4.0), 4.0)), (`LH_P3(0.288675, 0.288675, 0.288675)))), (`LH_C((`Point((`LH_P3((0.0 -. 3.0), 1.0, 5.0)), (`LH_P3(0.288675, 0.288675, 0.288675)))), (`LH_N)))))));;
//│ 		let rec vup_lh__d1 =
//│ 		  (`LH_P3(0.0, 0.0, 1.0));;
//│ 		let rec veccross_lh__d2 _lh_veccross_arg1_0 _lh_veccross_arg2_0 =
//│ 		  (match _lh_veccross_arg1_0 with
//│ 		    | `LH_P3(_lh_veccross_LH_P3_0_0, _lh_veccross_LH_P3_1_0, _lh_veccross_LH_P3_2_0) -> 
//│ 		      (match _lh_veccross_arg2_0 with
//│ 		        | `LH_P3(_lh_veccross_LH_P3_0_1, _lh_veccross_LH_P3_1_1, _lh_veccross_LH_P3_2_1) -> 
//│ 		          (`LH_P3(((_lh_veccross_LH_P3_1_0 *. _lh_veccross_LH_P3_2_1) -. (_lh_veccross_LH_P3_1_1 *. _lh_veccross_LH_P3_2_0)), ((_lh_veccross_LH_P3_2_0 *. _lh_veccross_LH_P3_0_1) -. (_lh_veccross_LH_P3_2_1 *. _lh_veccross_LH_P3_0_0)), ((_lh_veccross_LH_P3_0_0 *. _lh_veccross_LH_P3_1_1) -. (_lh_veccross_LH_P3_0_1 *. _lh_veccross_LH_P3_1_0))))));;
//│ 		let rec vecscale_lh__d5 _lh_vecscale_arg1_9 _lh_vecscale_arg2_9 =
//│ 		  (match _lh_vecscale_arg1_9 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_9, _lh_vecscale_LH_P3_1_9, _lh_vecscale_LH_P3_2_9) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_9 *. _lh_vecscale_LH_P3_0_9), (_lh_vecscale_arg2_9 *. _lh_vecscale_LH_P3_1_9), (_lh_vecscale_arg2_9 *. _lh_vecscale_LH_P3_2_9))));;
//│ 		let rec vecscale_lh__d3 _lh_vecscale_arg1_1_1 _lh_vecscale_arg2_1_1 =
//│ 		  (match _lh_vecscale_arg1_1_1 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_1_1, _lh_vecscale_LH_P3_1_1_1, _lh_vecscale_LH_P3_2_1_1) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_1_1 *. _lh_vecscale_LH_P3_0_1_1), (_lh_vecscale_arg2_1_1 *. _lh_vecscale_LH_P3_1_1_1), (_lh_vecscale_arg2_1_1 *. _lh_vecscale_LH_P3_2_1_1))));;
//│ 		let rec vecscale_lh__d4 _lh_vecscale_arg1_1_0 _lh_vecscale_arg2_1_0 =
//│ 		  (match _lh_vecscale_arg1_1_0 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_1_0, _lh_vecscale_LH_P3_1_1_0, _lh_vecscale_LH_P3_2_1_0) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_1_0 *. _lh_vecscale_LH_P3_0_1_0), (_lh_vecscale_arg2_1_0 *. _lh_vecscale_LH_P3_1_1_0), (_lh_vecscale_arg2_1_0 *. _lh_vecscale_LH_P3_2_1_0))));;
//│ 		let rec vecadd_lh__d3 _lh_vecadd_arg1_6 _lh_vecadd_arg2_6 =
//│ 		  (match _lh_vecadd_arg1_6 with
//│ 		    | `LH_P3(_lh_vecadd_LH_P3_0_1_2, _lh_vecadd_LH_P3_1_1_2, _lh_vecadd_LH_P3_2_1_2) -> 
//│ 		      (match _lh_vecadd_arg2_6 with
//│ 		        | `LH_P3(_lh_vecadd_LH_P3_0_1_3, _lh_vecadd_LH_P3_1_1_3, _lh_vecadd_LH_P3_2_1_3) -> 
//│ 		          (`LH_P3((_lh_vecadd_LH_P3_0_1_2 +. _lh_vecadd_LH_P3_0_1_3), (_lh_vecadd_LH_P3_1_1_2 +. _lh_vecadd_LH_P3_1_1_3), (_lh_vecadd_LH_P3_2_1_2 +. _lh_vecadd_LH_P3_2_1_3)))));;
//│ 		let rec vecsub_lh__d2 _lh_vecsub_arg1_1 _lh_vecsub_arg2_1 =
//│ 		  (match _lh_vecsub_arg1_1 with
//│ 		    | `LH_P3(_lh_vecsub_LH_P3_0_2, _lh_vecsub_LH_P3_1_2, _lh_vecsub_LH_P3_2_2) -> 
//│ 		      (match _lh_vecsub_arg2_1 with
//│ 		        | `LH_P3(_lh_vecsub_LH_P3_0_3, _lh_vecsub_LH_P3_1_3, _lh_vecsub_LH_P3_2_3) -> 
//│ 		          (`LH_P3((_lh_vecsub_LH_P3_0_2 -. _lh_vecsub_LH_P3_0_3), (_lh_vecsub_LH_P3_1_2 -. _lh_vecsub_LH_P3_1_3), (_lh_vecsub_LH_P3_2_2 -. _lh_vecsub_LH_P3_2_3)))));;
//│ 		let rec pi_lh__d2 =
//│ 		  3.141592653589793;;
//│ 		let rec dtor_lh__d2 _lh_dtor_arg1_0 =
//│ 		  ((_lh_dtor_arg1_0 *. pi_lh__d2) /. 180.0);;
//│ 		let rec vecnorm_lh__d2 _lh_vecnorm_arg1_2 =
//│ 		  (match _lh_vecnorm_arg1_2 with
//│ 		    | `LH_P3(_lh_vecnorm_LH_P3_0_2, _lh_vecnorm_LH_P3_1_2, _lh_vecnorm_LH_P3_2_2) -> 
//│ 		      (let rec len_2 = (sqrt (((_lh_vecnorm_LH_P3_0_2 *. _lh_vecnorm_LH_P3_0_2) +. (_lh_vecnorm_LH_P3_1_2 *. _lh_vecnorm_LH_P3_1_2)) +. (_lh_vecnorm_LH_P3_2_2 *. _lh_vecnorm_LH_P3_2_2))) in
//│ 		        (`LH_P2((`LH_P3((_lh_vecnorm_LH_P3_0_2 /. len_2), (_lh_vecnorm_LH_P3_1_2 /. len_2), (_lh_vecnorm_LH_P3_2_2 /. len_2))), len_2))));;
//│ 		let rec veccross_lh__d1 _lh_veccross_arg1_1 _lh_veccross_arg2_1 =
//│ 		  (match _lh_veccross_arg1_1 with
//│ 		    | `LH_P3(_lh_veccross_LH_P3_0_2, _lh_veccross_LH_P3_1_2, _lh_veccross_LH_P3_2_2) -> 
//│ 		      (match _lh_veccross_arg2_1 with
//│ 		        | `LH_P3(_lh_veccross_LH_P3_0_3, _lh_veccross_LH_P3_1_3, _lh_veccross_LH_P3_2_3) -> 
//│ 		          (`LH_P3(((_lh_veccross_LH_P3_1_2 *. _lh_veccross_LH_P3_2_3) -. (_lh_veccross_LH_P3_1_3 *. _lh_veccross_LH_P3_2_2)), ((_lh_veccross_LH_P3_2_2 *. _lh_veccross_LH_P3_0_3) -. (_lh_veccross_LH_P3_2_3 *. _lh_veccross_LH_P3_0_2)), ((_lh_veccross_LH_P3_0_2 *. _lh_veccross_LH_P3_1_3) -. (_lh_veccross_LH_P3_0_3 *. _lh_veccross_LH_P3_1_2))))));;
//│ 		let rec pi_lh__d1 =
//│ 		  3.141592653589793;;
//│ 		let rec dtor_lh__d1 _lh_dtor_arg1_1 =
//│ 		  ((_lh_dtor_arg1_1 *. pi_lh__d1) /. 180.0);;
//│ 		let rec vecnorm_lh__d3 _lh_vecnorm_arg1_1 =
//│ 		  (match _lh_vecnorm_arg1_1 with
//│ 		    | `LH_P3(_lh_vecnorm_LH_P3_0_1, _lh_vecnorm_LH_P3_1_1, _lh_vecnorm_LH_P3_2_1) -> 
//│ 		      (let rec len_1 = (sqrt (((_lh_vecnorm_LH_P3_0_1 *. _lh_vecnorm_LH_P3_0_1) +. (_lh_vecnorm_LH_P3_1_1 *. _lh_vecnorm_LH_P3_1_1)) +. (_lh_vecnorm_LH_P3_2_1 *. _lh_vecnorm_LH_P3_2_1))) in
//│ 		        (`LH_P2((`LH_P3((_lh_vecnorm_LH_P3_0_1 /. len_1), (_lh_vecnorm_LH_P3_1_1 /. len_1), (_lh_vecnorm_LH_P3_2_1 /. len_1))), len_1))));;
//│ 		let rec vecscale_lh__d6 _lh_vecscale_arg1_8 _lh_vecscale_arg2_8 =
//│ 		  (match _lh_vecscale_arg1_8 with
//│ 		    | `LH_P3(_lh_vecscale_LH_P3_0_8, _lh_vecscale_LH_P3_1_8, _lh_vecscale_LH_P3_2_8) -> 
//│ 		      (`LH_P3((_lh_vecscale_arg2_8 *. _lh_vecscale_LH_P3_0_8), (_lh_vecscale_arg2_8 *. _lh_vecscale_LH_P3_1_8), (_lh_vecscale_arg2_8 *. _lh_vecscale_LH_P3_2_8))));;
//│ 		let rec vecsub_lh__d1 _lh_vecsub_arg1_2 _lh_vecsub_arg2_2 =
//│ 		  (match _lh_vecsub_arg1_2 with
//│ 		    | `LH_P3(_lh_vecsub_LH_P3_0_4, _lh_vecsub_LH_P3_1_4, _lh_vecsub_LH_P3_2_4) -> 
//│ 		      (match _lh_vecsub_arg2_2 with
//│ 		        | `LH_P3(_lh_vecsub_LH_P3_0_5, _lh_vecsub_LH_P3_1_5, _lh_vecsub_LH_P3_2_5) -> 
//│ 		          (`LH_P3((_lh_vecsub_LH_P3_0_4 -. _lh_vecsub_LH_P3_0_5), (_lh_vecsub_LH_P3_1_4 -. _lh_vecsub_LH_P3_1_5), (_lh_vecsub_LH_P3_2_4 -. _lh_vecsub_LH_P3_2_5)))));;
//│ 		let rec camparams_lh__d1 _lh_camparams_arg1_0 _lh_camparams_arg2_0 _lh_camparams_arg3_0 _lh_camparams_arg4_0 _lh_camparams_arg5_0 =
//│ 		  (let rec initfirstray_0 = ((vecsub_lh__d1 _lh_camparams_arg2_0) _lh_camparams_arg1_0) in
//│ 		    (let rec _lh_matchIdent_1_3 = (vecnorm_lh__d2 initfirstray_0) in
//│ 		      (match _lh_matchIdent_1_3 with
//│ 		        | `LH_P2(_lh_camparams_LH_P2_0_0, _lh_camparams_LH_P2_1_0) -> 
//│ 		          (let rec _lh_matchIdent_1_4 = (vecnorm_lh__d3 ((veccross_lh__d2 _lh_camparams_LH_P2_0_0) _lh_camparams_arg3_0)) in
//│ 		            (match _lh_matchIdent_1_4 with
//│ 		              | `LH_P2(_lh_camparams_LH_P2_0_1, _lh_camparams_LH_P2_1_1) -> 
//│ 		                (let rec _lh_matchIdent_1_5 = (vecnorm_lh__d4 ((veccross_lh__d1 _lh_camparams_LH_P2_0_1) _lh_camparams_LH_P2_0_0)) in
//│ 		                  (match _lh_matchIdent_1_5 with
//│ 		                    | `LH_P2(_lh_camparams_LH_P2_0_2, _lh_camparams_LH_P2_1_2) -> 
//│ 		                      (let rec xfov_0 = _lh_camparams_arg4_0 in
//│ 		                        (let rec yfov_0 = _lh_camparams_arg4_0 in
//│ 		                          (let rec xwinsize_0 = _lh_camparams_arg5_0 in
//│ 		                            (let rec ywinsize_0 = _lh_camparams_arg5_0 in
//│ 		                              (let rec magx_0 = (((2.0 *. _lh_camparams_LH_P2_1_0) *. (tan (dtor_lh__d1 (xfov_0 /. 2.0)))) /. xwinsize_0) in
//│ 		                                (let rec magy_0 = (((2.0 *. _lh_camparams_LH_P2_1_0) *. (tan (dtor_lh__d2 (yfov_0 /. 2.0)))) /. ywinsize_0) in
//│ 		                                  (let rec scrnx_0 = ((vecscale_lh__d6 _lh_camparams_LH_P2_0_1) magx_0) in
//│ 		                                    (let rec scrny_0 = ((vecscale_lh__d5 _lh_camparams_LH_P2_0_2) magy_0) in
//│ 		                                      (let rec firstray_0 = ((vecsub_lh__d2 initfirstray_0) ((vecadd_lh__d3 ((vecscale_lh__d3 scrnx_0) (0.5 *. xwinsize_0))) ((vecscale_lh__d4 scrny_0) (0.5 *. ywinsize_0)))) in
//│ 		                                        (`LH_P3(firstray_0, scrnx_0, scrny_0))))))))))))))))));;
//│ 		let rec enumFromTo_lh__d2 a_0 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, ((enumFromTo_lh__d2 (a_0 + 1)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec ray_lh__d1 _lh_ray_arg1_0 =
//│ 		  (let rec lights_0 = testlights_lh__d1 in
//│ 		    (let rec _lh_matchIdent_1_9 = (((((camparams_lh__d1 lookfrom_lh__d1) lookat_lh__d1) vup_lh__d1) fov_lh__d1) (float_of_int _lh_ray_arg1_0)) in
//│ 		      (match _lh_matchIdent_1_9 with
//│ 		        | `LH_P3(_lh_ray_LH_P3_0_0, _lh_ray_LH_P3_1_0, _lh_ray_LH_P3_2_0) -> 
//│ 		          (let rec f_5 = (fun i_2 j_0 -> 
//│ 		            (((((((tracepixel_lh__d1 testspheres_lh__d1) lights_0) (float_of_int i_2)) (float_of_int j_0)) _lh_ray_LH_P3_0_0) _lh_ray_LH_P3_1_0) _lh_ray_LH_P3_2_0)) in
//│ 		            (let rec _lh_listcomp_fun_1_0 = (fun _lh_listcomp_fun_para_1_0 -> 
//│ 		              (match _lh_listcomp_fun_para_1_0 with
//│ 		                | `LH_C(_lh_listcomp_fun_ls_h_1_0, _lh_listcomp_fun_ls_t_1_0) -> 
//│ 		                  (let rec _lh_listcomp_fun_1_1 = (fun _lh_listcomp_fun_para_1_1 -> 
//│ 		                    (match _lh_listcomp_fun_para_1_1 with
//│ 		                      | `LH_C(_lh_listcomp_fun_ls_h_1_1, _lh_listcomp_fun_ls_t_1_1) -> 
//│ 		                        (`LH_C((`LH_P2((`LH_P2(_lh_listcomp_fun_ls_h_1_0, _lh_listcomp_fun_ls_h_1_1)), ((f_5 _lh_listcomp_fun_ls_h_1_0) _lh_listcomp_fun_ls_h_1_1))), (_lh_listcomp_fun_1_1 _lh_listcomp_fun_ls_t_1_1)))
//│ 		                      | `LH_N -> 
//│ 		                        (_lh_listcomp_fun_1_0 _lh_listcomp_fun_ls_t_1_0))) in
//│ 		                    (_lh_listcomp_fun_1_1 ((enumFromTo_lh__d2 0) (_lh_ray_arg1_0 - 1))))
//│ 		                | `LH_N -> 
//│ 		                  (`LH_N))) in
//│ 		              (_lh_listcomp_fun_1_0 ((enumFromTo_lh__d1 0) (_lh_ray_arg1_0 - 1))))))));;
//│ 		let rec run_lh__d1 _lh_run_arg1_0 =
//│ 		  (hash_lh__d1 ((map_lh__d1 snd_lh__d1) (ray_lh__d1 _lh_run_arg1_0)));;
//│ 		let rec testSphere_nofib_lh__d1 _lh_testSphere_nofib_arg1_0 =
//│ 		  (run_lh__d1 _lh_testSphere_nofib_arg1_0);;
//│ 		(testSphere_nofib_lh__d1 30)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< after expansion <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_P3 vecscale_lh_₁₄(_lh_refractray_arg3⁰, (0.0 -. 1.0)) (0.0 -. dotp⁰) (1.0 /. _lh_refractray_arg1⁰)]: 38 --->
//│ 	case _lh_matchIdent⁰ of {LH_P3 _lh_refractray_LH_P3_0⁰ _lh_refractray_LH_P3_1⁰ _lh_refractray_LH_P3_2⁰ => let disc⁰ = (((1.0 -. _lh_refractray_LH_P3_2⁰) *. _lh_refractray_LH_P3_2⁰) *. (1.0 -. (_lh_refractray_LH_P3_1⁰ *. _lh_refractray_LH_P3_1⁰)))
//│ in let t⁰ = ((_lh_refractray_LH_P3_2⁰ *. _lh_refractray_LH_P3_1⁰) -. sqrt⁰(disc⁰))
//│ in if polyLt⁰(disc⁰, 0.0) then [LH_P2 [True] [LH_P3 0.0 0.0 0.0]] else [LH_P2 [False] vecadd_lh_₉(vecscale_lh_₁₄(_lh_refractray_LH_P3_0⁰, t⁰), vecscale_lh_₁₄(_lh_refractray_arg2⁰, _lh_refractray_LH_P3_2⁰))]}: 106
//│ [LH_P3 _lh_refractray_arg3⁰ dotp⁰ _lh_refractray_arg1⁰]: 42 --->
//│ 	case _lh_matchIdent⁰ of {LH_P3 _lh_refractray_LH_P3_0⁰ _lh_refractray_LH_P3_1⁰ _lh_refractray_LH_P3_2⁰ => let disc⁰ = (((1.0 -. _lh_refractray_LH_P3_2⁰) *. _lh_refractray_LH_P3_2⁰) *. (1.0 -. (_lh_refractray_LH_P3_1⁰ *. _lh_refractray_LH_P3_1⁰)))
//│ in let t⁰ = ((_lh_refractray_LH_P3_2⁰ *. _lh_refractray_LH_P3_1⁰) -. sqrt⁰(disc⁰))
//│ in if polyLt⁰(disc⁰, 0.0) then [LH_P2 [True] [LH_P3 0.0 0.0 0.0]] else [LH_P2 [False] vecadd_lh_₉(vecscale_lh_₁₄(_lh_refractray_LH_P3_0⁰, t⁰), vecscale_lh_₁₄(_lh_refractray_arg2⁰, _lh_refractray_LH_P3_2⁰))]}: 106
//│ [LH_P2 [True] [LH_P3 0.0 0.0 0.0]]: 87 --->
//│ 	case _lh_matchIdent³ of {LH_P2 _lh_transmitray_LH_P2_0⁰ _lh_transmitray_LH_P2_1⁰ => let nearpos¹ = vecadd_lh_₉(_lh_transmitray_arg3⁰, vecscale_lh_₁₄(_lh_transmitray_LH_P2_1⁰, epsilon_lh_₂))
//│ in let _lh_matchIdent⁴ = trace_lh_₁(testspheres_lh_₁, nearpos¹, _lh_transmitray_LH_P2_1⁰)
//│ in case _lh_matchIdent⁴ of {LH_P3 _lh_transmitray_LH_P3_0⁰ _lh_transmitray_LH_P3_1⁰ _lh_transmitray_LH_P3_2⁰ => let newcol¹ = if _lh_transmitray_LH_P3_0⁰ then shade_lh_₁(_lh_transmitray_arg1⁰, _lh_transmitray_LH_P3_2⁰, nearpos¹, _lh_transmitray_LH_P2_1⁰, _lh_transmitray_LH_P3_1⁰, newcontrib¹) else background_lh_₁
//│ in if is_zerovector_lh_₁(newcontrib¹) then [LH_P2 [False] _lh_transmitray_arg2⁰] else [LH_P2 [False] vecadd_lh_₉(vecmult_lh_₅(newcol¹, _lh_transmitray_arg6⁰), _lh_transmitray_arg2⁰)]}}: 865
//│ [LH_P2 [False] vecadd_lh_₉(vecscale_lh_₁₄(_lh_refractray_LH_P3_0⁰, t⁰), vecscale_lh_₁₄(_lh_refractray_arg2⁰, _lh_refractray_LH_P3_2⁰))]: 102 --->
//│ 	case _lh_matchIdent³ of {LH_P2 _lh_transmitray_LH_P2_0⁰ _lh_transmitray_LH_P2_1⁰ => let nearpos¹ = vecadd_lh_₉(_lh_transmitray_arg3⁰, vecscale_lh_₁₄(_lh_transmitray_LH_P2_1⁰, epsilon_lh_₂))
//│ in let _lh_matchIdent⁴ = trace_lh_₁(testspheres_lh_₁, nearpos¹, _lh_transmitray_LH_P2_1⁰)
//│ in case _lh_matchIdent⁴ of {LH_P3 _lh_transmitray_LH_P3_0⁰ _lh_transmitray_LH_P3_1⁰ _lh_transmitray_LH_P3_2⁰ => let newcol¹ = if _lh_transmitray_LH_P3_0⁰ then shade_lh_₁(_lh_transmitray_arg1⁰, _lh_transmitray_LH_P3_2⁰, nearpos¹, _lh_transmitray_LH_P2_1⁰, _lh_transmitray_LH_P3_1⁰, newcontrib¹) else background_lh_₁
//│ in if is_zerovector_lh_₁(newcontrib¹) then [LH_P2 [False] _lh_transmitray_arg2⁰] else [LH_P2 [False] vecadd_lh_₉(vecmult_lh_₅(newcol¹, _lh_transmitray_arg6⁰), _lh_transmitray_arg2⁰)]}}: 865
//│ [LH_P3 (_lh_vecmult_LH_P3_0² *. _lh_vecmult_LH_P3_0³) (_lh_vecmult_LH_P3_1² *. _lh_vecmult_LH_P3_1³) (_lh_vecmult_LH_P3_2² *. _lh_vecmult_LH_P3_2³)]: 226 --->
//│ 	case _lh_vecadd_arg1¹ of {LH_P3 _lh_vecadd_LH_P3_0² _lh_vecadd_LH_P3_1² _lh_vecadd_LH_P3_2² => case _lh_vecadd_arg2¹ of {LH_P3 _lh_vecadd_LH_P3_0³ _lh_vecadd_LH_P3_1³ _lh_vecadd_LH_P3_2³ => [LH_P3 (_lh_vecadd_LH_P3_0² +. _lh_vecadd_LH_P3_0³) (_lh_vecadd_LH_P3_1² +. _lh_vecadd_LH_P3_1³) (_lh_vecadd_LH_P3_2² +. _lh_vecadd_LH_P3_2³)]}}: 367
//│ [LH_C _lh_specpowsurf_Specpow_0⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 239 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_N]: 244 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_C _lh_bodysurf_Body_0⁰ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 306 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_N]: 311 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_P3 (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_0²) (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_1²) (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_2²)]: 344 --->
//│ 	case _lh_vecmult_arg1² of {LH_P3 _lh_vecmult_LH_P3_0⁴ _lh_vecmult_LH_P3_1⁴ _lh_vecmult_LH_P3_2⁴ => case _lh_vecmult_arg2² of {LH_P3 _lh_vecmult_LH_P3_0⁵ _lh_vecmult_LH_P3_1⁵ _lh_vecmult_LH_P3_2⁵ => [LH_P3 (_lh_vecmult_LH_P3_0⁴ *. _lh_vecmult_LH_P3_0⁵) (_lh_vecmult_LH_P3_1⁴ *. _lh_vecmult_LH_P3_1⁵) (_lh_vecmult_LH_P3_2⁴ *. _lh_vecmult_LH_P3_2⁵)]}}: 539
//│ [LH_C _lh_specularsurf_Specular_0⁰ _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 410 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_N]: 415 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_C _lh_diffusesurf_Diffuse_0⁰ _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 440 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_N]: 445 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_P2 [False] _lh_shadowed_arg3⁰]: 510 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_lightray_LH_P2_0¹ _lh_lightray_LH_P2_1¹ => if _lh_lightray_LH_P2_0¹ then [LH_P3 0.0 0.0 0.0] else let diff⁰ = diffusesurf_lh_₁(_lh_lightray_arg5⁰)
//│ in let spow⁰ = specpowsurf_lh_₁(_lh_lightray_arg5⁰)
//│ in if polyLeq⁰(cosangle⁰, 0.0) then let bodycol⁰ = bodysurf_lh_₂(_lh_lightray_arg5⁰)
//│ in let cosalpha⁰ = (0.0 -. vecdot_lh_₆(_lh_lightray_arg4⁰, _lh_lightray_LH_P2_0⁰))
//│ in let diffcont⁰ = vecmult_lh_₅(vecscale_lh_₁₃(diff⁰, (0.0 -. cosangle⁰)), _lh_lightray_LH_P2_1¹)
//│ in let speccont⁰ = if polyLeq⁰(cosalpha⁰, 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₃(vecscale_lh_₁₂(bodycol⁰, (cosalpha⁰ ** spow⁰)), _lh_lightray_LH_P2_1¹)
//│ in vecadd_lh_₉(diffcont⁰, speccont⁰) else let spec⁰ = specularsurf_lh_₂(_lh_lightray_arg5⁰)
//│ in let cosalpha¹ = vecdot_lh_₄(_lh_lightray_arg4⁰, _lh_lightray_LH_P2_0⁰)
//│ in let diffcont¹ = vecmult_lh_₄(vecscale_lh_₁₄(diff⁰, cosangle⁰), _lh_lightray_LH_P2_1¹)
//│ in let speccont¹ = if polyLeq⁰(cosalpha¹, 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₂(vecscale_lh_₁₁(spec⁰, (cosalpha¹ ** spow⁰)), _lh_lightray_LH_P2_1¹)
//│ in vecadd_lh_₈(diffcont¹, speccont¹)}: 1427
//│ [LH_P2 [True] _lh_shadowed_arg3⁰]: 513 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_lightray_LH_P2_0¹ _lh_lightray_LH_P2_1¹ => if _lh_lightray_LH_P2_0¹ then [LH_P3 0.0 0.0 0.0] else let diff⁰ = diffusesurf_lh_₁(_lh_lightray_arg5⁰)
//│ in let spow⁰ = specpowsurf_lh_₁(_lh_lightray_arg5⁰)
//│ in if polyLeq⁰(cosangle⁰, 0.0) then let bodycol⁰ = bodysurf_lh_₂(_lh_lightray_arg5⁰)
//│ in let cosalpha⁰ = (0.0 -. vecdot_lh_₆(_lh_lightray_arg4⁰, _lh_lightray_LH_P2_0⁰))
//│ in let diffcont⁰ = vecmult_lh_₅(vecscale_lh_₁₃(diff⁰, (0.0 -. cosangle⁰)), _lh_lightray_LH_P2_1¹)
//│ in let speccont⁰ = if polyLeq⁰(cosalpha⁰, 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₃(vecscale_lh_₁₂(bodycol⁰, (cosalpha⁰ ** spow⁰)), _lh_lightray_LH_P2_1¹)
//│ in vecadd_lh_₉(diffcont⁰, speccont⁰) else let spec⁰ = specularsurf_lh_₂(_lh_lightray_arg5⁰)
//│ in let cosalpha¹ = vecdot_lh_₄(_lh_lightray_arg4⁰, _lh_lightray_LH_P2_0⁰)
//│ in let diffcont¹ = vecmult_lh_₄(vecscale_lh_₁₄(diff⁰, cosangle⁰), _lh_lightray_LH_P2_1¹)
//│ in let speccont¹ = if polyLeq⁰(cosalpha¹, 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₂(vecscale_lh_₁₁(spec⁰, (cosalpha¹ ** spow⁰)), _lh_lightray_LH_P2_1¹)
//│ in vecadd_lh_₈(diffcont¹, speccont¹)}: 1427
//│ [LH_P3 (_lh_vecmult_LH_P3_0⁶ *. _lh_vecmult_LH_P3_0⁷) (_lh_vecmult_LH_P3_1⁶ *. _lh_vecmult_LH_P3_1⁷) (_lh_vecmult_LH_P3_2⁶ *. _lh_vecmult_LH_P3_2⁷)]: 559 --->
//│ 	case _lh_vecadd_arg2¹ of {LH_P3 _lh_vecadd_LH_P3_0³ _lh_vecadd_LH_P3_1³ _lh_vecadd_LH_P3_2³ => [LH_P3 (_lh_vecadd_LH_P3_0² +. _lh_vecadd_LH_P3_0³) (_lh_vecadd_LH_P3_1² +. _lh_vecadd_LH_P3_1³) (_lh_vecadd_LH_P3_2² +. _lh_vecadd_LH_P3_2³)]}: 366
//│ [LH_P3 (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_0³) (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_1³) (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_2³)]: 607 --->
//│ 	case _lh_vecmult_arg1³ of {LH_P3 _lh_vecmult_LH_P3_0⁶ _lh_vecmult_LH_P3_1⁶ _lh_vecmult_LH_P3_2⁶ => case _lh_vecmult_arg2³ of {LH_P3 _lh_vecmult_LH_P3_0⁷ _lh_vecmult_LH_P3_1⁷ _lh_vecmult_LH_P3_2⁷ => [LH_P3 (_lh_vecmult_LH_P3_0⁶ *. _lh_vecmult_LH_P3_0⁷) (_lh_vecmult_LH_P3_1⁶ *. _lh_vecmult_LH_P3_1⁷) (_lh_vecmult_LH_P3_2⁶ *. _lh_vecmult_LH_P3_2⁷)]}}: 561
//│ [LH_C _lh_reflectsurf_Reflect_0⁰ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 778 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_N]: 783 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_P2 [False] _lh_transmitray_arg2⁰]: 848 --->
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_shade_LH_P2_0⁰ _lh_shade_LH_P2_1⁰ => let reflsurf⁰ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁰), reflectsurf_lh_₁(surf⁰))
//│ in let reflectiv⁰ = if _lh_shade_LH_P2_0⁰ then vecadd_lh_₄(trintensity⁰, reflsurf⁰) else reflsurf⁰
//│ in let rcol⁰ = if is_zerovector_lh_₁(reflectiv⁰) then _lh_shade_LH_P2_1⁰ else reflectray_lh_₁(hitpos⁰, refl⁰, _lh_shade_arg1⁰, reflectiv⁰, _lh_shade_arg6⁰, _lh_shade_LH_P2_1⁰)
//│ in rcol⁰}: 2414
//│ [LH_P2 [False] vecadd_lh_₉(vecmult_lh_₅(newcol¹, _lh_transmitray_arg6⁰), _lh_transmitray_arg2⁰)]: 859 --->
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_shade_LH_P2_0⁰ _lh_shade_LH_P2_1⁰ => let reflsurf⁰ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁰), reflectsurf_lh_₁(surf⁰))
//│ in let reflectiv⁰ = if _lh_shade_LH_P2_0⁰ then vecadd_lh_₄(trintensity⁰, reflsurf⁰) else reflsurf⁰
//│ in let rcol⁰ = if is_zerovector_lh_₁(reflectiv⁰) then _lh_shade_LH_P2_1⁰ else reflectray_lh_₁(hitpos⁰, refl⁰, _lh_shade_arg1⁰, reflectiv⁰, _lh_shade_arg6⁰, _lh_shade_LH_P2_1⁰)
//│ in rcol⁰}: 2414
//│ [LH_P3 (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_0⁵) (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_1⁵) (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_2⁵)]: 954 --->
//│ 	case _lh_vecadd_arg2² of {LH_P3 _lh_vecadd_LH_P3_0⁵ _lh_vecadd_LH_P3_1⁵ _lh_vecadd_LH_P3_2⁵ => [LH_P3 (_lh_vecadd_LH_P3_0⁴ +. _lh_vecadd_LH_P3_0⁵) (_lh_vecadd_LH_P3_1⁴ +. _lh_vecadd_LH_P3_1⁵) (_lh_vecadd_LH_P3_2⁴ +. _lh_vecadd_LH_P3_2⁵)]}: 1017
//│ [LH_C _lh_refractsurf_Refract_0⁰ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 966 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_N]: 971 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_C _lh_specularsurf_Specular_0¹ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 1046 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_N]: 1051 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_P3 (_lh_vecmult_LH_P3_0⁸ *. _lh_vecmult_LH_P3_0⁹) (_lh_vecmult_LH_P3_1⁸ *. _lh_vecmult_LH_P3_1⁹) (_lh_vecmult_LH_P3_2⁸ *. _lh_vecmult_LH_P3_2⁹)]: 1173 --->
//│ 	case _lh_vecadd_arg1⁴ of {LH_P3 _lh_vecadd_LH_P3_0⁸ _lh_vecadd_LH_P3_1⁸ _lh_vecadd_LH_P3_2⁸ => case _lh_vecadd_arg2⁴ of {LH_P3 _lh_vecadd_LH_P3_0⁹ _lh_vecadd_LH_P3_1⁹ _lh_vecadd_LH_P3_2⁹ => [LH_P3 (_lh_vecadd_LH_P3_0⁸ +. _lh_vecadd_LH_P3_0⁹) (_lh_vecadd_LH_P3_1⁸ +. _lh_vecadd_LH_P3_1⁹) (_lh_vecadd_LH_P3_2⁸ +. _lh_vecadd_LH_P3_2⁹)]}}: 1153
//│ [LH_C _lh_ambientsurf_Ambient_0⁰ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1186 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_N]: 1191 --->
//│ 	case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122
//│ [LH_P3 (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_0⁷) (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_1⁷) (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_2⁷)]: 1224 --->
//│ 	case _lh_vecadd_arg2³ of {LH_P3 _lh_vecadd_LH_P3_0⁷ _lh_vecadd_LH_P3_1⁷ _lh_vecadd_LH_P3_2⁷ => [LH_P3 (_lh_vecadd_LH_P3_0⁶ +. _lh_vecadd_LH_P3_0⁷) (_lh_vecadd_LH_P3_1⁶ +. _lh_vecadd_LH_P3_1⁷) (_lh_vecadd_LH_P3_2⁶ +. _lh_vecadd_LH_P3_2⁷)]}: 1086
//│ [LH_C _lh_bodysurf_Body_0¹ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1258 --->
//│ 	case xs¹ of {LH_C h³ t⁴ => [LH_C h³ mappend_lh_₂(t⁴, ys¹)] | LH_N  => ys¹}: 144
//│ [LH_N]: 1263 --->
//│ 	case xs¹ of {LH_C h³ t⁴ => [LH_C h³ mappend_lh_₂(t⁴, ys¹)] | LH_N  => ys¹}: 144
//│ [LH_P3 0.0 0.0 0.0]: 1399 --->
//│ 	case _lh_vecadd_arg2¹ of {LH_P3 _lh_vecadd_LH_P3_0³ _lh_vecadd_LH_P3_1³ _lh_vecadd_LH_P3_2³ => [LH_P3 (_lh_vecadd_LH_P3_0² +. _lh_vecadd_LH_P3_0³) (_lh_vecadd_LH_P3_1² +. _lh_vecadd_LH_P3_1³) (_lh_vecadd_LH_P3_2² +. _lh_vecadd_LH_P3_2³)]}: 366
//│ [LH_C _lh_transmitsurf_Transmit_0⁰ _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)]: 1445 --->
//│ 	case xs² of {LH_C h⁴ t⁵ => [LH_C h⁴ mappend_lh_₁(t⁵, ys²)] | LH_N  => ys²}: 620
//│ [LH_N]: 1450 --->
//│ 	case xs² of {LH_C h⁴ t⁵ => [LH_C h⁴ mappend_lh_₁(t⁵, ys²)] | LH_N  => ys²}: 620
//│ [LH_P2 [False] 0.0]: 1563 --->
//│ 	case _lh_matchIdent¹¹ of {LH_P2 _lh_trace_LH_P2_0² _lh_trace_LH_P2_1² => if _lh_trace_LH_P2_0² then [LH_C [LH_P2 _lh_trace_LH_P2_1² _lh_trace_LH_C_0⁰] sphmap⁰(_lh_trace_LH_C_1⁰)] else sphmap⁰(_lh_trace_LH_C_1⁰)}: 2499
//│ [LH_P2 [False] 0.0]: 1576 --->
//│ 	case _lh_matchIdent¹¹ of {LH_P2 _lh_trace_LH_P2_0² _lh_trace_LH_P2_1² => if _lh_trace_LH_P2_0² then [LH_C [LH_P2 _lh_trace_LH_P2_1² _lh_trace_LH_C_0⁰] sphmap⁰(_lh_trace_LH_C_1⁰)] else sphmap⁰(_lh_trace_LH_C_1⁰)}: 2499
//│ [LH_P2 [True] shi⁰]: 1579 --->
//│ 	case _lh_matchIdent¹¹ of {LH_P2 _lh_trace_LH_P2_0² _lh_trace_LH_P2_1² => if _lh_trace_LH_P2_0² then [LH_C [LH_P2 _lh_trace_LH_P2_1² _lh_trace_LH_C_0⁰] sphmap⁰(_lh_trace_LH_C_1⁰)] else sphmap⁰(_lh_trace_LH_C_1⁰)}: 2499
//│ [LH_P2 [True] slo⁰]: 1583 --->
//│ 	case _lh_matchIdent¹¹ of {LH_P2 _lh_trace_LH_P2_0² _lh_trace_LH_P2_1² => if _lh_trace_LH_P2_0² then [LH_C [LH_P2 _lh_trace_LH_P2_1² _lh_trace_LH_C_0⁰] sphmap⁰(_lh_trace_LH_C_1⁰)] else sphmap⁰(_lh_trace_LH_C_1⁰)}: 2499
//│ [LH_P3 ((_lh_veccross_LH_P3_1⁰ *. _lh_veccross_LH_P3_2¹) -. (_lh_veccross_LH_P3_1¹ *. _lh_veccross_LH_P3_2⁰)) ((_lh_veccross_LH_P3_2⁰ *. _lh_veccross_LH_P3_0¹) -. (_lh_veccross_LH_P3_2¹ *. _lh_veccross_LH_P3_0⁰)) ((_lh_veccross_LH_P3_0⁰ *. _lh_veccross_LH_P3_1¹) -. (_lh_veccross_LH_P3_0¹ *. _lh_veccross_LH_P3_1⁰))]: 1973 --->
//│ 	case _lh_vecnorm_arg1¹ of {LH_P3 _lh_vecnorm_LH_P3_0¹ _lh_vecnorm_LH_P3_1¹ _lh_vecnorm_LH_P3_2¹ => let len¹ = sqrt⁰((((_lh_vecnorm_LH_P3_0¹ *. _lh_vecnorm_LH_P3_0¹) +. (_lh_vecnorm_LH_P3_1¹ *. _lh_vecnorm_LH_P3_1¹)) +. (_lh_vecnorm_LH_P3_2¹ *. _lh_vecnorm_LH_P3_2¹)))
//│ in [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0¹ /. len¹) (_lh_vecnorm_LH_P3_1¹ /. len¹) (_lh_vecnorm_LH_P3_2¹ /. len¹)] len¹]}: 2151
//│ [LH_P3 (_lh_vecsub_LH_P3_0² -. _lh_vecsub_LH_P3_0³) (_lh_vecsub_LH_P3_1² -. _lh_vecsub_LH_P3_1³) (_lh_vecsub_LH_P3_2² -. _lh_vecsub_LH_P3_2³)]: 1995 --->
//│ 	case _lh_vecadd_arg1⁷ of {LH_P3 _lh_vecadd_LH_P3_0¹⁴ _lh_vecadd_LH_P3_1¹⁴ _lh_vecadd_LH_P3_2¹⁴ => case _lh_vecadd_arg2⁷ of {LH_P3 _lh_vecadd_LH_P3_0¹⁵ _lh_vecadd_LH_P3_1¹⁵ _lh_vecadd_LH_P3_2¹⁵ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁴ +. _lh_vecadd_LH_P3_0¹⁵) (_lh_vecadd_LH_P3_1¹⁴ +. _lh_vecadd_LH_P3_1¹⁵) (_lh_vecadd_LH_P3_2¹⁴ +. _lh_vecadd_LH_P3_2¹⁵)]}}: 2451
//│ [LH_P3 (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_0¹⁰) (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_1¹⁰) (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_2¹⁰)]: 2036 --->
//│ 	case _lh_vecadd_arg2⁶ of {LH_P3 _lh_vecadd_LH_P3_0¹³ _lh_vecadd_LH_P3_1¹³ _lh_vecadd_LH_P3_2¹³ => [LH_P3 (_lh_vecadd_LH_P3_0¹² +. _lh_vecadd_LH_P3_0¹³) (_lh_vecadd_LH_P3_1¹² +. _lh_vecadd_LH_P3_1¹³) (_lh_vecadd_LH_P3_2¹² +. _lh_vecadd_LH_P3_2¹³)]}: 2171
//│ [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0¹ /. len¹) (_lh_vecnorm_LH_P3_1¹ /. len¹) (_lh_vecnorm_LH_P3_2¹ /. len¹)] len¹]: 2149 --->
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_camparams_LH_P2_0¹ _lh_camparams_LH_P2_1¹ => let _lh_matchIdent¹⁵ = vecnorm_lh_₄(veccross_lh_₁(_lh_camparams_LH_P2_0¹, _lh_camparams_LH_P2_0⁰))
//│ in case _lh_matchIdent¹⁵ of {LH_P2 _lh_camparams_LH_P2_0² _lh_camparams_LH_P2_1² => let xfov⁰ = _lh_camparams_arg4⁰
//│ in let yfov⁰ = _lh_camparams_arg4⁰
//│ in let xwinsize⁰ = _lh_camparams_arg5⁰
//│ in let ywinsize⁰ = _lh_camparams_arg5⁰
//│ in let magx⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₁((xfov⁰ /. 2.0)))) /. xwinsize⁰)
//│ in let magy⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₂((yfov⁰ /. 2.0)))) /. ywinsize⁰)
//│ in let scrnx⁰ = vecscale_lh_₆(_lh_camparams_LH_P2_0¹, magx⁰)
//│ in let scrny⁰ = vecscale_lh_₅(_lh_camparams_LH_P2_0², magy⁰)
//│ in let firstray⁰ = vecsub_lh_₂(initfirstray⁰, vecadd_lh_₃(vecscale_lh_₃(scrnx⁰, (0.5 *. xwinsize⁰)), vecscale_lh_₄(scrny⁰, (0.5 *. ywinsize⁰))))
//│ in [LH_P3 firstray⁰ scrnx⁰ scrny⁰]}}: 2883
//│ [LH_P3 (_lh_vecadd_LH_P3_0¹² +. _lh_vecadd_LH_P3_0¹³) (_lh_vecadd_LH_P3_1¹² +. _lh_vecadd_LH_P3_1¹³) (_lh_vecadd_LH_P3_2¹² +. _lh_vecadd_LH_P3_2¹³)]: 2170 --->
//│ 	case _lh_vecsub_arg2¹ of {LH_P3 _lh_vecsub_LH_P3_0³ _lh_vecsub_LH_P3_1³ _lh_vecsub_LH_P3_2³ => [LH_P3 (_lh_vecsub_LH_P3_0² -. _lh_vecsub_LH_P3_0³) (_lh_vecsub_LH_P3_1² -. _lh_vecsub_LH_P3_1³) (_lh_vecsub_LH_P3_2² -. _lh_vecsub_LH_P3_2³)]}: 1996
//│ [LH_P3 (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_0¹¹) (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_1¹¹) (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_2¹¹)]: 2191 --->
//│ 	case _lh_vecadd_arg1⁶ of {LH_P3 _lh_vecadd_LH_P3_0¹² _lh_vecadd_LH_P3_1¹² _lh_vecadd_LH_P3_2¹² => case _lh_vecadd_arg2⁶ of {LH_P3 _lh_vecadd_LH_P3_0¹³ _lh_vecadd_LH_P3_1¹³ _lh_vecadd_LH_P3_2¹³ => [LH_P3 (_lh_vecadd_LH_P3_0¹² +. _lh_vecadd_LH_P3_0¹³) (_lh_vecadd_LH_P3_1¹² +. _lh_vecadd_LH_P3_1¹³) (_lh_vecadd_LH_P3_2¹² +. _lh_vecadd_LH_P3_2¹³)]}}: 2172
//│ [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0² /. len²) (_lh_vecnorm_LH_P3_1² /. len²) (_lh_vecnorm_LH_P3_2² /. len²)] len²]: 2236 --->
//│ 	case _lh_matchIdent¹³ of {LH_P2 _lh_camparams_LH_P2_0⁰ _lh_camparams_LH_P2_1⁰ => let _lh_matchIdent¹⁴ = vecnorm_lh_₃(veccross_lh_₂(_lh_camparams_LH_P2_0⁰, _lh_camparams_arg3⁰))
//│ in case _lh_matchIdent¹⁴ of {LH_P2 _lh_camparams_LH_P2_0¹ _lh_camparams_LH_P2_1¹ => let _lh_matchIdent¹⁵ = vecnorm_lh_₄(veccross_lh_₁(_lh_camparams_LH_P2_0¹, _lh_camparams_LH_P2_0⁰))
//│ in case _lh_matchIdent¹⁵ of {LH_P2 _lh_camparams_LH_P2_0² _lh_camparams_LH_P2_1² => let xfov⁰ = _lh_camparams_arg4⁰
//│ in let yfov⁰ = _lh_camparams_arg4⁰
//│ in let xwinsize⁰ = _lh_camparams_arg5⁰
//│ in let ywinsize⁰ = _lh_camparams_arg5⁰
//│ in let magx⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₁((xfov⁰ /. 2.0)))) /. xwinsize⁰)
//│ in let magy⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₂((yfov⁰ /. 2.0)))) /. ywinsize⁰)
//│ in let scrnx⁰ = vecscale_lh_₆(_lh_camparams_LH_P2_0¹, magx⁰)
//│ in let scrny⁰ = vecscale_lh_₅(_lh_camparams_LH_P2_0², magy⁰)
//│ in let firstray⁰ = vecsub_lh_₂(initfirstray⁰, vecadd_lh_₃(vecscale_lh_₃(scrnx⁰, (0.5 *. xwinsize⁰)), vecscale_lh_₄(scrny⁰, (0.5 *. ywinsize⁰))))
//│ in [LH_P3 firstray⁰ scrnx⁰ scrny⁰]}}}: 2885
//│ [LH_P3 (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_0¹²) (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_1¹²) (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_2¹²)]: 2256 --->
//│ 	case _lh_vecadd_arg2⁸ of {LH_P3 _lh_vecadd_LH_P3_0¹⁷ _lh_vecadd_LH_P3_1¹⁷ _lh_vecadd_LH_P3_2¹⁷ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁶ +. _lh_vecadd_LH_P3_0¹⁷) (_lh_vecadd_LH_P3_1¹⁶ +. _lh_vecadd_LH_P3_1¹⁷) (_lh_vecadd_LH_P3_2¹⁶ +. _lh_vecadd_LH_P3_2¹⁷)]}: 2563
//│ [LH_P3 1.0 1.0 1.0]: 2276 --->
//│ 	case _lh_vecmult_arg1⁴ of {LH_P3 _lh_vecmult_LH_P3_0⁸ _lh_vecmult_LH_P3_1⁸ _lh_vecmult_LH_P3_2⁸ => case _lh_vecmult_arg2⁴ of {LH_P3 _lh_vecmult_LH_P3_0⁹ _lh_vecmult_LH_P3_1⁹ _lh_vecmult_LH_P3_2⁹ => [LH_P3 (_lh_vecmult_LH_P3_0⁸ *. _lh_vecmult_LH_P3_0⁹) (_lh_vecmult_LH_P3_1⁸ *. _lh_vecmult_LH_P3_1⁹) (_lh_vecmult_LH_P3_2⁸ *. _lh_vecmult_LH_P3_2⁹)]}}: 1175
//│ [LH_P2 [False] simple⁰]: 2353 --->
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_shade_LH_P2_0⁰ _lh_shade_LH_P2_1⁰ => let reflsurf⁰ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁰), reflectsurf_lh_₁(surf⁰))
//│ in let reflectiv⁰ = if _lh_shade_LH_P2_0⁰ then vecadd_lh_₄(trintensity⁰, reflsurf⁰) else reflsurf⁰
//│ in let rcol⁰ = if is_zerovector_lh_₁(reflectiv⁰) then _lh_shade_LH_P2_1⁰ else reflectray_lh_₁(hitpos⁰, refl⁰, _lh_shade_arg1⁰, reflectiv⁰, _lh_shade_arg6⁰, _lh_shade_LH_P2_1⁰)
//│ in rcol⁰}: 2414
//│ [LH_P3 (_lh_vecadd_LH_P3_0¹⁴ +. _lh_vecadd_LH_P3_0¹⁵) (_lh_vecadd_LH_P3_1¹⁴ +. _lh_vecadd_LH_P3_1¹⁵) (_lh_vecadd_LH_P3_2¹⁴ +. _lh_vecadd_LH_P3_2¹⁵)]: 2449 --->
//│ 	case _lh_vecadd_arg1⁸ of {LH_P3 _lh_vecadd_LH_P3_0¹⁶ _lh_vecadd_LH_P3_1¹⁶ _lh_vecadd_LH_P3_2¹⁶ => case _lh_vecadd_arg2⁸ of {LH_P3 _lh_vecadd_LH_P3_0¹⁷ _lh_vecadd_LH_P3_1¹⁷ _lh_vecadd_LH_P3_2¹⁷ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁶ +. _lh_vecadd_LH_P3_0¹⁷) (_lh_vecadd_LH_P3_1¹⁶ +. _lh_vecadd_LH_P3_1¹⁷) (_lh_vecadd_LH_P3_2¹⁶ +. _lh_vecadd_LH_P3_2¹⁷)]}}: 2564
//│ [LH_P3 (_lh_vecadd_LH_P3_0¹⁶ +. _lh_vecadd_LH_P3_0¹⁷) (_lh_vecadd_LH_P3_1¹⁶ +. _lh_vecadd_LH_P3_1¹⁷) (_lh_vecadd_LH_P3_2¹⁶ +. _lh_vecadd_LH_P3_2¹⁷)]: 2562 --->
//│ 	case _lh_vecnorm_arg1³ of {LH_P3 _lh_vecnorm_LH_P3_0³ _lh_vecnorm_LH_P3_1³ _lh_vecnorm_LH_P3_2³ => let len³ = sqrt⁰((((_lh_vecnorm_LH_P3_0³ *. _lh_vecnorm_LH_P3_0³) +. (_lh_vecnorm_LH_P3_1³ *. _lh_vecnorm_LH_P3_1³)) +. (_lh_vecnorm_LH_P3_2³ *. _lh_vecnorm_LH_P3_2³)))
//│ in [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0³ /. len³) (_lh_vecnorm_LH_P3_1³ /. len³) (_lh_vecnorm_LH_P3_2³ /. len³)] len³]}: 2610
//│ [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0³ /. len³) (_lh_vecnorm_LH_P3_1³ /. len³) (_lh_vecnorm_LH_P3_2³ /. len³)] len³]: 2608 --->
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_tracepixel_LH_P2_0⁰ _lh_tracepixel_LH_P2_1⁰ => let _lh_matchIdent¹⁷ = trace_lh_₁(_lh_tracepixel_arg1⁰, pos⁰, _lh_tracepixel_LH_P2_0⁰)
//│ in case _lh_matchIdent¹⁷ of {LH_P3 _lh_tracepixel_LH_P3_0⁰ _lh_tracepixel_LH_P3_1⁰ _lh_tracepixel_LH_P3_2⁰ => if _lh_tracepixel_LH_P3_0⁰ then shade_lh_₁(_lh_tracepixel_arg2⁰, _lh_tracepixel_LH_P3_2⁰, pos⁰, _lh_tracepixel_LH_P2_0⁰, _lh_tracepixel_LH_P3_1⁰, [LH_P3 1.0 1.0 1.0]) else background_lh_₁}}: 3035
//│ [LH_P3 (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_0¹³) (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_1¹³) (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_2¹³)]: 2628 --->
//│ 	case _lh_vecadd_arg2⁷ of {LH_P3 _lh_vecadd_LH_P3_0¹⁵ _lh_vecadd_LH_P3_1¹⁵ _lh_vecadd_LH_P3_2¹⁵ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁴ +. _lh_vecadd_LH_P3_0¹⁵) (_lh_vecadd_LH_P3_1¹⁴ +. _lh_vecadd_LH_P3_1¹⁵) (_lh_vecadd_LH_P3_2¹⁴ +. _lh_vecadd_LH_P3_2¹⁵)]}: 2450
//│ [LH_P3 firstray⁰ scrnx⁰ scrny⁰]: 2871 --->
//│ 	case _lh_matchIdent¹⁹ of {LH_P3 _lh_ray_LH_P3_0⁰ _lh_ray_LH_P3_1⁰ _lh_ray_LH_P3_2⁰ => let f⁵ = (fun i² -> (fun j⁰ -> tracepixel_lh_₁(testspheres_lh_₁, lights⁰, float_of_int⁰(i²), float_of_int⁰(j⁰), _lh_ray_LH_P3_0⁰, _lh_ray_LH_P3_1⁰, _lh_ray_LH_P3_2⁰)))
//│ in let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₂(0, (_lh_ray_arg1⁰ - 1))) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₁(0, (_lh_ray_arg1⁰ - 1)))}: 3206
//│ [LH_N]: 2928 --->
//│ 	case ls³ of {LH_C h⁶ t⁷ => [LH_C f⁰(h⁶) map_lh_₂(f⁰, t⁷)] | LH_N  => [LH_N]}: 996
//│ [LH_C [Point [LH_P3 (0.0 -. 3.0) 1.0 5.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_N]]: 2929 --->
//│ 	case ls³ of {LH_C h⁶ t⁷ => [LH_C f⁰(h⁶) map_lh_₂(f⁰, t⁷)] | LH_N  => [LH_N]}: 996
//│ [LH_C [Point [LH_P3 1.0 (0.0 -. 4.0) 4.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_C [Point [LH_P3 (0.0 -. 3.0) 1.0 5.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_N]]]: 2930 --->
//│ 	case ls³ of {LH_C h⁶ t⁷ => [LH_C f⁰(h⁶) map_lh_₂(f⁰, t⁷)] | LH_N  => [LH_N]}: 996
//│ [LH_C [Point [LH_P3 4.0 3.0 2.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_C [Point [LH_P3 1.0 (0.0 -. 4.0) 4.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_C [Point [LH_P3 (0.0 -. 3.0) 1.0 5.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_N]]]]: 2931 --->
//│ 	case ls³ of {LH_C h⁶ t⁷ => [LH_C f⁰(h⁶) map_lh_₂(f⁰, t⁷)] | LH_N  => [LH_N]}: 996
//│ [LH_P3 2.1 1.3 1.7]: 2935 --->
//│ 	case _lh_vecsub_arg2² of {LH_P3 _lh_vecsub_LH_P3_0⁵ _lh_vecsub_LH_P3_1⁵ _lh_vecsub_LH_P3_2⁵ => [LH_P3 (_lh_vecsub_LH_P3_0⁴ -. _lh_vecsub_LH_P3_0⁵) (_lh_vecsub_LH_P3_1⁴ -. _lh_vecsub_LH_P3_1⁵) (_lh_vecsub_LH_P3_2⁴ -. _lh_vecsub_LH_P3_2⁵)]}: 2104
//│ [LH_C a⁰ enumFromTo_lh_₂((a⁰ + 1), b⁰)]: 2952 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 3176
//│ [LH_N]: 2953 --->
//│ 	case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 3176
//│ [LH_P3 0.0 0.0 0.0]: 2960 --->
//│ 	case _lh_vecsub_arg1² of {LH_P3 _lh_vecsub_LH_P3_0⁴ _lh_vecsub_LH_P3_1⁴ _lh_vecsub_LH_P3_2⁴ => case _lh_vecsub_arg2² of {LH_P3 _lh_vecsub_LH_P3_0⁵ _lh_vecsub_LH_P3_1⁵ _lh_vecsub_LH_P3_2⁵ => [LH_P3 (_lh_vecsub_LH_P3_0⁴ -. _lh_vecsub_LH_P3_0⁵) (_lh_vecsub_LH_P3_1⁴ -. _lh_vecsub_LH_P3_1⁵) (_lh_vecsub_LH_P3_2⁴ -. _lh_vecsub_LH_P3_2⁵)]}}: 2105
//│ [LH_P3 0.0 0.0 1.0]: 2964 --->
//│ 	case _lh_veccross_arg2⁰ of {LH_P3 _lh_veccross_LH_P3_0¹ _lh_veccross_LH_P3_1¹ _lh_veccross_LH_P3_2¹ => [LH_P3 ((_lh_veccross_LH_P3_1⁰ *. _lh_veccross_LH_P3_2¹) -. (_lh_veccross_LH_P3_1¹ *. _lh_veccross_LH_P3_2⁰)) ((_lh_veccross_LH_P3_2⁰ *. _lh_veccross_LH_P3_0¹) -. (_lh_veccross_LH_P3_2¹ *. _lh_veccross_LH_P3_0⁰)) ((_lh_veccross_LH_P3_0⁰ *. _lh_veccross_LH_P3_1¹) -. (_lh_veccross_LH_P3_0¹ *. _lh_veccross_LH_P3_1⁰))]}: 1974
//│ [LH_C a¹ enumFromTo_lh_₁((a¹ + 1), b¹)]: 2980 --->
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₂(0, (_lh_ray_arg1⁰ - 1))) | LH_N  => [LH_N]}: 3191
//│ [LH_N]: 2981 --->
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₂(0, (_lh_ray_arg1⁰ - 1))) | LH_N  => [LH_N]}: 3191
//│ [LH_C f⁴(h¹²) map_lh_₁(f⁴, t¹³)]: 3117 --->
//│ 	case ls⁸ of {LH_C h¹¹ t¹² => f³(h¹¹, foldr_lh_₁(f³, i¹, t¹²)) | LH_N  => i¹}: 2645
//│ [LH_N]: 3118 --->
//│ 	case ls⁸ of {LH_C h¹¹ t¹² => f³(h¹¹, foldr_lh_₁(f³, i¹, t¹²)) | LH_N  => i¹}: 2645
//│ [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)]: 3168 --->
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰}: 3047
//│ [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 3172 --->
//│ 	case ls⁹ of {LH_C h¹² t¹³ => [LH_C f⁴(h¹²) map_lh_₁(f⁴, t¹³)] | LH_N  => [LH_N]}: 3119
//│ [LH_N]: 3190 --->
//│ 	case ls⁹ of {LH_C h¹² t¹³ => [LH_C f⁴(h¹²) map_lh_₁(f⁴, t¹³)] | LH_N  => [LH_N]}: 3119
//│ ------------------
//│ case _lh_matchIdent⁰ of {LH_P3 _lh_refractray_LH_P3_0⁰ _lh_refractray_LH_P3_1⁰ _lh_refractray_LH_P3_2⁰ => let disc⁰ = (((1.0 -. _lh_refractray_LH_P3_2⁰) *. _lh_refractray_LH_P3_2⁰) *. (1.0 -. (_lh_refractray_LH_P3_1⁰ *. _lh_refractray_LH_P3_1⁰)))
//│ in let t⁰ = ((_lh_refractray_LH_P3_2⁰ *. _lh_refractray_LH_P3_1⁰) -. sqrt⁰(disc⁰))
//│ in if polyLt⁰(disc⁰, 0.0) then [LH_P2 [True] [LH_P3 0.0 0.0 0.0]] else [LH_P2 [False] vecadd_lh_₉(vecscale_lh_₁₄(_lh_refractray_LH_P3_0⁰, t⁰), vecscale_lh_₁₄(_lh_refractray_arg2⁰, _lh_refractray_LH_P3_2⁰))]}: 106 --->
//│ 	[LH_P3 vecscale_lh_₁₄(_lh_refractray_arg3⁰, (0.0 -. 1.0)) (0.0 -. dotp⁰) (1.0 /. _lh_refractray_arg1⁰)]: 38
//│ 	[LH_P3 _lh_refractray_arg3⁰ dotp⁰ _lh_refractray_arg1⁰]: 42
//│ case xs⁰ of {LH_C h⁰ t¹ => [LH_C h⁰ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 122 --->
//│ 	[LH_C _lh_specpowsurf_Specpow_0⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 239
//│ 	[LH_N]: 244
//│ 	[LH_C _lh_bodysurf_Body_0⁰ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 306
//│ 	[LH_N]: 311
//│ 	[LH_C _lh_specularsurf_Specular_0⁰ _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 410
//│ 	[LH_N]: 415
//│ 	[LH_C _lh_diffusesurf_Diffuse_0⁰ _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 440
//│ 	[LH_N]: 445
//│ 	[LH_C _lh_reflectsurf_Reflect_0⁰ _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 778
//│ 	[LH_N]: 783
//│ 	[LH_C _lh_refractsurf_Refract_0⁰ _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 966
//│ 	[LH_N]: 971
//│ 	[LH_C _lh_specularsurf_Specular_0¹ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 1046
//│ 	[LH_N]: 1051
//│ 	[LH_C _lh_ambientsurf_Ambient_0⁰ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 1186
//│ 	[LH_N]: 1191
//│ case xs¹ of {LH_C h³ t⁴ => [LH_C h³ mappend_lh_₂(t⁴, ys¹)] | LH_N  => ys¹}: 144 --->
//│ 	[LH_C _lh_bodysurf_Body_0¹ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁸)]: 1258
//│ 	[LH_N]: 1263
//│ case _lh_vecadd_arg2¹ of {LH_P3 _lh_vecadd_LH_P3_0³ _lh_vecadd_LH_P3_1³ _lh_vecadd_LH_P3_2³ => [LH_P3 (_lh_vecadd_LH_P3_0² +. _lh_vecadd_LH_P3_0³) (_lh_vecadd_LH_P3_1² +. _lh_vecadd_LH_P3_1³) (_lh_vecadd_LH_P3_2² +. _lh_vecadd_LH_P3_2³)]}: 366 --->
//│ 	[LH_P3 (_lh_vecmult_LH_P3_0⁶ *. _lh_vecmult_LH_P3_0⁷) (_lh_vecmult_LH_P3_1⁶ *. _lh_vecmult_LH_P3_1⁷) (_lh_vecmult_LH_P3_2⁶ *. _lh_vecmult_LH_P3_2⁷)]: 559
//│ 	[LH_P3 0.0 0.0 0.0]: 1399
//│ case _lh_vecadd_arg1¹ of {LH_P3 _lh_vecadd_LH_P3_0² _lh_vecadd_LH_P3_1² _lh_vecadd_LH_P3_2² => case _lh_vecadd_arg2¹ of {LH_P3 _lh_vecadd_LH_P3_0³ _lh_vecadd_LH_P3_1³ _lh_vecadd_LH_P3_2³ => [LH_P3 (_lh_vecadd_LH_P3_0² +. _lh_vecadd_LH_P3_0³) (_lh_vecadd_LH_P3_1² +. _lh_vecadd_LH_P3_1³) (_lh_vecadd_LH_P3_2² +. _lh_vecadd_LH_P3_2³)]}}: 367 --->
//│ 	[LH_P3 (_lh_vecmult_LH_P3_0² *. _lh_vecmult_LH_P3_0³) (_lh_vecmult_LH_P3_1² *. _lh_vecmult_LH_P3_1³) (_lh_vecmult_LH_P3_2² *. _lh_vecmult_LH_P3_2³)]: 226
//│ case _lh_vecmult_arg1² of {LH_P3 _lh_vecmult_LH_P3_0⁴ _lh_vecmult_LH_P3_1⁴ _lh_vecmult_LH_P3_2⁴ => case _lh_vecmult_arg2² of {LH_P3 _lh_vecmult_LH_P3_0⁵ _lh_vecmult_LH_P3_1⁵ _lh_vecmult_LH_P3_2⁵ => [LH_P3 (_lh_vecmult_LH_P3_0⁴ *. _lh_vecmult_LH_P3_0⁵) (_lh_vecmult_LH_P3_1⁴ *. _lh_vecmult_LH_P3_1⁵) (_lh_vecmult_LH_P3_2⁴ *. _lh_vecmult_LH_P3_2⁵)]}}: 539 --->
//│ 	[LH_P3 (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_0²) (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_1²) (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_2²)]: 344
//│ case _lh_vecmult_arg1³ of {LH_P3 _lh_vecmult_LH_P3_0⁶ _lh_vecmult_LH_P3_1⁶ _lh_vecmult_LH_P3_2⁶ => case _lh_vecmult_arg2³ of {LH_P3 _lh_vecmult_LH_P3_0⁷ _lh_vecmult_LH_P3_1⁷ _lh_vecmult_LH_P3_2⁷ => [LH_P3 (_lh_vecmult_LH_P3_0⁶ *. _lh_vecmult_LH_P3_0⁷) (_lh_vecmult_LH_P3_1⁶ *. _lh_vecmult_LH_P3_1⁷) (_lh_vecmult_LH_P3_2⁶ *. _lh_vecmult_LH_P3_2⁷)]}}: 561 --->
//│ 	[LH_P3 (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_0³) (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_1³) (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_2³)]: 607
//│ case xs² of {LH_C h⁴ t⁵ => [LH_C h⁴ mappend_lh_₁(t⁵, ys²)] | LH_N  => ys²}: 620 --->
//│ 	[LH_C _lh_transmitsurf_Transmit_0⁰ _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁹)]: 1445
//│ 	[LH_N]: 1450
//│ case _lh_matchIdent³ of {LH_P2 _lh_transmitray_LH_P2_0⁰ _lh_transmitray_LH_P2_1⁰ => let nearpos¹ = vecadd_lh_₉(_lh_transmitray_arg3⁰, vecscale_lh_₁₄(_lh_transmitray_LH_P2_1⁰, epsilon_lh_₂))
//│ in let _lh_matchIdent⁴ = trace_lh_₁(testspheres_lh_₁, nearpos¹, _lh_transmitray_LH_P2_1⁰)
//│ in case _lh_matchIdent⁴ of {LH_P3 _lh_transmitray_LH_P3_0⁰ _lh_transmitray_LH_P3_1⁰ _lh_transmitray_LH_P3_2⁰ => let newcol¹ = if _lh_transmitray_LH_P3_0⁰ then shade_lh_₁(_lh_transmitray_arg1⁰, _lh_transmitray_LH_P3_2⁰, nearpos¹, _lh_transmitray_LH_P2_1⁰, _lh_transmitray_LH_P3_1⁰, newcontrib¹) else background_lh_₁
//│ in if is_zerovector_lh_₁(newcontrib¹) then [LH_P2 [False] _lh_transmitray_arg2⁰] else [LH_P2 [False] vecadd_lh_₉(vecmult_lh_₅(newcol¹, _lh_transmitray_arg6⁰), _lh_transmitray_arg2⁰)]}}: 865 --->
//│ 	[LH_P2 [True] [LH_P3 0.0 0.0 0.0]]: 87
//│ 	[LH_P2 [False] vecadd_lh_₉(vecscale_lh_₁₄(_lh_refractray_LH_P3_0⁰, t⁰), vecscale_lh_₁₄(_lh_refractray_arg2⁰, _lh_refractray_LH_P3_2⁰))]: 102
//│ case ls³ of {LH_C h⁶ t⁷ => [LH_C f⁰(h⁶) map_lh_₂(f⁰, t⁷)] | LH_N  => [LH_N]}: 996 --->
//│ 	[LH_N]: 2928
//│ 	[LH_C [Point [LH_P3 (0.0 -. 3.0) 1.0 5.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_N]]: 2929
//│ 	[LH_C [Point [LH_P3 1.0 (0.0 -. 4.0) 4.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_C [Point [LH_P3 (0.0 -. 3.0) 1.0 5.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_N]]]: 2930
//│ 	[LH_C [Point [LH_P3 4.0 3.0 2.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_C [Point [LH_P3 1.0 (0.0 -. 4.0) 4.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_C [Point [LH_P3 (0.0 -. 3.0) 1.0 5.0] [LH_P3 0.288675 0.288675 0.288675]] [LH_N]]]]: 2931
//│ case _lh_vecadd_arg2² of {LH_P3 _lh_vecadd_LH_P3_0⁵ _lh_vecadd_LH_P3_1⁵ _lh_vecadd_LH_P3_2⁵ => [LH_P3 (_lh_vecadd_LH_P3_0⁴ +. _lh_vecadd_LH_P3_0⁵) (_lh_vecadd_LH_P3_1⁴ +. _lh_vecadd_LH_P3_1⁵) (_lh_vecadd_LH_P3_2⁴ +. _lh_vecadd_LH_P3_2⁵)]}: 1017 --->
//│ 	[LH_P3 (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_0⁵) (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_1⁵) (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_2⁵)]: 954
//│ case _lh_vecadd_arg2³ of {LH_P3 _lh_vecadd_LH_P3_0⁷ _lh_vecadd_LH_P3_1⁷ _lh_vecadd_LH_P3_2⁷ => [LH_P3 (_lh_vecadd_LH_P3_0⁶ +. _lh_vecadd_LH_P3_0⁷) (_lh_vecadd_LH_P3_1⁶ +. _lh_vecadd_LH_P3_1⁷) (_lh_vecadd_LH_P3_2⁶ +. _lh_vecadd_LH_P3_2⁷)]}: 1086 --->
//│ 	[LH_P3 (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_0⁷) (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_1⁷) (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_2⁷)]: 1224
//│ case _lh_vecadd_arg1⁴ of {LH_P3 _lh_vecadd_LH_P3_0⁸ _lh_vecadd_LH_P3_1⁸ _lh_vecadd_LH_P3_2⁸ => case _lh_vecadd_arg2⁴ of {LH_P3 _lh_vecadd_LH_P3_0⁹ _lh_vecadd_LH_P3_1⁹ _lh_vecadd_LH_P3_2⁹ => [LH_P3 (_lh_vecadd_LH_P3_0⁸ +. _lh_vecadd_LH_P3_0⁹) (_lh_vecadd_LH_P3_1⁸ +. _lh_vecadd_LH_P3_1⁹) (_lh_vecadd_LH_P3_2⁸ +. _lh_vecadd_LH_P3_2⁹)]}}: 1153 --->
//│ 	[LH_P3 (_lh_vecmult_LH_P3_0⁸ *. _lh_vecmult_LH_P3_0⁹) (_lh_vecmult_LH_P3_1⁸ *. _lh_vecmult_LH_P3_1⁹) (_lh_vecmult_LH_P3_2⁸ *. _lh_vecmult_LH_P3_2⁹)]: 1173
//│ case _lh_vecmult_arg1⁴ of {LH_P3 _lh_vecmult_LH_P3_0⁸ _lh_vecmult_LH_P3_1⁸ _lh_vecmult_LH_P3_2⁸ => case _lh_vecmult_arg2⁴ of {LH_P3 _lh_vecmult_LH_P3_0⁹ _lh_vecmult_LH_P3_1⁹ _lh_vecmult_LH_P3_2⁹ => [LH_P3 (_lh_vecmult_LH_P3_0⁸ *. _lh_vecmult_LH_P3_0⁹) (_lh_vecmult_LH_P3_1⁸ *. _lh_vecmult_LH_P3_1⁹) (_lh_vecmult_LH_P3_2⁸ *. _lh_vecmult_LH_P3_2⁹)]}}: 1175 --->
//│ 	[LH_P3 1.0 1.0 1.0]: 2276
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_lightray_LH_P2_0¹ _lh_lightray_LH_P2_1¹ => if _lh_lightray_LH_P2_0¹ then [LH_P3 0.0 0.0 0.0] else let diff⁰ = diffusesurf_lh_₁(_lh_lightray_arg5⁰)
//│ in let spow⁰ = specpowsurf_lh_₁(_lh_lightray_arg5⁰)
//│ in if polyLeq⁰(cosangle⁰, 0.0) then let bodycol⁰ = bodysurf_lh_₂(_lh_lightray_arg5⁰)
//│ in let cosalpha⁰ = (0.0 -. vecdot_lh_₆(_lh_lightray_arg4⁰, _lh_lightray_LH_P2_0⁰))
//│ in let diffcont⁰ = vecmult_lh_₅(vecscale_lh_₁₃(diff⁰, (0.0 -. cosangle⁰)), _lh_lightray_LH_P2_1¹)
//│ in let speccont⁰ = if polyLeq⁰(cosalpha⁰, 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₃(vecscale_lh_₁₂(bodycol⁰, (cosalpha⁰ ** spow⁰)), _lh_lightray_LH_P2_1¹)
//│ in vecadd_lh_₉(diffcont⁰, speccont⁰) else let spec⁰ = specularsurf_lh_₂(_lh_lightray_arg5⁰)
//│ in let cosalpha¹ = vecdot_lh_₄(_lh_lightray_arg4⁰, _lh_lightray_LH_P2_0⁰)
//│ in let diffcont¹ = vecmult_lh_₄(vecscale_lh_₁₄(diff⁰, cosangle⁰), _lh_lightray_LH_P2_1¹)
//│ in let speccont¹ = if polyLeq⁰(cosalpha¹, 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₂(vecscale_lh_₁₁(spec⁰, (cosalpha¹ ** spow⁰)), _lh_lightray_LH_P2_1¹)
//│ in vecadd_lh_₈(diffcont¹, speccont¹)}: 1427 --->
//│ 	[LH_P2 [False] _lh_shadowed_arg3⁰]: 510
//│ 	[LH_P2 [True] _lh_shadowed_arg3⁰]: 513
//│ case _lh_veccross_arg2⁰ of {LH_P3 _lh_veccross_LH_P3_0¹ _lh_veccross_LH_P3_1¹ _lh_veccross_LH_P3_2¹ => [LH_P3 ((_lh_veccross_LH_P3_1⁰ *. _lh_veccross_LH_P3_2¹) -. (_lh_veccross_LH_P3_1¹ *. _lh_veccross_LH_P3_2⁰)) ((_lh_veccross_LH_P3_2⁰ *. _lh_veccross_LH_P3_0¹) -. (_lh_veccross_LH_P3_2¹ *. _lh_veccross_LH_P3_0⁰)) ((_lh_veccross_LH_P3_0⁰ *. _lh_veccross_LH_P3_1¹) -. (_lh_veccross_LH_P3_0¹ *. _lh_veccross_LH_P3_1⁰))]}: 1974 --->
//│ 	[LH_P3 0.0 0.0 1.0]: 2964
//│ case _lh_vecsub_arg2¹ of {LH_P3 _lh_vecsub_LH_P3_0³ _lh_vecsub_LH_P3_1³ _lh_vecsub_LH_P3_2³ => [LH_P3 (_lh_vecsub_LH_P3_0² -. _lh_vecsub_LH_P3_0³) (_lh_vecsub_LH_P3_1² -. _lh_vecsub_LH_P3_1³) (_lh_vecsub_LH_P3_2² -. _lh_vecsub_LH_P3_2³)]}: 1996 --->
//│ 	[LH_P3 (_lh_vecadd_LH_P3_0¹² +. _lh_vecadd_LH_P3_0¹³) (_lh_vecadd_LH_P3_1¹² +. _lh_vecadd_LH_P3_1¹³) (_lh_vecadd_LH_P3_2¹² +. _lh_vecadd_LH_P3_2¹³)]: 2170
//│ case _lh_vecsub_arg2² of {LH_P3 _lh_vecsub_LH_P3_0⁵ _lh_vecsub_LH_P3_1⁵ _lh_vecsub_LH_P3_2⁵ => [LH_P3 (_lh_vecsub_LH_P3_0⁴ -. _lh_vecsub_LH_P3_0⁵) (_lh_vecsub_LH_P3_1⁴ -. _lh_vecsub_LH_P3_1⁵) (_lh_vecsub_LH_P3_2⁴ -. _lh_vecsub_LH_P3_2⁵)]}: 2104 --->
//│ 	[LH_P3 2.1 1.3 1.7]: 2935
//│ case _lh_vecsub_arg1² of {LH_P3 _lh_vecsub_LH_P3_0⁴ _lh_vecsub_LH_P3_1⁴ _lh_vecsub_LH_P3_2⁴ => case _lh_vecsub_arg2² of {LH_P3 _lh_vecsub_LH_P3_0⁵ _lh_vecsub_LH_P3_1⁵ _lh_vecsub_LH_P3_2⁵ => [LH_P3 (_lh_vecsub_LH_P3_0⁴ -. _lh_vecsub_LH_P3_0⁵) (_lh_vecsub_LH_P3_1⁴ -. _lh_vecsub_LH_P3_1⁵) (_lh_vecsub_LH_P3_2⁴ -. _lh_vecsub_LH_P3_2⁵)]}}: 2105 --->
//│ 	[LH_P3 0.0 0.0 0.0]: 2960
//│ case _lh_vecnorm_arg1¹ of {LH_P3 _lh_vecnorm_LH_P3_0¹ _lh_vecnorm_LH_P3_1¹ _lh_vecnorm_LH_P3_2¹ => let len¹ = sqrt⁰((((_lh_vecnorm_LH_P3_0¹ *. _lh_vecnorm_LH_P3_0¹) +. (_lh_vecnorm_LH_P3_1¹ *. _lh_vecnorm_LH_P3_1¹)) +. (_lh_vecnorm_LH_P3_2¹ *. _lh_vecnorm_LH_P3_2¹)))
//│ in [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0¹ /. len¹) (_lh_vecnorm_LH_P3_1¹ /. len¹) (_lh_vecnorm_LH_P3_2¹ /. len¹)] len¹]}: 2151 --->
//│ 	[LH_P3 ((_lh_veccross_LH_P3_1⁰ *. _lh_veccross_LH_P3_2¹) -. (_lh_veccross_LH_P3_1¹ *. _lh_veccross_LH_P3_2⁰)) ((_lh_veccross_LH_P3_2⁰ *. _lh_veccross_LH_P3_0¹) -. (_lh_veccross_LH_P3_2¹ *. _lh_veccross_LH_P3_0⁰)) ((_lh_veccross_LH_P3_0⁰ *. _lh_veccross_LH_P3_1¹) -. (_lh_veccross_LH_P3_0¹ *. _lh_veccross_LH_P3_1⁰))]: 1973
//│ case _lh_vecadd_arg2⁶ of {LH_P3 _lh_vecadd_LH_P3_0¹³ _lh_vecadd_LH_P3_1¹³ _lh_vecadd_LH_P3_2¹³ => [LH_P3 (_lh_vecadd_LH_P3_0¹² +. _lh_vecadd_LH_P3_0¹³) (_lh_vecadd_LH_P3_1¹² +. _lh_vecadd_LH_P3_1¹³) (_lh_vecadd_LH_P3_2¹² +. _lh_vecadd_LH_P3_2¹³)]}: 2171 --->
//│ 	[LH_P3 (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_0¹⁰) (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_1¹⁰) (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_2¹⁰)]: 2036
//│ case _lh_vecadd_arg1⁶ of {LH_P3 _lh_vecadd_LH_P3_0¹² _lh_vecadd_LH_P3_1¹² _lh_vecadd_LH_P3_2¹² => case _lh_vecadd_arg2⁶ of {LH_P3 _lh_vecadd_LH_P3_0¹³ _lh_vecadd_LH_P3_1¹³ _lh_vecadd_LH_P3_2¹³ => [LH_P3 (_lh_vecadd_LH_P3_0¹² +. _lh_vecadd_LH_P3_0¹³) (_lh_vecadd_LH_P3_1¹² +. _lh_vecadd_LH_P3_1¹³) (_lh_vecadd_LH_P3_2¹² +. _lh_vecadd_LH_P3_2¹³)]}}: 2172 --->
//│ 	[LH_P3 (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_0¹¹) (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_1¹¹) (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_2¹¹)]: 2191
//│ case _lh_matchIdent⁷ of {LH_P2 _lh_shade_LH_P2_0⁰ _lh_shade_LH_P2_1⁰ => let reflsurf⁰ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁰), reflectsurf_lh_₁(surf⁰))
//│ in let reflectiv⁰ = if _lh_shade_LH_P2_0⁰ then vecadd_lh_₄(trintensity⁰, reflsurf⁰) else reflsurf⁰
//│ in let rcol⁰ = if is_zerovector_lh_₁(reflectiv⁰) then _lh_shade_LH_P2_1⁰ else reflectray_lh_₁(hitpos⁰, refl⁰, _lh_shade_arg1⁰, reflectiv⁰, _lh_shade_arg6⁰, _lh_shade_LH_P2_1⁰)
//│ in rcol⁰}: 2414 --->
//│ 	[LH_P2 [False] _lh_transmitray_arg2⁰]: 848
//│ 	[LH_P2 [False] vecadd_lh_₉(vecmult_lh_₅(newcol¹, _lh_transmitray_arg6⁰), _lh_transmitray_arg2⁰)]: 859
//│ 	[LH_P2 [False] simple⁰]: 2353
//│ case _lh_vecadd_arg2⁷ of {LH_P3 _lh_vecadd_LH_P3_0¹⁵ _lh_vecadd_LH_P3_1¹⁵ _lh_vecadd_LH_P3_2¹⁵ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁴ +. _lh_vecadd_LH_P3_0¹⁵) (_lh_vecadd_LH_P3_1¹⁴ +. _lh_vecadd_LH_P3_1¹⁵) (_lh_vecadd_LH_P3_2¹⁴ +. _lh_vecadd_LH_P3_2¹⁵)]}: 2450 --->
//│ 	[LH_P3 (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_0¹³) (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_1¹³) (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_2¹³)]: 2628
//│ case _lh_vecadd_arg1⁷ of {LH_P3 _lh_vecadd_LH_P3_0¹⁴ _lh_vecadd_LH_P3_1¹⁴ _lh_vecadd_LH_P3_2¹⁴ => case _lh_vecadd_arg2⁷ of {LH_P3 _lh_vecadd_LH_P3_0¹⁵ _lh_vecadd_LH_P3_1¹⁵ _lh_vecadd_LH_P3_2¹⁵ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁴ +. _lh_vecadd_LH_P3_0¹⁵) (_lh_vecadd_LH_P3_1¹⁴ +. _lh_vecadd_LH_P3_1¹⁵) (_lh_vecadd_LH_P3_2¹⁴ +. _lh_vecadd_LH_P3_2¹⁵)]}}: 2451 --->
//│ 	[LH_P3 (_lh_vecsub_LH_P3_0² -. _lh_vecsub_LH_P3_0³) (_lh_vecsub_LH_P3_1² -. _lh_vecsub_LH_P3_1³) (_lh_vecsub_LH_P3_2² -. _lh_vecsub_LH_P3_2³)]: 1995
//│ case _lh_matchIdent¹¹ of {LH_P2 _lh_trace_LH_P2_0² _lh_trace_LH_P2_1² => if _lh_trace_LH_P2_0² then [LH_C [LH_P2 _lh_trace_LH_P2_1² _lh_trace_LH_C_0⁰] sphmap⁰(_lh_trace_LH_C_1⁰)] else sphmap⁰(_lh_trace_LH_C_1⁰)}: 2499 --->
//│ 	[LH_P2 [False] 0.0]: 1563
//│ 	[LH_P2 [False] 0.0]: 1576
//│ 	[LH_P2 [True] shi⁰]: 1579
//│ 	[LH_P2 [True] slo⁰]: 1583
//│ case _lh_vecadd_arg2⁸ of {LH_P3 _lh_vecadd_LH_P3_0¹⁷ _lh_vecadd_LH_P3_1¹⁷ _lh_vecadd_LH_P3_2¹⁷ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁶ +. _lh_vecadd_LH_P3_0¹⁷) (_lh_vecadd_LH_P3_1¹⁶ +. _lh_vecadd_LH_P3_1¹⁷) (_lh_vecadd_LH_P3_2¹⁶ +. _lh_vecadd_LH_P3_2¹⁷)]}: 2563 --->
//│ 	[LH_P3 (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_0¹²) (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_1¹²) (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_2¹²)]: 2256
//│ case _lh_vecadd_arg1⁸ of {LH_P3 _lh_vecadd_LH_P3_0¹⁶ _lh_vecadd_LH_P3_1¹⁶ _lh_vecadd_LH_P3_2¹⁶ => case _lh_vecadd_arg2⁸ of {LH_P3 _lh_vecadd_LH_P3_0¹⁷ _lh_vecadd_LH_P3_1¹⁷ _lh_vecadd_LH_P3_2¹⁷ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁶ +. _lh_vecadd_LH_P3_0¹⁷) (_lh_vecadd_LH_P3_1¹⁶ +. _lh_vecadd_LH_P3_1¹⁷) (_lh_vecadd_LH_P3_2¹⁶ +. _lh_vecadd_LH_P3_2¹⁷)]}}: 2564 --->
//│ 	[LH_P3 (_lh_vecadd_LH_P3_0¹⁴ +. _lh_vecadd_LH_P3_0¹⁵) (_lh_vecadd_LH_P3_1¹⁴ +. _lh_vecadd_LH_P3_1¹⁵) (_lh_vecadd_LH_P3_2¹⁴ +. _lh_vecadd_LH_P3_2¹⁵)]: 2449
//│ case _lh_vecnorm_arg1³ of {LH_P3 _lh_vecnorm_LH_P3_0³ _lh_vecnorm_LH_P3_1³ _lh_vecnorm_LH_P3_2³ => let len³ = sqrt⁰((((_lh_vecnorm_LH_P3_0³ *. _lh_vecnorm_LH_P3_0³) +. (_lh_vecnorm_LH_P3_1³ *. _lh_vecnorm_LH_P3_1³)) +. (_lh_vecnorm_LH_P3_2³ *. _lh_vecnorm_LH_P3_2³)))
//│ in [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0³ /. len³) (_lh_vecnorm_LH_P3_1³ /. len³) (_lh_vecnorm_LH_P3_2³ /. len³)] len³]}: 2610 --->
//│ 	[LH_P3 (_lh_vecadd_LH_P3_0¹⁶ +. _lh_vecadd_LH_P3_0¹⁷) (_lh_vecadd_LH_P3_1¹⁶ +. _lh_vecadd_LH_P3_1¹⁷) (_lh_vecadd_LH_P3_2¹⁶ +. _lh_vecadd_LH_P3_2¹⁷)]: 2562
//│ case ls⁸ of {LH_C h¹¹ t¹² => f³(h¹¹, foldr_lh_₁(f³, i¹, t¹²)) | LH_N  => i¹}: 2645 --->
//│ 	[LH_C f⁴(h¹²) map_lh_₁(f⁴, t¹³)]: 3117
//│ 	[LH_N]: 3118
//│ case _lh_matchIdent¹⁴ of {LH_P2 _lh_camparams_LH_P2_0¹ _lh_camparams_LH_P2_1¹ => let _lh_matchIdent¹⁵ = vecnorm_lh_₄(veccross_lh_₁(_lh_camparams_LH_P2_0¹, _lh_camparams_LH_P2_0⁰))
//│ in case _lh_matchIdent¹⁵ of {LH_P2 _lh_camparams_LH_P2_0² _lh_camparams_LH_P2_1² => let xfov⁰ = _lh_camparams_arg4⁰
//│ in let yfov⁰ = _lh_camparams_arg4⁰
//│ in let xwinsize⁰ = _lh_camparams_arg5⁰
//│ in let ywinsize⁰ = _lh_camparams_arg5⁰
//│ in let magx⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₁((xfov⁰ /. 2.0)))) /. xwinsize⁰)
//│ in let magy⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₂((yfov⁰ /. 2.0)))) /. ywinsize⁰)
//│ in let scrnx⁰ = vecscale_lh_₆(_lh_camparams_LH_P2_0¹, magx⁰)
//│ in let scrny⁰ = vecscale_lh_₅(_lh_camparams_LH_P2_0², magy⁰)
//│ in let firstray⁰ = vecsub_lh_₂(initfirstray⁰, vecadd_lh_₃(vecscale_lh_₃(scrnx⁰, (0.5 *. xwinsize⁰)), vecscale_lh_₄(scrny⁰, (0.5 *. ywinsize⁰))))
//│ in [LH_P3 firstray⁰ scrnx⁰ scrny⁰]}}: 2883 --->
//│ 	[LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0¹ /. len¹) (_lh_vecnorm_LH_P3_1¹ /. len¹) (_lh_vecnorm_LH_P3_2¹ /. len¹)] len¹]: 2149
//│ case _lh_matchIdent¹³ of {LH_P2 _lh_camparams_LH_P2_0⁰ _lh_camparams_LH_P2_1⁰ => let _lh_matchIdent¹⁴ = vecnorm_lh_₃(veccross_lh_₂(_lh_camparams_LH_P2_0⁰, _lh_camparams_arg3⁰))
//│ in case _lh_matchIdent¹⁴ of {LH_P2 _lh_camparams_LH_P2_0¹ _lh_camparams_LH_P2_1¹ => let _lh_matchIdent¹⁵ = vecnorm_lh_₄(veccross_lh_₁(_lh_camparams_LH_P2_0¹, _lh_camparams_LH_P2_0⁰))
//│ in case _lh_matchIdent¹⁵ of {LH_P2 _lh_camparams_LH_P2_0² _lh_camparams_LH_P2_1² => let xfov⁰ = _lh_camparams_arg4⁰
//│ in let yfov⁰ = _lh_camparams_arg4⁰
//│ in let xwinsize⁰ = _lh_camparams_arg5⁰
//│ in let ywinsize⁰ = _lh_camparams_arg5⁰
//│ in let magx⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₁((xfov⁰ /. 2.0)))) /. xwinsize⁰)
//│ in let magy⁰ = (((2.0 *. _lh_camparams_LH_P2_1⁰) *. tan⁰(dtor_lh_₂((yfov⁰ /. 2.0)))) /. ywinsize⁰)
//│ in let scrnx⁰ = vecscale_lh_₆(_lh_camparams_LH_P2_0¹, magx⁰)
//│ in let scrny⁰ = vecscale_lh_₅(_lh_camparams_LH_P2_0², magy⁰)
//│ in let firstray⁰ = vecsub_lh_₂(initfirstray⁰, vecadd_lh_₃(vecscale_lh_₃(scrnx⁰, (0.5 *. xwinsize⁰)), vecscale_lh_₄(scrny⁰, (0.5 *. ywinsize⁰))))
//│ in [LH_P3 firstray⁰ scrnx⁰ scrny⁰]}}}: 2885 --->
//│ 	[LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0² /. len²) (_lh_vecnorm_LH_P3_1² /. len²) (_lh_vecnorm_LH_P3_2² /. len²)] len²]: 2236
//│ case _lh_matchIdent¹⁶ of {LH_P2 _lh_tracepixel_LH_P2_0⁰ _lh_tracepixel_LH_P2_1⁰ => let _lh_matchIdent¹⁷ = trace_lh_₁(_lh_tracepixel_arg1⁰, pos⁰, _lh_tracepixel_LH_P2_0⁰)
//│ in case _lh_matchIdent¹⁷ of {LH_P3 _lh_tracepixel_LH_P3_0⁰ _lh_tracepixel_LH_P3_1⁰ _lh_tracepixel_LH_P3_2⁰ => if _lh_tracepixel_LH_P3_0⁰ then shade_lh_₁(_lh_tracepixel_arg2⁰, _lh_tracepixel_LH_P3_2⁰, pos⁰, _lh_tracepixel_LH_P2_0⁰, _lh_tracepixel_LH_P3_1⁰, [LH_P3 1.0 1.0 1.0]) else background_lh_₁}}: 3035 --->
//│ 	[LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0³ /. len³) (_lh_vecnorm_LH_P3_1³ /. len³) (_lh_vecnorm_LH_P3_2³ /. len³)] len³]: 2608
//│ case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰}: 3047 --->
//│ 	[LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)]: 3168
//│ case ls⁹ of {LH_C h¹² t¹³ => [LH_C f⁴(h¹²) map_lh_₁(f⁴, t¹³)] | LH_N  => [LH_N]}: 3119 --->
//│ 	[LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)]: 3172
//│ 	[LH_N]: 3190
//│ case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)}: 3176 --->
//│ 	[LH_C a⁰ enumFromTo_lh_₂((a⁰ + 1), b⁰)]: 2952
//│ 	[LH_N]: 2953
//│ case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₂(0, (_lh_ray_arg1⁰ - 1))) | LH_N  => [LH_N]}: 3191 --->
//│ 	[LH_C a¹ enumFromTo_lh_₁((a¹ + 1), b¹)]: 2980
//│ 	[LH_N]: 2981
//│ case _lh_matchIdent¹⁹ of {LH_P3 _lh_ray_LH_P3_0⁰ _lh_ray_LH_P3_1⁰ _lh_ray_LH_P3_2⁰ => let f⁵ = (fun i² -> (fun j⁰ -> tracepixel_lh_₁(testspheres_lh_₁, lights⁰, float_of_int⁰(i²), float_of_int⁰(j⁰), _lh_ray_LH_P3_0⁰, _lh_ray_LH_P3_1⁰, _lh_ray_LH_P3_2⁰)))
//│ in let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_P2 [LH_P2 _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_h¹¹] f⁵(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun_ls_h¹¹)] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹⁰)})
//│ in _lh_listcomp_fun¹¹(enumFromTo_lh_₂(0, (_lh_ray_arg1⁰ - 1))) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(enumFromTo_lh_₁(0, (_lh_ray_arg1⁰ - 1)))}: 3206 --->
//│ 	[LH_P3 firstray⁰ scrnx⁰ scrny⁰]: 2871
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testSphere_nofib_lh_₁(primId⁰(30))
//│ def ambientsurf_lh_₁(_lh_ambientsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => case _lh_listcomp_fun_ls_h⁸ of {
//│ 			Ambient _lh_ambientsurf_Ambient_0⁰ => 
//│ 				let t¹¹ = _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)
//│ 				in let h⁹ = _lh_ambientsurf_Ambient_0⁰
//│ 				in (fun ys¹² -> [LH_C h⁹ mappend_lh_₃(t¹¹, ys¹²)])
//│ 			| _  => _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)}
//│ 		| LH_N  => (fun ys¹³ -> ys¹³)})
//│ 	in _lh_listcomp_fun¹⁰(_lh_ambientsurf_arg1⁰), [LH_C [LH_P3 0.0 0.0 0.0] [LH_N]]))
//│ def background_lh_₁ = [LH_P3 0.078 0.361 0.753]
//│ def bodysurf_lh_₁(_lh_bodysurf_arg1¹) = head_lh_₄(mappend_lh_₂(
//│ 	let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => case _lh_listcomp_fun_ls_h⁹ of {
//│ 			Body _lh_bodysurf_Body_0¹ => 
//│ 				let t¹² = _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)
//│ 				in let h¹⁰ = _lh_bodysurf_Body_0¹
//│ 				in (fun ys¹⁴ -> [LH_C h¹⁰ mappend_lh_₂(t¹², ys¹⁴)])
//│ 			| _  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}
//│ 		| LH_N  => (fun ys¹⁵ -> ys¹⁵)})
//│ 	in _lh_listcomp_fun¹¹(_lh_bodysurf_arg1¹), [LH_C [LH_P3 1.0 1.0 1.0] [LH_N]]))
//│ def bodysurf_lh_₂(_lh_bodysurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 			Body _lh_bodysurf_Body_0⁰ => 
//│ 				let t² = _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)
//│ 				in let h² = _lh_bodysurf_Body_0⁰
//│ 				in (fun ys² -> [LH_C h² mappend_lh_₃(t², ys²)])
//│ 			| _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}
//│ 		| LH_N  => (fun ys³ -> ys³)})
//│ 	in _lh_listcomp_fun¹(_lh_bodysurf_arg1⁰), [LH_C [LH_P3 1.0 1.0 1.0] [LH_N]]))
//│ def camparams_lh_₁(_lh_camparams_arg1⁰, _lh_camparams_arg2⁰, _lh_camparams_arg3⁰, _lh_camparams_arg4¹, _lh_camparams_arg5¹) = 
//│ 	let initfirstray¹ = vecsub_lh_₁(_lh_camparams_arg2⁰, _lh_camparams_arg1⁰)
//│ 	in let _lh_matchIdent¹⁰ = vecnorm_lh_₂(initfirstray¹)
//│ 	in _lh_matchIdent¹⁰(_lh_camparams_arg3⁰, _lh_camparams_arg4¹, _lh_camparams_arg5¹, initfirstray¹)
//│ def diffusesurf_lh_₁(_lh_diffusesurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => case _lh_listcomp_fun_ls_h⁴ of {
//│ 			Diffuse _lh_diffusesurf_Diffuse_0⁰ => 
//│ 				let t⁸ = _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁴)
//│ 				in let h⁶ = _lh_diffusesurf_Diffuse_0⁰
//│ 				in (fun ys¹⁰ -> [LH_C h⁶ mappend_lh_₃(t⁸, ys¹⁰)])
//│ 			| _  => _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁴)}
//│ 		| LH_N  => (fun ys¹¹ -> ys¹¹)})
//│ 	in _lh_listcomp_fun⁵(_lh_diffusesurf_arg1⁰), [LH_C [LH_P3 0.0 0.0 0.0] [LH_N]]))
//│ def dtor_lh_₁(_lh_dtor_arg1¹) = ((_lh_dtor_arg1¹ *. pi_lh_₁) /. 180.0)
//│ def dtor_lh_₂(_lh_dtor_arg1⁰) = ((_lh_dtor_arg1⁰ *. pi_lh_₂) /. 180.0)
//│ def enumFromTo_lh_₁(a¹, b¹, _lh_floatOutId_0¹³, _lh_floatOutId_1⁹, _lh_floatOutId_2⁸) = if (a¹ <= b¹) then 
//│ 	let _lh_listcomp_fun_ls_t¹⁰ = enumFromTo_lh_₁((a¹ + 1), b¹)
//│ 	in let _lh_listcomp_fun_ls_h¹⁰ = a¹
//│ 	in let _lh_listcomp_fun¹³ = (fun _lh_listcomp_fun_para⁸ -> _lh_listcomp_fun_para⁸(_lh_listcomp_fun_ls_h¹⁰, _lh_listcomp_fun¹³, _lh_floatOutId_2⁸, _lh_listcomp_fun_ls_t¹⁰, _lh_floatOutId_0¹³))
//│ 	in _lh_listcomp_fun¹³(enumFromTo_lh_₂(0, (_lh_floatOutId_1⁹ - 1))) else (fun f¹¹ -> (fun f¹² -> (fun i⁴ -> i⁴)))
//│ def enumFromTo_lh_₂(a⁰, b⁰, _lh_floatOutId_0¹⁰, _lh_floatOutId_1⁶, _lh_floatOutId_2⁵, _lh_floatOutId_3⁴, _lh_floatOutId_4²) = if (a⁰ <= b⁰) then (fun f² -> (fun f³ -> (fun i¹ -> 
//│ 	let _lh_listcomp_fun_ls_t⁵ = enumFromTo_lh_₂((a⁰ + 1), b⁰)
//│ 	in let _lh_listcomp_fun_ls_h⁵ = a⁰
//│ 	in let t⁹ = _lh_floatOutId_1⁶(_lh_listcomp_fun_ls_t⁵)
//│ 	in let h⁷ = 	
//│ 		let _lh_snd_LH_P2_1⁰ = _lh_floatOutId_2⁵(_lh_floatOutId_0¹⁰, _lh_listcomp_fun_ls_h⁵)
//│ 		in let _lh_snd_LH_P2_0⁰ = [LH_P2 _lh_floatOutId_0¹⁰ _lh_listcomp_fun_ls_h⁵]
//│ 		in _lh_snd_LH_P2_1⁰
//│ 	in let t¹⁰ = map_lh_₁(f², t⁹)
//│ 	in let h⁸ = f²(h⁷)
//│ 	in f³(h⁸, foldr_lh_₁(f³, i¹, t¹⁰))))) else _lh_floatOutId_4²(_lh_floatOutId_3⁴)
//│ def epsilon_lh_₁ = 0.000001
//│ def epsilon_lh_₂ = 0.000001
//│ def foldr_lh_₁(f⁵, i², ls²) = ls²(f⁵, i²)
//│ def foldr_lh_₂(f⁶, i³, ls³) = case ls³ of {
//│ 	LH_C h¹¹ t¹³ => f⁶(h¹¹, foldr_lh_₂(f⁶, i³, t¹³))
//│ 	| LH_N  => i³}
//│ def fov_lh_₁ = 45.0
//│ def fst_lh_₁(_lh_fst_arg1⁰) = case _lh_fst_arg1⁰ of {
//│ 	LH_P2 _lh_fst_LH_P2_0⁰ _lh_fst_LH_P2_1⁰ => _lh_fst_LH_P2_0⁰}
//│ def hash_lh_₁(_lh_hash_arg1⁰) = 
//│ 	let u8⁰ = (fun x⁰ -> (fun _lh_funcomp_x⁰ -> int_of_float⁰((fun x¹ -> (255.0 *. x¹))(_lh_funcomp_x⁰)))(x⁰))
//│ 	in foldr_lh_₁((fun rgb⁰ -> (fun acc⁰ -> 
//│ 		let _lh_matchIdent²¹ = rgb⁰
//│ 		in case _lh_matchIdent²¹ of {
//│ 			LH_P3 _lh_hash_LH_P3_0⁰ _lh_hash_LH_P3_1⁰ _lh_hash_LH_P3_2⁰ => (((u8⁰(_lh_hash_LH_P3_0⁰) + (u8⁰(_lh_hash_LH_P3_1⁰) * 7)) + (u8⁰(_lh_hash_LH_P3_2⁰) * 23)) + (acc⁰ * 61))})), 0, _lh_hash_arg1⁰)
//│ def head_lh_₁(ls⁹) = case ls⁹ of {
//│ 	LH_C h¹⁸ t²⁰ => h¹⁸
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls¹) = case ls¹ of {
//│ 	LH_C h⁵ t⁷ => h⁵
//│ 	| LH_N  => error⁰}
//│ def head_lh_₃(ls⁸) = case ls⁸ of {
//│ 	LH_C h¹⁶ t¹⁸ => h¹⁶
//│ 	| LH_N  => error⁰}
//│ def head_lh_₄(ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => h⁰
//│ 	| LH_N  => error⁰}
//│ def head_lh_₅(ls⁴) = case ls⁴ of {
//│ 	LH_C h¹² t¹⁴ => h¹²
//│ 	| LH_N  => error⁰}
//│ def infinity_lh_₁ = 100000000.0
//│ def is_zerovector_lh_₁(_lh_is_zerovector_arg1⁰) = case _lh_is_zerovector_arg1⁰ of {
//│ 	LH_P3 _lh_is_zerovector_LH_P3_0⁰ _lh_is_zerovector_LH_P3_1⁰ _lh_is_zerovector_LH_P3_2⁰ => ((polyLt⁰(_lh_is_zerovector_LH_P3_0⁰, epsilon_lh_₂) && polyLt⁰(_lh_is_zerovector_LH_P3_1⁰, epsilon_lh_₂)) && polyLt⁰(_lh_is_zerovector_LH_P3_2⁰, epsilon_lh_₂))}
//│ def lightcolour_lh_₁(_lh_lightcolour_arg1⁰) = case _lh_lightcolour_arg1⁰ of {
//│ 	Directional _lh_lightcolour_Directional_0⁰ _lh_lightcolour_Directional_1⁰ => _lh_lightcolour_Directional_1⁰
//│ 	| Point _lh_lightcolour_Point_0⁰ _lh_lightcolour_Point_1⁰ => _lh_lightcolour_Point_1⁰}
//│ def lightdirection_lh_₁(_lh_lightdirection_arg1⁰, _lh_lightdirection_arg2⁰) = case _lh_lightdirection_arg1⁰ of {
//│ 	Directional _lh_lightdirection_Directional_0⁰ _lh_lightdirection_Directional_1⁰ => [LH_P2 fst_lh_₁(vecnorm_lh_₄(_lh_lightdirection_Directional_0⁰)) infinity_lh_₁]
//│ 	| Point _lh_lightdirection_Point_0⁰ _lh_lightdirection_Point_1⁰ => vecnorm_lh_₄(vecsub_lh_₃(_lh_lightdirection_Point_0⁰, _lh_lightdirection_arg2⁰))}
//│ def lightray_lh_₁(_lh_lightray_arg1⁰, _lh_lightray_arg2⁰, _lh_lightray_arg3⁰, _lh_lightray_arg4², _lh_lightray_arg5²) = 
//│ 	let _lh_matchIdent⁸ = lightdirection_lh_₁(_lh_lightray_arg1⁰, _lh_lightray_arg2⁰)
//│ 	in case _lh_matchIdent⁸ of {
//│ 		LH_P2 _lh_lightray_LH_P2_0⁴ _lh_lightray_LH_P2_1² => 
//│ 			let cosangle² = vecdot_lh_₅(_lh_lightray_LH_P2_0⁴, _lh_lightray_arg3⁰)
//│ 			in let _lh_matchIdent⁹ = shadowed_lh_₁(_lh_lightray_arg2⁰, _lh_lightray_LH_P2_0⁴, lightcolour_lh_₁(_lh_lightray_arg1⁰))
//│ 			in _lh_matchIdent⁹(_lh_lightray_LH_P2_0⁴, _lh_lightray_arg4², _lh_lightray_arg5², cosangle²)}
//│ def lookat_lh_₁(_lh_vecsub_arg2³) = 
//│ 	let _lh_vecsub_LH_P3_2⁵ = 0.0
//│ 	in let _lh_vecsub_LH_P3_1⁵ = 0.0
//│ 	in let _lh_vecsub_LH_P3_0⁵ = 0.0
//│ 	in _lh_vecsub_arg2³(_lh_vecsub_LH_P3_0⁵, _lh_vecsub_LH_P3_1⁵, _lh_vecsub_LH_P3_2⁵)
//│ def lookfrom_lh_₁(_lh_vecsub_LH_P3_0⁷, _lh_vecsub_LH_P3_1⁷, _lh_vecsub_LH_P3_2⁷) = 
//│ 	let _lh_vecsub_LH_P3_2⁶ = 1.7
//│ 	in let _lh_vecsub_LH_P3_1⁶ = 1.3
//│ 	in let _lh_vecsub_LH_P3_0⁶ = 2.1
//│ 	in [LH_P3 (_lh_vecsub_LH_P3_0⁷ -. _lh_vecsub_LH_P3_0⁶) (_lh_vecsub_LH_P3_1⁷ -. _lh_vecsub_LH_P3_1⁶) (_lh_vecsub_LH_P3_2⁷ -. _lh_vecsub_LH_P3_2⁶)]
//│ def lookfrom_lh_₂ = [LH_P3 2.1 1.3 1.7]
//│ def map_lh_₁(f⁸, ls⁷) = ls⁷(f⁸)
//│ def map_lh_₂(f⁷, ls⁵) = ls⁵(f⁷)
//│ def mappend_lh_₁(xs¹, ys⁹) = xs¹(ys⁹)
//│ def mappend_lh_₂(xs², ys¹⁶) = xs²(ys¹⁶)
//│ def mappend_lh_₃(xs⁰, ys⁶) = xs⁰(ys⁶)
//│ def null_lh_₁(_lh_null_arg1⁰) = case _lh_null_arg1⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False]}
//│ def pi_lh_₁ = 3.141592653589793
//│ def pi_lh_₂ = 3.141592653589793
//│ def ray_lh_₁(_lh_ray_arg1¹) = 
//│ 	let lights¹ = testlights_lh_₁
//│ 	in let _lh_matchIdent¹⁴ = camparams_lh_₁(lookfrom_lh_₁, lookat_lh_₁, vup_lh_₁, fov_lh_₁, float_of_int⁰(_lh_ray_arg1¹))
//│ 	in _lh_matchIdent¹⁴(_lh_ray_arg1¹, lights¹)
//│ def reflectray_lh_₁(_lh_reflectray_arg1⁰, _lh_reflectray_arg2⁰, _lh_reflectray_arg3⁰, _lh_reflectray_arg4⁰, _lh_reflectray_arg5⁰, _lh_reflectray_arg6⁰) = 
//│ 	let newcontrib⁴ = vecmult_lh_₅(_lh_reflectray_arg4⁰, _lh_reflectray_arg5⁰)
//│ 	in let nearpos⁴ = vecadd_lh_₉(_lh_reflectray_arg1⁰, vecscale_lh_₁₄(_lh_reflectray_arg2⁰, epsilon_lh_₂))
//│ 	in let _lh_matchIdent¹¹ = trace_lh_₁(testspheres_lh_₁, nearpos⁴, _lh_reflectray_arg2⁰)
//│ 	in case _lh_matchIdent¹¹ of {
//│ 		LH_P3 _lh_reflectray_LH_P3_0⁰ _lh_reflectray_LH_P3_1⁰ _lh_reflectray_LH_P3_2⁰ => 
//│ 			let newcol⁴ = if _lh_reflectray_LH_P3_0⁰ then shade_lh_₁(_lh_reflectray_arg3⁰, _lh_reflectray_LH_P3_2⁰, nearpos⁴, _lh_reflectray_arg2⁰, _lh_reflectray_LH_P3_1⁰, newcontrib⁴) else background_lh_₁
//│ 			in if is_zerovector_lh_₁(newcontrib⁴) then _lh_reflectray_arg6⁰ else vecadd_lh_₉(_lh_reflectray_arg6⁰, vecmult_lh_₅(newcol⁴, _lh_reflectray_arg4⁰))}
//│ def reflectsurf_lh_₁(_lh_reflectsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 		LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => case _lh_listcomp_fun_ls_h³ of {
//│ 			Reflect _lh_reflectsurf_Reflect_0⁰ => 
//│ 				let t⁶ = _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t³)
//│ 				in let h⁴ = _lh_reflectsurf_Reflect_0⁰
//│ 				in (fun ys⁷ -> [LH_C h⁴ mappend_lh_₃(t⁶, ys⁷)])
//│ 			| _  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t³)}
//│ 		| LH_N  => (fun ys⁸ -> ys⁸)})
//│ 	in _lh_listcomp_fun⁴(_lh_reflectsurf_arg1⁰), [LH_C 0.0 [LH_N]]))
//│ def refractray_lh_₁(_lh_refractray_arg1⁰, _lh_refractray_arg2⁰, _lh_refractray_arg3⁰) = 
//│ 	let dotp⁰ = (0.0 -. vecdot_lh_₆(_lh_refractray_arg2⁰, _lh_refractray_arg3⁰))
//│ 	in let _lh_matchIdent² = if polyLt⁰(dotp⁰, 0.0) then 
//│ 		let _lh_refractray_LH_P3_2⁰ = (1.0 /. _lh_refractray_arg1⁰)
//│ 		in let _lh_refractray_LH_P3_1⁰ = (0.0 -. dotp⁰)
//│ 		in let _lh_refractray_LH_P3_0⁰ = vecscale_lh_₁₄(_lh_refractray_arg3⁰, (0.0 -. 1.0))
//│ 		in (fun _lh_refractray_arg2¹ -> 
//│ 			let disc⁰ = (((1.0 -. _lh_refractray_LH_P3_2⁰) *. _lh_refractray_LH_P3_2⁰) *. (1.0 -. (_lh_refractray_LH_P3_1⁰ *. _lh_refractray_LH_P3_1⁰)))
//│ 			in let t³ = ((_lh_refractray_LH_P3_2⁰ *. _lh_refractray_LH_P3_1⁰) -. sqrt⁰(disc⁰))
//│ 			in if polyLt⁰(disc⁰, 0.0) then 
//│ 				let _lh_transmitray_LH_P2_1⁰ = [LH_P3 0.0 0.0 0.0]
//│ 				in let _lh_transmitray_LH_P2_0⁰ = [True]
//│ 				in (fun _lh_transmitray_arg1⁰ -> (fun _lh_transmitray_arg2⁰ -> (fun _lh_transmitray_arg3⁰ -> (fun _lh_transmitray_arg6⁰ -> (fun newcontrib⁰ -> 
//│ 					let nearpos⁰ = vecadd_lh_₉(_lh_transmitray_arg3⁰, vecscale_lh_₁₄(_lh_transmitray_LH_P2_1⁰, epsilon_lh_₂))
//│ 					in let _lh_matchIdent³ = trace_lh_₁(testspheres_lh_₁, nearpos⁰, _lh_transmitray_LH_P2_1⁰)
//│ 					in case _lh_matchIdent³ of {
//│ 						LH_P3 _lh_transmitray_LH_P3_0⁰ _lh_transmitray_LH_P3_1⁰ _lh_transmitray_LH_P3_2⁰ => 
//│ 							let newcol⁰ = if _lh_transmitray_LH_P3_0⁰ then shade_lh_₁(_lh_transmitray_arg1⁰, _lh_transmitray_LH_P3_2⁰, nearpos⁰, _lh_transmitray_LH_P2_1⁰, _lh_transmitray_LH_P3_1⁰, newcontrib⁰) else background_lh_₁
//│ 							in if is_zerovector_lh_₁(newcontrib⁰) then 
//│ 								let _lh_shade_LH_P2_1⁰ = _lh_transmitray_arg2⁰
//│ 								in let _lh_shade_LH_P2_0⁰ = [False]
//│ 								in (fun _lh_shade_arg1⁰ -> (fun _lh_shade_arg6⁰ -> (fun hitpos⁰ -> (fun refl⁰ -> (fun surf⁰ -> (fun trintensity⁰ -> 
//│ 									let reflsurf⁰ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁰), reflectsurf_lh_₁(surf⁰))
//│ 									in let reflectiv⁰ = if _lh_shade_LH_P2_0⁰ then vecadd_lh_₄(trintensity⁰, reflsurf⁰) else reflsurf⁰
//│ 									in let rcol⁰ = if is_zerovector_lh_₁(reflectiv⁰) then _lh_shade_LH_P2_1⁰ else reflectray_lh_₁(hitpos⁰, refl⁰, _lh_shade_arg1⁰, reflectiv⁰, _lh_shade_arg6⁰, _lh_shade_LH_P2_1⁰)
//│ 									in rcol⁰)))))) else 
//│ 								let _lh_shade_LH_P2_1¹ = vecadd_lh_₉(vecmult_lh_₅(newcol⁰, _lh_transmitray_arg6⁰), _lh_transmitray_arg2⁰)
//│ 								in let _lh_shade_LH_P2_0¹ = [False]
//│ 								in (fun _lh_shade_arg1¹ -> (fun _lh_shade_arg6¹ -> (fun hitpos¹ -> (fun refl¹ -> (fun surf¹ -> (fun trintensity¹ -> 
//│ 									let reflsurf¹ = vecscale_lh_₁₀(specularsurf_lh_₁(surf¹), reflectsurf_lh_₁(surf¹))
//│ 									in let reflectiv¹ = if _lh_shade_LH_P2_0¹ then vecadd_lh_₄(trintensity¹, reflsurf¹) else reflsurf¹
//│ 									in let rcol¹ = if is_zerovector_lh_₁(reflectiv¹) then _lh_shade_LH_P2_1¹ else reflectray_lh_₁(hitpos¹, refl¹, _lh_shade_arg1¹, reflectiv¹, _lh_shade_arg6¹, _lh_shade_LH_P2_1¹)
//│ 									in rcol¹))))))}))))) else 
//│ 				let _lh_transmitray_LH_P2_1¹ = vecadd_lh_₉(vecscale_lh_₁₄(_lh_refractray_LH_P3_0⁰, t³), vecscale_lh_₁₄(_lh_refractray_arg2¹, _lh_refractray_LH_P3_2⁰))
//│ 				in let _lh_transmitray_LH_P2_0¹ = [False]
//│ 				in (fun _lh_transmitray_arg1¹ -> (fun _lh_transmitray_arg2¹ -> (fun _lh_transmitray_arg3¹ -> (fun _lh_transmitray_arg6¹ -> (fun newcontrib¹ -> 
//│ 					let nearpos¹ = vecadd_lh_₉(_lh_transmitray_arg3¹, vecscale_lh_₁₄(_lh_transmitray_LH_P2_1¹, epsilon_lh_₂))
//│ 					in let _lh_matchIdent⁴ = trace_lh_₁(testspheres_lh_₁, nearpos¹, _lh_transmitray_LH_P2_1¹)
//│ 					in case _lh_matchIdent⁴ of {
//│ 						LH_P3 _lh_transmitray_LH_P3_0¹ _lh_transmitray_LH_P3_1¹ _lh_transmitray_LH_P3_2¹ => 
//│ 							let newcol¹ = if _lh_transmitray_LH_P3_0¹ then shade_lh_₁(_lh_transmitray_arg1¹, _lh_transmitray_LH_P3_2¹, nearpos¹, _lh_transmitray_LH_P2_1¹, _lh_transmitray_LH_P3_1¹, newcontrib¹) else background_lh_₁
//│ 							in if is_zerovector_lh_₁(newcontrib¹) then 
//│ 								let _lh_shade_LH_P2_1² = _lh_transmitray_arg2¹
//│ 								in let _lh_shade_LH_P2_0² = [False]
//│ 								in (fun _lh_shade_arg1² -> (fun _lh_shade_arg6² -> (fun hitpos² -> (fun refl² -> (fun surf² -> (fun trintensity² -> 
//│ 									let reflsurf² = vecscale_lh_₁₀(specularsurf_lh_₁(surf²), reflectsurf_lh_₁(surf²))
//│ 									in let reflectiv² = if _lh_shade_LH_P2_0² then vecadd_lh_₄(trintensity², reflsurf²) else reflsurf²
//│ 									in let rcol² = if is_zerovector_lh_₁(reflectiv²) then _lh_shade_LH_P2_1² else reflectray_lh_₁(hitpos², refl², _lh_shade_arg1², reflectiv², _lh_shade_arg6², _lh_shade_LH_P2_1²)
//│ 									in rcol²)))))) else 
//│ 								let _lh_shade_LH_P2_1³ = vecadd_lh_₉(vecmult_lh_₅(newcol¹, _lh_transmitray_arg6¹), _lh_transmitray_arg2¹)
//│ 								in let _lh_shade_LH_P2_0³ = [False]
//│ 								in (fun _lh_shade_arg1³ -> (fun _lh_shade_arg6³ -> (fun hitpos³ -> (fun refl³ -> (fun surf³ -> (fun trintensity³ -> 
//│ 									let reflsurf³ = vecscale_lh_₁₀(specularsurf_lh_₁(surf³), reflectsurf_lh_₁(surf³))
//│ 									in let reflectiv³ = if _lh_shade_LH_P2_0³ then vecadd_lh_₄(trintensity³, reflsurf³) else reflsurf³
//│ 									in let rcol³ = if is_zerovector_lh_₁(reflectiv³) then _lh_shade_LH_P2_1³ else reflectray_lh_₁(hitpos³, refl³, _lh_shade_arg1³, reflectiv³, _lh_shade_arg6³, _lh_shade_LH_P2_1³)
//│ 									in rcol³))))))})))))) else 
//│ 		let _lh_refractray_LH_P3_2¹ = _lh_refractray_arg1⁰
//│ 		in let _lh_refractray_LH_P3_1¹ = dotp⁰
//│ 		in let _lh_refractray_LH_P3_0¹ = _lh_refractray_arg3⁰
//│ 		in (fun _lh_refractray_arg2² -> 
//│ 			let disc¹ = (((1.0 -. _lh_refractray_LH_P3_2¹) *. _lh_refractray_LH_P3_2¹) *. (1.0 -. (_lh_refractray_LH_P3_1¹ *. _lh_refractray_LH_P3_1¹)))
//│ 			in let t⁴ = ((_lh_refractray_LH_P3_2¹ *. _lh_refractray_LH_P3_1¹) -. sqrt⁰(disc¹))
//│ 			in if polyLt⁰(disc¹, 0.0) then 
//│ 				let _lh_transmitray_LH_P2_1² = [LH_P3 0.0 0.0 0.0]
//│ 				in let _lh_transmitray_LH_P2_0² = [True]
//│ 				in (fun _lh_transmitray_arg1² -> (fun _lh_transmitray_arg2² -> (fun _lh_transmitray_arg3² -> (fun _lh_transmitray_arg6² -> (fun newcontrib² -> 
//│ 					let nearpos² = vecadd_lh_₉(_lh_transmitray_arg3², vecscale_lh_₁₄(_lh_transmitray_LH_P2_1², epsilon_lh_₂))
//│ 					in let _lh_matchIdent⁵ = trace_lh_₁(testspheres_lh_₁, nearpos², _lh_transmitray_LH_P2_1²)
//│ 					in case _lh_matchIdent⁵ of {
//│ 						LH_P3 _lh_transmitray_LH_P3_0² _lh_transmitray_LH_P3_1² _lh_transmitray_LH_P3_2² => 
//│ 							let newcol² = if _lh_transmitray_LH_P3_0² then shade_lh_₁(_lh_transmitray_arg1², _lh_transmitray_LH_P3_2², nearpos², _lh_transmitray_LH_P2_1², _lh_transmitray_LH_P3_1², newcontrib²) else background_lh_₁
//│ 							in if is_zerovector_lh_₁(newcontrib²) then 
//│ 								let _lh_shade_LH_P2_1⁴ = _lh_transmitray_arg2²
//│ 								in let _lh_shade_LH_P2_0⁴ = [False]
//│ 								in (fun _lh_shade_arg1⁴ -> (fun _lh_shade_arg6⁴ -> (fun hitpos⁴ -> (fun refl⁴ -> (fun surf⁴ -> (fun trintensity⁴ -> 
//│ 									let reflsurf⁴ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁴), reflectsurf_lh_₁(surf⁴))
//│ 									in let reflectiv⁴ = if _lh_shade_LH_P2_0⁴ then vecadd_lh_₄(trintensity⁴, reflsurf⁴) else reflsurf⁴
//│ 									in let rcol⁴ = if is_zerovector_lh_₁(reflectiv⁴) then _lh_shade_LH_P2_1⁴ else reflectray_lh_₁(hitpos⁴, refl⁴, _lh_shade_arg1⁴, reflectiv⁴, _lh_shade_arg6⁴, _lh_shade_LH_P2_1⁴)
//│ 									in rcol⁴)))))) else 
//│ 								let _lh_shade_LH_P2_1⁵ = vecadd_lh_₉(vecmult_lh_₅(newcol², _lh_transmitray_arg6²), _lh_transmitray_arg2²)
//│ 								in let _lh_shade_LH_P2_0⁵ = [False]
//│ 								in (fun _lh_shade_arg1⁵ -> (fun _lh_shade_arg6⁵ -> (fun hitpos⁵ -> (fun refl⁵ -> (fun surf⁵ -> (fun trintensity⁵ -> 
//│ 									let reflsurf⁵ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁵), reflectsurf_lh_₁(surf⁵))
//│ 									in let reflectiv⁵ = if _lh_shade_LH_P2_0⁵ then vecadd_lh_₄(trintensity⁵, reflsurf⁵) else reflsurf⁵
//│ 									in let rcol⁵ = if is_zerovector_lh_₁(reflectiv⁵) then _lh_shade_LH_P2_1⁵ else reflectray_lh_₁(hitpos⁵, refl⁵, _lh_shade_arg1⁵, reflectiv⁵, _lh_shade_arg6⁵, _lh_shade_LH_P2_1⁵)
//│ 									in rcol⁵))))))}))))) else 
//│ 				let _lh_transmitray_LH_P2_1³ = vecadd_lh_₉(vecscale_lh_₁₄(_lh_refractray_LH_P3_0¹, t⁴), vecscale_lh_₁₄(_lh_refractray_arg2², _lh_refractray_LH_P3_2¹))
//│ 				in let _lh_transmitray_LH_P2_0³ = [False]
//│ 				in (fun _lh_transmitray_arg1³ -> (fun _lh_transmitray_arg2³ -> (fun _lh_transmitray_arg3³ -> (fun _lh_transmitray_arg6³ -> (fun newcontrib³ -> 
//│ 					let nearpos³ = vecadd_lh_₉(_lh_transmitray_arg3³, vecscale_lh_₁₄(_lh_transmitray_LH_P2_1³, epsilon_lh_₂))
//│ 					in let _lh_matchIdent⁶ = trace_lh_₁(testspheres_lh_₁, nearpos³, _lh_transmitray_LH_P2_1³)
//│ 					in case _lh_matchIdent⁶ of {
//│ 						LH_P3 _lh_transmitray_LH_P3_0³ _lh_transmitray_LH_P3_1³ _lh_transmitray_LH_P3_2³ => 
//│ 							let newcol³ = if _lh_transmitray_LH_P3_0³ then shade_lh_₁(_lh_transmitray_arg1³, _lh_transmitray_LH_P3_2³, nearpos³, _lh_transmitray_LH_P2_1³, _lh_transmitray_LH_P3_1³, newcontrib³) else background_lh_₁
//│ 							in if is_zerovector_lh_₁(newcontrib³) then 
//│ 								let _lh_shade_LH_P2_1⁶ = _lh_transmitray_arg2³
//│ 								in let _lh_shade_LH_P2_0⁶ = [False]
//│ 								in (fun _lh_shade_arg1⁶ -> (fun _lh_shade_arg6⁶ -> (fun hitpos⁶ -> (fun refl⁶ -> (fun surf⁶ -> (fun trintensity⁶ -> 
//│ 									let reflsurf⁶ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁶), reflectsurf_lh_₁(surf⁶))
//│ 									in let reflectiv⁶ = if _lh_shade_LH_P2_0⁶ then vecadd_lh_₄(trintensity⁶, reflsurf⁶) else reflsurf⁶
//│ 									in let rcol⁶ = if is_zerovector_lh_₁(reflectiv⁶) then _lh_shade_LH_P2_1⁶ else reflectray_lh_₁(hitpos⁶, refl⁶, _lh_shade_arg1⁶, reflectiv⁶, _lh_shade_arg6⁶, _lh_shade_LH_P2_1⁶)
//│ 									in rcol⁶)))))) else 
//│ 								let _lh_shade_LH_P2_1⁷ = vecadd_lh_₉(vecmult_lh_₅(newcol³, _lh_transmitray_arg6³), _lh_transmitray_arg2³)
//│ 								in let _lh_shade_LH_P2_0⁷ = [False]
//│ 								in (fun _lh_shade_arg1⁷ -> (fun _lh_shade_arg6⁷ -> (fun hitpos⁷ -> (fun refl⁷ -> (fun surf⁷ -> (fun trintensity⁷ -> 
//│ 									let reflsurf⁷ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁷), reflectsurf_lh_₁(surf⁷))
//│ 									in let reflectiv⁷ = if _lh_shade_LH_P2_0⁷ then vecadd_lh_₄(trintensity⁷, reflsurf⁷) else reflsurf⁷
//│ 									in let rcol⁷ = if is_zerovector_lh_₁(reflectiv⁷) then _lh_shade_LH_P2_1⁷ else reflectray_lh_₁(hitpos⁷, refl⁷, _lh_shade_arg1⁷, reflectiv⁷, _lh_shade_arg6⁷, _lh_shade_LH_P2_1⁷)
//│ 									in rcol⁷))))))}))))))
//│ 	in _lh_matchIdent²(_lh_refractray_arg2⁰)
//│ def refractsurf_lh_₁(_lh_refractsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => case _lh_listcomp_fun_ls_h¹¹ of {
//│ 			Refract _lh_refractsurf_Refract_0⁰ => 
//│ 				let t¹⁶ = _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)
//│ 				in let h¹⁴ = _lh_refractsurf_Refract_0⁰
//│ 				in (fun ys¹⁷ -> [LH_C h¹⁴ mappend_lh_₃(t¹⁶, ys¹⁷)])
//│ 			| _  => _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)}
//│ 		| LH_N  => (fun ys¹⁸ -> ys¹⁸)})
//│ 	in _lh_listcomp_fun¹⁵(_lh_refractsurf_arg1⁰), [LH_C 1.0 [LH_N]]))
//│ def run_lh_₁(_lh_run_arg1⁰) = hash_lh_₁(map_lh_₁(snd_lh_₁, ray_lh_₁(_lh_run_arg1⁰)))
//│ def s2_lh_₁ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₁₀ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₂ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₃ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₄ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₅ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₆ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₇ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₈ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def s2_lh_₉ = [LH_C [Ambient [LH_P3 0.035 0.0325 0.025]] [LH_C [Diffuse [LH_P3 0.5 0.45 0.35]] [LH_C [Specular [LH_P3 0.8 0.8 0.8]] [LH_C [Specpow 3.0] [LH_C [Reflect 0.5] [LH_N]]]]]]
//│ def shade_lh_₁(_lh_shade_arg1⁸, _lh_shade_arg2⁰, _lh_shade_arg3⁰, _lh_shade_arg4⁰, _lh_shade_arg5⁰, _lh_shade_arg6⁸) = 
//│ 	let hitpos⁸ = vecadd_lh_₆(_lh_shade_arg3⁰, vecscale_lh_₇(_lh_shade_arg4⁰, _lh_shade_arg5⁰))
//│ 	in let ambientlight⁰ = 	
//│ 		let _lh_vecmult_LH_P3_2⁶ = 1.0
//│ 		in let _lh_vecmult_LH_P3_1⁶ = 1.0
//│ 		in let _lh_vecmult_LH_P3_0⁶ = 1.0
//│ 		in (fun _lh_vecmult_arg2⁴ -> case _lh_vecmult_arg2⁴ of {
//│ 			LH_P3 _lh_vecmult_LH_P3_0⁷ _lh_vecmult_LH_P3_1⁷ _lh_vecmult_LH_P3_2⁷ => 
//│ 				let _lh_vecadd_LH_P3_2¹⁸ = (_lh_vecmult_LH_P3_2⁶ *. _lh_vecmult_LH_P3_2⁷)
//│ 				in let _lh_vecadd_LH_P3_1¹⁸ = (_lh_vecmult_LH_P3_1⁶ *. _lh_vecmult_LH_P3_1⁷)
//│ 				in let _lh_vecadd_LH_P3_0¹⁸ = (_lh_vecmult_LH_P3_0⁶ *. _lh_vecmult_LH_P3_0⁷)
//│ 				in (fun _lh_vecadd_arg2⁷ -> case _lh_vecadd_arg2⁷ of {
//│ 					LH_P3 _lh_vecadd_LH_P3_0¹⁹ _lh_vecadd_LH_P3_1¹⁹ _lh_vecadd_LH_P3_2¹⁹ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁸ +. _lh_vecadd_LH_P3_0¹⁹) (_lh_vecadd_LH_P3_1¹⁸ +. _lh_vecadd_LH_P3_1¹⁹) (_lh_vecadd_LH_P3_2¹⁸ +. _lh_vecadd_LH_P3_2¹⁹)]})})
//│ 	in let surf⁸ = spheresurf_lh_₁(_lh_shade_arg2⁰)
//│ 	in let amb⁰ = vecmult_lh_₁(ambientlight⁰, ambientsurf_lh_₁(surf⁸))
//│ 	in let norm⁰ = spherenormal_lh_₁(hitpos⁸, _lh_shade_arg2⁰)
//│ 	in let refl⁸ = vecadd_lh_₇(_lh_shade_arg4⁰, vecscale_lh_₉(norm⁰, ((0.0 -. 2.0) *. vecdot_lh_₁(_lh_shade_arg4⁰, norm⁰))))
//│ 	in let diff² = vecsum_lh_₁(map_lh_₂((fun l⁰ -> lightray_lh_₁(l⁰, hitpos⁸, norm⁰, refl⁸, surf⁸)), _lh_shade_arg1⁸))
//│ 	in let transmitted⁰ = transmitsurf_lh_₁(surf⁸)
//│ 	in let simple⁰ = vecadd_lh_₅(amb⁰, diff²)
//│ 	in let trintensity⁸ = vecscale_lh_₈(bodysurf_lh_₁(surf⁸), transmitted⁰)
//│ 	in let _lh_matchIdent¹² = if polyLt⁰(transmitted⁰, epsilon_lh_₁) then 
//│ 		let _lh_shade_LH_P2_1⁸ = simple⁰
//│ 		in let _lh_shade_LH_P2_0⁸ = [False]
//│ 		in (fun _lh_shade_arg1⁹ -> (fun _lh_shade_arg6⁹ -> (fun hitpos⁹ -> (fun refl⁹ -> (fun surf⁹ -> (fun trintensity⁹ -> 
//│ 			let reflsurf⁸ = vecscale_lh_₁₀(specularsurf_lh_₁(surf⁹), reflectsurf_lh_₁(surf⁹))
//│ 			in let reflectiv⁸ = if _lh_shade_LH_P2_0⁸ then vecadd_lh_₄(trintensity⁹, reflsurf⁸) else reflsurf⁸
//│ 			in let rcol⁸ = if is_zerovector_lh_₁(reflectiv⁸) then _lh_shade_LH_P2_1⁸ else reflectray_lh_₁(hitpos⁹, refl⁹, _lh_shade_arg1⁹, reflectiv⁸, _lh_shade_arg6⁹, _lh_shade_LH_P2_1⁸)
//│ 			in rcol⁸)))))) else transmitray_lh_₁(_lh_shade_arg1⁸, simple⁰, hitpos⁸, _lh_shade_arg4⁰, refractsurf_lh_₁(surf⁸), trintensity⁸, _lh_shade_arg6⁸, norm⁰)
//│ 	in _lh_matchIdent¹²(_lh_shade_arg1⁸, _lh_shade_arg6⁸, hitpos⁸, refl⁸, surf⁸, trintensity⁸)
//│ def shadowed_lh_₁(_lh_shadowed_arg1⁰, _lh_shadowed_arg2⁰, _lh_shadowed_arg3⁰, _lh_floatOutId_0², _lh_floatOutId_1², _lh_floatOutId_2², _lh_floatOutId_3²) = 
//│ 	let _lh_matchIdent¹ = trace_lh_₁(testspheres_lh_₁, vecadd_lh_₉(_lh_shadowed_arg1⁰, vecscale_lh_₁₄(_lh_shadowed_arg2⁰, epsilon_lh_₂)), _lh_shadowed_arg2⁰)
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P3 _lh_shadowed_LH_P3_0⁰ _lh_shadowed_LH_P3_1⁰ _lh_shadowed_LH_P3_2⁰ => if not⁰(_lh_shadowed_LH_P3_0⁰) then 
//│ 			let _lh_lightray_LH_P2_1⁰ = _lh_shadowed_arg3⁰
//│ 			in let _lh_lightray_LH_P2_0⁰ = [False]
//│ 			in if _lh_lightray_LH_P2_0⁰ then [LH_P3 0.0 0.0 0.0] else 
//│ 				let diff⁰ = diffusesurf_lh_₁(_lh_floatOutId_2²)
//│ 				in let spow⁰ = specpowsurf_lh_₁(_lh_floatOutId_2²)
//│ 				in if polyLeq⁰(_lh_floatOutId_3², 0.0) then 
//│ 					let bodycol⁰ = bodysurf_lh_₂(_lh_floatOutId_2²)
//│ 					in let cosalpha⁰ = (0.0 -. vecdot_lh_₆(_lh_floatOutId_1², _lh_floatOutId_0²))
//│ 					in let diffcont⁰ = vecmult_lh_₅(vecscale_lh_₁₃(diff⁰, (0.0 -. _lh_floatOutId_3²)), _lh_lightray_LH_P2_1⁰)
//│ 					in let speccont⁰ = if polyLeq⁰(cosalpha⁰, 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₃(vecscale_lh_₁₂(bodycol⁰, (cosalpha⁰ ** spow⁰)), _lh_lightray_LH_P2_1⁰)
//│ 					in vecadd_lh_₉(diffcont⁰, speccont⁰) else 
//│ 					let spec⁰ = specularsurf_lh_₂(_lh_floatOutId_2²)
//│ 					in let cosalpha¹ = vecdot_lh_₄(_lh_floatOutId_1², _lh_floatOutId_0²)
//│ 					in let diffcont¹ = vecmult_lh_₄(vecscale_lh_₁₄(diff⁰, _lh_floatOutId_3²), _lh_lightray_LH_P2_1⁰)
//│ 					in let speccont¹ = if polyLeq⁰(cosalpha¹, 0.0) then 
//│ 						let _lh_vecadd_LH_P3_2² = 0.0
//│ 						in let _lh_vecadd_LH_P3_1² = 0.0
//│ 						in let _lh_vecadd_LH_P3_0² = 0.0
//│ 						in (fun _lh_vecadd_LH_P3_0³ -> (fun _lh_vecadd_LH_P3_1³ -> (fun _lh_vecadd_LH_P3_2³ -> [LH_P3 (_lh_vecadd_LH_P3_0³ +. _lh_vecadd_LH_P3_0²) (_lh_vecadd_LH_P3_1³ +. _lh_vecadd_LH_P3_1²) (_lh_vecadd_LH_P3_2³ +. _lh_vecadd_LH_P3_2²)]))) else vecmult_lh_₂(vecscale_lh_₁₁(spec⁰, (cosalpha¹ ** spow⁰)), _lh_lightray_LH_P2_1⁰)
//│ 					in vecadd_lh_₈(diffcont¹, speccont¹) else 
//│ 			let _lh_lightray_LH_P2_1¹ = _lh_shadowed_arg3⁰
//│ 			in let _lh_lightray_LH_P2_0² = [True]
//│ 			in if _lh_lightray_LH_P2_0² then [LH_P3 0.0 0.0 0.0] else 
//│ 				let diff¹ = diffusesurf_lh_₁(_lh_floatOutId_2²)
//│ 				in let spow¹ = specpowsurf_lh_₁(_lh_floatOutId_2²)
//│ 				in if polyLeq⁰(_lh_floatOutId_3², 0.0) then 
//│ 					let bodycol¹ = bodysurf_lh_₂(_lh_floatOutId_2²)
//│ 					in let cosalpha² = (0.0 -. vecdot_lh_₆(_lh_floatOutId_1², _lh_floatOutId_0²))
//│ 					in let diffcont² = vecmult_lh_₅(vecscale_lh_₁₃(diff¹, (0.0 -. _lh_floatOutId_3²)), _lh_lightray_LH_P2_1¹)
//│ 					in let speccont² = if polyLeq⁰(cosalpha², 0.0) then [LH_P3 0.0 0.0 0.0] else vecmult_lh_₃(vecscale_lh_₁₂(bodycol¹, (cosalpha² ** spow¹)), _lh_lightray_LH_P2_1¹)
//│ 					in vecadd_lh_₉(diffcont², speccont²) else 
//│ 					let spec¹ = specularsurf_lh_₂(_lh_floatOutId_2²)
//│ 					in let cosalpha³ = vecdot_lh_₄(_lh_floatOutId_1², _lh_floatOutId_0²)
//│ 					in let diffcont³ = vecmult_lh_₄(vecscale_lh_₁₄(diff¹, _lh_floatOutId_3²), _lh_lightray_LH_P2_1¹)
//│ 					in let speccont³ = if polyLeq⁰(cosalpha³, 0.0) then 
//│ 						let _lh_vecadd_LH_P3_2⁴ = 0.0
//│ 						in let _lh_vecadd_LH_P3_1⁴ = 0.0
//│ 						in let _lh_vecadd_LH_P3_0⁴ = 0.0
//│ 						in (fun _lh_vecadd_LH_P3_0⁵ -> (fun _lh_vecadd_LH_P3_1⁵ -> (fun _lh_vecadd_LH_P3_2⁵ -> [LH_P3 (_lh_vecadd_LH_P3_0⁵ +. _lh_vecadd_LH_P3_0⁴) (_lh_vecadd_LH_P3_1⁵ +. _lh_vecadd_LH_P3_1⁴) (_lh_vecadd_LH_P3_2⁵ +. _lh_vecadd_LH_P3_2⁴)]))) else vecmult_lh_₂(vecscale_lh_₁₁(spec¹, (cosalpha³ ** spow¹)), _lh_lightray_LH_P2_1¹)
//│ 					in vecadd_lh_₈(diffcont³, speccont³)}
//│ def snd_lh_₁(_lh_snd_arg1⁰) = _lh_snd_arg1⁰
//│ def specpowsurf_lh_₁(_lh_specpowsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => case _lh_listcomp_fun_ls_h² of {
//│ 			Specpow _lh_specpowsurf_Specpow_0⁰ => 
//│ 				let t⁵ = _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)
//│ 				in let h³ = _lh_specpowsurf_Specpow_0⁰
//│ 				in (fun ys⁴ -> [LH_C h³ mappend_lh_₃(t⁵, ys⁴)])
//│ 			| _  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}
//│ 		| LH_N  => (fun ys⁵ -> ys⁵)})
//│ 	in _lh_listcomp_fun²(_lh_specpowsurf_arg1⁰), [LH_C 8.0 [LH_N]]))
//│ def specularsurf_lh_₁(_lh_specularsurf_arg1⁰) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => case _lh_listcomp_fun_ls_h⁰ of {
//│ 			Specular _lh_specularsurf_Specular_0⁰ => 
//│ 				let t¹ = _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)
//│ 				in let h¹ = _lh_specularsurf_Specular_0⁰
//│ 				in (fun ys⁰ -> [LH_C h¹ mappend_lh_₃(t¹, ys⁰)])
//│ 			| _  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}
//│ 		| LH_N  => (fun ys¹ -> ys¹)})
//│ 	in _lh_listcomp_fun⁰(_lh_specularsurf_arg1⁰), [LH_C [LH_P3 0.0 0.0 0.0] [LH_N]]))
//│ def specularsurf_lh_₂(_lh_specularsurf_arg1¹) = head_lh_₅(mappend_lh_₃(
//│ 	let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => case _lh_listcomp_fun_ls_h¹² of {
//│ 			Specular _lh_specularsurf_Specular_0¹ => 
//│ 				let t¹⁷ = _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)
//│ 				in let h¹⁵ = _lh_specularsurf_Specular_0¹
//│ 				in (fun ys¹⁹ -> [LH_C h¹⁵ mappend_lh_₃(t¹⁷, ys¹⁹)])
//│ 			| _  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}
//│ 		| LH_N  => (fun ys²⁰ -> ys²⁰)})
//│ 	in _lh_listcomp_fun¹⁶(_lh_specularsurf_arg1¹), [LH_C [LH_P3 0.0 0.0 0.0] [LH_N]]))
//│ def sphereintersect_lh_₁(_lh_sphereintersect_arg1⁰, _lh_sphereintersect_arg2⁰, _lh_sphereintersect_arg3⁰, _lh_floatOutId_0¹⁷, _lh_floatOutId_1¹³, _lh_floatOutId_2¹²) = case _lh_sphereintersect_arg3⁰ of {
//│ 	Sphere _lh_sphereintersect_Sphere_0⁰ _lh_sphereintersect_Sphere_1⁰ _lh_sphereintersect_Sphere_2⁰ => 
//│ 		let m⁰ = vecsub_lh_₃(_lh_sphereintersect_arg1⁰, _lh_sphereintersect_Sphere_0⁰)
//│ 		in let bm⁰ = vecdot_lh_₂(m⁰, _lh_sphereintersect_arg2⁰)
//│ 		in let m2⁰ = vecdot_lh_₃(m⁰, m⁰)
//│ 		in let disc² = (((bm⁰ *. bm⁰) -. m2⁰) +. (_lh_sphereintersect_Sphere_1⁰ *. _lh_sphereintersect_Sphere_1⁰))
//│ 		in let slo⁰ = ((0.0 -. bm⁰) -. sqrt⁰(disc²))
//│ 		in let shi⁰ = ((0.0 -. bm⁰) +. sqrt⁰(disc²))
//│ 		in if polyLt⁰(disc², 0.0) then 
//│ 			let _lh_trace_LH_P2_1³ = 0.0
//│ 			in let _lh_trace_LH_P2_0³ = [False]
//│ 			in if _lh_trace_LH_P2_0³ then [LH_C [LH_P2 _lh_trace_LH_P2_1³ _lh_floatOutId_0¹⁷] _lh_floatOutId_2¹²(_lh_floatOutId_1¹³)] else _lh_floatOutId_2¹²(_lh_floatOutId_1¹³) else if polyLt⁰(slo⁰, 0.0) then if polyLt⁰(shi⁰, 0.0) then 
//│ 			let _lh_trace_LH_P2_1⁴ = 0.0
//│ 			in let _lh_trace_LH_P2_0⁴ = [False]
//│ 			in if _lh_trace_LH_P2_0⁴ then [LH_C [LH_P2 _lh_trace_LH_P2_1⁴ _lh_floatOutId_0¹⁷] _lh_floatOutId_2¹²(_lh_floatOutId_1¹³)] else _lh_floatOutId_2¹²(_lh_floatOutId_1¹³) else 
//│ 			let _lh_trace_LH_P2_1⁵ = shi⁰
//│ 			in let _lh_trace_LH_P2_0⁵ = [True]
//│ 			in if _lh_trace_LH_P2_0⁵ then [LH_C [LH_P2 _lh_trace_LH_P2_1⁵ _lh_floatOutId_0¹⁷] _lh_floatOutId_2¹²(_lh_floatOutId_1¹³)] else _lh_floatOutId_2¹²(_lh_floatOutId_1¹³) else 
//│ 			let _lh_trace_LH_P2_1⁶ = slo⁰
//│ 			in let _lh_trace_LH_P2_0⁶ = [True]
//│ 			in if _lh_trace_LH_P2_0⁶ then [LH_C [LH_P2 _lh_trace_LH_P2_1⁶ _lh_floatOutId_0¹⁷] _lh_floatOutId_2¹²(_lh_floatOutId_1¹³)] else _lh_floatOutId_2¹²(_lh_floatOutId_1¹³)}
//│ def spherenormal_lh_₁(_lh_spherenormal_arg1⁰, _lh_spherenormal_arg2⁰) = case _lh_spherenormal_arg2⁰ of {
//│ 	Sphere _lh_spherenormal_Sphere_0⁰ _lh_spherenormal_Sphere_1⁰ _lh_spherenormal_Sphere_2⁰ => vecscale_lh_₁₄(vecsub_lh_₃(_lh_spherenormal_arg1⁰, _lh_spherenormal_Sphere_0⁰), (1.0 /. _lh_spherenormal_Sphere_1⁰))}
//│ def spheresurf_lh_₁(_lh_spheresurf_arg1⁰) = case _lh_spheresurf_arg1⁰ of {
//│ 	Sphere _lh_spheresurf_Sphere_0⁰ _lh_spheresurf_Sphere_1⁰ _lh_spheresurf_Sphere_2⁰ => _lh_spheresurf_Sphere_2⁰}
//│ def tail_lh_₁(ls⁶) = case ls⁶ of {
//│ 	LH_C h¹³ t¹⁵ => t¹⁵
//│ 	| LH_N  => error⁰}
//│ def testSphere_nofib_lh_₁(_lh_testSphere_nofib_arg1⁰) = run_lh_₁(_lh_testSphere_nofib_arg1⁰)
//│ def testlights_lh_₁(f¹⁷) = 
//│ 	let t²¹ = 	
//│ 		let t²² = 	
//│ 			let t²³ = (fun f¹⁴ -> [LH_N])
//│ 			in let h¹⁹ = [Point [LH_P3 (0.0 -. 3.0) 1.0 5.0] [LH_P3 0.288675 0.288675 0.288675]]
//│ 			in (fun f¹⁵ -> [LH_C f¹⁵(h¹⁹) map_lh_₂(f¹⁵, t²³)])
//│ 		in let h²⁰ = [Point [LH_P3 1.0 (0.0 -. 4.0) 4.0] [LH_P3 0.288675 0.288675 0.288675]]
//│ 		in (fun f¹⁶ -> [LH_C f¹⁶(h²⁰) map_lh_₂(f¹⁶, t²²)])
//│ 	in let h²¹ = [Point [LH_P3 4.0 3.0 2.0] [LH_P3 0.288675 0.288675 0.288675]]
//│ 	in [LH_C f¹⁷(h²¹) map_lh_₂(f¹⁷, t²¹)]
//│ def testspheres_lh_₁ = [LH_C [Sphere [LH_P3 0.0 0.0 0.0] 0.5 s2_lh_₆] [LH_C [Sphere [LH_P3 0.272166 0.272166 0.544331] 0.166667 s2_lh_₃] [LH_C [Sphere [LH_P3 0.643951 0.172546 0.0] 0.166667 s2_lh_₉] [LH_C [Sphere [LH_P3 0.172546 0.643951 0.0] 0.166667 s2_lh_₅] [LH_C [Sphere [LH_P3 (0.0 -. 0.371785) 0.0996195 0.544331] 0.166667 s2_lh_₇] [LH_C [Sphere [LH_P3 (0.0 -. 0.471405) 0.471405 0.0] 0.166667 s2_lh_₂] [LH_C [Sphere [LH_P3 (0.0 -. 0.643951) (0.0 -. 0.172546) 0.0] 0.166667 s2_lh_₁] [LH_C [Sphere [LH_P3 0.0996195 (0.0 -. 0.371785) 0.544331] 0.166667 s2_lh_₄] [LH_C [Sphere [LH_P3 (0.0 -. 0.172546) (0.0 -. 0.643951) 0.0] 0.166667 s2_lh_₈] [LH_C [Sphere [LH_P3 0.471405 (0.0 -. 0.471405) 0.0] 0.166667 s2_lh_₁₀] [LH_N]]]]]]]]]]]
//│ def trace_lh_₁(_lh_trace_arg1⁰, _lh_trace_arg2⁰, _lh_trace_arg3⁰) = 
//│ 	let f¹³ = (fun d1s1⁰ -> (fun d2s2⁰ -> 
//│ 		let _lh_matchIdent¹⁶ = d1s1⁰
//│ 		in case _lh_matchIdent¹⁶ of {
//│ 			LH_P2 _lh_trace_LH_P2_0⁰ _lh_trace_LH_P2_1⁰ => 
//│ 				let _lh_matchIdent¹⁷ = d2s2⁰
//│ 				in case _lh_matchIdent¹⁷ of {
//│ 					LH_P2 _lh_trace_LH_P2_0¹ _lh_trace_LH_P2_1¹ => if polyLt⁰(_lh_trace_LH_P2_0⁰, _lh_trace_LH_P2_0¹) then [LH_P2 _lh_trace_LH_P2_0⁰ _lh_trace_LH_P2_1⁰] else [LH_P2 _lh_trace_LH_P2_0¹ _lh_trace_LH_P2_1¹]}}))
//│ 	in let sphmap⁰ = (fun xss⁰ -> 
//│ 		let _lh_matchIdent¹⁸ = xss⁰
//│ 		in case _lh_matchIdent¹⁸ of {
//│ 			LH_N  => [LH_N]
//│ 			| LH_C _lh_trace_LH_C_0⁰ _lh_trace_LH_C_1⁰ => 
//│ 				let _lh_matchIdent¹⁹ = sphereintersect_lh_₁(_lh_trace_arg2⁰, _lh_trace_arg3⁰, _lh_trace_LH_C_0⁰)
//│ 				in _lh_matchIdent¹⁹(_lh_trace_LH_C_0⁰, _lh_trace_LH_C_1⁰, sphmap⁰)})
//│ 	in let dists⁰ = sphmap⁰(_lh_trace_arg1⁰)
//│ 	in if null_lh_₁(dists⁰) then [LH_P3 [False] infinity_lh_₁ head_lh_₂(_lh_trace_arg1⁰)] else 
//│ 		let _lh_matchIdent²⁰ = foldr_lh_₂(f¹³, head_lh_₁(dists⁰), tail_lh_₁(dists⁰))
//│ 		in case _lh_matchIdent²⁰ of {
//│ 			LH_P2 _lh_trace_LH_P2_0² _lh_trace_LH_P2_1² => [LH_P3 [True] _lh_trace_LH_P2_0² _lh_trace_LH_P2_1²]}
//│ def tracepixel_lh_₁(_lh_tracepixel_arg1¹, _lh_tracepixel_arg2¹, _lh_tracepixel_arg3⁰, _lh_tracepixel_arg4⁰, _lh_tracepixel_arg5⁰, _lh_tracepixel_arg6⁰, _lh_tracepixel_arg7⁰) = 
//│ 	let pos¹ = lookfrom_lh_₂
//│ 	in let _lh_matchIdent¹⁵ = vecnorm_lh_₁(vecadd_lh_₁(vecadd_lh_₂(_lh_tracepixel_arg5⁰, vecscale_lh_₁(_lh_tracepixel_arg6⁰, _lh_tracepixel_arg3⁰)), vecscale_lh_₂(_lh_tracepixel_arg7⁰, _lh_tracepixel_arg4⁰)))
//│ 	in _lh_matchIdent¹⁵(_lh_tracepixel_arg1¹, _lh_tracepixel_arg2¹, pos¹)
//│ def transmitray_lh_₁(_lh_transmitray_arg1⁴, _lh_transmitray_arg2⁴, _lh_transmitray_arg3⁴, _lh_transmitray_arg4⁰, _lh_transmitray_arg5⁰, _lh_transmitray_arg6⁴, _lh_transmitray_arg7⁰, _lh_transmitray_arg8⁰) = 
//│ 	let newcontrib⁵ = vecmult_lh_₅(_lh_transmitray_arg6⁴, _lh_transmitray_arg7⁰)
//│ 	in let _lh_matchIdent²² = refractray_lh_₁(_lh_transmitray_arg5⁰, _lh_transmitray_arg4⁰, _lh_transmitray_arg8⁰)
//│ 	in _lh_matchIdent²²(_lh_transmitray_arg1⁴, _lh_transmitray_arg2⁴, _lh_transmitray_arg3⁴, _lh_transmitray_arg6⁴, newcontrib⁵)
//│ def transmitsurf_lh_₁(_lh_transmitsurf_arg1⁰) = head_lh_₃(mappend_lh_₁(
//│ 	let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => case _lh_listcomp_fun_ls_h¹³ of {
//│ 			Transmit _lh_transmitsurf_Transmit_0⁰ => 
//│ 				let t¹⁹ = _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)
//│ 				in let h¹⁷ = _lh_transmitsurf_Transmit_0⁰
//│ 				in (fun ys²¹ -> [LH_C h¹⁷ mappend_lh_₁(t¹⁹, ys²¹)])
//│ 			| _  => _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)}
//│ 		| LH_N  => (fun ys²² -> ys²²)})
//│ 	in _lh_listcomp_fun¹⁷(_lh_transmitsurf_arg1⁰), [LH_C 0.0 [LH_N]]))
//│ def vecadd_lh_₁(_lh_vecadd_arg1⁵, _lh_vecadd_arg2⁹) = _lh_vecadd_arg1⁵(_lh_vecadd_arg2⁹)
//│ def vecadd_lh_₂(_lh_vecadd_arg1⁷, _lh_vecadd_arg2¹¹) = _lh_vecadd_arg1⁷(_lh_vecadd_arg2¹¹)
//│ def vecadd_lh_₃(_lh_vecadd_arg1³, _lh_vecadd_arg2⁶) = _lh_vecadd_arg1³(_lh_vecadd_arg2⁶)
//│ def vecadd_lh_₄(_lh_vecadd_arg1², _lh_vecadd_arg2⁵) = case _lh_vecadd_arg1² of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0¹⁶ _lh_vecadd_LH_P3_1¹⁶ _lh_vecadd_LH_P3_2¹⁶ => case _lh_vecadd_arg2⁵ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0¹⁷ _lh_vecadd_LH_P3_1¹⁷ _lh_vecadd_LH_P3_2¹⁷ => [LH_P3 (_lh_vecadd_LH_P3_0¹⁶ +. _lh_vecadd_LH_P3_0¹⁷) (_lh_vecadd_LH_P3_1¹⁶ +. _lh_vecadd_LH_P3_1¹⁷) (_lh_vecadd_LH_P3_2¹⁶ +. _lh_vecadd_LH_P3_2¹⁷)]}}
//│ def vecadd_lh_₅(_lh_vecadd_arg1⁶, _lh_vecadd_arg2¹⁰) = _lh_vecadd_arg1⁶(_lh_vecadd_arg2¹⁰)
//│ def vecadd_lh_₆(_lh_vecadd_arg1¹, _lh_vecadd_arg2⁴) = case _lh_vecadd_arg1¹ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0¹⁵ _lh_vecadd_LH_P3_1¹⁵ _lh_vecadd_LH_P3_2¹⁵ => _lh_vecadd_arg2⁴(_lh_vecadd_LH_P3_0¹⁵, _lh_vecadd_LH_P3_1¹⁵, _lh_vecadd_LH_P3_2¹⁵)}
//│ def vecadd_lh_₇(_lh_vecadd_arg1⁴, _lh_vecadd_arg2⁸) = case _lh_vecadd_arg1⁴ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0²² _lh_vecadd_LH_P3_1²² _lh_vecadd_LH_P3_2²² => _lh_vecadd_arg2⁸(_lh_vecadd_LH_P3_0²², _lh_vecadd_LH_P3_1²², _lh_vecadd_LH_P3_2²²)}
//│ def vecadd_lh_₈(_lh_vecadd_arg1⁸, _lh_vecadd_arg2¹²) = _lh_vecadd_arg1⁸(_lh_vecadd_arg2¹²)
//│ def vecadd_lh_₉(_lh_vecadd_arg1⁰, _lh_vecadd_arg2⁰) = case _lh_vecadd_arg1⁰ of {
//│ 	LH_P3 _lh_vecadd_LH_P3_0⁸ _lh_vecadd_LH_P3_1⁸ _lh_vecadd_LH_P3_2⁸ => case _lh_vecadd_arg2⁰ of {
//│ 		LH_P3 _lh_vecadd_LH_P3_0⁹ _lh_vecadd_LH_P3_1⁹ _lh_vecadd_LH_P3_2⁹ => [LH_P3 (_lh_vecadd_LH_P3_0⁸ +. _lh_vecadd_LH_P3_0⁹) (_lh_vecadd_LH_P3_1⁸ +. _lh_vecadd_LH_P3_1⁹) (_lh_vecadd_LH_P3_2⁸ +. _lh_vecadd_LH_P3_2⁹)]}}
//│ def veccross_lh_₁(_lh_veccross_arg1¹, _lh_veccross_arg2¹) = case _lh_veccross_arg1¹ of {
//│ 	LH_P3 _lh_veccross_LH_P3_0³ _lh_veccross_LH_P3_1³ _lh_veccross_LH_P3_2³ => case _lh_veccross_arg2¹ of {
//│ 		LH_P3 _lh_veccross_LH_P3_0⁴ _lh_veccross_LH_P3_1⁴ _lh_veccross_LH_P3_2⁴ => [LH_P3 ((_lh_veccross_LH_P3_1³ *. _lh_veccross_LH_P3_2⁴) -. (_lh_veccross_LH_P3_1⁴ *. _lh_veccross_LH_P3_2³)) ((_lh_veccross_LH_P3_2³ *. _lh_veccross_LH_P3_0⁴) -. (_lh_veccross_LH_P3_2⁴ *. _lh_veccross_LH_P3_0³)) ((_lh_veccross_LH_P3_0³ *. _lh_veccross_LH_P3_1⁴) -. (_lh_veccross_LH_P3_0⁴ *. _lh_veccross_LH_P3_1³))]}}
//│ def veccross_lh_₂(_lh_veccross_arg1⁰, _lh_veccross_arg2⁰) = case _lh_veccross_arg1⁰ of {
//│ 	LH_P3 _lh_veccross_LH_P3_0⁰ _lh_veccross_LH_P3_1⁰ _lh_veccross_LH_P3_2⁰ => _lh_veccross_arg2⁰(_lh_veccross_LH_P3_0⁰, _lh_veccross_LH_P3_1⁰, _lh_veccross_LH_P3_2⁰)}
//│ def vecdot_lh_₁(_lh_vecdot_arg1⁴, _lh_vecdot_arg2⁴) = case _lh_vecdot_arg1⁴ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0⁸ _lh_vecdot_LH_P3_1⁸ _lh_vecdot_LH_P3_2⁸ => case _lh_vecdot_arg2⁴ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0⁹ _lh_vecdot_LH_P3_1⁹ _lh_vecdot_LH_P3_2⁹ => (((_lh_vecdot_LH_P3_0⁸ *. _lh_vecdot_LH_P3_0⁹) +. (_lh_vecdot_LH_P3_1⁸ *. _lh_vecdot_LH_P3_1⁹)) +. (_lh_vecdot_LH_P3_2⁸ *. _lh_vecdot_LH_P3_2⁹))}}
//│ def vecdot_lh_₂(_lh_vecdot_arg1³, _lh_vecdot_arg2³) = case _lh_vecdot_arg1³ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0⁶ _lh_vecdot_LH_P3_1⁶ _lh_vecdot_LH_P3_2⁶ => case _lh_vecdot_arg2³ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0⁷ _lh_vecdot_LH_P3_1⁷ _lh_vecdot_LH_P3_2⁷ => (((_lh_vecdot_LH_P3_0⁶ *. _lh_vecdot_LH_P3_0⁷) +. (_lh_vecdot_LH_P3_1⁶ *. _lh_vecdot_LH_P3_1⁷)) +. (_lh_vecdot_LH_P3_2⁶ *. _lh_vecdot_LH_P3_2⁷))}}
//│ def vecdot_lh_₃(_lh_vecdot_arg1², _lh_vecdot_arg2²) = case _lh_vecdot_arg1² of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0⁴ _lh_vecdot_LH_P3_1⁴ _lh_vecdot_LH_P3_2⁴ => case _lh_vecdot_arg2² of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0⁵ _lh_vecdot_LH_P3_1⁵ _lh_vecdot_LH_P3_2⁵ => (((_lh_vecdot_LH_P3_0⁴ *. _lh_vecdot_LH_P3_0⁵) +. (_lh_vecdot_LH_P3_1⁴ *. _lh_vecdot_LH_P3_1⁵)) +. (_lh_vecdot_LH_P3_2⁴ *. _lh_vecdot_LH_P3_2⁵))}}
//│ def vecdot_lh_₄(_lh_vecdot_arg1⁵, _lh_vecdot_arg2⁵) = case _lh_vecdot_arg1⁵ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0¹⁰ _lh_vecdot_LH_P3_1¹⁰ _lh_vecdot_LH_P3_2¹⁰ => case _lh_vecdot_arg2⁵ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0¹¹ _lh_vecdot_LH_P3_1¹¹ _lh_vecdot_LH_P3_2¹¹ => (((_lh_vecdot_LH_P3_0¹⁰ *. _lh_vecdot_LH_P3_0¹¹) +. (_lh_vecdot_LH_P3_1¹⁰ *. _lh_vecdot_LH_P3_1¹¹)) +. (_lh_vecdot_LH_P3_2¹⁰ *. _lh_vecdot_LH_P3_2¹¹))}}
//│ def vecdot_lh_₅(_lh_vecdot_arg1¹, _lh_vecdot_arg2¹) = case _lh_vecdot_arg1¹ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0² _lh_vecdot_LH_P3_1² _lh_vecdot_LH_P3_2² => case _lh_vecdot_arg2¹ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0³ _lh_vecdot_LH_P3_1³ _lh_vecdot_LH_P3_2³ => (((_lh_vecdot_LH_P3_0² *. _lh_vecdot_LH_P3_0³) +. (_lh_vecdot_LH_P3_1² *. _lh_vecdot_LH_P3_1³)) +. (_lh_vecdot_LH_P3_2² *. _lh_vecdot_LH_P3_2³))}}
//│ def vecdot_lh_₆(_lh_vecdot_arg1⁰, _lh_vecdot_arg2⁰) = case _lh_vecdot_arg1⁰ of {
//│ 	LH_P3 _lh_vecdot_LH_P3_0⁰ _lh_vecdot_LH_P3_1⁰ _lh_vecdot_LH_P3_2⁰ => case _lh_vecdot_arg2⁰ of {
//│ 		LH_P3 _lh_vecdot_LH_P3_0¹ _lh_vecdot_LH_P3_1¹ _lh_vecdot_LH_P3_2¹ => (((_lh_vecdot_LH_P3_0⁰ *. _lh_vecdot_LH_P3_0¹) +. (_lh_vecdot_LH_P3_1⁰ *. _lh_vecdot_LH_P3_1¹)) +. (_lh_vecdot_LH_P3_2⁰ *. _lh_vecdot_LH_P3_2¹))}}
//│ def vecmult_lh_₁(_lh_vecmult_arg1⁴, _lh_vecmult_arg2⁶) = _lh_vecmult_arg1⁴(_lh_vecmult_arg2⁶)
//│ def vecmult_lh_₂(_lh_vecmult_arg1³, _lh_vecmult_arg2⁵) = _lh_vecmult_arg1³(_lh_vecmult_arg2⁵)
//│ def vecmult_lh_₃(_lh_vecmult_arg1², _lh_vecmult_arg2²) = _lh_vecmult_arg1²(_lh_vecmult_arg2²)
//│ def vecmult_lh_₄(_lh_vecmult_arg1¹, _lh_vecmult_arg2¹, _lh_floatOutId_0⁷) = case _lh_vecmult_arg1¹ of {
//│ 	LH_P3 _lh_vecmult_LH_P3_0² _lh_vecmult_LH_P3_1² _lh_vecmult_LH_P3_2² => case _lh_vecmult_arg2¹ of {
//│ 		LH_P3 _lh_vecmult_LH_P3_0³ _lh_vecmult_LH_P3_1³ _lh_vecmult_LH_P3_2³ => 
//│ 			let _lh_vecadd_LH_P3_2¹¹ = (_lh_vecmult_LH_P3_2² *. _lh_vecmult_LH_P3_2³)
//│ 			in let _lh_vecadd_LH_P3_1¹¹ = (_lh_vecmult_LH_P3_1² *. _lh_vecmult_LH_P3_1³)
//│ 			in let _lh_vecadd_LH_P3_0¹¹ = (_lh_vecmult_LH_P3_0² *. _lh_vecmult_LH_P3_0³)
//│ 			in _lh_floatOutId_0⁷(_lh_vecadd_LH_P3_0¹¹, _lh_vecadd_LH_P3_1¹¹, _lh_vecadd_LH_P3_2¹¹)}}
//│ def vecmult_lh_₅(_lh_vecmult_arg1⁰, _lh_vecmult_arg2⁰) = case _lh_vecmult_arg1⁰ of {
//│ 	LH_P3 _lh_vecmult_LH_P3_0⁰ _lh_vecmult_LH_P3_1⁰ _lh_vecmult_LH_P3_2⁰ => case _lh_vecmult_arg2⁰ of {
//│ 		LH_P3 _lh_vecmult_LH_P3_0¹ _lh_vecmult_LH_P3_1¹ _lh_vecmult_LH_P3_2¹ => [LH_P3 (_lh_vecmult_LH_P3_0⁰ *. _lh_vecmult_LH_P3_0¹) (_lh_vecmult_LH_P3_1⁰ *. _lh_vecmult_LH_P3_1¹) (_lh_vecmult_LH_P3_2⁰ *. _lh_vecmult_LH_P3_2¹)]}}
//│ def vecnorm_lh_₁(_lh_vecnorm_arg1³) = _lh_vecnorm_arg1³([lh_Unit])
//│ def vecnorm_lh_₂(_lh_vecnorm_arg1⁰, _lh_floatOutId_0¹², _lh_floatOutId_1⁸, _lh_floatOutId_2⁷, _lh_floatOutId_3⁵) = case _lh_vecnorm_arg1⁰ of {
//│ 	LH_P3 _lh_vecnorm_LH_P3_0² _lh_vecnorm_LH_P3_1² _lh_vecnorm_LH_P3_2² => 
//│ 		let len² = sqrt⁰((((_lh_vecnorm_LH_P3_0² *. _lh_vecnorm_LH_P3_0²) +. (_lh_vecnorm_LH_P3_1² *. _lh_vecnorm_LH_P3_1²)) +. (_lh_vecnorm_LH_P3_2² *. _lh_vecnorm_LH_P3_2²)))
//│ 		in let _lh_camparams_LH_P2_1³ = len²
//│ 		in let _lh_camparams_LH_P2_0³ = [LH_P3 (_lh_vecnorm_LH_P3_0² /. len²) (_lh_vecnorm_LH_P3_1² /. len²) (_lh_vecnorm_LH_P3_2² /. len²)]
//│ 		in let _lh_matchIdent¹³ = vecnorm_lh_₃(veccross_lh_₂(_lh_camparams_LH_P2_0³, _lh_floatOutId_0¹²))
//│ 		in _lh_matchIdent¹³(_lh_camparams_LH_P2_0³, _lh_camparams_LH_P2_1³, _lh_floatOutId_1⁸, _lh_floatOutId_2⁷, _lh_floatOutId_3⁵)}
//│ def vecnorm_lh_₃(_lh_vecnorm_arg1²) = _lh_vecnorm_arg1²([lh_Unit])
//│ def vecnorm_lh_₄(_lh_vecnorm_arg1¹) = case _lh_vecnorm_arg1¹ of {
//│ 	LH_P3 _lh_vecnorm_LH_P3_0³ _lh_vecnorm_LH_P3_1³ _lh_vecnorm_LH_P3_2³ => 
//│ 		let len³ = sqrt⁰((((_lh_vecnorm_LH_P3_0³ *. _lh_vecnorm_LH_P3_0³) +. (_lh_vecnorm_LH_P3_1³ *. _lh_vecnorm_LH_P3_1³)) +. (_lh_vecnorm_LH_P3_2³ *. _lh_vecnorm_LH_P3_2³)))
//│ 		in [LH_P2 [LH_P3 (_lh_vecnorm_LH_P3_0³ /. len³) (_lh_vecnorm_LH_P3_1³ /. len³) (_lh_vecnorm_LH_P3_2³ /. len³)] len³]}
//│ def vecscale_lh_₁(_lh_vecscale_arg1¹¹, _lh_vecscale_arg2¹¹, _lh_floatOutId_0¹⁸, _lh_floatOutId_1¹⁴, _lh_floatOutId_2¹³, _lh_floatOutId_3⁶) = case _lh_vecscale_arg1¹¹ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹¹ _lh_vecscale_LH_P3_1¹¹ _lh_vecscale_LH_P3_2¹¹ => 
//│ 		let _lh_vecadd_LH_P3_2²³ = (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_2¹¹)
//│ 		in let _lh_vecadd_LH_P3_1²³ = (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_1¹¹)
//│ 		in let _lh_vecadd_LH_P3_0²³ = (_lh_vecscale_arg2¹¹ *. _lh_vecscale_LH_P3_0¹¹)
//│ 		in let _lh_vecadd_LH_P3_2²⁵ = (_lh_floatOutId_2¹³ +. _lh_vecadd_LH_P3_2²³)
//│ 		in let _lh_vecadd_LH_P3_1²⁵ = (_lh_floatOutId_1¹⁴ +. _lh_vecadd_LH_P3_1²³)
//│ 		in let _lh_vecadd_LH_P3_0²⁵ = (_lh_floatOutId_0¹⁸ +. _lh_vecadd_LH_P3_0²³)
//│ 		in _lh_floatOutId_3⁶(_lh_vecadd_LH_P3_0²⁵, _lh_vecadd_LH_P3_1²⁵, _lh_vecadd_LH_P3_2²⁵)}
//│ def vecscale_lh_₁₀(_lh_vecscale_arg1¹⁰, _lh_vecscale_arg2¹⁰) = case _lh_vecscale_arg1¹⁰ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹⁰ _lh_vecscale_LH_P3_1¹⁰ _lh_vecscale_LH_P3_2¹⁰ => [LH_P3 (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_0¹⁰) (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_1¹⁰) (_lh_vecscale_arg2¹⁰ *. _lh_vecscale_LH_P3_2¹⁰)]}
//│ def vecscale_lh_₁₁(_lh_vecscale_arg1¹³, _lh_vecscale_arg2¹³, _lh_floatOutId_0²⁰, _lh_floatOutId_1¹⁶, _lh_floatOutId_2¹⁵, _lh_floatOutId_3⁷) = case _lh_vecscale_arg1¹³ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹³ _lh_vecscale_LH_P3_1¹³ _lh_vecscale_LH_P3_2¹³ => 
//│ 		let _lh_vecmult_LH_P3_2⁸ = (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_2¹³)
//│ 		in let _lh_vecmult_LH_P3_1⁸ = (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_1¹³)
//│ 		in let _lh_vecmult_LH_P3_0⁸ = (_lh_vecscale_arg2¹³ *. _lh_vecscale_LH_P3_0¹³)
//│ 		in case _lh_floatOutId_0²⁰ of {
//│ 			LH_P3 _lh_vecmult_LH_P3_0⁹ _lh_vecmult_LH_P3_1⁹ _lh_vecmult_LH_P3_2⁹ => 
//│ 				let _lh_vecadd_LH_P3_2²⁶ = (_lh_vecmult_LH_P3_2⁸ *. _lh_vecmult_LH_P3_2⁹)
//│ 				in let _lh_vecadd_LH_P3_1²⁶ = (_lh_vecmult_LH_P3_1⁸ *. _lh_vecmult_LH_P3_1⁹)
//│ 				in let _lh_vecadd_LH_P3_0²⁶ = (_lh_vecmult_LH_P3_0⁸ *. _lh_vecmult_LH_P3_0⁹)
//│ 				in [LH_P3 (_lh_floatOutId_1¹⁶ +. _lh_vecadd_LH_P3_0²⁶) (_lh_floatOutId_2¹⁵ +. _lh_vecadd_LH_P3_1²⁶) (_lh_floatOutId_3⁷ +. _lh_vecadd_LH_P3_2²⁶)]}}
//│ def vecscale_lh_₁₂(_lh_vecscale_arg1⁶, _lh_vecscale_arg2⁶, _lh_floatOutId_0⁹) = case _lh_vecscale_arg1⁶ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁶ _lh_vecscale_LH_P3_1⁶ _lh_vecscale_LH_P3_2⁶ => 
//│ 		let _lh_vecmult_LH_P3_2⁴ = (_lh_vecscale_arg2⁶ *. _lh_vecscale_LH_P3_2⁶)
//│ 		in let _lh_vecmult_LH_P3_1⁴ = (_lh_vecscale_arg2⁶ *. _lh_vecscale_LH_P3_1⁶)
//│ 		in let _lh_vecmult_LH_P3_0⁴ = (_lh_vecscale_arg2⁶ *. _lh_vecscale_LH_P3_0⁶)
//│ 		in case _lh_floatOutId_0⁹ of {
//│ 			LH_P3 _lh_vecmult_LH_P3_0⁵ _lh_vecmult_LH_P3_1⁵ _lh_vecmult_LH_P3_2⁵ => [LH_P3 (_lh_vecmult_LH_P3_0⁴ *. _lh_vecmult_LH_P3_0⁵) (_lh_vecmult_LH_P3_1⁴ *. _lh_vecmult_LH_P3_1⁵) (_lh_vecmult_LH_P3_2⁴ *. _lh_vecmult_LH_P3_2⁵)]}}
//│ def vecscale_lh_₁₃(_lh_vecscale_arg1⁴, _lh_vecscale_arg2⁴) = case _lh_vecscale_arg1⁴ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁴ _lh_vecscale_LH_P3_1⁴ _lh_vecscale_LH_P3_2⁴ => [LH_P3 (_lh_vecscale_arg2⁴ *. _lh_vecscale_LH_P3_0⁴) (_lh_vecscale_arg2⁴ *. _lh_vecscale_LH_P3_1⁴) (_lh_vecscale_arg2⁴ *. _lh_vecscale_LH_P3_2⁴)]}
//│ def vecscale_lh_₁₄(_lh_vecscale_arg1⁹, _lh_vecscale_arg2⁹) = case _lh_vecscale_arg1⁹ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁹ _lh_vecscale_LH_P3_1⁹ _lh_vecscale_LH_P3_2⁹ => [LH_P3 (_lh_vecscale_arg2⁹ *. _lh_vecscale_LH_P3_0⁹) (_lh_vecscale_arg2⁹ *. _lh_vecscale_LH_P3_1⁹) (_lh_vecscale_arg2⁹ *. _lh_vecscale_LH_P3_2⁹)]}
//│ def vecscale_lh_₂(_lh_vecscale_arg1⁰, _lh_vecscale_arg2⁰, _lh_floatOutId_0⁰, _lh_floatOutId_1⁰, _lh_floatOutId_2⁰, _lh_floatOutId_3⁰, _lh_floatOutId_4⁰, _lh_floatOutId_5⁰, _lh_floatOutId_6⁰) = case _lh_vecscale_arg1⁰ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁰ _lh_vecscale_LH_P3_1⁰ _lh_vecscale_LH_P3_2⁰ => 
//│ 		let _lh_vecadd_LH_P3_2⁰ = (_lh_vecscale_arg2⁰ *. _lh_vecscale_LH_P3_2⁰)
//│ 		in let _lh_vecadd_LH_P3_1⁰ = (_lh_vecscale_arg2⁰ *. _lh_vecscale_LH_P3_1⁰)
//│ 		in let _lh_vecadd_LH_P3_0⁰ = (_lh_vecscale_arg2⁰ *. _lh_vecscale_LH_P3_0⁰)
//│ 		in let _lh_vecnorm_LH_P3_2⁰ = (_lh_floatOutId_2⁰ +. _lh_vecadd_LH_P3_2⁰)
//│ 		in let _lh_vecnorm_LH_P3_1⁰ = (_lh_floatOutId_1⁰ +. _lh_vecadd_LH_P3_1⁰)
//│ 		in let _lh_vecnorm_LH_P3_0⁰ = (_lh_floatOutId_0⁰ +. _lh_vecadd_LH_P3_0⁰)
//│ 		in let len⁰ = sqrt⁰((((_lh_vecnorm_LH_P3_0⁰ *. _lh_vecnorm_LH_P3_0⁰) +. (_lh_vecnorm_LH_P3_1⁰ *. _lh_vecnorm_LH_P3_1⁰)) +. (_lh_vecnorm_LH_P3_2⁰ *. _lh_vecnorm_LH_P3_2⁰)))
//│ 		in let _lh_tracepixel_LH_P2_1⁰ = len⁰
//│ 		in let _lh_tracepixel_LH_P2_0⁰ = [LH_P3 (_lh_vecnorm_LH_P3_0⁰ /. len⁰) (_lh_vecnorm_LH_P3_1⁰ /. len⁰) (_lh_vecnorm_LH_P3_2⁰ /. len⁰)]
//│ 		in let _lh_matchIdent⁰ = trace_lh_₁(_lh_floatOutId_4⁰, _lh_floatOutId_6⁰, _lh_tracepixel_LH_P2_0⁰)
//│ 		in case _lh_matchIdent⁰ of {
//│ 			LH_P3 _lh_tracepixel_LH_P3_0⁰ _lh_tracepixel_LH_P3_1⁰ _lh_tracepixel_LH_P3_2⁰ => if _lh_tracepixel_LH_P3_0⁰ then shade_lh_₁(_lh_floatOutId_5⁰, _lh_tracepixel_LH_P3_2⁰, _lh_floatOutId_6⁰, _lh_tracepixel_LH_P2_0⁰, _lh_tracepixel_LH_P3_1⁰, [LH_P3 1.0 1.0 1.0]) else background_lh_₁}}
//│ def vecscale_lh_₃(_lh_vecscale_arg1³, _lh_vecscale_arg2³, _lh_floatOutId_0⁵) = case _lh_vecscale_arg1³ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0³ _lh_vecscale_LH_P3_1³ _lh_vecscale_LH_P3_2³ => 
//│ 		let _lh_vecadd_LH_P3_2¹⁰ = (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_2³)
//│ 		in let _lh_vecadd_LH_P3_1¹⁰ = (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_1³)
//│ 		in let _lh_vecadd_LH_P3_0¹⁰ = (_lh_vecscale_arg2³ *. _lh_vecscale_LH_P3_0³)
//│ 		in _lh_floatOutId_0⁵(_lh_vecadd_LH_P3_0¹⁰, _lh_vecadd_LH_P3_1¹⁰, _lh_vecadd_LH_P3_2¹⁰)}
//│ def vecscale_lh_₄(_lh_vecscale_arg1⁵, _lh_vecscale_arg2⁵, _lh_floatOutId_0⁸, _lh_floatOutId_1⁵, _lh_floatOutId_2⁴, _lh_floatOutId_3³, _lh_floatOutId_4¹, _lh_floatOutId_5¹, _lh_floatOutId_6¹) = case _lh_vecscale_arg1⁵ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁵ _lh_vecscale_LH_P3_1⁵ _lh_vecscale_LH_P3_2⁵ => 
//│ 		let _lh_vecadd_LH_P3_2¹² = (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_2⁵)
//│ 		in let _lh_vecadd_LH_P3_1¹² = (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_1⁵)
//│ 		in let _lh_vecadd_LH_P3_0¹² = (_lh_vecscale_arg2⁵ *. _lh_vecscale_LH_P3_0⁵)
//│ 		in let _lh_vecsub_LH_P3_2⁰ = (_lh_floatOutId_2⁴ +. _lh_vecadd_LH_P3_2¹²)
//│ 		in let _lh_vecsub_LH_P3_1⁰ = (_lh_floatOutId_1⁵ +. _lh_vecadd_LH_P3_1¹²)
//│ 		in let _lh_vecsub_LH_P3_0⁰ = (_lh_floatOutId_0⁸ +. _lh_vecadd_LH_P3_0¹²)
//│ 		in let _lh_vecadd_LH_P3_2¹⁴ = (_lh_floatOutId_5¹ -. _lh_vecsub_LH_P3_2⁰)
//│ 		in let _lh_vecadd_LH_P3_1¹⁴ = (_lh_floatOutId_4¹ -. _lh_vecsub_LH_P3_1⁰)
//│ 		in let _lh_vecadd_LH_P3_0¹⁴ = (_lh_floatOutId_3³ -. _lh_vecsub_LH_P3_0⁰)
//│ 		in _lh_floatOutId_6¹(_lh_vecadd_LH_P3_0¹⁴, _lh_vecadd_LH_P3_1¹⁴, _lh_vecadd_LH_P3_2¹⁴)}
//│ def vecscale_lh_₅(_lh_vecscale_arg1², _lh_vecscale_arg2²) = case _lh_vecscale_arg1² of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0² _lh_vecscale_LH_P3_1² _lh_vecscale_LH_P3_2² => [LH_P3 (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_0²) (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_1²) (_lh_vecscale_arg2² *. _lh_vecscale_LH_P3_2²)]}
//│ def vecscale_lh_₆(_lh_vecscale_arg1¹², _lh_vecscale_arg2¹²) = case _lh_vecscale_arg1¹² of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹² _lh_vecscale_LH_P3_1¹² _lh_vecscale_LH_P3_2¹² => [LH_P3 (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_0¹²) (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_1¹²) (_lh_vecscale_arg2¹² *. _lh_vecscale_LH_P3_2¹²)]}
//│ def vecscale_lh_₇(_lh_vecscale_arg1¹, _lh_vecscale_arg2¹, _lh_floatOutId_0³, _lh_floatOutId_1³, _lh_floatOutId_2³) = case _lh_vecscale_arg1¹ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0¹ _lh_vecscale_LH_P3_1¹ _lh_vecscale_LH_P3_2¹ => 
//│ 		let _lh_vecadd_LH_P3_2⁶ = (_lh_vecscale_arg2¹ *. _lh_vecscale_LH_P3_2¹)
//│ 		in let _lh_vecadd_LH_P3_1⁶ = (_lh_vecscale_arg2¹ *. _lh_vecscale_LH_P3_1¹)
//│ 		in let _lh_vecadd_LH_P3_0⁶ = (_lh_vecscale_arg2¹ *. _lh_vecscale_LH_P3_0¹)
//│ 		in [LH_P3 (_lh_floatOutId_0³ +. _lh_vecadd_LH_P3_0⁶) (_lh_floatOutId_1³ +. _lh_vecadd_LH_P3_1⁶) (_lh_floatOutId_2³ +. _lh_vecadd_LH_P3_2⁶)]}
//│ def vecscale_lh_₈(_lh_vecscale_arg1⁷, _lh_vecscale_arg2⁷) = case _lh_vecscale_arg1⁷ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁷ _lh_vecscale_LH_P3_1⁷ _lh_vecscale_LH_P3_2⁷ => [LH_P3 (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_0⁷) (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_1⁷) (_lh_vecscale_arg2⁷ *. _lh_vecscale_LH_P3_2⁷)]}
//│ def vecscale_lh_₉(_lh_vecscale_arg1⁸, _lh_vecscale_arg2⁸, _lh_floatOutId_0¹¹, _lh_floatOutId_1⁷, _lh_floatOutId_2⁶) = case _lh_vecscale_arg1⁸ of {
//│ 	LH_P3 _lh_vecscale_LH_P3_0⁸ _lh_vecscale_LH_P3_1⁸ _lh_vecscale_LH_P3_2⁸ => 
//│ 		let _lh_vecadd_LH_P3_2²⁰ = (_lh_vecscale_arg2⁸ *. _lh_vecscale_LH_P3_2⁸)
//│ 		in let _lh_vecadd_LH_P3_1²⁰ = (_lh_vecscale_arg2⁸ *. _lh_vecscale_LH_P3_1⁸)
//│ 		in let _lh_vecadd_LH_P3_0²⁰ = (_lh_vecscale_arg2⁸ *. _lh_vecscale_LH_P3_0⁸)
//│ 		in [LH_P3 (_lh_floatOutId_0¹¹ +. _lh_vecadd_LH_P3_0²⁰) (_lh_floatOutId_1⁷ +. _lh_vecadd_LH_P3_1²⁰) (_lh_floatOutId_2⁶ +. _lh_vecadd_LH_P3_2²⁰)]}
//│ def vecsub_lh_₁(_lh_vecsub_arg1², _lh_vecsub_arg2²) = _lh_vecsub_arg1²(_lh_vecsub_arg2²)
//│ def vecsub_lh_₂(_lh_vecsub_arg1⁰, _lh_vecsub_arg2⁰) = case _lh_vecsub_arg1⁰ of {
//│ 	LH_P3 _lh_vecsub_LH_P3_0² _lh_vecsub_LH_P3_1² _lh_vecsub_LH_P3_2² => _lh_vecsub_arg2⁰(_lh_vecsub_LH_P3_0², _lh_vecsub_LH_P3_1², _lh_vecsub_LH_P3_2²)}
//│ def vecsub_lh_₃(_lh_vecsub_arg1¹, _lh_vecsub_arg2¹) = case _lh_vecsub_arg1¹ of {
//│ 	LH_P3 _lh_vecsub_LH_P3_0³ _lh_vecsub_LH_P3_1³ _lh_vecsub_LH_P3_2³ => case _lh_vecsub_arg2¹ of {
//│ 		LH_P3 _lh_vecsub_LH_P3_0⁴ _lh_vecsub_LH_P3_1⁴ _lh_vecsub_LH_P3_2⁴ => [LH_P3 (_lh_vecsub_LH_P3_0³ -. _lh_vecsub_LH_P3_0⁴) (_lh_vecsub_LH_P3_1³ -. _lh_vecsub_LH_P3_1⁴) (_lh_vecsub_LH_P3_2³ -. _lh_vecsub_LH_P3_2⁴)]}}
//│ def vecsum_lh_₁(_lh_vecsum_arg1⁰) = foldr_lh_₂(vecadd_lh_₉, [LH_P3 0.0 0.0 0.0], _lh_vecsum_arg1⁰)
//│ def vup_lh_₁(_lh_veccross_LH_P3_0², _lh_veccross_LH_P3_1², _lh_veccross_LH_P3_2², _lh_dummy¹, _lh_camparams_LH_P2_0¹, _lh_camparams_LH_P2_1¹, _lh_camparams_arg4⁰, _lh_camparams_arg5⁰, initfirstray⁰, _lh_floatOutId_0⁴, _lh_floatOutId_1⁴) = 
//│ 	let _lh_veccross_LH_P3_2¹ = 1.0
//│ 	in let _lh_veccross_LH_P3_1¹ = 0.0
//│ 	in let _lh_veccross_LH_P3_0¹ = 0.0
//│ 	in let _lh_vecnorm_LH_P3_2¹ = ((_lh_veccross_LH_P3_0² *. _lh_veccross_LH_P3_1¹) -. (_lh_veccross_LH_P3_0¹ *. _lh_veccross_LH_P3_1²))
//│ 	in let _lh_vecnorm_LH_P3_1¹ = ((_lh_veccross_LH_P3_2² *. _lh_veccross_LH_P3_0¹) -. (_lh_veccross_LH_P3_2¹ *. _lh_veccross_LH_P3_0²))
//│ 	in let _lh_vecnorm_LH_P3_0¹ = ((_lh_veccross_LH_P3_1² *. _lh_veccross_LH_P3_2¹) -. (_lh_veccross_LH_P3_1¹ *. _lh_veccross_LH_P3_2²))
//│ 	in let len¹ = sqrt⁰((((_lh_vecnorm_LH_P3_0¹ *. _lh_vecnorm_LH_P3_0¹) +. (_lh_vecnorm_LH_P3_1¹ *. _lh_vecnorm_LH_P3_1¹)) +. (_lh_vecnorm_LH_P3_2¹ *. _lh_vecnorm_LH_P3_2¹)))
//│ 	in let _lh_camparams_LH_P2_1⁰ = len¹
//│ 	in let _lh_camparams_LH_P2_0⁰ = [LH_P3 (_lh_vecnorm_LH_P3_0¹ /. len¹) (_lh_vecnorm_LH_P3_1¹ /. len¹) (_lh_vecnorm_LH_P3_2¹ /. len¹)]
//│ 	in let _lh_matchIdent⁷ = vecnorm_lh_₄(veccross_lh_₁(_lh_camparams_LH_P2_0⁰, _lh_camparams_LH_P2_0¹))
//│ 	in case _lh_matchIdent⁷ of {
//│ 		LH_P2 _lh_camparams_LH_P2_0² _lh_camparams_LH_P2_1² => 
//│ 			let xfov⁰ = _lh_camparams_arg4⁰
//│ 			in let yfov⁰ = _lh_camparams_arg4⁰
//│ 			in let xwinsize⁰ = _lh_camparams_arg5⁰
//│ 			in let ywinsize⁰ = _lh_camparams_arg5⁰
//│ 			in let magx⁰ = (((2.0 *. _lh_camparams_LH_P2_1¹) *. tan⁰(dtor_lh_₁((xfov⁰ /. 2.0)))) /. xwinsize⁰)
//│ 			in let magy⁰ = (((2.0 *. _lh_camparams_LH_P2_1¹) *. tan⁰(dtor_lh_₂((yfov⁰ /. 2.0)))) /. ywinsize⁰)
//│ 			in let scrnx⁰ = vecscale_lh_₆(_lh_camparams_LH_P2_0⁰, magx⁰)
//│ 			in let scrny⁰ = vecscale_lh_₅(_lh_camparams_LH_P2_0², magy⁰)
//│ 			in let firstray⁰ = vecsub_lh_₂(initfirstray⁰, vecadd_lh_₃(vecscale_lh_₃(scrnx⁰, (0.5 *. xwinsize⁰)), vecscale_lh_₄(scrny⁰, (0.5 *. ywinsize⁰))))
//│ 			in let _lh_ray_LH_P3_2⁰ = scrny⁰
//│ 			in let _lh_ray_LH_P3_1⁰ = scrnx⁰
//│ 			in let _lh_ray_LH_P3_0⁰ = firstray⁰
//│ 			in let f⁰ = (fun i⁰ -> (fun j⁰ -> tracepixel_lh_₁(testspheres_lh_₁, _lh_floatOutId_1⁴, float_of_int⁰(i⁰), float_of_int⁰(j⁰), _lh_ray_LH_P3_0⁰, _lh_ray_LH_P3_1⁰, _lh_ray_LH_P3_2⁰)))
//│ 			in let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> _lh_listcomp_fun_para³(_lh_listcomp_fun³, _lh_floatOutId_0⁴, f⁰))
//│ 			in _lh_listcomp_fun³(enumFromTo_lh_₁(0, (_lh_floatOutId_0⁴ - 1)))}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
