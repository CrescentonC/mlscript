:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
sumFloat [] = 0.0
sumFloat (h:t) = h +. (sumFloat t)
enumFromFloat a = lazy (a:(enumFromFloat (a +. 1.0)))
integrate1D l u f =
  let d = (u -. l) /. 8.0 in
     d *. (sumFloat
      [ (f l) *. 0.5,
        f (l +. d),
        f (l +. (2.0 *. d)),
        f (l +. (3.0 *. d)),
        f (l +. (4.0 *. d)),
        f (u -. (3.0 *. d)),
        f (u -. (2.0 *. d)),
        f (u -. d),
        (f u) *. 0.5])
integrate2D l1 u1 l2 u2 f = integrate1D l2 u2
            (\y -> integrate1D l1 u1
              (\x -> f x y))
zark u v = integrate2D 0.0 u 0.0 v (\x -> (\y -> x *. y))
ints _ = enumFromFloat 1.0
zarks _ = zipWith_lz_lz zark (ints 0) (map_lz (\n -> 2.0 *. n) (ints 0))
rtotals _ = lazy ((head_lz (zarks 0)) : (zipWith_lz_lz (\a b -> a +. b) (tail_lz (zarks 0)) (rtotals 0)))
rtotal n = atIndex_lz n (rtotals 0)
is _ = map_lz (\a -> a *. a *. a *. a) (ints 0)
itotals _ = lazy ((head_lz (is 0)) : (zipWith_lz_lz (\a b -> a +. b) (tail_lz (is 0)) (itotals 0)))
itotal n = atIndex_lz n (itotals 0)
etotal n = sumFloat (take_lz n (map_lz (\a -> a *. a) (zipWith_lz_lz (\a b -> a -. b) (rtotals 0) (itotals 0))))
testIntegrate_nofib n = etotal n
testIntegrate_nofib $ primId 100
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testIntegrate_nofib_lh_₁^719(primId⁰(100))
//│ def enumFromFloat_lh_₁(_lh_enumFromFloat_arg1¹) = lazy⁰([LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₁^175((_lh_enumFromFloat_arg1¹ +. 1.0))])
//│ def enumFromFloat_lh_₂(_lh_enumFromFloat_arg1⁰) = lazy⁰([LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh_₂^139((_lh_enumFromFloat_arg1⁰ +. 1.0))])
//│ def etotal_lh_₁(_lh_etotal_arg1⁰) = sumFloat_lh_₁^682(take_lz_lh_₁^683(_lh_etotal_arg1⁰, map_lz_lh_₁^686((fun a⁴ -> (a⁴ *. a⁴)), zipWith_lz_lz_lh_₁^694((fun a⁵ -> (fun b² -> (a⁵ -. b²))), rtotals_lh_₁^703(0), itotals_lh_₁^707(0)))))
//│ def head_lz_lh_₁(ls⁷) = case force⁰(ls⁷) of {
//│ 	LH_C h⁷ t⁷ => h⁷
//│ 	| LH_N  => error⁰}
//│ def head_lz_lh_₂(ls⁵) = case force⁰(ls⁵) of {
//│ 	LH_C h⁵ t⁵ => h⁵
//│ 	| LH_N  => error⁰}
//│ def integrate1D_lh_₁(_lh_integrate1D_arg1⁰, _lh_integrate1D_arg2⁰, _lh_integrate1D_arg3⁰) = 
//│ 	let d⁰ = ((_lh_integrate1D_arg2⁰ -. _lh_integrate1D_arg1⁰) /. 8.0)
//│ 	in (d⁰ *. sumFloat_lh_₁^13([LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]))
//│ def integrate2D_lh_₁(_lh_integrate2D_arg1¹, _lh_integrate2D_arg2¹, _lh_integrate2D_arg3¹, _lh_integrate2D_arg4¹, _lh_integrate2D_arg5¹) = integrate1D_lh_₁^149(_lh_integrate2D_arg3¹, _lh_integrate2D_arg4¹, (fun y¹ -> integrate1D_lh_₁^154(_lh_integrate2D_arg1¹, _lh_integrate2D_arg2¹, (fun x¹ -> _lh_integrate2D_arg5¹(x¹, y¹)))))
//│ def integrate2D_lh_₂(_lh_integrate2D_arg1⁰, _lh_integrate2D_arg2⁰, _lh_integrate2D_arg3⁰, _lh_integrate2D_arg4⁰, _lh_integrate2D_arg5⁰) = integrate1D_lh_₁^113(_lh_integrate2D_arg3⁰, _lh_integrate2D_arg4⁰, (fun y⁰ -> integrate1D_lh_₁^118(_lh_integrate2D_arg1⁰, _lh_integrate2D_arg2⁰, (fun x⁰ -> _lh_integrate2D_arg5⁰(x⁰, y⁰)))))
//│ def ints_lh_₁(_lh_ints_arg1⁵) = enumFromFloat_lh_₁^325(1.0)
//│ def ints_lh_₂(_lh_ints_arg1⁴) = enumFromFloat_lh_₂^302(1.0)
//│ def ints_lh_₃(_lh_ints_arg1³) = enumFromFloat_lh_₂^251(1.0)
//│ def ints_lh_₄(_lh_ints_arg1²) = enumFromFloat_lh_₂^229(1.0)
//│ def ints_lh_₅(_lh_ints_arg1¹) = enumFromFloat_lh_₂^207(1.0)
//│ def ints_lh_₆(_lh_ints_arg1⁰) = enumFromFloat_lh_₂^185(1.0)
//│ def is_lh_₁(_lh_is_arg1¹) = map_lz_lh_₄^438((fun a¹ -> (((a¹ *. a¹) *. a¹) *. a¹)), ints_lh_₅^454(0))
//│ def is_lh_₂(_lh_is_arg1⁰) = map_lz_lh_₅^375((fun a⁰ -> (((a⁰ *. a⁰) *. a⁰) *. a⁰)), ints_lh_₆^391(0))
//│ def itotals_lh_₁(_lh_itotals_arg1⁰) = lazy⁰([LH_C head_lz_lh_₂^556(is_lh_₂^557(0)) zipWith_lz_lz_lh_₃^561((fun a² -> (fun b⁰ -> (a² +. b⁰))), tail_lz_lh_₂^570(is_lh_₁^571(0)), itotals_lh_₁^576(0))])
//│ def map_lz_lh_₁(f⁸, ls⁸) = lazy⁰(case force⁰(ls⁸) of {
//│ 	LH_C h⁸ t⁸ => [LH_C f⁸(h⁸) map_lz_lh_₁^590(f⁸, t⁸)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₂(f⁵, ls³) = lazy⁰(case force⁰(ls³) of {
//│ 	LH_C h³ t³ => [LH_C f⁵(h³) map_lz_lh_₂^364(f⁵, t³)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₃(f², ls²) = lazy⁰(case force⁰(ls²) of {
//│ 	LH_C h² t² => [LH_C f²(h²) map_lz_lh_₃^240(f², t²)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₄(f¹, ls¹) = lazy⁰(case force⁰(ls¹) of {
//│ 	LH_C h¹ t¹ => [LH_C f¹(h¹) map_lz_lh_₄^218(f¹, t¹)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₅(f⁰, ls⁰) = lazy⁰(case force⁰(ls⁰) of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh_₅^196(f⁰, t⁰)]
//│ 	| LH_N  => [LH_N]})
//│ def rtotals_lh_₁(_lh_rtotals_arg1⁰) = lazy⁰([LH_C head_lz_lh_₁^627(zarks_lh_₁^628(0)) zipWith_lz_lz_lh_₂^632((fun a³ -> (fun b¹ -> (a³ +. b¹))), tail_lz_lh_₁^641(zarks_lh_₂^642(0)), rtotals_lh_₁^647(0))])
//│ def sumFloat_lh_₁(_lh_sumFloat_arg1⁰) = case _lh_sumFloat_arg1⁰ of {
//│ 	LH_N  => 0.0
//│ 	| LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁^548(_lh_sumFloat_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def tail_lz_lh_₁(ls⁶) = case force⁰(ls⁶) of {
//│ 	LH_C h⁶ t⁶ => t⁶
//│ 	| LH_N  => error⁰}
//│ def tail_lz_lh_₂(ls⁴) = case force⁰(ls⁴) of {
//│ 	LH_C h⁴ t⁴ => t⁴
//│ 	| LH_N  => error⁰}
//│ def take_lz_lh_₁(n², ls⁹) = if (n² > 0) then case force⁰(ls⁹) of {
//│ 	LH_C h⁹ t⁹ => [LH_C h⁹ take_lz_lh_₁^610((n² - 1), t⁹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testIntegrate_nofib_lh_₁(_lh_testIntegrate_nofib_arg1⁰) = etotal_lh_₁^715(_lh_testIntegrate_nofib_arg1⁰)
//│ def zark_lh_₁(_lh_zark_arg1¹, _lh_zark_arg2¹) = integrate2D_lh_₁^306(0.0, _lh_zark_arg1¹, 0.0, _lh_zark_arg2¹, (fun x³ -> (fun y³ -> (x³ *. y³))))
//│ def zark_lh_₂(_lh_zark_arg1⁰, _lh_zark_arg2⁰) = integrate2D_lh_₂^283(0.0, _lh_zark_arg1⁰, 0.0, _lh_zark_arg2⁰, (fun x² -> (fun y² -> (x² *. y²))))
//│ def zarks_lh_₁(_lh_zarks_arg1¹) = zipWith_lz_lz_lh_₄^522(zark_lh_₁^523, ints_lh_₁^525(0), map_lz_lh_₂^529((fun n¹ -> (2.0 *. n¹)), ints_lh_₂^537(0)))
//│ def zarks_lh_₂(_lh_zarks_arg1⁰) = zipWith_lz_lz_lh_₅^501(zark_lh_₂^502, ints_lh_₃^504(0), map_lz_lh_₃^508((fun n⁰ -> (2.0 *. n⁰)), ints_lh_₄^516(0)))
//│ def zipWith_lz_lz_lh_₁(f⁹, xs⁴, ys⁴) = lazy⁰(case force⁰(xs⁴) of {
//│ 	LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {
//│ 		LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁^666(f⁹, tx⁴, ty⁴)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_lh_₂(f⁷, xs³, ys³) = lazy⁰(case force⁰(xs³) of {
//│ 	LH_C hx³ tx³ => case force⁰(ys³) of {
//│ 		LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂^471(f⁷, tx³, ty³)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_lh_₃(f⁶, xs², ys²) = lazy⁰(case force⁰(xs²) of {
//│ 	LH_C hx² tx² => case force⁰(ys²) of {
//│ 		LH_C hy² ty² => [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃^415(f⁶, tx², ty²)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_lh_₄(f⁴, xs¹, ys¹) = lazy⁰(case force⁰(xs¹) of {
//│ 	LH_C hx¹ tx¹ => case force⁰(ys¹) of {
//│ 		LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄^341(f⁴, tx¹, ty¹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_lh_₅(f³, xs⁰, ys⁰) = lazy⁰(case force⁰(xs⁰) of {
//│ 	LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅^267(f³, tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec map_lz_lh__d1 f_8 ls_8 =
//│ 		  (lazy (match (Lazy.force ls_8) with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      (`LH_C((f_8 h_8), ((map_lz_lh__d1 f_8) t_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec zipWith_lz_lz_lh__d3 f_6 xs_2 ys_2 =
//│ 		  (lazy (match (Lazy.force xs_2) with
//│ 		    | `LH_C(hx_2, tx_2) -> 
//│ 		      (match (Lazy.force ys_2) with
//│ 		        | `LH_C(hy_2, ty_2) -> 
//│ 		          (`LH_C(((f_6 hx_2) hy_2), (((zipWith_lz_lz_lh__d3 f_6) tx_2) ty_2)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec map_lz_lh__d5 f_0 ls_0 =
//│ 		  (lazy (match (Lazy.force ls_0) with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C((f_0 h_0), ((map_lz_lh__d5 f_0) t_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec enumFromFloat_lh__d2 _lh_enumFromFloat_arg1_0 =
//│ 		  (lazy (`LH_C(_lh_enumFromFloat_arg1_0, (enumFromFloat_lh__d2 (_lh_enumFromFloat_arg1_0 +. 1.0)))));;
//│ 		let rec ints_lh__d6 _lh_ints_arg1_0 =
//│ 		  (enumFromFloat_lh__d2 1.0);;
//│ 		let rec is_lh__d2 _lh_is_arg1_0 =
//│ 		  ((map_lz_lh__d5 (fun a_0 -> 
//│ 		    (((a_0 *. a_0) *. a_0) *. a_0))) (ints_lh__d6 0));;
//│ 		let rec tail_lz_lh__d2 ls_4 =
//│ 		  (match (Lazy.force ls_4) with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      t_4
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec ints_lh__d5 _lh_ints_arg1_1 =
//│ 		  (enumFromFloat_lh__d2 1.0);;
//│ 		let rec map_lz_lh__d4 f_1 ls_1 =
//│ 		  (lazy (match (Lazy.force ls_1) with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (`LH_C((f_1 h_1), ((map_lz_lh__d4 f_1) t_1)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec is_lh__d1 _lh_is_arg1_1 =
//│ 		  ((map_lz_lh__d4 (fun a_1 -> 
//│ 		    (((a_1 *. a_1) *. a_1) *. a_1))) (ints_lh__d5 0));;
//│ 		let rec head_lz_lh__d2 ls_5 =
//│ 		  (match (Lazy.force ls_5) with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      h_5
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec itotals_lh__d1 _lh_itotals_arg1_0 =
//│ 		  (lazy (`LH_C((head_lz_lh__d2 (is_lh__d2 0)), (((zipWith_lz_lz_lh__d3 (fun a_2 b_0 -> 
//│ 		    (a_2 +. b_0))) (tail_lz_lh__d2 (is_lh__d1 0))) (itotals_lh__d1 0)))));;
//│ 		let rec sumFloat_lh__d1 _lh_sumFloat_arg1_0 =
//│ 		  (match _lh_sumFloat_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      0.0
//│ 		    | `LH_C(_lh_sumFloat_LH_C_0_0, _lh_sumFloat_LH_C_1_0) -> 
//│ 		      (_lh_sumFloat_LH_C_0_0 +. (sumFloat_lh__d1 _lh_sumFloat_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec zipWith_lz_lz_lh__d1 f_9 xs_4 ys_4 =
//│ 		  (lazy (match (Lazy.force xs_4) with
//│ 		    | `LH_C(hx_4, tx_4) -> 
//│ 		      (match (Lazy.force ys_4) with
//│ 		        | `LH_C(hy_4, ty_4) -> 
//│ 		          (`LH_C(((f_9 hx_4) hy_4), (((zipWith_lz_lz_lh__d1 f_9) tx_4) ty_4)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec take_lz_lh__d1 n_2 ls_9 =
//│ 		  (if (n_2 > 0) then
//│ 		    (match (Lazy.force ls_9) with
//│ 		      | `LH_C(h_9, t_9) -> 
//│ 		        (`LH_C(h_9, ((take_lz_lh__d1 (n_2 - 1)) t_9)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec zipWith_lz_lz_lh__d2 f_7 xs_3 ys_3 =
//│ 		  (lazy (match (Lazy.force xs_3) with
//│ 		    | `LH_C(hx_3, tx_3) -> 
//│ 		      (match (Lazy.force ys_3) with
//│ 		        | `LH_C(hy_3, ty_3) -> 
//│ 		          (`LH_C(((f_7 hx_3) hy_3), (((zipWith_lz_lz_lh__d2 f_7) tx_3) ty_3)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec integrate1D_lh__d1 _lh_integrate1D_arg1_0 _lh_integrate1D_arg2_0 _lh_integrate1D_arg3_0 =
//│ 		  (let rec d_0 = ((_lh_integrate1D_arg2_0 -. _lh_integrate1D_arg1_0) /. 8.0) in
//│ 		    (d_0 *. (sumFloat_lh__d1 (`LH_C(((_lh_integrate1D_arg3_0 _lh_integrate1D_arg1_0) *. 0.5), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg1_0 +. d_0)), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg1_0 +. (2.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg1_0 +. (3.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg1_0 +. (4.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg2_0 -. (3.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg2_0 -. (2.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg2_0 -. d_0)), (`LH_C(((_lh_integrate1D_arg3_0 _lh_integrate1D_arg2_0) *. 0.5), (`LH_N))))))))))))))))))))));;
//│ 		let rec integrate2D_lh__d1 _lh_integrate2D_arg1_1 _lh_integrate2D_arg2_1 _lh_integrate2D_arg3_1 _lh_integrate2D_arg4_1 _lh_integrate2D_arg5_1 =
//│ 		  (((integrate1D_lh__d1 _lh_integrate2D_arg3_1) _lh_integrate2D_arg4_1) (fun y_1 -> 
//│ 		    (((integrate1D_lh__d1 _lh_integrate2D_arg1_1) _lh_integrate2D_arg2_1) (fun x_1 -> 
//│ 		      ((_lh_integrate2D_arg5_1 x_1) y_1)))));;
//│ 		let rec zark_lh__d1 _lh_zark_arg1_1 _lh_zark_arg2_1 =
//│ 		  (((((integrate2D_lh__d1 0.0) _lh_zark_arg1_1) 0.0) _lh_zark_arg2_1) (fun x_3 y_3 -> 
//│ 		    (x_3 *. y_3)));;
//│ 		let rec ints_lh__d2 _lh_ints_arg1_4 =
//│ 		  (enumFromFloat_lh__d2 1.0);;
//│ 		let rec zipWith_lz_lz_lh__d4 f_4 xs_1 ys_1 =
//│ 		  (lazy (match (Lazy.force xs_1) with
//│ 		    | `LH_C(hx_1, tx_1) -> 
//│ 		      (match (Lazy.force ys_1) with
//│ 		        | `LH_C(hy_1, ty_1) -> 
//│ 		          (`LH_C(((f_4 hx_1) hy_1), (((zipWith_lz_lz_lh__d4 f_4) tx_1) ty_1)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec enumFromFloat_lh__d1 _lh_enumFromFloat_arg1_1 =
//│ 		  (lazy (`LH_C(_lh_enumFromFloat_arg1_1, (enumFromFloat_lh__d1 (_lh_enumFromFloat_arg1_1 +. 1.0)))));;
//│ 		let rec ints_lh__d1 _lh_ints_arg1_5 =
//│ 		  (enumFromFloat_lh__d1 1.0);;
//│ 		let rec map_lz_lh__d2 f_5 ls_3 =
//│ 		  (lazy (match (Lazy.force ls_3) with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      (`LH_C((f_5 h_3), ((map_lz_lh__d2 f_5) t_3)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec zarks_lh__d1 _lh_zarks_arg1_1 =
//│ 		  (((zipWith_lz_lz_lh__d4 zark_lh__d1) (ints_lh__d1 0)) ((map_lz_lh__d2 (fun n_1 -> 
//│ 		    (2.0 *. n_1))) (ints_lh__d2 0)));;
//│ 		let rec head_lz_lh__d1 ls_7 =
//│ 		  (match (Lazy.force ls_7) with
//│ 		    | `LH_C(h_7, t_7) -> 
//│ 		      h_7
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lz_lh__d3 f_2 ls_2 =
//│ 		  (lazy (match (Lazy.force ls_2) with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (`LH_C((f_2 h_2), ((map_lz_lh__d3 f_2) t_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec ints_lh__d3 _lh_ints_arg1_3 =
//│ 		  (enumFromFloat_lh__d2 1.0);;
//│ 		let rec ints_lh__d4 _lh_ints_arg1_2 =
//│ 		  (enumFromFloat_lh__d2 1.0);;
//│ 		let rec integrate2D_lh__d2 _lh_integrate2D_arg1_0 _lh_integrate2D_arg2_0 _lh_integrate2D_arg3_0 _lh_integrate2D_arg4_0 _lh_integrate2D_arg5_0 =
//│ 		  (((integrate1D_lh__d1 _lh_integrate2D_arg3_0) _lh_integrate2D_arg4_0) (fun y_0 -> 
//│ 		    (((integrate1D_lh__d1 _lh_integrate2D_arg1_0) _lh_integrate2D_arg2_0) (fun x_0 -> 
//│ 		      ((_lh_integrate2D_arg5_0 x_0) y_0)))));;
//│ 		let rec zark_lh__d2 _lh_zark_arg1_0 _lh_zark_arg2_0 =
//│ 		  (((((integrate2D_lh__d2 0.0) _lh_zark_arg1_0) 0.0) _lh_zark_arg2_0) (fun x_2 y_2 -> 
//│ 		    (x_2 *. y_2)));;
//│ 		let rec zipWith_lz_lz_lh__d5 f_3 xs_0 ys_0 =
//│ 		  (lazy (match (Lazy.force xs_0) with
//│ 		    | `LH_C(hx_0, tx_0) -> 
//│ 		      (match (Lazy.force ys_0) with
//│ 		        | `LH_C(hy_0, ty_0) -> 
//│ 		          (`LH_C(((f_3 hx_0) hy_0), (((zipWith_lz_lz_lh__d5 f_3) tx_0) ty_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec zarks_lh__d2 _lh_zarks_arg1_0 =
//│ 		  (((zipWith_lz_lz_lh__d5 zark_lh__d2) (ints_lh__d3 0)) ((map_lz_lh__d3 (fun n_0 -> 
//│ 		    (2.0 *. n_0))) (ints_lh__d4 0)));;
//│ 		let rec tail_lz_lh__d1 ls_6 =
//│ 		  (match (Lazy.force ls_6) with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      t_6
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec rtotals_lh__d1 _lh_rtotals_arg1_0 =
//│ 		  (lazy (`LH_C((head_lz_lh__d1 (zarks_lh__d1 0)), (((zipWith_lz_lz_lh__d2 (fun a_3 b_1 -> 
//│ 		    (a_3 +. b_1))) (tail_lz_lh__d1 (zarks_lh__d2 0))) (rtotals_lh__d1 0)))));;
//│ 		let rec etotal_lh__d1 _lh_etotal_arg1_0 =
//│ 		  (sumFloat_lh__d1 ((take_lz_lh__d1 _lh_etotal_arg1_0) ((map_lz_lh__d1 (fun a_4 -> 
//│ 		    (a_4 *. a_4))) (((zipWith_lz_lz_lh__d1 (fun a_5 b_2 -> 
//│ 		    (a_5 -. b_2))) (rtotals_lh__d1 0)) (itotals_lh__d1 0)))));;
//│ 		let rec testIntegrate_nofib_lh__d1 _lh_testIntegrate_nofib_arg1_0 =
//│ 		  (etotal_lh__d1 _lh_testIntegrate_nofib_arg1_0);;
//│ 		(testIntegrate_nofib_lh__d1 100)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 97 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]: 98 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]: 99 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]: 100 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]: 101 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]: 102 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]: 103 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]: 104 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]: 105 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]: 106 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁰ +. 1.0))]: 146 --->
//│ 	case force⁰(ls⁰) of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh_₅(f⁰, t⁰)] | LH_N  => [LH_N]}: 203
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => [LH_C f¹(h¹) map_lz_lh_₄(f¹, t¹)] | LH_N  => [LH_N]}: 225
//│ 	case force⁰(ls²) of {LH_C h² t² => [LH_C f²(h²) map_lz_lh_₃(f², t²)] | LH_N  => [LH_N]}: 247
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 278
//│ 	case force⁰(ls³) of {LH_C h³ t³ => [LH_C f⁵(h³) map_lz_lh_₂(f⁵, t³)] | LH_N  => [LH_N]}: 371
//│ [LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₁((_lh_enumFromFloat_arg1¹ +. 1.0))]: 182 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 352
//│ [LH_C f⁰(h⁰) map_lz_lh_₅(f⁰, t⁰)]: 201 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁵ => h⁵ | LH_N  => error⁰}: 436
//│ [LH_N]: 202 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁵ => h⁵ | LH_N  => error⁰}: 436
//│ [LH_C f¹(h¹) map_lz_lh_₄(f¹, t¹)]: 223 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 401
//│ 	case force⁰(xs²) of {LH_C hx² tx² => case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 426
//│ [LH_N]: 224 --->
//│ 	case force⁰(ls⁴) of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 401
//│ 	case force⁰(xs²) of {LH_C hx² tx² => case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 426
//│ [LH_C f²(h²) map_lz_lh_₃(f², t²)]: 245 --->
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 276
//│ [LH_N]: 246 --->
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 276
//│ [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)]: 274 --->
//│ 	case force⁰(xs³) of {LH_C hx³ tx³ => case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 482
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁶ => t⁶ | LH_N  => error⁰}: 492
//│ [LH_N]: 275 --->
//│ 	case force⁰(xs³) of {LH_C hx³ tx³ => case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 482
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁶ => t⁶ | LH_N  => error⁰}: 492
//│ [LH_N]: 277 --->
//│ 	case force⁰(xs³) of {LH_C hx³ tx³ => case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 482
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁶ => t⁶ | LH_N  => error⁰}: 492
//│ [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)]: 348 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t⁷ => h⁷ | LH_N  => error⁰}: 499
//│ [LH_N]: 349 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t⁷ => h⁷ | LH_N  => error⁰}: 499
//│ [LH_N]: 351 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t⁷ => h⁷ | LH_N  => error⁰}: 499
//│ [LH_C f⁵(h³) map_lz_lh_₂(f⁵, t³)]: 369 --->
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 350
//│ [LH_N]: 370 --->
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 350
//│ [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)]: 422 --->
//│ 	case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)] | LH_N  => [LH_N]}: 424
//│ 	case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 675
//│ [LH_N]: 423 --->
//│ 	case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)] | LH_N  => [LH_N]}: 424
//│ 	case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 675
//│ [LH_N]: 425 --->
//│ 	case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)] | LH_N  => [LH_N]}: 424
//│ 	case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 675
//│ [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)]: 478 --->
//│ 	case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)] | LH_N  => [LH_N]}: 480
//│ 	case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 677
//│ [LH_N]: 479 --->
//│ 	case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)] | LH_N  => [LH_N]}: 480
//│ 	case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 677
//│ [LH_N]: 481 --->
//│ 	case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)] | LH_N  => [LH_N]}: 480
//│ 	case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 677
//│ [LH_C head_lz_lh_₂(is_lh_₂(0)) zipWith_lz_lz_lh_₃((fun a² -> (fun b⁰ -> (a² +. b⁰))), tail_lz_lh_₂(is_lh_₁(0)), itotals_lh_₁(0))]: 580 --->
//│ 	case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)] | LH_N  => [LH_N]}: 424
//│ 	case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 675
//│ [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)]: 595 --->
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)] | LH_N  => [LH_N]}: 621
//│ [LH_N]: 596 --->
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)] | LH_N  => [LH_N]}: 621
//│ [LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)]: 619 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_N]: 620 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_N]: 622 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C head_lz_lh_₁(zarks_lh_₁(0)) zipWith_lz_lz_lh_₂((fun a³ -> (fun b¹ -> (a³ +. b¹))), tail_lz_lh_₁(zarks_lh_₂(0)), rtotals_lh_₁(0))]: 651 --->
//│ 	case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)] | LH_N  => [LH_N]}: 480
//│ 	case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 677
//│ [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)]: 673 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)] | LH_N  => [LH_N]}: 597
//│ [LH_N]: 674 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)] | LH_N  => [LH_N]}: 597
//│ [LH_N]: 676 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)] | LH_N  => [LH_N]}: 597
//│ ------------------
//│ case force⁰(ls⁰) of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh_₅(f⁰, t⁰)] | LH_N  => [LH_N]}: 203 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁰ +. 1.0))]: 146
//│ case force⁰(ls¹) of {LH_C h¹ t¹ => [LH_C f¹(h¹) map_lz_lh_₄(f¹, t¹)] | LH_N  => [LH_N]}: 225 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁰ +. 1.0))]: 146
//│ case force⁰(ls²) of {LH_C h² t² => [LH_C f²(h²) map_lz_lh_₃(f², t²)] | LH_N  => [LH_N]}: 247 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁰ +. 1.0))]: 146
//│ case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 276 --->
//│ 	[LH_C f²(h²) map_lz_lh_₃(f², t²)]: 245
//│ 	[LH_N]: 246
//│ case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 278 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁰ +. 1.0))]: 146
//│ case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 350 --->
//│ 	[LH_C f⁵(h³) map_lz_lh_₂(f⁵, t³)]: 369
//│ 	[LH_N]: 370
//│ case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 352 --->
//│ 	[LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₁((_lh_enumFromFloat_arg1¹ +. 1.0))]: 182
//│ case force⁰(ls³) of {LH_C h³ t³ => [LH_C f⁵(h³) map_lz_lh_₂(f⁵, t³)] | LH_N  => [LH_N]}: 371 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁰ +. 1.0))]: 146
//│ case force⁰(ls⁴) of {LH_C h⁴ t⁴ => t⁴ | LH_N  => error⁰}: 401 --->
//│ 	[LH_C f¹(h¹) map_lz_lh_₄(f¹, t¹)]: 223
//│ 	[LH_N]: 224
//│ case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)] | LH_N  => [LH_N]}: 424 --->
//│ 	[LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)]: 422
//│ 	[LH_N]: 423
//│ 	[LH_N]: 425
//│ 	[LH_C head_lz_lh_₂(is_lh_₂(0)) zipWith_lz_lz_lh_₃((fun a² -> (fun b⁰ -> (a² +. b⁰))), tail_lz_lh_₂(is_lh_₁(0)), itotals_lh_₁(0))]: 580
//│ case force⁰(xs²) of {LH_C hx² tx² => case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 426 --->
//│ 	[LH_C f¹(h¹) map_lz_lh_₄(f¹, t¹)]: 223
//│ 	[LH_N]: 224
//│ case force⁰(ls⁵) of {LH_C h⁵ t⁵ => h⁵ | LH_N  => error⁰}: 436 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh_₅(f⁰, t⁰)]: 201
//│ 	[LH_N]: 202
//│ case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)] | LH_N  => [LH_N]}: 480 --->
//│ 	[LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)]: 478
//│ 	[LH_N]: 479
//│ 	[LH_N]: 481
//│ 	[LH_C head_lz_lh_₁(zarks_lh_₁(0)) zipWith_lz_lz_lh_₂((fun a³ -> (fun b¹ -> (a³ +. b¹))), tail_lz_lh_₁(zarks_lh_₂(0)), rtotals_lh_₁(0))]: 651
//│ case force⁰(xs³) of {LH_C hx³ tx³ => case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 482 --->
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)]: 274
//│ 	[LH_N]: 275
//│ 	[LH_N]: 277
//│ case force⁰(ls⁶) of {LH_C h⁶ t⁶ => t⁶ | LH_N  => error⁰}: 492 --->
//│ 	[LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)]: 274
//│ 	[LH_N]: 275
//│ 	[LH_N]: 277
//│ case force⁰(ls⁷) of {LH_C h⁷ t⁷ => h⁷ | LH_N  => error⁰}: 499 --->
//│ 	[LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)]: 348
//│ 	[LH_N]: 349
//│ 	[LH_N]: 351
//│ case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553 --->
//│ 	[LH_N]: 97
//│ 	[LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]: 98
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]: 99
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]: 100
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]: 101
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]: 102
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]: 103
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]: 104
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]: 105
//│ 	[LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]: 106
//│ 	[LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)]: 619
//│ 	[LH_N]: 620
//│ 	[LH_N]: 622
//│ case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)] | LH_N  => [LH_N]}: 597 --->
//│ 	[LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)]: 673
//│ 	[LH_N]: 674
//│ 	[LH_N]: 676
//│ case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)] | LH_N  => [LH_N]}: 621 --->
//│ 	[LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)]: 595
//│ 	[LH_N]: 596
//│ case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 675 --->
//│ 	[LH_C f⁶(hx², hy²) zipWith_lz_lz_lh_₃(f⁶, tx², ty²)]: 422
//│ 	[LH_N]: 423
//│ 	[LH_N]: 425
//│ 	[LH_C head_lz_lh_₂(is_lh_₂(0)) zipWith_lz_lz_lh_₃((fun a² -> (fun b⁰ -> (a² +. b⁰))), tail_lz_lh_₂(is_lh_₁(0)), itotals_lh_₁(0))]: 580
//│ case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 677 --->
//│ 	[LH_C f⁷(hx³, hy³) zipWith_lz_lz_lh_₂(f⁷, tx³, ty³)]: 478
//│ 	[LH_N]: 479
//│ 	[LH_N]: 481
//│ 	[LH_C head_lz_lh_₁(zarks_lh_₁(0)) zipWith_lz_lz_lh_₂((fun a³ -> (fun b¹ -> (a³ +. b¹))), tail_lz_lh_₁(zarks_lh_₂(0)), rtotals_lh_₁(0))]: 651
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_N]: 97 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]: 98 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]: 99 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]: 100 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]: 101 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]: 102 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]: 103 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]: 104 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]: 105 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]: 106 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₁((_lh_enumFromFloat_arg1¹ +. 1.0))]: 182 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 352
//│ [LH_C f²(h²) map_lz_lh_₃(f², t²)]: 245 --->
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 276
//│ [LH_N]: 246 --->
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 276
//│ [LH_C f⁵(h³) map_lz_lh_₂(f⁵, t³)]: 369 --->
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 350
//│ [LH_N]: 370 --->
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 350
//│ [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)]: 595 --->
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)] | LH_N  => [LH_N]}: 621
//│ [LH_N]: 596 --->
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)] | LH_N  => [LH_N]}: 621
//│ [LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)]: 619 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_N]: 620 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_N]: 622 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553
//│ [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)]: 673 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)] | LH_N  => [LH_N]}: 597
//│ [LH_N]: 674 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)] | LH_N  => [LH_N]}: 597
//│ [LH_N]: 676 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)] | LH_N  => [LH_N]}: 597
//│ ------------------
//│ case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f³(hx⁰, hy⁰) zipWith_lz_lz_lh_₅(f³, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 276 --->
//│ 	[LH_C f²(h²) map_lz_lh_₃(f², t²)]: 245
//│ 	[LH_N]: 246
//│ case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 350 --->
//│ 	[LH_C f⁵(h³) map_lz_lh_₂(f⁵, t³)]: 369
//│ 	[LH_N]: 370
//│ case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₄(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 352 --->
//│ 	[LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₁((_lh_enumFromFloat_arg1¹ +. 1.0))]: 182
//│ case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 553 --->
//│ 	[LH_N]: 97
//│ 	[LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]: 98
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]: 99
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]: 100
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]: 101
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]: 102
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]: 103
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]: 104
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]: 105
//│ 	[LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]: 106
//│ 	[LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)]: 619
//│ 	[LH_N]: 620
//│ 	[LH_N]: 622
//│ case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)] | LH_N  => [LH_N]}: 597 --->
//│ 	[LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₁(f⁹, tx⁴, ty⁴)]: 673
//│ 	[LH_N]: 674
//│ 	[LH_N]: 676
//│ case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lz_lh_₁((n² - 1), t⁹)] | LH_N  => [LH_N]}: 621 --->
//│ 	[LH_C f⁸(h⁸) map_lz_lh_₁(f⁸, t⁸)]: 595
//│ 	[LH_N]: 596
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testIntegrate_nofib_lh_₁(primId⁰(100))
//│ def enumFromFloat_lh_₁(_lh_enumFromFloat_arg1³) = lazy⁰(
//│ 	let tx⁷ = enumFromFloat_lh_₁((_lh_enumFromFloat_arg1³ +. 1.0))
//│ 	in let hx⁷ = _lh_enumFromFloat_arg1³
//│ 	in (fun f²³ -> (fun ys¹⁰ -> force⁰(ys¹⁰, f²³, hx⁷, tx⁷))))
//│ def enumFromFloat_lh_₂(_lh_enumFromFloat_arg1²) = lazy⁰([LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₂((_lh_enumFromFloat_arg1² +. 1.0))])
//│ def etotal_lh_₁(_lh_etotal_arg1¹) = sumFloat_lh_₁(take_lz_lh_₁(_lh_etotal_arg1¹, map_lz_lh_₁((fun a⁹ -> (a⁹ *. a⁹)), zipWith_lz_lz_lh_₁((fun a¹⁰ -> (fun b⁴ -> (a¹⁰ -. b⁴))), rtotals_lh_₁(0), itotals_lh_₁(0)))))
//│ def head_lz_lh_₁(ls¹²) = case force⁰(ls¹²) of {
//│ 	LH_C h⁷ t⁷ => h⁷
//│ 	| LH_N  => error⁰}
//│ def head_lz_lh_₂(ls¹³) = case force⁰(ls¹³) of {
//│ 	LH_C h⁵ t⁵ => h⁵
//│ 	| LH_N  => error⁰}
//│ def integrate1D_lh_₁(_lh_integrate1D_arg1¹, _lh_integrate1D_arg2¹, _lh_integrate1D_arg3¹) = 
//│ 	let d¹ = ((_lh_integrate1D_arg2¹ -. _lh_integrate1D_arg1¹) /. 8.0)
//│ 	in (d¹ *. sumFloat_lh_₁(
//│ 		let _lh_sumFloat_LH_C_1² = 	
//│ 			let _lh_sumFloat_LH_C_1³ = 	
//│ 				let _lh_sumFloat_LH_C_1⁴ = 	
//│ 					let _lh_sumFloat_LH_C_1⁵ = 	
//│ 						let _lh_sumFloat_LH_C_1⁶ = 	
//│ 							let _lh_sumFloat_LH_C_1⁷ = 	
//│ 								let _lh_sumFloat_LH_C_1⁸ = 	
//│ 									let _lh_sumFloat_LH_C_1⁹ = 	
//│ 										let _lh_sumFloat_LH_C_1¹⁰ = (fun _lh_dummy¹² -> 0.0)
//│ 										in let _lh_sumFloat_LH_C_0¹⁰ = (_lh_integrate1D_arg3¹(_lh_integrate1D_arg2¹) *. 0.5)
//│ 										in (fun _lh_dummy¹¹ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1¹⁰)))
//│ 									in let _lh_sumFloat_LH_C_0⁹ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. d¹))
//│ 									in (fun _lh_dummy¹⁰ -> (_lh_sumFloat_LH_C_0⁹ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁹)))
//│ 								in let _lh_sumFloat_LH_C_0⁸ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. (2.0 *. d¹)))
//│ 								in (fun _lh_dummy⁹ -> (_lh_sumFloat_LH_C_0⁸ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁸)))
//│ 							in let _lh_sumFloat_LH_C_0⁷ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. (3.0 *. d¹)))
//│ 							in (fun _lh_dummy⁸ -> (_lh_sumFloat_LH_C_0⁷ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁷)))
//│ 						in let _lh_sumFloat_LH_C_0⁶ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (4.0 *. d¹)))
//│ 						in (fun _lh_dummy⁷ -> (_lh_sumFloat_LH_C_0⁶ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁶)))
//│ 					in let _lh_sumFloat_LH_C_0⁵ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (3.0 *. d¹)))
//│ 					in (fun _lh_dummy⁶ -> (_lh_sumFloat_LH_C_0⁵ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁵)))
//│ 				in let _lh_sumFloat_LH_C_0⁴ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (2.0 *. d¹)))
//│ 				in (fun _lh_dummy⁵ -> (_lh_sumFloat_LH_C_0⁴ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁴)))
//│ 			in let _lh_sumFloat_LH_C_0³ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. d¹))
//│ 			in (fun _lh_dummy⁴ -> (_lh_sumFloat_LH_C_0³ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1³)))
//│ 		in let _lh_sumFloat_LH_C_0² = (_lh_integrate1D_arg3¹(_lh_integrate1D_arg1¹) *. 0.5)
//│ 		in (fun _lh_dummy³ -> (_lh_sumFloat_LH_C_0² +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1²)))))
//│ def integrate2D_lh_₁(_lh_integrate2D_arg1³, _lh_integrate2D_arg2³, _lh_integrate2D_arg3³, _lh_integrate2D_arg4³, _lh_integrate2D_arg5³) = integrate1D_lh_₁(_lh_integrate2D_arg3³, _lh_integrate2D_arg4³, (fun y⁶ -> integrate1D_lh_₁(_lh_integrate2D_arg1³, _lh_integrate2D_arg2³, (fun x⁶ -> _lh_integrate2D_arg5³(x⁶, y⁶)))))
//│ def integrate2D_lh_₂(_lh_integrate2D_arg1², _lh_integrate2D_arg2², _lh_integrate2D_arg3², _lh_integrate2D_arg4², _lh_integrate2D_arg5²) = integrate1D_lh_₁(_lh_integrate2D_arg3², _lh_integrate2D_arg4², (fun y⁴ -> integrate1D_lh_₁(_lh_integrate2D_arg1², _lh_integrate2D_arg2², (fun x⁴ -> _lh_integrate2D_arg5²(x⁴, y⁴)))))
//│ def ints_lh_₁(_lh_ints_arg1¹⁰) = enumFromFloat_lh_₁(1.0)
//│ def ints_lh_₂(_lh_ints_arg1⁹) = enumFromFloat_lh_₂(1.0)
//│ def ints_lh_₃(_lh_ints_arg1⁷) = enumFromFloat_lh_₂(1.0)
//│ def ints_lh_₄(_lh_ints_arg1¹¹) = enumFromFloat_lh_₂(1.0)
//│ def ints_lh_₅(_lh_ints_arg1⁸) = enumFromFloat_lh_₂(1.0)
//│ def ints_lh_₆(_lh_ints_arg1⁶) = enumFromFloat_lh_₂(1.0)
//│ def is_lh_₁(_lh_is_arg1²) = map_lz_lh_₄((fun a⁶ -> (((a⁶ *. a⁶) *. a⁶) *. a⁶)), ints_lh_₅(0))
//│ def is_lh_₂(_lh_is_arg1³) = map_lz_lh_₅((fun a⁸ -> (((a⁸ *. a⁸) *. a⁸) *. a⁸)), ints_lh_₆(0))
//│ def itotals_lh_₁(_lh_itotals_arg1¹) = lazy⁰([LH_C head_lz_lh_₂(is_lh_₂(0)) zipWith_lz_lz_lh_₃((fun a⁷ -> (fun b³ -> (a⁷ +. b³))), tail_lz_lh_₂(is_lh_₁(0)), itotals_lh_₁(0))])
//│ def map_lz_lh_₁(f¹⁰, ls¹⁰) = lazy⁰(force⁰(ls¹⁰, f¹⁰))
//│ def map_lz_lh_₂(f²⁴, ls¹⁸) = lazy⁰(case force⁰(ls¹⁸) of {
//│ 	LH_C h³ t³ => 
//│ 		let ty⁶ = map_lz_lh_₂(f²⁴, t³)
//│ 		in let hy⁶ = f²⁴(h³)
//│ 		in (fun f²⁵ -> (fun hx⁸ -> (fun tx⁸ -> [LH_C f²⁵(hx⁸, hy⁶) zipWith_lz_lz_lh_₄(f²⁵, tx⁸, ty⁶)])))
//│ 	| LH_N  => (fun f²⁶ -> (fun hx⁹ -> (fun tx⁹ -> [LH_N])))})
//│ def map_lz_lh_₃(f²⁰, ls¹⁴) = lazy⁰(case force⁰(ls¹⁴) of {
//│ 	LH_C h² t² => 
//│ 		let ty⁵ = map_lz_lh_₃(f²⁰, t²)
//│ 		in let hy⁵ = f²⁰(h²)
//│ 		in (fun f²¹ -> (fun hx⁵ -> (fun tx⁵ -> [LH_C f²¹(hx⁵, hy⁵) zipWith_lz_lz_lh_₅(f²¹, tx⁵, ty⁵)])))
//│ 	| LH_N  => (fun f²² -> (fun hx⁶ -> (fun tx⁶ -> [LH_N])))})
//│ def map_lz_lh_₄(f¹², ls¹¹) = lazy⁰(case force⁰(ls¹¹) of {
//│ 	LH_C h¹ t¹ => [LH_C f¹²(h¹) map_lz_lh_₄(f¹², t¹)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₅(f²⁷, ls¹⁹) = lazy⁰(case force⁰(ls¹⁹) of {
//│ 	LH_C h⁰ t⁰ => [LH_C f²⁷(h⁰) map_lz_lh_₅(f²⁷, t⁰)]
//│ 	| LH_N  => [LH_N]})
//│ def rtotals_lh_₁(_lh_rtotals_arg1¹) = lazy⁰([LH_C head_lz_lh_₁(zarks_lh_₁(0)) zipWith_lz_lz_lh_₂((fun a¹¹ -> (fun b⁵ -> (a¹¹ +. b⁵))), tail_lz_lh_₁(zarks_lh_₂(0)), rtotals_lh_₁(0))])
//│ def sumFloat_lh_₁(_lh_sumFloat_arg1¹) = _lh_sumFloat_arg1¹(99)
//│ def tail_lz_lh_₁(ls¹⁶) = case force⁰(ls¹⁶) of {
//│ 	LH_C h⁶ t⁶ => t⁶
//│ 	| LH_N  => error⁰}
//│ def tail_lz_lh_₂(ls¹⁵) = case force⁰(ls¹⁵) of {
//│ 	LH_C h⁴ t⁴ => t⁴
//│ 	| LH_N  => error⁰}
//│ def take_lz_lh_₁(n⁸, ls¹⁷) = if (n⁸ > 0) then force⁰(ls¹⁷, n⁸) else (fun _lh_dummy¹³ -> 0.0)
//│ def testIntegrate_nofib_lh_₁(_lh_testIntegrate_nofib_arg1¹) = etotal_lh_₁(_lh_testIntegrate_nofib_arg1¹)
//│ def zark_lh_₁(_lh_zark_arg1³, _lh_zark_arg2³) = integrate2D_lh_₁(0.0, _lh_zark_arg1³, 0.0, _lh_zark_arg2³, (fun x⁷ -> (fun y⁷ -> (x⁷ *. y⁷))))
//│ def zark_lh_₂(_lh_zark_arg1², _lh_zark_arg2²) = integrate2D_lh_₂(0.0, _lh_zark_arg1², 0.0, _lh_zark_arg2², (fun x⁵ -> (fun y⁵ -> (x⁵ *. y⁵))))
//│ def zarks_lh_₁(_lh_zarks_arg1³) = zipWith_lz_lz_lh_₄(zark_lh_₁, ints_lh_₁(0), map_lz_lh_₂((fun n⁷ -> (2.0 *. n⁷)), ints_lh_₂(0)))
//│ def zarks_lh_₂(_lh_zarks_arg1²) = zipWith_lz_lz_lh_₅(zark_lh_₂, ints_lh_₃(0), map_lz_lh_₃((fun n⁶ -> (2.0 *. n⁶)), ints_lh_₄(0)))
//│ def zipWith_lz_lz_lh_₁(f¹³, xs⁶, ys⁶) = lazy⁰(case force⁰(xs⁶) of {
//│ 	LH_C hx⁴ tx⁴ => case force⁰(ys⁶) of {
//│ 		LH_C hy⁴ ty⁴ => 
//│ 			let t¹⁰ = zipWith_lz_lz_lh_₁(f¹³, tx⁴, ty⁴)
//│ 			in let h¹⁰ = f¹³(hx⁴, hy⁴)
//│ 			in (fun f¹⁴ -> 
//│ 				let t¹¹ = map_lz_lh_₁(f¹⁴, t¹⁰)
//│ 				in let h¹¹ = f¹⁴(h¹⁰)
//│ 				in (fun n³ -> 
//│ 					let _lh_sumFloat_LH_C_1¹ = take_lz_lh_₁((n³ - 1), t¹¹)
//│ 					in let _lh_sumFloat_LH_C_0¹ = h¹¹
//│ 					in (fun _lh_dummy⁰ -> (_lh_sumFloat_LH_C_0¹ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1¹)))))
//│ 		| LH_N  => (fun f¹⁵ -> (fun n⁴ -> (fun _lh_dummy¹ -> 0.0)))}
//│ 	| LH_N  => (fun f¹⁶ -> (fun n⁵ -> (fun _lh_dummy² -> 0.0)))})
//│ def zipWith_lz_lz_lh_₂(f¹⁸, xs⁸, ys⁸) = lazy⁰(case force⁰(xs⁸) of {
//│ 	LH_C hx³ tx³ => case force⁰(ys⁸) of {
//│ 		LH_C hy³ ty³ => [LH_C f¹⁸(hx³, hy³) zipWith_lz_lz_lh_₂(f¹⁸, tx³, ty³)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_lh_₃(f¹¹, xs⁵, ys⁵) = lazy⁰(case force⁰(xs⁵) of {
//│ 	LH_C hx² tx² => case force⁰(ys⁵) of {
//│ 		LH_C hy² ty² => [LH_C f¹¹(hx², hy²) zipWith_lz_lz_lh_₃(f¹¹, tx², ty²)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ def zipWith_lz_lz_lh_₄(f¹⁷, xs⁷, ys⁷) = lazy⁰(force⁰(xs⁷, f¹⁷, ys⁷))
//│ def zipWith_lz_lz_lh_₅(f¹⁹, xs⁹, ys⁹) = lazy⁰(case force⁰(xs⁹) of {
//│ 	LH_C hx⁰ tx⁰ => force⁰(ys⁹, f¹⁹, hx⁰, tx⁰)
//│ 	| LH_N  => [LH_N]})
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testIntegrate_nofib_lh_₁^1] (hopeless to continue)
//│ 	[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619] (using original def)
//│ 		[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · head_lz_lh_₂^221] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₁^236] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₁^236 · ints_lh_₅^208] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₁^236 · ints_lh_₅^208 · enumFromFloat_lh_₂^276] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₁^236 · ints_lh_₅^208 · enumFromFloat_lh_₂^276 · enumFromFloat_lh_₂^182] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₁^236 · ints_lh_₅^208 · enumFromFloat_lh_₂^276] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₁^236 · map_lz_lh_₄^192] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₁^236 · map_lz_lh_₄^192 · map_lz_lh_₄^50] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₁^236 · map_lz_lh_₄^192] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₂^222] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₂^222 · ints_lh_₆^552] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₂^222 · ints_lh_₆^552 · enumFromFloat_lh_₂^61] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₂^222 · ints_lh_₆^552 · enumFromFloat_lh_₂^61 · enumFromFloat_lh_₂^182] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₂^222 · ints_lh_₆^552 · enumFromFloat_lh_₂^61] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₂^222 · map_lz_lh_₅^536] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₂^222 · map_lz_lh_₅^536 · map_lz_lh_₅^802] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · is_lh_₂^222 · map_lz_lh_₅^536] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · itotals_lh_₁^241] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · tail_lz_lh_₂^235] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · zipWith_lz_lz_lh_₃^226] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · zipWith_lz_lz_lh_₃^226 · zipWith_lz_lz_lh_₃^27] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · itotals_lh_₁^734 · zipWith_lz_lz_lh_₃^226] (using original def)
//│ 		[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · map_lz_lh_₁^713] (using original def)
//│ 		[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · head_lz_lh_₁^814] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · rtotals_lh_₁^834] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · tail_lz_lh_₁^828] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · ints_lh_₁^673] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · ints_lh_₁^673 · enumFromFloat_lh_₁^705] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · ints_lh_₁^673 · enumFromFloat_lh_₁^705 · enumFromFloat_lh_₁^643] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · ints_lh_₁^673 · enumFromFloat_lh_₁^705] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · ints_lh_₂^685] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · ints_lh_₂^685 · enumFromFloat_lh_₂^666] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · ints_lh_₂^685 · enumFromFloat_lh_₂^666 · enumFromFloat_lh_₂^182] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · ints_lh_₂^685 · enumFromFloat_lh_₂^666] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · map_lz_lh_₂^677] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · map_lz_lh_₂^677 · map_lz_lh_₂^761] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · map_lz_lh_₂^677] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · map_lz_lh_₂^677 · zipWith_lz_lz_lh_₄^774] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^335] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^348] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^365] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^386] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^407] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^428] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^449] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^470] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^487] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^595 · sumFloat_lh_₁^504] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^335] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^348] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^365] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^386] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^407] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^428] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^449] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^470] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^487] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zark_lh_₁^671 · integrate2D_lh_₁^623 · integrate1D_lh_₁^600 · sumFloat_lh_₁^504] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₁^815 · zipWith_lz_lz_lh_₄^670] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · ints_lh_₃^162] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · ints_lh_₃^162 · enumFromFloat_lh_₂^65] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · ints_lh_₃^162 · enumFromFloat_lh_₂^65 · enumFromFloat_lh_₂^182] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · ints_lh_₃^162 · enumFromFloat_lh_₂^65] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · ints_lh_₄^174] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · ints_lh_₄^174 · enumFromFloat_lh_₂^841] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · ints_lh_₄^174 · enumFromFloat_lh_₂^841 · enumFromFloat_lh_₂^182] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · ints_lh_₄^174 · enumFromFloat_lh_₂^841] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · map_lz_lh_₃^166] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · map_lz_lh_₃^166 · map_lz_lh_₃^561] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · map_lz_lh_₃^166] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · map_lz_lh_₃^166 · zipWith_lz_lz_lh_₅^574] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160] (using original def)
//│ 					[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^335] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^348] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^365] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^386] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^407] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^428] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^449] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^470] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^487] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^280 · sumFloat_lh_₁^504] (using original def)
//│ 						[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^335] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^348] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^365] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^386] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^407] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^428] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^449] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^470] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^487] (using original def)
//│ 							[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zark_lh_₂^160 · integrate2D_lh_₂^304 · integrate1D_lh_₁^285 · sumFloat_lh_₁^504] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zarks_lh_₂^829 · zipWith_lz_lz_lh_₅^159] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zipWith_lz_lz_lh_₂^819] (using original def)
//│ 				[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zipWith_lz_lz_lh_₂^819 · zipWith_lz_lz_lh_₂^260] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · rtotals_lh_₁^730 · zipWith_lz_lz_lh_₂^819] (using original def)
//│ 		[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · sumFloat_lh_₁^709] (using original def)
//│ 		[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · take_lz_lh_₁^710] (using original def)
//│ 		[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · zipWith_lz_lz_lh_₁^721] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · zipWith_lz_lz_lh_₁^721 · map_lz_lh_₁^92] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · zipWith_lz_lz_lh_₁^721 · sumFloat_lh_₁^113] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · zipWith_lz_lz_lh_₁^721 · take_lz_lh_₁^100] (using original def)
//│ 			[testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · zipWith_lz_lz_lh_₁^721 · zipWith_lz_lz_lh_₁^80] ---> [testIntegrate_nofib_lh_₁^1 · etotal_lh_₁^619 · zipWith_lz_lz_lh_₁^721] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testIntegrate_nofib_lh_₁_₀(primId⁰(100))
//│ def testIntegrate_nofib_lh_₁_₀(_lh_testIntegrate_nofib_arg1¹) = 
//│ 	etotal_lh_₁_₀(_lh_testIntegrate_nofib_arg1¹)
//│ 	where
//│ 	def etotal_lh_₁_₀(_lh_etotal_arg1¹) = 
//│ 		sumFloat_lh_₁_₄₀(take_lz_lh_₁_₀(_lh_etotal_arg1¹, map_lz_lh_₁_₀((fun a⁹ -> (a⁹ *. a⁹)), zipWith_lz_lz_lh_₁_₀((fun a¹⁰ -> (fun b⁴ -> (a¹⁰ -. b⁴))), rtotals_lh_₁_₀(0), itotals_lh_₁_₀(0)))))
//│ 		where
//│ 		def itotals_lh_₁_₀(_lh_itotals_arg1¹) = 
//│ 			lazy⁰([LH_C head_lz_lh_₂_₀(is_lh_₂_₀(0)) zipWith_lz_lz_lh_₃_₀((fun a¹¹ -> (fun b⁵ -> (a¹¹ +. b⁵))), tail_lz_lh_₂_₀(is_lh_₁_₀(0)), itotals_lh_₁_₀(0))])
//│ 			where
//│ 			def head_lz_lh_₂_₀(ls¹⁵) = 
//│ 				case force⁰(ls¹⁵) of {
//│ 					LH_C h¹⁶ t¹⁶ => h¹⁶
//│ 					| LH_N  => error⁰}
//│ 			def is_lh_₁_₀(_lh_is_arg1³) = 
//│ 				map_lz_lh_₄_₀((fun a⁸ -> (((a⁸ *. a⁸) *. a⁸) *. a⁸)), ints_lh_₅_₀(0))
//│ 				where
//│ 				def ints_lh_₅_₀(_lh_ints_arg1¹¹) = 
//│ 					enumFromFloat_lh_₂_₀(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₀(_lh_enumFromFloat_arg1²) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₂_₀((_lh_enumFromFloat_arg1² +. 1.0))])
//│ 				def map_lz_lh_₄_₀(f²⁴, ls¹²) = 
//│ 					lazy⁰(case force⁰(ls¹²) of {
//│ 						LH_C h¹³ t¹³ => [LH_C f²⁴(h¹³) map_lz_lh_₄_₀(f²⁴, t¹³)]
//│ 						| LH_N  => [LH_N]})
//│ 			def is_lh_₂_₀(_lh_is_arg1²) = 
//│ 				map_lz_lh_₅_₀((fun a⁷ -> (((a⁷ *. a⁷) *. a⁷) *. a⁷)), ints_lh_₆_₀(0))
//│ 				where
//│ 				def ints_lh_₆_₀(_lh_ints_arg1¹⁰) = 
//│ 					enumFromFloat_lh_₂_₁(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₁(_lh_enumFromFloat_arg1³) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₂_₁((_lh_enumFromFloat_arg1³ +. 1.0))])
//│ 				def map_lz_lh_₅_₀(f²⁵, ls¹⁴) = 
//│ 					lazy⁰(case force⁰(ls¹⁴) of {
//│ 						LH_C h¹⁵ t¹⁵ => [LH_C f²⁵(h¹⁵) map_lz_lh_₅_₀(f²⁵, t¹⁵)]
//│ 						| LH_N  => [LH_N]})
//│ 			def tail_lz_lh_₂_₀(ls¹¹) = 
//│ 				case force⁰(ls¹¹) of {
//│ 					LH_C h¹² t¹² => t¹²
//│ 					| LH_N  => error⁰}
//│ 			def zipWith_lz_lz_lh_₃_₀(f³³, xs⁸, ys⁹) = 
//│ 				lazy⁰(case force⁰(xs⁸) of {
//│ 					LH_C hx¹⁶ tx¹⁶ => case force⁰(ys⁹) of {
//│ 						LH_C hy⁸ ty⁸ => [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def map_lz_lh_₁_₀(f²³, ls¹⁰) = 
//│ 			lazy⁰(force⁰(ls¹⁰, f²³))
//│ 		def rtotals_lh_₁_₀(_lh_rtotals_arg1¹) = 
//│ 			lazy⁰([LH_C head_lz_lh_₁_₀(zarks_lh_₁_₀(0)) zipWith_lz_lz_lh_₂_₀((fun a⁶ -> (fun b³ -> (a⁶ +. b³))), tail_lz_lh_₁_₀(zarks_lh_₂_₀(0)), rtotals_lh_₁_₀(0))])
//│ 			where
//│ 			def head_lz_lh_₁_₀(ls²⁰) = 
//│ 				case force⁰(ls²⁰) of {
//│ 					LH_C h¹⁹ t¹⁹ => h¹⁹
//│ 					| LH_N  => error⁰}
//│ 			def tail_lz_lh_₁_₀(ls¹³) = 
//│ 				case force⁰(ls¹³) of {
//│ 					LH_C h¹⁴ t¹⁴ => t¹⁴
//│ 					| LH_N  => error⁰}
//│ 			def zarks_lh_₁_₀(_lh_zarks_arg1³) = 
//│ 				zipWith_lz_lz_lh_₄_₁(zark_lh_₁_₀, ints_lh_₁_₀(0), map_lz_lh_₂_₀((fun n¹⁰ -> (2.0 *. n¹⁰)), ints_lh_₂_₀(0)))
//│ 				where
//│ 				def ints_lh_₁_₀(_lh_ints_arg1⁹) = 
//│ 					enumFromFloat_lh_₁_₀(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₁_₀(_lh_enumFromFloat_arg1⁷) = 
//│ 						lazy⁰(
//│ 							let tx¹⁸ = enumFromFloat_lh_₁_₀((_lh_enumFromFloat_arg1⁷ +. 1.0))
//│ 							in let hx¹⁸ = _lh_enumFromFloat_arg1⁷
//│ 							in (fun f³⁷ -> (fun ys¹² -> force⁰(ys¹², f³⁷, hx¹⁸, tx¹⁸))))
//│ 				def ints_lh_₂_₀(_lh_ints_arg1⁶) = 
//│ 					enumFromFloat_lh_₂_₂(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₂(_lh_enumFromFloat_arg1⁴) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))])
//│ 				def map_lz_lh_₂_₀(f²⁹, ls¹⁷) = 
//│ 					lazy⁰(case force⁰(ls¹⁷) of {
//│ 						LH_C h¹⁸ t¹⁸ => 
//│ 							let ty⁷ = map_lz_lh_₂_₀(f²⁹, t¹⁸)
//│ 							in let hy⁷ = f²⁹(h¹⁸)
//│ 							in (fun f³⁰ -> (fun hx¹³ -> (fun tx¹³ -> [LH_C f³⁰(hx¹³, hy⁷) zipWith_lz_lz_lh_₄_₀(f³⁰, tx¹³, ty⁷)])))
//│ 						| LH_N  => (fun f³¹ -> (fun hx¹⁴ -> (fun tx¹⁴ -> [LH_N])))})
//│ 					where
//│ 					def zipWith_lz_lz_lh_₄_₀(f³⁸, xs¹¹, ys¹³) = 
//│ 						lazy⁰(force⁰(xs¹¹, f³⁸, ys¹³))
//│ 				def zark_lh_₁_₀(_lh_zark_arg1², _lh_zark_arg2²) = 
//│ 					integrate2D_lh_₁_₀(0.0, _lh_zark_arg1², 0.0, _lh_zark_arg2², (fun x⁴ -> (fun y⁴ -> (x⁴ *. y⁴))))
//│ 					where
//│ 					def integrate2D_lh_₁_₀(_lh_integrate2D_arg1², _lh_integrate2D_arg2², _lh_integrate2D_arg3², _lh_integrate2D_arg4², _lh_integrate2D_arg5²) = 
//│ 						integrate1D_lh_₁_₀(_lh_integrate2D_arg3², _lh_integrate2D_arg4², (fun y⁶ -> integrate1D_lh_₁_₁(_lh_integrate2D_arg1², _lh_integrate2D_arg2², (fun x⁶ -> _lh_integrate2D_arg5²(x⁶, y⁶)))))
//│ 						where
//│ 						def integrate1D_lh_₁_₀(_lh_integrate1D_arg1², _lh_integrate1D_arg2², _lh_integrate1D_arg3²) = 
//│ 							let d² = ((_lh_integrate1D_arg2² -. _lh_integrate1D_arg1²) /. 8.0)
//│ 							in (d² *. sumFloat_lh_₁_₀(
//│ 								let _lh_sumFloat_LH_C_1²⁰ = 	
//│ 									let _lh_sumFloat_LH_C_1²¹ = 	
//│ 										let _lh_sumFloat_LH_C_1²² = 	
//│ 											let _lh_sumFloat_LH_C_1²³ = 	
//│ 												let _lh_sumFloat_LH_C_1²⁴ = 	
//│ 													let _lh_sumFloat_LH_C_1²⁵ = 	
//│ 														let _lh_sumFloat_LH_C_1²⁶ = 	
//│ 															let _lh_sumFloat_LH_C_1²⁷ = 	
//│ 																let _lh_sumFloat_LH_C_1²⁸ = (fun _lh_dummy²⁷ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0²⁰ = (_lh_integrate1D_arg3²(_lh_integrate1D_arg2²) *. 0.5)
//│ 																in (fun _lh_dummy²⁸ -> (_lh_sumFloat_LH_C_0²⁰ +. sumFloat_lh_₁_₁(_lh_sumFloat_LH_C_1²⁸)))
//│ 															in let _lh_sumFloat_LH_C_0²¹ = _lh_integrate1D_arg3²((_lh_integrate1D_arg2² -. d²))
//│ 															in (fun _lh_dummy²⁹ -> (_lh_sumFloat_LH_C_0²¹ +. sumFloat_lh_₁_₂(_lh_sumFloat_LH_C_1²⁷)))
//│ 														in let _lh_sumFloat_LH_C_0²² = _lh_integrate1D_arg3²((_lh_integrate1D_arg2² -. (2.0 *. d²)))
//│ 														in (fun _lh_dummy³⁰ -> (_lh_sumFloat_LH_C_0²² +. sumFloat_lh_₁_₃(_lh_sumFloat_LH_C_1²⁶)))
//│ 													in let _lh_sumFloat_LH_C_0²³ = _lh_integrate1D_arg3²((_lh_integrate1D_arg2² -. (3.0 *. d²)))
//│ 													in (fun _lh_dummy³¹ -> (_lh_sumFloat_LH_C_0²³ +. sumFloat_lh_₁_₄(_lh_sumFloat_LH_C_1²⁵)))
//│ 												in let _lh_sumFloat_LH_C_0²⁴ = _lh_integrate1D_arg3²((_lh_integrate1D_arg1² +. (4.0 *. d²)))
//│ 												in (fun _lh_dummy³² -> (_lh_sumFloat_LH_C_0²⁴ +. sumFloat_lh_₁_₅(_lh_sumFloat_LH_C_1²⁴)))
//│ 											in let _lh_sumFloat_LH_C_0²⁵ = _lh_integrate1D_arg3²((_lh_integrate1D_arg1² +. (3.0 *. d²)))
//│ 											in (fun _lh_dummy³³ -> (_lh_sumFloat_LH_C_0²⁵ +. sumFloat_lh_₁_₆(_lh_sumFloat_LH_C_1²³)))
//│ 										in let _lh_sumFloat_LH_C_0²⁶ = _lh_integrate1D_arg3²((_lh_integrate1D_arg1² +. (2.0 *. d²)))
//│ 										in (fun _lh_dummy³⁴ -> (_lh_sumFloat_LH_C_0²⁶ +. sumFloat_lh_₁_₇(_lh_sumFloat_LH_C_1²²)))
//│ 									in let _lh_sumFloat_LH_C_0²⁷ = _lh_integrate1D_arg3²((_lh_integrate1D_arg1² +. d²))
//│ 									in (fun _lh_dummy³⁵ -> (_lh_sumFloat_LH_C_0²⁷ +. sumFloat_lh_₁_₈(_lh_sumFloat_LH_C_1²¹)))
//│ 								in let _lh_sumFloat_LH_C_0²⁸ = (_lh_integrate1D_arg3²(_lh_integrate1D_arg1²) *. 0.5)
//│ 								in (fun _lh_dummy³⁶ -> (_lh_sumFloat_LH_C_0²⁸ +. sumFloat_lh_₁_₉(_lh_sumFloat_LH_C_1²⁰)))))
//│ 							where
//│ 							def sumFloat_lh_₁_₀(_lh_sumFloat_arg1¹⁹) = 
//│ 								_lh_sumFloat_arg1¹⁹(99)
//│ 							def sumFloat_lh_₁_₁(_lh_sumFloat_arg1³⁴) = 
//│ 								_lh_sumFloat_arg1³⁴(99)
//│ 							def sumFloat_lh_₁_₂(_lh_sumFloat_arg1⁵) = 
//│ 								_lh_sumFloat_arg1⁵(99)
//│ 							def sumFloat_lh_₁_₃(_lh_sumFloat_arg1²) = 
//│ 								_lh_sumFloat_arg1²(99)
//│ 							def sumFloat_lh_₁_₄(_lh_sumFloat_arg1¹³) = 
//│ 								_lh_sumFloat_arg1¹³(99)
//│ 							def sumFloat_lh_₁_₅(_lh_sumFloat_arg1²³) = 
//│ 								_lh_sumFloat_arg1²³(99)
//│ 							def sumFloat_lh_₁_₆(_lh_sumFloat_arg1¹²) = 
//│ 								_lh_sumFloat_arg1¹²(99)
//│ 							def sumFloat_lh_₁_₇(_lh_sumFloat_arg1²⁹) = 
//│ 								_lh_sumFloat_arg1²⁹(99)
//│ 							def sumFloat_lh_₁_₈(_lh_sumFloat_arg1³²) = 
//│ 								_lh_sumFloat_arg1³²(99)
//│ 							def sumFloat_lh_₁_₉(_lh_sumFloat_arg1¹⁸) = 
//│ 								_lh_sumFloat_arg1¹⁸(99)
//│ 						def integrate1D_lh_₁_₁(_lh_integrate1D_arg1¹, _lh_integrate1D_arg2¹, _lh_integrate1D_arg3¹) = 
//│ 							let d¹ = ((_lh_integrate1D_arg2¹ -. _lh_integrate1D_arg1¹) /. 8.0)
//│ 							in (d¹ *. sumFloat_lh_₁_₁₀(
//│ 								let _lh_sumFloat_LH_C_1¹¹ = 	
//│ 									let _lh_sumFloat_LH_C_1¹² = 	
//│ 										let _lh_sumFloat_LH_C_1¹³ = 	
//│ 											let _lh_sumFloat_LH_C_1¹⁴ = 	
//│ 												let _lh_sumFloat_LH_C_1¹⁵ = 	
//│ 													let _lh_sumFloat_LH_C_1¹⁶ = 	
//│ 														let _lh_sumFloat_LH_C_1¹⁷ = 	
//│ 															let _lh_sumFloat_LH_C_1¹⁸ = 	
//│ 																let _lh_sumFloat_LH_C_1¹⁹ = (fun _lh_dummy¹⁷ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0¹¹ = (_lh_integrate1D_arg3¹(_lh_integrate1D_arg2¹) *. 0.5)
//│ 																in (fun _lh_dummy¹⁸ -> (_lh_sumFloat_LH_C_0¹¹ +. sumFloat_lh_₁_₁₁(_lh_sumFloat_LH_C_1¹⁹)))
//│ 															in let _lh_sumFloat_LH_C_0¹² = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. d¹))
//│ 															in (fun _lh_dummy¹⁹ -> (_lh_sumFloat_LH_C_0¹² +. sumFloat_lh_₁_₁₂(_lh_sumFloat_LH_C_1¹⁸)))
//│ 														in let _lh_sumFloat_LH_C_0¹³ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. (2.0 *. d¹)))
//│ 														in (fun _lh_dummy²⁰ -> (_lh_sumFloat_LH_C_0¹³ +. sumFloat_lh_₁_₁₃(_lh_sumFloat_LH_C_1¹⁷)))
//│ 													in let _lh_sumFloat_LH_C_0¹⁴ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. (3.0 *. d¹)))
//│ 													in (fun _lh_dummy²¹ -> (_lh_sumFloat_LH_C_0¹⁴ +. sumFloat_lh_₁_₁₄(_lh_sumFloat_LH_C_1¹⁶)))
//│ 												in let _lh_sumFloat_LH_C_0¹⁵ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (4.0 *. d¹)))
//│ 												in (fun _lh_dummy²² -> (_lh_sumFloat_LH_C_0¹⁵ +. sumFloat_lh_₁_₁₅(_lh_sumFloat_LH_C_1¹⁵)))
//│ 											in let _lh_sumFloat_LH_C_0¹⁶ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (3.0 *. d¹)))
//│ 											in (fun _lh_dummy²³ -> (_lh_sumFloat_LH_C_0¹⁶ +. sumFloat_lh_₁_₁₆(_lh_sumFloat_LH_C_1¹⁴)))
//│ 										in let _lh_sumFloat_LH_C_0¹⁷ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (2.0 *. d¹)))
//│ 										in (fun _lh_dummy²⁴ -> (_lh_sumFloat_LH_C_0¹⁷ +. sumFloat_lh_₁_₁₇(_lh_sumFloat_LH_C_1¹³)))
//│ 									in let _lh_sumFloat_LH_C_0¹⁸ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. d¹))
//│ 									in (fun _lh_dummy²⁵ -> (_lh_sumFloat_LH_C_0¹⁸ +. sumFloat_lh_₁_₁₈(_lh_sumFloat_LH_C_1¹²)))
//│ 								in let _lh_sumFloat_LH_C_0¹⁹ = (_lh_integrate1D_arg3¹(_lh_integrate1D_arg1¹) *. 0.5)
//│ 								in (fun _lh_dummy²⁶ -> (_lh_sumFloat_LH_C_0¹⁹ +. sumFloat_lh_₁_₁₉(_lh_sumFloat_LH_C_1¹¹)))))
//│ 							where
//│ 							def sumFloat_lh_₁_₁₀(_lh_sumFloat_arg1²⁰) = 
//│ 								_lh_sumFloat_arg1²⁰(99)
//│ 							def sumFloat_lh_₁_₁₁(_lh_sumFloat_arg1²⁷) = 
//│ 								_lh_sumFloat_arg1²⁷(99)
//│ 							def sumFloat_lh_₁_₁₂(_lh_sumFloat_arg1³⁵) = 
//│ 								_lh_sumFloat_arg1³⁵(99)
//│ 							def sumFloat_lh_₁_₁₃(_lh_sumFloat_arg1²²) = 
//│ 								_lh_sumFloat_arg1²²(99)
//│ 							def sumFloat_lh_₁_₁₄(_lh_sumFloat_arg1⁹) = 
//│ 								_lh_sumFloat_arg1⁹(99)
//│ 							def sumFloat_lh_₁_₁₅(_lh_sumFloat_arg1⁸) = 
//│ 								_lh_sumFloat_arg1⁸(99)
//│ 							def sumFloat_lh_₁_₁₆(_lh_sumFloat_arg1³) = 
//│ 								_lh_sumFloat_arg1³(99)
//│ 							def sumFloat_lh_₁_₁₇(_lh_sumFloat_arg1⁴²) = 
//│ 								_lh_sumFloat_arg1⁴²(99)
//│ 							def sumFloat_lh_₁_₁₈(_lh_sumFloat_arg1²¹) = 
//│ 								_lh_sumFloat_arg1²¹(99)
//│ 							def sumFloat_lh_₁_₁₉(_lh_sumFloat_arg1¹⁴) = 
//│ 								_lh_sumFloat_arg1¹⁴(99)
//│ 				def zipWith_lz_lz_lh_₄_₁(f³⁶, xs¹⁰, ys¹¹) = 
//│ 					lazy⁰(force⁰(xs¹⁰, f³⁶, ys¹¹))
//│ 			def zarks_lh_₂_₀(_lh_zarks_arg1²) = 
//│ 				zipWith_lz_lz_lh_₅_₁(zark_lh_₂_₀, ints_lh_₃_₀(0), map_lz_lh_₃_₀((fun n⁹ -> (2.0 *. n⁹)), ints_lh_₄_₀(0)))
//│ 				where
//│ 				def ints_lh_₃_₀(_lh_ints_arg1⁸) = 
//│ 					enumFromFloat_lh_₂_₃(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₃(_lh_enumFromFloat_arg1⁵) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1⁵ enumFromFloat_lh_₂_₃((_lh_enumFromFloat_arg1⁵ +. 1.0))])
//│ 				def ints_lh_₄_₀(_lh_ints_arg1⁷) = 
//│ 					enumFromFloat_lh_₂_₄(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₄(_lh_enumFromFloat_arg1⁶) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₂_₄((_lh_enumFromFloat_arg1⁶ +. 1.0))])
//│ 				def map_lz_lh_₃_₀(f²⁶, ls¹⁶) = 
//│ 					lazy⁰(case force⁰(ls¹⁶) of {
//│ 						LH_C h¹⁷ t¹⁷ => 
//│ 							let ty⁶ = map_lz_lh_₃_₀(f²⁶, t¹⁷)
//│ 							in let hy⁶ = f²⁶(h¹⁷)
//│ 							in (fun f²⁷ -> (fun hx¹¹ -> (fun tx¹¹ -> [LH_C f²⁷(hx¹¹, hy⁶) zipWith_lz_lz_lh_₅_₀(f²⁷, tx¹¹, ty⁶)])))
//│ 						| LH_N  => (fun f²⁸ -> (fun hx¹² -> (fun tx¹² -> [LH_N])))})
//│ 					where
//│ 					def zipWith_lz_lz_lh_₅_₀(f³², xs⁷, ys⁸) = 
//│ 						lazy⁰(case force⁰(xs⁷) of {
//│ 							LH_C hx¹⁵ tx¹⁵ => force⁰(ys⁸, f³², hx¹⁵, tx¹⁵)
//│ 							| LH_N  => [LH_N]})
//│ 				def zark_lh_₂_₀(_lh_zark_arg1³, _lh_zark_arg2³) = 
//│ 					integrate2D_lh_₂_₀(0.0, _lh_zark_arg1³, 0.0, _lh_zark_arg2³, (fun x⁵ -> (fun y⁵ -> (x⁵ *. y⁵))))
//│ 					where
//│ 					def integrate2D_lh_₂_₀(_lh_integrate2D_arg1³, _lh_integrate2D_arg2³, _lh_integrate2D_arg3³, _lh_integrate2D_arg4³, _lh_integrate2D_arg5³) = 
//│ 						integrate1D_lh_₁_₂(_lh_integrate2D_arg3³, _lh_integrate2D_arg4³, (fun y⁷ -> integrate1D_lh_₁_₃(_lh_integrate2D_arg1³, _lh_integrate2D_arg2³, (fun x⁷ -> _lh_integrate2D_arg5³(x⁷, y⁷)))))
//│ 						where
//│ 						def integrate1D_lh_₁_₂(_lh_integrate1D_arg1⁴, _lh_integrate1D_arg2⁴, _lh_integrate1D_arg3⁴) = 
//│ 							let d⁴ = ((_lh_integrate1D_arg2⁴ -. _lh_integrate1D_arg1⁴) /. 8.0)
//│ 							in (d⁴ *. sumFloat_lh_₁_₂₀(
//│ 								let _lh_sumFloat_LH_C_1³⁸ = 	
//│ 									let _lh_sumFloat_LH_C_1³⁹ = 	
//│ 										let _lh_sumFloat_LH_C_1⁴⁰ = 	
//│ 											let _lh_sumFloat_LH_C_1⁴¹ = 	
//│ 												let _lh_sumFloat_LH_C_1⁴² = 	
//│ 													let _lh_sumFloat_LH_C_1⁴³ = 	
//│ 														let _lh_sumFloat_LH_C_1⁴⁴ = 	
//│ 															let _lh_sumFloat_LH_C_1⁴⁵ = 	
//│ 																let _lh_sumFloat_LH_C_1⁴⁶ = (fun _lh_dummy⁴⁹ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0³⁸ = (_lh_integrate1D_arg3⁴(_lh_integrate1D_arg2⁴) *. 0.5)
//│ 																in (fun _lh_dummy⁵⁰ -> (_lh_sumFloat_LH_C_0³⁸ +. sumFloat_lh_₁_₂₁(_lh_sumFloat_LH_C_1⁴⁶)))
//│ 															in let _lh_sumFloat_LH_C_0³⁹ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg2⁴ -. d⁴))
//│ 															in (fun _lh_dummy⁵¹ -> (_lh_sumFloat_LH_C_0³⁹ +. sumFloat_lh_₁_₂₂(_lh_sumFloat_LH_C_1⁴⁵)))
//│ 														in let _lh_sumFloat_LH_C_0⁴⁰ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg2⁴ -. (2.0 *. d⁴)))
//│ 														in (fun _lh_dummy⁵² -> (_lh_sumFloat_LH_C_0⁴⁰ +. sumFloat_lh_₁_₂₃(_lh_sumFloat_LH_C_1⁴⁴)))
//│ 													in let _lh_sumFloat_LH_C_0⁴¹ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg2⁴ -. (3.0 *. d⁴)))
//│ 													in (fun _lh_dummy⁵³ -> (_lh_sumFloat_LH_C_0⁴¹ +. sumFloat_lh_₁_₂₄(_lh_sumFloat_LH_C_1⁴³)))
//│ 												in let _lh_sumFloat_LH_C_0⁴² = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg1⁴ +. (4.0 *. d⁴)))
//│ 												in (fun _lh_dummy⁵⁴ -> (_lh_sumFloat_LH_C_0⁴² +. sumFloat_lh_₁_₂₅(_lh_sumFloat_LH_C_1⁴²)))
//│ 											in let _lh_sumFloat_LH_C_0⁴³ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg1⁴ +. (3.0 *. d⁴)))
//│ 											in (fun _lh_dummy⁵⁵ -> (_lh_sumFloat_LH_C_0⁴³ +. sumFloat_lh_₁_₂₆(_lh_sumFloat_LH_C_1⁴¹)))
//│ 										in let _lh_sumFloat_LH_C_0⁴⁴ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg1⁴ +. (2.0 *. d⁴)))
//│ 										in (fun _lh_dummy⁵⁶ -> (_lh_sumFloat_LH_C_0⁴⁴ +. sumFloat_lh_₁_₂₇(_lh_sumFloat_LH_C_1⁴⁰)))
//│ 									in let _lh_sumFloat_LH_C_0⁴⁵ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg1⁴ +. d⁴))
//│ 									in (fun _lh_dummy⁵⁷ -> (_lh_sumFloat_LH_C_0⁴⁵ +. sumFloat_lh_₁_₂₈(_lh_sumFloat_LH_C_1³⁹)))
//│ 								in let _lh_sumFloat_LH_C_0⁴⁶ = (_lh_integrate1D_arg3⁴(_lh_integrate1D_arg1⁴) *. 0.5)
//│ 								in (fun _lh_dummy⁵⁸ -> (_lh_sumFloat_LH_C_0⁴⁶ +. sumFloat_lh_₁_₂₉(_lh_sumFloat_LH_C_1³⁸)))))
//│ 							where
//│ 							def sumFloat_lh_₁_₂₀(_lh_sumFloat_arg1⁷) = 
//│ 								_lh_sumFloat_arg1⁷(99)
//│ 							def sumFloat_lh_₁_₂₁(_lh_sumFloat_arg1²⁸) = 
//│ 								_lh_sumFloat_arg1²⁸(99)
//│ 							def sumFloat_lh_₁_₂₂(_lh_sumFloat_arg1²⁴) = 
//│ 								_lh_sumFloat_arg1²⁴(99)
//│ 							def sumFloat_lh_₁_₂₃(_lh_sumFloat_arg1¹¹) = 
//│ 								_lh_sumFloat_arg1¹¹(99)
//│ 							def sumFloat_lh_₁_₂₄(_lh_sumFloat_arg1²⁶) = 
//│ 								_lh_sumFloat_arg1²⁶(99)
//│ 							def sumFloat_lh_₁_₂₅(_lh_sumFloat_arg1³⁰) = 
//│ 								_lh_sumFloat_arg1³⁰(99)
//│ 							def sumFloat_lh_₁_₂₆(_lh_sumFloat_arg1¹⁵) = 
//│ 								_lh_sumFloat_arg1¹⁵(99)
//│ 							def sumFloat_lh_₁_₂₇(_lh_sumFloat_arg1³⁷) = 
//│ 								_lh_sumFloat_arg1³⁷(99)
//│ 							def sumFloat_lh_₁_₂₈(_lh_sumFloat_arg1¹⁷) = 
//│ 								_lh_sumFloat_arg1¹⁷(99)
//│ 							def sumFloat_lh_₁_₂₉(_lh_sumFloat_arg1¹) = 
//│ 								_lh_sumFloat_arg1¹(99)
//│ 						def integrate1D_lh_₁_₃(_lh_integrate1D_arg1³, _lh_integrate1D_arg2³, _lh_integrate1D_arg3³) = 
//│ 							let d³ = ((_lh_integrate1D_arg2³ -. _lh_integrate1D_arg1³) /. 8.0)
//│ 							in (d³ *. sumFloat_lh_₁_₃₀(
//│ 								let _lh_sumFloat_LH_C_1²⁹ = 	
//│ 									let _lh_sumFloat_LH_C_1³⁰ = 	
//│ 										let _lh_sumFloat_LH_C_1³¹ = 	
//│ 											let _lh_sumFloat_LH_C_1³² = 	
//│ 												let _lh_sumFloat_LH_C_1³³ = 	
//│ 													let _lh_sumFloat_LH_C_1³⁴ = 	
//│ 														let _lh_sumFloat_LH_C_1³⁵ = 	
//│ 															let _lh_sumFloat_LH_C_1³⁶ = 	
//│ 																let _lh_sumFloat_LH_C_1³⁷ = (fun _lh_dummy³⁷ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0²⁹ = (_lh_integrate1D_arg3³(_lh_integrate1D_arg2³) *. 0.5)
//│ 																in (fun _lh_dummy³⁸ -> (_lh_sumFloat_LH_C_0²⁹ +. sumFloat_lh_₁_₃₁(_lh_sumFloat_LH_C_1³⁷)))
//│ 															in let _lh_sumFloat_LH_C_0³⁰ = _lh_integrate1D_arg3³((_lh_integrate1D_arg2³ -. d³))
//│ 															in (fun _lh_dummy³⁹ -> (_lh_sumFloat_LH_C_0³⁰ +. sumFloat_lh_₁_₃₂(_lh_sumFloat_LH_C_1³⁶)))
//│ 														in let _lh_sumFloat_LH_C_0³¹ = _lh_integrate1D_arg3³((_lh_integrate1D_arg2³ -. (2.0 *. d³)))
//│ 														in (fun _lh_dummy⁴⁰ -> (_lh_sumFloat_LH_C_0³¹ +. sumFloat_lh_₁_₃₃(_lh_sumFloat_LH_C_1³⁵)))
//│ 													in let _lh_sumFloat_LH_C_0³² = _lh_integrate1D_arg3³((_lh_integrate1D_arg2³ -. (3.0 *. d³)))
//│ 													in (fun _lh_dummy⁴¹ -> (_lh_sumFloat_LH_C_0³² +. sumFloat_lh_₁_₃₄(_lh_sumFloat_LH_C_1³⁴)))
//│ 												in let _lh_sumFloat_LH_C_0³³ = _lh_integrate1D_arg3³((_lh_integrate1D_arg1³ +. (4.0 *. d³)))
//│ 												in (fun _lh_dummy⁴² -> (_lh_sumFloat_LH_C_0³³ +. sumFloat_lh_₁_₃₅(_lh_sumFloat_LH_C_1³³)))
//│ 											in let _lh_sumFloat_LH_C_0³⁴ = _lh_integrate1D_arg3³((_lh_integrate1D_arg1³ +. (3.0 *. d³)))
//│ 											in (fun _lh_dummy⁴³ -> (_lh_sumFloat_LH_C_0³⁴ +. sumFloat_lh_₁_₃₆(_lh_sumFloat_LH_C_1³²)))
//│ 										in let _lh_sumFloat_LH_C_0³⁵ = _lh_integrate1D_arg3³((_lh_integrate1D_arg1³ +. (2.0 *. d³)))
//│ 										in (fun _lh_dummy⁴⁴ -> (_lh_sumFloat_LH_C_0³⁵ +. sumFloat_lh_₁_₃₇(_lh_sumFloat_LH_C_1³¹)))
//│ 									in let _lh_sumFloat_LH_C_0³⁶ = _lh_integrate1D_arg3³((_lh_integrate1D_arg1³ +. d³))
//│ 									in (fun _lh_dummy⁴⁵ -> (_lh_sumFloat_LH_C_0³⁶ +. sumFloat_lh_₁_₃₈(_lh_sumFloat_LH_C_1³⁰)))
//│ 								in let _lh_sumFloat_LH_C_0³⁷ = (_lh_integrate1D_arg3³(_lh_integrate1D_arg1³) *. 0.5)
//│ 								in (fun _lh_dummy⁴⁶ -> (_lh_sumFloat_LH_C_0³⁷ +. sumFloat_lh_₁_₃₉(_lh_sumFloat_LH_C_1²⁹)))))
//│ 							where
//│ 							def sumFloat_lh_₁_₃₀(_lh_sumFloat_arg1¹⁶) = 
//│ 								_lh_sumFloat_arg1¹⁶(99)
//│ 							def sumFloat_lh_₁_₃₁(_lh_sumFloat_arg1⁶) = 
//│ 								_lh_sumFloat_arg1⁶(99)
//│ 							def sumFloat_lh_₁_₃₂(_lh_sumFloat_arg1³³) = 
//│ 								_lh_sumFloat_arg1³³(99)
//│ 							def sumFloat_lh_₁_₃₃(_lh_sumFloat_arg1²⁵) = 
//│ 								_lh_sumFloat_arg1²⁵(99)
//│ 							def sumFloat_lh_₁_₃₄(_lh_sumFloat_arg1³⁸) = 
//│ 								_lh_sumFloat_arg1³⁸(99)
//│ 							def sumFloat_lh_₁_₃₅(_lh_sumFloat_arg1³⁹) = 
//│ 								_lh_sumFloat_arg1³⁹(99)
//│ 							def sumFloat_lh_₁_₃₆(_lh_sumFloat_arg1¹⁰) = 
//│ 								_lh_sumFloat_arg1¹⁰(99)
//│ 							def sumFloat_lh_₁_₃₇(_lh_sumFloat_arg1³¹) = 
//│ 								_lh_sumFloat_arg1³¹(99)
//│ 							def sumFloat_lh_₁_₃₈(_lh_sumFloat_arg1⁴) = 
//│ 								_lh_sumFloat_arg1⁴(99)
//│ 							def sumFloat_lh_₁_₃₉(_lh_sumFloat_arg1³⁶) = 
//│ 								_lh_sumFloat_arg1³⁶(99)
//│ 				def zipWith_lz_lz_lh_₅_₁(f²², xs⁶, ys⁷) = 
//│ 					lazy⁰(case force⁰(xs⁶) of {
//│ 						LH_C hx¹⁰ tx¹⁰ => force⁰(ys⁷, f²², hx¹⁰, tx¹⁰)
//│ 						| LH_N  => [LH_N]})
//│ 			def zipWith_lz_lz_lh_₂_₀(f³⁵, xs⁹, ys¹⁰) = 
//│ 				lazy⁰(case force⁰(xs⁹) of {
//│ 					LH_C hx¹⁷ tx¹⁷ => case force⁰(ys¹⁰) of {
//│ 						LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def sumFloat_lh_₁_₄₀(_lh_sumFloat_arg1⁴⁰) = 
//│ 			_lh_sumFloat_arg1⁴⁰(99)
//│ 		def take_lz_lh_₁_₀(n¹², ls²¹) = 
//│ 			if (n¹² > 0) then force⁰(ls²¹, n¹²) else (fun _lh_dummy⁴⁸ -> 0.0)
//│ 		def zipWith_lz_lz_lh_₁_₀(f¹⁸, xs⁵, ys⁶) = 
//│ 			lazy⁰(case force⁰(xs⁵) of {
//│ 				LH_C hx⁹ tx⁹ => case force⁰(ys⁶) of {
//│ 					LH_C hy⁵ ty⁵ => 
//│ 						let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ 						in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ 						in (fun f¹⁹ -> 
//│ 							let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ 							in let h¹¹ = f¹⁹(h¹⁰)
//│ 							in (fun n⁶ -> 
//│ 								let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ 								in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ 								in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰)))))
//│ 					| LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))}
//│ 				| LH_N  => (fun f²¹ -> (fun n⁸ -> (fun _lh_dummy¹⁶ -> 0.0)))})
//│ 			where
//│ 			def map_lz_lh_₁_₁(f³⁴, ls¹⁹) = 
//│ 				lazy⁰(force⁰(ls¹⁹, f³⁴))
//│ 			def sumFloat_lh_₁_₄₁(_lh_sumFloat_arg1⁴¹) = 
//│ 				_lh_sumFloat_arg1⁴¹(99)
//│ 			def take_lz_lh_₁_₁(n¹¹, ls¹⁸) = 
//│ 				if (n¹¹ > 0) then force⁰(ls¹⁸, n¹¹) else (fun _lh_dummy⁴⁷ -> 0.0)
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 965 --->
//│ 	case force⁰(ls¹³) of {LH_C h¹⁴ t¹⁴ => t¹⁴ | LH_N  => error⁰}: 1106
//│ [LH_C head_lz_lh_₁_₀(zarks_lh_₁_₀(0)) zipWith_lz_lz_lh_₂_₀((fun a⁶ -> (fun b³ -> (a⁶ +. b³))), tail_lz_lh_₁_₀(zarks_lh_₂_₀(0)), rtotals_lh_₁_₀(0))]: 1025 --->
//│ 	case force⁰(xs⁵) of {LH_C hx⁹ tx⁹ => case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))} | LH_N  => (fun f²¹ -> (fun n⁸ -> (fun _lh_dummy¹⁶ -> 0.0)))}: 907
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)] | LH_N  => [LH_N]}: 2221
//│ [LH_C f²⁴(h¹³) map_lz_lh_₄_₀(f²⁴, t¹³)]: 1091 --->
//│ 	case force⁰(ls¹¹) of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 1052
//│ 	case force⁰(xs⁸) of {LH_C hx¹⁶ tx¹⁶ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2167
//│ [LH_N]: 1092 --->
//│ 	case force⁰(ls¹¹) of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 1052
//│ 	case force⁰(xs⁸) of {LH_C hx¹⁶ tx¹⁶ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2167
//│ [LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₂_₀((_lh_enumFromFloat_arg1² +. 1.0))]: 1569 --->
//│ 	case force⁰(ls¹²) of {LH_C h¹³ t¹³ => [LH_C f²⁴(h¹³) map_lz_lh_₄_₀(f²⁴, t¹³)] | LH_N  => [LH_N]}: 1093
//│ [LH_C f²⁵(h¹⁵) map_lz_lh_₅_₀(f²⁵, t¹⁵)]: 1584 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls¹⁵) of {LH_C h¹⁶ t¹⁶ => h¹⁶ | LH_N  => error⁰}: 1603
//│ [LH_N]: 1585 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls¹⁵) of {LH_C h¹⁶ t¹⁶ => h¹⁶ | LH_N  => error⁰}: 1603
//│ [LH_C f²⁷(hx¹¹, hy⁶) zipWith_lz_lz_lh_₅_₀(f²⁷, tx¹¹, ty⁶)]: 1678 --->
//│ 	case force⁰(ls¹³) of {LH_C h¹⁴ t¹⁴ => t¹⁴ | LH_N  => error⁰}: 1106
//│ 	case force⁰(xs⁹) of {LH_C hx¹⁷ tx¹⁷ => case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2223
//│ [LH_N]: 1684 --->
//│ 	case force⁰(ls¹³) of {LH_C h¹⁴ t¹⁴ => t¹⁴ | LH_N  => error⁰}: 1106
//│ 	case force⁰(xs⁹) of {LH_C hx¹⁷ tx¹⁷ => case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2223
//│ [LH_C f³⁰(hx¹³, hy⁷) zipWith_lz_lz_lh_₄_₀(f³⁰, tx¹³, ty⁷)]: 1716 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls²⁰) of {LH_C h¹⁹ t¹⁹ => h¹⁹ | LH_N  => error⁰}: 2194
//│ [LH_N]: 1722 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls²⁰) of {LH_C h¹⁹ t¹⁹ => h¹⁹ | LH_N  => error⁰}: 2194
//│ [LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₂_₁((_lh_enumFromFloat_arg1³ +. 1.0))]: 1983 --->
//│ 	case force⁰(ls¹⁴) of {LH_C h¹⁵ t¹⁵ => [LH_C f²⁵(h¹⁵) map_lz_lh_₅_₀(f²⁵, t¹⁵)] | LH_N  => [LH_N]}: 1586
//│ [LH_C head_lz_lh_₂_₀(is_lh_₂_₀(0)) zipWith_lz_lz_lh_₃_₀((fun a¹¹ -> (fun b⁵ -> (a¹¹ +. b⁵))), tail_lz_lh_₂_₀(is_lh_₁_₀(0)), itotals_lh_₁_₀(0))]: 2023 --->
//│ 	case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))}: 902
//│ 	case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)] | LH_N  => [LH_N]}: 2165
//│ [LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))]: 2039 --->
//│ 	case force⁰(ls¹⁷) of {LH_C h¹⁸ t¹⁸ => let ty⁷ = map_lz_lh_₂_₀(f²⁹, t¹⁸)
//│ in let hy⁷ = f²⁹(h¹⁸)
//│ in (fun f³⁰ -> (fun hx¹³ -> (fun tx¹³ -> [LH_C f³⁰(hx¹³, hy⁷) zipWith_lz_lz_lh_₄_₀(f³⁰, tx¹³, ty⁷)]))) | LH_N  => (fun f³¹ -> (fun hx¹⁴ -> (fun tx¹⁴ -> [LH_N])))}: 1726
//│ [LH_N]: 2078 --->
//│ 	case force⁰(xs⁹) of {LH_C hx¹⁷ tx¹⁷ => case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2223
//│ [LH_C _lh_enumFromFloat_arg1⁵ enumFromFloat_lh_₂_₃((_lh_enumFromFloat_arg1⁵ +. 1.0))]: 2141 --->
//│ 	DeadCodeCons
//│ 	case force⁰(xs⁶) of {LH_C hx¹⁰ tx¹⁰ => force⁰(ys⁷, f²², hx¹⁰, tx¹⁰) | LH_N  => [LH_N]}: 966
//│ 	case force⁰(xs⁷) of {LH_C hx¹⁵ tx¹⁵ => force⁰(ys⁸, f³², hx¹⁵, tx¹⁵) | LH_N  => [LH_N]}: 2079
//│ [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)]: 2163 --->
//│ 	case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))}: 902
//│ 	case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)] | LH_N  => [LH_N]}: 2165
//│ [LH_N]: 2164 --->
//│ 	case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))}: 902
//│ 	case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)] | LH_N  => [LH_N]}: 2165
//│ [LH_N]: 2166 --->
//│ 	case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))}: 902
//│ 	case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)] | LH_N  => [LH_N]}: 2165
//│ [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)]: 2219 --->
//│ 	case force⁰(xs⁵) of {LH_C hx⁹ tx⁹ => case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))} | LH_N  => (fun f²¹ -> (fun n⁸ -> (fun _lh_dummy¹⁶ -> 0.0)))}: 907
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)] | LH_N  => [LH_N]}: 2221
//│ [LH_N]: 2220 --->
//│ 	case force⁰(xs⁵) of {LH_C hx⁹ tx⁹ => case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))} | LH_N  => (fun f²¹ -> (fun n⁸ -> (fun _lh_dummy¹⁶ -> 0.0)))}: 907
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)] | LH_N  => [LH_N]}: 2221
//│ [LH_N]: 2222 --->
//│ 	case force⁰(xs⁵) of {LH_C hx⁹ tx⁹ => case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))} | LH_N  => (fun f²¹ -> (fun n⁸ -> (fun _lh_dummy¹⁶ -> 0.0)))}: 907
//│ 	case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)] | LH_N  => [LH_N]}: 2221
//│ [LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₂_₄((_lh_enumFromFloat_arg1⁶ +. 1.0))]: 2237 --->
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁷ t¹⁷ => let ty⁶ = map_lz_lh_₃_₀(f²⁶, t¹⁷)
//│ in let hy⁶ = f²⁶(h¹⁷)
//│ in (fun f²⁷ -> (fun hx¹¹ -> (fun tx¹¹ -> [LH_C f²⁷(hx¹¹, hy⁶) zipWith_lz_lz_lh_₅_₀(f²⁷, tx¹¹, ty⁶)]))) | LH_N  => (fun f²⁸ -> (fun hx¹² -> (fun tx¹² -> [LH_N])))}: 1688
//│ ------------------
//│ case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))}: 902 --->
//│ 	[LH_C head_lz_lh_₂_₀(is_lh_₂_₀(0)) zipWith_lz_lz_lh_₃_₀((fun a¹¹ -> (fun b⁵ -> (a¹¹ +. b⁵))), tail_lz_lh_₂_₀(is_lh_₁_₀(0)), itotals_lh_₁_₀(0))]: 2023
//│ 	[LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)]: 2163
//│ 	[LH_N]: 2164
//│ 	[LH_N]: 2166
//│ case force⁰(xs⁵) of {LH_C hx⁹ tx⁹ => case force⁰(ys⁶) of {LH_C hy⁵ ty⁵ => let t¹⁰ = zipWith_lz_lz_lh_₁_₀(f¹⁸, tx⁹, ty⁵)
//│ in let h¹⁰ = f¹⁸(hx⁹, hy⁵)
//│ in (fun f¹⁹ -> let t¹¹ = map_lz_lh_₁_₁(f¹⁹, t¹⁰)
//│ in let h¹¹ = f¹⁹(h¹⁰)
//│ in (fun n⁶ -> let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh_₁_₁((n⁶ - 1), t¹¹)
//│ in let _lh_sumFloat_LH_C_0¹⁰ = h¹¹
//│ in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1¹⁰))))) | LH_N  => (fun f²⁰ -> (fun n⁷ -> (fun _lh_dummy¹⁵ -> 0.0)))} | LH_N  => (fun f²¹ -> (fun n⁸ -> (fun _lh_dummy¹⁶ -> 0.0)))}: 907 --->
//│ 	[LH_C head_lz_lh_₁_₀(zarks_lh_₁_₀(0)) zipWith_lz_lz_lh_₂_₀((fun a⁶ -> (fun b³ -> (a⁶ +. b³))), tail_lz_lh_₁_₀(zarks_lh_₂_₀(0)), rtotals_lh_₁_₀(0))]: 1025
//│ 	[LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)]: 2219
//│ 	[LH_N]: 2220
//│ 	[LH_N]: 2222
//│ case force⁰(xs⁶) of {LH_C hx¹⁰ tx¹⁰ => force⁰(ys⁷, f²², hx¹⁰, tx¹⁰) | LH_N  => [LH_N]}: 966 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁵ enumFromFloat_lh_₂_₃((_lh_enumFromFloat_arg1⁵ +. 1.0))]: 2141
//│ case force⁰(ls¹¹) of {LH_C h¹² t¹² => t¹² | LH_N  => error⁰}: 1052 --->
//│ 	[LH_C f²⁴(h¹³) map_lz_lh_₄_₀(f²⁴, t¹³)]: 1091
//│ 	[LH_N]: 1092
//│ case force⁰(ls¹²) of {LH_C h¹³ t¹³ => [LH_C f²⁴(h¹³) map_lz_lh_₄_₀(f²⁴, t¹³)] | LH_N  => [LH_N]}: 1093 --->
//│ 	[LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₂_₀((_lh_enumFromFloat_arg1² +. 1.0))]: 1569
//│ case force⁰(ls¹³) of {LH_C h¹⁴ t¹⁴ => t¹⁴ | LH_N  => error⁰}: 1106 --->
//│ 	[LH_N]: 965
//│ 	[LH_C f²⁷(hx¹¹, hy⁶) zipWith_lz_lz_lh_₅_₀(f²⁷, tx¹¹, ty⁶)]: 1678
//│ 	[LH_N]: 1684
//│ case force⁰(ls¹⁴) of {LH_C h¹⁵ t¹⁵ => [LH_C f²⁵(h¹⁵) map_lz_lh_₅_₀(f²⁵, t¹⁵)] | LH_N  => [LH_N]}: 1586 --->
//│ 	[LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₂_₁((_lh_enumFromFloat_arg1³ +. 1.0))]: 1983
//│ case force⁰(ls¹⁵) of {LH_C h¹⁶ t¹⁶ => h¹⁶ | LH_N  => error⁰}: 1603 --->
//│ 	[LH_C f²⁵(h¹⁵) map_lz_lh_₅_₀(f²⁵, t¹⁵)]: 1584
//│ 	[LH_N]: 1585
//│ case force⁰(ls¹⁶) of {LH_C h¹⁷ t¹⁷ => let ty⁶ = map_lz_lh_₃_₀(f²⁶, t¹⁷)
//│ in let hy⁶ = f²⁶(h¹⁷)
//│ in (fun f²⁷ -> (fun hx¹¹ -> (fun tx¹¹ -> [LH_C f²⁷(hx¹¹, hy⁶) zipWith_lz_lz_lh_₅_₀(f²⁷, tx¹¹, ty⁶)]))) | LH_N  => (fun f²⁸ -> (fun hx¹² -> (fun tx¹² -> [LH_N])))}: 1688 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₂_₄((_lh_enumFromFloat_arg1⁶ +. 1.0))]: 2237
//│ case force⁰(ls¹⁷) of {LH_C h¹⁸ t¹⁸ => let ty⁷ = map_lz_lh_₂_₀(f²⁹, t¹⁸)
//│ in let hy⁷ = f²⁹(h¹⁸)
//│ in (fun f³⁰ -> (fun hx¹³ -> (fun tx¹³ -> [LH_C f³⁰(hx¹³, hy⁷) zipWith_lz_lz_lh_₄_₀(f³⁰, tx¹³, ty⁷)]))) | LH_N  => (fun f³¹ -> (fun hx¹⁴ -> (fun tx¹⁴ -> [LH_N])))}: 1726 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))]: 2039
//│ case force⁰(xs⁷) of {LH_C hx¹⁵ tx¹⁵ => force⁰(ys⁸, f³², hx¹⁵, tx¹⁵) | LH_N  => [LH_N]}: 2079 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁵ enumFromFloat_lh_₂_₃((_lh_enumFromFloat_arg1⁵ +. 1.0))]: 2141
//│ case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)] | LH_N  => [LH_N]}: 2165 --->
//│ 	[LH_C head_lz_lh_₂_₀(is_lh_₂_₀(0)) zipWith_lz_lz_lh_₃_₀((fun a¹¹ -> (fun b⁵ -> (a¹¹ +. b⁵))), tail_lz_lh_₂_₀(is_lh_₁_₀(0)), itotals_lh_₁_₀(0))]: 2023
//│ 	[LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)]: 2163
//│ 	[LH_N]: 2164
//│ 	[LH_N]: 2166
//│ case force⁰(xs⁸) of {LH_C hx¹⁶ tx¹⁶ => case force⁰(ys⁹) of {LH_C hy⁸ ty⁸ => [LH_C f³³(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f³³, tx¹⁶, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2167 --->
//│ 	[LH_C f²⁴(h¹³) map_lz_lh_₄_₀(f²⁴, t¹³)]: 1091
//│ 	[LH_N]: 1092
//│ case force⁰(ls²⁰) of {LH_C h¹⁹ t¹⁹ => h¹⁹ | LH_N  => error⁰}: 2194 --->
//│ 	DeadCodeProd
//│ 	[LH_C f³⁰(hx¹³, hy⁷) zipWith_lz_lz_lh_₄_₀(f³⁰, tx¹³, ty⁷)]: 1716
//│ 	[LH_N]: 1722
//│ case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)] | LH_N  => [LH_N]}: 2221 --->
//│ 	[LH_C head_lz_lh_₁_₀(zarks_lh_₁_₀(0)) zipWith_lz_lz_lh_₂_₀((fun a⁶ -> (fun b³ -> (a⁶ +. b³))), tail_lz_lh_₁_₀(zarks_lh_₂_₀(0)), rtotals_lh_₁_₀(0))]: 1025
//│ 	[LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)]: 2219
//│ 	[LH_N]: 2220
//│ 	[LH_N]: 2222
//│ case force⁰(xs⁹) of {LH_C hx¹⁷ tx¹⁷ => case force⁰(ys¹⁰) of {LH_C hy⁹ ty⁹ => [LH_C f³⁵(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f³⁵, tx¹⁷, ty⁹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2223 --->
//│ 	[LH_C f²⁷(hx¹¹, hy⁶) zipWith_lz_lz_lh_₅_₀(f²⁷, tx¹¹, ty⁶)]: 1678
//│ 	[LH_N]: 1684
//│ 	[LH_N]: 2078
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₂_₀((_lh_enumFromFloat_arg1² +. 1.0))]: 1569 --->
//│ 	case force⁰(ls¹²) of {LH_C h¹³ t¹³ => [LH_C f²⁴(h¹³) map_lz_lh_₄_₀(f²⁴, t¹³)] | LH_N  => [LH_N]}: 1093
//│ [LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₂_₁((_lh_enumFromFloat_arg1³ +. 1.0))]: 1983 --->
//│ 	case force⁰(ls¹⁴) of {LH_C h¹⁵ t¹⁵ => [LH_C f²⁵(h¹⁵) map_lz_lh_₅_₀(f²⁵, t¹⁵)] | LH_N  => [LH_N]}: 1586
//│ [LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))]: 2039 --->
//│ 	case force⁰(ls¹⁷) of {LH_C h¹⁸ t¹⁸ => let ty⁷ = map_lz_lh_₂_₀(f²⁹, t¹⁸)
//│ in let hy⁷ = f²⁹(h¹⁸)
//│ in (fun f³⁰ -> (fun hx¹³ -> (fun tx¹³ -> [LH_C f³⁰(hx¹³, hy⁷) zipWith_lz_lz_lh_₄_₀(f³⁰, tx¹³, ty⁷)]))) | LH_N  => (fun f³¹ -> (fun hx¹⁴ -> (fun tx¹⁴ -> [LH_N])))}: 1726
//│ [LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₂_₄((_lh_enumFromFloat_arg1⁶ +. 1.0))]: 2237 --->
//│ 	case force⁰(ls¹⁶) of {LH_C h¹⁷ t¹⁷ => let ty⁶ = map_lz_lh_₃_₀(f²⁶, t¹⁷)
//│ in let hy⁶ = f²⁶(h¹⁷)
//│ in (fun f²⁷ -> (fun hx¹¹ -> (fun tx¹¹ -> [LH_C f²⁷(hx¹¹, hy⁶) zipWith_lz_lz_lh_₅_₀(f²⁷, tx¹¹, ty⁶)]))) | LH_N  => (fun f²⁸ -> (fun hx¹² -> (fun tx¹² -> [LH_N])))}: 1688
//│ ------------------
//│ case force⁰(ls¹²) of {LH_C h¹³ t¹³ => [LH_C f²⁴(h¹³) map_lz_lh_₄_₀(f²⁴, t¹³)] | LH_N  => [LH_N]}: 1093 --->
//│ 	[LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₂_₀((_lh_enumFromFloat_arg1² +. 1.0))]: 1569
//│ case force⁰(ls¹⁴) of {LH_C h¹⁵ t¹⁵ => [LH_C f²⁵(h¹⁵) map_lz_lh_₅_₀(f²⁵, t¹⁵)] | LH_N  => [LH_N]}: 1586 --->
//│ 	[LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₂_₁((_lh_enumFromFloat_arg1³ +. 1.0))]: 1983
//│ case force⁰(ls¹⁶) of {LH_C h¹⁷ t¹⁷ => let ty⁶ = map_lz_lh_₃_₀(f²⁶, t¹⁷)
//│ in let hy⁶ = f²⁶(h¹⁷)
//│ in (fun f²⁷ -> (fun hx¹¹ -> (fun tx¹¹ -> [LH_C f²⁷(hx¹¹, hy⁶) zipWith_lz_lz_lh_₅_₀(f²⁷, tx¹¹, ty⁶)]))) | LH_N  => (fun f²⁸ -> (fun hx¹² -> (fun tx¹² -> [LH_N])))}: 1688 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₂_₄((_lh_enumFromFloat_arg1⁶ +. 1.0))]: 2237
//│ case force⁰(ls¹⁷) of {LH_C h¹⁸ t¹⁸ => let ty⁷ = map_lz_lh_₂_₀(f²⁹, t¹⁸)
//│ in let hy⁷ = f²⁹(h¹⁸)
//│ in (fun f³⁰ -> (fun hx¹³ -> (fun tx¹³ -> [LH_C f³⁰(hx¹³, hy⁷) zipWith_lz_lz_lh_₄_₀(f³⁰, tx¹³, ty⁷)]))) | LH_N  => (fun f³¹ -> (fun hx¹⁴ -> (fun tx¹⁴ -> [LH_N])))}: 1726 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))]: 2039
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testIntegrate_nofib_lh_₁_₀(primId⁰(100))
//│ def testIntegrate_nofib_lh_₁_₀(_lh_testIntegrate_nofib_arg1²) = 
//│ 	etotal_lh_₁_₀(_lh_testIntegrate_nofib_arg1²)
//│ 	where
//│ 	def etotal_lh_₁_₀(_lh_etotal_arg1²) = 
//│ 		sumFloat_lh_₁_₄₀(take_lz_lh_₁_₀(_lh_etotal_arg1², map_lz_lh_₁_₀((fun a¹² -> (a¹² *. a¹²)), zipWith_lz_lz_lh_₁_₀((fun a¹³ -> (fun b⁶ -> (a¹³ -. b⁶))), rtotals_lh_₁_₀(0), itotals_lh_₁_₀(0)))))
//│ 		where
//│ 		def itotals_lh_₁_₀(_lh_itotals_arg1²) = 
//│ 			lazy⁰([LH_C head_lz_lh_₂_₀(is_lh_₂_₀(0)) zipWith_lz_lz_lh_₃_₀((fun a¹⁵ -> (fun b⁸ -> (a¹⁵ +. b⁸))), tail_lz_lh_₂_₀(is_lh_₁_₀(0)), itotals_lh_₁_₀(0))])
//│ 			where
//│ 			def head_lz_lh_₂_₀(ls²⁹) = 
//│ 				case force⁰(ls²⁹) of {
//│ 					LH_C h¹⁶ t¹⁶ => h¹⁶
//│ 					| LH_N  => error⁰}
//│ 			def is_lh_₁_₀(_lh_is_arg1⁴) = 
//│ 				map_lz_lh_₄_₀((fun a¹⁶ -> (((a¹⁶ *. a¹⁶) *. a¹⁶) *. a¹⁶)), ints_lh_₅_₀(0))
//│ 				where
//│ 				def ints_lh_₅_₀(_lh_ints_arg1¹³) = 
//│ 					enumFromFloat_lh_₂_₀(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₀(_lh_enumFromFloat_arg1⁹) = 
//│ 						lazy⁰(
//│ 							let t²¹ = enumFromFloat_lh_₂_₀((_lh_enumFromFloat_arg1⁹ +. 1.0))
//│ 							in let h²¹ = _lh_enumFromFloat_arg1⁹
//│ 							in (fun f⁴² -> [LH_C f⁴²(h²¹) map_lz_lh_₄_₀(f⁴², t²¹)]))
//│ 				def map_lz_lh_₄_₀(f⁵⁴, ls²⁸) = 
//│ 					lazy⁰(force⁰(ls²⁸, f⁵⁴))
//│ 			def is_lh_₂_₀(_lh_is_arg1⁵) = 
//│ 				map_lz_lh_₅_₀((fun a¹⁷ -> (((a¹⁷ *. a¹⁷) *. a¹⁷) *. a¹⁷)), ints_lh_₆_₀(0))
//│ 				where
//│ 				def ints_lh_₆_₀(_lh_ints_arg1¹⁴) = 
//│ 					enumFromFloat_lh_₂_₁(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₁(_lh_enumFromFloat_arg1¹³) = 
//│ 						lazy⁰(
//│ 							let t²⁵ = enumFromFloat_lh_₂_₁((_lh_enumFromFloat_arg1¹³ +. 1.0))
//│ 							in let h²⁵ = _lh_enumFromFloat_arg1¹³
//│ 							in (fun f⁶¹ -> [LH_C f⁶¹(h²⁵) map_lz_lh_₅_₀(f⁶¹, t²⁵)]))
//│ 				def map_lz_lh_₅_₀(f⁴³, ls²⁵) = 
//│ 					lazy⁰(force⁰(ls²⁵, f⁴³))
//│ 			def tail_lz_lh_₂_₀(ls²⁴) = 
//│ 				case force⁰(ls²⁴) of {
//│ 					LH_C h¹² t¹² => t¹²
//│ 					| LH_N  => error⁰}
//│ 			def zipWith_lz_lz_lh_₃_₀(f⁴⁷, xs¹⁵, ys¹⁷) = 
//│ 				lazy⁰(case force⁰(xs¹⁵) of {
//│ 					LH_C hx¹⁶ tx¹⁶ => case force⁰(ys¹⁷) of {
//│ 						LH_C hy⁸ ty⁸ => [LH_C f⁴⁷(hx¹⁶, hy⁸) zipWith_lz_lz_lh_₃_₀(f⁴⁷, tx¹⁶, ty⁸)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def map_lz_lh_₁_₀(f³⁹, ls²³) = 
//│ 			lazy⁰(force⁰(ls²³, f³⁹))
//│ 		def rtotals_lh_₁_₀(_lh_rtotals_arg1²) = 
//│ 			lazy⁰([LH_C head_lz_lh_₁_₀(zarks_lh_₁_₀(0)) zipWith_lz_lz_lh_₂_₀((fun a¹⁴ -> (fun b⁷ -> (a¹⁴ +. b⁷))), tail_lz_lh_₁_₀(zarks_lh_₂_₀(0)), rtotals_lh_₁_₀(0))])
//│ 			where
//│ 			def head_lz_lh_₁_₀(ls²⁶) = 
//│ 				case force⁰(ls²⁶) of {
//│ 					LH_C h¹⁹ t¹⁹ => h¹⁹
//│ 					| LH_N  => error⁰}
//│ 			def tail_lz_lh_₁_₀(ls²⁷) = 
//│ 				case force⁰(ls²⁷) of {
//│ 					LH_C h¹⁴ t¹⁴ => t¹⁴
//│ 					| LH_N  => error⁰}
//│ 			def zarks_lh_₁_₀(_lh_zarks_arg1⁴) = 
//│ 				zipWith_lz_lz_lh_₄_₁(zark_lh_₁_₀, ints_lh_₁_₀(0), map_lz_lh_₂_₀((fun n¹⁴ -> (2.0 *. n¹⁴)), ints_lh_₂_₀(0)))
//│ 				where
//│ 				def ints_lh_₁_₀(_lh_ints_arg1¹⁷) = 
//│ 					enumFromFloat_lh_₁_₀(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₁_₀(_lh_enumFromFloat_arg1¹²) = 
//│ 						lazy⁰(
//│ 							let tx²¹ = enumFromFloat_lh_₁_₀((_lh_enumFromFloat_arg1¹² +. 1.0))
//│ 							in let hx²¹ = _lh_enumFromFloat_arg1¹²
//│ 							in (fun f⁵⁷ -> (fun ys²⁰ -> force⁰(ys²⁰, f⁵⁷, hx²¹, tx²¹))))
//│ 				def ints_lh_₂_₀(_lh_ints_arg1¹⁶) = 
//│ 					enumFromFloat_lh_₂_₂(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₂(_lh_enumFromFloat_arg1⁸) = 
//│ 						lazy⁰(
//│ 							let t²⁰ = enumFromFloat_lh_₂_₂((_lh_enumFromFloat_arg1⁸ +. 1.0))
//│ 							in let h²⁰ = _lh_enumFromFloat_arg1⁸
//│ 							in (fun f⁴⁰ -> 
//│ 								let ty¹⁰ = map_lz_lh_₂_₀(f⁴⁰, t²⁰)
//│ 								in let hy¹⁰ = f⁴⁰(h²⁰)
//│ 								in (fun f⁴¹ -> (fun hx¹⁹ -> (fun tx¹⁹ -> [LH_C f⁴¹(hx¹⁹, hy¹⁰) zipWith_lz_lz_lh_₄_₀(f⁴¹, tx¹⁹, ty¹⁰)])))))
//│ 				def map_lz_lh_₂_₀(f⁵⁹, ls³²) = 
//│ 					lazy⁰(force⁰(ls³², f⁵⁹))
//│ 					where
//│ 					def zipWith_lz_lz_lh_₄_₀(f⁴⁵, xs¹³, ys¹⁵) = 
//│ 						lazy⁰(force⁰(xs¹³, f⁴⁵, ys¹⁵))
//│ 				def zark_lh_₁_₀(_lh_zark_arg1⁵, _lh_zark_arg2⁵) = 
//│ 					integrate2D_lh_₁_₀(0.0, _lh_zark_arg1⁵, 0.0, _lh_zark_arg2⁵, (fun x⁹ -> (fun y⁹ -> (x⁹ *. y⁹))))
//│ 					where
//│ 					def integrate2D_lh_₁_₀(_lh_integrate2D_arg1⁵, _lh_integrate2D_arg2⁵, _lh_integrate2D_arg3⁵, _lh_integrate2D_arg4⁵, _lh_integrate2D_arg5⁵) = 
//│ 						integrate1D_lh_₁_₀(_lh_integrate2D_arg3⁵, _lh_integrate2D_arg4⁵, (fun y¹¹ -> integrate1D_lh_₁_₁(_lh_integrate2D_arg1⁵, _lh_integrate2D_arg2⁵, (fun x¹¹ -> _lh_integrate2D_arg5⁵(x¹¹, y¹¹)))))
//│ 						where
//│ 						def integrate1D_lh_₁_₀(_lh_integrate1D_arg1⁵, _lh_integrate1D_arg2⁵, _lh_integrate1D_arg3⁵) = 
//│ 							let d⁵ = ((_lh_integrate1D_arg2⁵ -. _lh_integrate1D_arg1⁵) /. 8.0)
//│ 							in (d⁵ *. sumFloat_lh_₁_₀(
//│ 								let _lh_sumFloat_LH_C_1⁴⁷ = 	
//│ 									let _lh_sumFloat_LH_C_1⁴⁸ = 	
//│ 										let _lh_sumFloat_LH_C_1⁴⁹ = 	
//│ 											let _lh_sumFloat_LH_C_1⁵⁰ = 	
//│ 												let _lh_sumFloat_LH_C_1⁵¹ = 	
//│ 													let _lh_sumFloat_LH_C_1⁵² = 	
//│ 														let _lh_sumFloat_LH_C_1⁵³ = 	
//│ 															let _lh_sumFloat_LH_C_1⁵⁴ = 	
//│ 																let _lh_sumFloat_LH_C_1⁵⁵ = (fun _lh_dummy⁶⁰ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0⁴⁷ = (_lh_integrate1D_arg3⁵(_lh_integrate1D_arg2⁵) *. 0.5)
//│ 																in (fun _lh_dummy⁶¹ -> (_lh_sumFloat_LH_C_0⁴⁷ +. sumFloat_lh_₁_₁(_lh_sumFloat_LH_C_1⁵⁵)))
//│ 															in let _lh_sumFloat_LH_C_0⁴⁸ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg2⁵ -. d⁵))
//│ 															in (fun _lh_dummy⁶² -> (_lh_sumFloat_LH_C_0⁴⁸ +. sumFloat_lh_₁_₂(_lh_sumFloat_LH_C_1⁵⁴)))
//│ 														in let _lh_sumFloat_LH_C_0⁴⁹ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg2⁵ -. (2.0 *. d⁵)))
//│ 														in (fun _lh_dummy⁶³ -> (_lh_sumFloat_LH_C_0⁴⁹ +. sumFloat_lh_₁_₃(_lh_sumFloat_LH_C_1⁵³)))
//│ 													in let _lh_sumFloat_LH_C_0⁵⁰ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg2⁵ -. (3.0 *. d⁵)))
//│ 													in (fun _lh_dummy⁶⁴ -> (_lh_sumFloat_LH_C_0⁵⁰ +. sumFloat_lh_₁_₄(_lh_sumFloat_LH_C_1⁵²)))
//│ 												in let _lh_sumFloat_LH_C_0⁵¹ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg1⁵ +. (4.0 *. d⁵)))
//│ 												in (fun _lh_dummy⁶⁵ -> (_lh_sumFloat_LH_C_0⁵¹ +. sumFloat_lh_₁_₅(_lh_sumFloat_LH_C_1⁵¹)))
//│ 											in let _lh_sumFloat_LH_C_0⁵² = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg1⁵ +. (3.0 *. d⁵)))
//│ 											in (fun _lh_dummy⁶⁶ -> (_lh_sumFloat_LH_C_0⁵² +. sumFloat_lh_₁_₆(_lh_sumFloat_LH_C_1⁵⁰)))
//│ 										in let _lh_sumFloat_LH_C_0⁵³ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg1⁵ +. (2.0 *. d⁵)))
//│ 										in (fun _lh_dummy⁶⁷ -> (_lh_sumFloat_LH_C_0⁵³ +. sumFloat_lh_₁_₇(_lh_sumFloat_LH_C_1⁴⁹)))
//│ 									in let _lh_sumFloat_LH_C_0⁵⁴ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg1⁵ +. d⁵))
//│ 									in (fun _lh_dummy⁶⁸ -> (_lh_sumFloat_LH_C_0⁵⁴ +. sumFloat_lh_₁_₈(_lh_sumFloat_LH_C_1⁴⁸)))
//│ 								in let _lh_sumFloat_LH_C_0⁵⁵ = (_lh_integrate1D_arg3⁵(_lh_integrate1D_arg1⁵) *. 0.5)
//│ 								in (fun _lh_dummy⁶⁹ -> (_lh_sumFloat_LH_C_0⁵⁵ +. sumFloat_lh_₁_₉(_lh_sumFloat_LH_C_1⁴⁷)))))
//│ 							where
//│ 							def sumFloat_lh_₁_₀(_lh_sumFloat_arg1⁵⁶) = 
//│ 								_lh_sumFloat_arg1⁵⁶(99)
//│ 							def sumFloat_lh_₁_₁(_lh_sumFloat_arg1⁸³) = 
//│ 								_lh_sumFloat_arg1⁸³(99)
//│ 							def sumFloat_lh_₁_₂(_lh_sumFloat_arg1⁷⁵) = 
//│ 								_lh_sumFloat_arg1⁷⁵(99)
//│ 							def sumFloat_lh_₁_₃(_lh_sumFloat_arg1⁴⁴) = 
//│ 								_lh_sumFloat_arg1⁴⁴(99)
//│ 							def sumFloat_lh_₁_₄(_lh_sumFloat_arg1⁷¹) = 
//│ 								_lh_sumFloat_arg1⁷¹(99)
//│ 							def sumFloat_lh_₁_₅(_lh_sumFloat_arg1⁵²) = 
//│ 								_lh_sumFloat_arg1⁵²(99)
//│ 							def sumFloat_lh_₁_₆(_lh_sumFloat_arg1⁵⁸) = 
//│ 								_lh_sumFloat_arg1⁵⁸(99)
//│ 							def sumFloat_lh_₁_₇(_lh_sumFloat_arg1⁷⁰) = 
//│ 								_lh_sumFloat_arg1⁷⁰(99)
//│ 							def sumFloat_lh_₁_₈(_lh_sumFloat_arg1⁵⁰) = 
//│ 								_lh_sumFloat_arg1⁵⁰(99)
//│ 							def sumFloat_lh_₁_₉(_lh_sumFloat_arg1⁴³) = 
//│ 								_lh_sumFloat_arg1⁴³(99)
//│ 						def integrate1D_lh_₁_₁(_lh_integrate1D_arg1⁶, _lh_integrate1D_arg2⁶, _lh_integrate1D_arg3⁶) = 
//│ 							let d⁶ = ((_lh_integrate1D_arg2⁶ -. _lh_integrate1D_arg1⁶) /. 8.0)
//│ 							in (d⁶ *. sumFloat_lh_₁_₁₀(
//│ 								let _lh_sumFloat_LH_C_1⁵⁶ = 	
//│ 									let _lh_sumFloat_LH_C_1⁵⁷ = 	
//│ 										let _lh_sumFloat_LH_C_1⁵⁸ = 	
//│ 											let _lh_sumFloat_LH_C_1⁵⁹ = 	
//│ 												let _lh_sumFloat_LH_C_1⁶⁰ = 	
//│ 													let _lh_sumFloat_LH_C_1⁶¹ = 	
//│ 														let _lh_sumFloat_LH_C_1⁶² = 	
//│ 															let _lh_sumFloat_LH_C_1⁶³ = 	
//│ 																let _lh_sumFloat_LH_C_1⁶⁴ = (fun _lh_dummy⁷⁰ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0⁵⁶ = (_lh_integrate1D_arg3⁶(_lh_integrate1D_arg2⁶) *. 0.5)
//│ 																in (fun _lh_dummy⁷¹ -> (_lh_sumFloat_LH_C_0⁵⁶ +. sumFloat_lh_₁_₁₁(_lh_sumFloat_LH_C_1⁶⁴)))
//│ 															in let _lh_sumFloat_LH_C_0⁵⁷ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg2⁶ -. d⁶))
//│ 															in (fun _lh_dummy⁷² -> (_lh_sumFloat_LH_C_0⁵⁷ +. sumFloat_lh_₁_₁₂(_lh_sumFloat_LH_C_1⁶³)))
//│ 														in let _lh_sumFloat_LH_C_0⁵⁸ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg2⁶ -. (2.0 *. d⁶)))
//│ 														in (fun _lh_dummy⁷³ -> (_lh_sumFloat_LH_C_0⁵⁸ +. sumFloat_lh_₁_₁₃(_lh_sumFloat_LH_C_1⁶²)))
//│ 													in let _lh_sumFloat_LH_C_0⁵⁹ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg2⁶ -. (3.0 *. d⁶)))
//│ 													in (fun _lh_dummy⁷⁴ -> (_lh_sumFloat_LH_C_0⁵⁹ +. sumFloat_lh_₁_₁₄(_lh_sumFloat_LH_C_1⁶¹)))
//│ 												in let _lh_sumFloat_LH_C_0⁶⁰ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg1⁶ +. (4.0 *. d⁶)))
//│ 												in (fun _lh_dummy⁷⁵ -> (_lh_sumFloat_LH_C_0⁶⁰ +. sumFloat_lh_₁_₁₅(_lh_sumFloat_LH_C_1⁶⁰)))
//│ 											in let _lh_sumFloat_LH_C_0⁶¹ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg1⁶ +. (3.0 *. d⁶)))
//│ 											in (fun _lh_dummy⁷⁶ -> (_lh_sumFloat_LH_C_0⁶¹ +. sumFloat_lh_₁_₁₆(_lh_sumFloat_LH_C_1⁵⁹)))
//│ 										in let _lh_sumFloat_LH_C_0⁶² = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg1⁶ +. (2.0 *. d⁶)))
//│ 										in (fun _lh_dummy⁷⁷ -> (_lh_sumFloat_LH_C_0⁶² +. sumFloat_lh_₁_₁₇(_lh_sumFloat_LH_C_1⁵⁸)))
//│ 									in let _lh_sumFloat_LH_C_0⁶³ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg1⁶ +. d⁶))
//│ 									in (fun _lh_dummy⁷⁸ -> (_lh_sumFloat_LH_C_0⁶³ +. sumFloat_lh_₁_₁₈(_lh_sumFloat_LH_C_1⁵⁷)))
//│ 								in let _lh_sumFloat_LH_C_0⁶⁴ = (_lh_integrate1D_arg3⁶(_lh_integrate1D_arg1⁶) *. 0.5)
//│ 								in (fun _lh_dummy⁷⁹ -> (_lh_sumFloat_LH_C_0⁶⁴ +. sumFloat_lh_₁_₁₉(_lh_sumFloat_LH_C_1⁵⁶)))))
//│ 							where
//│ 							def sumFloat_lh_₁_₁₀(_lh_sumFloat_arg1⁷³) = 
//│ 								_lh_sumFloat_arg1⁷³(99)
//│ 							def sumFloat_lh_₁_₁₁(_lh_sumFloat_arg1⁶⁸) = 
//│ 								_lh_sumFloat_arg1⁶⁸(99)
//│ 							def sumFloat_lh_₁_₁₂(_lh_sumFloat_arg1⁴⁵) = 
//│ 								_lh_sumFloat_arg1⁴⁵(99)
//│ 							def sumFloat_lh_₁_₁₃(_lh_sumFloat_arg1⁷²) = 
//│ 								_lh_sumFloat_arg1⁷²(99)
//│ 							def sumFloat_lh_₁_₁₄(_lh_sumFloat_arg1⁶²) = 
//│ 								_lh_sumFloat_arg1⁶²(99)
//│ 							def sumFloat_lh_₁_₁₅(_lh_sumFloat_arg1⁶⁷) = 
//│ 								_lh_sumFloat_arg1⁶⁷(99)
//│ 							def sumFloat_lh_₁_₁₆(_lh_sumFloat_arg1⁶⁶) = 
//│ 								_lh_sumFloat_arg1⁶⁶(99)
//│ 							def sumFloat_lh_₁_₁₇(_lh_sumFloat_arg1⁷⁹) = 
//│ 								_lh_sumFloat_arg1⁷⁹(99)
//│ 							def sumFloat_lh_₁_₁₈(_lh_sumFloat_arg1⁶⁵) = 
//│ 								_lh_sumFloat_arg1⁶⁵(99)
//│ 							def sumFloat_lh_₁_₁₉(_lh_sumFloat_arg1⁵¹) = 
//│ 								_lh_sumFloat_arg1⁵¹(99)
//│ 				def zipWith_lz_lz_lh_₄_₁(f⁴⁶, xs¹⁴, ys¹⁶) = 
//│ 					lazy⁰(force⁰(xs¹⁴, f⁴⁶, ys¹⁶))
//│ 			def zarks_lh_₂_₀(_lh_zarks_arg1⁵) = 
//│ 				zipWith_lz_lz_lh_₅_₁(zark_lh_₂_₀, ints_lh_₃_₀(0), map_lz_lh_₃_₀((fun n¹⁸ -> (2.0 *. n¹⁸)), ints_lh_₄_₀(0)))
//│ 				where
//│ 				def ints_lh_₃_₀(_lh_ints_arg1¹⁵) = 
//│ 					enumFromFloat_lh_₂_₃(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₃(_lh_enumFromFloat_arg1¹⁰) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1¹⁰ enumFromFloat_lh_₂_₃((_lh_enumFromFloat_arg1¹⁰ +. 1.0))])
//│ 				def ints_lh_₄_₀(_lh_ints_arg1¹²) = 
//│ 					enumFromFloat_lh_₂_₄(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂_₄(_lh_enumFromFloat_arg1¹¹) = 
//│ 						lazy⁰(
//│ 							let t²⁴ = enumFromFloat_lh_₂_₄((_lh_enumFromFloat_arg1¹¹ +. 1.0))
//│ 							in let h²⁴ = _lh_enumFromFloat_arg1¹¹
//│ 							in (fun f⁵² -> 
//│ 								let ty¹¹ = map_lz_lh_₃_₀(f⁵², t²⁴)
//│ 								in let hy¹¹ = f⁵²(h²⁴)
//│ 								in (fun f⁵³ -> (fun hx²⁰ -> (fun tx²⁰ -> [LH_C f⁵³(hx²⁰, hy¹¹) zipWith_lz_lz_lh_₅_₀(f⁵³, tx²⁰, ty¹¹)])))))
//│ 				def map_lz_lh_₃_₀(f⁵⁶, ls³⁰) = 
//│ 					lazy⁰(force⁰(ls³⁰, f⁵⁶))
//│ 					where
//│ 					def zipWith_lz_lz_lh_₅_₀(f⁴⁴, xs¹², ys¹⁴) = 
//│ 						lazy⁰(case force⁰(xs¹²) of {
//│ 							LH_C hx¹⁵ tx¹⁵ => force⁰(ys¹⁴, f⁴⁴, hx¹⁵, tx¹⁵)
//│ 							| LH_N  => [LH_N]})
//│ 				def zark_lh_₂_₀(_lh_zark_arg1⁴, _lh_zark_arg2⁴) = 
//│ 					integrate2D_lh_₂_₀(0.0, _lh_zark_arg1⁴, 0.0, _lh_zark_arg2⁴, (fun x⁸ -> (fun y⁸ -> (x⁸ *. y⁸))))
//│ 					where
//│ 					def integrate2D_lh_₂_₀(_lh_integrate2D_arg1⁴, _lh_integrate2D_arg2⁴, _lh_integrate2D_arg3⁴, _lh_integrate2D_arg4⁴, _lh_integrate2D_arg5⁴) = 
//│ 						integrate1D_lh_₁_₂(_lh_integrate2D_arg3⁴, _lh_integrate2D_arg4⁴, (fun y¹⁰ -> integrate1D_lh_₁_₃(_lh_integrate2D_arg1⁴, _lh_integrate2D_arg2⁴, (fun x¹⁰ -> _lh_integrate2D_arg5⁴(x¹⁰, y¹⁰)))))
//│ 						where
//│ 						def integrate1D_lh_₁_₂(_lh_integrate1D_arg1⁷, _lh_integrate1D_arg2⁷, _lh_integrate1D_arg3⁷) = 
//│ 							let d⁷ = ((_lh_integrate1D_arg2⁷ -. _lh_integrate1D_arg1⁷) /. 8.0)
//│ 							in (d⁷ *. sumFloat_lh_₁_₂₀(
//│ 								let _lh_sumFloat_LH_C_1⁶⁵ = 	
//│ 									let _lh_sumFloat_LH_C_1⁶⁶ = 	
//│ 										let _lh_sumFloat_LH_C_1⁶⁷ = 	
//│ 											let _lh_sumFloat_LH_C_1⁶⁸ = 	
//│ 												let _lh_sumFloat_LH_C_1⁶⁹ = 	
//│ 													let _lh_sumFloat_LH_C_1⁷⁰ = 	
//│ 														let _lh_sumFloat_LH_C_1⁷¹ = 	
//│ 															let _lh_sumFloat_LH_C_1⁷² = 	
//│ 																let _lh_sumFloat_LH_C_1⁷³ = (fun _lh_dummy⁸⁰ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0⁶⁵ = (_lh_integrate1D_arg3⁷(_lh_integrate1D_arg2⁷) *. 0.5)
//│ 																in (fun _lh_dummy⁸¹ -> (_lh_sumFloat_LH_C_0⁶⁵ +. sumFloat_lh_₁_₂₁(_lh_sumFloat_LH_C_1⁷³)))
//│ 															in let _lh_sumFloat_LH_C_0⁶⁶ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg2⁷ -. d⁷))
//│ 															in (fun _lh_dummy⁸² -> (_lh_sumFloat_LH_C_0⁶⁶ +. sumFloat_lh_₁_₂₂(_lh_sumFloat_LH_C_1⁷²)))
//│ 														in let _lh_sumFloat_LH_C_0⁶⁷ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg2⁷ -. (2.0 *. d⁷)))
//│ 														in (fun _lh_dummy⁸³ -> (_lh_sumFloat_LH_C_0⁶⁷ +. sumFloat_lh_₁_₂₃(_lh_sumFloat_LH_C_1⁷¹)))
//│ 													in let _lh_sumFloat_LH_C_0⁶⁸ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg2⁷ -. (3.0 *. d⁷)))
//│ 													in (fun _lh_dummy⁸⁴ -> (_lh_sumFloat_LH_C_0⁶⁸ +. sumFloat_lh_₁_₂₄(_lh_sumFloat_LH_C_1⁷⁰)))
//│ 												in let _lh_sumFloat_LH_C_0⁶⁹ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg1⁷ +. (4.0 *. d⁷)))
//│ 												in (fun _lh_dummy⁸⁵ -> (_lh_sumFloat_LH_C_0⁶⁹ +. sumFloat_lh_₁_₂₅(_lh_sumFloat_LH_C_1⁶⁹)))
//│ 											in let _lh_sumFloat_LH_C_0⁷⁰ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg1⁷ +. (3.0 *. d⁷)))
//│ 											in (fun _lh_dummy⁸⁶ -> (_lh_sumFloat_LH_C_0⁷⁰ +. sumFloat_lh_₁_₂₆(_lh_sumFloat_LH_C_1⁶⁸)))
//│ 										in let _lh_sumFloat_LH_C_0⁷¹ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg1⁷ +. (2.0 *. d⁷)))
//│ 										in (fun _lh_dummy⁸⁷ -> (_lh_sumFloat_LH_C_0⁷¹ +. sumFloat_lh_₁_₂₇(_lh_sumFloat_LH_C_1⁶⁷)))
//│ 									in let _lh_sumFloat_LH_C_0⁷² = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg1⁷ +. d⁷))
//│ 									in (fun _lh_dummy⁸⁸ -> (_lh_sumFloat_LH_C_0⁷² +. sumFloat_lh_₁_₂₈(_lh_sumFloat_LH_C_1⁶⁶)))
//│ 								in let _lh_sumFloat_LH_C_0⁷³ = (_lh_integrate1D_arg3⁷(_lh_integrate1D_arg1⁷) *. 0.5)
//│ 								in (fun _lh_dummy⁸⁹ -> (_lh_sumFloat_LH_C_0⁷³ +. sumFloat_lh_₁_₂₉(_lh_sumFloat_LH_C_1⁶⁵)))))
//│ 							where
//│ 							def sumFloat_lh_₁_₂₀(_lh_sumFloat_arg1⁷⁸) = 
//│ 								_lh_sumFloat_arg1⁷⁸(99)
//│ 							def sumFloat_lh_₁_₂₁(_lh_sumFloat_arg1⁶¹) = 
//│ 								_lh_sumFloat_arg1⁶¹(99)
//│ 							def sumFloat_lh_₁_₂₂(_lh_sumFloat_arg1⁸⁰) = 
//│ 								_lh_sumFloat_arg1⁸⁰(99)
//│ 							def sumFloat_lh_₁_₂₃(_lh_sumFloat_arg1⁸¹) = 
//│ 								_lh_sumFloat_arg1⁸¹(99)
//│ 							def sumFloat_lh_₁_₂₄(_lh_sumFloat_arg1⁶³) = 
//│ 								_lh_sumFloat_arg1⁶³(99)
//│ 							def sumFloat_lh_₁_₂₅(_lh_sumFloat_arg1⁷⁶) = 
//│ 								_lh_sumFloat_arg1⁷⁶(99)
//│ 							def sumFloat_lh_₁_₂₆(_lh_sumFloat_arg1⁴⁹) = 
//│ 								_lh_sumFloat_arg1⁴⁹(99)
//│ 							def sumFloat_lh_₁_₂₇(_lh_sumFloat_arg1⁵⁷) = 
//│ 								_lh_sumFloat_arg1⁵⁷(99)
//│ 							def sumFloat_lh_₁_₂₈(_lh_sumFloat_arg1⁶⁴) = 
//│ 								_lh_sumFloat_arg1⁶⁴(99)
//│ 							def sumFloat_lh_₁_₂₉(_lh_sumFloat_arg1⁸²) = 
//│ 								_lh_sumFloat_arg1⁸²(99)
//│ 						def integrate1D_lh_₁_₃(_lh_integrate1D_arg1⁸, _lh_integrate1D_arg2⁸, _lh_integrate1D_arg3⁸) = 
//│ 							let d⁸ = ((_lh_integrate1D_arg2⁸ -. _lh_integrate1D_arg1⁸) /. 8.0)
//│ 							in (d⁸ *. sumFloat_lh_₁_₃₀(
//│ 								let _lh_sumFloat_LH_C_1⁷⁴ = 	
//│ 									let _lh_sumFloat_LH_C_1⁷⁵ = 	
//│ 										let _lh_sumFloat_LH_C_1⁷⁶ = 	
//│ 											let _lh_sumFloat_LH_C_1⁷⁷ = 	
//│ 												let _lh_sumFloat_LH_C_1⁷⁸ = 	
//│ 													let _lh_sumFloat_LH_C_1⁷⁹ = 	
//│ 														let _lh_sumFloat_LH_C_1⁸⁰ = 	
//│ 															let _lh_sumFloat_LH_C_1⁸¹ = 	
//│ 																let _lh_sumFloat_LH_C_1⁸² = (fun _lh_dummy⁹⁰ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0⁷⁴ = (_lh_integrate1D_arg3⁸(_lh_integrate1D_arg2⁸) *. 0.5)
//│ 																in (fun _lh_dummy⁹¹ -> (_lh_sumFloat_LH_C_0⁷⁴ +. sumFloat_lh_₁_₃₁(_lh_sumFloat_LH_C_1⁸²)))
//│ 															in let _lh_sumFloat_LH_C_0⁷⁵ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg2⁸ -. d⁸))
//│ 															in (fun _lh_dummy⁹² -> (_lh_sumFloat_LH_C_0⁷⁵ +. sumFloat_lh_₁_₃₂(_lh_sumFloat_LH_C_1⁸¹)))
//│ 														in let _lh_sumFloat_LH_C_0⁷⁶ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg2⁸ -. (2.0 *. d⁸)))
//│ 														in (fun _lh_dummy⁹³ -> (_lh_sumFloat_LH_C_0⁷⁶ +. sumFloat_lh_₁_₃₃(_lh_sumFloat_LH_C_1⁸⁰)))
//│ 													in let _lh_sumFloat_LH_C_0⁷⁷ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg2⁸ -. (3.0 *. d⁸)))
//│ 													in (fun _lh_dummy⁹⁴ -> (_lh_sumFloat_LH_C_0⁷⁷ +. sumFloat_lh_₁_₃₄(_lh_sumFloat_LH_C_1⁷⁹)))
//│ 												in let _lh_sumFloat_LH_C_0⁷⁸ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg1⁸ +. (4.0 *. d⁸)))
//│ 												in (fun _lh_dummy⁹⁵ -> (_lh_sumFloat_LH_C_0⁷⁸ +. sumFloat_lh_₁_₃₅(_lh_sumFloat_LH_C_1⁷⁸)))
//│ 											in let _lh_sumFloat_LH_C_0⁷⁹ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg1⁸ +. (3.0 *. d⁸)))
//│ 											in (fun _lh_dummy⁹⁶ -> (_lh_sumFloat_LH_C_0⁷⁹ +. sumFloat_lh_₁_₃₆(_lh_sumFloat_LH_C_1⁷⁷)))
//│ 										in let _lh_sumFloat_LH_C_0⁸⁰ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg1⁸ +. (2.0 *. d⁸)))
//│ 										in (fun _lh_dummy⁹⁷ -> (_lh_sumFloat_LH_C_0⁸⁰ +. sumFloat_lh_₁_₃₇(_lh_sumFloat_LH_C_1⁷⁶)))
//│ 									in let _lh_sumFloat_LH_C_0⁸¹ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg1⁸ +. d⁸))
//│ 									in (fun _lh_dummy⁹⁸ -> (_lh_sumFloat_LH_C_0⁸¹ +. sumFloat_lh_₁_₃₈(_lh_sumFloat_LH_C_1⁷⁵)))
//│ 								in let _lh_sumFloat_LH_C_0⁸² = (_lh_integrate1D_arg3⁸(_lh_integrate1D_arg1⁸) *. 0.5)
//│ 								in (fun _lh_dummy⁹⁹ -> (_lh_sumFloat_LH_C_0⁸² +. sumFloat_lh_₁_₃₉(_lh_sumFloat_LH_C_1⁷⁴)))))
//│ 							where
//│ 							def sumFloat_lh_₁_₃₀(_lh_sumFloat_arg1⁴⁸) = 
//│ 								_lh_sumFloat_arg1⁴⁸(99)
//│ 							def sumFloat_lh_₁_₃₁(_lh_sumFloat_arg1⁶⁰) = 
//│ 								_lh_sumFloat_arg1⁶⁰(99)
//│ 							def sumFloat_lh_₁_₃₂(_lh_sumFloat_arg1⁵⁴) = 
//│ 								_lh_sumFloat_arg1⁵⁴(99)
//│ 							def sumFloat_lh_₁_₃₃(_lh_sumFloat_arg1⁷⁴) = 
//│ 								_lh_sumFloat_arg1⁷⁴(99)
//│ 							def sumFloat_lh_₁_₃₄(_lh_sumFloat_arg1⁴⁷) = 
//│ 								_lh_sumFloat_arg1⁴⁷(99)
//│ 							def sumFloat_lh_₁_₃₅(_lh_sumFloat_arg1⁸⁴) = 
//│ 								_lh_sumFloat_arg1⁸⁴(99)
//│ 							def sumFloat_lh_₁_₃₆(_lh_sumFloat_arg1⁵⁹) = 
//│ 								_lh_sumFloat_arg1⁵⁹(99)
//│ 							def sumFloat_lh_₁_₃₇(_lh_sumFloat_arg1⁵³) = 
//│ 								_lh_sumFloat_arg1⁵³(99)
//│ 							def sumFloat_lh_₁_₃₈(_lh_sumFloat_arg1⁶⁹) = 
//│ 								_lh_sumFloat_arg1⁶⁹(99)
//│ 							def sumFloat_lh_₁_₃₉(_lh_sumFloat_arg1⁵⁵) = 
//│ 								_lh_sumFloat_arg1⁵⁵(99)
//│ 				def zipWith_lz_lz_lh_₅_₁(f⁵⁵, xs¹⁷, ys¹⁹) = 
//│ 					lazy⁰(case force⁰(xs¹⁷) of {
//│ 						LH_C hx¹⁰ tx¹⁰ => force⁰(ys¹⁹, f⁵⁵, hx¹⁰, tx¹⁰)
//│ 						| LH_N  => [LH_N]})
//│ 			def zipWith_lz_lz_lh_₂_₀(f⁶⁰, xs¹⁸, ys²¹) = 
//│ 				lazy⁰(case force⁰(xs¹⁸) of {
//│ 					LH_C hx¹⁷ tx¹⁷ => case force⁰(ys²¹) of {
//│ 						LH_C hy⁹ ty⁹ => [LH_C f⁶⁰(hx¹⁷, hy⁹) zipWith_lz_lz_lh_₂_₀(f⁶⁰, tx¹⁷, ty⁹)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def sumFloat_lh_₁_₄₀(_lh_sumFloat_arg1⁷⁷) = 
//│ 			_lh_sumFloat_arg1⁷⁷(99)
//│ 		def take_lz_lh_₁_₀(n¹⁹, ls³³) = 
//│ 			if (n¹⁹ > 0) then force⁰(ls³³, n¹⁹) else (fun _lh_dummy¹⁰³ -> 0.0)
//│ 		def zipWith_lz_lz_lh_₁_₀(f⁴⁸, xs¹⁶, ys¹⁸) = 
//│ 			lazy⁰(case force⁰(xs¹⁶) of {
//│ 				LH_C hx⁹ tx⁹ => case force⁰(ys¹⁸) of {
//│ 					LH_C hy⁵ ty⁵ => 
//│ 						let t²² = zipWith_lz_lz_lh_₁_₀(f⁴⁸, tx⁹, ty⁵)
//│ 						in let h²² = f⁴⁸(hx⁹, hy⁵)
//│ 						in (fun f⁴⁹ -> 
//│ 							let t²³ = map_lz_lh_₁_₁(f⁴⁹, t²²)
//│ 							in let h²³ = f⁴⁹(h²²)
//│ 							in (fun n¹⁵ -> 
//│ 								let _lh_sumFloat_LH_C_1⁸³ = take_lz_lh_₁_₁((n¹⁵ - 1), t²³)
//│ 								in let _lh_sumFloat_LH_C_0⁸³ = h²³
//│ 								in (fun _lh_dummy¹⁰⁰ -> (_lh_sumFloat_LH_C_0⁸³ +. sumFloat_lh_₁_₄₁(_lh_sumFloat_LH_C_1⁸³)))))
//│ 					| LH_N  => (fun f⁵⁰ -> (fun n¹⁶ -> (fun _lh_dummy¹⁰¹ -> 0.0)))}
//│ 				| LH_N  => (fun f⁵¹ -> (fun n¹⁷ -> (fun _lh_dummy¹⁰² -> 0.0)))})
//│ 			where
//│ 			def map_lz_lh_₁_₁(f⁵⁸, ls³¹) = 
//│ 				lazy⁰(force⁰(ls³¹, f⁵⁸))
//│ 			def sumFloat_lh_₁_₄₁(_lh_sumFloat_arg1⁴⁶) = 
//│ 				_lh_sumFloat_arg1⁴⁶(99)
//│ 			def take_lz_lh_₁_₁(n¹³, ls²²) = 
//│ 				if (n¹³ > 0) then force⁰(ls²², n¹³) else (fun _lh_dummy⁵⁹ -> 0.0)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
