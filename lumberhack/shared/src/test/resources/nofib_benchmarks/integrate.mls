:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
sumFloat [] = 0.0
sumFloat (h:t) = h +. (sumFloat t)
enumFromFloat a = lazy (a:(enumFromFloat (a +. 1.0)))
integrate1D l u f =
  let d = (u -. l) /. 8.0 in
     d *. (sumFloat
      [ (f l) *. 0.5,
        f (l +. d),
        f (l +. (2.0 *. d)),
        f (l +. (3.0 *. d)),
        f (l +. (4.0 *. d)),
        f (u -. (3.0 *. d)),
        f (u -. (2.0 *. d)),
        f (u -. d),
        (f u) *. 0.5])
integrate2D l1 u1 l2 u2 f = integrate1D l2 u2
            (\y -> integrate1D l1 u1
              (\x -> f x y))
zark u v = integrate2D 0.0 u 0.0 v (\x -> (\y -> x *. y))
ints _ = enumFromFloat 1.0
zarks _ = zipWith_lz_lz zark (ints 0) (map_lz (\n -> 2.0 *. n) (ints 0))
rtotals _ = lazy ((head_lz (zarks 0)) : (zipWith_lz_lz (\a b -> a +. b) (tail_lz (zarks 0)) (rtotals 0)))
rtotal n = atIndex_lz n (rtotals 0)
is _ = map_lz (\a -> a *. a *. a *. a) (ints 0)
itotals _ = lazy ((head_lz (is 0)) : (zipWith_lz_lz (\a b -> a +. b) (tail_lz (is 0)) (itotals 0)))
itotal n = atIndex_lz n (itotals 0)
etotal n = sumFloat (take_lz n (map_lz (\a -> a *. a) (zipWith_lz_lz (\a b -> a -. b) (rtotals 0) (itotals 0))))
testIntegrate_nofib n = etotal n
testIntegrate_nofib $ primId 100
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testIntegrate_nofib_lh^404(primId⁰(100))
//│ def enumFromFloat_lh(_lh_enumFromFloat_arg1⁰) = lazy⁰([LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh^382((_lh_enumFromFloat_arg1⁰ +. 1.0))])
//│ def etotal_lh(_lh_etotal_arg1⁰) = sumFloat_lh^182(take_lz_lh^183(_lh_etotal_arg1⁰, map_lz_lh^186((fun a¹ -> (a¹ *. a¹)), zipWith_lz_lz_lh^194((fun a² -> (fun b¹ -> (a² -. b¹))), rtotals_lh^203(0), itotals_lh^207(0)))))
//│ def head_lz_lh(ls¹) = case force⁰(ls¹) of {
//│ 	LH_C h¹ t¹ => h¹
//│ 	| LH_N  => error⁰}
//│ def integrate1D_lh(_lh_integrate1D_arg1⁰, _lh_integrate1D_arg2⁰, _lh_integrate1D_arg3⁰) = 
//│ 	let d⁰ = ((_lh_integrate1D_arg2⁰ -. _lh_integrate1D_arg1⁰) /. 8.0)
//│ 	in (d⁰ *. sumFloat_lh^280([LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]))
//│ def integrate2D_lh(_lh_integrate2D_arg1⁰, _lh_integrate2D_arg2⁰, _lh_integrate2D_arg3⁰, _lh_integrate2D_arg4⁰, _lh_integrate2D_arg5⁰) = integrate1D_lh^114(_lh_integrate2D_arg3⁰, _lh_integrate2D_arg4⁰, (fun y⁰ -> integrate1D_lh^119(_lh_integrate2D_arg1⁰, _lh_integrate2D_arg2⁰, (fun x⁰ -> _lh_integrate2D_arg5⁰(x⁰, y⁰)))))
//│ def ints_lh(_lh_ints_arg1⁰) = enumFromFloat_lh^157(1.0)
//│ def is_lh(_lh_is_arg1⁰) = map_lz_lh^215((fun a³ -> (((a³ *. a³) *. a³) *. a³)), ints_lh^231(0))
//│ def itotals_lh(_lh_itotals_arg1⁰) = lazy⁰([LH_C head_lz_lh^241(is_lh^242(0)) zipWith_lz_lz_lh^246((fun a⁴ -> (fun b² -> (a⁴ +. b²))), tail_lz_lh^255(is_lh^256(0)), itotals_lh^261(0))])
//│ def map_lz_lh(f⁰, ls⁰) = lazy⁰(case force⁰(ls⁰) of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh^8(f⁰, t⁰)]
//│ 	| LH_N  => [LH_N]})
//│ def rtotals_lh(_lh_rtotals_arg1⁰) = lazy⁰([LH_C head_lz_lh^87(zarks_lh^88(0)) zipWith_lz_lz_lh^92((fun a⁰ -> (fun b⁰ -> (a⁰ +. b⁰))), tail_lz_lh^101(zarks_lh^102(0)), rtotals_lh^107(0))])
//│ def sumFloat_lh(_lh_sumFloat_arg1⁰) = case _lh_sumFloat_arg1⁰ of {
//│ 	LH_N  => 0.0
//│ 	| LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh^397(_lh_sumFloat_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def tail_lz_lh(ls²) = case force⁰(ls²) of {
//│ 	LH_C h² t² => t²
//│ 	| LH_N  => error⁰}
//│ def take_lz_lh(n⁰, ls³) = if (n⁰ > 0) then case force⁰(ls³) of {
//│ 	LH_C h³ t³ => [LH_C h³ take_lz_lh^70((n⁰ - 1), t³)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testIntegrate_nofib_lh(_lh_testIntegrate_nofib_arg1⁰) = etotal_lh^236(_lh_testIntegrate_nofib_arg1⁰)
//│ def zark_lh(_lh_zark_arg1⁰, _lh_zark_arg2⁰) = integrate2D_lh^138(0.0, _lh_zark_arg1⁰, 0.0, _lh_zark_arg2⁰, (fun x¹ -> (fun y¹ -> (x¹ *. y¹))))
//│ def zarks_lh(_lh_zarks_arg1⁰) = zipWith_lz_lz_lh^161(zark_lh^162, ints_lh^164(0), map_lz_lh^168((fun n¹ -> (2.0 *. n¹)), ints_lh^176(0)))
//│ def zipWith_lz_lz_lh(f¹, xs⁰, ys⁰) = lazy⁰(case force⁰(xs⁰) of {
//│ 	LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh^31(f¹, tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec zipWith_lz_lz_lh f_1 xs_0 ys_0 =
//│ 		  (lazy (match (Lazy.force xs_0) with
//│ 		    | `LH_C(hx_0, tx_0) -> 
//│ 		      (match (Lazy.force ys_0) with
//│ 		        | `LH_C(hy_0, ty_0) -> 
//│ 		          (`LH_C(((f_1 hx_0) hy_0), (((zipWith_lz_lz_lh f_1) tx_0) ty_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec map_lz_lh f_0 ls_0 =
//│ 		  (lazy (match (Lazy.force ls_0) with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C((f_0 h_0), ((map_lz_lh f_0) t_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec sumFloat_lh _lh_sumFloat_arg1_0 =
//│ 		  (match _lh_sumFloat_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      0.0
//│ 		    | `LH_C(_lh_sumFloat_LH_C_0_0, _lh_sumFloat_LH_C_1_0) -> 
//│ 		      (_lh_sumFloat_LH_C_0_0 +. (sumFloat_lh _lh_sumFloat_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec head_lz_lh ls_1 =
//│ 		  (match (Lazy.force ls_1) with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      h_1
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec enumFromFloat_lh _lh_enumFromFloat_arg1_0 =
//│ 		  (lazy (`LH_C(_lh_enumFromFloat_arg1_0, (enumFromFloat_lh (_lh_enumFromFloat_arg1_0 +. 1.0)))));;
//│ 		let rec tail_lz_lh ls_2 =
//│ 		  (match (Lazy.force ls_2) with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      t_2
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec take_lz_lh n_0 ls_3 =
//│ 		  (if (n_0 > 0) then
//│ 		    (match (Lazy.force ls_3) with
//│ 		      | `LH_C(h_3, t_3) -> 
//│ 		        (`LH_C(h_3, ((take_lz_lh (n_0 - 1)) t_3)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec ints_lh _lh_ints_arg1_0 =
//│ 		  (enumFromFloat_lh 1.0);;
//│ 		let rec integrate1D_lh _lh_integrate1D_arg1_0 _lh_integrate1D_arg2_0 _lh_integrate1D_arg3_0 =
//│ 		  (let rec d_0 = ((_lh_integrate1D_arg2_0 -. _lh_integrate1D_arg1_0) /. 8.0) in
//│ 		    (d_0 *. (sumFloat_lh (`LH_C(((_lh_integrate1D_arg3_0 _lh_integrate1D_arg1_0) *. 0.5), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg1_0 +. d_0)), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg1_0 +. (2.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg1_0 +. (3.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg1_0 +. (4.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg2_0 -. (3.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg2_0 -. (2.0 *. d_0))), (`LH_C((_lh_integrate1D_arg3_0 (_lh_integrate1D_arg2_0 -. d_0)), (`LH_C(((_lh_integrate1D_arg3_0 _lh_integrate1D_arg2_0) *. 0.5), (`LH_N))))))))))))))))))))));;
//│ 		let rec is_lh _lh_is_arg1_0 =
//│ 		  ((map_lz_lh (fun a_3 -> 
//│ 		    (((a_3 *. a_3) *. a_3) *. a_3))) (ints_lh 0));;
//│ 		let rec integrate2D_lh _lh_integrate2D_arg1_0 _lh_integrate2D_arg2_0 _lh_integrate2D_arg3_0 _lh_integrate2D_arg4_0 _lh_integrate2D_arg5_0 =
//│ 		  (((integrate1D_lh _lh_integrate2D_arg3_0) _lh_integrate2D_arg4_0) (fun y_0 -> 
//│ 		    (((integrate1D_lh _lh_integrate2D_arg1_0) _lh_integrate2D_arg2_0) (fun x_0 -> 
//│ 		      ((_lh_integrate2D_arg5_0 x_0) y_0)))));;
//│ 		let rec itotals_lh _lh_itotals_arg1_0 =
//│ 		  (lazy (`LH_C((head_lz_lh (is_lh 0)), (((zipWith_lz_lz_lh (fun a_4 b_2 -> 
//│ 		    (a_4 +. b_2))) (tail_lz_lh (is_lh 0))) (itotals_lh 0)))));;
//│ 		let rec zark_lh _lh_zark_arg1_0 _lh_zark_arg2_0 =
//│ 		  (((((integrate2D_lh 0.0) _lh_zark_arg1_0) 0.0) _lh_zark_arg2_0) (fun x_1 y_1 -> 
//│ 		    (x_1 *. y_1)));;
//│ 		let rec zarks_lh _lh_zarks_arg1_0 =
//│ 		  (((zipWith_lz_lz_lh zark_lh) (ints_lh 0)) ((map_lz_lh (fun n_1 -> 
//│ 		    (2.0 *. n_1))) (ints_lh 0)));;
//│ 		let rec rtotals_lh _lh_rtotals_arg1_0 =
//│ 		  (lazy (`LH_C((head_lz_lh (zarks_lh 0)), (((zipWith_lz_lz_lh (fun a_0 b_0 -> 
//│ 		    (a_0 +. b_0))) (tail_lz_lh (zarks_lh 0))) (rtotals_lh 0)))));;
//│ 		let rec etotal_lh _lh_etotal_arg1_0 =
//│ 		  (sumFloat_lh ((take_lz_lh _lh_etotal_arg1_0) ((map_lz_lh (fun a_1 -> 
//│ 		    (a_1 *. a_1))) (((zipWith_lz_lz_lh (fun a_2 b_1 -> 
//│ 		    (a_2 -. b_1))) (rtotals_lh 0)) (itotals_lh 0)))));;
//│ 		let rec testIntegrate_nofib_lh _lh_testIntegrate_nofib_arg1_0 =
//│ 		  (etotal_lh _lh_testIntegrate_nofib_arg1_0);;
//│ 		(testIntegrate_nofib_lh 100)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52
//│ 	case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59
//│ 	case force⁰(ls³) of {LH_C h³ t³ => [LH_C h³ take_lz_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 81
//│ [LH_N]: 14 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52
//│ 	case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59
//│ 	case force⁰(ls³) of {LH_C h³ t³ => [LH_C h³ take_lz_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 81
//│ [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)]: 38 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁰) of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 15
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52
//│ 	case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59
//│ [LH_N]: 39 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁰) of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 15
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52
//│ 	case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59
//│ [LH_N]: 41 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁰) of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 15
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ 	case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52
//│ 	case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59
//│ [LH_C h³ take_lz_lh((n⁰ - 1), t³)]: 79 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_N]: 80 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_N]: 82 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C head_lz_lh(zarks_lh(0)) zipWith_lz_lz_lh((fun a⁰ -> (fun b⁰ -> (a⁰ +. b⁰))), tail_lz_lh(zarks_lh(0)), rtotals_lh(0))]: 111 --->
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ [LH_C head_lz_lh(is_lh(0)) zipWith_lz_lz_lh((fun a⁴ -> (fun b² -> (a⁴ +. b²))), tail_lz_lh(is_lh(0)), itotals_lh(0))]: 265 --->
//│ 	case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40
//│ [LH_N]: 364 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]: 365 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]: 366 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]: 367 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]: 368 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]: 369 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]: 370 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]: 371 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]: 372 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]: 373 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh((_lh_enumFromFloat_arg1⁰ +. 1.0))]: 389 --->
//│ 	case force⁰(ls⁰) of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 15
//│ 	case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42
//│ ------------------
//│ case force⁰(ls⁰) of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 15 --->
//│ 	[LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)]: 38
//│ 	[LH_N]: 39
//│ 	[LH_N]: 41
//│ 	[LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh((_lh_enumFromFloat_arg1⁰ +. 1.0))]: 389
//│ case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]}: 40 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13
//│ 	[LH_N]: 14
//│ 	[LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)]: 38
//│ 	[LH_N]: 39
//│ 	[LH_N]: 41
//│ 	[LH_C head_lz_lh(zarks_lh(0)) zipWith_lz_lz_lh((fun a⁰ -> (fun b⁰ -> (a⁰ +. b⁰))), tail_lz_lh(zarks_lh(0)), rtotals_lh(0))]: 111
//│ 	[LH_C head_lz_lh(is_lh(0)) zipWith_lz_lz_lh((fun a⁴ -> (fun b² -> (a⁴ +. b²))), tail_lz_lh(is_lh(0)), itotals_lh(0))]: 265
//│ case force⁰(xs⁰) of {LH_C hx⁰ tx⁰ => case force⁰(ys⁰) of {LH_C hy⁰ ty⁰ => [LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 42 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13
//│ 	[LH_N]: 14
//│ 	[LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)]: 38
//│ 	[LH_N]: 39
//│ 	[LH_N]: 41
//│ 	[LH_C head_lz_lh(zarks_lh(0)) zipWith_lz_lz_lh((fun a⁰ -> (fun b⁰ -> (a⁰ +. b⁰))), tail_lz_lh(zarks_lh(0)), rtotals_lh(0))]: 111
//│ 	[LH_C _lh_enumFromFloat_arg1⁰ enumFromFloat_lh((_lh_enumFromFloat_arg1⁰ +. 1.0))]: 389
//│ case force⁰(ls¹) of {LH_C h¹ t¹ => h¹ | LH_N  => error⁰}: 52 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13
//│ 	[LH_N]: 14
//│ 	[LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)]: 38
//│ 	[LH_N]: 39
//│ 	[LH_N]: 41
//│ case force⁰(ls²) of {LH_C h² t² => t² | LH_N  => error⁰}: 59 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13
//│ 	[LH_N]: 14
//│ 	[LH_C f¹(hx⁰, hy⁰) zipWith_lz_lz_lh(f¹, tx⁰, ty⁰)]: 38
//│ 	[LH_N]: 39
//│ 	[LH_N]: 41
//│ case force⁰(ls³) of {LH_C h³ t³ => [LH_C h³ take_lz_lh((n⁰ - 1), t³)] | LH_N  => [LH_N]}: 81 --->
//│ 	[LH_C f⁰(h⁰) map_lz_lh(f⁰, t⁰)]: 13
//│ 	[LH_N]: 14
//│ case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402 --->
//│ 	[LH_C h³ take_lz_lh((n⁰ - 1), t³)]: 79
//│ 	[LH_N]: 80
//│ 	[LH_N]: 82
//│ 	[LH_N]: 364
//│ 	[LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]: 365
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]: 366
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]: 367
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]: 368
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]: 369
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]: 370
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]: 371
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]: 372
//│ 	[LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]: 373
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C h³ take_lz_lh((n⁰ - 1), t³)]: 79 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_N]: 80 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_N]: 82 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_N]: 364 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]: 365 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]: 366 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]: 367 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]: 368 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]: 369 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]: 370 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]: 371 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]: 372 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]: 373 --->
//│ 	case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402
//│ ------------------
//│ case _lh_sumFloat_arg1⁰ of {LH_N  => 0.0 | LH_C _lh_sumFloat_LH_C_0⁰ _lh_sumFloat_LH_C_1⁰ => (_lh_sumFloat_LH_C_0⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁰)) | _  => error⁰}: 402 --->
//│ 	[LH_C h³ take_lz_lh((n⁰ - 1), t³)]: 79
//│ 	[LH_N]: 80
//│ 	[LH_N]: 82
//│ 	[LH_N]: 364
//│ 	[LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]: 365
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]: 366
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]: 367
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]: 368
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]: 369
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]: 370
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]: 371
//│ 	[LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]: 372
//│ 	[LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg1⁰) *. 0.5) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. d⁰)) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg1⁰ +. (4.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (3.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. (2.0 *. d⁰))) [LH_C _lh_integrate1D_arg3⁰((_lh_integrate1D_arg2⁰ -. d⁰)) [LH_C (_lh_integrate1D_arg3⁰(_lh_integrate1D_arg2⁰) *. 0.5) [LH_N]]]]]]]]]]: 373
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testIntegrate_nofib_lh(primId⁰(100))
//│ def enumFromFloat_lh(_lh_enumFromFloat_arg1¹) = lazy⁰([LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh((_lh_enumFromFloat_arg1¹ +. 1.0))])
//│ def etotal_lh(_lh_etotal_arg1¹) = sumFloat_lh(take_lz_lh(_lh_etotal_arg1¹, map_lz_lh((fun a⁶ -> (a⁶ *. a⁶)), zipWith_lz_lz_lh((fun a⁷ -> (fun b³ -> (a⁷ -. b³))), rtotals_lh(0), itotals_lh(0)))))
//│ def head_lz_lh(ls⁶) = case force⁰(ls⁶) of {
//│ 	LH_C h¹ t¹ => h¹
//│ 	| LH_N  => error⁰}
//│ def integrate1D_lh(_lh_integrate1D_arg1¹, _lh_integrate1D_arg2¹, _lh_integrate1D_arg3¹) = 
//│ 	let d¹ = ((_lh_integrate1D_arg2¹ -. _lh_integrate1D_arg1¹) /. 8.0)
//│ 	in (d¹ *. sumFloat_lh(
//│ 		let _lh_sumFloat_LH_C_1¹ = 	
//│ 			let _lh_sumFloat_LH_C_1² = 	
//│ 				let _lh_sumFloat_LH_C_1³ = 	
//│ 					let _lh_sumFloat_LH_C_1⁴ = 	
//│ 						let _lh_sumFloat_LH_C_1⁵ = 	
//│ 							let _lh_sumFloat_LH_C_1⁶ = 	
//│ 								let _lh_sumFloat_LH_C_1⁷ = 	
//│ 									let _lh_sumFloat_LH_C_1⁸ = 	
//│ 										let _lh_sumFloat_LH_C_1⁹ = (fun _lh_dummy⁹ -> 0.0)
//│ 										in let _lh_sumFloat_LH_C_0⁹ = (_lh_integrate1D_arg3¹(_lh_integrate1D_arg2¹) *. 0.5)
//│ 										in (fun _lh_dummy⁸ -> (_lh_sumFloat_LH_C_0⁹ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁹)))
//│ 									in let _lh_sumFloat_LH_C_0⁸ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. d¹))
//│ 									in (fun _lh_dummy⁷ -> (_lh_sumFloat_LH_C_0⁸ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁸)))
//│ 								in let _lh_sumFloat_LH_C_0⁷ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. (2.0 *. d¹)))
//│ 								in (fun _lh_dummy⁶ -> (_lh_sumFloat_LH_C_0⁷ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁷)))
//│ 							in let _lh_sumFloat_LH_C_0⁶ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. (3.0 *. d¹)))
//│ 							in (fun _lh_dummy⁵ -> (_lh_sumFloat_LH_C_0⁶ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁶)))
//│ 						in let _lh_sumFloat_LH_C_0⁵ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (4.0 *. d¹)))
//│ 						in (fun _lh_dummy⁴ -> (_lh_sumFloat_LH_C_0⁵ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁵)))
//│ 					in let _lh_sumFloat_LH_C_0⁴ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (3.0 *. d¹)))
//│ 					in (fun _lh_dummy³ -> (_lh_sumFloat_LH_C_0⁴ +. sumFloat_lh(_lh_sumFloat_LH_C_1⁴)))
//│ 				in let _lh_sumFloat_LH_C_0³ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (2.0 *. d¹)))
//│ 				in (fun _lh_dummy² -> (_lh_sumFloat_LH_C_0³ +. sumFloat_lh(_lh_sumFloat_LH_C_1³)))
//│ 			in let _lh_sumFloat_LH_C_0² = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. d¹))
//│ 			in (fun _lh_dummy¹ -> (_lh_sumFloat_LH_C_0² +. sumFloat_lh(_lh_sumFloat_LH_C_1²)))
//│ 		in let _lh_sumFloat_LH_C_0¹ = (_lh_integrate1D_arg3¹(_lh_integrate1D_arg1¹) *. 0.5)
//│ 		in (fun _lh_dummy⁰ -> (_lh_sumFloat_LH_C_0¹ +. sumFloat_lh(_lh_sumFloat_LH_C_1¹)))))
//│ def integrate2D_lh(_lh_integrate2D_arg1¹, _lh_integrate2D_arg2¹, _lh_integrate2D_arg3¹, _lh_integrate2D_arg4¹, _lh_integrate2D_arg5¹) = integrate1D_lh(_lh_integrate2D_arg3¹, _lh_integrate2D_arg4¹, (fun y³ -> integrate1D_lh(_lh_integrate2D_arg1¹, _lh_integrate2D_arg2¹, (fun x³ -> _lh_integrate2D_arg5¹(x³, y³)))))
//│ def ints_lh(_lh_ints_arg1¹) = enumFromFloat_lh(1.0)
//│ def is_lh(_lh_is_arg1¹) = map_lz_lh((fun a⁵ -> (((a⁵ *. a⁵) *. a⁵) *. a⁵)), ints_lh(0))
//│ def itotals_lh(_lh_itotals_arg1¹) = lazy⁰([LH_C head_lz_lh(is_lh(0)) zipWith_lz_lz_lh((fun a⁸ -> (fun b⁴ -> (a⁸ +. b⁴))), tail_lz_lh(is_lh(0)), itotals_lh(0))])
//│ def map_lz_lh(f³, ls⁵) = lazy⁰(case force⁰(ls⁵) of {
//│ 	LH_C h⁰ t⁰ => [LH_C f³(h⁰) map_lz_lh(f³, t⁰)]
//│ 	| LH_N  => [LH_N]})
//│ def rtotals_lh(_lh_rtotals_arg1¹) = lazy⁰([LH_C head_lz_lh(zarks_lh(0)) zipWith_lz_lz_lh((fun a⁹ -> (fun b⁵ -> (a⁹ +. b⁵))), tail_lz_lh(zarks_lh(0)), rtotals_lh(0))])
//│ def sumFloat_lh(_lh_sumFloat_arg1¹) = _lh_sumFloat_arg1¹(99)
//│ def tail_lz_lh(ls⁴) = case force⁰(ls⁴) of {
//│ 	LH_C h² t² => t²
//│ 	| LH_N  => error⁰}
//│ def take_lz_lh(n², ls⁷) = if (n² > 0) then case force⁰(ls⁷) of {
//│ 	LH_C h³ t³ => 
//│ 		let _lh_sumFloat_LH_C_1¹⁰ = take_lz_lh((n² - 1), t³)
//│ 		in let _lh_sumFloat_LH_C_0¹⁰ = h³
//│ 		in (fun _lh_dummy¹⁰ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh(_lh_sumFloat_LH_C_1¹⁰)))
//│ 	| LH_N  => (fun _lh_dummy¹¹ -> 0.0)} else (fun _lh_dummy¹² -> 0.0)
//│ def testIntegrate_nofib_lh(_lh_testIntegrate_nofib_arg1¹) = etotal_lh(_lh_testIntegrate_nofib_arg1¹)
//│ def zark_lh(_lh_zark_arg1¹, _lh_zark_arg2¹) = integrate2D_lh(0.0, _lh_zark_arg1¹, 0.0, _lh_zark_arg2¹, (fun x² -> (fun y² -> (x² *. y²))))
//│ def zarks_lh(_lh_zarks_arg1¹) = zipWith_lz_lz_lh(zark_lh, ints_lh(0), map_lz_lh((fun n³ -> (2.0 *. n³)), ints_lh(0)))
//│ def zipWith_lz_lz_lh(f², xs¹, ys¹) = lazy⁰(case force⁰(xs¹) of {
//│ 	LH_C hx⁰ tx⁰ => case force⁰(ys¹) of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C f²(hx⁰, hy⁰) zipWith_lz_lz_lh(f², tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]})
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testIntegrate_nofib_lh^1] (hopeless to continue)
//│ 	[testIntegrate_nofib_lh^1 · etotal_lh^6] (using original def)
//│ 		[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · head_lz_lh^169] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^170] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^170 · ints_lh^54] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^170 · ints_lh^54 · enumFromFloat_lh^85] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^170 · ints_lh^54 · enumFromFloat_lh^85 · enumFromFloat_lh^484] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^170 · ints_lh^54 · enumFromFloat_lh^85] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^170 · map_lz_lh^38] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^170 · map_lz_lh^38 · map_lz_lh^96] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^170 · map_lz_lh^38] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^184] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^184 · ints_lh^54] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^184 · ints_lh^54 · enumFromFloat_lh^85] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^184 · ints_lh^54 · enumFromFloat_lh^85 · enumFromFloat_lh^484] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^184 · ints_lh^54 · enumFromFloat_lh^85] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^184 · map_lz_lh^38] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^184 · map_lz_lh^38 · map_lz_lh^96] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · is_lh^184 · map_lz_lh^38] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · itotals_lh^189] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · tail_lz_lh^183] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · zipWith_lz_lz_lh^174] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · zipWith_lz_lz_lh^174 · zipWith_lz_lz_lh^22] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · itotals_lh^160 · zipWith_lz_lz_lh^174] (using original def)
//│ 		[testIntegrate_nofib_lh^1 · etotal_lh^6 · map_lz_lh^139] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · map_lz_lh^139 · map_lz_lh^96] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · map_lz_lh^139] (using original def)
//│ 		[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · head_lz_lh^398] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · rtotals_lh^418] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · tail_lz_lh^412] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · ints_lh^464] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · ints_lh^464 · enumFromFloat_lh^85] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · ints_lh^464 · enumFromFloat_lh^85 · enumFromFloat_lh^484] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · ints_lh^464 · enumFromFloat_lh^85] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · ints_lh^476] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · ints_lh^476 · enumFromFloat_lh^85] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · ints_lh^476 · enumFromFloat_lh^85 · enumFromFloat_lh^484] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · ints_lh^476 · enumFromFloat_lh^85] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · map_lz_lh^468] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · map_lz_lh^468 · map_lz_lh^96] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · map_lz_lh^468] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^208] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^221] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^238] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^259] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^280] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^301] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^322] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^343] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^360] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^377] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^208] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^221] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^238] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^259] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^280] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^301] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^322] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^343] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^360] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^377] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zipWith_lz_lz_lh^461] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zipWith_lz_lz_lh^461 · zipWith_lz_lz_lh^22] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^399 · zipWith_lz_lz_lh^461] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · ints_lh^464] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · ints_lh^464 · enumFromFloat_lh^85] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · ints_lh^464 · enumFromFloat_lh^85 · enumFromFloat_lh^484] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · ints_lh^464 · enumFromFloat_lh^85] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · ints_lh^476] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · ints_lh^476 · enumFromFloat_lh^85] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · ints_lh^476 · enumFromFloat_lh^85 · enumFromFloat_lh^484] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · ints_lh^476 · enumFromFloat_lh^85] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · map_lz_lh^468] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · map_lz_lh^468 · map_lz_lh^96] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · map_lz_lh^468] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^208] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^221] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^238] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^259] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^280] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^301] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^322] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^343] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^360] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^111 · sumFloat_lh^377] (using original def)
//│ 						[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^208] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^221] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^238] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^259] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^280] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^301] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^322] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^343] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^360] (using original def)
//│ 							[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zark_lh^462 · integrate2D_lh^59 · integrate1D_lh^116 · sumFloat_lh^377] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zipWith_lz_lz_lh^461] (using original def)
//│ 					[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zipWith_lz_lz_lh^461 · zipWith_lz_lz_lh^22] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zarks_lh^413 · zipWith_lz_lz_lh^461] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zipWith_lz_lz_lh^403] (using original def)
//│ 				[testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zipWith_lz_lz_lh^403 · zipWith_lz_lz_lh^22] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · rtotals_lh^156 · zipWith_lz_lz_lh^403] (using original def)
//│ 		[testIntegrate_nofib_lh^1 · etotal_lh^6 · sumFloat_lh^135] (using original def)
//│ 		[testIntegrate_nofib_lh^1 · etotal_lh^6 · take_lz_lh^136] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · take_lz_lh^136 · sumFloat_lh^446] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · take_lz_lh^136 · take_lz_lh^433] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · take_lz_lh^136] (using original def)
//│ 		[testIntegrate_nofib_lh^1 · etotal_lh^6 · zipWith_lz_lz_lh^147] (using original def)
//│ 			[testIntegrate_nofib_lh^1 · etotal_lh^6 · zipWith_lz_lz_lh^147 · zipWith_lz_lz_lh^22] ---> [testIntegrate_nofib_lh^1 · etotal_lh^6 · zipWith_lz_lz_lh^147] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testIntegrate_nofib_lh_₀(primId⁰(100))
//│ def testIntegrate_nofib_lh_₀(_lh_testIntegrate_nofib_arg1¹) = 
//│ 	etotal_lh_₀(_lh_testIntegrate_nofib_arg1¹)
//│ 	where
//│ 	def etotal_lh_₀(_lh_etotal_arg1¹) = 
//│ 		sumFloat_lh_₄₀(take_lz_lh_₀(_lh_etotal_arg1¹, map_lz_lh_₂((fun a⁹ -> (a⁹ *. a⁹)), zipWith_lz_lz_lh_₄((fun a¹⁰ -> (fun b⁵ -> (a¹⁰ -. b⁵))), rtotals_lh_₀(0), itotals_lh_₀(0)))))
//│ 		where
//│ 		def itotals_lh_₀(_lh_itotals_arg1¹) = 
//│ 			lazy⁰([LH_C head_lz_lh_₀(is_lh_₀(0)) zipWith_lz_lz_lh_₀((fun a⁷ -> (fun b⁴ -> (a⁷ +. b⁴))), tail_lz_lh_₀(is_lh_₁(0)), itotals_lh_₀(0))])
//│ 			where
//│ 			def head_lz_lh_₀(ls¹²) = 
//│ 				case force⁰(ls¹²) of {
//│ 					LH_C h¹² t¹² => h¹²
//│ 					| LH_N  => error⁰}
//│ 			def is_lh_₀(_lh_is_arg1¹) = 
//│ 				map_lz_lh_₀((fun a⁵ -> (((a⁵ *. a⁵) *. a⁵) *. a⁵)), ints_lh_₀(0))
//│ 				where
//│ 				def ints_lh_₀(_lh_ints_arg1³) = 
//│ 					enumFromFloat_lh_₀(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₀(_lh_enumFromFloat_arg1⁶) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₀((_lh_enumFromFloat_arg1⁶ +. 1.0))])
//│ 				def map_lz_lh_₀(f¹¹, ls¹³) = 
//│ 					lazy⁰(case force⁰(ls¹³) of {
//│ 						LH_C h¹³ t¹³ => [LH_C f¹¹(h¹³) map_lz_lh_₀(f¹¹, t¹³)]
//│ 						| LH_N  => [LH_N]})
//│ 			def is_lh_₁(_lh_is_arg1²) = 
//│ 				map_lz_lh_₁((fun a⁸ -> (((a⁸ *. a⁸) *. a⁸) *. a⁸)), ints_lh_₁(0))
//│ 				where
//│ 				def ints_lh_₁(_lh_ints_arg1⁴) = 
//│ 					enumFromFloat_lh_₁(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₁(_lh_enumFromFloat_arg1⁵) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1⁵ enumFromFloat_lh_₁((_lh_enumFromFloat_arg1⁵ +. 1.0))])
//│ 				def map_lz_lh_₁(f³, ls⁶) = 
//│ 					lazy⁰(case force⁰(ls⁶) of {
//│ 						LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lz_lh_₁(f³, t⁶)]
//│ 						| LH_N  => [LH_N]})
//│ 			def tail_lz_lh_₀(ls¹⁰) = 
//│ 				case force⁰(ls¹⁰) of {
//│ 					LH_C h¹⁰ t¹⁰ => t¹⁰
//│ 					| LH_N  => error⁰}
//│ 			def zipWith_lz_lz_lh_₀(f⁴, xs¹, ys¹) = 
//│ 				lazy⁰(case force⁰(xs¹) of {
//│ 					LH_C hx¹ tx¹ => case force⁰(ys¹) of {
//│ 						LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def map_lz_lh_₂(f², ls⁵) = 
//│ 			lazy⁰(case force⁰(ls⁵) of {
//│ 				LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)]
//│ 				| LH_N  => [LH_N]})
//│ 		def rtotals_lh_₀(_lh_rtotals_arg1¹) = 
//│ 			lazy⁰([LH_C head_lz_lh_₁(zarks_lh_₀(0)) zipWith_lz_lz_lh_₃((fun a⁶ -> (fun b³ -> (a⁶ +. b³))), tail_lz_lh_₁(zarks_lh_₁(0)), rtotals_lh_₀(0))])
//│ 			where
//│ 			def head_lz_lh_₁(ls⁴) = 
//│ 				case force⁰(ls⁴) of {
//│ 					LH_C h⁴ t⁴ => h⁴
//│ 					| LH_N  => error⁰}
//│ 			def tail_lz_lh_₁(ls¹¹) = 
//│ 				case force⁰(ls¹¹) of {
//│ 					LH_C h¹¹ t¹¹ => t¹¹
//│ 					| LH_N  => error⁰}
//│ 			def zarks_lh_₀(_lh_zarks_arg1²) = 
//│ 				zipWith_lz_lz_lh_₁(zark_lh_₀, ints_lh_₂(0), map_lz_lh_₃((fun n⁴ -> (2.0 *. n⁴)), ints_lh_₃(0)))
//│ 				where
//│ 				def ints_lh_₂(_lh_ints_arg1¹) = 
//│ 					enumFromFloat_lh_₂(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂(_lh_enumFromFloat_arg1⁴) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))])
//│ 				def ints_lh_₃(_lh_ints_arg1⁵) = 
//│ 					enumFromFloat_lh_₃(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₃(_lh_enumFromFloat_arg1¹) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₃((_lh_enumFromFloat_arg1¹ +. 1.0))])
//│ 				def map_lz_lh_₃(f⁶, ls⁹) = 
//│ 					lazy⁰(case force⁰(ls⁹) of {
//│ 						LH_C h⁹ t⁹ => [LH_C f⁶(h⁹) map_lz_lh_₃(f⁶, t⁹)]
//│ 						| LH_N  => [LH_N]})
//│ 				def zark_lh_₀(_lh_zark_arg1¹, _lh_zark_arg2¹) = 
//│ 					integrate2D_lh_₀(0.0, _lh_zark_arg1¹, 0.0, _lh_zark_arg2¹, (fun x³ -> (fun y³ -> (x³ *. y³))))
//│ 					where
//│ 					def integrate2D_lh_₀(_lh_integrate2D_arg1¹, _lh_integrate2D_arg2¹, _lh_integrate2D_arg3¹, _lh_integrate2D_arg4¹, _lh_integrate2D_arg5¹) = 
//│ 						integrate1D_lh_₀(_lh_integrate2D_arg3¹, _lh_integrate2D_arg4¹, (fun y² -> integrate1D_lh_₁(_lh_integrate2D_arg1¹, _lh_integrate2D_arg2¹, (fun x² -> _lh_integrate2D_arg5¹(x², y²)))))
//│ 						where
//│ 						def integrate1D_lh_₀(_lh_integrate1D_arg1², _lh_integrate1D_arg2², _lh_integrate1D_arg3²) = 
//│ 							let d² = ((_lh_integrate1D_arg2² -. _lh_integrate1D_arg1²) /. 8.0)
//│ 							in (d² *. sumFloat_lh_₀(
//│ 								let _lh_sumFloat_LH_C_1¹⁹ = 	
//│ 									let _lh_sumFloat_LH_C_1²⁰ = 	
//│ 										let _lh_sumFloat_LH_C_1²¹ = 	
//│ 											let _lh_sumFloat_LH_C_1²² = 	
//│ 												let _lh_sumFloat_LH_C_1²³ = 	
//│ 													let _lh_sumFloat_LH_C_1²⁴ = 	
//│ 														let _lh_sumFloat_LH_C_1²⁵ = 	
//│ 															let _lh_sumFloat_LH_C_1²⁶ = 	
//│ 																let _lh_sumFloat_LH_C_1²⁷ = (fun _lh_dummy²³ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0¹⁹ = (_lh_integrate1D_arg3²(_lh_integrate1D_arg2²) *. 0.5)
//│ 																in (fun _lh_dummy²⁴ -> (_lh_sumFloat_LH_C_0¹⁹ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1²⁷)))
//│ 															in let _lh_sumFloat_LH_C_0²⁰ = _lh_integrate1D_arg3²((_lh_integrate1D_arg2² -. d²))
//│ 															in (fun _lh_dummy²⁵ -> (_lh_sumFloat_LH_C_0²⁰ +. sumFloat_lh_₂(_lh_sumFloat_LH_C_1²⁶)))
//│ 														in let _lh_sumFloat_LH_C_0²¹ = _lh_integrate1D_arg3²((_lh_integrate1D_arg2² -. (2.0 *. d²)))
//│ 														in (fun _lh_dummy²⁶ -> (_lh_sumFloat_LH_C_0²¹ +. sumFloat_lh_₃(_lh_sumFloat_LH_C_1²⁵)))
//│ 													in let _lh_sumFloat_LH_C_0²² = _lh_integrate1D_arg3²((_lh_integrate1D_arg2² -. (3.0 *. d²)))
//│ 													in (fun _lh_dummy²⁷ -> (_lh_sumFloat_LH_C_0²² +. sumFloat_lh_₄(_lh_sumFloat_LH_C_1²⁴)))
//│ 												in let _lh_sumFloat_LH_C_0²³ = _lh_integrate1D_arg3²((_lh_integrate1D_arg1² +. (4.0 *. d²)))
//│ 												in (fun _lh_dummy²⁸ -> (_lh_sumFloat_LH_C_0²³ +. sumFloat_lh_₅(_lh_sumFloat_LH_C_1²³)))
//│ 											in let _lh_sumFloat_LH_C_0²⁴ = _lh_integrate1D_arg3²((_lh_integrate1D_arg1² +. (3.0 *. d²)))
//│ 											in (fun _lh_dummy²⁹ -> (_lh_sumFloat_LH_C_0²⁴ +. sumFloat_lh_₆(_lh_sumFloat_LH_C_1²²)))
//│ 										in let _lh_sumFloat_LH_C_0²⁵ = _lh_integrate1D_arg3²((_lh_integrate1D_arg1² +. (2.0 *. d²)))
//│ 										in (fun _lh_dummy³⁰ -> (_lh_sumFloat_LH_C_0²⁵ +. sumFloat_lh_₇(_lh_sumFloat_LH_C_1²¹)))
//│ 									in let _lh_sumFloat_LH_C_0²⁶ = _lh_integrate1D_arg3²((_lh_integrate1D_arg1² +. d²))
//│ 									in (fun _lh_dummy³¹ -> (_lh_sumFloat_LH_C_0²⁶ +. sumFloat_lh_₈(_lh_sumFloat_LH_C_1²⁰)))
//│ 								in let _lh_sumFloat_LH_C_0²⁷ = (_lh_integrate1D_arg3²(_lh_integrate1D_arg1²) *. 0.5)
//│ 								in (fun _lh_dummy³² -> (_lh_sumFloat_LH_C_0²⁷ +. sumFloat_lh_₉(_lh_sumFloat_LH_C_1¹⁹)))))
//│ 							where
//│ 							def sumFloat_lh_₀(_lh_sumFloat_arg1²⁷) = 
//│ 								_lh_sumFloat_arg1²⁷(99)
//│ 							def sumFloat_lh_₁(_lh_sumFloat_arg1²⁰) = 
//│ 								_lh_sumFloat_arg1²⁰(99)
//│ 							def sumFloat_lh_₂(_lh_sumFloat_arg1³⁹) = 
//│ 								_lh_sumFloat_arg1³⁹(99)
//│ 							def sumFloat_lh_₃(_lh_sumFloat_arg1¹²) = 
//│ 								_lh_sumFloat_arg1¹²(99)
//│ 							def sumFloat_lh_₄(_lh_sumFloat_arg1³²) = 
//│ 								_lh_sumFloat_arg1³²(99)
//│ 							def sumFloat_lh_₅(_lh_sumFloat_arg1⁴⁰) = 
//│ 								_lh_sumFloat_arg1⁴⁰(99)
//│ 							def sumFloat_lh_₆(_lh_sumFloat_arg1³¹) = 
//│ 								_lh_sumFloat_arg1³¹(99)
//│ 							def sumFloat_lh_₇(_lh_sumFloat_arg1²⁴) = 
//│ 								_lh_sumFloat_arg1²⁴(99)
//│ 							def sumFloat_lh_₈(_lh_sumFloat_arg1⁵) = 
//│ 								_lh_sumFloat_arg1⁵(99)
//│ 							def sumFloat_lh_₉(_lh_sumFloat_arg1²³) = 
//│ 								_lh_sumFloat_arg1²³(99)
//│ 						def integrate1D_lh_₁(_lh_integrate1D_arg1³, _lh_integrate1D_arg2³, _lh_integrate1D_arg3³) = 
//│ 							let d³ = ((_lh_integrate1D_arg2³ -. _lh_integrate1D_arg1³) /. 8.0)
//│ 							in (d³ *. sumFloat_lh_₁₀(
//│ 								let _lh_sumFloat_LH_C_1²⁹ = 	
//│ 									let _lh_sumFloat_LH_C_1³⁰ = 	
//│ 										let _lh_sumFloat_LH_C_1³¹ = 	
//│ 											let _lh_sumFloat_LH_C_1³² = 	
//│ 												let _lh_sumFloat_LH_C_1³³ = 	
//│ 													let _lh_sumFloat_LH_C_1³⁴ = 	
//│ 														let _lh_sumFloat_LH_C_1³⁵ = 	
//│ 															let _lh_sumFloat_LH_C_1³⁶ = 	
//│ 																let _lh_sumFloat_LH_C_1³⁷ = (fun _lh_dummy³⁶ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0²⁹ = (_lh_integrate1D_arg3³(_lh_integrate1D_arg2³) *. 0.5)
//│ 																in (fun _lh_dummy³⁷ -> (_lh_sumFloat_LH_C_0²⁹ +. sumFloat_lh_₁₁(_lh_sumFloat_LH_C_1³⁷)))
//│ 															in let _lh_sumFloat_LH_C_0³⁰ = _lh_integrate1D_arg3³((_lh_integrate1D_arg2³ -. d³))
//│ 															in (fun _lh_dummy³⁸ -> (_lh_sumFloat_LH_C_0³⁰ +. sumFloat_lh_₁₂(_lh_sumFloat_LH_C_1³⁶)))
//│ 														in let _lh_sumFloat_LH_C_0³¹ = _lh_integrate1D_arg3³((_lh_integrate1D_arg2³ -. (2.0 *. d³)))
//│ 														in (fun _lh_dummy³⁹ -> (_lh_sumFloat_LH_C_0³¹ +. sumFloat_lh_₁₃(_lh_sumFloat_LH_C_1³⁵)))
//│ 													in let _lh_sumFloat_LH_C_0³² = _lh_integrate1D_arg3³((_lh_integrate1D_arg2³ -. (3.0 *. d³)))
//│ 													in (fun _lh_dummy⁴⁰ -> (_lh_sumFloat_LH_C_0³² +. sumFloat_lh_₁₄(_lh_sumFloat_LH_C_1³⁴)))
//│ 												in let _lh_sumFloat_LH_C_0³³ = _lh_integrate1D_arg3³((_lh_integrate1D_arg1³ +. (4.0 *. d³)))
//│ 												in (fun _lh_dummy⁴¹ -> (_lh_sumFloat_LH_C_0³³ +. sumFloat_lh_₁₅(_lh_sumFloat_LH_C_1³³)))
//│ 											in let _lh_sumFloat_LH_C_0³⁴ = _lh_integrate1D_arg3³((_lh_integrate1D_arg1³ +. (3.0 *. d³)))
//│ 											in (fun _lh_dummy⁴² -> (_lh_sumFloat_LH_C_0³⁴ +. sumFloat_lh_₁₆(_lh_sumFloat_LH_C_1³²)))
//│ 										in let _lh_sumFloat_LH_C_0³⁵ = _lh_integrate1D_arg3³((_lh_integrate1D_arg1³ +. (2.0 *. d³)))
//│ 										in (fun _lh_dummy⁴³ -> (_lh_sumFloat_LH_C_0³⁵ +. sumFloat_lh_₁₇(_lh_sumFloat_LH_C_1³¹)))
//│ 									in let _lh_sumFloat_LH_C_0³⁶ = _lh_integrate1D_arg3³((_lh_integrate1D_arg1³ +. d³))
//│ 									in (fun _lh_dummy⁴⁴ -> (_lh_sumFloat_LH_C_0³⁶ +. sumFloat_lh_₁₈(_lh_sumFloat_LH_C_1³⁰)))
//│ 								in let _lh_sumFloat_LH_C_0³⁷ = (_lh_integrate1D_arg3³(_lh_integrate1D_arg1³) *. 0.5)
//│ 								in (fun _lh_dummy⁴⁵ -> (_lh_sumFloat_LH_C_0³⁷ +. sumFloat_lh_₁₉(_lh_sumFloat_LH_C_1²⁹)))))
//│ 							where
//│ 							def sumFloat_lh_₁₀(_lh_sumFloat_arg1⁹) = 
//│ 								_lh_sumFloat_arg1⁹(99)
//│ 							def sumFloat_lh_₁₁(_lh_sumFloat_arg1³³) = 
//│ 								_lh_sumFloat_arg1³³(99)
//│ 							def sumFloat_lh_₁₂(_lh_sumFloat_arg1¹⁸) = 
//│ 								_lh_sumFloat_arg1¹⁸(99)
//│ 							def sumFloat_lh_₁₃(_lh_sumFloat_arg1⁶) = 
//│ 								_lh_sumFloat_arg1⁶(99)
//│ 							def sumFloat_lh_₁₄(_lh_sumFloat_arg1³⁰) = 
//│ 								_lh_sumFloat_arg1³⁰(99)
//│ 							def sumFloat_lh_₁₅(_lh_sumFloat_arg1²) = 
//│ 								_lh_sumFloat_arg1²(99)
//│ 							def sumFloat_lh_₁₆(_lh_sumFloat_arg1¹⁴) = 
//│ 								_lh_sumFloat_arg1¹⁴(99)
//│ 							def sumFloat_lh_₁₇(_lh_sumFloat_arg1⁷) = 
//│ 								_lh_sumFloat_arg1⁷(99)
//│ 							def sumFloat_lh_₁₈(_lh_sumFloat_arg1²⁵) = 
//│ 								_lh_sumFloat_arg1²⁵(99)
//│ 							def sumFloat_lh_₁₉(_lh_sumFloat_arg1³⁵) = 
//│ 								_lh_sumFloat_arg1³⁵(99)
//│ 				def zipWith_lz_lz_lh_₁(f⁸, xs³, ys³) = 
//│ 					lazy⁰(case force⁰(xs³) of {
//│ 						LH_C hx³ tx³ => case force⁰(ys³) of {
//│ 							LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ 			def zarks_lh_₁(_lh_zarks_arg1¹) = 
//│ 				zipWith_lz_lz_lh_₂(zark_lh_₁, ints_lh_₄(0), map_lz_lh_₄((fun n³ -> (2.0 *. n³)), ints_lh_₅(0)))
//│ 				where
//│ 				def ints_lh_₄(_lh_ints_arg1²) = 
//│ 					enumFromFloat_lh_₄(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₄(_lh_enumFromFloat_arg1²) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₄((_lh_enumFromFloat_arg1² +. 1.0))])
//│ 				def ints_lh_₅(_lh_ints_arg1⁶) = 
//│ 					enumFromFloat_lh_₅(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₅(_lh_enumFromFloat_arg1³) = 
//│ 						lazy⁰([LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₅((_lh_enumFromFloat_arg1³ +. 1.0))])
//│ 				def map_lz_lh_₄(f⁵, ls⁸) = 
//│ 					lazy⁰(case force⁰(ls⁸) of {
//│ 						LH_C h⁸ t⁸ => [LH_C f⁵(h⁸) map_lz_lh_₄(f⁵, t⁸)]
//│ 						| LH_N  => [LH_N]})
//│ 				def zark_lh_₁(_lh_zark_arg1², _lh_zark_arg2²) = 
//│ 					integrate2D_lh_₁(0.0, _lh_zark_arg1², 0.0, _lh_zark_arg2², (fun x⁵ -> (fun y⁵ -> (x⁵ *. y⁵))))
//│ 					where
//│ 					def integrate2D_lh_₁(_lh_integrate2D_arg1², _lh_integrate2D_arg2², _lh_integrate2D_arg3², _lh_integrate2D_arg4², _lh_integrate2D_arg5²) = 
//│ 						integrate1D_lh_₂(_lh_integrate2D_arg3², _lh_integrate2D_arg4², (fun y⁴ -> integrate1D_lh_₃(_lh_integrate2D_arg1², _lh_integrate2D_arg2², (fun x⁴ -> _lh_integrate2D_arg5²(x⁴, y⁴)))))
//│ 						where
//│ 						def integrate1D_lh_₂(_lh_integrate1D_arg1¹, _lh_integrate1D_arg2¹, _lh_integrate1D_arg3¹) = 
//│ 							let d¹ = ((_lh_integrate1D_arg2¹ -. _lh_integrate1D_arg1¹) /. 8.0)
//│ 							in (d¹ *. sumFloat_lh_₂₀(
//│ 								let _lh_sumFloat_LH_C_1¹⁰ = 	
//│ 									let _lh_sumFloat_LH_C_1¹¹ = 	
//│ 										let _lh_sumFloat_LH_C_1¹² = 	
//│ 											let _lh_sumFloat_LH_C_1¹³ = 	
//│ 												let _lh_sumFloat_LH_C_1¹⁴ = 	
//│ 													let _lh_sumFloat_LH_C_1¹⁵ = 	
//│ 														let _lh_sumFloat_LH_C_1¹⁶ = 	
//│ 															let _lh_sumFloat_LH_C_1¹⁷ = 	
//│ 																let _lh_sumFloat_LH_C_1¹⁸ = (fun _lh_dummy¹³ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0¹⁰ = (_lh_integrate1D_arg3¹(_lh_integrate1D_arg2¹) *. 0.5)
//│ 																in (fun _lh_dummy¹⁴ -> (_lh_sumFloat_LH_C_0¹⁰ +. sumFloat_lh_₂₁(_lh_sumFloat_LH_C_1¹⁸)))
//│ 															in let _lh_sumFloat_LH_C_0¹¹ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. d¹))
//│ 															in (fun _lh_dummy¹⁵ -> (_lh_sumFloat_LH_C_0¹¹ +. sumFloat_lh_₂₂(_lh_sumFloat_LH_C_1¹⁷)))
//│ 														in let _lh_sumFloat_LH_C_0¹² = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. (2.0 *. d¹)))
//│ 														in (fun _lh_dummy¹⁶ -> (_lh_sumFloat_LH_C_0¹² +. sumFloat_lh_₂₃(_lh_sumFloat_LH_C_1¹⁶)))
//│ 													in let _lh_sumFloat_LH_C_0¹³ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg2¹ -. (3.0 *. d¹)))
//│ 													in (fun _lh_dummy¹⁷ -> (_lh_sumFloat_LH_C_0¹³ +. sumFloat_lh_₂₄(_lh_sumFloat_LH_C_1¹⁵)))
//│ 												in let _lh_sumFloat_LH_C_0¹⁴ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (4.0 *. d¹)))
//│ 												in (fun _lh_dummy¹⁸ -> (_lh_sumFloat_LH_C_0¹⁴ +. sumFloat_lh_₂₅(_lh_sumFloat_LH_C_1¹⁴)))
//│ 											in let _lh_sumFloat_LH_C_0¹⁵ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (3.0 *. d¹)))
//│ 											in (fun _lh_dummy¹⁹ -> (_lh_sumFloat_LH_C_0¹⁵ +. sumFloat_lh_₂₆(_lh_sumFloat_LH_C_1¹³)))
//│ 										in let _lh_sumFloat_LH_C_0¹⁶ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. (2.0 *. d¹)))
//│ 										in (fun _lh_dummy²⁰ -> (_lh_sumFloat_LH_C_0¹⁶ +. sumFloat_lh_₂₇(_lh_sumFloat_LH_C_1¹²)))
//│ 									in let _lh_sumFloat_LH_C_0¹⁷ = _lh_integrate1D_arg3¹((_lh_integrate1D_arg1¹ +. d¹))
//│ 									in (fun _lh_dummy²¹ -> (_lh_sumFloat_LH_C_0¹⁷ +. sumFloat_lh_₂₈(_lh_sumFloat_LH_C_1¹¹)))
//│ 								in let _lh_sumFloat_LH_C_0¹⁸ = (_lh_integrate1D_arg3¹(_lh_integrate1D_arg1¹) *. 0.5)
//│ 								in (fun _lh_dummy²² -> (_lh_sumFloat_LH_C_0¹⁸ +. sumFloat_lh_₂₉(_lh_sumFloat_LH_C_1¹⁰)))))
//│ 							where
//│ 							def sumFloat_lh_₂₀(_lh_sumFloat_arg1²²) = 
//│ 								_lh_sumFloat_arg1²²(99)
//│ 							def sumFloat_lh_₂₁(_lh_sumFloat_arg1⁸) = 
//│ 								_lh_sumFloat_arg1⁸(99)
//│ 							def sumFloat_lh_₂₂(_lh_sumFloat_arg1¹⁵) = 
//│ 								_lh_sumFloat_arg1¹⁵(99)
//│ 							def sumFloat_lh_₂₃(_lh_sumFloat_arg1²⁹) = 
//│ 								_lh_sumFloat_arg1²⁹(99)
//│ 							def sumFloat_lh_₂₄(_lh_sumFloat_arg1³⁸) = 
//│ 								_lh_sumFloat_arg1³⁸(99)
//│ 							def sumFloat_lh_₂₅(_lh_sumFloat_arg1⁴¹) = 
//│ 								_lh_sumFloat_arg1⁴¹(99)
//│ 							def sumFloat_lh_₂₆(_lh_sumFloat_arg1⁴) = 
//│ 								_lh_sumFloat_arg1⁴(99)
//│ 							def sumFloat_lh_₂₇(_lh_sumFloat_arg1³) = 
//│ 								_lh_sumFloat_arg1³(99)
//│ 							def sumFloat_lh_₂₈(_lh_sumFloat_arg1²⁶) = 
//│ 								_lh_sumFloat_arg1²⁶(99)
//│ 							def sumFloat_lh_₂₉(_lh_sumFloat_arg1³⁴) = 
//│ 								_lh_sumFloat_arg1³⁴(99)
//│ 						def integrate1D_lh_₃(_lh_integrate1D_arg1⁴, _lh_integrate1D_arg2⁴, _lh_integrate1D_arg3⁴) = 
//│ 							let d⁴ = ((_lh_integrate1D_arg2⁴ -. _lh_integrate1D_arg1⁴) /. 8.0)
//│ 							in (d⁴ *. sumFloat_lh_₃₀(
//│ 								let _lh_sumFloat_LH_C_1³⁸ = 	
//│ 									let _lh_sumFloat_LH_C_1³⁹ = 	
//│ 										let _lh_sumFloat_LH_C_1⁴⁰ = 	
//│ 											let _lh_sumFloat_LH_C_1⁴¹ = 	
//│ 												let _lh_sumFloat_LH_C_1⁴² = 	
//│ 													let _lh_sumFloat_LH_C_1⁴³ = 	
//│ 														let _lh_sumFloat_LH_C_1⁴⁴ = 	
//│ 															let _lh_sumFloat_LH_C_1⁴⁵ = 	
//│ 																let _lh_sumFloat_LH_C_1⁴⁶ = (fun _lh_dummy⁴⁶ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0³⁸ = (_lh_integrate1D_arg3⁴(_lh_integrate1D_arg2⁴) *. 0.5)
//│ 																in (fun _lh_dummy⁴⁷ -> (_lh_sumFloat_LH_C_0³⁸ +. sumFloat_lh_₃₁(_lh_sumFloat_LH_C_1⁴⁶)))
//│ 															in let _lh_sumFloat_LH_C_0³⁹ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg2⁴ -. d⁴))
//│ 															in (fun _lh_dummy⁴⁸ -> (_lh_sumFloat_LH_C_0³⁹ +. sumFloat_lh_₃₂(_lh_sumFloat_LH_C_1⁴⁵)))
//│ 														in let _lh_sumFloat_LH_C_0⁴⁰ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg2⁴ -. (2.0 *. d⁴)))
//│ 														in (fun _lh_dummy⁴⁹ -> (_lh_sumFloat_LH_C_0⁴⁰ +. sumFloat_lh_₃₃(_lh_sumFloat_LH_C_1⁴⁴)))
//│ 													in let _lh_sumFloat_LH_C_0⁴¹ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg2⁴ -. (3.0 *. d⁴)))
//│ 													in (fun _lh_dummy⁵⁰ -> (_lh_sumFloat_LH_C_0⁴¹ +. sumFloat_lh_₃₄(_lh_sumFloat_LH_C_1⁴³)))
//│ 												in let _lh_sumFloat_LH_C_0⁴² = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg1⁴ +. (4.0 *. d⁴)))
//│ 												in (fun _lh_dummy⁵¹ -> (_lh_sumFloat_LH_C_0⁴² +. sumFloat_lh_₃₅(_lh_sumFloat_LH_C_1⁴²)))
//│ 											in let _lh_sumFloat_LH_C_0⁴³ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg1⁴ +. (3.0 *. d⁴)))
//│ 											in (fun _lh_dummy⁵² -> (_lh_sumFloat_LH_C_0⁴³ +. sumFloat_lh_₃₆(_lh_sumFloat_LH_C_1⁴¹)))
//│ 										in let _lh_sumFloat_LH_C_0⁴⁴ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg1⁴ +. (2.0 *. d⁴)))
//│ 										in (fun _lh_dummy⁵³ -> (_lh_sumFloat_LH_C_0⁴⁴ +. sumFloat_lh_₃₇(_lh_sumFloat_LH_C_1⁴⁰)))
//│ 									in let _lh_sumFloat_LH_C_0⁴⁵ = _lh_integrate1D_arg3⁴((_lh_integrate1D_arg1⁴ +. d⁴))
//│ 									in (fun _lh_dummy⁵⁴ -> (_lh_sumFloat_LH_C_0⁴⁵ +. sumFloat_lh_₃₈(_lh_sumFloat_LH_C_1³⁹)))
//│ 								in let _lh_sumFloat_LH_C_0⁴⁶ = (_lh_integrate1D_arg3⁴(_lh_integrate1D_arg1⁴) *. 0.5)
//│ 								in (fun _lh_dummy⁵⁵ -> (_lh_sumFloat_LH_C_0⁴⁶ +. sumFloat_lh_₃₉(_lh_sumFloat_LH_C_1³⁸)))))
//│ 							where
//│ 							def sumFloat_lh_₃₀(_lh_sumFloat_arg1²¹) = 
//│ 								_lh_sumFloat_arg1²¹(99)
//│ 							def sumFloat_lh_₃₁(_lh_sumFloat_arg1¹⁰) = 
//│ 								_lh_sumFloat_arg1¹⁰(99)
//│ 							def sumFloat_lh_₃₂(_lh_sumFloat_arg1¹⁶) = 
//│ 								_lh_sumFloat_arg1¹⁶(99)
//│ 							def sumFloat_lh_₃₃(_lh_sumFloat_arg1¹⁷) = 
//│ 								_lh_sumFloat_arg1¹⁷(99)
//│ 							def sumFloat_lh_₃₄(_lh_sumFloat_arg1⁴²) = 
//│ 								_lh_sumFloat_arg1⁴²(99)
//│ 							def sumFloat_lh_₃₅(_lh_sumFloat_arg1¹¹) = 
//│ 								_lh_sumFloat_arg1¹¹(99)
//│ 							def sumFloat_lh_₃₆(_lh_sumFloat_arg1¹) = 
//│ 								_lh_sumFloat_arg1¹(99)
//│ 							def sumFloat_lh_₃₇(_lh_sumFloat_arg1¹³) = 
//│ 								_lh_sumFloat_arg1¹³(99)
//│ 							def sumFloat_lh_₃₈(_lh_sumFloat_arg1³⁷) = 
//│ 								_lh_sumFloat_arg1³⁷(99)
//│ 							def sumFloat_lh_₃₉(_lh_sumFloat_arg1¹⁹) = 
//│ 								_lh_sumFloat_arg1¹⁹(99)
//│ 				def zipWith_lz_lz_lh_₂(f⁷, xs², ys²) = 
//│ 					lazy⁰(case force⁰(xs²) of {
//│ 						LH_C hx² tx² => case force⁰(ys²) of {
//│ 							LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)]
//│ 							| LH_N  => [LH_N]}
//│ 						| LH_N  => [LH_N]})
//│ 			def zipWith_lz_lz_lh_₃(f¹⁰, xs⁵, ys⁵) = 
//│ 				lazy⁰(case force⁰(xs⁵) of {
//│ 					LH_C hx⁵ tx⁵ => case force⁰(ys⁵) of {
//│ 						LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def sumFloat_lh_₄₀(_lh_sumFloat_arg1²⁸) = 
//│ 			_lh_sumFloat_arg1²⁸(99)
//│ 		def take_lz_lh_₀(n², ls⁷) = 
//│ 			if (n² > 0) then case force⁰(ls⁷) of {
//│ 				LH_C h⁷ t⁷ => 
//│ 					let _lh_sumFloat_LH_C_1²⁸ = take_lz_lh_₀((n² - 1), t⁷)
//│ 					in let _lh_sumFloat_LH_C_0²⁸ = h⁷
//│ 					in (fun _lh_dummy³³ -> (_lh_sumFloat_LH_C_0²⁸ +. sumFloat_lh_₄₁(_lh_sumFloat_LH_C_1²⁸)))
//│ 				| LH_N  => (fun _lh_dummy³⁴ -> 0.0)} else (fun _lh_dummy³⁵ -> 0.0)
//│ 			where
//│ 			def sumFloat_lh_₄₁(_lh_sumFloat_arg1³⁶) = 
//│ 				_lh_sumFloat_arg1³⁶(99)
//│ 		def zipWith_lz_lz_lh_₄(f⁹, xs⁴, ys⁴) = 
//│ 			lazy⁰(case force⁰(xs⁴) of {
//│ 				LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {
//│ 					LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)]
//│ 					| LH_N  => [LH_N]}
//│ 				| LH_N  => [LH_N]})
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C head_lz_lh_₁(zarks_lh_₀(0)) zipWith_lz_lz_lh_₃((fun a⁶ -> (fun b³ -> (a⁶ +. b³))), tail_lz_lh_₁(zarks_lh_₁(0)), rtotals_lh_₀(0))]: 559 --->
//│ 	case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1916
//│ 	case force⁰(ys⁵) of {LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 2009
//│ [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)]: 574 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t⁷ => let _lh_sumFloat_LH_C_1²⁸ = take_lz_lh_₀((n² - 1), t⁷)
//│ in let _lh_sumFloat_LH_C_0²⁸ = h⁷
//│ in (fun _lh_dummy³³ -> (_lh_sumFloat_LH_C_0²⁸ +. sumFloat_lh_₄₁(_lh_sumFloat_LH_C_1²⁸))) | LH_N  => (fun _lh_dummy³⁴ -> 0.0)}: 1088
//│ [LH_N]: 575 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t⁷ => let _lh_sumFloat_LH_C_1²⁸ = take_lz_lh_₀((n² - 1), t⁷)
//│ in let _lh_sumFloat_LH_C_0²⁸ = h⁷
//│ in (fun _lh_dummy³³ -> (_lh_sumFloat_LH_C_0²⁸ +. sumFloat_lh_₄₁(_lh_sumFloat_LH_C_1²⁸))) | LH_N  => (fun _lh_dummy³⁴ -> 0.0)}: 1088
//│ [LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₃((_lh_enumFromFloat_arg1¹ +. 1.0))]: 589 --->
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C f⁶(h⁹) map_lz_lh_₃(f⁶, t⁹)] | LH_N  => [LH_N]}: 1436
//│ [LH_C head_lz_lh_₀(is_lh_₀(0)) zipWith_lz_lz_lh_₀((fun a⁷ -> (fun b⁴ -> (a⁷ +. b⁴))), tail_lz_lh_₀(is_lh_₁(0)), itotals_lh_₀(0))]: 617 --->
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 1171
//│ 	case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 1914
//│ [LH_C f³(h⁶) map_lz_lh_₁(f³, t⁶)]: 632 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1173
//│ 	case force⁰(ls¹⁰) of {LH_C h¹⁰ t¹⁰ => t¹⁰ | LH_N  => error⁰}: 1759
//│ [LH_N]: 633 --->
//│ 	case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1173
//│ 	case force⁰(ls¹⁰) of {LH_C h¹⁰ t¹⁰ => t¹⁰ | LH_N  => error⁰}: 1759
//│ [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)]: 1169 --->
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 1171
//│ 	case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 1914
//│ [LH_N]: 1170 --->
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 1171
//│ 	case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 1914
//│ [LH_N]: 1172 --->
//│ 	case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 1171
//│ 	case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 1914
//│ [LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₄((_lh_enumFromFloat_arg1² +. 1.0))]: 1191 --->
//│ 	case force⁰(xs²) of {LH_C hx² tx² => case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1792
//│ [LH_C f⁵(h⁸) map_lz_lh_₄(f⁵, t⁸)]: 1412 --->
//│ 	case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]}: 1790
//│ [LH_N]: 1413 --->
//│ 	case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]}: 1790
//│ [LH_C f⁶(h⁹) map_lz_lh_₃(f⁶, t⁹)]: 1434 --->
//│ 	case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]}: 1845
//│ [LH_N]: 1435 --->
//│ 	case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]}: 1845
//│ [LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₅((_lh_enumFromFloat_arg1³ +. 1.0))]: 1457 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁵(h⁸) map_lz_lh_₄(f⁵, t⁸)] | LH_N  => [LH_N]}: 1414
//│ [LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))]: 1731 --->
//│ 	case force⁰(xs³) of {LH_C hx³ tx³ => case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1847
//│ [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)]: 1788 --->
//│ 	case force⁰(ls¹¹) of {LH_C h¹¹ t¹¹ => t¹¹ | LH_N  => error⁰}: 1802
//│ 	case force⁰(xs⁵) of {LH_C hx⁵ tx⁵ => case force⁰(ys⁵) of {LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2011
//│ [LH_N]: 1789 --->
//│ 	case force⁰(ls¹¹) of {LH_C h¹¹ t¹¹ => t¹¹ | LH_N  => error⁰}: 1802
//│ 	case force⁰(xs⁵) of {LH_C hx⁵ tx⁵ => case force⁰(ys⁵) of {LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2011
//│ [LH_N]: 1791 --->
//│ 	case force⁰(ls¹¹) of {LH_C h¹¹ t¹¹ => t¹¹ | LH_N  => error⁰}: 1802
//│ 	case force⁰(xs⁵) of {LH_C hx⁵ tx⁵ => case force⁰(ys⁵) of {LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2011
//│ [LH_C _lh_enumFromFloat_arg1⁵ enumFromFloat_lh_₁((_lh_enumFromFloat_arg1⁵ +. 1.0))]: 1813 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lz_lh_₁(f³, t⁶)] | LH_N  => [LH_N]}: 634
//│ [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)]: 1843 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁴) of {LH_C h⁴ t⁴ => h⁴ | LH_N  => error⁰}: 524
//│ [LH_N]: 1844 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁴) of {LH_C h⁴ t⁴ => h⁴ | LH_N  => error⁰}: 524
//│ [LH_N]: 1846 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls⁴) of {LH_C h⁴ t⁴ => h⁴ | LH_N  => error⁰}: 524
//│ [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)]: 1912 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)] | LH_N  => [LH_N]}: 576
//│ [LH_N]: 1913 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)] | LH_N  => [LH_N]}: 576
//│ [LH_N]: 1915 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)] | LH_N  => [LH_N]}: 576
//│ [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)]: 2007 --->
//│ 	case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1916
//│ 	case force⁰(ys⁵) of {LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 2009
//│ [LH_N]: 2008 --->
//│ 	case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1916
//│ 	case force⁰(ys⁵) of {LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 2009
//│ [LH_N]: 2010 --->
//│ 	case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1916
//│ 	case force⁰(ys⁵) of {LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 2009
//│ [LH_C f¹¹(h¹³) map_lz_lh_₀(f¹¹, t¹³)]: 2069 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls¹²) of {LH_C h¹² t¹² => h¹² | LH_N  => error⁰}: 1926
//│ [LH_N]: 2070 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls¹²) of {LH_C h¹² t¹² => h¹² | LH_N  => error⁰}: 1926
//│ [LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₀((_lh_enumFromFloat_arg1⁶ +. 1.0))]: 2084 --->
//│ 	case force⁰(ls¹³) of {LH_C h¹³ t¹³ => [LH_C f¹¹(h¹³) map_lz_lh_₀(f¹¹, t¹³)] | LH_N  => [LH_N]}: 2071
//│ ------------------
//│ case force⁰(ls⁴) of {LH_C h⁴ t⁴ => h⁴ | LH_N  => error⁰}: 524 --->
//│ 	[LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)]: 1843
//│ 	[LH_N]: 1844
//│ 	[LH_N]: 1846
//│ case force⁰(ls⁵) of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)] | LH_N  => [LH_N]}: 576 --->
//│ 	[LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)]: 1912
//│ 	[LH_N]: 1913
//│ 	[LH_N]: 1915
//│ case force⁰(ls⁶) of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lz_lh_₁(f³, t⁶)] | LH_N  => [LH_N]}: 634 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁵ enumFromFloat_lh_₁((_lh_enumFromFloat_arg1⁵ +. 1.0))]: 1813
//│ case force⁰(ls⁷) of {LH_C h⁷ t⁷ => let _lh_sumFloat_LH_C_1²⁸ = take_lz_lh_₀((n² - 1), t⁷)
//│ in let _lh_sumFloat_LH_C_0²⁸ = h⁷
//│ in (fun _lh_dummy³³ -> (_lh_sumFloat_LH_C_0²⁸ +. sumFloat_lh_₄₁(_lh_sumFloat_LH_C_1²⁸))) | LH_N  => (fun _lh_dummy³⁴ -> 0.0)}: 1088 --->
//│ 	[LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)]: 574
//│ 	[LH_N]: 575
//│ case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]}: 1171 --->
//│ 	[LH_C head_lz_lh_₀(is_lh_₀(0)) zipWith_lz_lz_lh_₀((fun a⁷ -> (fun b⁴ -> (a⁷ +. b⁴))), tail_lz_lh_₀(is_lh_₁(0)), itotals_lh_₀(0))]: 617
//│ 	[LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)]: 1169
//│ 	[LH_N]: 1170
//│ 	[LH_N]: 1172
//│ case force⁰(xs¹) of {LH_C hx¹ tx¹ => case force⁰(ys¹) of {LH_C hy¹ ty¹ => [LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1173 --->
//│ 	[LH_C f³(h⁶) map_lz_lh_₁(f³, t⁶)]: 632
//│ 	[LH_N]: 633
//│ case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁵(h⁸) map_lz_lh_₄(f⁵, t⁸)] | LH_N  => [LH_N]}: 1414 --->
//│ 	[LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₅((_lh_enumFromFloat_arg1³ +. 1.0))]: 1457
//│ case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C f⁶(h⁹) map_lz_lh_₃(f⁶, t⁹)] | LH_N  => [LH_N]}: 1436 --->
//│ 	[LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₃((_lh_enumFromFloat_arg1¹ +. 1.0))]: 589
//│ case force⁰(ls¹⁰) of {LH_C h¹⁰ t¹⁰ => t¹⁰ | LH_N  => error⁰}: 1759 --->
//│ 	[LH_C f³(h⁶) map_lz_lh_₁(f³, t⁶)]: 632
//│ 	[LH_N]: 633
//│ case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]}: 1790 --->
//│ 	[LH_C f⁵(h⁸) map_lz_lh_₄(f⁵, t⁸)]: 1412
//│ 	[LH_N]: 1413
//│ case force⁰(xs²) of {LH_C hx² tx² => case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1792 --->
//│ 	[LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₄((_lh_enumFromFloat_arg1² +. 1.0))]: 1191
//│ case force⁰(ls¹¹) of {LH_C h¹¹ t¹¹ => t¹¹ | LH_N  => error⁰}: 1802 --->
//│ 	[LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)]: 1788
//│ 	[LH_N]: 1789
//│ 	[LH_N]: 1791
//│ case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]}: 1845 --->
//│ 	[LH_C f⁶(h⁹) map_lz_lh_₃(f⁶, t⁹)]: 1434
//│ 	[LH_N]: 1435
//│ case force⁰(xs³) of {LH_C hx³ tx³ => case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1847 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))]: 1731
//│ case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]}: 1914 --->
//│ 	[LH_C head_lz_lh_₀(is_lh_₀(0)) zipWith_lz_lz_lh_₀((fun a⁷ -> (fun b⁴ -> (a⁷ +. b⁴))), tail_lz_lh_₀(is_lh_₁(0)), itotals_lh_₀(0))]: 617
//│ 	[LH_C f⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f⁴, tx¹, ty¹)]: 1169
//│ 	[LH_N]: 1170
//│ 	[LH_N]: 1172
//│ case force⁰(xs⁴) of {LH_C hx⁴ tx⁴ => case force⁰(ys⁴) of {LH_C hy⁴ ty⁴ => [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1916 --->
//│ 	[LH_C head_lz_lh_₁(zarks_lh_₀(0)) zipWith_lz_lz_lh_₃((fun a⁶ -> (fun b³ -> (a⁶ +. b³))), tail_lz_lh_₁(zarks_lh_₁(0)), rtotals_lh_₀(0))]: 559
//│ 	[LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)]: 2007
//│ 	[LH_N]: 2008
//│ 	[LH_N]: 2010
//│ case force⁰(ls¹²) of {LH_C h¹² t¹² => h¹² | LH_N  => error⁰}: 1926 --->
//│ 	[LH_C f¹¹(h¹³) map_lz_lh_₀(f¹¹, t¹³)]: 2069
//│ 	[LH_N]: 2070
//│ case force⁰(ys⁵) of {LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)] | LH_N  => [LH_N]}: 2009 --->
//│ 	[LH_C head_lz_lh_₁(zarks_lh_₀(0)) zipWith_lz_lz_lh_₃((fun a⁶ -> (fun b³ -> (a⁶ +. b³))), tail_lz_lh_₁(zarks_lh_₁(0)), rtotals_lh_₀(0))]: 559
//│ 	[LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)]: 2007
//│ 	[LH_N]: 2008
//│ 	[LH_N]: 2010
//│ case force⁰(xs⁵) of {LH_C hx⁵ tx⁵ => case force⁰(ys⁵) of {LH_C hy⁵ ty⁵ => [LH_C f¹⁰(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁰, tx⁵, ty⁵)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 2011 --->
//│ 	[LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)]: 1788
//│ 	[LH_N]: 1789
//│ 	[LH_N]: 1791
//│ case force⁰(ls¹³) of {LH_C h¹³ t¹³ => [LH_C f¹¹(h¹³) map_lz_lh_₀(f¹¹, t¹³)] | LH_N  => [LH_N]}: 2071 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₀((_lh_enumFromFloat_arg1⁶ +. 1.0))]: 2084
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)]: 574 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t⁷ => let _lh_sumFloat_LH_C_1²⁸ = take_lz_lh_₀((n² - 1), t⁷)
//│ in let _lh_sumFloat_LH_C_0²⁸ = h⁷
//│ in (fun _lh_dummy³³ -> (_lh_sumFloat_LH_C_0²⁸ +. sumFloat_lh_₄₁(_lh_sumFloat_LH_C_1²⁸))) | LH_N  => (fun _lh_dummy³⁴ -> 0.0)}: 1088
//│ [LH_N]: 575 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t⁷ => let _lh_sumFloat_LH_C_1²⁸ = take_lz_lh_₀((n² - 1), t⁷)
//│ in let _lh_sumFloat_LH_C_0²⁸ = h⁷
//│ in (fun _lh_dummy³³ -> (_lh_sumFloat_LH_C_0²⁸ +. sumFloat_lh_₄₁(_lh_sumFloat_LH_C_1²⁸))) | LH_N  => (fun _lh_dummy³⁴ -> 0.0)}: 1088
//│ [LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₃((_lh_enumFromFloat_arg1¹ +. 1.0))]: 589 --->
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C f⁶(h⁹) map_lz_lh_₃(f⁶, t⁹)] | LH_N  => [LH_N]}: 1436
//│ [LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₄((_lh_enumFromFloat_arg1² +. 1.0))]: 1191 --->
//│ 	case force⁰(xs²) of {LH_C hx² tx² => case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1792
//│ [LH_C f⁵(h⁸) map_lz_lh_₄(f⁵, t⁸)]: 1412 --->
//│ 	case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]}: 1790
//│ [LH_N]: 1413 --->
//│ 	case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]}: 1790
//│ [LH_C f⁶(h⁹) map_lz_lh_₃(f⁶, t⁹)]: 1434 --->
//│ 	case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]}: 1845
//│ [LH_N]: 1435 --->
//│ 	case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]}: 1845
//│ [LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₅((_lh_enumFromFloat_arg1³ +. 1.0))]: 1457 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁵(h⁸) map_lz_lh_₄(f⁵, t⁸)] | LH_N  => [LH_N]}: 1414
//│ [LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))]: 1731 --->
//│ 	case force⁰(xs³) of {LH_C hx³ tx³ => case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1847
//│ [LH_C _lh_enumFromFloat_arg1⁵ enumFromFloat_lh_₁((_lh_enumFromFloat_arg1⁵ +. 1.0))]: 1813 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lz_lh_₁(f³, t⁶)] | LH_N  => [LH_N]}: 634
//│ [LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)]: 1912 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)] | LH_N  => [LH_N]}: 576
//│ [LH_N]: 1913 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)] | LH_N  => [LH_N]}: 576
//│ [LH_N]: 1915 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)] | LH_N  => [LH_N]}: 576
//│ [LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₀((_lh_enumFromFloat_arg1⁶ +. 1.0))]: 2084 --->
//│ 	case force⁰(ls¹³) of {LH_C h¹³ t¹³ => [LH_C f¹¹(h¹³) map_lz_lh_₀(f¹¹, t¹³)] | LH_N  => [LH_N]}: 2071
//│ ------------------
//│ case force⁰(ls⁵) of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)] | LH_N  => [LH_N]}: 576 --->
//│ 	[LH_C f⁹(hx⁴, hy⁴) zipWith_lz_lz_lh_₄(f⁹, tx⁴, ty⁴)]: 1912
//│ 	[LH_N]: 1913
//│ 	[LH_N]: 1915
//│ case force⁰(ls⁶) of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lz_lh_₁(f³, t⁶)] | LH_N  => [LH_N]}: 634 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁵ enumFromFloat_lh_₁((_lh_enumFromFloat_arg1⁵ +. 1.0))]: 1813
//│ case force⁰(ls⁷) of {LH_C h⁷ t⁷ => let _lh_sumFloat_LH_C_1²⁸ = take_lz_lh_₀((n² - 1), t⁷)
//│ in let _lh_sumFloat_LH_C_0²⁸ = h⁷
//│ in (fun _lh_dummy³³ -> (_lh_sumFloat_LH_C_0²⁸ +. sumFloat_lh_₄₁(_lh_sumFloat_LH_C_1²⁸))) | LH_N  => (fun _lh_dummy³⁴ -> 0.0)}: 1088 --->
//│ 	[LH_C f²(h⁵) map_lz_lh_₂(f², t⁵)]: 574
//│ 	[LH_N]: 575
//│ case force⁰(ls⁸) of {LH_C h⁸ t⁸ => [LH_C f⁵(h⁸) map_lz_lh_₄(f⁵, t⁸)] | LH_N  => [LH_N]}: 1414 --->
//│ 	[LH_C _lh_enumFromFloat_arg1³ enumFromFloat_lh_₅((_lh_enumFromFloat_arg1³ +. 1.0))]: 1457
//│ case force⁰(ls⁹) of {LH_C h⁹ t⁹ => [LH_C f⁶(h⁹) map_lz_lh_₃(f⁶, t⁹)] | LH_N  => [LH_N]}: 1436 --->
//│ 	[LH_C _lh_enumFromFloat_arg1¹ enumFromFloat_lh_₃((_lh_enumFromFloat_arg1¹ +. 1.0))]: 589
//│ case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]}: 1790 --->
//│ 	[LH_C f⁵(h⁸) map_lz_lh_₄(f⁵, t⁸)]: 1412
//│ 	[LH_N]: 1413
//│ case force⁰(xs²) of {LH_C hx² tx² => case force⁰(ys²) of {LH_C hy² ty² => [LH_C f⁷(hx², hy²) zipWith_lz_lz_lh_₂(f⁷, tx², ty²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1792 --->
//│ 	[LH_C _lh_enumFromFloat_arg1² enumFromFloat_lh_₄((_lh_enumFromFloat_arg1² +. 1.0))]: 1191
//│ case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]}: 1845 --->
//│ 	[LH_C f⁶(h⁹) map_lz_lh_₃(f⁶, t⁹)]: 1434
//│ 	[LH_N]: 1435
//│ case force⁰(xs³) of {LH_C hx³ tx³ => case force⁰(ys³) of {LH_C hy³ ty³ => [LH_C f⁸(hx³, hy³) zipWith_lz_lz_lh_₁(f⁸, tx³, ty³)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1847 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁴ enumFromFloat_lh_₂((_lh_enumFromFloat_arg1⁴ +. 1.0))]: 1731
//│ case force⁰(ls¹³) of {LH_C h¹³ t¹³ => [LH_C f¹¹(h¹³) map_lz_lh_₀(f¹¹, t¹³)] | LH_N  => [LH_N]}: 2071 --->
//│ 	[LH_C _lh_enumFromFloat_arg1⁶ enumFromFloat_lh_₀((_lh_enumFromFloat_arg1⁶ +. 1.0))]: 2084
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testIntegrate_nofib_lh_₀(primId⁰(100))
//│ def testIntegrate_nofib_lh_₀(_lh_testIntegrate_nofib_arg1²) = 
//│ 	etotal_lh_₀(_lh_testIntegrate_nofib_arg1²)
//│ 	where
//│ 	def etotal_lh_₀(_lh_etotal_arg1²) = 
//│ 		sumFloat_lh_₄₀(take_lz_lh_₀(_lh_etotal_arg1², map_lz_lh_₂((fun a¹⁵ -> (a¹⁵ *. a¹⁵)), zipWith_lz_lz_lh_₄((fun a¹⁶ -> (fun b⁸ -> (a¹⁶ -. b⁸))), rtotals_lh_₀(0), itotals_lh_₀(0)))))
//│ 		where
//│ 		def itotals_lh_₀(_lh_itotals_arg1²) = 
//│ 			lazy⁰([LH_C head_lz_lh_₀(is_lh_₀(0)) zipWith_lz_lz_lh_₀((fun a¹¹ -> (fun b⁶ -> (a¹¹ +. b⁶))), tail_lz_lh_₀(is_lh_₁(0)), itotals_lh_₀(0))])
//│ 			where
//│ 			def head_lz_lh_₀(ls¹⁵) = 
//│ 				case force⁰(ls¹⁵) of {
//│ 					LH_C h¹² t¹² => h¹²
//│ 					| LH_N  => error⁰}
//│ 			def is_lh_₀(_lh_is_arg1³) = 
//│ 				map_lz_lh_₀((fun a¹² -> (((a¹² *. a¹²) *. a¹²) *. a¹²)), ints_lh_₀(0))
//│ 				where
//│ 				def ints_lh_₀(_lh_ints_arg1⁸) = 
//│ 					enumFromFloat_lh_₀(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₀(_lh_enumFromFloat_arg1⁹) = 
//│ 						lazy⁰(
//│ 							let t¹⁵ = enumFromFloat_lh_₀((_lh_enumFromFloat_arg1⁹ +. 1.0))
//│ 							in let h¹⁵ = _lh_enumFromFloat_arg1⁹
//│ 							in (fun f²⁰ -> [LH_C f²⁰(h¹⁵) map_lz_lh_₀(f²⁰, t¹⁵)]))
//│ 				def map_lz_lh_₀(f²², ls¹⁹) = 
//│ 					lazy⁰(force⁰(ls¹⁹, f²²))
//│ 			def is_lh_₁(_lh_is_arg1⁴) = 
//│ 				map_lz_lh_₁((fun a¹⁴ -> (((a¹⁴ *. a¹⁴) *. a¹⁴) *. a¹⁴)), ints_lh_₁(0))
//│ 				where
//│ 				def ints_lh_₁(_lh_ints_arg1¹¹) = 
//│ 					enumFromFloat_lh_₁(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₁(_lh_enumFromFloat_arg1¹⁰) = 
//│ 						lazy⁰(
//│ 							let t¹⁶ = enumFromFloat_lh_₁((_lh_enumFromFloat_arg1¹⁰ +. 1.0))
//│ 							in let h¹⁶ = _lh_enumFromFloat_arg1¹⁰
//│ 							in (fun f²⁴ -> [LH_C f²⁴(h¹⁶) map_lz_lh_₁(f²⁴, t¹⁶)]))
//│ 				def map_lz_lh_₁(f¹⁵, ls¹⁶) = 
//│ 					lazy⁰(force⁰(ls¹⁶, f¹⁵))
//│ 			def tail_lz_lh_₀(ls²⁰) = 
//│ 				case force⁰(ls²⁰) of {
//│ 					LH_C h¹⁰ t¹⁰ => t¹⁰
//│ 					| LH_N  => error⁰}
//│ 			def zipWith_lz_lz_lh_₀(f¹⁴, xs⁶, ys⁷) = 
//│ 				lazy⁰(case force⁰(xs⁶) of {
//│ 					LH_C hx¹ tx¹ => case force⁰(ys⁷) of {
//│ 						LH_C hy¹ ty¹ => [LH_C f¹⁴(hx¹, hy¹) zipWith_lz_lz_lh_₀(f¹⁴, tx¹, ty¹)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def map_lz_lh_₂(f³², ls²³) = 
//│ 			lazy⁰(force⁰(ls²³, f³²))
//│ 		def rtotals_lh_₀(_lh_rtotals_arg1²) = 
//│ 			lazy⁰([LH_C head_lz_lh_₁(zarks_lh_₀(0)) zipWith_lz_lz_lh_₃((fun a¹³ -> (fun b⁷ -> (a¹³ +. b⁷))), tail_lz_lh_₁(zarks_lh_₁(0)), rtotals_lh_₀(0))])
//│ 			where
//│ 			def head_lz_lh_₁(ls²¹) = 
//│ 				case force⁰(ls²¹) of {
//│ 					LH_C h⁴ t⁴ => h⁴
//│ 					| LH_N  => error⁰}
//│ 			def tail_lz_lh_₁(ls²²) = 
//│ 				case force⁰(ls²²) of {
//│ 					LH_C h¹¹ t¹¹ => t¹¹
//│ 					| LH_N  => error⁰}
//│ 			def zarks_lh_₀(_lh_zarks_arg1³) = 
//│ 				zipWith_lz_lz_lh_₁(zark_lh_₀, ints_lh_₂(0), map_lz_lh_₃((fun n⁵ -> (2.0 *. n⁵)), ints_lh_₃(0)))
//│ 				where
//│ 				def ints_lh_₂(_lh_ints_arg1¹⁰) = 
//│ 					enumFromFloat_lh_₂(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₂(_lh_enumFromFloat_arg1¹¹) = 
//│ 						lazy⁰(
//│ 							let tx⁸ = enumFromFloat_lh_₂((_lh_enumFromFloat_arg1¹¹ +. 1.0))
//│ 							in let hx⁸ = _lh_enumFromFloat_arg1¹¹
//│ 							in (fun f²⁹ -> (fun ys¹² -> force⁰(ys¹², f²⁹, hx⁸, tx⁸))))
//│ 				def ints_lh_₃(_lh_ints_arg1⁹) = 
//│ 					enumFromFloat_lh_₃(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₃(_lh_enumFromFloat_arg1¹²) = 
//│ 						lazy⁰(
//│ 							let t¹⁹ = enumFromFloat_lh_₃((_lh_enumFromFloat_arg1¹² +. 1.0))
//│ 							in let h¹⁹ = _lh_enumFromFloat_arg1¹²
//│ 							in (fun f³⁰ -> 
//│ 								let ty⁷ = map_lz_lh_₃(f³⁰, t¹⁹)
//│ 								in let hy⁷ = f³⁰(h¹⁹)
//│ 								in (fun f³¹ -> (fun hx⁹ -> (fun tx⁹ -> [LH_C f³¹(hx⁹, hy⁷) zipWith_lz_lz_lh_₁(f³¹, tx⁹, ty⁷)])))))
//│ 				def map_lz_lh_₃(f²¹, ls¹⁸) = 
//│ 					lazy⁰(force⁰(ls¹⁸, f²¹))
//│ 				def zark_lh_₀(_lh_zark_arg1³, _lh_zark_arg2³) = 
//│ 					integrate2D_lh_₀(0.0, _lh_zark_arg1³, 0.0, _lh_zark_arg2³, (fun x⁶ -> (fun y⁶ -> (x⁶ *. y⁶))))
//│ 					where
//│ 					def integrate2D_lh_₀(_lh_integrate2D_arg1⁴, _lh_integrate2D_arg2⁴, _lh_integrate2D_arg3⁴, _lh_integrate2D_arg4⁴, _lh_integrate2D_arg5⁴) = 
//│ 						integrate1D_lh_₀(_lh_integrate2D_arg3⁴, _lh_integrate2D_arg4⁴, (fun y⁹ -> integrate1D_lh_₁(_lh_integrate2D_arg1⁴, _lh_integrate2D_arg2⁴, (fun x⁹ -> _lh_integrate2D_arg5⁴(x⁹, y⁹)))))
//│ 						where
//│ 						def integrate1D_lh_₀(_lh_integrate1D_arg1⁶, _lh_integrate1D_arg2⁶, _lh_integrate1D_arg3⁶) = 
//│ 							let d⁶ = ((_lh_integrate1D_arg2⁶ -. _lh_integrate1D_arg1⁶) /. 8.0)
//│ 							in (d⁶ *. sumFloat_lh_₀(
//│ 								let _lh_sumFloat_LH_C_1⁵⁶ = 	
//│ 									let _lh_sumFloat_LH_C_1⁵⁷ = 	
//│ 										let _lh_sumFloat_LH_C_1⁵⁸ = 	
//│ 											let _lh_sumFloat_LH_C_1⁵⁹ = 	
//│ 												let _lh_sumFloat_LH_C_1⁶⁰ = 	
//│ 													let _lh_sumFloat_LH_C_1⁶¹ = 	
//│ 														let _lh_sumFloat_LH_C_1⁶² = 	
//│ 															let _lh_sumFloat_LH_C_1⁶³ = 	
//│ 																let _lh_sumFloat_LH_C_1⁶⁴ = (fun _lh_dummy⁶⁶ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0⁵⁶ = (_lh_integrate1D_arg3⁶(_lh_integrate1D_arg2⁶) *. 0.5)
//│ 																in (fun _lh_dummy⁶⁷ -> (_lh_sumFloat_LH_C_0⁵⁶ +. sumFloat_lh_₁(_lh_sumFloat_LH_C_1⁶⁴)))
//│ 															in let _lh_sumFloat_LH_C_0⁵⁷ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg2⁶ -. d⁶))
//│ 															in (fun _lh_dummy⁶⁸ -> (_lh_sumFloat_LH_C_0⁵⁷ +. sumFloat_lh_₂(_lh_sumFloat_LH_C_1⁶³)))
//│ 														in let _lh_sumFloat_LH_C_0⁵⁸ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg2⁶ -. (2.0 *. d⁶)))
//│ 														in (fun _lh_dummy⁶⁹ -> (_lh_sumFloat_LH_C_0⁵⁸ +. sumFloat_lh_₃(_lh_sumFloat_LH_C_1⁶²)))
//│ 													in let _lh_sumFloat_LH_C_0⁵⁹ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg2⁶ -. (3.0 *. d⁶)))
//│ 													in (fun _lh_dummy⁷⁰ -> (_lh_sumFloat_LH_C_0⁵⁹ +. sumFloat_lh_₄(_lh_sumFloat_LH_C_1⁶¹)))
//│ 												in let _lh_sumFloat_LH_C_0⁶⁰ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg1⁶ +. (4.0 *. d⁶)))
//│ 												in (fun _lh_dummy⁷¹ -> (_lh_sumFloat_LH_C_0⁶⁰ +. sumFloat_lh_₅(_lh_sumFloat_LH_C_1⁶⁰)))
//│ 											in let _lh_sumFloat_LH_C_0⁶¹ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg1⁶ +. (3.0 *. d⁶)))
//│ 											in (fun _lh_dummy⁷² -> (_lh_sumFloat_LH_C_0⁶¹ +. sumFloat_lh_₆(_lh_sumFloat_LH_C_1⁵⁹)))
//│ 										in let _lh_sumFloat_LH_C_0⁶² = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg1⁶ +. (2.0 *. d⁶)))
//│ 										in (fun _lh_dummy⁷³ -> (_lh_sumFloat_LH_C_0⁶² +. sumFloat_lh_₇(_lh_sumFloat_LH_C_1⁵⁸)))
//│ 									in let _lh_sumFloat_LH_C_0⁶³ = _lh_integrate1D_arg3⁶((_lh_integrate1D_arg1⁶ +. d⁶))
//│ 									in (fun _lh_dummy⁷⁴ -> (_lh_sumFloat_LH_C_0⁶³ +. sumFloat_lh_₈(_lh_sumFloat_LH_C_1⁵⁷)))
//│ 								in let _lh_sumFloat_LH_C_0⁶⁴ = (_lh_integrate1D_arg3⁶(_lh_integrate1D_arg1⁶) *. 0.5)
//│ 								in (fun _lh_dummy⁷⁵ -> (_lh_sumFloat_LH_C_0⁶⁴ +. sumFloat_lh_₉(_lh_sumFloat_LH_C_1⁵⁶)))))
//│ 							where
//│ 							def sumFloat_lh_₀(_lh_sumFloat_arg1⁷⁵) = 
//│ 								_lh_sumFloat_arg1⁷⁵(99)
//│ 							def sumFloat_lh_₁(_lh_sumFloat_arg1⁶²) = 
//│ 								_lh_sumFloat_arg1⁶²(99)
//│ 							def sumFloat_lh_₂(_lh_sumFloat_arg1⁸⁴) = 
//│ 								_lh_sumFloat_arg1⁸⁴(99)
//│ 							def sumFloat_lh_₃(_lh_sumFloat_arg1⁵²) = 
//│ 								_lh_sumFloat_arg1⁵²(99)
//│ 							def sumFloat_lh_₄(_lh_sumFloat_arg1⁷⁰) = 
//│ 								_lh_sumFloat_arg1⁷⁰(99)
//│ 							def sumFloat_lh_₅(_lh_sumFloat_arg1⁶¹) = 
//│ 								_lh_sumFloat_arg1⁶¹(99)
//│ 							def sumFloat_lh_₆(_lh_sumFloat_arg1⁵⁴) = 
//│ 								_lh_sumFloat_arg1⁵⁴(99)
//│ 							def sumFloat_lh_₇(_lh_sumFloat_arg1⁷⁹) = 
//│ 								_lh_sumFloat_arg1⁷⁹(99)
//│ 							def sumFloat_lh_₈(_lh_sumFloat_arg1⁶⁹) = 
//│ 								_lh_sumFloat_arg1⁶⁹(99)
//│ 							def sumFloat_lh_₉(_lh_sumFloat_arg1⁸³) = 
//│ 								_lh_sumFloat_arg1⁸³(99)
//│ 						def integrate1D_lh_₁(_lh_integrate1D_arg1⁷, _lh_integrate1D_arg2⁷, _lh_integrate1D_arg3⁷) = 
//│ 							let d⁷ = ((_lh_integrate1D_arg2⁷ -. _lh_integrate1D_arg1⁷) /. 8.0)
//│ 							in (d⁷ *. sumFloat_lh_₁₀(
//│ 								let _lh_sumFloat_LH_C_1⁶⁵ = 	
//│ 									let _lh_sumFloat_LH_C_1⁶⁶ = 	
//│ 										let _lh_sumFloat_LH_C_1⁶⁷ = 	
//│ 											let _lh_sumFloat_LH_C_1⁶⁸ = 	
//│ 												let _lh_sumFloat_LH_C_1⁶⁹ = 	
//│ 													let _lh_sumFloat_LH_C_1⁷⁰ = 	
//│ 														let _lh_sumFloat_LH_C_1⁷¹ = 	
//│ 															let _lh_sumFloat_LH_C_1⁷² = 	
//│ 																let _lh_sumFloat_LH_C_1⁷³ = (fun _lh_dummy⁷⁷ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0⁶⁵ = (_lh_integrate1D_arg3⁷(_lh_integrate1D_arg2⁷) *. 0.5)
//│ 																in (fun _lh_dummy⁷⁸ -> (_lh_sumFloat_LH_C_0⁶⁵ +. sumFloat_lh_₁₁(_lh_sumFloat_LH_C_1⁷³)))
//│ 															in let _lh_sumFloat_LH_C_0⁶⁶ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg2⁷ -. d⁷))
//│ 															in (fun _lh_dummy⁷⁹ -> (_lh_sumFloat_LH_C_0⁶⁶ +. sumFloat_lh_₁₂(_lh_sumFloat_LH_C_1⁷²)))
//│ 														in let _lh_sumFloat_LH_C_0⁶⁷ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg2⁷ -. (2.0 *. d⁷)))
//│ 														in (fun _lh_dummy⁸⁰ -> (_lh_sumFloat_LH_C_0⁶⁷ +. sumFloat_lh_₁₃(_lh_sumFloat_LH_C_1⁷¹)))
//│ 													in let _lh_sumFloat_LH_C_0⁶⁸ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg2⁷ -. (3.0 *. d⁷)))
//│ 													in (fun _lh_dummy⁸¹ -> (_lh_sumFloat_LH_C_0⁶⁸ +. sumFloat_lh_₁₄(_lh_sumFloat_LH_C_1⁷⁰)))
//│ 												in let _lh_sumFloat_LH_C_0⁶⁹ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg1⁷ +. (4.0 *. d⁷)))
//│ 												in (fun _lh_dummy⁸² -> (_lh_sumFloat_LH_C_0⁶⁹ +. sumFloat_lh_₁₅(_lh_sumFloat_LH_C_1⁶⁹)))
//│ 											in let _lh_sumFloat_LH_C_0⁷⁰ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg1⁷ +. (3.0 *. d⁷)))
//│ 											in (fun _lh_dummy⁸³ -> (_lh_sumFloat_LH_C_0⁷⁰ +. sumFloat_lh_₁₆(_lh_sumFloat_LH_C_1⁶⁸)))
//│ 										in let _lh_sumFloat_LH_C_0⁷¹ = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg1⁷ +. (2.0 *. d⁷)))
//│ 										in (fun _lh_dummy⁸⁴ -> (_lh_sumFloat_LH_C_0⁷¹ +. sumFloat_lh_₁₇(_lh_sumFloat_LH_C_1⁶⁷)))
//│ 									in let _lh_sumFloat_LH_C_0⁷² = _lh_integrate1D_arg3⁷((_lh_integrate1D_arg1⁷ +. d⁷))
//│ 									in (fun _lh_dummy⁸⁵ -> (_lh_sumFloat_LH_C_0⁷² +. sumFloat_lh_₁₈(_lh_sumFloat_LH_C_1⁶⁶)))
//│ 								in let _lh_sumFloat_LH_C_0⁷³ = (_lh_integrate1D_arg3⁷(_lh_integrate1D_arg1⁷) *. 0.5)
//│ 								in (fun _lh_dummy⁸⁶ -> (_lh_sumFloat_LH_C_0⁷³ +. sumFloat_lh_₁₉(_lh_sumFloat_LH_C_1⁶⁵)))))
//│ 							where
//│ 							def sumFloat_lh_₁₀(_lh_sumFloat_arg1⁸⁰) = 
//│ 								_lh_sumFloat_arg1⁸⁰(99)
//│ 							def sumFloat_lh_₁₁(_lh_sumFloat_arg1⁴³) = 
//│ 								_lh_sumFloat_arg1⁴³(99)
//│ 							def sumFloat_lh_₁₂(_lh_sumFloat_arg1⁵⁶) = 
//│ 								_lh_sumFloat_arg1⁵⁶(99)
//│ 							def sumFloat_lh_₁₃(_lh_sumFloat_arg1⁵¹) = 
//│ 								_lh_sumFloat_arg1⁵¹(99)
//│ 							def sumFloat_lh_₁₄(_lh_sumFloat_arg1⁵⁵) = 
//│ 								_lh_sumFloat_arg1⁵⁵(99)
//│ 							def sumFloat_lh_₁₅(_lh_sumFloat_arg1⁴⁹) = 
//│ 								_lh_sumFloat_arg1⁴⁹(99)
//│ 							def sumFloat_lh_₁₆(_lh_sumFloat_arg1⁷⁶) = 
//│ 								_lh_sumFloat_arg1⁷⁶(99)
//│ 							def sumFloat_lh_₁₇(_lh_sumFloat_arg1⁸¹) = 
//│ 								_lh_sumFloat_arg1⁸¹(99)
//│ 							def sumFloat_lh_₁₈(_lh_sumFloat_arg1⁶⁸) = 
//│ 								_lh_sumFloat_arg1⁶⁸(99)
//│ 							def sumFloat_lh_₁₉(_lh_sumFloat_arg1⁷⁴) = 
//│ 								_lh_sumFloat_arg1⁷⁴(99)
//│ 				def zipWith_lz_lz_lh_₁(f²³, xs⁹, ys¹⁰) = 
//│ 					lazy⁰(force⁰(xs⁹, f²³, ys¹⁰))
//│ 			def zarks_lh_₁(_lh_zarks_arg1⁴) = 
//│ 				zipWith_lz_lz_lh_₂(zark_lh_₁, ints_lh_₄(0), map_lz_lh_₄((fun n⁷ -> (2.0 *. n⁷)), ints_lh_₅(0)))
//│ 				where
//│ 				def ints_lh_₄(_lh_ints_arg1¹²) = 
//│ 					enumFromFloat_lh_₄(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₄(_lh_enumFromFloat_arg1⁷) = 
//│ 						lazy⁰(
//│ 							let tx⁶ = enumFromFloat_lh_₄((_lh_enumFromFloat_arg1⁷ +. 1.0))
//│ 							in let hx⁶ = _lh_enumFromFloat_arg1⁷
//│ 							in (fun f¹³ -> (fun ys⁶ -> force⁰(ys⁶, f¹³, hx⁶, tx⁶))))
//│ 				def ints_lh_₅(_lh_ints_arg1⁷) = 
//│ 					enumFromFloat_lh_₅(1.0)
//│ 					where
//│ 					def enumFromFloat_lh_₅(_lh_enumFromFloat_arg1⁸) = 
//│ 						lazy⁰(
//│ 							let t¹⁴ = enumFromFloat_lh_₅((_lh_enumFromFloat_arg1⁸ +. 1.0))
//│ 							in let h¹⁴ = _lh_enumFromFloat_arg1⁸
//│ 							in (fun f¹⁶ -> 
//│ 								let ty⁶ = map_lz_lh_₄(f¹⁶, t¹⁴)
//│ 								in let hy⁶ = f¹⁶(h¹⁴)
//│ 								in (fun f¹⁷ -> (fun hx⁷ -> (fun tx⁷ -> [LH_C f¹⁷(hx⁷, hy⁶) zipWith_lz_lz_lh_₂(f¹⁷, tx⁷, ty⁶)])))))
//│ 				def map_lz_lh_₄(f¹², ls¹⁴) = 
//│ 					lazy⁰(force⁰(ls¹⁴, f¹²))
//│ 				def zark_lh_₁(_lh_zark_arg1⁴, _lh_zark_arg2⁴) = 
//│ 					integrate2D_lh_₁(0.0, _lh_zark_arg1⁴, 0.0, _lh_zark_arg2⁴, (fun x⁸ -> (fun y⁸ -> (x⁸ *. y⁸))))
//│ 					where
//│ 					def integrate2D_lh_₁(_lh_integrate2D_arg1³, _lh_integrate2D_arg2³, _lh_integrate2D_arg3³, _lh_integrate2D_arg4³, _lh_integrate2D_arg5³) = 
//│ 						integrate1D_lh_₂(_lh_integrate2D_arg3³, _lh_integrate2D_arg4³, (fun y⁷ -> integrate1D_lh_₃(_lh_integrate2D_arg1³, _lh_integrate2D_arg2³, (fun x⁷ -> _lh_integrate2D_arg5³(x⁷, y⁷)))))
//│ 						where
//│ 						def integrate1D_lh_₂(_lh_integrate1D_arg1⁸, _lh_integrate1D_arg2⁸, _lh_integrate1D_arg3⁸) = 
//│ 							let d⁸ = ((_lh_integrate1D_arg2⁸ -. _lh_integrate1D_arg1⁸) /. 8.0)
//│ 							in (d⁸ *. sumFloat_lh_₂₀(
//│ 								let _lh_sumFloat_LH_C_1⁷⁵ = 	
//│ 									let _lh_sumFloat_LH_C_1⁷⁶ = 	
//│ 										let _lh_sumFloat_LH_C_1⁷⁷ = 	
//│ 											let _lh_sumFloat_LH_C_1⁷⁸ = 	
//│ 												let _lh_sumFloat_LH_C_1⁷⁹ = 	
//│ 													let _lh_sumFloat_LH_C_1⁸⁰ = 	
//│ 														let _lh_sumFloat_LH_C_1⁸¹ = 	
//│ 															let _lh_sumFloat_LH_C_1⁸² = 	
//│ 																let _lh_sumFloat_LH_C_1⁸³ = (fun _lh_dummy⁹⁰ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0⁷⁵ = (_lh_integrate1D_arg3⁸(_lh_integrate1D_arg2⁸) *. 0.5)
//│ 																in (fun _lh_dummy⁹¹ -> (_lh_sumFloat_LH_C_0⁷⁵ +. sumFloat_lh_₂₁(_lh_sumFloat_LH_C_1⁸³)))
//│ 															in let _lh_sumFloat_LH_C_0⁷⁶ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg2⁸ -. d⁸))
//│ 															in (fun _lh_dummy⁹² -> (_lh_sumFloat_LH_C_0⁷⁶ +. sumFloat_lh_₂₂(_lh_sumFloat_LH_C_1⁸²)))
//│ 														in let _lh_sumFloat_LH_C_0⁷⁷ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg2⁸ -. (2.0 *. d⁸)))
//│ 														in (fun _lh_dummy⁹³ -> (_lh_sumFloat_LH_C_0⁷⁷ +. sumFloat_lh_₂₃(_lh_sumFloat_LH_C_1⁸¹)))
//│ 													in let _lh_sumFloat_LH_C_0⁷⁸ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg2⁸ -. (3.0 *. d⁸)))
//│ 													in (fun _lh_dummy⁹⁴ -> (_lh_sumFloat_LH_C_0⁷⁸ +. sumFloat_lh_₂₄(_lh_sumFloat_LH_C_1⁸⁰)))
//│ 												in let _lh_sumFloat_LH_C_0⁷⁹ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg1⁸ +. (4.0 *. d⁸)))
//│ 												in (fun _lh_dummy⁹⁵ -> (_lh_sumFloat_LH_C_0⁷⁹ +. sumFloat_lh_₂₅(_lh_sumFloat_LH_C_1⁷⁹)))
//│ 											in let _lh_sumFloat_LH_C_0⁸⁰ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg1⁸ +. (3.0 *. d⁸)))
//│ 											in (fun _lh_dummy⁹⁶ -> (_lh_sumFloat_LH_C_0⁸⁰ +. sumFloat_lh_₂₆(_lh_sumFloat_LH_C_1⁷⁸)))
//│ 										in let _lh_sumFloat_LH_C_0⁸¹ = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg1⁸ +. (2.0 *. d⁸)))
//│ 										in (fun _lh_dummy⁹⁷ -> (_lh_sumFloat_LH_C_0⁸¹ +. sumFloat_lh_₂₇(_lh_sumFloat_LH_C_1⁷⁷)))
//│ 									in let _lh_sumFloat_LH_C_0⁸² = _lh_integrate1D_arg3⁸((_lh_integrate1D_arg1⁸ +. d⁸))
//│ 									in (fun _lh_dummy⁹⁸ -> (_lh_sumFloat_LH_C_0⁸² +. sumFloat_lh_₂₈(_lh_sumFloat_LH_C_1⁷⁶)))
//│ 								in let _lh_sumFloat_LH_C_0⁸³ = (_lh_integrate1D_arg3⁸(_lh_integrate1D_arg1⁸) *. 0.5)
//│ 								in (fun _lh_dummy⁹⁹ -> (_lh_sumFloat_LH_C_0⁸³ +. sumFloat_lh_₂₉(_lh_sumFloat_LH_C_1⁷⁵)))))
//│ 							where
//│ 							def sumFloat_lh_₂₀(_lh_sumFloat_arg1⁷³) = 
//│ 								_lh_sumFloat_arg1⁷³(99)
//│ 							def sumFloat_lh_₂₁(_lh_sumFloat_arg1⁴⁸) = 
//│ 								_lh_sumFloat_arg1⁴⁸(99)
//│ 							def sumFloat_lh_₂₂(_lh_sumFloat_arg1⁴⁶) = 
//│ 								_lh_sumFloat_arg1⁴⁶(99)
//│ 							def sumFloat_lh_₂₃(_lh_sumFloat_arg1⁷²) = 
//│ 								_lh_sumFloat_arg1⁷²(99)
//│ 							def sumFloat_lh_₂₄(_lh_sumFloat_arg1⁷⁸) = 
//│ 								_lh_sumFloat_arg1⁷⁸(99)
//│ 							def sumFloat_lh_₂₅(_lh_sumFloat_arg1⁴⁷) = 
//│ 								_lh_sumFloat_arg1⁴⁷(99)
//│ 							def sumFloat_lh_₂₆(_lh_sumFloat_arg1⁶³) = 
//│ 								_lh_sumFloat_arg1⁶³(99)
//│ 							def sumFloat_lh_₂₇(_lh_sumFloat_arg1⁷¹) = 
//│ 								_lh_sumFloat_arg1⁷¹(99)
//│ 							def sumFloat_lh_₂₈(_lh_sumFloat_arg1⁶⁵) = 
//│ 								_lh_sumFloat_arg1⁶⁵(99)
//│ 							def sumFloat_lh_₂₉(_lh_sumFloat_arg1⁵⁸) = 
//│ 								_lh_sumFloat_arg1⁵⁸(99)
//│ 						def integrate1D_lh_₃(_lh_integrate1D_arg1⁵, _lh_integrate1D_arg2⁵, _lh_integrate1D_arg3⁵) = 
//│ 							let d⁵ = ((_lh_integrate1D_arg2⁵ -. _lh_integrate1D_arg1⁵) /. 8.0)
//│ 							in (d⁵ *. sumFloat_lh_₃₀(
//│ 								let _lh_sumFloat_LH_C_1⁴⁷ = 	
//│ 									let _lh_sumFloat_LH_C_1⁴⁸ = 	
//│ 										let _lh_sumFloat_LH_C_1⁴⁹ = 	
//│ 											let _lh_sumFloat_LH_C_1⁵⁰ = 	
//│ 												let _lh_sumFloat_LH_C_1⁵¹ = 	
//│ 													let _lh_sumFloat_LH_C_1⁵² = 	
//│ 														let _lh_sumFloat_LH_C_1⁵³ = 	
//│ 															let _lh_sumFloat_LH_C_1⁵⁴ = 	
//│ 																let _lh_sumFloat_LH_C_1⁵⁵ = (fun _lh_dummy⁵⁶ -> 0.0)
//│ 																in let _lh_sumFloat_LH_C_0⁴⁷ = (_lh_integrate1D_arg3⁵(_lh_integrate1D_arg2⁵) *. 0.5)
//│ 																in (fun _lh_dummy⁵⁷ -> (_lh_sumFloat_LH_C_0⁴⁷ +. sumFloat_lh_₃₁(_lh_sumFloat_LH_C_1⁵⁵)))
//│ 															in let _lh_sumFloat_LH_C_0⁴⁸ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg2⁵ -. d⁵))
//│ 															in (fun _lh_dummy⁵⁸ -> (_lh_sumFloat_LH_C_0⁴⁸ +. sumFloat_lh_₃₂(_lh_sumFloat_LH_C_1⁵⁴)))
//│ 														in let _lh_sumFloat_LH_C_0⁴⁹ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg2⁵ -. (2.0 *. d⁵)))
//│ 														in (fun _lh_dummy⁵⁹ -> (_lh_sumFloat_LH_C_0⁴⁹ +. sumFloat_lh_₃₃(_lh_sumFloat_LH_C_1⁵³)))
//│ 													in let _lh_sumFloat_LH_C_0⁵⁰ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg2⁵ -. (3.0 *. d⁵)))
//│ 													in (fun _lh_dummy⁶⁰ -> (_lh_sumFloat_LH_C_0⁵⁰ +. sumFloat_lh_₃₄(_lh_sumFloat_LH_C_1⁵²)))
//│ 												in let _lh_sumFloat_LH_C_0⁵¹ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg1⁵ +. (4.0 *. d⁵)))
//│ 												in (fun _lh_dummy⁶¹ -> (_lh_sumFloat_LH_C_0⁵¹ +. sumFloat_lh_₃₅(_lh_sumFloat_LH_C_1⁵¹)))
//│ 											in let _lh_sumFloat_LH_C_0⁵² = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg1⁵ +. (3.0 *. d⁵)))
//│ 											in (fun _lh_dummy⁶² -> (_lh_sumFloat_LH_C_0⁵² +. sumFloat_lh_₃₆(_lh_sumFloat_LH_C_1⁵⁰)))
//│ 										in let _lh_sumFloat_LH_C_0⁵³ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg1⁵ +. (2.0 *. d⁵)))
//│ 										in (fun _lh_dummy⁶³ -> (_lh_sumFloat_LH_C_0⁵³ +. sumFloat_lh_₃₇(_lh_sumFloat_LH_C_1⁴⁹)))
//│ 									in let _lh_sumFloat_LH_C_0⁵⁴ = _lh_integrate1D_arg3⁵((_lh_integrate1D_arg1⁵ +. d⁵))
//│ 									in (fun _lh_dummy⁶⁴ -> (_lh_sumFloat_LH_C_0⁵⁴ +. sumFloat_lh_₃₈(_lh_sumFloat_LH_C_1⁴⁸)))
//│ 								in let _lh_sumFloat_LH_C_0⁵⁵ = (_lh_integrate1D_arg3⁵(_lh_integrate1D_arg1⁵) *. 0.5)
//│ 								in (fun _lh_dummy⁶⁵ -> (_lh_sumFloat_LH_C_0⁵⁵ +. sumFloat_lh_₃₉(_lh_sumFloat_LH_C_1⁴⁷)))))
//│ 							where
//│ 							def sumFloat_lh_₃₀(_lh_sumFloat_arg1⁷⁷) = 
//│ 								_lh_sumFloat_arg1⁷⁷(99)
//│ 							def sumFloat_lh_₃₁(_lh_sumFloat_arg1⁶⁰) = 
//│ 								_lh_sumFloat_arg1⁶⁰(99)
//│ 							def sumFloat_lh_₃₂(_lh_sumFloat_arg1⁸²) = 
//│ 								_lh_sumFloat_arg1⁸²(99)
//│ 							def sumFloat_lh_₃₃(_lh_sumFloat_arg1⁶⁴) = 
//│ 								_lh_sumFloat_arg1⁶⁴(99)
//│ 							def sumFloat_lh_₃₄(_lh_sumFloat_arg1⁶⁶) = 
//│ 								_lh_sumFloat_arg1⁶⁶(99)
//│ 							def sumFloat_lh_₃₅(_lh_sumFloat_arg1⁴⁵) = 
//│ 								_lh_sumFloat_arg1⁴⁵(99)
//│ 							def sumFloat_lh_₃₆(_lh_sumFloat_arg1⁵³) = 
//│ 								_lh_sumFloat_arg1⁵³(99)
//│ 							def sumFloat_lh_₃₇(_lh_sumFloat_arg1⁵⁰) = 
//│ 								_lh_sumFloat_arg1⁵⁰(99)
//│ 							def sumFloat_lh_₃₈(_lh_sumFloat_arg1⁵⁷) = 
//│ 								_lh_sumFloat_arg1⁵⁷(99)
//│ 							def sumFloat_lh_₃₉(_lh_sumFloat_arg1⁵⁹) = 
//│ 								_lh_sumFloat_arg1⁵⁹(99)
//│ 				def zipWith_lz_lz_lh_₂(f¹⁸, xs⁷, ys⁸) = 
//│ 					lazy⁰(force⁰(xs⁷, f¹⁸, ys⁸))
//│ 			def zipWith_lz_lz_lh_₃(f¹⁹, xs⁸, ys⁹) = 
//│ 				lazy⁰(case force⁰(xs⁸) of {
//│ 					LH_C hx⁵ tx⁵ => case force⁰(ys⁹) of {
//│ 						LH_C hy⁵ ty⁵ => [LH_C f¹⁹(hx⁵, hy⁵) zipWith_lz_lz_lh_₃(f¹⁹, tx⁵, ty⁵)]
//│ 						| LH_N  => [LH_N]}
//│ 					| LH_N  => [LH_N]})
//│ 		def sumFloat_lh_₄₀(_lh_sumFloat_arg1⁴⁴) = 
//│ 			_lh_sumFloat_arg1⁴⁴(99)
//│ 		def take_lz_lh_₀(n⁶, ls¹⁷) = 
//│ 			if (n⁶ > 0) then force⁰(ls¹⁷, n⁶) else (fun _lh_dummy⁷⁶ -> 0.0)
//│ 			where
//│ 			def sumFloat_lh_₄₁(_lh_sumFloat_arg1⁶⁷) = 
//│ 				_lh_sumFloat_arg1⁶⁷(99)
//│ 		def zipWith_lz_lz_lh_₄(f²⁵, xs¹⁰, ys¹¹) = 
//│ 			lazy⁰(case force⁰(xs¹⁰) of {
//│ 				LH_C hx⁴ tx⁴ => case force⁰(ys¹¹) of {
//│ 					LH_C hy⁴ ty⁴ => 
//│ 						let t¹⁷ = zipWith_lz_lz_lh_₄(f²⁵, tx⁴, ty⁴)
//│ 						in let h¹⁷ = f²⁵(hx⁴, hy⁴)
//│ 						in (fun f²⁶ -> 
//│ 							let t¹⁸ = map_lz_lh_₂(f²⁶, t¹⁷)
//│ 							in let h¹⁸ = f²⁶(h¹⁷)
//│ 							in (fun n⁸ -> 
//│ 								let _lh_sumFloat_LH_C_1⁷⁴ = take_lz_lh_₀((n⁸ - 1), t¹⁸)
//│ 								in let _lh_sumFloat_LH_C_0⁷⁴ = h¹⁸
//│ 								in (fun _lh_dummy⁸⁷ -> (_lh_sumFloat_LH_C_0⁷⁴ +. sumFloat_lh_₄₁(_lh_sumFloat_LH_C_1⁷⁴)))))
//│ 					| LH_N  => (fun f²⁷ -> (fun n⁹ -> (fun _lh_dummy⁸⁸ -> 0.0)))}
//│ 				| LH_N  => (fun f²⁸ -> (fun n¹⁰ -> (fun _lh_dummy⁸⁹ -> 0.0)))})
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
