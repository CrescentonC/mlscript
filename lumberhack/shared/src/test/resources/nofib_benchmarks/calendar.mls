


// infixr 5 `above`, `beside`
// type Picture   =  [[Char]]
// height, width :: Picture -> Int
// above, beside :: Picture -> Picture -> Picture
// above          = (++)
// beside         = zipWith (++)
// stack, spread :: [Picture] -> Picture
// emptyPic      :: (Int,Int) -> Picture
// block, blockT :: Int -> [Picture] -> Picture
// groop         :: Int -> [a] -> [[a]]
// lframe        :: (Int,Int) -> Picture -> Picture

:lhInHaskell
:lhGenOCaml
zip3 xs ys zs = case xs of {
                  (hx:tx) -> case ys of {
                    (hy:ty) -> case zs of {
                      (hz:tz) -> (hx, hy, hz):(zip3 tx ty tz);
                      [] -> []
                    };
                    [] -> []
                  };
                  [] -> []
                }
unlines ls = concat $ map (\l -> l ++ ['n']) ls
foldr1 f (h:t) = foldr f h t
foldr1 f _ = error
scanl f q ls   = q : (case ls of
                               []   -> [];
                               x:xs -> scanl f (f q x) xs)
drop n []      = []
drop n (h:t)   = if n > 0 then (drop (n - 1) t) else t
copy n a       = if n > 0 then (a:(copy (n - 1) a)) else []
height p       = length p
width  p       = length (head p)
stack ls       = foldr1 (\a b -> a ++ b) ls
spread ls      = foldr1 (\a b -> zipWith mappend a b) ls
emptyPic (h,w) = copy h (copy w ' ')
block n        = stack . (map spread) . (groop n)
blockT n       = spread . (map stack) . (groop n)
groop n []     = []
groop n xs     = take n xs : (groop n (drop n xs))
lframe (m,n) p = let h = height p in (let w = width p in ((zipWith mappend p (emptyPic (h,n-w))) ++ (emptyPic (m-h,n))))
monthLengths year = let feb = (if (leap year) then 29 else 28) in [31,feb,31,30,31,30,31,31,30,31,30,31]
leap year         = if year`mod`100 == 0 then year`mod`400 == 0
                                         else year`mod`4   == 0
monthNames        = ["January","February","March","April","May","June","July","August","September","October","November","December"]
jan1st year       = let last = (year - 1) in ((year + last`div`4 - last`div`100 + last`div`400) `mod` 7)
firstDays year    = take 12 (map (\a -> a `mod` 7) (scanl (\a b -> a + b) (jan1st year) (monthLengths year)))
date ml d      = if ((d<1) || (ml<d)) then ["   "] else [rjustify 3 (string_of_int d)]
dates fd ml    = map (\d -> date ml d) [(1-fd)..(42-fd)]
cal year       = unlines ((banner year) ++ (body year))
                  where
                    banner yr      = [cjustify 75 (string_of_int yr)] ++ (emptyPic (1,75))
                    body           = (block 3) . (map (pad . pic)) . months
                    pic (mn,fd,ml) = (title mn) ++ (table fd ml)
                    pad p          = (zipWith mappend (zipWith mappend (side) p) (side)) ++ (end)
                    side         = emptyPic (8,2)
                    end          = emptyPic (1,25)
                    title mn       = [cjustify 21 mn]
                    table fd ml    = daynames ++ (entries fd ml)
                    daynames       = [" Su Mo Tu We Th Fr Sa"]
                    entries fd ml  = block 7 (dates fd ml)
                    months yer    = zip3 monthNames (firstDays yer) (monthLengths yer)
cjustify n s = let m = (n - length s) in (let halfm = (m `div` 2) in ((space halfm) ++ s ++ (space (m - halfm))))
ljustify n s = s ++ (space (n - (length s)))
rjustify n s = (space (n - (length s))) ++ s
space n      = copy n ' '
testCalendar_nofib n = map (\n -> length $ cal n) $ primId [1993..(1993+n)]
testCalendar_nofib $ primId 100
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> after expansion >>>>>>>>>>
//│ testCalendar_nofib_lh_₁(primId⁰(100))
//│ def block_lh_₁(_lh_block_arg1¹, _lh_funcomp_x²) = (fun _lh_funcomp_x³ -> stack_lh_₁(map_lh_₄(spread_lh_₁, _lh_funcomp_x³)))(groop_lh_₁(_lh_block_arg1¹, _lh_funcomp_x²))
//│ def block_lh_₂(_lh_block_arg1⁰, _lh_funcomp_x⁰) = (fun _lh_funcomp_x¹ -> stack_lh_₂(map_lh_₇(spread_lh_₂, _lh_funcomp_x¹)))(groop_lh_₂(_lh_block_arg1⁰, _lh_funcomp_x⁰))
//│ def cal_lh_₁(_lh_cal_arg1⁰) = 
//│ 	let pic⁰ = (fun _lh_pic_arg1⁰ -> case _lh_pic_arg1⁰ of {
//│ 			LH_P3 _lh_pic_LH_P3_0⁰ _lh_pic_LH_P3_1⁰ _lh_pic_LH_P3_2⁰ => mappend_lh_₁(title⁰(_lh_pic_LH_P3_0⁰), table⁰(_lh_pic_LH_P3_1⁰, _lh_pic_LH_P3_2⁰))})
//│ 	and table⁰ = (fun _lh_table_arg1⁰ -> (fun _lh_table_arg2⁰ -> mappend_lh_₆(daynames⁰, entries⁰(_lh_table_arg1⁰, _lh_table_arg2⁰))))
//│ 	and daynames⁰ = [LH_C [LH_C ' ' [LH_C 'S' [LH_C 'u' [LH_C ' ' [LH_C 'M' [LH_C 'o' [LH_C ' ' [LH_C 'T' [LH_C 'u' [LH_C ' ' [LH_C 'W' [LH_C 'e' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C ' ' [LH_C 'F' [LH_C 'r' [LH_C ' ' [LH_C 'S' [LH_C 'a' [LH_N]]]]]]]]]]]]]]]]]]]]]] [LH_N]]
//│ 	and pad⁰ = (fun _lh_pad_arg1⁰ -> mappend_lh_₅(zipWith_lh_₁(mappend_lh_₇, zipWith_lh_₂(mappend_lh_₂, side⁰, _lh_pad_arg1⁰), side⁰), end⁰))
//│ 	and months⁰ = (fun _lh_months_arg1⁰ -> zip3_lh_₁(monthNames_lh_₁, firstDays_lh_₁(_lh_months_arg1⁰), monthLengths_lh_₁(_lh_months_arg1⁰)))
//│ 	and entries⁰ = (fun _lh_entries_arg1⁰ -> (fun _lh_entries_arg2⁰ -> block_lh_₂(7, dates_lh_₁(_lh_entries_arg1⁰, _lh_entries_arg2⁰))))
//│ 	and side⁰ = emptyPic_lh_₁([LH_P2 8 2])
//│ 	and body⁰ = (fun _lh_funcomp_x⁴ -> (fun _lh_funcomp_x⁵ -> block_lh_₁(3, map_lh_₂((fun _lh_funcomp_x⁶ -> pad⁰(pic⁰(_lh_funcomp_x⁶))), _lh_funcomp_x⁵)))(months⁰(_lh_funcomp_x⁴)))
//│ 	and banner⁰ = (fun _lh_banner_arg1⁰ -> mappend_lh_₃([LH_C cjustify_lh_₂(75, string_of_int⁰(_lh_banner_arg1⁰)) [LH_N]], emptyPic_lh_₂([LH_P2 1 75])))
//│ 	and end⁰ = emptyPic_lh_₃([LH_P2 1 25])
//│ 	and title⁰ = (fun _lh_title_arg1⁰ -> [LH_C cjustify_lh_₁(21, _lh_title_arg1⁰) [LH_N]]) 
//│ 	in unlines_lh_₁(mappend_lh_₄(banner⁰(_lh_cal_arg1⁰), body⁰(_lh_cal_arg1⁰)))
//│ def cjustify_lh_₁(_lh_cjustify_arg1¹, _lh_cjustify_arg2¹) = 
//│ 	let m¹ = (_lh_cjustify_arg1¹ - length_lh_₂(_lh_cjustify_arg2¹))
//│ 	in let halfm¹ = div⁰(m¹, 2)
//│ 	in mappend_lh_₉(mappend_lh_₈(space_lh_₁(halfm¹), _lh_cjustify_arg2¹), space_lh_₂((m¹ - halfm¹)))
//│ def cjustify_lh_₂(_lh_cjustify_arg1⁰, _lh_cjustify_arg2⁰) = 
//│ 	let m⁰ = (_lh_cjustify_arg1⁰ - length_lh_₃(_lh_cjustify_arg2⁰))
//│ 	in let halfm⁰ = div⁰(m⁰, 2)
//│ 	in mappend_lh_₁₁(mappend_lh_₁₀(space_lh_₄(halfm⁰), _lh_cjustify_arg2⁰), space_lh_₃((m⁰ - halfm⁰)))
//│ def concat_lh_₁(lss⁰) = case lss⁰ of {
//│ 	LH_C h⁴ t⁴ => mappend_lh_₁₂(h⁴, concat_lh_₁(t⁴))
//│ 	| LH_N  => [LH_N]}
//│ def copy_lh_₁(_lh_copy_arg1⁵, _lh_copy_arg2⁵) = if (_lh_copy_arg1⁵ > 0) then [LH_C _lh_copy_arg2⁵ copy_lh_₁((_lh_copy_arg1⁵ - 1), _lh_copy_arg2⁵)] else [LH_N]
//│ def copy_lh_₂(_lh_copy_arg1⁴, _lh_copy_arg2⁴) = if (_lh_copy_arg1⁴ > 0) then [LH_C _lh_copy_arg2⁴ copy_lh_₂((_lh_copy_arg1⁴ - 1), _lh_copy_arg2⁴)] else [LH_N]
//│ def copy_lh_₃(_lh_copy_arg1³, _lh_copy_arg2³) = if (_lh_copy_arg1³ > 0) then [LH_C _lh_copy_arg2³ copy_lh_₃((_lh_copy_arg1³ - 1), _lh_copy_arg2³)] else [LH_N]
//│ def copy_lh_₄(_lh_copy_arg1², _lh_copy_arg2²) = if (_lh_copy_arg1² > 0) then [LH_C _lh_copy_arg2² copy_lh_₄((_lh_copy_arg1² - 1), _lh_copy_arg2²)] else [LH_N]
//│ def copy_lh_₅(_lh_copy_arg1¹, _lh_copy_arg2¹) = if (_lh_copy_arg1¹ > 0) then [LH_C _lh_copy_arg2¹ copy_lh_₅((_lh_copy_arg1¹ - 1), _lh_copy_arg2¹)] else [LH_N]
//│ def copy_lh_₆(_lh_copy_arg1⁰, _lh_copy_arg2⁰) = if (_lh_copy_arg1⁰ > 0) then [LH_C _lh_copy_arg2⁰ copy_lh_₆((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)] else [LH_N]
//│ def date_lh_₁(_lh_date_arg1⁰, _lh_date_arg2⁰) = if ((_lh_date_arg2⁰ < 1) || (_lh_date_arg1⁰ < _lh_date_arg2⁰)) then [LH_C [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_N]]]] [LH_N]] else [LH_C rjustify_lh_₁(3, string_of_int⁰(_lh_date_arg2⁰)) [LH_N]]
//│ def dates_lh_₁(_lh_dates_arg1⁰, _lh_dates_arg2⁰) = map_lh_₅((fun d⁰ -> date_lh_₁(_lh_dates_arg2⁰, d⁰)), enumFromTo_lh_₂((1 - _lh_dates_arg1⁰), (42 - _lh_dates_arg1⁰)))
//│ def drop_lh_₁(_lh_drop_arg1⁰, _lh_drop_arg2⁰) = case _lh_drop_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh_₁((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰}
//│ def emptyPic_lh_₁(_lh_emptyPic_arg1²) = case _lh_emptyPic_arg1² of {
//│ 	LH_P2 _lh_emptyPic_LH_P2_0² _lh_emptyPic_LH_P2_1² => copy_lh_₁(_lh_emptyPic_LH_P2_0², copy_lh_₂(_lh_emptyPic_LH_P2_1², ' '))}
//│ def emptyPic_lh_₂(_lh_emptyPic_arg1¹) = case _lh_emptyPic_arg1¹ of {
//│ 	LH_P2 _lh_emptyPic_LH_P2_0¹ _lh_emptyPic_LH_P2_1¹ => copy_lh_₃(_lh_emptyPic_LH_P2_0¹, copy_lh_₄(_lh_emptyPic_LH_P2_1¹, ' '))}
//│ def emptyPic_lh_₃(_lh_emptyPic_arg1⁰) = case _lh_emptyPic_arg1⁰ of {
//│ 	LH_P2 _lh_emptyPic_LH_P2_0⁰ _lh_emptyPic_LH_P2_1⁰ => copy_lh_₅(_lh_emptyPic_LH_P2_0⁰, copy_lh_₆(_lh_emptyPic_LH_P2_1⁰, ' '))}
//│ def enumFromTo_lh_₁(a⁷, b⁶) = if (a⁷ <= b⁶) then [LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁶)] else [LH_N]
//│ def enumFromTo_lh_₂(a², b²) = if (a² <= b²) then [LH_C a² enumFromTo_lh_₂((a² + 1), b²)] else [LH_N]
//│ def firstDays_lh_₁(_lh_firstDays_arg1⁰) = take_lh_₁(12, map_lh_₃((fun a⁵ -> (a⁵ % 7)), scanl_lh_₁((fun a⁶ -> (fun b⁵ -> (a⁶ + b⁵))), jan1st_lh_₁(_lh_firstDays_arg1⁰), monthLengths_lh_₂(_lh_firstDays_arg1⁰))))
//│ def foldr1_lh_₁(_lh_foldr1_arg1⁰, _lh_foldr1_arg2⁰) = case _lh_foldr1_arg2⁰ of {
//│ 	LH_C _lh_foldr1_LH_C_0⁰ _lh_foldr1_LH_C_1⁰ => foldr_lh_₁(_lh_foldr1_arg1⁰, _lh_foldr1_LH_C_0⁰, _lh_foldr1_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def foldr_lh_₁(f⁰, i⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => f⁰(h⁰, foldr_lh_₁(f⁰, i⁰, t⁰))
//│ 	| LH_N  => i⁰}
//│ def groop_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹) = case _lh_groop_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| _  => [LH_C take_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹) groop_lh_₁(_lh_groop_arg1¹, drop_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹))]}
//│ def groop_lh_₂(_lh_groop_arg1⁰, _lh_groop_arg2⁰) = case _lh_groop_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| _  => [LH_C take_lh_₁(_lh_groop_arg1⁰, _lh_groop_arg2⁰) groop_lh_₂(_lh_groop_arg1⁰, drop_lh_₁(_lh_groop_arg1⁰, _lh_groop_arg2⁰))]}
//│ def jan1st_lh_₁(_lh_jan1st_arg1⁰) = 
//│ 	let last⁰ = (_lh_jan1st_arg1⁰ - 1)
//│ 	in (div⁰((div⁰((div⁰((_lh_jan1st_arg1⁰ + last⁰), 4) - last⁰), 100) + last⁰), 400) % 7)
//│ def leap_lh_₁(_lh_leap_arg1⁰) = if ((_lh_leap_arg1⁰ % 100) == 0) then ((_lh_leap_arg1⁰ % 400) == 0) else ((_lh_leap_arg1⁰ % 4) == 0)
//│ def length_lh_₁(ls¹⁰) = case ls¹⁰ of {
//│ 	LH_C h²³ t²³ => (1 + length_lh_₁(t²³))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls⁸) = case ls⁸ of {
//│ 	LH_C h¹⁴ t¹⁴ => (1 + length_lh_₂(t¹⁴))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls⁵) = case ls⁵ of {
//│ 	LH_C h⁸ t⁸ => (1 + length_lh_₃(t⁸))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f⁹, ls¹¹) = case ls¹¹ of {
//│ 	LH_C h²⁴ t²⁴ => [LH_C f⁹(h²⁴) map_lh_₁(f⁹, t²⁴)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₂(f⁸, ls⁹) = case ls⁹ of {
//│ 	LH_C h²⁰ t²⁰ => [LH_C f⁸(h²⁰) map_lh_₂(f⁸, t²⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₃(f⁵, ls⁶) = case ls⁶ of {
//│ 	LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lh_₃(f⁵, t¹⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₄(f⁴, ls⁴) = case ls⁴ of {
//│ 	LH_C h⁶ t⁶ => [LH_C f⁴(h⁶) map_lh_₄(f⁴, t⁶)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₅(f³, ls³) = case ls³ of {
//│ 	LH_C h⁵ t⁵ => [LH_C f³(h⁵) map_lh_₅(f³, t⁵)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₆(f², ls²) = case ls² of {
//│ 	LH_C h³ t³ => [LH_C f²(h³) map_lh_₆(f², t³)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₇(f¹, ls¹) = case ls¹ of {
//│ 	LH_C h¹ t¹ => [LH_C f¹(h¹) map_lh_₇(f¹, t¹)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh_₁(xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys¹³)]
//│ 	| LH_N  => ys¹³}
//│ def mappend_lh_₁₀(xs², ys²) = case xs² of {
//│ 	LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₀(t⁹, ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₁₁(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₁(t⁷, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₁₂(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₁₂(t², ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def mappend_lh_₂(xs¹², ys¹²) = case xs¹² of {
//│ 	LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₂(t²¹, ys¹²)]
//│ 	| LH_N  => ys¹²}
//│ def mappend_lh_₃(xs¹⁰, ys¹⁰) = case xs¹⁰ of {
//│ 	LH_C h¹⁹ t¹⁹ => [LH_C h¹⁹ mappend_lh_₃(t¹⁹, ys¹⁰)]
//│ 	| LH_N  => ys¹⁰}
//│ def mappend_lh_₄(xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_lh_₄(t¹⁸, ys⁹)]
//│ 	| LH_N  => ys⁹}
//│ def mappend_lh_₅(xs⁸, ys⁸) = case xs⁸ of {
//│ 	LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₅(t¹⁷, ys⁸)]
//│ 	| LH_N  => ys⁸}
//│ def mappend_lh_₆(xs⁷, ys⁷) = case xs⁷ of {
//│ 	LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₆(t¹⁶, ys⁷)]
//│ 	| LH_N  => ys⁷}
//│ def mappend_lh_₇(xs⁶, ys⁶) = case xs⁶ of {
//│ 	LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₇(t¹⁵, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₈(xs⁴, ys⁴) = case xs⁴ of {
//│ 	LH_C h¹³ t¹³ => [LH_C h¹³ mappend_lh_₈(t¹³, ys⁴)]
//│ 	| LH_N  => ys⁴}
//│ def mappend_lh_₉(xs³, ys³) = case xs³ of {
//│ 	LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₉(t¹², ys³)]
//│ 	| LH_N  => ys³}
//│ def monthLengths_lh_₁(_lh_monthLengths_arg1¹) = 
//│ 	let feb¹ = if leap_lh_₁(_lh_monthLengths_arg1¹) then 29 else 28
//│ 	in [LH_C 31 [LH_C feb¹ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]]
//│ def monthLengths_lh_₂(_lh_monthLengths_arg1⁰) = 
//│ 	let feb⁰ = if leap_lh_₁(_lh_monthLengths_arg1⁰) then 29 else 28
//│ 	in [LH_C 31 [LH_C feb⁰ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]]
//│ def monthNames_lh_₁ = [LH_C [LH_C 'J' [LH_C 'a' [LH_C 'n' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]] [LH_C [LH_C 'F' [LH_C 'e' [LH_C 'b' [LH_C 'r' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'r' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]]]]]
//│ def rjustify_lh_₁(_lh_rjustify_arg1⁰, _lh_rjustify_arg2⁰) = mappend_lh_₁₂(space_lh_₄((_lh_rjustify_arg1⁰ - length_lh_₃(_lh_rjustify_arg2⁰))), _lh_rjustify_arg2⁰)
//│ def scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg2⁰, _lh_scanl_arg3⁰) = [LH_C _lh_scanl_arg2⁰ 
//│ 	let _lh_matchIdent⁰ = _lh_scanl_arg3⁰
//│ 	in case _lh_matchIdent⁰ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}]
//│ def space_lh_₁(_lh_space_arg1³) = copy_lh_₆(_lh_space_arg1³, ' ')
//│ def space_lh_₂(_lh_space_arg1²) = copy_lh_₆(_lh_space_arg1², ' ')
//│ def space_lh_₃(_lh_space_arg1¹) = copy_lh_₆(_lh_space_arg1¹, ' ')
//│ def space_lh_₄(_lh_space_arg1⁰) = copy_lh_₆(_lh_space_arg1⁰, ' ')
//│ def spread_lh_₁(_lh_spread_arg1¹) = foldr1_lh_₁((fun a³ -> (fun b³ -> zipWith_lh_₂(mappend_lh_₁₂, a³, b³))), _lh_spread_arg1¹)
//│ def spread_lh_₂(_lh_spread_arg1⁰) = foldr1_lh_₁((fun a⁰ -> (fun b⁰ -> zipWith_lh_₂(mappend_lh_₁₂, a⁰, b⁰))), _lh_spread_arg1⁰)
//│ def stack_lh_₁(_lh_stack_arg1¹) = foldr1_lh_₁((fun a⁴ -> (fun b⁴ -> mappend_lh_₁₂(a⁴, b⁴))), _lh_stack_arg1¹)
//│ def stack_lh_₂(_lh_stack_arg1⁰) = foldr1_lh_₁((fun a¹ -> (fun b¹ -> mappend_lh_₁₂(a¹, b¹))), _lh_stack_arg1⁰)
//│ def take_lh_₁(n⁰, ls⁷) = if (n⁰ > 0) then case ls⁷ of {
//│ 	LH_C h¹¹ t¹¹ => [LH_C h¹¹ take_lh_₁((n⁰ - 1), t¹¹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testCalendar_nofib_lh_₁(_lh_testCalendar_nofib_arg1⁰) = map_lh_₁((fun n¹ -> length_lh_₁(cal_lh_₁(n¹))), primId⁰(enumFromTo_lh_₁(1993, (1993 + _lh_testCalendar_nofib_arg1⁰))))
//│ def unlines_lh_₁(_lh_unlines_arg1⁰) = concat_lh_₁(map_lh_₆((fun l⁰ -> mappend_lh_₁₂(l⁰, [LH_C 'n' [LH_N]])), _lh_unlines_arg1⁰))
//│ def zip3_lh_₁(_lh_zip3_arg1⁰, _lh_zip3_arg2⁰, _lh_zip3_arg3⁰) = 
//│ 	let _lh_matchIdent¹ = _lh_zip3_arg1⁰
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => 
//│ 			let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ 			in case _lh_matchIdent² of {
//│ 				LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => 
//│ 					let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ 					in case _lh_matchIdent³ of {
//│ 						LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)]
//│ 						| LH_N  => [LH_N]}
//│ 				| LH_N  => [LH_N]}
//│ 		| LH_N  => [LH_N]}
//│ def zipWith_lh_₁(f⁷, xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C hx¹ tx¹ => case ys¹¹ of {
//│ 		LH_C hy¹ ty¹ => [LH_C f⁷(hx¹, hy¹) zipWith_lh_₁(f⁷, tx¹, ty¹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zipWith_lh_₂(f⁶, xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C hx⁰ tx⁰ => case ys⁵ of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C f⁶(hx⁰, hy⁰) zipWith_lh_₂(f⁶, tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec length_lh__d1 ls_1_0 =
//│ 		  (match ls_1_0 with
//│ 		    | `LH_C(h_2_3, t_2_3) -> 
//│ 		      (1 + (length_lh__d1 t_2_3))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec map_lh__d1 f_9 ls_1_1 =
//│ 		  (match ls_1_1 with
//│ 		    | `LH_C(h_2_4, t_2_4) -> 
//│ 		      (`LH_C((f_9 h_2_4), ((map_lh__d1 f_9) t_2_4)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec monthNames_lh__d1 =
//│ 		  (`LH_C((`LH_C('J', (`LH_C('a', (`LH_C('n', (`LH_C('u', (`LH_C('a', (`LH_C('r', (`LH_C('y', (`LH_N))))))))))))))), (`LH_C((`LH_C('F', (`LH_C('e', (`LH_C('b', (`LH_C('r', (`LH_C('u', (`LH_C('a', (`LH_C('r', (`LH_C('y', (`LH_N))))))))))))))))), (`LH_C((`LH_C('M', (`LH_C('a', (`LH_C('r', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('A', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('l', (`LH_N))))))))))), (`LH_C((`LH_C('M', (`LH_C('a', (`LH_C('y', (`LH_N))))))), (`LH_C((`LH_C('J', (`LH_C('u', (`LH_C('n', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('J', (`LH_C('u', (`LH_C('l', (`LH_C('y', (`LH_N))))))))), (`LH_C((`LH_C('A', (`LH_C('u', (`LH_C('g', (`LH_C('u', (`LH_C('s', (`LH_C('t', (`LH_N))))))))))))), (`LH_C((`LH_C('S', (`LH_C('e', (`LH_C('p', (`LH_C('t', (`LH_C('e', (`LH_C('m', (`LH_C('b', (`LH_C('e', (`LH_C('r', (`LH_N))))))))))))))))))), (`LH_C((`LH_C('O', (`LH_C('c', (`LH_C('t', (`LH_C('o', (`LH_C('b', (`LH_C('e', (`LH_C('r', (`LH_N))))))))))))))), (`LH_C((`LH_C('N', (`LH_C('o', (`LH_C('v', (`LH_C('e', (`LH_C('m', (`LH_C('b', (`LH_C('e', (`LH_C('r', (`LH_N))))))))))))))))), (`LH_C((`LH_C('D', (`LH_C('e', (`LH_C('c', (`LH_C('e', (`LH_C('m', (`LH_C('b', (`LH_C('e', (`LH_C('r', (`LH_N))))))))))))))))), (`LH_N)))))))))))))))))))))))));;
//│ 		let rec mappend_lh__d1 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(h_2_2, t_2_2) -> 
//│ 		      (`LH_C(h_2_2, ((mappend_lh__d1 t_2_2) ys_1_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_3);;
//│ 		let rec copy_lh__d3 _lh_copy_arg1_3 _lh_copy_arg2_3 =
//│ 		  (if (_lh_copy_arg1_3 > 0) then
//│ 		    (`LH_C(_lh_copy_arg2_3, ((copy_lh__d3 (_lh_copy_arg1_3 - 1)) _lh_copy_arg2_3)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec copy_lh__d4 _lh_copy_arg1_2 _lh_copy_arg2_2 =
//│ 		  (if (_lh_copy_arg1_2 > 0) then
//│ 		    (`LH_C(_lh_copy_arg2_2, ((copy_lh__d4 (_lh_copy_arg1_2 - 1)) _lh_copy_arg2_2)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec emptyPic_lh__d2 _lh_emptyPic_arg1_1 =
//│ 		  (match _lh_emptyPic_arg1_1 with
//│ 		    | `LH_P2(_lh_emptyPic_LH_P2_0_1, _lh_emptyPic_LH_P2_1_1) -> 
//│ 		      ((copy_lh__d3 _lh_emptyPic_LH_P2_0_1) ((copy_lh__d4 _lh_emptyPic_LH_P2_1_1) ' ')));;
//│ 		let rec mappend_lh__d6 xs_7 ys_7 =
//│ 		  (match xs_7 with
//│ 		    | `LH_C(h_1_6, t_1_6) -> 
//│ 		      (`LH_C(h_1_6, ((mappend_lh__d6 t_1_6) ys_7)))
//│ 		    | `LH_N -> 
//│ 		      ys_7);;
//│ 		let rec zipWith_lh__d1 f_7 xs_1_1 ys_1_1 =
//│ 		  (match xs_1_1 with
//│ 		    | `LH_C(hx_1, tx_1) -> 
//│ 		      (match ys_1_1 with
//│ 		        | `LH_C(hy_1, ty_1) -> 
//│ 		          (`LH_C(((f_7 hx_1) hy_1), (((zipWith_lh__d1 f_7) tx_1) ty_1)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec leap_lh__d1 _lh_leap_arg1_0 =
//│ 		  (if ((_lh_leap_arg1_0 mod 100) = 0) then
//│ 		    ((_lh_leap_arg1_0 mod 400) = 0)
//│ 		  else
//│ 		    ((_lh_leap_arg1_0 mod 4) = 0));;
//│ 		let rec monthLengths_lh__d2 _lh_monthLengths_arg1_0 =
//│ 		  (let rec feb_0 = (if (leap_lh__d1 _lh_monthLengths_arg1_0) then
//│ 		    29
//│ 		  else
//│ 		    28) in
//│ 		    (`LH_C(31, (`LH_C(feb_0, (`LH_C(31, (`LH_C(30, (`LH_C(31, (`LH_C(30, (`LH_C(31, (`LH_C(31, (`LH_C(30, (`LH_C(31, (`LH_C(30, (`LH_C(31, (`LH_N))))))))))))))))))))))))));;
//│ 		let rec jan1st_lh__d1 _lh_jan1st_arg1_0 =
//│ 		  (let rec last_0 = (_lh_jan1st_arg1_0 - 1) in
//│ 		    (((((((_lh_jan1st_arg1_0 + last_0) / 4) - last_0) / 100) + last_0) / 400) mod 7));;
//│ 		let rec take_lh__d1 n_0 ls_7 =
//│ 		  (if (n_0 > 0) then
//│ 		    (match ls_7 with
//│ 		      | `LH_C(h_1_1, t_1_1) -> 
//│ 		        (`LH_C(h_1_1, ((take_lh__d1 (n_0 - 1)) t_1_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec map_lh__d3 f_5 ls_6 =
//│ 		  (match ls_6 with
//│ 		    | `LH_C(h_1_0, t_1_0) -> 
//│ 		      (`LH_C((f_5 h_1_0), ((map_lh__d3 f_5) t_1_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec scanl_lh__d1 _lh_scanl_arg1_0 _lh_scanl_arg2_0 _lh_scanl_arg3_0 =
//│ 		  (`LH_C(_lh_scanl_arg2_0, (let rec _lh_matchIdent_0 = _lh_scanl_arg3_0 in
//│ 		    (match _lh_matchIdent_0 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_scanl_LH_C_0_0, _lh_scanl_LH_C_1_0) -> 
//│ 		        (((scanl_lh__d1 _lh_scanl_arg1_0) ((_lh_scanl_arg1_0 _lh_scanl_arg2_0) _lh_scanl_LH_C_0_0)) _lh_scanl_LH_C_1_0)))));;
//│ 		let rec firstDays_lh__d1 _lh_firstDays_arg1_0 =
//│ 		  ((take_lh__d1 12) ((map_lh__d3 (fun a_5 -> 
//│ 		    (a_5 mod 7))) (((scanl_lh__d1 (fun a_6 b_5 -> 
//│ 		    (a_6 + b_5))) (jan1st_lh__d1 _lh_firstDays_arg1_0)) (monthLengths_lh__d2 _lh_firstDays_arg1_0))));;
//│ 		let rec zip3_lh__d1 _lh_zip3_arg1_0 _lh_zip3_arg2_0 _lh_zip3_arg3_0 =
//│ 		  (let rec _lh_matchIdent_1 = _lh_zip3_arg1_0 in
//│ 		    (match _lh_matchIdent_1 with
//│ 		      | `LH_C(_lh_zip3_LH_C_0_0, _lh_zip3_LH_C_1_0) -> 
//│ 		        (let rec _lh_matchIdent_2 = _lh_zip3_arg2_0 in
//│ 		          (match _lh_matchIdent_2 with
//│ 		            | `LH_C(_lh_zip3_LH_C_0_1, _lh_zip3_LH_C_1_1) -> 
//│ 		              (let rec _lh_matchIdent_3 = _lh_zip3_arg3_0 in
//│ 		                (match _lh_matchIdent_3 with
//│ 		                  | `LH_C(_lh_zip3_LH_C_0_2, _lh_zip3_LH_C_1_2) -> 
//│ 		                    (`LH_C((`LH_P3(_lh_zip3_LH_C_0_0, _lh_zip3_LH_C_0_1, _lh_zip3_LH_C_0_2)), (((zip3_lh__d1 _lh_zip3_LH_C_1_0) _lh_zip3_LH_C_1_1) _lh_zip3_LH_C_1_2)))
//│ 		                  | `LH_N -> 
//│ 		                    (`LH_N)))
//│ 		            | `LH_N -> 
//│ 		              (`LH_N)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)));;
//│ 		let rec mappend_lh__d1_d2 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (`LH_C(h_2, ((mappend_lh__d1_d2 t_2) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec concat_lh__d1 lss_0 =
//│ 		  (match lss_0 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      ((mappend_lh__d1_d2 h_4) (concat_lh__d1 t_4))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec map_lh__d6 f_2 ls_2 =
//│ 		  (match ls_2 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      (`LH_C((f_2 h_3), ((map_lh__d6 f_2) t_3)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec unlines_lh__d1 _lh_unlines_arg1_0 =
//│ 		  (concat_lh__d1 ((map_lh__d6 (fun l_0 -> 
//│ 		    ((mappend_lh__d1_d2 l_0) (`LH_C('n', (`LH_N)))))) _lh_unlines_arg1_0));;
//│ 		let rec foldr_lh__d1 f_0 i_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      ((f_0 h_0) (((foldr_lh__d1 f_0) i_0) t_0))
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec foldr1_lh__d1 _lh_foldr1_arg1_0 _lh_foldr1_arg2_0 =
//│ 		  (match _lh_foldr1_arg2_0 with
//│ 		    | `LH_C(_lh_foldr1_LH_C_0_0, _lh_foldr1_LH_C_1_0) -> 
//│ 		      (((foldr_lh__d1 _lh_foldr1_arg1_0) _lh_foldr1_LH_C_0_0) _lh_foldr1_LH_C_1_0)
//│ 		    | _ -> 
//│ 		      (failwith "lh_default_error"));;
//│ 		let rec stack_lh__d2 _lh_stack_arg1_0 =
//│ 		  ((foldr1_lh__d1 (fun a_1 b_1 -> 
//│ 		    ((mappend_lh__d1_d2 a_1) b_1))) _lh_stack_arg1_0);;
//│ 		let rec drop_lh__d1 _lh_drop_arg1_0 _lh_drop_arg2_0 =
//│ 		  (match _lh_drop_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_drop_LH_C_0_0, _lh_drop_LH_C_1_0) -> 
//│ 		      (if (_lh_drop_arg1_0 > 0) then
//│ 		        ((drop_lh__d1 (_lh_drop_arg1_0 - 1)) _lh_drop_LH_C_1_0)
//│ 		      else
//│ 		        _lh_drop_LH_C_1_0));;
//│ 		let rec groop_lh__d2 _lh_groop_arg1_0 _lh_groop_arg2_0 =
//│ 		  (match _lh_groop_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | _ -> 
//│ 		      (`LH_C(((take_lh__d1 _lh_groop_arg1_0) _lh_groop_arg2_0), ((groop_lh__d2 _lh_groop_arg1_0) ((drop_lh__d1 _lh_groop_arg1_0) _lh_groop_arg2_0)))));;
//│ 		let rec map_lh__d7 f_1 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (`LH_C((f_1 h_1), ((map_lh__d7 f_1) t_1)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec zipWith_lh__d2 f_6 xs_5 ys_5 =
//│ 		  (match xs_5 with
//│ 		    | `LH_C(hx_0, tx_0) -> 
//│ 		      (match ys_5 with
//│ 		        | `LH_C(hy_0, ty_0) -> 
//│ 		          (`LH_C(((f_6 hx_0) hy_0), (((zipWith_lh__d2 f_6) tx_0) ty_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec spread_lh__d2 _lh_spread_arg1_0 =
//│ 		  ((foldr1_lh__d1 (fun a_0 b_0 -> 
//│ 		    (((zipWith_lh__d2 mappend_lh__d1_d2) a_0) b_0))) _lh_spread_arg1_0);;
//│ 		let rec block_lh__d2 _lh_block_arg1_0 _lh_funcomp_x_0 =
//│ 		  ((fun _lh_funcomp_x_1 -> 
//│ 		    (stack_lh__d2 ((map_lh__d7 spread_lh__d2) _lh_funcomp_x_1))) ((groop_lh__d2 _lh_block_arg1_0) _lh_funcomp_x_0));;
//│ 		let rec mappend_lh__d3 xs_1_0 ys_1_0 =
//│ 		  (match xs_1_0 with
//│ 		    | `LH_C(h_1_9, t_1_9) -> 
//│ 		      (`LH_C(h_1_9, ((mappend_lh__d3 t_1_9) ys_1_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_0);;
//│ 		let rec copy_lh__d6 _lh_copy_arg1_0 _lh_copy_arg2_0 =
//│ 		  (if (_lh_copy_arg1_0 > 0) then
//│ 		    (`LH_C(_lh_copy_arg2_0, ((copy_lh__d6 (_lh_copy_arg1_0 - 1)) _lh_copy_arg2_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec space_lh__d4 _lh_space_arg1_0 =
//│ 		  ((copy_lh__d6 _lh_space_arg1_0) ' ');;
//│ 		let rec mappend_lh__d1_d0 xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_9, t_9) -> 
//│ 		      (`LH_C(h_9, ((mappend_lh__d1_d0 t_9) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec mappend_lh__d1_d1 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_7, t_7) -> 
//│ 		      (`LH_C(h_7, ((mappend_lh__d1_d1 t_7) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec length_lh__d3 ls_5 =
//│ 		  (match ls_5 with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      (1 + (length_lh__d3 t_8))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec space_lh__d3 _lh_space_arg1_1 =
//│ 		  ((copy_lh__d6 _lh_space_arg1_1) ' ');;
//│ 		let rec cjustify_lh__d2 _lh_cjustify_arg1_0 _lh_cjustify_arg2_0 =
//│ 		  (let rec m_0 = (_lh_cjustify_arg1_0 - (length_lh__d3 _lh_cjustify_arg2_0)) in
//│ 		    (let rec halfm_0 = (m_0 / 2) in
//│ 		      ((mappend_lh__d1_d1 ((mappend_lh__d1_d0 (space_lh__d4 halfm_0)) _lh_cjustify_arg2_0)) (space_lh__d3 (m_0 - halfm_0)))));;
//│ 		let rec copy_lh__d2 _lh_copy_arg1_4 _lh_copy_arg2_4 =
//│ 		  (if (_lh_copy_arg1_4 > 0) then
//│ 		    (`LH_C(_lh_copy_arg2_4, ((copy_lh__d2 (_lh_copy_arg1_4 - 1)) _lh_copy_arg2_4)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec copy_lh__d1 _lh_copy_arg1_5 _lh_copy_arg2_5 =
//│ 		  (if (_lh_copy_arg1_5 > 0) then
//│ 		    (`LH_C(_lh_copy_arg2_5, ((copy_lh__d1 (_lh_copy_arg1_5 - 1)) _lh_copy_arg2_5)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec emptyPic_lh__d1 _lh_emptyPic_arg1_2 =
//│ 		  (match _lh_emptyPic_arg1_2 with
//│ 		    | `LH_P2(_lh_emptyPic_LH_P2_0_2, _lh_emptyPic_LH_P2_1_2) -> 
//│ 		      ((copy_lh__d1 _lh_emptyPic_LH_P2_0_2) ((copy_lh__d2 _lh_emptyPic_LH_P2_1_2) ' ')));;
//│ 		let rec copy_lh__d5 _lh_copy_arg1_1 _lh_copy_arg2_1 =
//│ 		  (if (_lh_copy_arg1_1 > 0) then
//│ 		    (`LH_C(_lh_copy_arg2_1, ((copy_lh__d5 (_lh_copy_arg1_1 - 1)) _lh_copy_arg2_1)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec emptyPic_lh__d3 _lh_emptyPic_arg1_0 =
//│ 		  (match _lh_emptyPic_arg1_0 with
//│ 		    | `LH_P2(_lh_emptyPic_LH_P2_0_0, _lh_emptyPic_LH_P2_1_0) -> 
//│ 		      ((copy_lh__d5 _lh_emptyPic_LH_P2_0_0) ((copy_lh__d6 _lh_emptyPic_LH_P2_1_0) ' ')));;
//│ 		let rec stack_lh__d1 _lh_stack_arg1_1 =
//│ 		  ((foldr1_lh__d1 (fun a_4 b_4 -> 
//│ 		    ((mappend_lh__d1_d2 a_4) b_4))) _lh_stack_arg1_1);;
//│ 		let rec groop_lh__d1 _lh_groop_arg1_1 _lh_groop_arg2_1 =
//│ 		  (match _lh_groop_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | _ -> 
//│ 		      (`LH_C(((take_lh__d1 _lh_groop_arg1_1) _lh_groop_arg2_1), ((groop_lh__d1 _lh_groop_arg1_1) ((drop_lh__d1 _lh_groop_arg1_1) _lh_groop_arg2_1)))));;
//│ 		let rec map_lh__d4 f_4 ls_4 =
//│ 		  (match ls_4 with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      (`LH_C((f_4 h_6), ((map_lh__d4 f_4) t_6)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec spread_lh__d1 _lh_spread_arg1_1 =
//│ 		  ((foldr1_lh__d1 (fun a_3 b_3 -> 
//│ 		    (((zipWith_lh__d2 mappend_lh__d1_d2) a_3) b_3))) _lh_spread_arg1_1);;
//│ 		let rec block_lh__d1 _lh_block_arg1_1 _lh_funcomp_x_2 =
//│ 		  ((fun _lh_funcomp_x_3 -> 
//│ 		    (stack_lh__d1 ((map_lh__d4 spread_lh__d1) _lh_funcomp_x_3))) ((groop_lh__d1 _lh_block_arg1_1) _lh_funcomp_x_2));;
//│ 		let rec enumFromTo_lh__d2 a_2 b_2 =
//│ 		  (if (a_2 <= b_2) then
//│ 		    (`LH_C(a_2, ((enumFromTo_lh__d2 (a_2 + 1)) b_2)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec map_lh__d5 f_3 ls_3 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      (`LH_C((f_3 h_5), ((map_lh__d5 f_3) t_5)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec rjustify_lh__d1 _lh_rjustify_arg1_0 _lh_rjustify_arg2_0 =
//│ 		  ((mappend_lh__d1_d2 (space_lh__d4 (_lh_rjustify_arg1_0 - (length_lh__d3 _lh_rjustify_arg2_0)))) _lh_rjustify_arg2_0);;
//│ 		let rec date_lh__d1 _lh_date_arg1_0 _lh_date_arg2_0 =
//│ 		  (if ((_lh_date_arg2_0 < 1) || (_lh_date_arg1_0 < _lh_date_arg2_0)) then
//│ 		    (`LH_C((`LH_C(' ', (`LH_C(' ', (`LH_C(' ', (`LH_N))))))), (`LH_N)))
//│ 		  else
//│ 		    (`LH_C(((rjustify_lh__d1 3) (string_of_int _lh_date_arg2_0)), (`LH_N))));;
//│ 		let rec dates_lh__d1 _lh_dates_arg1_0 _lh_dates_arg2_0 =
//│ 		  ((map_lh__d5 (fun d_0 -> 
//│ 		    ((date_lh__d1 _lh_dates_arg2_0) d_0))) ((enumFromTo_lh__d2 (1 - _lh_dates_arg1_0)) (42 - _lh_dates_arg1_0)));;
//│ 		let rec mappend_lh__d7 xs_6 ys_6 =
//│ 		  (match xs_6 with
//│ 		    | `LH_C(h_1_5, t_1_5) -> 
//│ 		      (`LH_C(h_1_5, ((mappend_lh__d7 t_1_5) ys_6)))
//│ 		    | `LH_N -> 
//│ 		      ys_6);;
//│ 		let rec mappend_lh__d2 xs_1_2 ys_1_2 =
//│ 		  (match xs_1_2 with
//│ 		    | `LH_C(h_2_1, t_2_1) -> 
//│ 		      (`LH_C(h_2_1, ((mappend_lh__d2 t_2_1) ys_1_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_2);;
//│ 		let rec mappend_lh__d5 xs_8 ys_8 =
//│ 		  (match xs_8 with
//│ 		    | `LH_C(h_1_7, t_1_7) -> 
//│ 		      (`LH_C(h_1_7, ((mappend_lh__d5 t_1_7) ys_8)))
//│ 		    | `LH_N -> 
//│ 		      ys_8);;
//│ 		let rec mappend_lh__d4 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(h_1_8, t_1_8) -> 
//│ 		      (`LH_C(h_1_8, ((mappend_lh__d4 t_1_8) ys_9)))
//│ 		    | `LH_N -> 
//│ 		      ys_9);;
//│ 		let rec map_lh__d2 f_8 ls_9 =
//│ 		  (match ls_9 with
//│ 		    | `LH_C(h_2_0, t_2_0) -> 
//│ 		      (`LH_C((f_8 h_2_0), ((map_lh__d2 f_8) t_2_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec monthLengths_lh__d1 _lh_monthLengths_arg1_1 =
//│ 		  (let rec feb_1 = (if (leap_lh__d1 _lh_monthLengths_arg1_1) then
//│ 		    29
//│ 		  else
//│ 		    28) in
//│ 		    (`LH_C(31, (`LH_C(feb_1, (`LH_C(31, (`LH_C(30, (`LH_C(31, (`LH_C(30, (`LH_C(31, (`LH_C(31, (`LH_C(30, (`LH_C(31, (`LH_C(30, (`LH_C(31, (`LH_N))))))))))))))))))))))))));;
//│ 		let rec mappend_lh__d8 xs_4 ys_4 =
//│ 		  (match xs_4 with
//│ 		    | `LH_C(h_1_3, t_1_3) -> 
//│ 		      (`LH_C(h_1_3, ((mappend_lh__d8 t_1_3) ys_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_4);;
//│ 		let rec mappend_lh__d9 xs_3 ys_3 =
//│ 		  (match xs_3 with
//│ 		    | `LH_C(h_1_2, t_1_2) -> 
//│ 		      (`LH_C(h_1_2, ((mappend_lh__d9 t_1_2) ys_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_3);;
//│ 		let rec space_lh__d2 _lh_space_arg1_2 =
//│ 		  ((copy_lh__d6 _lh_space_arg1_2) ' ');;
//│ 		let rec space_lh__d1 _lh_space_arg1_3 =
//│ 		  ((copy_lh__d6 _lh_space_arg1_3) ' ');;
//│ 		let rec length_lh__d2 ls_8 =
//│ 		  (match ls_8 with
//│ 		    | `LH_C(h_1_4, t_1_4) -> 
//│ 		      (1 + (length_lh__d2 t_1_4))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec cjustify_lh__d1 _lh_cjustify_arg1_1 _lh_cjustify_arg2_1 =
//│ 		  (let rec m_1 = (_lh_cjustify_arg1_1 - (length_lh__d2 _lh_cjustify_arg2_1)) in
//│ 		    (let rec halfm_1 = (m_1 / 2) in
//│ 		      ((mappend_lh__d9 ((mappend_lh__d8 (space_lh__d1 halfm_1)) _lh_cjustify_arg2_1)) (space_lh__d2 (m_1 - halfm_1)))));;
//│ 		let rec cal_lh__d1 _lh_cal_arg1_0 =
//│ 		  let rec pic_0 = (fun _lh_pic_arg1_0 -> 
//│ 		    (match _lh_pic_arg1_0 with
//│ 		      | `LH_P3(_lh_pic_LH_P3_0_0, _lh_pic_LH_P3_1_0, _lh_pic_LH_P3_2_0) -> 
//│ 		        ((mappend_lh__d1 (title_0 _lh_pic_LH_P3_0_0)) ((table_0 _lh_pic_LH_P3_1_0) _lh_pic_LH_P3_2_0))))
//│ 		  and table_0 = (fun _lh_table_arg1_0 _lh_table_arg2_0 -> 
//│ 		    ((mappend_lh__d6 daynames_0) ((entries_0 _lh_table_arg1_0) _lh_table_arg2_0)))
//│ 		  and daynames_0 = (`LH_C((`LH_C(' ', (`LH_C('S', (`LH_C('u', (`LH_C(' ', (`LH_C('M', (`LH_C('o', (`LH_C(' ', (`LH_C('T', (`LH_C('u', (`LH_C(' ', (`LH_C('W', (`LH_C('e', (`LH_C(' ', (`LH_C('T', (`LH_C('h', (`LH_C(' ', (`LH_C('F', (`LH_C('r', (`LH_C(' ', (`LH_C('S', (`LH_C('a', (`LH_N))))))))))))))))))))))))))))))))))))))))))), (`LH_N)))
//│ 		  and pad_0 = (fun _lh_pad_arg1_0 -> 
//│ 		    ((mappend_lh__d5 (((zipWith_lh__d1 mappend_lh__d7) (((zipWith_lh__d2 mappend_lh__d2) side_0) _lh_pad_arg1_0)) side_0)) end_0))
//│ 		  and months_0 = (fun _lh_months_arg1_0 -> 
//│ 		    (((zip3_lh__d1 monthNames_lh__d1) (firstDays_lh__d1 _lh_months_arg1_0)) (monthLengths_lh__d1 _lh_months_arg1_0)))
//│ 		  and entries_0 = (fun _lh_entries_arg1_0 _lh_entries_arg2_0 -> 
//│ 		    ((block_lh__d2 7) ((dates_lh__d1 _lh_entries_arg1_0) _lh_entries_arg2_0)))
//│ 		  and side_0 = (emptyPic_lh__d1 (`LH_P2(8, 2)))
//│ 		  and body_0 = (fun _lh_funcomp_x_4 -> 
//│ 		    ((fun _lh_funcomp_x_5 -> 
//│ 		      ((block_lh__d1 3) ((map_lh__d2 (fun _lh_funcomp_x_6 -> 
//│ 		        (pad_0 (pic_0 _lh_funcomp_x_6)))) _lh_funcomp_x_5))) (months_0 _lh_funcomp_x_4)))
//│ 		  and banner_0 = (fun _lh_banner_arg1_0 -> 
//│ 		    ((mappend_lh__d3 (`LH_C(((cjustify_lh__d2 75) (string_of_int _lh_banner_arg1_0)), (`LH_N)))) (emptyPic_lh__d2 (`LH_P2(1, 75)))))
//│ 		  and end_0 = (emptyPic_lh__d3 (`LH_P2(1, 25)))
//│ 		  and title_0 = (fun _lh_title_arg1_0 -> 
//│ 		    (`LH_C(((cjustify_lh__d1 21) _lh_title_arg1_0), (`LH_N))))
//│ 		  in (unlines_lh__d1 ((mappend_lh__d4 (banner_0 _lh_cal_arg1_0)) (body_0 _lh_cal_arg1_0)));;
//│ 		let rec enumFromTo_lh__d1 a_7 b_6 =
//│ 		  (if (a_7 <= b_6) then
//│ 		    (`LH_C(a_7, ((enumFromTo_lh__d1 (a_7 + 1)) b_6)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec testCalendar_nofib_lh__d1 _lh_testCalendar_nofib_arg1_0 =
//│ 		  ((map_lh__d1 (fun n_1 -> 
//│ 		    (length_lh__d1 (cal_lh__d1 n_1)))) ((enumFromTo_lh__d1 1993) (1993 + _lh_testCalendar_nofib_arg1_0)));;
//│ 		(testCalendar_nofib_lh__d1 100)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< after expansion <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 67 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => [LH_C f¹(h¹) map_lh_₇(f¹, t¹)] | LH_N  => [LH_N]}: 123
//│ [LH_C take_lh_₁(_lh_groop_arg1⁰, _lh_groop_arg2⁰) groop_lh_₂(_lh_groop_arg1⁰, drop_lh_₁(_lh_groop_arg1⁰, _lh_groop_arg2⁰))]: 82 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => [LH_C f¹(h¹) map_lh_₇(f¹, t¹)] | LH_N  => [LH_N]}: 123
//│ [LH_C f²(h³) map_lh_₆(f², t³)]: 147 --->
//│ 	case lss⁰ of {LH_C h⁴ t⁴ => mappend_lh_₁₂(h⁴, concat_lh_₁(t⁴)) | LH_N  => [LH_N]}: 161
//│ [LH_N]: 148 --->
//│ 	case lss⁰ of {LH_C h⁴ t⁴ => mappend_lh_₁₂(h⁴, concat_lh_₁(t⁴)) | LH_N  => [LH_N]}: 161
//│ [LH_C a² enumFromTo_lh_₂((a² + 1), b²)]: 226 --->
//│ 	case ls³ of {LH_C h⁵ t⁵ => [LH_C f³(h⁵) map_lh_₅(f³, t⁵)] | LH_N  => [LH_N]}: 174
//│ [LH_N]: 227 --->
//│ 	case ls³ of {LH_C h⁵ t⁵ => [LH_C f³(h⁵) map_lh_₅(f³, t⁵)] | LH_N  => [LH_N]}: 174
//│ [LH_N]: 272 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f⁴(h⁶) map_lh_₄(f⁴, t⁶)] | LH_N  => [LH_N]}: 328
//│ [LH_C take_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹) groop_lh_₁(_lh_groop_arg1¹, drop_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹))]: 287 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f⁴(h⁶) map_lh_₄(f⁴, t⁶)] | LH_N  => [LH_N]}: 328
//│ [LH_C _lh_copy_arg2³ copy_lh_₃((_lh_copy_arg1³ - 1), _lh_copy_arg2³)]: 366 --->
//│ 	case xs⁹ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_lh_₄(t¹⁸, ys⁹)] | LH_N  => ys⁹}: 813
//│ [LH_N]: 367 --->
//│ 	case xs⁹ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_lh_₄(t¹⁸, ys⁹)] | LH_N  => ys⁹}: 813
//│ [LH_N]: 504 --->
//│ 	case ls⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lh_₃(f⁵, t¹⁰)] | LH_N  => [LH_N]}: 498
//│ [LH_C _lh_scanl_arg2⁰ let _lh_matchIdent⁰ = _lh_scanl_arg3⁰
//│ in case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}]: 518 --->
//│ 	case ls⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lh_₃(f⁵, t¹⁰)] | LH_N  => [LH_N]}: 498
//│ [LH_N]: 599 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 31 [LH_N]]: 600 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 30 [LH_C 31 [LH_N]]]: 601 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]: 602 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]: 603 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]: 604 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]: 605 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]: 606 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]: 607 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]: 608 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]: 609 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C feb⁰ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]: 610 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_C 31 [LH_C feb⁰ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]]: 611 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516
//│ [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²]: 686 --->
//│ 	case _lh_pic_arg1⁰ of {LH_P3 _lh_pic_LH_P3_0⁰ _lh_pic_LH_P3_1⁰ _lh_pic_LH_P3_2⁰ => mappend_lh_₁(title⁰(_lh_pic_LH_P3_0⁰), table⁰(_lh_pic_LH_P3_1⁰, _lh_pic_LH_P3_2⁰))}: 1255
//│ [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)]: 694 --->
//│ 	case ls⁹ of {LH_C h²⁰ t²⁰ => [LH_C f⁸(h²⁰) map_lh_₂(f⁸, t²⁰)] | LH_N  => [LH_N]}: 889
//│ [LH_N]: 695 --->
//│ 	case ls⁹ of {LH_C h²⁰ t²⁰ => [LH_C f⁸(h²⁰) map_lh_₂(f⁸, t²⁰)] | LH_N  => [LH_N]}: 889
//│ [LH_N]: 698 --->
//│ 	case ls⁹ of {LH_C h²⁰ t²⁰ => [LH_C f⁸(h²⁰) map_lh_₂(f⁸, t²⁰)] | LH_N  => [LH_N]}: 889
//│ [LH_N]: 701 --->
//│ 	case ls⁹ of {LH_C h²⁰ t²⁰ => [LH_C f⁸(h²⁰) map_lh_₂(f⁸, t²⁰)] | LH_N  => [LH_N]}: 889
//│ [LH_C h¹⁹ mappend_lh_₃(t¹⁹, ys¹⁰)]: 835 --->
//│ 	case xs⁹ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_lh_₄(t¹⁸, ys⁹)] | LH_N  => ys⁹}: 813
//│ [LH_C f⁷(hx¹, hy¹) zipWith_lh_₁(f⁷, tx¹, ty¹)]: 854 --->
//│ 	case xs⁸ of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₅(t¹⁷, ys⁸)] | LH_N  => ys⁸}: 801
//│ [LH_N]: 855 --->
//│ 	case xs⁸ of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₅(t¹⁷, ys⁸)] | LH_N  => ys⁸}: 801
//│ [LH_N]: 857 --->
//│ 	case xs⁸ of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₅(t¹⁷, ys⁸)] | LH_N  => ys⁸}: 801
//│ [LH_N]: 1064 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]: 1065 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]: 1066 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]: 1067 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]: 1068 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]: 1069 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]: 1070 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]: 1071 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]: 1072 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]]: 1073 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'r' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]]]: 1074 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'F' [LH_C 'e' [LH_C 'b' [LH_C 'r' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'r' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]]]]: 1075 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_C [LH_C 'J' [LH_C 'a' [LH_C 'n' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]] [LH_C [LH_C 'F' [LH_C 'e' [LH_C 'b' [LH_C 'r' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'r' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]]]]]: 1076 --->
//│ 	case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702
//│ [LH_N]: 1140 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 31 [LH_N]]: 1141 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 30 [LH_C 31 [LH_N]]]: 1142 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]: 1143 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]: 1144 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]: 1145 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]: 1146 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]: 1147 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]: 1148 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]: 1149 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]: 1150 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C feb¹ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]: 1151 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_C 31 [LH_C feb¹ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]]: 1152 --->
//│ 	case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696
//│ [LH_N]: 1311 --->
//│ 	case xs⁷ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₆(t¹⁶, ys⁷)] | LH_N  => ys⁷}: 750
//│ [LH_C [LH_C ' ' [LH_C 'S' [LH_C 'u' [LH_C ' ' [LH_C 'M' [LH_C 'o' [LH_C ' ' [LH_C 'T' [LH_C 'u' [LH_C ' ' [LH_C 'W' [LH_C 'e' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C ' ' [LH_C 'F' [LH_C 'r' [LH_C ' ' [LH_C 'S' [LH_C 'a' [LH_N]]]]]]]]]]]]]]]]]]]]]] [LH_N]]: 1312 --->
//│ 	case xs⁷ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₆(t¹⁶, ys⁷)] | LH_N  => ys⁷}: 750
//│ [LH_P2 8 2]: 1357 --->
//│ 	case _lh_emptyPic_arg1² of {LH_P2 _lh_emptyPic_LH_P2_0² _lh_emptyPic_LH_P2_1² => copy_lh_₁(_lh_emptyPic_LH_P2_0², copy_lh_₂(_lh_emptyPic_LH_P2_1², ' '))}: 1087
//│ [LH_N]: 1387 --->
//│ 	case xs¹⁰ of {LH_C h¹⁹ t¹⁹ => [LH_C h¹⁹ mappend_lh_₃(t¹⁹, ys¹⁰)] | LH_N  => ys¹⁰}: 837
//│ [LH_C cjustify_lh_₂(75, string_of_int⁰(_lh_banner_arg1⁰)) [LH_N]]: 1388 --->
//│ 	case xs¹⁰ of {LH_C h¹⁹ t¹⁹ => [LH_C h¹⁹ mappend_lh_₃(t¹⁹, ys¹⁰)] | LH_N  => ys¹⁰}: 837
//│ [LH_P2 1 75]: 1393 --->
//│ 	case _lh_emptyPic_arg1¹ of {LH_P2 _lh_emptyPic_LH_P2_0¹ _lh_emptyPic_LH_P2_1¹ => copy_lh_₃(_lh_emptyPic_LH_P2_0¹, copy_lh_₄(_lh_emptyPic_LH_P2_1¹, ' '))}: 902
//│ [LH_P2 1 25]: 1400 --->
//│ 	case _lh_emptyPic_arg1⁰ of {LH_P2 _lh_emptyPic_LH_P2_0⁰ _lh_emptyPic_LH_P2_1⁰ => copy_lh_₅(_lh_emptyPic_LH_P2_0⁰, copy_lh_₆(_lh_emptyPic_LH_P2_1⁰, ' '))}: 826
//│ [LH_N]: 1407 --->
//│ 	case xs¹³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys¹³)] | LH_N  => ys¹³}: 1207
//│ [LH_C cjustify_lh_₁(21, _lh_title_arg1⁰) [LH_N]]: 1408 --->
//│ 	case xs¹³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys¹³)] | LH_N  => ys¹³}: 1207
//│ ------------------
//│ case ls¹ of {LH_C h¹ t¹ => [LH_C f¹(h¹) map_lh_₇(f¹, t¹)] | LH_N  => [LH_N]}: 123 --->
//│ 	[LH_N]: 67
//│ 	[LH_C take_lh_₁(_lh_groop_arg1⁰, _lh_groop_arg2⁰) groop_lh_₂(_lh_groop_arg1⁰, drop_lh_₁(_lh_groop_arg1⁰, _lh_groop_arg2⁰))]: 82
//│ case lss⁰ of {LH_C h⁴ t⁴ => mappend_lh_₁₂(h⁴, concat_lh_₁(t⁴)) | LH_N  => [LH_N]}: 161 --->
//│ 	[LH_C f²(h³) map_lh_₆(f², t³)]: 147
//│ 	[LH_N]: 148
//│ case ls³ of {LH_C h⁵ t⁵ => [LH_C f³(h⁵) map_lh_₅(f³, t⁵)] | LH_N  => [LH_N]}: 174 --->
//│ 	[LH_C a² enumFromTo_lh_₂((a² + 1), b²)]: 226
//│ 	[LH_N]: 227
//│ case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f⁴(h⁶) map_lh_₄(f⁴, t⁶)] | LH_N  => [LH_N]}: 328 --->
//│ 	[LH_N]: 272
//│ 	[LH_C take_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹) groop_lh_₁(_lh_groop_arg1¹, drop_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹))]: 287
//│ case ls⁶ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lh_₃(f⁵, t¹⁰)] | LH_N  => [LH_N]}: 498 --->
//│ 	[LH_N]: 504
//│ 	[LH_C _lh_scanl_arg2⁰ let _lh_matchIdent⁰ = _lh_scanl_arg3⁰
//│ in case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}]: 518
//│ case _lh_matchIdent⁰ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0⁰ _lh_scanl_LH_C_1⁰ => scanl_lh_₁(_lh_scanl_arg1⁰, _lh_scanl_arg1⁰(_lh_scanl_arg2⁰, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1⁰)}: 516 --->
//│ 	[LH_N]: 599
//│ 	[LH_C 31 [LH_N]]: 600
//│ 	[LH_C 30 [LH_C 31 [LH_N]]]: 601
//│ 	[LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]: 602
//│ 	[LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]: 603
//│ 	[LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]: 604
//│ 	[LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]: 605
//│ 	[LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]: 606
//│ 	[LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]: 607
//│ 	[LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]: 608
//│ 	[LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]: 609
//│ 	[LH_C feb⁰ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]: 610
//│ 	[LH_C 31 [LH_C feb⁰ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]]: 611
//│ case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]}: 696 --->
//│ 	[LH_N]: 1140
//│ 	[LH_C 31 [LH_N]]: 1141
//│ 	[LH_C 30 [LH_C 31 [LH_N]]]: 1142
//│ 	[LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]: 1143
//│ 	[LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]: 1144
//│ 	[LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]: 1145
//│ 	[LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]: 1146
//│ 	[LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]: 1147
//│ 	[LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]: 1148
//│ 	[LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]: 1149
//│ 	[LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]: 1150
//│ 	[LH_C feb¹ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]: 1151
//│ 	[LH_C 31 [LH_C feb¹ [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 31 [LH_C 30 [LH_C 31 [LH_C 30 [LH_C 31 [LH_N]]]]]]]]]]]]]: 1152
//│ case _lh_matchIdent¹ of {LH_C _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_1⁰ => let _lh_matchIdent² = _lh_zip3_arg2⁰
//│ in case _lh_matchIdent² of {LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹ => let _lh_matchIdent³ = _lh_zip3_arg3⁰
//│ in case _lh_matchIdent³ of {LH_C _lh_zip3_LH_C_0² _lh_zip3_LH_C_1² => [LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)] | LH_N  => [LH_N]} | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 702 --->
//│ 	[LH_N]: 1064
//│ 	[LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]: 1065
//│ 	[LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]: 1066
//│ 	[LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]: 1067
//│ 	[LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]: 1068
//│ 	[LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]: 1069
//│ 	[LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]: 1070
//│ 	[LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]: 1071
//│ 	[LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]: 1072
//│ 	[LH_C [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]]: 1073
//│ 	[LH_C [LH_C 'M' [LH_C 'a' [LH_C 'r' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]]]: 1074
//│ 	[LH_C [LH_C 'F' [LH_C 'e' [LH_C 'b' [LH_C 'r' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'r' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]]]]: 1075
//│ 	[LH_C [LH_C 'J' [LH_C 'a' [LH_C 'n' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]] [LH_C [LH_C 'F' [LH_C 'e' [LH_C 'b' [LH_C 'r' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'r' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]] [LH_C [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]] [LH_C [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]] [LH_C [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]] [LH_C [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_C [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]] [LH_N]]]]]]]]]]]]]: 1076
//│ case xs⁷ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₆(t¹⁶, ys⁷)] | LH_N  => ys⁷}: 750 --->
//│ 	[LH_N]: 1311
//│ 	[LH_C [LH_C ' ' [LH_C 'S' [LH_C 'u' [LH_C ' ' [LH_C 'M' [LH_C 'o' [LH_C ' ' [LH_C 'T' [LH_C 'u' [LH_C ' ' [LH_C 'W' [LH_C 'e' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C ' ' [LH_C 'F' [LH_C 'r' [LH_C ' ' [LH_C 'S' [LH_C 'a' [LH_N]]]]]]]]]]]]]]]]]]]]]] [LH_N]]: 1312
//│ case xs⁸ of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₅(t¹⁷, ys⁸)] | LH_N  => ys⁸}: 801 --->
//│ 	[LH_C f⁷(hx¹, hy¹) zipWith_lh_₁(f⁷, tx¹, ty¹)]: 854
//│ 	[LH_N]: 855
//│ 	[LH_N]: 857
//│ case xs⁹ of {LH_C h¹⁸ t¹⁸ => [LH_C h¹⁸ mappend_lh_₄(t¹⁸, ys⁹)] | LH_N  => ys⁹}: 813 --->
//│ 	[LH_C _lh_copy_arg2³ copy_lh_₃((_lh_copy_arg1³ - 1), _lh_copy_arg2³)]: 366
//│ 	[LH_N]: 367
//│ 	[LH_C h¹⁹ mappend_lh_₃(t¹⁹, ys¹⁰)]: 835
//│ case _lh_emptyPic_arg1⁰ of {LH_P2 _lh_emptyPic_LH_P2_0⁰ _lh_emptyPic_LH_P2_1⁰ => copy_lh_₅(_lh_emptyPic_LH_P2_0⁰, copy_lh_₆(_lh_emptyPic_LH_P2_1⁰, ' '))}: 826 --->
//│ 	[LH_P2 1 25]: 1400
//│ case xs¹⁰ of {LH_C h¹⁹ t¹⁹ => [LH_C h¹⁹ mappend_lh_₃(t¹⁹, ys¹⁰)] | LH_N  => ys¹⁰}: 837 --->
//│ 	[LH_N]: 1387
//│ 	[LH_C cjustify_lh_₂(75, string_of_int⁰(_lh_banner_arg1⁰)) [LH_N]]: 1388
//│ case ls⁹ of {LH_C h²⁰ t²⁰ => [LH_C f⁸(h²⁰) map_lh_₂(f⁸, t²⁰)] | LH_N  => [LH_N]}: 889 --->
//│ 	[LH_C [LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²] zip3_lh_₁(_lh_zip3_LH_C_1⁰, _lh_zip3_LH_C_1¹, _lh_zip3_LH_C_1²)]: 694
//│ 	[LH_N]: 695
//│ 	[LH_N]: 698
//│ 	[LH_N]: 701
//│ case _lh_emptyPic_arg1¹ of {LH_P2 _lh_emptyPic_LH_P2_0¹ _lh_emptyPic_LH_P2_1¹ => copy_lh_₃(_lh_emptyPic_LH_P2_0¹, copy_lh_₄(_lh_emptyPic_LH_P2_1¹, ' '))}: 902 --->
//│ 	[LH_P2 1 75]: 1393
//│ case _lh_emptyPic_arg1² of {LH_P2 _lh_emptyPic_LH_P2_0² _lh_emptyPic_LH_P2_1² => copy_lh_₁(_lh_emptyPic_LH_P2_0², copy_lh_₂(_lh_emptyPic_LH_P2_1², ' '))}: 1087 --->
//│ 	[LH_P2 8 2]: 1357
//│ case xs¹³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys¹³)] | LH_N  => ys¹³}: 1207 --->
//│ 	[LH_N]: 1407
//│ 	[LH_C cjustify_lh_₁(21, _lh_title_arg1⁰) [LH_N]]: 1408
//│ case _lh_pic_arg1⁰ of {LH_P3 _lh_pic_LH_P3_0⁰ _lh_pic_LH_P3_1⁰ _lh_pic_LH_P3_2⁰ => mappend_lh_₁(title⁰(_lh_pic_LH_P3_0⁰), table⁰(_lh_pic_LH_P3_1⁰, _lh_pic_LH_P3_2⁰))}: 1255 --->
//│ 	[LH_P3 _lh_zip3_LH_C_0⁰ _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_0²]: 686
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testCalendar_nofib_lh_₁(primId⁰(100))
//│ def block_lh_₁(_lh_block_arg1⁰, _lh_funcomp_x⁰) = (fun _lh_funcomp_x¹ -> stack_lh_₁(map_lh_₄(spread_lh_₁, _lh_funcomp_x¹)))(groop_lh_₁(_lh_block_arg1⁰, _lh_funcomp_x⁰))
//│ def block_lh_₂(_lh_block_arg1¹, _lh_funcomp_x⁵) = (fun _lh_funcomp_x⁶ -> stack_lh_₂(map_lh_₇(spread_lh_₂, _lh_funcomp_x⁶)))(groop_lh_₂(_lh_block_arg1¹, _lh_funcomp_x⁵))
//│ def cal_lh_₁(_lh_cal_arg1⁰) = 
//│ 	let pic⁰ = (fun _lh_pic_arg1⁰ -> _lh_pic_arg1⁰(table¹², title¹²))
//│ 	and pad⁰ = (fun _lh_pad_arg1⁰ -> mappend_lh_₅(zipWith_lh_₁(mappend_lh_₇, zipWith_lh_₂(mappend_lh_₂, side⁰, _lh_pad_arg1⁰), side⁰), end⁰))
//│ 	and title¹² = (fun _lh_title_arg1⁰ -> 
//│ 			let t²⁷ = (fun ys¹⁶ -> ys¹⁶)
//│ 			in let h²⁷ = cjustify_lh_₁(21, _lh_title_arg1⁰)
//│ 			in (fun ys¹⁷ -> [LH_C h²⁷ mappend_lh_₁(t²⁷, ys¹⁷)]))
//│ 	and end⁰ = emptyPic_lh_₃(
//│ 			let _lh_emptyPic_LH_P2_1⁰ = 25
//│ 			in let _lh_emptyPic_LH_P2_0⁰ = 1
//│ 			in (fun _lh_dummy² -> copy_lh_₅(_lh_emptyPic_LH_P2_0⁰, copy_lh_₆(_lh_emptyPic_LH_P2_1⁰, ' '))))
//│ 	and months⁰ = (fun _lh_months_arg1⁰ -> zip3_lh_₁(monthNames_lh_₁, firstDays_lh_₁(_lh_months_arg1⁰), monthLengths_lh_₁(_lh_months_arg1⁰)))
//│ 	and entries⁰ = (fun _lh_entries_arg1⁰ -> (fun _lh_entries_arg2⁰ -> block_lh_₂(7, dates_lh_₁(_lh_entries_arg1⁰, _lh_entries_arg2⁰))))
//│ 	and side⁰ = emptyPic_lh_₁(
//│ 			let _lh_emptyPic_LH_P2_1¹ = 2
//│ 			in let _lh_emptyPic_LH_P2_0¹ = 8
//│ 			in (fun _lh_dummy³ -> copy_lh_₁(_lh_emptyPic_LH_P2_0¹, copy_lh_₂(_lh_emptyPic_LH_P2_1¹, ' '))))
//│ 	and body⁰ = (fun _lh_funcomp_x² -> (fun _lh_funcomp_x³ -> block_lh_₁(3, map_lh_₂((fun _lh_funcomp_x⁴ -> pad⁰(pic⁰(_lh_funcomp_x⁴))), _lh_funcomp_x³)))(months⁰(_lh_funcomp_x²)))
//│ 	and banner⁰ = (fun _lh_banner_arg1⁰ -> mappend_lh_₃(
//│ 			let t²⁸ = (fun ys¹⁸ -> ys¹⁸)
//│ 			in let h²⁸ = cjustify_lh_₂(75, string_of_int⁰(_lh_banner_arg1⁰))
//│ 			in (fun ys¹⁹ -> 
//│ 				let t²⁹ = mappend_lh_₃(t²⁸, ys¹⁹)
//│ 				in let h²⁹ = h²⁸
//│ 				in (fun ys²⁰ -> [LH_C h²⁹ mappend_lh_₄(t²⁹, ys²⁰)])), emptyPic_lh_₂(
//│ 			let _lh_emptyPic_LH_P2_1² = 75
//│ 			in let _lh_emptyPic_LH_P2_0² = 1
//│ 			in (fun _lh_dummy⁴ -> copy_lh_₃(_lh_emptyPic_LH_P2_0², copy_lh_₄(_lh_emptyPic_LH_P2_1², ' '))))))
//│ 	and daynames⁰ = 	
//│ 			let t³⁰ = (fun ys²¹ -> ys²¹)
//│ 			in let h³⁰ = [LH_C ' ' [LH_C 'S' [LH_C 'u' [LH_C ' ' [LH_C 'M' [LH_C 'o' [LH_C ' ' [LH_C 'T' [LH_C 'u' [LH_C ' ' [LH_C 'W' [LH_C 'e' [LH_C ' ' [LH_C 'T' [LH_C 'h' [LH_C ' ' [LH_C 'F' [LH_C 'r' [LH_C ' ' [LH_C 'S' [LH_C 'a' [LH_N]]]]]]]]]]]]]]]]]]]]]]
//│ 			in (fun ys²² -> [LH_C h³⁰ mappend_lh_₆(t³⁰, ys²²)])
//│ 	and table¹² = (fun _lh_table_arg1⁰ -> (fun _lh_table_arg2⁰ -> mappend_lh_₆(daynames⁰, entries⁰(_lh_table_arg1⁰, _lh_table_arg2⁰)))) 
//│ 	in unlines_lh_₁(mappend_lh_₄(banner⁰(_lh_cal_arg1⁰), body⁰(_lh_cal_arg1⁰)))
//│ def cjustify_lh_₁(_lh_cjustify_arg1¹, _lh_cjustify_arg2¹) = 
//│ 	let m¹ = (_lh_cjustify_arg1¹ - length_lh_₂(_lh_cjustify_arg2¹))
//│ 	in let halfm¹ = div⁰(m¹, 2)
//│ 	in mappend_lh_₉(mappend_lh_₈(space_lh_₁(halfm¹), _lh_cjustify_arg2¹), space_lh_₂((m¹ - halfm¹)))
//│ def cjustify_lh_₂(_lh_cjustify_arg1⁰, _lh_cjustify_arg2⁰) = 
//│ 	let m⁰ = (_lh_cjustify_arg1⁰ - length_lh_₃(_lh_cjustify_arg2⁰))
//│ 	in let halfm⁰ = div⁰(m⁰, 2)
//│ 	in mappend_lh_₁₁(mappend_lh_₁₀(space_lh_₄(halfm⁰), _lh_cjustify_arg2⁰), space_lh_₃((m⁰ - halfm⁰)))
//│ def concat_lh_₁(lss⁰) = lss⁰([lh_Unit])
//│ def copy_lh_₁(_lh_copy_arg1¹, _lh_copy_arg2¹) = if (_lh_copy_arg1¹ > 0) then [LH_C _lh_copy_arg2¹ copy_lh_₁((_lh_copy_arg1¹ - 1), _lh_copy_arg2¹)] else [LH_N]
//│ def copy_lh_₂(_lh_copy_arg1³, _lh_copy_arg2³) = if (_lh_copy_arg1³ > 0) then [LH_C _lh_copy_arg2³ copy_lh_₂((_lh_copy_arg1³ - 1), _lh_copy_arg2³)] else [LH_N]
//│ def copy_lh_₃(_lh_copy_arg1⁵, _lh_copy_arg2⁵, _lh_floatOutId_0⁵) = if (_lh_copy_arg1⁵ > 0) then 
//│ 	let t³² = copy_lh_₃((_lh_copy_arg1⁵ - 1), _lh_copy_arg2⁵)
//│ 	in let h³² = _lh_copy_arg2⁵
//│ 	in [LH_C h³² mappend_lh_₄(t³², _lh_floatOutId_0⁵)] else _lh_floatOutId_0⁵
//│ def copy_lh_₄(_lh_copy_arg1⁰, _lh_copy_arg2⁰) = if (_lh_copy_arg1⁰ > 0) then [LH_C _lh_copy_arg2⁰ copy_lh_₄((_lh_copy_arg1⁰ - 1), _lh_copy_arg2⁰)] else [LH_N]
//│ def copy_lh_₅(_lh_copy_arg1², _lh_copy_arg2²) = if (_lh_copy_arg1² > 0) then [LH_C _lh_copy_arg2² copy_lh_₅((_lh_copy_arg1² - 1), _lh_copy_arg2²)] else [LH_N]
//│ def copy_lh_₆(_lh_copy_arg1⁴, _lh_copy_arg2⁴) = if (_lh_copy_arg1⁴ > 0) then [LH_C _lh_copy_arg2⁴ copy_lh_₆((_lh_copy_arg1⁴ - 1), _lh_copy_arg2⁴)] else [LH_N]
//│ def date_lh_₁(_lh_date_arg1⁰, _lh_date_arg2⁰) = if ((_lh_date_arg2⁰ < 1) || (_lh_date_arg1⁰ < _lh_date_arg2⁰)) then [LH_C [LH_C ' ' [LH_C ' ' [LH_C ' ' [LH_N]]]] [LH_N]] else [LH_C rjustify_lh_₁(3, string_of_int⁰(_lh_date_arg2⁰)) [LH_N]]
//│ def dates_lh_₁(_lh_dates_arg1⁰, _lh_dates_arg2⁰) = map_lh_₅((fun d⁰ -> date_lh_₁(_lh_dates_arg2⁰, d⁰)), enumFromTo_lh_₂((1 - _lh_dates_arg1⁰), (42 - _lh_dates_arg1⁰)))
//│ def drop_lh_₁(_lh_drop_arg1⁰, _lh_drop_arg2⁰) = case _lh_drop_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ > 0) then drop_lh_₁((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) else _lh_drop_LH_C_1⁰}
//│ def emptyPic_lh_₁(_lh_emptyPic_arg1¹) = _lh_emptyPic_arg1¹([lh_Unit])
//│ def emptyPic_lh_₂(_lh_emptyPic_arg1⁰) = _lh_emptyPic_arg1⁰([lh_Unit])
//│ def emptyPic_lh_₃(_lh_emptyPic_arg1²) = _lh_emptyPic_arg1²([lh_Unit])
//│ def enumFromTo_lh_₁(a², b²) = if (a² <= b²) then [LH_C a² enumFromTo_lh_₁((a² + 1), b²)] else [LH_N]
//│ def enumFromTo_lh_₂(a⁰, b⁰, _lh_floatOutId_0¹) = if (a⁰ <= b⁰) then 
//│ 	let t² = enumFromTo_lh_₂((a⁰ + 1), b⁰)
//│ 	in let h² = a⁰
//│ 	in [LH_C _lh_floatOutId_0¹(h²) map_lh_₅(_lh_floatOutId_0¹, t²)] else [LH_N]
//│ def firstDays_lh_₁(_lh_firstDays_arg1⁰) = take_lh_₁(12, map_lh_₃((fun a³ -> (a³ % 7)), scanl_lh_₁((fun a⁴ -> (fun b³ -> (a⁴ + b³))), jan1st_lh_₁(_lh_firstDays_arg1⁰), monthLengths_lh_₂(_lh_firstDays_arg1⁰))))
//│ def foldr1_lh_₁(_lh_foldr1_arg1⁰, _lh_foldr1_arg2⁰) = case _lh_foldr1_arg2⁰ of {
//│ 	LH_C _lh_foldr1_LH_C_0⁰ _lh_foldr1_LH_C_1⁰ => foldr_lh_₁(_lh_foldr1_arg1⁰, _lh_foldr1_LH_C_0⁰, _lh_foldr1_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def foldr_lh_₁(f¹⁹, i⁰, ls¹) = case ls¹ of {
//│ 	LH_C h³ t³ => f¹⁹(h³, foldr_lh_₁(f¹⁹, i⁰, t³))
//│ 	| LH_N  => i⁰}
//│ def groop_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹, _lh_floatOutId_0⁶) = case _lh_groop_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| _  => 
//│ 		let t³³ = groop_lh_₁(_lh_groop_arg1¹, drop_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹))
//│ 		in let h³³ = take_lh_₁(_lh_groop_arg1¹, _lh_groop_arg2¹)
//│ 		in [LH_C _lh_floatOutId_0⁶(h³³) map_lh_₄(_lh_floatOutId_0⁶, t³³)]}
//│ def groop_lh_₂(_lh_groop_arg1⁰, _lh_groop_arg2⁰, _lh_floatOutId_0⁰) = case _lh_groop_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| _  => 
//│ 		let t⁰ = groop_lh_₂(_lh_groop_arg1⁰, drop_lh_₁(_lh_groop_arg1⁰, _lh_groop_arg2⁰))
//│ 		in let h⁰ = take_lh_₁(_lh_groop_arg1⁰, _lh_groop_arg2⁰)
//│ 		in [LH_C _lh_floatOutId_0⁰(h⁰) map_lh_₇(_lh_floatOutId_0⁰, t⁰)]}
//│ def jan1st_lh_₁(_lh_jan1st_arg1⁰) = 
//│ 	let last⁰ = (_lh_jan1st_arg1⁰ - 1)
//│ 	in (div⁰((div⁰((div⁰((_lh_jan1st_arg1⁰ + last⁰), 4) - last⁰), 100) + last⁰), 400) % 7)
//│ def leap_lh_₁(_lh_leap_arg1⁰) = if ((_lh_leap_arg1⁰ % 100) == 0) then ((_lh_leap_arg1⁰ % 400) == 0) else ((_lh_leap_arg1⁰ % 4) == 0)
//│ def length_lh_₁(ls⁷) = case ls⁷ of {
//│ 	LH_C h¹⁴ t¹⁴ => (1 + length_lh_₁(t¹⁴))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹¹) = case ls¹¹ of {
//│ 	LH_C h³⁶ t³⁶ => (1 + length_lh_₂(t³⁶))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls⁹) = case ls⁹ of {
//│ 	LH_C h³¹ t³¹ => (1 + length_lh_₃(t³¹))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f²³, ls⁵) = case ls⁵ of {
//│ 	LH_C h¹¹ t¹¹ => [LH_C f²³(h¹¹) map_lh_₁(f²³, t¹¹)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₂(f²², ls⁴) = ls⁴(f²²)
//│ def map_lh_₃(f³⁹, ls⁸) = ls⁸(f³⁹)
//│ def map_lh_₄(f⁴⁰, ls¹⁰) = ls¹⁰(f⁴⁰)
//│ def map_lh_₅(f²⁴, ls⁶) = ls⁶(f²⁴)
//│ def map_lh_₆(f²¹, ls², _lh_floatOutId_0²) = case ls² of {
//│ 	LH_C h⁸ t⁸ => 
//│ 		let t⁹ = map_lh_₆(f²¹, t⁸)
//│ 		in let h⁹ = f²¹(h⁸)
//│ 		in mappend_lh_₁₂(h⁹, concat_lh_₁(t⁹))
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₇(f¹⁶, ls⁰) = ls⁰(f¹⁶)
//│ def mappend_lh_₁(xs⁰, ys⁰) = xs⁰(ys⁰)
//│ def mappend_lh_₁₀(xs⁴, ys⁴) = case xs⁴ of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₁₀(t⁴, ys⁴)]
//│ 	| LH_N  => ys⁴}
//│ def mappend_lh_₁₁(xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₁(t⁷, ys⁹)]
//│ 	| LH_N  => ys⁹}
//│ def mappend_lh_₁₂(xs¹³, ys²⁵) = case xs¹³ of {
//│ 	LH_C h³⁴ t³⁴ => [LH_C h³⁴ mappend_lh_₁₂(t³⁴, ys²⁵)]
//│ 	| LH_N  => ys²⁵}
//│ def mappend_lh_₂(xs⁶, ys⁶) = case xs⁶ of {
//│ 	LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂(t⁶, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₃(xs², ys²) = xs²(ys²)
//│ def mappend_lh_₄(xs¹⁰, ys¹⁰) = xs¹⁰(ys¹⁰)
//│ def mappend_lh_₅(xs⁷, ys⁷) = xs⁷(ys⁷)
//│ def mappend_lh_₆(xs¹, ys¹) = xs¹(ys¹)
//│ def mappend_lh_₇(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₇(t⁵, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₈(xs³, ys³) = case xs³ of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₈(t¹, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₉(xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₉(t¹², ys¹¹)]
//│ 	| LH_N  => ys¹¹}
//│ def monthLengths_lh_₁(_lh_monthLengths_arg1¹, _lh_zip3_LH_C_0⁶⁰, _lh_zip3_LH_C_0⁶¹, _lh_zip3_LH_C_1⁶⁰, _lh_zip3_LH_C_1⁶¹, f³⁸) = 
//│ 	let feb¹ = if leap_lh_₁(_lh_monthLengths_arg1¹) then 29 else 28
//│ 	in let _lh_zip3_LH_C_1²⁴ = 	
//│ 		let _lh_zip3_LH_C_1²⁵ = 	
//│ 			let _lh_zip3_LH_C_1²⁶ = 	
//│ 				let _lh_zip3_LH_C_1²⁷ = 	
//│ 					let _lh_zip3_LH_C_1²⁸ = 	
//│ 						let _lh_zip3_LH_C_1²⁹ = 	
//│ 							let _lh_zip3_LH_C_1³⁰ = 	
//│ 								let _lh_zip3_LH_C_1³¹ = 	
//│ 									let _lh_zip3_LH_C_1³² = 	
//│ 										let _lh_zip3_LH_C_1³³ = 	
//│ 											let _lh_zip3_LH_C_1³⁴ = 	
//│ 												let _lh_zip3_LH_C_1³⁵ = (fun _lh_zip3_LH_C_0²⁴ -> (fun _lh_zip3_LH_C_0²⁵ -> (fun _lh_zip3_LH_C_1³⁶ -> (fun _lh_zip3_LH_C_1³⁷ -> (fun f²⁶ -> [LH_N])))))
//│ 												in let _lh_zip3_LH_C_0²⁶ = 31
//│ 												in (fun _lh_zip3_LH_C_0²⁷ -> (fun _lh_zip3_LH_C_0²⁸ -> (fun _lh_zip3_LH_C_1³⁸ -> (fun _lh_zip3_LH_C_1³⁹ -> 
//│ 													let t¹⁵ = zip3_lh_₁(_lh_zip3_LH_C_1³⁹, _lh_zip3_LH_C_1³⁸, _lh_zip3_LH_C_1³⁵)
//│ 													in let h¹⁵ = 	
//│ 														let _lh_pic_LH_P3_2⁰ = _lh_zip3_LH_C_0²⁶
//│ 														in let _lh_pic_LH_P3_1⁰ = _lh_zip3_LH_C_0²⁷
//│ 														in let _lh_pic_LH_P3_0⁰ = _lh_zip3_LH_C_0²⁸
//│ 														in (fun table⁰ -> (fun title⁰ -> mappend_lh_₁(title⁰(_lh_pic_LH_P3_0⁰), table⁰(_lh_pic_LH_P3_1⁰, _lh_pic_LH_P3_2⁰))))
//│ 													in (fun f²⁷ -> [LH_C f²⁷(h¹⁵) map_lh_₂(f²⁷, t¹⁵)])))))
//│ 											in let _lh_zip3_LH_C_0²⁹ = 30
//│ 											in (fun _lh_zip3_LH_C_0³⁰ -> (fun _lh_zip3_LH_C_0³¹ -> (fun _lh_zip3_LH_C_1⁴⁰ -> (fun _lh_zip3_LH_C_1⁴¹ -> 
//│ 												let t¹⁶ = zip3_lh_₁(_lh_zip3_LH_C_1⁴¹, _lh_zip3_LH_C_1⁴⁰, _lh_zip3_LH_C_1³⁴)
//│ 												in let h¹⁶ = 	
//│ 													let _lh_pic_LH_P3_2¹ = _lh_zip3_LH_C_0²⁹
//│ 													in let _lh_pic_LH_P3_1¹ = _lh_zip3_LH_C_0³⁰
//│ 													in let _lh_pic_LH_P3_0¹ = _lh_zip3_LH_C_0³¹
//│ 													in (fun table¹ -> (fun title¹ -> mappend_lh_₁(title¹(_lh_pic_LH_P3_0¹), table¹(_lh_pic_LH_P3_1¹, _lh_pic_LH_P3_2¹))))
//│ 												in (fun f²⁸ -> [LH_C f²⁸(h¹⁶) map_lh_₂(f²⁸, t¹⁶)])))))
//│ 										in let _lh_zip3_LH_C_0³² = 31
//│ 										in (fun _lh_zip3_LH_C_0³³ -> (fun _lh_zip3_LH_C_0³⁴ -> (fun _lh_zip3_LH_C_1⁴² -> (fun _lh_zip3_LH_C_1⁴³ -> 
//│ 											let t¹⁷ = zip3_lh_₁(_lh_zip3_LH_C_1⁴³, _lh_zip3_LH_C_1⁴², _lh_zip3_LH_C_1³³)
//│ 											in let h¹⁷ = 	
//│ 												let _lh_pic_LH_P3_2² = _lh_zip3_LH_C_0³²
//│ 												in let _lh_pic_LH_P3_1² = _lh_zip3_LH_C_0³³
//│ 												in let _lh_pic_LH_P3_0² = _lh_zip3_LH_C_0³⁴
//│ 												in (fun table² -> (fun title² -> mappend_lh_₁(title²(_lh_pic_LH_P3_0²), table²(_lh_pic_LH_P3_1², _lh_pic_LH_P3_2²))))
//│ 											in (fun f²⁹ -> [LH_C f²⁹(h¹⁷) map_lh_₂(f²⁹, t¹⁷)])))))
//│ 									in let _lh_zip3_LH_C_0³⁵ = 30
//│ 									in (fun _lh_zip3_LH_C_0³⁶ -> (fun _lh_zip3_LH_C_0³⁷ -> (fun _lh_zip3_LH_C_1⁴⁴ -> (fun _lh_zip3_LH_C_1⁴⁵ -> 
//│ 										let t¹⁸ = zip3_lh_₁(_lh_zip3_LH_C_1⁴⁵, _lh_zip3_LH_C_1⁴⁴, _lh_zip3_LH_C_1³²)
//│ 										in let h¹⁸ = 	
//│ 											let _lh_pic_LH_P3_2³ = _lh_zip3_LH_C_0³⁵
//│ 											in let _lh_pic_LH_P3_1³ = _lh_zip3_LH_C_0³⁶
//│ 											in let _lh_pic_LH_P3_0³ = _lh_zip3_LH_C_0³⁷
//│ 											in (fun table³ -> (fun title³ -> mappend_lh_₁(title³(_lh_pic_LH_P3_0³), table³(_lh_pic_LH_P3_1³, _lh_pic_LH_P3_2³))))
//│ 										in (fun f³⁰ -> [LH_C f³⁰(h¹⁸) map_lh_₂(f³⁰, t¹⁸)])))))
//│ 								in let _lh_zip3_LH_C_0³⁸ = 31
//│ 								in (fun _lh_zip3_LH_C_0³⁹ -> (fun _lh_zip3_LH_C_0⁴⁰ -> (fun _lh_zip3_LH_C_1⁴⁶ -> (fun _lh_zip3_LH_C_1⁴⁷ -> 
//│ 									let t¹⁹ = zip3_lh_₁(_lh_zip3_LH_C_1⁴⁷, _lh_zip3_LH_C_1⁴⁶, _lh_zip3_LH_C_1³¹)
//│ 									in let h¹⁹ = 	
//│ 										let _lh_pic_LH_P3_2⁴ = _lh_zip3_LH_C_0³⁸
//│ 										in let _lh_pic_LH_P3_1⁴ = _lh_zip3_LH_C_0³⁹
//│ 										in let _lh_pic_LH_P3_0⁴ = _lh_zip3_LH_C_0⁴⁰
//│ 										in (fun table⁴ -> (fun title⁴ -> mappend_lh_₁(title⁴(_lh_pic_LH_P3_0⁴), table⁴(_lh_pic_LH_P3_1⁴, _lh_pic_LH_P3_2⁴))))
//│ 									in (fun f³¹ -> [LH_C f³¹(h¹⁹) map_lh_₂(f³¹, t¹⁹)])))))
//│ 							in let _lh_zip3_LH_C_0⁴¹ = 31
//│ 							in (fun _lh_zip3_LH_C_0⁴² -> (fun _lh_zip3_LH_C_0⁴³ -> (fun _lh_zip3_LH_C_1⁴⁸ -> (fun _lh_zip3_LH_C_1⁴⁹ -> 
//│ 								let t²⁰ = zip3_lh_₁(_lh_zip3_LH_C_1⁴⁹, _lh_zip3_LH_C_1⁴⁸, _lh_zip3_LH_C_1³⁰)
//│ 								in let h²⁰ = 	
//│ 									let _lh_pic_LH_P3_2⁵ = _lh_zip3_LH_C_0⁴¹
//│ 									in let _lh_pic_LH_P3_1⁵ = _lh_zip3_LH_C_0⁴²
//│ 									in let _lh_pic_LH_P3_0⁵ = _lh_zip3_LH_C_0⁴³
//│ 									in (fun table⁵ -> (fun title⁵ -> mappend_lh_₁(title⁵(_lh_pic_LH_P3_0⁵), table⁵(_lh_pic_LH_P3_1⁵, _lh_pic_LH_P3_2⁵))))
//│ 								in (fun f³² -> [LH_C f³²(h²⁰) map_lh_₂(f³², t²⁰)])))))
//│ 						in let _lh_zip3_LH_C_0⁴⁴ = 30
//│ 						in (fun _lh_zip3_LH_C_0⁴⁵ -> (fun _lh_zip3_LH_C_0⁴⁶ -> (fun _lh_zip3_LH_C_1⁵⁰ -> (fun _lh_zip3_LH_C_1⁵¹ -> 
//│ 							let t²¹ = zip3_lh_₁(_lh_zip3_LH_C_1⁵¹, _lh_zip3_LH_C_1⁵⁰, _lh_zip3_LH_C_1²⁹)
//│ 							in let h²¹ = 	
//│ 								let _lh_pic_LH_P3_2⁶ = _lh_zip3_LH_C_0⁴⁴
//│ 								in let _lh_pic_LH_P3_1⁶ = _lh_zip3_LH_C_0⁴⁵
//│ 								in let _lh_pic_LH_P3_0⁶ = _lh_zip3_LH_C_0⁴⁶
//│ 								in (fun table⁶ -> (fun title⁶ -> mappend_lh_₁(title⁶(_lh_pic_LH_P3_0⁶), table⁶(_lh_pic_LH_P3_1⁶, _lh_pic_LH_P3_2⁶))))
//│ 							in (fun f³³ -> [LH_C f³³(h²¹) map_lh_₂(f³³, t²¹)])))))
//│ 					in let _lh_zip3_LH_C_0⁴⁷ = 31
//│ 					in (fun _lh_zip3_LH_C_0⁴⁸ -> (fun _lh_zip3_LH_C_0⁴⁹ -> (fun _lh_zip3_LH_C_1⁵² -> (fun _lh_zip3_LH_C_1⁵³ -> 
//│ 						let t²² = zip3_lh_₁(_lh_zip3_LH_C_1⁵³, _lh_zip3_LH_C_1⁵², _lh_zip3_LH_C_1²⁸)
//│ 						in let h²² = 	
//│ 							let _lh_pic_LH_P3_2⁷ = _lh_zip3_LH_C_0⁴⁷
//│ 							in let _lh_pic_LH_P3_1⁷ = _lh_zip3_LH_C_0⁴⁸
//│ 							in let _lh_pic_LH_P3_0⁷ = _lh_zip3_LH_C_0⁴⁹
//│ 							in (fun table⁷ -> (fun title⁷ -> mappend_lh_₁(title⁷(_lh_pic_LH_P3_0⁷), table⁷(_lh_pic_LH_P3_1⁷, _lh_pic_LH_P3_2⁷))))
//│ 						in (fun f³⁴ -> [LH_C f³⁴(h²²) map_lh_₂(f³⁴, t²²)])))))
//│ 				in let _lh_zip3_LH_C_0⁵⁰ = 30
//│ 				in (fun _lh_zip3_LH_C_0⁵¹ -> (fun _lh_zip3_LH_C_0⁵² -> (fun _lh_zip3_LH_C_1⁵⁴ -> (fun _lh_zip3_LH_C_1⁵⁵ -> 
//│ 					let t²³ = zip3_lh_₁(_lh_zip3_LH_C_1⁵⁵, _lh_zip3_LH_C_1⁵⁴, _lh_zip3_LH_C_1²⁷)
//│ 					in let h²³ = 	
//│ 						let _lh_pic_LH_P3_2⁸ = _lh_zip3_LH_C_0⁵⁰
//│ 						in let _lh_pic_LH_P3_1⁸ = _lh_zip3_LH_C_0⁵¹
//│ 						in let _lh_pic_LH_P3_0⁸ = _lh_zip3_LH_C_0⁵²
//│ 						in (fun table⁸ -> (fun title⁸ -> mappend_lh_₁(title⁸(_lh_pic_LH_P3_0⁸), table⁸(_lh_pic_LH_P3_1⁸, _lh_pic_LH_P3_2⁸))))
//│ 					in (fun f³⁵ -> [LH_C f³⁵(h²³) map_lh_₂(f³⁵, t²³)])))))
//│ 			in let _lh_zip3_LH_C_0⁵³ = 31
//│ 			in (fun _lh_zip3_LH_C_0⁵⁴ -> (fun _lh_zip3_LH_C_0⁵⁵ -> (fun _lh_zip3_LH_C_1⁵⁶ -> (fun _lh_zip3_LH_C_1⁵⁷ -> 
//│ 				let t²⁴ = zip3_lh_₁(_lh_zip3_LH_C_1⁵⁷, _lh_zip3_LH_C_1⁵⁶, _lh_zip3_LH_C_1²⁶)
//│ 				in let h²⁴ = 	
//│ 					let _lh_pic_LH_P3_2⁹ = _lh_zip3_LH_C_0⁵³
//│ 					in let _lh_pic_LH_P3_1⁹ = _lh_zip3_LH_C_0⁵⁴
//│ 					in let _lh_pic_LH_P3_0⁹ = _lh_zip3_LH_C_0⁵⁵
//│ 					in (fun table⁹ -> (fun title⁹ -> mappend_lh_₁(title⁹(_lh_pic_LH_P3_0⁹), table⁹(_lh_pic_LH_P3_1⁹, _lh_pic_LH_P3_2⁹))))
//│ 				in (fun f³⁶ -> [LH_C f³⁶(h²⁴) map_lh_₂(f³⁶, t²⁴)])))))
//│ 		in let _lh_zip3_LH_C_0⁵⁶ = feb¹
//│ 		in (fun _lh_zip3_LH_C_0⁵⁷ -> (fun _lh_zip3_LH_C_0⁵⁸ -> (fun _lh_zip3_LH_C_1⁵⁸ -> (fun _lh_zip3_LH_C_1⁵⁹ -> 
//│ 			let t²⁵ = zip3_lh_₁(_lh_zip3_LH_C_1⁵⁹, _lh_zip3_LH_C_1⁵⁸, _lh_zip3_LH_C_1²⁵)
//│ 			in let h²⁵ = 	
//│ 				let _lh_pic_LH_P3_2¹⁰ = _lh_zip3_LH_C_0⁵⁶
//│ 				in let _lh_pic_LH_P3_1¹⁰ = _lh_zip3_LH_C_0⁵⁷
//│ 				in let _lh_pic_LH_P3_0¹⁰ = _lh_zip3_LH_C_0⁵⁸
//│ 				in (fun table¹⁰ -> (fun title¹⁰ -> mappend_lh_₁(title¹⁰(_lh_pic_LH_P3_0¹⁰), table¹⁰(_lh_pic_LH_P3_1¹⁰, _lh_pic_LH_P3_2¹⁰))))
//│ 			in (fun f³⁷ -> [LH_C f³⁷(h²⁵) map_lh_₂(f³⁷, t²⁵)])))))
//│ 	in let _lh_zip3_LH_C_0⁵⁹ = 31
//│ 	in let t²⁶ = zip3_lh_₁(_lh_zip3_LH_C_1⁶¹, _lh_zip3_LH_C_1⁶⁰, _lh_zip3_LH_C_1²⁴)
//│ 	in let h²⁶ = 	
//│ 		let _lh_pic_LH_P3_2¹¹ = _lh_zip3_LH_C_0⁵⁹
//│ 		in let _lh_pic_LH_P3_1¹¹ = _lh_zip3_LH_C_0⁶⁰
//│ 		in let _lh_pic_LH_P3_0¹¹ = _lh_zip3_LH_C_0⁶¹
//│ 		in (fun table¹¹ -> (fun title¹¹ -> mappend_lh_₁(title¹¹(_lh_pic_LH_P3_0¹¹), table¹¹(_lh_pic_LH_P3_1¹¹, _lh_pic_LH_P3_2¹¹))))
//│ 	in [LH_C f³⁸(h²⁶) map_lh_₂(f³⁸, t²⁶)]
//│ def monthLengths_lh_₂(_lh_monthLengths_arg1⁰, _lh_scanl_arg1¹², _lh_scanl_arg2¹²) = 
//│ 	let feb⁰ = if leap_lh_₁(_lh_monthLengths_arg1⁰) then 29 else 28
//│ 	in let _lh_scanl_LH_C_1⁰ = 	
//│ 		let _lh_scanl_LH_C_1¹ = 	
//│ 			let _lh_scanl_LH_C_1² = 	
//│ 				let _lh_scanl_LH_C_1³ = 	
//│ 					let _lh_scanl_LH_C_1⁴ = 	
//│ 						let _lh_scanl_LH_C_1⁵ = 	
//│ 							let _lh_scanl_LH_C_1⁶ = 	
//│ 								let _lh_scanl_LH_C_1⁷ = 	
//│ 									let _lh_scanl_LH_C_1⁸ = 	
//│ 										let _lh_scanl_LH_C_1⁹ = 	
//│ 											let _lh_scanl_LH_C_1¹⁰ = 	
//│ 												let _lh_scanl_LH_C_1¹¹ = (fun _lh_scanl_arg1⁰ -> (fun _lh_scanl_arg2⁰ -> (fun f² -> [LH_N])))
//│ 												in let _lh_scanl_LH_C_0⁰ = 31
//│ 												in (fun _lh_scanl_arg1¹ -> (fun _lh_scanl_arg2¹ -> scanl_lh_₁(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0⁰), _lh_scanl_LH_C_1¹¹)))
//│ 											in let _lh_scanl_LH_C_0¹ = 30
//│ 											in (fun _lh_scanl_arg1² -> (fun _lh_scanl_arg2² -> scanl_lh_₁(_lh_scanl_arg1², _lh_scanl_arg1²(_lh_scanl_arg2², _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹⁰)))
//│ 										in let _lh_scanl_LH_C_0² = 31
//│ 										in (fun _lh_scanl_arg1³ -> (fun _lh_scanl_arg2³ -> scanl_lh_₁(_lh_scanl_arg1³, _lh_scanl_arg1³(_lh_scanl_arg2³, _lh_scanl_LH_C_0²), _lh_scanl_LH_C_1⁹)))
//│ 									in let _lh_scanl_LH_C_0³ = 30
//│ 									in (fun _lh_scanl_arg1⁴ -> (fun _lh_scanl_arg2⁴ -> scanl_lh_₁(_lh_scanl_arg1⁴, _lh_scanl_arg1⁴(_lh_scanl_arg2⁴, _lh_scanl_LH_C_0³), _lh_scanl_LH_C_1⁸)))
//│ 								in let _lh_scanl_LH_C_0⁴ = 31
//│ 								in (fun _lh_scanl_arg1⁵ -> (fun _lh_scanl_arg2⁵ -> scanl_lh_₁(_lh_scanl_arg1⁵, _lh_scanl_arg1⁵(_lh_scanl_arg2⁵, _lh_scanl_LH_C_0⁴), _lh_scanl_LH_C_1⁷)))
//│ 							in let _lh_scanl_LH_C_0⁵ = 31
//│ 							in (fun _lh_scanl_arg1⁶ -> (fun _lh_scanl_arg2⁶ -> scanl_lh_₁(_lh_scanl_arg1⁶, _lh_scanl_arg1⁶(_lh_scanl_arg2⁶, _lh_scanl_LH_C_0⁵), _lh_scanl_LH_C_1⁶)))
//│ 						in let _lh_scanl_LH_C_0⁶ = 30
//│ 						in (fun _lh_scanl_arg1⁷ -> (fun _lh_scanl_arg2⁷ -> scanl_lh_₁(_lh_scanl_arg1⁷, _lh_scanl_arg1⁷(_lh_scanl_arg2⁷, _lh_scanl_LH_C_0⁶), _lh_scanl_LH_C_1⁵)))
//│ 					in let _lh_scanl_LH_C_0⁷ = 31
//│ 					in (fun _lh_scanl_arg1⁸ -> (fun _lh_scanl_arg2⁸ -> scanl_lh_₁(_lh_scanl_arg1⁸, _lh_scanl_arg1⁸(_lh_scanl_arg2⁸, _lh_scanl_LH_C_0⁷), _lh_scanl_LH_C_1⁴)))
//│ 				in let _lh_scanl_LH_C_0⁸ = 30
//│ 				in (fun _lh_scanl_arg1⁹ -> (fun _lh_scanl_arg2⁹ -> scanl_lh_₁(_lh_scanl_arg1⁹, _lh_scanl_arg1⁹(_lh_scanl_arg2⁹, _lh_scanl_LH_C_0⁸), _lh_scanl_LH_C_1³)))
//│ 			in let _lh_scanl_LH_C_0⁹ = 31
//│ 			in (fun _lh_scanl_arg1¹⁰ -> (fun _lh_scanl_arg2¹⁰ -> scanl_lh_₁(_lh_scanl_arg1¹⁰, _lh_scanl_arg1¹⁰(_lh_scanl_arg2¹⁰, _lh_scanl_LH_C_0⁹), _lh_scanl_LH_C_1²)))
//│ 		in let _lh_scanl_LH_C_0¹⁰ = feb⁰
//│ 		in (fun _lh_scanl_arg1¹¹ -> (fun _lh_scanl_arg2¹¹ -> scanl_lh_₁(_lh_scanl_arg1¹¹, _lh_scanl_arg1¹¹(_lh_scanl_arg2¹¹, _lh_scanl_LH_C_0¹⁰), _lh_scanl_LH_C_1¹)))
//│ 	in let _lh_scanl_LH_C_0¹¹ = 31
//│ 	in scanl_lh_₁(_lh_scanl_arg1¹², _lh_scanl_arg1¹²(_lh_scanl_arg2¹², _lh_scanl_LH_C_0¹¹), _lh_scanl_LH_C_1⁰)
//│ def monthNames_lh_₁(_lh_zip3_arg2¹², _lh_zip3_arg3¹²) = 
//│ 	let _lh_zip3_LH_C_1⁰ = 	
//│ 		let _lh_zip3_LH_C_1¹ = 	
//│ 			let _lh_zip3_LH_C_1² = 	
//│ 				let _lh_zip3_LH_C_1³ = 	
//│ 					let _lh_zip3_LH_C_1⁴ = 	
//│ 						let _lh_zip3_LH_C_1⁵ = 	
//│ 							let _lh_zip3_LH_C_1⁶ = 	
//│ 								let _lh_zip3_LH_C_1⁷ = 	
//│ 									let _lh_zip3_LH_C_1⁸ = 	
//│ 										let _lh_zip3_LH_C_1⁹ = 	
//│ 											let _lh_zip3_LH_C_1¹⁰ = 	
//│ 												let _lh_zip3_LH_C_1¹¹ = (fun _lh_zip3_arg2⁰ -> (fun _lh_zip3_arg3⁰ -> (fun f³ -> [LH_N])))
//│ 												in let _lh_zip3_LH_C_0⁰ = [LH_C 'D' [LH_C 'e' [LH_C 'c' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]
//│ 												in (fun _lh_zip3_arg2¹ -> (fun _lh_zip3_arg3¹ -> 
//│ 													let _lh_matchIdent⁰ = _lh_zip3_arg2¹
//│ 													in case _lh_matchIdent⁰ of {
//│ 														LH_C _lh_zip3_LH_C_0¹ _lh_zip3_LH_C_1¹² => 
//│ 															let _lh_matchIdent¹ = _lh_zip3_arg3¹
//│ 															in _lh_matchIdent¹(_lh_zip3_LH_C_0¹, _lh_zip3_LH_C_0⁰, _lh_zip3_LH_C_1¹², _lh_zip3_LH_C_1¹¹)
//│ 														| LH_N  => (fun f⁴ -> [LH_N])}))
//│ 											in let _lh_zip3_LH_C_0² = [LH_C 'N' [LH_C 'o' [LH_C 'v' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]
//│ 											in (fun _lh_zip3_arg2² -> (fun _lh_zip3_arg3² -> 
//│ 												let _lh_matchIdent² = _lh_zip3_arg2²
//│ 												in case _lh_matchIdent² of {
//│ 													LH_C _lh_zip3_LH_C_0³ _lh_zip3_LH_C_1¹³ => 
//│ 														let _lh_matchIdent³ = _lh_zip3_arg3²
//│ 														in _lh_matchIdent³(_lh_zip3_LH_C_0³, _lh_zip3_LH_C_0², _lh_zip3_LH_C_1¹³, _lh_zip3_LH_C_1¹⁰)
//│ 													| LH_N  => (fun f⁵ -> [LH_N])}))
//│ 										in let _lh_zip3_LH_C_0⁴ = [LH_C 'O' [LH_C 'c' [LH_C 't' [LH_C 'o' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]
//│ 										in (fun _lh_zip3_arg2³ -> (fun _lh_zip3_arg3³ -> 
//│ 											let _lh_matchIdent⁴ = _lh_zip3_arg2³
//│ 											in case _lh_matchIdent⁴ of {
//│ 												LH_C _lh_zip3_LH_C_0⁵ _lh_zip3_LH_C_1¹⁴ => 
//│ 													let _lh_matchIdent⁵ = _lh_zip3_arg3³
//│ 													in _lh_matchIdent⁵(_lh_zip3_LH_C_0⁵, _lh_zip3_LH_C_0⁴, _lh_zip3_LH_C_1¹⁴, _lh_zip3_LH_C_1⁹)
//│ 												| LH_N  => (fun f⁶ -> [LH_N])}))
//│ 									in let _lh_zip3_LH_C_0⁶ = [LH_C 'S' [LH_C 'e' [LH_C 'p' [LH_C 't' [LH_C 'e' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]]]]
//│ 									in (fun _lh_zip3_arg2⁴ -> (fun _lh_zip3_arg3⁴ -> 
//│ 										let _lh_matchIdent⁶ = _lh_zip3_arg2⁴
//│ 										in case _lh_matchIdent⁶ of {
//│ 											LH_C _lh_zip3_LH_C_0⁷ _lh_zip3_LH_C_1¹⁵ => 
//│ 												let _lh_matchIdent⁷ = _lh_zip3_arg3⁴
//│ 												in _lh_matchIdent⁷(_lh_zip3_LH_C_0⁷, _lh_zip3_LH_C_0⁶, _lh_zip3_LH_C_1¹⁵, _lh_zip3_LH_C_1⁸)
//│ 											| LH_N  => (fun f⁷ -> [LH_N])}))
//│ 								in let _lh_zip3_LH_C_0⁸ = [LH_C 'A' [LH_C 'u' [LH_C 'g' [LH_C 'u' [LH_C 's' [LH_C 't' [LH_N]]]]]]]
//│ 								in (fun _lh_zip3_arg2⁵ -> (fun _lh_zip3_arg3⁵ -> 
//│ 									let _lh_matchIdent⁸ = _lh_zip3_arg2⁵
//│ 									in case _lh_matchIdent⁸ of {
//│ 										LH_C _lh_zip3_LH_C_0⁹ _lh_zip3_LH_C_1¹⁶ => 
//│ 											let _lh_matchIdent⁹ = _lh_zip3_arg3⁵
//│ 											in _lh_matchIdent⁹(_lh_zip3_LH_C_0⁹, _lh_zip3_LH_C_0⁸, _lh_zip3_LH_C_1¹⁶, _lh_zip3_LH_C_1⁷)
//│ 										| LH_N  => (fun f⁸ -> [LH_N])}))
//│ 							in let _lh_zip3_LH_C_0¹⁰ = [LH_C 'J' [LH_C 'u' [LH_C 'l' [LH_C 'y' [LH_N]]]]]
//│ 							in (fun _lh_zip3_arg2⁶ -> (fun _lh_zip3_arg3⁶ -> 
//│ 								let _lh_matchIdent¹⁰ = _lh_zip3_arg2⁶
//│ 								in case _lh_matchIdent¹⁰ of {
//│ 									LH_C _lh_zip3_LH_C_0¹¹ _lh_zip3_LH_C_1¹⁷ => 
//│ 										let _lh_matchIdent¹¹ = _lh_zip3_arg3⁶
//│ 										in _lh_matchIdent¹¹(_lh_zip3_LH_C_0¹¹, _lh_zip3_LH_C_0¹⁰, _lh_zip3_LH_C_1¹⁷, _lh_zip3_LH_C_1⁶)
//│ 									| LH_N  => (fun f⁹ -> [LH_N])}))
//│ 						in let _lh_zip3_LH_C_0¹² = [LH_C 'J' [LH_C 'u' [LH_C 'n' [LH_C 'e' [LH_N]]]]]
//│ 						in (fun _lh_zip3_arg2⁷ -> (fun _lh_zip3_arg3⁷ -> 
//│ 							let _lh_matchIdent¹² = _lh_zip3_arg2⁷
//│ 							in case _lh_matchIdent¹² of {
//│ 								LH_C _lh_zip3_LH_C_0¹³ _lh_zip3_LH_C_1¹⁸ => 
//│ 									let _lh_matchIdent¹³ = _lh_zip3_arg3⁷
//│ 									in _lh_matchIdent¹³(_lh_zip3_LH_C_0¹³, _lh_zip3_LH_C_0¹², _lh_zip3_LH_C_1¹⁸, _lh_zip3_LH_C_1⁵)
//│ 								| LH_N  => (fun f¹⁰ -> [LH_N])}))
//│ 					in let _lh_zip3_LH_C_0¹⁴ = [LH_C 'M' [LH_C 'a' [LH_C 'y' [LH_N]]]]
//│ 					in (fun _lh_zip3_arg2⁸ -> (fun _lh_zip3_arg3⁸ -> 
//│ 						let _lh_matchIdent¹⁴ = _lh_zip3_arg2⁸
//│ 						in case _lh_matchIdent¹⁴ of {
//│ 							LH_C _lh_zip3_LH_C_0¹⁵ _lh_zip3_LH_C_1¹⁹ => 
//│ 								let _lh_matchIdent¹⁵ = _lh_zip3_arg3⁸
//│ 								in _lh_matchIdent¹⁵(_lh_zip3_LH_C_0¹⁵, _lh_zip3_LH_C_0¹⁴, _lh_zip3_LH_C_1¹⁹, _lh_zip3_LH_C_1⁴)
//│ 							| LH_N  => (fun f¹¹ -> [LH_N])}))
//│ 				in let _lh_zip3_LH_C_0¹⁶ = [LH_C 'A' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'l' [LH_N]]]]]]
//│ 				in (fun _lh_zip3_arg2⁹ -> (fun _lh_zip3_arg3⁹ -> 
//│ 					let _lh_matchIdent¹⁶ = _lh_zip3_arg2⁹
//│ 					in case _lh_matchIdent¹⁶ of {
//│ 						LH_C _lh_zip3_LH_C_0¹⁷ _lh_zip3_LH_C_1²⁰ => 
//│ 							let _lh_matchIdent¹⁷ = _lh_zip3_arg3⁹
//│ 							in _lh_matchIdent¹⁷(_lh_zip3_LH_C_0¹⁷, _lh_zip3_LH_C_0¹⁶, _lh_zip3_LH_C_1²⁰, _lh_zip3_LH_C_1³)
//│ 						| LH_N  => (fun f¹² -> [LH_N])}))
//│ 			in let _lh_zip3_LH_C_0¹⁸ = [LH_C 'M' [LH_C 'a' [LH_C 'r' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun _lh_zip3_arg2¹⁰ -> (fun _lh_zip3_arg3¹⁰ -> 
//│ 				let _lh_matchIdent¹⁸ = _lh_zip3_arg2¹⁰
//│ 				in case _lh_matchIdent¹⁸ of {
//│ 					LH_C _lh_zip3_LH_C_0¹⁹ _lh_zip3_LH_C_1²¹ => 
//│ 						let _lh_matchIdent¹⁹ = _lh_zip3_arg3¹⁰
//│ 						in _lh_matchIdent¹⁹(_lh_zip3_LH_C_0¹⁹, _lh_zip3_LH_C_0¹⁸, _lh_zip3_LH_C_1²¹, _lh_zip3_LH_C_1²)
//│ 					| LH_N  => (fun f¹³ -> [LH_N])}))
//│ 		in let _lh_zip3_LH_C_0²⁰ = [LH_C 'F' [LH_C 'e' [LH_C 'b' [LH_C 'r' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]]]
//│ 		in (fun _lh_zip3_arg2¹¹ -> (fun _lh_zip3_arg3¹¹ -> 
//│ 			let _lh_matchIdent²⁰ = _lh_zip3_arg2¹¹
//│ 			in case _lh_matchIdent²⁰ of {
//│ 				LH_C _lh_zip3_LH_C_0²¹ _lh_zip3_LH_C_1²² => 
//│ 					let _lh_matchIdent²¹ = _lh_zip3_arg3¹¹
//│ 					in _lh_matchIdent²¹(_lh_zip3_LH_C_0²¹, _lh_zip3_LH_C_0²⁰, _lh_zip3_LH_C_1²², _lh_zip3_LH_C_1¹)
//│ 				| LH_N  => (fun f¹⁴ -> [LH_N])}))
//│ 	in let _lh_zip3_LH_C_0²² = [LH_C 'J' [LH_C 'a' [LH_C 'n' [LH_C 'u' [LH_C 'a' [LH_C 'r' [LH_C 'y' [LH_N]]]]]]]]
//│ 	in let _lh_matchIdent²² = _lh_zip3_arg2¹²
//│ 	in case _lh_matchIdent²² of {
//│ 		LH_C _lh_zip3_LH_C_0²³ _lh_zip3_LH_C_1²³ => 
//│ 			let _lh_matchIdent²³ = _lh_zip3_arg3¹²
//│ 			in _lh_matchIdent²³(_lh_zip3_LH_C_0²³, _lh_zip3_LH_C_0²², _lh_zip3_LH_C_1²³, _lh_zip3_LH_C_1⁰)
//│ 		| LH_N  => (fun f¹⁵ -> [LH_N])}
//│ def rjustify_lh_₁(_lh_rjustify_arg1⁰, _lh_rjustify_arg2⁰) = mappend_lh_₁₂(space_lh_₄((_lh_rjustify_arg1⁰ - length_lh_₃(_lh_rjustify_arg2⁰))), _lh_rjustify_arg2⁰)
//│ def scanl_lh_₁(_lh_scanl_arg1¹³, _lh_scanl_arg2¹³, _lh_scanl_arg3⁰, f⁴³) = 
//│ 	let t³⁵ = 	
//│ 		let _lh_matchIdent²⁴ = _lh_scanl_arg3⁰
//│ 		in _lh_matchIdent²⁴(_lh_scanl_arg1¹³, _lh_scanl_arg2¹³)
//│ 	in let h³⁵ = _lh_scanl_arg2¹³
//│ 	in [LH_C f⁴³(h³⁵) map_lh_₃(f⁴³, t³⁵)]
//│ def space_lh_₁(_lh_space_arg1³) = copy_lh_₆(_lh_space_arg1³, ' ')
//│ def space_lh_₂(_lh_space_arg1¹) = copy_lh_₆(_lh_space_arg1¹, ' ')
//│ def space_lh_₃(_lh_space_arg1²) = copy_lh_₆(_lh_space_arg1², ' ')
//│ def space_lh_₄(_lh_space_arg1⁰) = copy_lh_₆(_lh_space_arg1⁰, ' ')
//│ def spread_lh_₁(_lh_spread_arg1¹) = foldr1_lh_₁((fun a⁵ -> (fun b⁴ -> zipWith_lh_₂(mappend_lh_₁₂, a⁵, b⁴))), _lh_spread_arg1¹)
//│ def spread_lh_₂(_lh_spread_arg1⁰) = foldr1_lh_₁((fun a¹ -> (fun b¹ -> zipWith_lh_₂(mappend_lh_₁₂, a¹, b¹))), _lh_spread_arg1⁰)
//│ def stack_lh_₁(_lh_stack_arg1⁰) = foldr1_lh_₁((fun a⁶ -> (fun b⁵ -> mappend_lh_₁₂(a⁶, b⁵))), _lh_stack_arg1⁰)
//│ def stack_lh_₂(_lh_stack_arg1¹) = foldr1_lh_₁((fun a⁷ -> (fun b⁶ -> mappend_lh_₁₂(a⁷, b⁶))), _lh_stack_arg1¹)
//│ def take_lh_₁(n¹, ls³) = if (n¹ > 0) then case ls³ of {
//│ 	LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n¹ - 1), t¹⁰)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testCalendar_nofib_lh_₁(_lh_testCalendar_nofib_arg1⁰) = map_lh_₁((fun n⁰ -> length_lh_₁(cal_lh_₁(n⁰))), primId⁰(enumFromTo_lh_₁(1993, (1993 + _lh_testCalendar_nofib_arg1⁰))))
//│ def unlines_lh_₁(_lh_unlines_arg1⁰) = concat_lh_₁(map_lh_₆((fun l⁰ -> mappend_lh_₁₂(l⁰, [LH_C 'n' [LH_N]])), _lh_unlines_arg1⁰))
//│ def zip3_lh_₁(_lh_zip3_arg1⁰, _lh_zip3_arg2¹³, _lh_zip3_arg3¹³) = 
//│ 	let _lh_matchIdent²⁵ = _lh_zip3_arg1⁰
//│ 	in _lh_matchIdent²⁵(_lh_zip3_arg2¹³, _lh_zip3_arg3¹³)
//│ def zipWith_lh_₁(f²⁵, xs¹², ys¹², _lh_floatOutId_0⁴) = case xs¹² of {
//│ 	LH_C hx¹ tx¹ => case ys¹² of {
//│ 		LH_C hy¹ ty¹ => 
//│ 			let t¹³ = zipWith_lh_₁(f²⁵, tx¹, ty¹)
//│ 			in let h¹³ = f²⁵(hx¹, hy¹)
//│ 			in [LH_C h¹³ mappend_lh_₅(t¹³, _lh_floatOutId_0⁴)]
//│ 		| LH_N  => _lh_floatOutId_0⁴}
//│ 	| LH_N  => _lh_floatOutId_0⁴}
//│ def zipWith_lh_₂(f²⁰, xs⁸, ys⁸) = case xs⁸ of {
//│ 	LH_C hx⁰ tx⁰ => case ys⁸ of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C f²⁰(hx⁰, hy⁰) zipWith_lh_₂(f²⁰, tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
