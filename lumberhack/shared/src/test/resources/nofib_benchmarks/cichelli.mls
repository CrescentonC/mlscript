:NewParser
:ParseOnly


:lhNoIter
:lhInHaskell
:lhGenOCaml
enumFromTo_lz a b = lazy (if a <= b then a:(enumFromTo_lz (a + 1) b) else [])
max a b = if a > b then a else b
min a b = if a < b then a else b
last (h:t) = go h t
  where
    go h [] = h
    go h (head:t) = go head t
all p [] = True
all p (h:t) = if p h then all p t else False
data Key = K String Char Char Int {- String, end letters, length of string -}
data HashSet = H (Maybe Int) (Maybe Int) [Int]
type HashFun = [(Char,Int)]  {- Association list of Character to values -}
ends :: Key -> String
ends (K _ a z _) = [a,z]
morefreq :: Key -> Key -> Bool
morefreq (K _ a x _) (K _ b y _) = ((freq a) + (freq x)) > ((freq b) + (freq y))
freq :: Char -> Int
freq c = assoc c (freqtab 0)
assoc :: (Eq a) => a -> [(a,b)] -> b
assoc x ((y,z):yzs) = if polyEq x y then z else assoc x yzs
assocm :: (Eq a) => a -> [(a,b)] -> Maybe b
assocm x [] = Nothing
assocm x ((y,z):yzs) = if polyEq x y then Just z else assocm x yzs
--- freqtab :: [(Char, Int)]
freqtab _ = histo (concat (map ends (attribkeys (keys 0))))
histins x [] = [(x,1)]
histins x ((y,n):yns) = if polyEq x y then (y,n+1):yns else (y,n):(histins x yns)
histo :: (Eq a) => [a] -> [(a,Int)]
histo ls = (foldr histins []) ls
subset :: (Eq a) => [a] -> [a] -> Bool
subset xs ys = all (\x -> member x ys) xs
union :: (Eq a) => [a] -> [a] -> [a]
union xs ys = xs ++ [y | y <- ys, not (member y xs)]
attribkeys :: [String] -> [Key]
attribkeys ks = map (\k->(K k (head k) (last k) (length k))) ks
hinsert :: Int -> HashSet -> Maybe HashSet
hinsert h (H lo hi hs) =
  let lo' = minm lo h in
  let hi' = maxm hi h in
    if (member h hs) || ((1 + hi'- lo') > (length (keys 0))) then Nothing
    else Just (H (Just lo') (Just hi') (h:hs))
minm, maxm :: Maybe Int -> Int -> Int
minm Nothing y = y
minm (Just x) y = min x y
maxm Nothing y = y
maxm (Just x) y = max x y
member :: (Eq a) => a -> [a] -> Bool
member _ [] = False
member x (y:ys) = (polyEq x y) || (member x ys)
hash :: HashFun -> Key -> Int
hash cvs (K _ a z n) = n + (assoc a cvs) + (assoc z cvs)
partition' :: (a->Bool) -> [a] -> ([a],[a])
partition' p = foldr (select p) ([],[])
select p x (ts,fs) = if p x then (x:ts,fs) else (ts,x:fs)
freqsorted :: [Key] -> [Key]
freqsorted x = x
blocked :: [Key] -> [Key]
blocked ls = blocked' [] ls
blocked' ds [] = []
blocked' ds (k : ks) =
  let ds' = union ds (ends k) in
  case (partition' (\x->subset (ends x) ds') ks) of {
    (det,rest) ->  (k : det ++ blocked' ds' rest)
  }
keys _ = ["apple","banana","peach","apricot"]
data Status a = NotEver Int | YesIts Int a deriving Show
prog n = cichelli n
findhash :: [Key] -> FeedBack
findhash keys = findhash' (H Nothing Nothing []) [] keys
findhash' :: HashSet -> HashFun -> [Key] -> FeedBack
findhash' keyHashSet charAssocs [] = (YesIts 1 charAssocs)
findhash' keyHashSet charAssocs ((K s a z n):ks) =
  let try = (\newAssocs -> let newCharAssocs = newAssocs ++ charAssocs in (case (hinsert (hash newCharAssocs (K s a z n)) keyHashSet) of {Nothing -> (NotEver 1); Just newKeyHashSet -> findhash' newKeyHashSet newCharAssocs ks})) in
  let maxval = length (freqtab 0) in
  case (assocm a charAssocs, assocm z charAssocs) of
    (Nothing,Nothing) ->
        if polyEq a z then
          firstSuccess (\m-> try [(a,m)]) (enumFromTo_lz 0 maxval)
        else
          firstSuccess (\mn -> case mn of { (m,n) -> try [(a,m),(z,n)] }) (lazy [(m,n) | m<-(enumFromTo_lz 0 maxval), n<-(enumFromTo_lz 0 maxval)])
    (Nothing,Just zc) -> firstSuccess (\m->try [(a,m)]) (enumFromTo_lz 0 maxval)
    (Just ac,Nothing) -> firstSuccess (\n->try [(z,n)]) (enumFromTo_lz 0 maxval)
    (Just ac,Just zc) -> try []
-- Returns the first successful `working' function on a list of possible arguments
firstSuccess :: (a -> FeedBack) -> [a] -> FeedBack
firstSuccess f possibles =  first 0 (map_lz f possibles)
first :: Int -> [FeedBack] -> FeedBack
first k ls =
  case (force ls) of {
    [] -> NotEver k;
    (a:l) -> case a of
                  (YesIts leaves y) -> YesIts (k+leaves) y
                  (NotEver leaves)  -> first (k+leaves) l
  }
type FeedBack = Status HashFun
cichelli :: Int -> FeedBack
cichelli n =
  let attribkeys' = attribkeys ((keys 0) ++ take (n `mod` 2) (keys 0)) in
  let hashkeys = (blocked.freqsorted) attribkeys' in
  findhash hashkeys
testCichelli_nofib n = prog n
testCichelli_nofib $ primId 6
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testCichelli_nofib_lh_₁^1606(primId⁰(6))
//│ def all_lh_₁(_lh_all_arg1⁰, _lh_all_arg2⁰) = case _lh_all_arg2⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁^637(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False]
//│ 	| _  => error⁰}
//│ def assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_arg2¹) = case _lh_assoc_arg2¹ of {
//│ 	LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁^331(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_arg2⁰) = case _lh_assoc_arg2⁰ of {
//│ 	LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂^311(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_arg2¹) = case _lh_assocm_arg2¹ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁^958(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_arg2⁰) = case _lh_assocm_arg2⁰ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂^880(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def attribkeys_lh_₁(_lh_attribkeys_arg1¹) = map_lh_₁^1416((fun k¹ -> [K k¹ head_lh_₁^1418(k¹) last_lh_₁^1421(k¹) length_lh_₁^1424(k¹)]), _lh_attribkeys_arg1¹)
//│ def attribkeys_lh_₂(_lh_attribkeys_arg1⁰) = map_lh_₃^138((fun k⁰ -> [K k⁰ head_lh_₂^140(k⁰) last_lh_₂^143(k⁰) length_lh_₄^146(k⁰)]), _lh_attribkeys_arg1⁰)
//│ def blocked'_lh_₁(_lh_blocked'_arg1⁰, _lh_blocked'_arg2⁰) = case _lh_blocked'_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => 
//│ 		let ds'⁰ = union_lh_₁^1343(_lh_blocked'_arg1⁰, ends_lh_₁^1346(_lh_blocked'_LH_C_0⁰))
//│ 		in let _lh_matchIdent¹¹ = partition'_lh_₁^1350((fun x¹ -> subset_lh_₁^1351(ends_lh_₂^1352(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ 		in case _lh_matchIdent¹¹ of {
//│ 			LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂^1363([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁^1368(ds'⁰, _lh_blocked'_LH_P2_1⁰))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def blocked_lh_₁(_lh_blocked_arg1⁰) = blocked'_lh_₁^1447([LH_N], _lh_blocked_arg1⁰)
//│ def cichelli_lh_₁(_lh_cichelli_arg1⁰) = 
//│ 	let attribkeys'⁰ = attribkeys_lh_₁^1565(mappend_lh_₁^1566(keys_lh_₂^1567(0), take_lh_₁^1571((_lh_cichelli_arg1⁰ % 2), keys_lh_₁^1578(0))))
//│ 	in let hashkeys⁰ = (fun _lh_funcomp_x⁰ -> blocked_lh_₁^1584(freqsorted_lh_₁^1585(_lh_funcomp_x⁰)))(attribkeys'⁰)
//│ 	in findhash_lh_₁^1592(hashkeys⁰)
//│ def concat_lh_₁(lss⁰) = case lss⁰ of {
//│ 	LH_C h⁵ t⁵ => mappend_lh_₅^156(h⁵, concat_lh_₁^159(t⁵))
//│ 	| LH_N  => [LH_N]}
//│ def ends_lh_₁(_lh_ends_arg1²) = case _lh_ends_arg1² of {
//│ 	K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]
//│ 	| _  => error⁰}
//│ def ends_lh_₂(_lh_ends_arg1¹) = case _lh_ends_arg1¹ of {
//│ 	K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]
//│ 	| _  => error⁰}
//│ def ends_lh_₃(_lh_ends_arg1⁰) = case _lh_ends_arg1⁰ of {
//│ 	K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]
//│ 	| _  => error⁰}
//│ def enumFromTo_lz_lh_₁(_lh_enumFromTo_lz_arg1⁴, _lh_enumFromTo_lz_arg2⁴) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁴ <= _lh_enumFromTo_lz_arg2⁴) then [LH_C _lh_enumFromTo_lz_arg1⁴ enumFromTo_lz_lh_₁^999((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)] else [LH_N])
//│ def enumFromTo_lz_lh_₂(_lh_enumFromTo_lz_arg1³, _lh_enumFromTo_lz_arg2³) = lazy⁰(if (_lh_enumFromTo_lz_arg1³ <= _lh_enumFromTo_lz_arg2³) then [LH_C _lh_enumFromTo_lz_arg1³ enumFromTo_lz_lh_₂^977((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)] else [LH_N])
//│ def enumFromTo_lz_lh_₃(_lh_enumFromTo_lz_arg1², _lh_enumFromTo_lz_arg2²) = lazy⁰(if (_lh_enumFromTo_lz_arg1² <= _lh_enumFromTo_lz_arg2²) then [LH_C _lh_enumFromTo_lz_arg1² enumFromTo_lz_lh_₃^933((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)] else [LH_N])
//│ def enumFromTo_lz_lh_₄(_lh_enumFromTo_lz_arg1¹, _lh_enumFromTo_lz_arg2¹) = lazy⁰(if (_lh_enumFromTo_lz_arg1¹ <= _lh_enumFromTo_lz_arg2¹) then [LH_C _lh_enumFromTo_lz_arg1¹ enumFromTo_lz_lh_₄^802((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)] else [LH_N])
//│ def enumFromTo_lz_lh_₅(_lh_enumFromTo_lz_arg1⁰, _lh_enumFromTo_lz_arg2⁰) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁰ <= _lh_enumFromTo_lz_arg2⁰) then [LH_C _lh_enumFromTo_lz_arg1⁰ enumFromTo_lz_lh_₅^769((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)] else [LH_N])
//│ def findhash'_lh_₁(_lh_findhash'_arg1⁰, _lh_findhash'_arg2⁰, _lh_findhash'_arg3⁰) = case _lh_findhash'_arg3⁰ of {
//│ 	LH_N  => [YesIts 1 _lh_findhash'_arg2⁰]
//│ 	| LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {
//│ 		K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => 
//│ 			let try⁰ = (fun newAssocs⁰ -> 
//│ 				let newCharAssocs⁰ = mappend_lh_₃^1101(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ 				in let _lh_matchIdent⁸ = hinsert_lh_₁^1106(hash_lh_₁^1107(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ 				in case _lh_matchIdent⁸ of {
//│ 					Nothing  => [NotEver 1]
//│ 					| Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁^1122(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰)
//│ 					| _  => error⁰})
//│ 			in let maxval⁰ = length_lh_₂^1134(freqtab_lh_₁^1135(0))
//│ 			in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₂^1139(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁^1144(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ 			in case _lh_matchIdent⁹ of {
//│ 				LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {
//│ 					Nothing  => case _lh_findhash'_LH_P2_1⁰ of {
//│ 						Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄^1158((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂^1168(0, maxval⁰)) else firstSuccess_lh_₁^1174((fun mn⁰ -> 
//│ 							let _lh_matchIdent¹⁰ = mn⁰
//│ 							in case _lh_matchIdent¹⁰ of {
//│ 								LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]])
//│ 								| _  => error⁰}), 
//│ 							let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => 
//│ 									let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {
//│ 										LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)])
//│ 										| LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ 									in _lh_listcomp_fun²(enumFromTo_lz_lh_₄^1214(0, maxval⁰))
//│ 								| LH_N  => lazy⁰([LH_N])})
//│ 							in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃^1227(0, maxval⁰)))
//│ 						| Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂^1236((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅^1246(0, maxval⁰))
//│ 						| _  => error⁰}
//│ 					| Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {
//│ 						Nothing  => firstSuccess_lh_₃^1255((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁^1265(0, maxval⁰))
//│ 						| Just _lh_findhash'_Just_0³ => try⁰([LH_N])
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def findhash_lh_₁(_lh_findhash_arg1⁰) = findhash'_lh_₁^1405([H [Nothing] [Nothing] [LH_N]], [LH_N], _lh_findhash_arg1⁰)
//│ def firstSuccess_lh_₁(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³) = first_lh_₁^915(0, map_lz_lh_₁^918(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³))
//│ def firstSuccess_lh_₂(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²) = first_lh_₂^892(0, map_lz_lh_₂^895(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²))
//│ def firstSuccess_lh_₃(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹) = first_lh_₃^784(0, map_lz_lh_₃^787(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹))
//│ def firstSuccess_lh_₄(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰) = first_lh_₄^718(0, map_lz_lh_₄^721(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰))
//│ def first_lh_₁(_lh_first_arg1³, _lh_first_arg2³) = 
//│ 	let _lh_matchIdent⁶ = force⁰(_lh_first_arg2³)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_N  => [NotEver _lh_first_arg1³]
//│ 		| LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => 
//│ 			let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ 			in case _lh_matchIdent⁷ of {
//│ 				YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]
//│ 				| NotEver _lh_first_NotEver_0³ => first_lh_₁^566((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def first_lh_₂(_lh_first_arg1², _lh_first_arg2²) = 
//│ 	let _lh_matchIdent⁴ = force⁰(_lh_first_arg2²)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_N  => [NotEver _lh_first_arg1²]
//│ 		| LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => 
//│ 			let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ 			in case _lh_matchIdent⁵ of {
//│ 				YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]
//│ 				| NotEver _lh_first_NotEver_0² => first_lh_₂^516((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def first_lh_₃(_lh_first_arg1¹, _lh_first_arg2¹) = 
//│ 	let _lh_matchIdent² = force⁰(_lh_first_arg2¹)
//│ 	in case _lh_matchIdent² of {
//│ 		LH_N  => [NotEver _lh_first_arg1¹]
//│ 		| LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => 
//│ 			let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ 			in case _lh_matchIdent³ of {
//│ 				YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]
//│ 				| NotEver _lh_first_NotEver_0¹ => first_lh_₃^358((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def first_lh_₄(_lh_first_arg1⁰, _lh_first_arg2⁰) = 
//│ 	let _lh_matchIdent⁰ = force⁰(_lh_first_arg2⁰)
//│ 	in case _lh_matchIdent⁰ of {
//│ 		LH_N  => [NotEver _lh_first_arg1⁰]
//│ 		| LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => 
//│ 			let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ 			in case _lh_matchIdent¹ of {
//│ 				YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]
//│ 				| NotEver _lh_first_NotEver_0⁰ => first_lh_₄^268((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def foldr_lh_₁(f⁷, i¹, ls¹⁰) = case ls¹⁰ of {
//│ 	LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁^691(f⁷, i¹, t¹³))
//│ 	| LH_N  => i¹}
//│ def foldr_lh_₂(f¹, i⁰, ls³) = case ls³ of {
//│ 	LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂^105(f¹, i⁰, t⁴))
//│ 	| LH_N  => i⁰}
//│ def freqsorted_lh_₁(_lh_freqsorted_arg1⁰) = _lh_freqsorted_arg1⁰
//│ def freqtab_lh_₁(_lh_freqtab_arg1⁰) = histo_lh_₁^704(concat_lh_₁^705(map_lh_₂^706(ends_lh_₃^707, attribkeys_lh_₂^709(keys_lh_₄^710(0)))))
//│ def hash_lh_₁(_lh_hash_arg1⁰, _lh_hash_arg2⁰) = case _lh_hash_arg2⁰ of {
//│ 	K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂^745(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁^752(_lh_hash_K_2⁰, _lh_hash_arg1⁰))
//│ 	| _  => error⁰}
//│ def head_lh_₁(ls¹²) = case ls¹² of {
//│ 	LH_C h¹⁷ t¹⁷ => h¹⁷
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => h⁰
//│ 	| LH_N  => error⁰}
//│ def hinsert_lh_₁(_lh_hinsert_arg1⁰, _lh_hinsert_arg2⁰) = case _lh_hinsert_arg2⁰ of {
//│ 	H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => 
//│ 		let lo'⁰ = minm_lh_₁^818(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ 		in let hi'⁰ = maxm_lh_₁^823(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ 		in if (member_lh_₃^829(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > length_lh_₃^846(keys_lh_₃^847(0)))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]
//│ 	| _  => error⁰}
//│ def histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_arg2⁰) = case _lh_histins_arg2⁰ of {
//│ 	LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]
//│ 	| LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {
//│ 		LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁^88(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def histo_lh_₁(_lh_histo_arg1⁰) = foldr_lh_₂^245(histins_lh_₁^246, [LH_N], _lh_histo_arg1⁰)
//│ def keys_lh_₁(_lh_keys_arg1³) = [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]
//│ def keys_lh_₂(_lh_keys_arg1²) = [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]
//│ def keys_lh_₃(_lh_keys_arg1¹) = [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]
//│ def keys_lh_₄(_lh_keys_arg1⁰) = [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]
//│ def last_lh_₁(_lh_last_arg1¹) = case _lh_last_arg1¹ of {
//│ 	LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => 
//│ 		let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {
//│ 			LH_N  => _lh_go_arg1¹
//│ 			| LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹)
//│ 			| _  => error⁰}))
//│ 		in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def last_lh_₂(_lh_last_arg1⁰) = case _lh_last_arg1⁰ of {
//│ 	LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => 
//│ 		let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {
//│ 			LH_N  => _lh_go_arg1⁰
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls¹³) = case ls¹³ of {
//│ 	LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁^1299(t¹⁸))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹¹) = case ls¹¹ of {
//│ 	LH_C h¹⁴ t¹⁴ => (1 + length_lh_₂^733(t¹⁴))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls⁷) = case ls⁷ of {
//│ 	LH_C h⁹ t⁹ => (1 + length_lh_₃^464(t⁹))
//│ 	| LH_N  => 0}
//│ def length_lh_₄(ls¹) = case ls¹ of {
//│ 	LH_C h¹ t¹ => (1 + length_lh_₄^10(t¹))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f⁸, ls¹⁴) = case ls¹⁴ of {
//│ 	LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁^1331(f⁸, t¹⁹)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₂(f², ls⁴) = case ls⁴ of {
//│ 	LH_C h⁶ t⁶ => [LH_C f²(h⁶) map_lh_₂^179(f², t⁶)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₃(f⁰, ls²) = case ls² of {
//│ 	LH_C h² t² => [LH_C f⁰(h²) map_lh_₃^42(f⁰, t²)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lz_lh_₁(f⁶, ls⁹) = lazy⁰(case force⁰(ls⁹) of {
//│ 	LH_C h¹¹ t¹¹ => [LH_C f⁶(h¹¹) map_lz_lh_₁^590(f⁶, t¹¹)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₂(f⁵, ls⁸) = lazy⁰(case force⁰(ls⁸) of {
//│ 	LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lz_lh_₂^540(f⁵, t¹⁰)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₃(f⁴, ls⁶) = lazy⁰(case force⁰(ls⁶) of {
//│ 	LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lz_lh_₃^382(f⁴, t⁸)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₄(f³, ls⁵) = lazy⁰(case force⁰(ls⁵) of {
//│ 	LH_C h⁷ t⁷ => [LH_C f³(h⁷) map_lz_lh_₄^292(f³, t⁷)]
//│ 	| LH_N  => [LH_N]})
//│ def mappend_lh_₁(xs⁴, ys⁴) = case xs⁴ of {
//│ 	LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁^1437(t²¹, ys⁴)]
//│ 	| LH_N  => ys⁴}
//│ def mappend_lh_₂(xs³, ys³) = case xs³ of {
//│ 	LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂^1086(t¹⁶, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₃(xs², ys²) = case xs² of {
//│ 	LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃^905(t¹⁵, ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₄(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄^622(t¹², ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₅(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h³ t³ => [LH_C h³ mappend_lh_₅^54(t³, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def max_lh_₁(_lh_max_arg1⁰, _lh_max_arg2⁰) = if (_lh_max_arg1⁰ > _lh_max_arg2⁰) then _lh_max_arg1⁰ else _lh_max_arg2⁰
//│ def maxm_lh_₁(_lh_maxm_arg1⁰, _lh_maxm_arg2⁰) = case _lh_maxm_arg1⁰ of {
//│ 	Nothing  => _lh_maxm_arg2⁰
//│ 	| Just _lh_maxm_Just_0⁰ => max_lh_₁^451(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰)
//│ 	| _  => error⁰}
//│ def member_lh_₁(_lh_member_arg1², _lh_member_arg2²) = case _lh_member_arg2² of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁^657(_lh_member_arg1², _lh_member_LH_C_1²))
//│ 	| _  => error⁰}
//│ def member_lh_₂(_lh_member_arg1¹, _lh_member_arg2¹) = case _lh_member_arg2¹ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂^610(_lh_member_arg1¹, _lh_member_LH_C_1¹))
//│ 	| _  => error⁰}
//│ def member_lh_₃(_lh_member_arg1⁰, _lh_member_arg2⁰) = case _lh_member_arg2⁰ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₃^491(_lh_member_arg1⁰, _lh_member_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def min_lh_₁(_lh_min_arg1⁰, _lh_min_arg2⁰) = if (_lh_min_arg1⁰ < _lh_min_arg2⁰) then _lh_min_arg1⁰ else _lh_min_arg2⁰
//│ def minm_lh_₁(_lh_minm_arg1⁰, _lh_minm_arg2⁰) = case _lh_minm_arg1⁰ of {
//│ 	Nothing  => _lh_minm_arg2⁰
//│ 	| Just _lh_minm_Just_0⁰ => min_lh_₁^473(_lh_minm_Just_0⁰, _lh_minm_arg2⁰)
//│ 	| _  => error⁰}
//│ def partition'_lh_₁(_lh_partition'_arg1⁰) = foldr_lh_₁^1074(select_lh_₁^1075(_lh_partition'_arg1⁰), [LH_P2 [LH_N] [LH_N]])
//│ def prog_lh_₁(_lh_prog_arg1⁰) = cichelli_lh_₁^1598(_lh_prog_arg1⁰)
//│ def select_lh_₁(_lh_select_arg1⁰, _lh_select_arg2⁰, _lh_select_arg3⁰) = case _lh_select_arg3⁰ of {
//│ 	LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]
//│ 	| _  => error⁰}
//│ def subset_lh_₁(_lh_subset_arg1⁰, _lh_subset_arg2⁰) = all_lh_₁^1053((fun x⁰ -> member_lh_₁^1054(x⁰, _lh_subset_arg2⁰)), _lh_subset_arg1⁰)
//│ def take_lh_₁(n¹, ls¹⁵) = if (n¹ > 0) then case ls¹⁵ of {
//│ 	LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁^1389((n¹ - 1), t²⁰)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testCichelli_nofib_lh_₁(_lh_testCichelli_nofib_arg1⁰) = prog_lh_₁^1602(_lh_testCichelli_nofib_arg1⁰)
//│ def union_lh_₁(_lh_union_arg1⁰, _lh_union_arg2⁰) = mappend_lh_₄^1023(_lh_union_arg1⁰, 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂^1028(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(_lh_union_arg2⁰))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec freqsorted_lh__d1 _lh_freqsorted_arg1_0 =
//│ 		  _lh_freqsorted_arg1_0;;
//│ 		let rec mappend_lh__d1 xs_4 ys_4 =
//│ 		  (match xs_4 with
//│ 		    | `LH_C(h_2_1, t_2_1) -> 
//│ 		      (`LH_C(h_2_1, ((mappend_lh__d1 t_2_1) ys_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_4);;
//│ 		let rec first_lh__d1 _lh_first_arg1_3 _lh_first_arg2_3 =
//│ 		  (let rec _lh_matchIdent_6 = (Lazy.force _lh_first_arg2_3) in
//│ 		    (match _lh_matchIdent_6 with
//│ 		      | `LH_N -> 
//│ 		        (`NotEver(_lh_first_arg1_3))
//│ 		      | `LH_C(_lh_first_LH_C_0_3, _lh_first_LH_C_1_3) -> 
//│ 		        (let rec _lh_matchIdent_7 = _lh_first_LH_C_0_3 in
//│ 		          (match _lh_matchIdent_7 with
//│ 		            | `YesIts(_lh_first_YesIts_0_3, _lh_first_YesIts_1_3) -> 
//│ 		              (`YesIts((_lh_first_arg1_3 + _lh_first_YesIts_0_3), _lh_first_YesIts_1_3))
//│ 		            | `NotEver(_lh_first_NotEver_0_3) -> 
//│ 		              ((first_lh__d1 (_lh_first_arg1_3 + _lh_first_NotEver_0_3)) _lh_first_LH_C_1_3)
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec map_lz_lh__d1 f_6 ls_9 =
//│ 		  (lazy (match (Lazy.force ls_9) with
//│ 		    | `LH_C(h_1_1, t_1_1) -> 
//│ 		      (`LH_C((f_6 h_1_1), ((map_lz_lh__d1 f_6) t_1_1)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec firstSuccess_lh__d1 _lh_firstSuccess_arg1_3 _lh_firstSuccess_arg2_3 =
//│ 		  ((first_lh__d1 0) ((map_lz_lh__d1 _lh_firstSuccess_arg1_3) _lh_firstSuccess_arg2_3));;
//│ 		let rec max_lh__d1 _lh_max_arg1_0 _lh_max_arg2_0 =
//│ 		  (if (_lh_max_arg1_0 > _lh_max_arg2_0) then
//│ 		    _lh_max_arg1_0
//│ 		  else
//│ 		    _lh_max_arg2_0);;
//│ 		let rec maxm_lh__d1 _lh_maxm_arg1_0 _lh_maxm_arg2_0 =
//│ 		  (match _lh_maxm_arg1_0 with
//│ 		    | `Nothing -> 
//│ 		      _lh_maxm_arg2_0
//│ 		    | `Just(_lh_maxm_Just_0_0) -> 
//│ 		      ((max_lh__d1 _lh_maxm_Just_0_0) _lh_maxm_arg2_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec keys_lh__d3 _lh_keys_arg1_1 =
//│ 		  (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))), (`LH_C((`LH_C('b', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_N))))))))))))), (`LH_C((`LH_C('p', (`LH_C('e', (`LH_C('a', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('c', (`LH_C('o', (`LH_C('t', (`LH_N))))))))))))))), (`LH_N)))))))));;
//│ 		let rec min_lh__d1 _lh_min_arg1_0 _lh_min_arg2_0 =
//│ 		  (if (_lh_min_arg1_0 < _lh_min_arg2_0) then
//│ 		    _lh_min_arg1_0
//│ 		  else
//│ 		    _lh_min_arg2_0);;
//│ 		let rec minm_lh__d1 _lh_minm_arg1_0 _lh_minm_arg2_0 =
//│ 		  (match _lh_minm_arg1_0 with
//│ 		    | `Nothing -> 
//│ 		      _lh_minm_arg2_0
//│ 		    | `Just(_lh_minm_Just_0_0) -> 
//│ 		      ((min_lh__d1 _lh_minm_Just_0_0) _lh_minm_arg2_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec length_lh__d3 ls_7 =
//│ 		  (match ls_7 with
//│ 		    | `LH_C(h_9, t_9) -> 
//│ 		      (1 + (length_lh__d3 t_9))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec member_lh__d3 _lh_member_arg1_0 _lh_member_arg2_0 =
//│ 		  (match _lh_member_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | `LH_C(_lh_member_LH_C_0_0, _lh_member_LH_C_1_0) -> 
//│ 		      ((_lh_member_arg1_0 = _lh_member_LH_C_0_0) || ((member_lh__d3 _lh_member_arg1_0) _lh_member_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec hinsert_lh__d1 _lh_hinsert_arg1_0 _lh_hinsert_arg2_0 =
//│ 		  (match _lh_hinsert_arg2_0 with
//│ 		    | `H(_lh_hinsert_H_0_0, _lh_hinsert_H_1_0, _lh_hinsert_H_2_0) -> 
//│ 		      (let rec lo'_0 = ((minm_lh__d1 _lh_hinsert_H_0_0) _lh_hinsert_arg1_0) in
//│ 		        (let rec hi'_0 = ((maxm_lh__d1 _lh_hinsert_H_1_0) _lh_hinsert_arg1_0) in
//│ 		          (if (((member_lh__d3 _lh_hinsert_arg1_0) _lh_hinsert_H_2_0) || (((1 + hi'_0) - lo'_0) > (length_lh__d3 (keys_lh__d3 0)))) then
//│ 		            (`Nothing)
//│ 		          else
//│ 		            (`Just((`H((`Just(lo'_0)), (`Just(hi'_0)), (`LH_C(_lh_hinsert_arg1_0, _lh_hinsert_H_2_0)))))))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec assocm_lh__d1 _lh_assocm_arg1_1 _lh_assocm_arg2_1 =
//│ 		  (match _lh_assocm_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`Nothing)
//│ 		    | `LH_C(_lh_assocm_LH_C_0_1, _lh_assocm_LH_C_1_1) -> 
//│ 		      (match _lh_assocm_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_assocm_LH_P2_0_1, _lh_assocm_LH_P2_1_1) -> 
//│ 		          (if (_lh_assocm_arg1_1 = _lh_assocm_LH_P2_0_1) then
//│ 		            (`Just(_lh_assocm_LH_P2_1_1))
//│ 		          else
//│ 		            ((assocm_lh__d1 _lh_assocm_arg1_1) _lh_assocm_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d3 xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_1_5, t_1_5) -> 
//│ 		      (`LH_C(h_1_5, ((mappend_lh__d3 t_1_5) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec enumFromTo_lz_lh__d1 _lh_enumFromTo_lz_arg1_4 _lh_enumFromTo_lz_arg2_4 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_4 <= _lh_enumFromTo_lz_arg2_4) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_4, ((enumFromTo_lz_lh__d1 (_lh_enumFromTo_lz_arg1_4 + 1)) _lh_enumFromTo_lz_arg2_4)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec map_lz_lh__d3 f_4 ls_6 =
//│ 		  (lazy (match (Lazy.force ls_6) with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      (`LH_C((f_4 h_8), ((map_lz_lh__d3 f_4) t_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec first_lh__d3 _lh_first_arg1_1 _lh_first_arg2_1 =
//│ 		  (let rec _lh_matchIdent_2 = (Lazy.force _lh_first_arg2_1) in
//│ 		    (match _lh_matchIdent_2 with
//│ 		      | `LH_N -> 
//│ 		        (`NotEver(_lh_first_arg1_1))
//│ 		      | `LH_C(_lh_first_LH_C_0_1, _lh_first_LH_C_1_1) -> 
//│ 		        (let rec _lh_matchIdent_3 = _lh_first_LH_C_0_1 in
//│ 		          (match _lh_matchIdent_3 with
//│ 		            | `YesIts(_lh_first_YesIts_0_1, _lh_first_YesIts_1_1) -> 
//│ 		              (`YesIts((_lh_first_arg1_1 + _lh_first_YesIts_0_1), _lh_first_YesIts_1_1))
//│ 		            | `NotEver(_lh_first_NotEver_0_1) -> 
//│ 		              ((first_lh__d3 (_lh_first_arg1_1 + _lh_first_NotEver_0_1)) _lh_first_LH_C_1_1)
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec firstSuccess_lh__d3 _lh_firstSuccess_arg1_1 _lh_firstSuccess_arg2_1 =
//│ 		  ((first_lh__d3 0) ((map_lz_lh__d3 _lh_firstSuccess_arg1_1) _lh_firstSuccess_arg2_1));;
//│ 		let rec enumFromTo_lz_lh__d4 _lh_enumFromTo_lz_arg1_1 _lh_enumFromTo_lz_arg2_1 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_1 <= _lh_enumFromTo_lz_arg2_1) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_1, ((enumFromTo_lz_lh__d4 (_lh_enumFromTo_lz_arg1_1 + 1)) _lh_enumFromTo_lz_arg2_1)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec first_lh__d4 _lh_first_arg1_0 _lh_first_arg2_0 =
//│ 		  (let rec _lh_matchIdent_0 = (Lazy.force _lh_first_arg2_0) in
//│ 		    (match _lh_matchIdent_0 with
//│ 		      | `LH_N -> 
//│ 		        (`NotEver(_lh_first_arg1_0))
//│ 		      | `LH_C(_lh_first_LH_C_0_0, _lh_first_LH_C_1_0) -> 
//│ 		        (let rec _lh_matchIdent_1 = _lh_first_LH_C_0_0 in
//│ 		          (match _lh_matchIdent_1 with
//│ 		            | `YesIts(_lh_first_YesIts_0_0, _lh_first_YesIts_1_0) -> 
//│ 		              (`YesIts((_lh_first_arg1_0 + _lh_first_YesIts_0_0), _lh_first_YesIts_1_0))
//│ 		            | `NotEver(_lh_first_NotEver_0_0) -> 
//│ 		              ((first_lh__d4 (_lh_first_arg1_0 + _lh_first_NotEver_0_0)) _lh_first_LH_C_1_0)
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec map_lz_lh__d4 f_3 ls_5 =
//│ 		  (lazy (match (Lazy.force ls_5) with
//│ 		    | `LH_C(h_7, t_7) -> 
//│ 		      (`LH_C((f_3 h_7), ((map_lz_lh__d4 f_3) t_7)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec firstSuccess_lh__d4 _lh_firstSuccess_arg1_0 _lh_firstSuccess_arg2_0 =
//│ 		  ((first_lh__d4 0) ((map_lz_lh__d4 _lh_firstSuccess_arg1_0) _lh_firstSuccess_arg2_0));;
//│ 		let rec assocm_lh__d2 _lh_assocm_arg1_0 _lh_assocm_arg2_0 =
//│ 		  (match _lh_assocm_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`Nothing)
//│ 		    | `LH_C(_lh_assocm_LH_C_0_0, _lh_assocm_LH_C_1_0) -> 
//│ 		      (match _lh_assocm_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_assocm_LH_P2_0_0, _lh_assocm_LH_P2_1_0) -> 
//│ 		          (if (_lh_assocm_arg1_0 = _lh_assocm_LH_P2_0_0) then
//│ 		            (`Just(_lh_assocm_LH_P2_1_0))
//│ 		          else
//│ 		            ((assocm_lh__d2 _lh_assocm_arg1_0) _lh_assocm_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec first_lh__d2 _lh_first_arg1_2 _lh_first_arg2_2 =
//│ 		  (let rec _lh_matchIdent_4 = (Lazy.force _lh_first_arg2_2) in
//│ 		    (match _lh_matchIdent_4 with
//│ 		      | `LH_N -> 
//│ 		        (`NotEver(_lh_first_arg1_2))
//│ 		      | `LH_C(_lh_first_LH_C_0_2, _lh_first_LH_C_1_2) -> 
//│ 		        (let rec _lh_matchIdent_5 = _lh_first_LH_C_0_2 in
//│ 		          (match _lh_matchIdent_5 with
//│ 		            | `YesIts(_lh_first_YesIts_0_2, _lh_first_YesIts_1_2) -> 
//│ 		              (`YesIts((_lh_first_arg1_2 + _lh_first_YesIts_0_2), _lh_first_YesIts_1_2))
//│ 		            | `NotEver(_lh_first_NotEver_0_2) -> 
//│ 		              ((first_lh__d2 (_lh_first_arg1_2 + _lh_first_NotEver_0_2)) _lh_first_LH_C_1_2)
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec map_lz_lh__d2 f_5 ls_8 =
//│ 		  (lazy (match (Lazy.force ls_8) with
//│ 		    | `LH_C(h_1_0, t_1_0) -> 
//│ 		      (`LH_C((f_5 h_1_0), ((map_lz_lh__d2 f_5) t_1_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec firstSuccess_lh__d2 _lh_firstSuccess_arg1_2 _lh_firstSuccess_arg2_2 =
//│ 		  ((first_lh__d2 0) ((map_lz_lh__d2 _lh_firstSuccess_arg1_2) _lh_firstSuccess_arg2_2));;
//│ 		let rec enumFromTo_lz_lh__d2 _lh_enumFromTo_lz_arg1_3 _lh_enumFromTo_lz_arg2_3 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_3 <= _lh_enumFromTo_lz_arg2_3) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_3, ((enumFromTo_lz_lh__d2 (_lh_enumFromTo_lz_arg1_3 + 1)) _lh_enumFromTo_lz_arg2_3)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec length_lh__d2 ls_1_1 =
//│ 		  (match ls_1_1 with
//│ 		    | `LH_C(h_1_4, t_1_4) -> 
//│ 		      (1 + (length_lh__d2 t_1_4))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec ends_lh__d3 _lh_ends_arg1_0 =
//│ 		  (match _lh_ends_arg1_0 with
//│ 		    | `K(_lh_ends_K_0_0, _lh_ends_K_1_0, _lh_ends_K_2_0, _lh_ends_K_3_0) -> 
//│ 		      (`LH_C(_lh_ends_K_1_0, (`LH_C(_lh_ends_K_2_0, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d2 f_2 ls_4 =
//│ 		  (match ls_4 with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      (`LH_C((f_2 h_6), ((map_lh__d2 f_2) t_6)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec keys_lh__d4 _lh_keys_arg1_0 =
//│ 		  (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))), (`LH_C((`LH_C('b', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_N))))))))))))), (`LH_C((`LH_C('p', (`LH_C('e', (`LH_C('a', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('c', (`LH_C('o', (`LH_C('t', (`LH_N))))))))))))))), (`LH_N)))))))));;
//│ 		let rec histins_lh__d1 _lh_histins_arg1_0 _lh_histins_arg2_0 =
//│ 		  (match _lh_histins_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_C((`LH_P2(_lh_histins_arg1_0, 1)), (`LH_N)))
//│ 		    | `LH_C(_lh_histins_LH_C_0_0, _lh_histins_LH_C_1_0) -> 
//│ 		      (match _lh_histins_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_histins_LH_P2_0_0, _lh_histins_LH_P2_1_0) -> 
//│ 		          (if (_lh_histins_arg1_0 = _lh_histins_LH_P2_0_0) then
//│ 		            (`LH_C((`LH_P2(_lh_histins_LH_P2_0_0, (_lh_histins_LH_P2_1_0 + 1))), _lh_histins_LH_C_1_0))
//│ 		          else
//│ 		            (`LH_C((`LH_P2(_lh_histins_LH_P2_0_0, _lh_histins_LH_P2_1_0)), ((histins_lh__d1 _lh_histins_arg1_0) _lh_histins_LH_C_1_0))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec foldr_lh__d2 f_1 i_0 ls_3 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      ((f_1 h_4) (((foldr_lh__d2 f_1) i_0) t_4))
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec histo_lh__d1 _lh_histo_arg1_0 =
//│ 		  (((foldr_lh__d2 histins_lh__d1) (`LH_N)) _lh_histo_arg1_0);;
//│ 		let rec length_lh__d4 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (1 + (length_lh__d4 t_1))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec last_lh__d2 _lh_last_arg1_0 =
//│ 		  (match _lh_last_arg1_0 with
//│ 		    | `LH_C(_lh_last_LH_C_0_0, _lh_last_LH_C_1_0) -> 
//│ 		      (let rec go_0 = (fun _lh_go_arg1_0 _lh_go_arg2_0 -> 
//│ 		        (match _lh_go_arg2_0 with
//│ 		          | `LH_N -> 
//│ 		            _lh_go_arg1_0
//│ 		          | `LH_C(_lh_go_LH_C_0_0, _lh_go_LH_C_1_0) -> 
//│ 		            ((go_0 _lh_go_LH_C_0_0) _lh_go_LH_C_1_0)
//│ 		          | _ -> 
//│ 		            (failwith "error"))) in
//│ 		        ((go_0 _lh_last_LH_C_0_0) _lh_last_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d3 f_0 ls_2 =
//│ 		  (match ls_2 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (`LH_C((f_0 h_2), ((map_lh__d3 f_0) t_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec head_lh__d2 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      h_0
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec attribkeys_lh__d2 _lh_attribkeys_arg1_0 =
//│ 		  ((map_lh__d3 (fun k_0 -> 
//│ 		    (`K(k_0, (head_lh__d2 k_0), (last_lh__d2 k_0), (length_lh__d4 k_0))))) _lh_attribkeys_arg1_0);;
//│ 		let rec mappend_lh__d5 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      (`LH_C(h_3, ((mappend_lh__d5 t_3) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec concat_lh__d1 lss_0 =
//│ 		  (match lss_0 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      ((mappend_lh__d5 h_5) (concat_lh__d1 t_5))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec freqtab_lh__d1 _lh_freqtab_arg1_0 =
//│ 		  (histo_lh__d1 (concat_lh__d1 ((map_lh__d2 ends_lh__d3) (attribkeys_lh__d2 (keys_lh__d4 0)))));;
//│ 		let rec enumFromTo_lz_lh__d5 _lh_enumFromTo_lz_arg1_0 _lh_enumFromTo_lz_arg2_0 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_0 <= _lh_enumFromTo_lz_arg2_0) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_0, ((enumFromTo_lz_lh__d5 (_lh_enumFromTo_lz_arg1_0 + 1)) _lh_enumFromTo_lz_arg2_0)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec assoc_lh__d2 _lh_assoc_arg1_0 _lh_assoc_arg2_0 =
//│ 		  (match _lh_assoc_arg2_0 with
//│ 		    | `LH_C(_lh_assoc_LH_C_0_0, _lh_assoc_LH_C_1_0) -> 
//│ 		      (match _lh_assoc_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_assoc_LH_P2_0_0, _lh_assoc_LH_P2_1_0) -> 
//│ 		          (if (_lh_assoc_arg1_0 = _lh_assoc_LH_P2_0_0) then
//│ 		            _lh_assoc_LH_P2_1_0
//│ 		          else
//│ 		            ((assoc_lh__d2 _lh_assoc_arg1_0) _lh_assoc_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec assoc_lh__d1 _lh_assoc_arg1_1 _lh_assoc_arg2_1 =
//│ 		  (match _lh_assoc_arg2_1 with
//│ 		    | `LH_C(_lh_assoc_LH_C_0_1, _lh_assoc_LH_C_1_1) -> 
//│ 		      (match _lh_assoc_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_assoc_LH_P2_0_1, _lh_assoc_LH_P2_1_1) -> 
//│ 		          (if (_lh_assoc_arg1_1 = _lh_assoc_LH_P2_0_1) then
//│ 		            _lh_assoc_LH_P2_1_1
//│ 		          else
//│ 		            ((assoc_lh__d1 _lh_assoc_arg1_1) _lh_assoc_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec hash_lh__d1 _lh_hash_arg1_0 _lh_hash_arg2_0 =
//│ 		  (match _lh_hash_arg2_0 with
//│ 		    | `K(_lh_hash_K_0_0, _lh_hash_K_1_0, _lh_hash_K_2_0, _lh_hash_K_3_0) -> 
//│ 		      ((_lh_hash_K_3_0 + ((assoc_lh__d2 _lh_hash_K_1_0) _lh_hash_arg1_0)) + ((assoc_lh__d1 _lh_hash_K_2_0) _lh_hash_arg1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec enumFromTo_lz_lh__d3 _lh_enumFromTo_lz_arg1_2 _lh_enumFromTo_lz_arg2_2 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_2 <= _lh_enumFromTo_lz_arg2_2) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_2, ((enumFromTo_lz_lh__d3 (_lh_enumFromTo_lz_arg1_2 + 1)) _lh_enumFromTo_lz_arg2_2)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec findhash'_lh__d1 _lh_findhash'_arg1_0 _lh_findhash'_arg2_0 _lh_findhash'_arg3_0 =
//│ 		  (match _lh_findhash'_arg3_0 with
//│ 		    | `LH_N -> 
//│ 		      (`YesIts(1, _lh_findhash'_arg2_0))
//│ 		    | `LH_C(_lh_findhash'_LH_C_0_0, _lh_findhash'_LH_C_1_0) -> 
//│ 		      (match _lh_findhash'_LH_C_0_0 with
//│ 		        | `K(_lh_findhash'_K_0_0, _lh_findhash'_K_1_0, _lh_findhash'_K_2_0, _lh_findhash'_K_3_0) -> 
//│ 		          (let rec try_0 = (fun newAssocs_0 -> 
//│ 		            (let rec newCharAssocs_0 = ((mappend_lh__d3 newAssocs_0) _lh_findhash'_arg2_0) in
//│ 		              (let rec _lh_matchIdent_8 = ((hinsert_lh__d1 ((hash_lh__d1 newCharAssocs_0) (`K(_lh_findhash'_K_0_0, _lh_findhash'_K_1_0, _lh_findhash'_K_2_0, _lh_findhash'_K_3_0)))) _lh_findhash'_arg1_0) in
//│ 		                (match _lh_matchIdent_8 with
//│ 		                  | `Nothing -> 
//│ 		                    (`NotEver(1))
//│ 		                  | `Just(_lh_findhash'_Just_0_0) -> 
//│ 		                    (((findhash'_lh__d1 _lh_findhash'_Just_0_0) newCharAssocs_0) _lh_findhash'_LH_C_1_0)
//│ 		                  | _ -> 
//│ 		                    (failwith "error"))))) in
//│ 		            (let rec maxval_0 = (length_lh__d2 (freqtab_lh__d1 0)) in
//│ 		              (let rec _lh_matchIdent_9 = (`LH_P2(((assocm_lh__d2 _lh_findhash'_K_1_0) _lh_findhash'_arg2_0), ((assocm_lh__d1 _lh_findhash'_K_2_0) _lh_findhash'_arg2_0))) in
//│ 		                (match _lh_matchIdent_9 with
//│ 		                  | `LH_P2(_lh_findhash'_LH_P2_0_0, _lh_findhash'_LH_P2_1_0) -> 
//│ 		                    (match _lh_findhash'_LH_P2_0_0 with
//│ 		                      | `Nothing -> 
//│ 		                        (match _lh_findhash'_LH_P2_1_0 with
//│ 		                          | `Nothing -> 
//│ 		                            (if (_lh_findhash'_K_1_0 = _lh_findhash'_K_2_0) then
//│ 		                              ((firstSuccess_lh__d4 (fun m_0 -> 
//│ 		                                (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_1_0, m_0)), (`LH_N)))))) ((enumFromTo_lz_lh__d2 0) maxval_0))
//│ 		                            else
//│ 		                              ((firstSuccess_lh__d1 (fun mn_0 -> 
//│ 		                                (let rec _lh_matchIdent_1_0 = mn_0 in
//│ 		                                  (match _lh_matchIdent_1_0 with
//│ 		                                    | `LH_P2(_lh_findhash'_LH_P2_0_1, _lh_findhash'_LH_P2_1_1) -> 
//│ 		                                      (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_1_0, _lh_findhash'_LH_P2_0_1)), (`LH_C((`LH_P2(_lh_findhash'_K_2_0, _lh_findhash'_LH_P2_1_1)), (`LH_N))))))
//│ 		                                    | _ -> 
//│ 		                                      (failwith "error"))))) (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		                                (match (Lazy.force _lh_listcomp_fun_para_1) with
//│ 		                                  | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                                    (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		                                      (match (Lazy.force _lh_listcomp_fun_para_2) with
//│ 		                                        | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		                                          (lazy (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_h_2)), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))))
//│ 		                                        | `LH_N -> 
//│ 		                                          (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))) in
//│ 		                                      (_lh_listcomp_fun_2 ((enumFromTo_lz_lh__d4 0) maxval_0)))
//│ 		                                  | `LH_N -> 
//│ 		                                    (lazy (`LH_N)))) in
//│ 		                                (_lh_listcomp_fun_1 ((enumFromTo_lz_lh__d3 0) maxval_0)))))
//│ 		                          | `Just(_lh_findhash'_Just_0_1) -> 
//│ 		                            ((firstSuccess_lh__d2 (fun m_1 -> 
//│ 		                              (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_1_0, m_1)), (`LH_N)))))) ((enumFromTo_lz_lh__d5 0) maxval_0))
//│ 		                          | _ -> 
//│ 		                            (failwith "error"))
//│ 		                      | `Just(_lh_findhash'_Just_0_2) -> 
//│ 		                        (match _lh_findhash'_LH_P2_1_0 with
//│ 		                          | `Nothing -> 
//│ 		                            ((firstSuccess_lh__d3 (fun n_0 -> 
//│ 		                              (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_2_0, n_0)), (`LH_N)))))) ((enumFromTo_lz_lh__d1 0) maxval_0))
//│ 		                          | `Just(_lh_findhash'_Just_0_3) -> 
//│ 		                            (try_0 (`LH_N))
//│ 		                          | _ -> 
//│ 		                            (failwith "error"))
//│ 		                      | _ -> 
//│ 		                        (failwith "error"))
//│ 		                  | _ -> 
//│ 		                    (failwith "error")))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec findhash_lh__d1 _lh_findhash_arg1_0 =
//│ 		  (((findhash'_lh__d1 (`H((`Nothing), (`Nothing), (`LH_N)))) (`LH_N)) _lh_findhash_arg1_0);;
//│ 		let rec take_lh__d1 n_1 ls_1_5 =
//│ 		  (if (n_1 > 0) then
//│ 		    (match ls_1_5 with
//│ 		      | `LH_C(h_2_0, t_2_0) -> 
//│ 		        (`LH_C(h_2_0, ((take_lh__d1 (n_1 - 1)) t_2_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec last_lh__d1 _lh_last_arg1_1 =
//│ 		  (match _lh_last_arg1_1 with
//│ 		    | `LH_C(_lh_last_LH_C_0_1, _lh_last_LH_C_1_1) -> 
//│ 		      (let rec go_1 = (fun _lh_go_arg1_1 _lh_go_arg2_1 -> 
//│ 		        (match _lh_go_arg2_1 with
//│ 		          | `LH_N -> 
//│ 		            _lh_go_arg1_1
//│ 		          | `LH_C(_lh_go_LH_C_0_1, _lh_go_LH_C_1_1) -> 
//│ 		            ((go_1 _lh_go_LH_C_0_1) _lh_go_LH_C_1_1)
//│ 		          | _ -> 
//│ 		            (failwith "error"))) in
//│ 		        ((go_1 _lh_last_LH_C_0_1) _lh_last_LH_C_1_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec head_lh__d1 ls_1_2 =
//│ 		  (match ls_1_2 with
//│ 		    | `LH_C(h_1_7, t_1_7) -> 
//│ 		      h_1_7
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec length_lh__d1 ls_1_3 =
//│ 		  (match ls_1_3 with
//│ 		    | `LH_C(h_1_8, t_1_8) -> 
//│ 		      (1 + (length_lh__d1 t_1_8))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec map_lh__d1 f_8 ls_1_4 =
//│ 		  (match ls_1_4 with
//│ 		    | `LH_C(h_1_9, t_1_9) -> 
//│ 		      (`LH_C((f_8 h_1_9), ((map_lh__d1 f_8) t_1_9)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec attribkeys_lh__d1 _lh_attribkeys_arg1_1 =
//│ 		  ((map_lh__d1 (fun k_1 -> 
//│ 		    (`K(k_1, (head_lh__d1 k_1), (last_lh__d1 k_1), (length_lh__d1 k_1))))) _lh_attribkeys_arg1_1);;
//│ 		let rec keys_lh__d1 _lh_keys_arg1_3 =
//│ 		  (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))), (`LH_C((`LH_C('b', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_N))))))))))))), (`LH_C((`LH_C('p', (`LH_C('e', (`LH_C('a', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('c', (`LH_C('o', (`LH_C('t', (`LH_N))))))))))))))), (`LH_N)))))))));;
//│ 		let rec mappend_lh__d4 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_1_2, t_1_2) -> 
//│ 		      (`LH_C(h_1_2, ((mappend_lh__d4 t_1_2) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec member_lh__d2 _lh_member_arg1_1 _lh_member_arg2_1 =
//│ 		  (match _lh_member_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | `LH_C(_lh_member_LH_C_0_1, _lh_member_LH_C_1_1) -> 
//│ 		      ((_lh_member_arg1_1 = _lh_member_LH_C_0_1) || ((member_lh__d2 _lh_member_arg1_1) _lh_member_LH_C_1_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec union_lh__d1 _lh_union_arg1_0 _lh_union_arg2_0 =
//│ 		  ((mappend_lh__d4 _lh_union_arg1_0) (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		    (match _lh_listcomp_fun_para_0 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		        (if (not ((member_lh__d2 _lh_listcomp_fun_ls_h_0) _lh_union_arg1_0)) then
//│ 		          (`LH_C(_lh_listcomp_fun_ls_h_0, (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		        else
//│ 		          (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_0 _lh_union_arg2_0)));;
//│ 		let rec ends_lh__d1 _lh_ends_arg1_2 =
//│ 		  (match _lh_ends_arg1_2 with
//│ 		    | `K(_lh_ends_K_0_2, _lh_ends_K_1_2, _lh_ends_K_2_2, _lh_ends_K_3_2) -> 
//│ 		      (`LH_C(_lh_ends_K_1_2, (`LH_C(_lh_ends_K_2_2, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec ends_lh__d2 _lh_ends_arg1_1 =
//│ 		  (match _lh_ends_arg1_1 with
//│ 		    | `K(_lh_ends_K_0_1, _lh_ends_K_1_1, _lh_ends_K_2_1, _lh_ends_K_3_1) -> 
//│ 		      (`LH_C(_lh_ends_K_1_1, (`LH_C(_lh_ends_K_2_1, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec member_lh__d1 _lh_member_arg1_2 _lh_member_arg2_2 =
//│ 		  (match _lh_member_arg2_2 with
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | `LH_C(_lh_member_LH_C_0_2, _lh_member_LH_C_1_2) -> 
//│ 		      ((_lh_member_arg1_2 = _lh_member_LH_C_0_2) || ((member_lh__d1 _lh_member_arg1_2) _lh_member_LH_C_1_2))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec all_lh__d1 _lh_all_arg1_0 _lh_all_arg2_0 =
//│ 		  (match _lh_all_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_all_LH_C_0_0, _lh_all_LH_C_1_0) -> 
//│ 		      (if (_lh_all_arg1_0 _lh_all_LH_C_0_0) then
//│ 		        ((all_lh__d1 _lh_all_arg1_0) _lh_all_LH_C_1_0)
//│ 		      else
//│ 		        false)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec subset_lh__d1 _lh_subset_arg1_0 _lh_subset_arg2_0 =
//│ 		  ((all_lh__d1 (fun x_0 -> 
//│ 		    ((member_lh__d1 x_0) _lh_subset_arg2_0))) _lh_subset_arg1_0);;
//│ 		let rec foldr_lh__d1 f_7 i_1 ls_1_0 =
//│ 		  (match ls_1_0 with
//│ 		    | `LH_C(h_1_3, t_1_3) -> 
//│ 		      ((f_7 h_1_3) (((foldr_lh__d1 f_7) i_1) t_1_3))
//│ 		    | `LH_N -> 
//│ 		      i_1);;
//│ 		let rec select_lh__d1 _lh_select_arg1_0 _lh_select_arg2_0 _lh_select_arg3_0 =
//│ 		  (match _lh_select_arg3_0 with
//│ 		    | `LH_P2(_lh_select_LH_P2_0_0, _lh_select_LH_P2_1_0) -> 
//│ 		      (if (_lh_select_arg1_0 _lh_select_arg2_0) then
//│ 		        (`LH_P2((`LH_C(_lh_select_arg2_0, _lh_select_LH_P2_0_0)), _lh_select_LH_P2_1_0))
//│ 		      else
//│ 		        (`LH_P2(_lh_select_LH_P2_0_0, (`LH_C(_lh_select_arg2_0, _lh_select_LH_P2_1_0)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec partition'_lh__d1 _lh_partition'_arg1_0 =
//│ 		  ((foldr_lh__d1 (select_lh__d1 _lh_partition'_arg1_0)) (`LH_P2((`LH_N), (`LH_N))));;
//│ 		let rec mappend_lh__d2 xs_3 ys_3 =
//│ 		  (match xs_3 with
//│ 		    | `LH_C(h_1_6, t_1_6) -> 
//│ 		      (`LH_C(h_1_6, ((mappend_lh__d2 t_1_6) ys_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_3);;
//│ 		let rec blocked'_lh__d1 _lh_blocked'_arg1_0 _lh_blocked'_arg2_0 =
//│ 		  (match _lh_blocked'_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_blocked'_LH_C_0_0, _lh_blocked'_LH_C_1_0) -> 
//│ 		      (let rec ds'_0 = ((union_lh__d1 _lh_blocked'_arg1_0) (ends_lh__d1 _lh_blocked'_LH_C_0_0)) in
//│ 		        (let rec _lh_matchIdent_1_1 = ((partition'_lh__d1 (fun x_1 -> 
//│ 		          ((subset_lh__d1 (ends_lh__d2 x_1)) ds'_0))) _lh_blocked'_LH_C_1_0) in
//│ 		          (match _lh_matchIdent_1_1 with
//│ 		            | `LH_P2(_lh_blocked'_LH_P2_0_0, _lh_blocked'_LH_P2_1_0) -> 
//│ 		              ((mappend_lh__d2 (`LH_C(_lh_blocked'_LH_C_0_0, _lh_blocked'_LH_P2_0_0))) ((blocked'_lh__d1 ds'_0) _lh_blocked'_LH_P2_1_0))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec blocked_lh__d1 _lh_blocked_arg1_0 =
//│ 		  ((blocked'_lh__d1 (`LH_N)) _lh_blocked_arg1_0);;
//│ 		let rec keys_lh__d2 _lh_keys_arg1_2 =
//│ 		  (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))), (`LH_C((`LH_C('b', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_N))))))))))))), (`LH_C((`LH_C('p', (`LH_C('e', (`LH_C('a', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('c', (`LH_C('o', (`LH_C('t', (`LH_N))))))))))))))), (`LH_N)))))))));;
//│ 		let rec cichelli_lh__d1 _lh_cichelli_arg1_0 =
//│ 		  (let rec attribkeys'_0 = (attribkeys_lh__d1 ((mappend_lh__d1 (keys_lh__d2 0)) ((take_lh__d1 (_lh_cichelli_arg1_0 mod 2)) (keys_lh__d1 0)))) in
//│ 		    (let rec hashkeys_0 = ((fun _lh_funcomp_x_0 -> 
//│ 		      (blocked_lh__d1 (freqsorted_lh__d1 _lh_funcomp_x_0))) attribkeys'_0) in
//│ 		      (findhash_lh__d1 hashkeys_0)));;
//│ 		let rec prog_lh__d1 _lh_prog_arg1_0 =
//│ 		  (cichelli_lh__d1 _lh_prog_arg1_0);;
//│ 		let rec testCichelli_nofib_lh__d1 _lh_testCichelli_nofib_arg1_0 =
//│ 		  (prog_lh__d1 _lh_testCichelli_nofib_arg1_0);;
//│ 		(testCichelli_nofib_lh__d1 6)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f⁰(h²) map_lh_₃(f⁰, t²)]: 47 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f²(h⁶) map_lh_₂(f², t⁶)] | LH_N  => [LH_N]}: 186
//│ [LH_N]: 48 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f²(h⁶) map_lh_₂(f², t⁶)] | LH_N  => [LH_N]}: 186
//│ [LH_C h³ mappend_lh_₅(t³, ys⁰)]: 59 --->
//│ 	case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 114
//│ [LH_P2 _lh_histins_arg1⁰ 1]: 67 --->
//│ 	DeadCodeCons
//│ 	case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰}: 96
//│ [LH_N]: 68 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 98
//│ 	case ls¹¹ of {LH_C h¹⁴ t¹⁴ => (1 + length_lh_₂(t¹⁴)) | LH_N  => 0}: 738
//│ [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]: 69 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 98
//│ 	case ls¹¹ of {LH_C h¹⁴ t¹⁴ => (1 + length_lh_₂(t¹⁴)) | LH_N  => 0}: 738
//│ [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)]: 82 --->
//│ 	DeadCodeCons
//│ 	case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰}: 96
//│ [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰]: 84 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 98
//│ 	case ls¹¹ of {LH_C h¹⁴ t¹⁴ => (1 + length_lh_₂(t¹⁴)) | LH_N  => 0}: 738
//│ [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰]: 87 --->
//│ 	DeadCodeCons
//│ 	case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰}: 96
//│ [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]: 93 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 98
//│ 	case ls¹¹ of {LH_C h¹⁴ t¹⁴ => (1 + length_lh_₂(t¹⁴)) | LH_N  => 0}: 738
//│ [K k⁰ head_lh_₂(k⁰) last_lh_₂(k⁰) length_lh_₄(k⁰)]: 149 --->
//│ 	case _lh_ends_arg1⁰ of {K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]] | _  => error⁰}: 173
//│ [LH_N]: 163 --->
//│ 	case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 114
//│ [LH_N]: 169 --->
//│ 	case xs⁰ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys⁰)] | LH_N  => ys⁰}: 61
//│ [LH_C _lh_ends_K_2⁰ [LH_N]]: 170 --->
//│ 	case xs⁰ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys⁰)] | LH_N  => ys⁰}: 61
//│ [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]: 171 --->
//│ 	case xs⁰ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys⁰)] | LH_N  => ys⁰}: 61
//│ [LH_C f²(h⁶) map_lh_₂(f², t⁶)]: 184 --->
//│ 	case lss⁰ of {LH_C h⁵ t⁵ => mappend_lh_₅(h⁵, concat_lh_₁(t⁵)) | LH_N  => [LH_N]}: 164
//│ [LH_N]: 185 --->
//│ 	case lss⁰ of {LH_C h⁵ t⁵ => mappend_lh_₅(h⁵, concat_lh_₁(t⁵)) | LH_N  => [LH_N]}: 164
//│ [LH_N]: 194 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'e' [LH_N]]: 195 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'l' [LH_C 'e' [LH_N]]]: 196 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 197 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 198 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 199 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => h⁰ | LH_N  => error⁰}: 4
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 36
//│ [LH_N]: 206 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'a' [LH_N]]: 207 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'n' [LH_C 'a' [LH_N]]]: 208 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 209 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 210 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 211 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 212 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => h⁰ | LH_N  => error⁰}: 4
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 36
//│ [LH_N]: 218 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'h' [LH_N]]: 219 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'c' [LH_C 'h' [LH_N]]]: 220 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 221 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 222 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 223 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => h⁰ | LH_N  => error⁰}: 4
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 36
//│ [LH_N]: 231 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 't' [LH_N]]: 232 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'o' [LH_C 't' [LH_N]]]: 233 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 234 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 235 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 236 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 237 --->
//│ 	DeadCodeCons
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26
//│ [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 238 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => h⁰ | LH_N  => error⁰}: 4
//│ 	case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15
//│ 	case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 36
//│ [LH_N]: 239 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 240 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 241 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 242 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 243 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_N]: 248 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 98
//│ 	case ls¹¹ of {LH_C h¹⁴ t¹⁴ => (1 + length_lh_₂(t¹⁴)) | LH_N  => 0}: 738
//│ [NotEver _lh_first_arg1⁰]: 258 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 267 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)]: 297 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 281
//│ [LH_N]: 298 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 281
//│ [NotEver _lh_first_arg1¹]: 348 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 357 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)]: 387 --->
//│ 	case _lh_matchIdent² of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 371
//│ [LH_N]: 388 --->
//│ 	case _lh_matchIdent² of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 371
//│ [LH_N]: 443 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 444 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 445 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 446 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 447 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [NotEver _lh_first_arg1²]: 506 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 515 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)]: 545 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ in case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 529
//│ [LH_N]: 546 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ in case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 529
//│ [NotEver _lh_first_arg1³]: 556 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 565 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [LH_C f⁶(h¹¹) map_lz_lh_₁(f⁶, t¹¹)]: 595 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 579
//│ [LH_N]: 596 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 579
//│ [LH_C h¹² mappend_lh_₄(t¹², ys¹)]: 627 --->
//│ 	case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 617
//│ 	case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 629
//│ 	case _lh_member_arg2² of {LH_N  => [False] | LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1², _lh_member_LH_C_1²)) | _  => error⁰}: 664
//│ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 673 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1093
//│ [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰]: 675 --->
//│ 	case _lh_select_arg3⁰ of {LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]] | _  => error⁰}: 683
//│ 	case _lh_matchIdent¹¹ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰}: 1375
//│ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]: 679 --->
//│ 	case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 700
//│ 	case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₁(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent¹¹ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₂(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent¹¹ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1379
//│ [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]: 680 --->
//│ 	case _lh_select_arg3⁰ of {LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]] | _  => error⁰}: 683
//│ 	case _lh_matchIdent¹¹ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰}: 1375
//│ [LH_C _lh_enumFromTo_lz_arg1⁰ enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)]: 778 --->
//│ 	case force⁰(ls⁸) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)] | LH_N  => [LH_N]}: 547
//│ [LH_N]: 779 --->
//│ 	case force⁰(ls⁸) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)] | LH_N  => [LH_N]}: 547
//│ [LH_C _lh_enumFromTo_lz_arg1¹ enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)]: 811 --->
//│ 	case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1211
//│ [LH_N]: 812 --->
//│ 	case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1211
//│ [Nothing]: 853 --->
//│ 	case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰}: 1130
//│ [Just lo'⁰]: 855 --->
//│ 	case _lh_minm_arg1⁰ of {Nothing  => _lh_minm_arg2⁰ | Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰) | _  => error⁰}: 479
//│ [Just hi'⁰]: 857 --->
//│ 	case _lh_maxm_arg1⁰ of {Nothing  => _lh_maxm_arg2⁰ | Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰) | _  => error⁰}: 457
//│ [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]: 860 --->
//│ 	case _lh_member_arg2⁰ of {LH_N  => [False] | LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₃(_lh_member_arg1⁰, _lh_member_LH_C_1⁰)) | _  => error⁰}: 498
//│ [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]: 861 --->
//│ 	case _lh_hinsert_arg2⁰ of {H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > length_lh_₃(keys_lh_₃(0)))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]] | _  => error⁰}: 867
//│ [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]: 862 --->
//│ 	case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰}: 1130
//│ [Nothing]: 871 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1277
//│ [Just _lh_assocm_LH_P2_1⁰]: 879 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1277
//│ [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)]: 910 --->
//│ 	NoCons
//│ 	case _lh_assoc_arg2⁰ of {LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 320
//│ 	case _lh_assoc_arg2¹ of {LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 340
//│ 	case _lh_assocm_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 889
//│ 	case _lh_assocm_arg2¹ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 967
//│ [LH_C _lh_enumFromTo_lz_arg1² enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)]: 942 --->
//│ 	case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])}: 1224
//│ [LH_N]: 943 --->
//│ 	case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])}: 1224
//│ [Nothing]: 949 --->
//│ 	case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰}: 1253
//│ 	case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰}: 1275
//│ [Just _lh_assocm_LH_P2_1¹]: 957 --->
//│ 	case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰}: 1253
//│ 	case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰}: 1275
//│ [LH_C _lh_enumFromTo_lz_arg1³ enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)]: 986 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷ t⁷ => [LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)] | LH_N  => [LH_N]}: 299
//│ [LH_N]: 987 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷ t⁷ => [LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)] | LH_N  => [LH_N]}: 299
//│ [LH_C _lh_enumFromTo_lz_arg1⁴ enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)]: 1008 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)] | LH_N  => [LH_N]}: 389
//│ [LH_N]: 1009 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)] | LH_N  => [LH_N]}: 389
//│ [LH_N]: 1017 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 645
//│ [LH_C _lh_ends_K_2¹ [LH_N]]: 1018 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 645
//│ [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]: 1019 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 645
//│ [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 1038 --->
//│ 	case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 617
//│ 	case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 629
//│ 	case _lh_member_arg2² of {LH_N  => [False] | LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1², _lh_member_LH_C_1²)) | _  => error⁰}: 664
//│ [LH_N]: 1043 --->
//│ 	case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 617
//│ 	case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 629
//│ 	case _lh_member_arg2² of {LH_N  => [False] | LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1², _lh_member_LH_C_1²)) | _  => error⁰}: 664
//│ [LH_N]: 1068 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1044
//│ [LH_C _lh_ends_K_2² [LH_N]]: 1069 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1044
//│ [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1070 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1044
//│ [LH_N]: 1079 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1093
//│ [LH_N]: 1080 --->
//│ 	case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 700
//│ 	case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₁(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent¹¹ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₂(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent¹¹ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1379
//│ [LH_P2 [LH_N] [LH_N]]: 1081 --->
//│ 	case _lh_select_arg3⁰ of {LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]] | _  => error⁰}: 683
//│ 	case _lh_matchIdent¹¹ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰}: 1375
//│ [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)]: 1091 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1286
//│ [YesIts 1 _lh_findhash'_arg2⁰]: 1099 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1114 --->
//│ 	case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 759
//│ [NotEver 1]: 1121 --->
//│ 	NoCons
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368
//│ 	case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526
//│ 	case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576
//│ [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1149 --->
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1279
//│ [LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1162 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 318
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 338
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 887
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 965
//│ [LH_N]: 1163 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]]: 1164 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1180 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 318
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 338
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 887
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 965
//│ [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1183 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 318
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 338
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 887
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 965
//│ [LH_N]: 1184 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]: 1185 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]: 1186 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²]: 1202 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}: 1189
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 1206 --->
//│ 	case force⁰(ls⁹) of {LH_C h¹¹ t¹¹ => [LH_C f⁶(h¹¹) map_lz_lh_₁(f⁶, t¹¹)] | LH_N  => [LH_N]}: 597
//│ [LH_N]: 1222 --->
//│ 	case force⁰(ls⁹) of {LH_C h¹¹ t¹¹ => [LH_C f⁶(h¹¹) map_lz_lh_₁(f⁶, t¹¹)] | LH_N  => [LH_N]}: 597
//│ [LH_P2 _lh_findhash'_K_1⁰ m¹]: 1240 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 318
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 338
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 887
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 965
//│ [LH_N]: 1241 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]]: 1242 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1259 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 318
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 338
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 887
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 965
//│ [LH_N]: 1260 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]]: 1261 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_N]: 1272 --->
//│ 	case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912
//│ [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)]: 1336 --->
//│ 	case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 700
//│ 	case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₁(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent¹¹ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₂(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent¹¹ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1379
//│ [LH_N]: 1337 --->
//│ 	case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 700
//│ 	case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₁(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent¹¹ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₂(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent¹¹ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1379
//│ [LH_N]: 1342 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1286
//│ [LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1366 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1093
//│ [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)]: 1398 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338
//│ [LH_N]: 1399 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338
//│ [LH_N]: 1401 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338
//│ [Nothing]: 1406 --->
//│ 	case _lh_minm_arg1⁰ of {Nothing  => _lh_minm_arg2⁰ | Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰) | _  => error⁰}: 479
//│ [Nothing]: 1407 --->
//│ 	case _lh_maxm_arg1⁰ of {Nothing  => _lh_maxm_arg2⁰ | Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰) | _  => error⁰}: 457
//│ [LH_N]: 1408 --->
//│ 	case _lh_member_arg2⁰ of {LH_N  => [False] | LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₃(_lh_member_arg1⁰, _lh_member_LH_C_1⁰)) | _  => error⁰}: 498
//│ [H [Nothing] [Nothing] [LH_N]]: 1409 --->
//│ 	case _lh_hinsert_arg2⁰ of {H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > length_lh_₃(keys_lh_₃(0)))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]] | _  => error⁰}: 867
//│ [LH_N]: 1411 --->
//│ 	NoCons
//│ 	case _lh_assoc_arg2⁰ of {LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 320
//│ 	case _lh_assoc_arg2¹ of {LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 340
//│ 	case _lh_assocm_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 889
//│ 	case _lh_assocm_arg2¹ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 967
//│ [K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₁(k¹)]: 1427 --->
//│ 	case _lh_ends_arg1¹ of {K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]] | _  => error⁰}: 1021
//│ 	case _lh_ends_arg1² of {K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]] | _  => error⁰}: 1072
//│ 	case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1284
//│ [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)]: 1442 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338
//│ [LH_N]: 1448 --->
//│ 	case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 617
//│ 	case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 629
//│ [LH_N]: 1458 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'e' [LH_N]]: 1459 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'l' [LH_C 'e' [LH_N]]]: 1460 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1461 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1462 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1463 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => h¹⁷ | LH_N  => error⁰}: 1293
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1325
//│ [LH_N]: 1470 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_N]]: 1471 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'n' [LH_C 'a' [LH_N]]]: 1472 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1473 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1474 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1475 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1476 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => h¹⁷ | LH_N  => error⁰}: 1293
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1325
//│ [LH_N]: 1482 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'h' [LH_N]]: 1483 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'c' [LH_C 'h' [LH_N]]]: 1484 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1485 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1486 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1487 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => h¹⁷ | LH_N  => error⁰}: 1293
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1325
//│ [LH_N]: 1495 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 't' [LH_N]]: 1496 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'o' [LH_C 't' [LH_N]]]: 1497 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1498 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1499 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1500 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1501 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1502 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => h¹⁷ | LH_N  => error⁰}: 1293
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1325
//│ [LH_N]: 1503 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1504 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1505 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1506 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1507 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_N]: 1514 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'e' [LH_N]]: 1515 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'l' [LH_C 'e' [LH_N]]]: 1516 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1517 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1518 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1519 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => h¹⁷ | LH_N  => error⁰}: 1293
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1325
//│ [LH_N]: 1526 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_N]]: 1527 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'n' [LH_C 'a' [LH_N]]]: 1528 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1529 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1530 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1531 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1532 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => h¹⁷ | LH_N  => error⁰}: 1293
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1325
//│ [LH_N]: 1538 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'h' [LH_N]]: 1539 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'c' [LH_C 'h' [LH_N]]]: 1540 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1541 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1542 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1543 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => h¹⁷ | LH_N  => error⁰}: 1293
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1325
//│ [LH_N]: 1551 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 't' [LH_N]]: 1552 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'o' [LH_C 't' [LH_N]]]: 1553 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1554 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1555 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1556 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1557 --->
//│ 	DeadCodeCons
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315
//│ [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1558 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => h¹⁷ | LH_N  => error⁰}: 1293
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1325
//│ [LH_N]: 1559 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1560 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1561 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1562 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1563 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ ------------------
//│ case ls⁰ of {LH_C h⁰ t⁰ => h⁰ | LH_N  => error⁰}: 4 --->
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 199
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 212
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 223
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 238
//│ case ls¹ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 15 --->
//│ 	[LH_N]: 194
//│ 	[LH_C 'e' [LH_N]]: 195
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 196
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 197
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 198
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 199
//│ 	[LH_N]: 206
//│ 	[LH_C 'a' [LH_N]]: 207
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 208
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 209
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 210
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 211
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 212
//│ 	[LH_N]: 218
//│ 	[LH_C 'h' [LH_N]]: 219
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 220
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 221
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 222
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 223
//│ 	[LH_N]: 231
//│ 	[LH_C 't' [LH_N]]: 232
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 233
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 234
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 235
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 236
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 237
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 238
//│ case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 26 --->
//│ 	[LH_N]: 194
//│ 	[LH_C 'e' [LH_N]]: 195
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 196
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 197
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 198
//│ 	[LH_N]: 206
//│ 	[LH_C 'a' [LH_N]]: 207
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 208
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 209
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 210
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 211
//│ 	[LH_N]: 218
//│ 	[LH_C 'h' [LH_N]]: 219
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 220
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 221
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 222
//│ 	[LH_N]: 231
//│ 	[LH_C 't' [LH_N]]: 232
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 233
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 234
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 235
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 236
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 237
//│ case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 36 --->
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 199
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 212
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 223
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 238
//│ case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49 --->
//│ 	[LH_N]: 239
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 240
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 241
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 242
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 243
//│ case xs⁰ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys⁰)] | LH_N  => ys⁰}: 61 --->
//│ 	[LH_N]: 169
//│ 	[LH_C _lh_ends_K_2⁰ [LH_N]]: 170
//│ 	[LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]: 171
//│ case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰}: 96 --->
//│ 	[LH_P2 _lh_histins_arg1⁰ 1]: 67
//│ 	[LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)]: 82
//│ 	[LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰]: 87
//│ case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 98 --->
//│ 	[LH_N]: 68
//│ 	[LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]: 69
//│ 	[LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰]: 84
//│ 	[LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]: 93
//│ 	[LH_N]: 248
//│ case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 114 --->
//│ 	[LH_C h³ mappend_lh_₅(t³, ys⁰)]: 59
//│ 	[LH_N]: 163
//│ case lss⁰ of {LH_C h⁵ t⁵ => mappend_lh_₅(h⁵, concat_lh_₁(t⁵)) | LH_N  => [LH_N]}: 164 --->
//│ 	[LH_C f²(h⁶) map_lh_₂(f², t⁶)]: 184
//│ 	[LH_N]: 185
//│ case _lh_ends_arg1⁰ of {K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]] | _  => error⁰}: 173 --->
//│ 	[K k⁰ head_lh_₂(k⁰) last_lh_₂(k⁰) length_lh_₄(k⁰)]: 149
//│ case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f²(h⁶) map_lh_₂(f², t⁶)] | LH_N  => [LH_N]}: 186 --->
//│ 	[LH_C f⁰(h²) map_lh_₃(f⁰, t²)]: 47
//│ 	[LH_N]: 48
//│ case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 278 --->
//│ 	[NotEver _lh_first_arg1⁰]: 258
//│ 	[YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 267
//│ 	[NotEver _lh_first_arg1¹]: 348
//│ 	[YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 357
//│ 	[NotEver _lh_first_arg1²]: 506
//│ 	[YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 515
//│ 	[NotEver _lh_first_arg1³]: 556
//│ 	[YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 565
//│ 	[YesIts 1 _lh_findhash'_arg2⁰]: 1099
//│ 	[NotEver 1]: 1121
//│ case _lh_matchIdent⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 281 --->
//│ 	[LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)]: 297
//│ 	[LH_N]: 298
//│ case force⁰(ls⁵) of {LH_C h⁷ t⁷ => [LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)] | LH_N  => [LH_N]}: 299 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1³ enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)]: 986
//│ 	[LH_N]: 987
//│ case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 318 --->
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1162
//│ 	[LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1180
//│ 	[LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1183
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m¹]: 1240
//│ 	[LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1259
//│ case _lh_assoc_arg2⁰ of {LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 320 --->
//│ 	[LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)]: 910
//│ 	[LH_N]: 1411
//│ case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 338 --->
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1162
//│ 	[LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1180
//│ 	[LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1183
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m¹]: 1240
//│ 	[LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1259
//│ case _lh_assoc_arg2¹ of {LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 340 --->
//│ 	[LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)]: 910
//│ 	[LH_N]: 1411
//│ case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 368 --->
//│ 	[NotEver _lh_first_arg1⁰]: 258
//│ 	[YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 267
//│ 	[NotEver _lh_first_arg1¹]: 348
//│ 	[YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 357
//│ 	[NotEver _lh_first_arg1²]: 506
//│ 	[YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 515
//│ 	[NotEver _lh_first_arg1³]: 556
//│ 	[YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 565
//│ 	[YesIts 1 _lh_findhash'_arg2⁰]: 1099
//│ 	[NotEver 1]: 1121
//│ case _lh_matchIdent² of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 371 --->
//│ 	[LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)]: 387
//│ 	[LH_N]: 388
//│ case force⁰(ls⁶) of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)] | LH_N  => [LH_N]}: 389 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1⁴ enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)]: 1008
//│ 	[LH_N]: 1009
//│ case _lh_maxm_arg1⁰ of {Nothing  => _lh_maxm_arg2⁰ | Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰) | _  => error⁰}: 457 --->
//│ 	[Just hi'⁰]: 857
//│ 	[Nothing]: 1407
//│ case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469 --->
//│ 	[LH_N]: 443
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 444
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 445
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 446
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 447
//│ case _lh_minm_arg1⁰ of {Nothing  => _lh_minm_arg2⁰ | Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰) | _  => error⁰}: 479 --->
//│ 	[Just lo'⁰]: 855
//│ 	[Nothing]: 1406
//│ case _lh_member_arg2⁰ of {LH_N  => [False] | LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₃(_lh_member_arg1⁰, _lh_member_LH_C_1⁰)) | _  => error⁰}: 498 --->
//│ 	[LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]: 860
//│ 	[LH_N]: 1408
//│ case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 526 --->
//│ 	[NotEver _lh_first_arg1⁰]: 258
//│ 	[YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 267
//│ 	[NotEver _lh_first_arg1¹]: 348
//│ 	[YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 357
//│ 	[NotEver _lh_first_arg1²]: 506
//│ 	[YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 515
//│ 	[NotEver _lh_first_arg1³]: 556
//│ 	[YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 565
//│ 	[YesIts 1 _lh_findhash'_arg2⁰]: 1099
//│ 	[NotEver 1]: 1121
//│ case _lh_matchIdent⁴ of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ in case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 529 --->
//│ 	[LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)]: 545
//│ 	[LH_N]: 546
//│ case force⁰(ls⁸) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)] | LH_N  => [LH_N]}: 547 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1⁰ enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)]: 778
//│ 	[LH_N]: 779
//│ case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 576 --->
//│ 	[NotEver _lh_first_arg1⁰]: 258
//│ 	[YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 267
//│ 	[NotEver _lh_first_arg1¹]: 348
//│ 	[YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 357
//│ 	[NotEver _lh_first_arg1²]: 506
//│ 	[YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 515
//│ 	[NotEver _lh_first_arg1³]: 556
//│ 	[YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 565
//│ 	[YesIts 1 _lh_findhash'_arg2⁰]: 1099
//│ 	[NotEver 1]: 1121
//│ case _lh_matchIdent⁶ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 579 --->
//│ 	[LH_C f⁶(h¹¹) map_lz_lh_₁(f⁶, t¹¹)]: 595
//│ 	[LH_N]: 596
//│ case force⁰(ls⁹) of {LH_C h¹¹ t¹¹ => [LH_C f⁶(h¹¹) map_lz_lh_₁(f⁶, t¹¹)] | LH_N  => [LH_N]}: 597 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 1206
//│ 	[LH_N]: 1222
//│ case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 617 --->
//│ 	[LH_C h¹² mappend_lh_₄(t¹², ys¹)]: 627
//│ 	[LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 1038
//│ 	[LH_N]: 1043
//│ 	[LH_N]: 1448
//│ case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 629 --->
//│ 	[LH_C h¹² mappend_lh_₄(t¹², ys¹)]: 627
//│ 	[LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 1038
//│ 	[LH_N]: 1043
//│ 	[LH_N]: 1448
//│ case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 645 --->
//│ 	[LH_N]: 1017
//│ 	[LH_C _lh_ends_K_2¹ [LH_N]]: 1018
//│ 	[LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]: 1019
//│ case _lh_member_arg2² of {LH_N  => [False] | LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1², _lh_member_LH_C_1²)) | _  => error⁰}: 664 --->
//│ 	[LH_C h¹² mappend_lh_₄(t¹², ys¹)]: 627
//│ 	[LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 1038
//│ 	[LH_N]: 1043
//│ case _lh_select_arg3⁰ of {LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]] | _  => error⁰}: 683 --->
//│ 	[LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰]: 675
//│ 	[LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]: 680
//│ 	[LH_P2 [LH_N] [LH_N]]: 1081
//│ case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 700 --->
//│ 	[LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]: 679
//│ 	[LH_N]: 1080
//│ 	[LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)]: 1336
//│ 	[LH_N]: 1337
//│ case ls¹¹ of {LH_C h¹⁴ t¹⁴ => (1 + length_lh_₂(t¹⁴)) | LH_N  => 0}: 738 --->
//│ 	[LH_N]: 68
//│ 	[LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]: 69
//│ 	[LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰]: 84
//│ 	[LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]: 93
//│ 	[LH_N]: 248
//│ case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 759 --->
//│ 	[K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1114
//│ case _lh_hinsert_arg2⁰ of {H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > length_lh_₃(keys_lh_₃(0)))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]] | _  => error⁰}: 867 --->
//│ 	[H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]: 861
//│ 	[H [Nothing] [Nothing] [LH_N]]: 1409
//│ case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 887 --->
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1162
//│ 	[LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1180
//│ 	[LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1183
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m¹]: 1240
//│ 	[LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1259
//│ case _lh_assocm_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 889 --->
//│ 	[LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)]: 910
//│ 	[LH_N]: 1411
//│ case xs² of {LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)] | LH_N  => ys²}: 912 --->
//│ 	[LH_N]: 1163
//│ 	[LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]]: 1164
//│ 	[LH_N]: 1184
//│ 	[LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]: 1185
//│ 	[LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]: 1186
//│ 	[LH_N]: 1241
//│ 	[LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]]: 1242
//│ 	[LH_N]: 1260
//│ 	[LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]]: 1261
//│ 	[LH_N]: 1272
//│ case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 965 --->
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1162
//│ 	[LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1180
//│ 	[LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1183
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m¹]: 1240
//│ 	[LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1259
//│ case _lh_assocm_arg2¹ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 967 --->
//│ 	[LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys²)]: 910
//│ 	[LH_N]: 1411
//│ case _lh_ends_arg1¹ of {K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]] | _  => error⁰}: 1021 --->
//│ 	[K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₁(k¹)]: 1427
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1044 --->
//│ 	[LH_N]: 1068
//│ 	[LH_C _lh_ends_K_2² [LH_N]]: 1069
//│ 	[LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1070
//│ case _lh_ends_arg1² of {K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]] | _  => error⁰}: 1072 --->
//│ 	[K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₁(k¹)]: 1427
//│ case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1093 --->
//│ 	[LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 673
//│ 	[LH_N]: 1079
//│ 	[LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1366
//│ case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰}: 1130 --->
//│ 	[Nothing]: 853
//│ 	[Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]: 862
//│ case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}: 1189 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²]: 1202
//│ case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1211 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1¹ enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)]: 811
//│ 	[LH_N]: 812
//│ case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])}: 1224 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1² enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)]: 942
//│ 	[LH_N]: 943
//│ case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰}: 1253 --->
//│ 	[Nothing]: 949
//│ 	[Just _lh_assocm_LH_P2_1¹]: 957
//│ case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰}: 1275 --->
//│ 	[Nothing]: 949
//│ 	[Just _lh_assocm_LH_P2_1¹]: 957
//│ case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1277 --->
//│ 	[Nothing]: 871
//│ 	[Just _lh_assocm_LH_P2_1⁰]: 879
//│ case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1279 --->
//│ 	[LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1149
//│ case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1284 --->
//│ 	[K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₁(k¹)]: 1427
//│ case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1286 --->
//│ 	[LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)]: 1091
//│ 	[LH_N]: 1342
//│ case ls¹² of {LH_C h¹⁷ t¹⁷ => h¹⁷ | LH_N  => error⁰}: 1293 --->
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1463
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1476
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1487
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1502
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1519
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1532
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1543
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1558
//│ case ls¹³ of {LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸)) | LH_N  => 0}: 1304 --->
//│ 	[LH_N]: 1458
//│ 	[LH_C 'e' [LH_N]]: 1459
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 1460
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1461
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1462
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1463
//│ 	[LH_N]: 1470
//│ 	[LH_C 'a' [LH_N]]: 1471
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 1472
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1473
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1474
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1475
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1476
//│ 	[LH_N]: 1482
//│ 	[LH_C 'h' [LH_N]]: 1483
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 1484
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1485
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1486
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1487
//│ 	[LH_N]: 1495
//│ 	[LH_C 't' [LH_N]]: 1496
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 1497
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1498
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1499
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1500
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1501
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1502
//│ 	[LH_N]: 1514
//│ 	[LH_C 'e' [LH_N]]: 1515
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 1516
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1517
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1518
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1519
//│ 	[LH_N]: 1526
//│ 	[LH_C 'a' [LH_N]]: 1527
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 1528
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1529
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1530
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1531
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1532
//│ 	[LH_N]: 1538
//│ 	[LH_C 'h' [LH_N]]: 1539
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 1540
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1541
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1542
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1543
//│ 	[LH_N]: 1551
//│ 	[LH_C 't' [LH_N]]: 1552
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 1553
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1554
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1555
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1556
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1557
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1558
//│ case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1315 --->
//│ 	[LH_N]: 1458
//│ 	[LH_C 'e' [LH_N]]: 1459
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 1460
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1461
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1462
//│ 	[LH_N]: 1470
//│ 	[LH_C 'a' [LH_N]]: 1471
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 1472
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1473
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1474
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1475
//│ 	[LH_N]: 1482
//│ 	[LH_C 'h' [LH_N]]: 1483
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 1484
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1485
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1486
//│ 	[LH_N]: 1495
//│ 	[LH_C 't' [LH_N]]: 1496
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 1497
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1498
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1499
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1500
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1501
//│ 	[LH_N]: 1514
//│ 	[LH_C 'e' [LH_N]]: 1515
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 1516
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1517
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1518
//│ 	[LH_N]: 1526
//│ 	[LH_C 'a' [LH_N]]: 1527
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 1528
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1529
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1530
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1531
//│ 	[LH_N]: 1538
//│ 	[LH_C 'h' [LH_N]]: 1539
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 1540
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1541
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1542
//│ 	[LH_N]: 1551
//│ 	[LH_C 't' [LH_N]]: 1552
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 1553
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1554
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1555
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1556
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1557
//│ case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1325 --->
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1463
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1476
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1487
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1502
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1519
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1532
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1543
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1558
//│ case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338 --->
//│ 	[LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)]: 1398
//│ 	[LH_N]: 1399
//│ 	[LH_N]: 1401
//│ 	[LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)]: 1442
//│ case _lh_matchIdent¹¹ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰}: 1375 --->
//│ 	[LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰]: 675
//│ 	[LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]: 680
//│ 	[LH_P2 [LH_N] [LH_N]]: 1081
//│ case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₁(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent¹¹ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₂(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent¹¹ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1379 --->
//│ 	[LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]: 679
//│ 	[LH_N]: 1080
//│ 	[LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)]: 1336
//│ 	[LH_N]: 1337
//│ case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400 --->
//│ 	[LH_N]: 1559
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1560
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1561
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1562
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1563
//│ case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444 --->
//│ 	[LH_N]: 1503
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1504
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1505
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1506
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1507
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C f⁰(h²) map_lh_₃(f⁰, t²)]: 47 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f²(h⁶) map_lh_₂(f², t⁶)] | LH_N  => [LH_N]}: 186
//│ [LH_N]: 48 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f²(h⁶) map_lh_₂(f², t⁶)] | LH_N  => [LH_N]}: 186
//│ [LH_C h³ mappend_lh_₅(t³, ys⁰)]: 59 --->
//│ 	case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 114
//│ [K k⁰ head_lh_₂(k⁰) last_lh_₂(k⁰) length_lh_₄(k⁰)]: 149 --->
//│ 	case _lh_ends_arg1⁰ of {K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]] | _  => error⁰}: 173
//│ [LH_N]: 163 --->
//│ 	case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 114
//│ [LH_N]: 169 --->
//│ 	case xs⁰ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys⁰)] | LH_N  => ys⁰}: 61
//│ [LH_C _lh_ends_K_2⁰ [LH_N]]: 170 --->
//│ 	case xs⁰ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys⁰)] | LH_N  => ys⁰}: 61
//│ [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]: 171 --->
//│ 	case xs⁰ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys⁰)] | LH_N  => ys⁰}: 61
//│ [LH_C f²(h⁶) map_lh_₂(f², t⁶)]: 184 --->
//│ 	case lss⁰ of {LH_C h⁵ t⁵ => mappend_lh_₅(h⁵, concat_lh_₁(t⁵)) | LH_N  => [LH_N]}: 164
//│ [LH_N]: 185 --->
//│ 	case lss⁰ of {LH_C h⁵ t⁵ => mappend_lh_₅(h⁵, concat_lh_₁(t⁵)) | LH_N  => [LH_N]}: 164
//│ [LH_N]: 239 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 240 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 241 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 242 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 243 --->
//│ 	case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49
//│ [LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)]: 297 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 281
//│ [LH_N]: 298 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 281
//│ [LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)]: 387 --->
//│ 	case _lh_matchIdent² of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 371
//│ [LH_N]: 388 --->
//│ 	case _lh_matchIdent² of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 371
//│ [LH_N]: 443 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 444 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 445 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 446 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 447 --->
//│ 	case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469
//│ [LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)]: 545 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ in case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 529
//│ [LH_N]: 546 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ in case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 529
//│ [LH_C f⁶(h¹¹) map_lz_lh_₁(f⁶, t¹¹)]: 595 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 579
//│ [LH_N]: 596 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 579
//│ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 673 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1093
//│ [LH_C _lh_enumFromTo_lz_arg1⁰ enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)]: 778 --->
//│ 	case force⁰(ls⁸) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)] | LH_N  => [LH_N]}: 547
//│ [LH_N]: 779 --->
//│ 	case force⁰(ls⁸) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)] | LH_N  => [LH_N]}: 547
//│ [LH_C _lh_enumFromTo_lz_arg1¹ enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)]: 811 --->
//│ 	case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1211
//│ [LH_N]: 812 --->
//│ 	case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1211
//│ [Nothing]: 871 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1277
//│ [Just _lh_assocm_LH_P2_1⁰]: 879 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1277
//│ [LH_C _lh_enumFromTo_lz_arg1² enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)]: 942 --->
//│ 	case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])}: 1224
//│ [LH_N]: 943 --->
//│ 	case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])}: 1224
//│ [LH_C _lh_enumFromTo_lz_arg1³ enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)]: 986 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷ t⁷ => [LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)] | LH_N  => [LH_N]}: 299
//│ [LH_N]: 987 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷ t⁷ => [LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)] | LH_N  => [LH_N]}: 299
//│ [LH_C _lh_enumFromTo_lz_arg1⁴ enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)]: 1008 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)] | LH_N  => [LH_N]}: 389
//│ [LH_N]: 1009 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)] | LH_N  => [LH_N]}: 389
//│ [LH_N]: 1017 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 645
//│ [LH_C _lh_ends_K_2¹ [LH_N]]: 1018 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 645
//│ [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]: 1019 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 645
//│ [LH_N]: 1068 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1044
//│ [LH_C _lh_ends_K_2² [LH_N]]: 1069 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1044
//│ [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1070 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1044
//│ [LH_N]: 1079 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1093
//│ [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)]: 1091 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1286
//│ [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1114 --->
//│ 	case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 759
//│ [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1149 --->
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1279
//│ [LH_N]: 1342 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1286
//│ [LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1366 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1093
//│ [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)]: 1398 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338
//│ [LH_N]: 1399 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338
//│ [LH_N]: 1401 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338
//│ [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)]: 1442 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338
//│ [LH_N]: 1503 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1504 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1505 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1506 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1507 --->
//│ 	case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444
//│ [LH_N]: 1559 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1560 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1561 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1562 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1563 --->
//│ 	case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400
//│ ------------------
//│ case ls² of {LH_C h² t² => [LH_C f⁰(h²) map_lh_₃(f⁰, t²)] | LH_N  => [LH_N]}: 49 --->
//│ 	[LH_N]: 239
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 240
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 241
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 242
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 243
//│ case xs⁰ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₅(t³, ys⁰)] | LH_N  => ys⁰}: 61 --->
//│ 	[LH_N]: 169
//│ 	[LH_C _lh_ends_K_2⁰ [LH_N]]: 170
//│ 	[LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]: 171
//│ case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 114 --->
//│ 	[LH_C h³ mappend_lh_₅(t³, ys⁰)]: 59
//│ 	[LH_N]: 163
//│ case lss⁰ of {LH_C h⁵ t⁵ => mappend_lh_₅(h⁵, concat_lh_₁(t⁵)) | LH_N  => [LH_N]}: 164 --->
//│ 	[LH_C f²(h⁶) map_lh_₂(f², t⁶)]: 184
//│ 	[LH_N]: 185
//│ case _lh_ends_arg1⁰ of {K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]] | _  => error⁰}: 173 --->
//│ 	[K k⁰ head_lh_₂(k⁰) last_lh_₂(k⁰) length_lh_₄(k⁰)]: 149
//│ case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f²(h⁶) map_lh_₂(f², t⁶)] | LH_N  => [LH_N]}: 186 --->
//│ 	[LH_C f⁰(h²) map_lh_₃(f⁰, t²)]: 47
//│ 	[LH_N]: 48
//│ case _lh_matchIdent⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 281 --->
//│ 	[LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)]: 297
//│ 	[LH_N]: 298
//│ case force⁰(ls⁵) of {LH_C h⁷ t⁷ => [LH_C f³(h⁷) map_lz_lh_₄(f³, t⁷)] | LH_N  => [LH_N]}: 299 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1³ enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)]: 986
//│ 	[LH_N]: 987
//│ case _lh_matchIdent² of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 371 --->
//│ 	[LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)]: 387
//│ 	[LH_N]: 388
//│ case force⁰(ls⁶) of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lz_lh_₃(f⁴, t⁸)] | LH_N  => [LH_N]}: 389 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1⁴ enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)]: 1008
//│ 	[LH_N]: 1009
//│ case ls⁷ of {LH_C h⁹ t⁹ => (1 + length_lh_₃(t⁹)) | LH_N  => 0}: 469 --->
//│ 	[LH_N]: 443
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 444
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 445
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 446
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 447
//│ case _lh_matchIdent⁴ of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ in case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 529 --->
//│ 	[LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)]: 545
//│ 	[LH_N]: 546
//│ case force⁰(ls⁸) of {LH_C h¹⁰ t¹⁰ => [LH_C f⁵(h¹⁰) map_lz_lh_₂(f⁵, t¹⁰)] | LH_N  => [LH_N]}: 547 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1⁰ enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)]: 778
//│ 	[LH_N]: 779
//│ case _lh_matchIdent⁶ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 579 --->
//│ 	[LH_C f⁶(h¹¹) map_lz_lh_₁(f⁶, t¹¹)]: 595
//│ 	[LH_N]: 596
//│ case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 645 --->
//│ 	[LH_N]: 1017
//│ 	[LH_C _lh_ends_K_2¹ [LH_N]]: 1018
//│ 	[LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]: 1019
//│ case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 759 --->
//│ 	[K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1114
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1044 --->
//│ 	[LH_N]: 1068
//│ 	[LH_C _lh_ends_K_2² [LH_N]]: 1069
//│ 	[LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1070
//│ case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1093 --->
//│ 	[LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 673
//│ 	[LH_N]: 1079
//│ 	[LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1366
//│ case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1211 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1¹ enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)]: 811
//│ 	[LH_N]: 812
//│ case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])}: 1224 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1² enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)]: 942
//│ 	[LH_N]: 943
//│ case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1277 --->
//│ 	[Nothing]: 871
//│ 	[Just _lh_assocm_LH_P2_1⁰]: 879
//│ case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1279 --->
//│ 	[LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1149
//│ case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval⁰)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₃(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₃((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1286 --->
//│ 	[LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)]: 1091
//│ 	[LH_N]: 1342
//│ case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1338 --->
//│ 	[LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)]: 1398
//│ 	[LH_N]: 1399
//│ 	[LH_N]: 1401
//│ 	[LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)]: 1442
//│ case ls¹⁵ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ take_lh_₁((n¹ - 1), t²⁰)] | LH_N  => [LH_N]}: 1400 --->
//│ 	[LH_N]: 1559
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1560
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1561
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1562
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1563
//│ case xs⁴ of {LH_C h²¹ t²¹ => [LH_C h²¹ mappend_lh_₁(t²¹, ys⁴)] | LH_N  => ys⁴}: 1444 --->
//│ 	[LH_N]: 1503
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1504
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1505
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1506
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1507
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testCichelli_nofib_lh_₁(primId⁰(6))
//│ def all_lh_₁(_lh_all_arg1⁴, _lh_all_arg2¹) = _lh_all_arg2¹(_lh_all_arg1⁴)
//│ def assoc_lh_₁(_lh_assoc_arg1³, _lh_assoc_arg2³) = case _lh_assoc_arg2³ of {
//│ 	LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1³, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1³, _lh_assoc_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assoc_lh_₂(_lh_assoc_arg1², _lh_assoc_arg2²) = case _lh_assoc_arg2² of {
//│ 	LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1², _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1², _lh_assoc_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₁(_lh_assocm_arg1², _lh_assocm_arg2²) = case _lh_assocm_arg2² of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1², _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1², _lh_assocm_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₂(_lh_assocm_arg1³, _lh_assocm_arg2³) = case _lh_assocm_arg2³ of {
//│ 	LH_N  => (fun _lh_findhash'_K_1² -> (fun _lh_findhash'_K_2² -> (fun _lh_findhash'_LH_P2_1³ -> (fun maxval⁵ -> (fun try³ -> case _lh_findhash'_LH_P2_1³ of {
//│ 		Nothing  => if polyEq⁰(_lh_findhash'_K_1², _lh_findhash'_K_2²) then firstSuccess_lh_₄((fun m² -> try³([LH_C [LH_P2 _lh_findhash'_K_1² m²] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁵)) else firstSuccess_lh_₁((fun mn¹ -> 
//│ 			let _lh_matchIdent²¹ = mn¹
//│ 			in case _lh_matchIdent²¹ of {
//│ 				LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try³([LH_C [LH_P2 _lh_findhash'_K_1² _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2² _lh_findhash'_LH_P2_1¹] [LH_N]]])
//│ 				| _  => error⁰}), 
//│ 			let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para⁵ -> force⁰(_lh_listcomp_fun_para⁵, _lh_listcomp_fun¹⁴, maxval⁵))
//│ 			in _lh_listcomp_fun¹⁴(enumFromTo_lz_lh_₃(0, maxval⁵)))
//│ 		| Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m³ -> try³([LH_C [LH_P2 _lh_findhash'_K_1² m³] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁵))
//│ 		| _  => error⁰})))))
//│ 	| LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1³, _lh_assocm_LH_P2_0⁰) then (fun _lh_findhash'_K_1³ -> (fun _lh_findhash'_K_2³ -> (fun _lh_findhash'_LH_P2_1⁴ -> (fun maxval⁶ -> (fun try⁴ -> case _lh_findhash'_LH_P2_1⁴ of {
//│ 			Nothing  => firstSuccess_lh_₃((fun n³ -> try⁴([LH_C [LH_P2 _lh_findhash'_K_2³ n³] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁶))
//│ 			| Just _lh_findhash'_Just_0³ => try⁴([LH_N])
//│ 			| _  => error⁰}))))) else assocm_lh_₂(_lh_assocm_arg1³, _lh_assocm_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def attribkeys_lh_₁(_lh_attribkeys_arg1²) = map_lh_₁((fun k² -> [K k² head_lh_₁(k²) last_lh_₁(k²) length_lh_₁(k²)]), _lh_attribkeys_arg1²)
//│ def attribkeys_lh_₂(_lh_attribkeys_arg1³) = map_lh_₃((fun k³ -> 
//│ 	let _lh_ends_K_2³ = last_lh_₂(k³)
//│ 	in let _lh_ends_K_1³ = head_lh_₂(k³)
//│ 	in let t⁴¹ = 	
//│ 		let t⁴³ = (fun ys¹⁴ -> ys¹⁴)
//│ 		in let h³⁹ = _lh_ends_K_2³
//│ 		in (fun ys¹³ -> 
//│ 			let t⁴⁴ = mappend_lh_₅(t⁴³, ys¹³)
//│ 			in let h⁴⁰ = h³⁹
//│ 			in (fun f³⁴ -> (fun i⁶ -> f³⁴(h⁴⁰, foldr_lh_₂(f³⁴, i⁶, t⁴⁴)))))
//│ 	in let h³⁷ = _lh_ends_K_1³
//│ 	in (fun ys¹² -> 
//│ 		let t⁴² = mappend_lh_₅(t⁴¹, ys¹²)
//│ 		in let h³⁸ = h³⁷
//│ 		in (fun f³³ -> (fun i⁵ -> f³³(h³⁸, foldr_lh_₂(f³³, i⁵, t⁴²)))))), _lh_attribkeys_arg1³)
//│ def blocked'_lh_₁(_lh_blocked'_arg1¹, _lh_blocked'_arg2¹) = case _lh_blocked'_arg2¹ of {
//│ 	LH_N  => (fun _lh_findhash'_arg2³ -> (fun _lh_findhash'_arg1³ -> [YesIts 1 _lh_findhash'_arg2³]))
//│ 	| LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => 
//│ 		let ds'¹ = union_lh_₁(_lh_blocked'_arg1¹, ends_lh_₁(_lh_blocked'_LH_C_0⁰))
//│ 		in let _lh_matchIdent²³ = partition'_lh_₁((fun x³ -> subset_lh_₁(ends_lh_₂(x³), ds'¹)), _lh_blocked'_LH_C_1⁰)
//│ 		in case _lh_matchIdent²³ of {
//│ 			LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂(
//│ 				let t⁶² = _lh_blocked'_LH_P2_0⁰
//│ 				in let h⁵⁸ = _lh_blocked'_LH_C_0⁰
//│ 				in (fun ys²⁰ -> 
//│ 					let _lh_findhash'_LH_C_1² = mappend_lh_₂(t⁶², ys²⁰)
//│ 					in let _lh_findhash'_LH_C_0² = h⁵⁸
//│ 					in (fun _lh_findhash'_arg2⁴ -> (fun _lh_findhash'_arg1⁴ -> case _lh_findhash'_LH_C_0² of {
//│ 						K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => 
//│ 							let try⁵ = (fun newAssocs² -> 
//│ 								let newCharAssocs² = mappend_lh_₃(newAssocs², _lh_findhash'_arg2⁴)
//│ 								in let _lh_matchIdent²⁴ = hinsert_lh_₁(hash_lh_₁(newCharAssocs², 
//│ 									let _lh_hash_K_3² = _lh_findhash'_K_3⁰
//│ 									in let _lh_hash_K_2² = _lh_findhash'_K_2⁰
//│ 									in let _lh_hash_K_1² = _lh_findhash'_K_1⁰
//│ 									in (fun _lh_hash_arg1³ -> ((_lh_hash_K_3² + assoc_lh_₂(_lh_hash_K_1², _lh_hash_arg1³)) + assoc_lh_₁(_lh_hash_K_2², _lh_hash_arg1³)))), _lh_findhash'_arg1⁴)
//│ 								in case _lh_matchIdent²⁴ of {
//│ 									Nothing  => [NotEver 1]
//│ 									| Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs², _lh_findhash'_LH_C_1²)
//│ 									| _  => error⁰})
//│ 							in let maxval⁷ = length_lh_₂(freqtab_lh_₁(0))
//│ 							in let _lh_matchIdent²⁵ = 	
//│ 								let _lh_findhash'_LH_P2_1⁵ = assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁴)
//│ 								in let _lh_findhash'_LH_P2_0³ = assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁴)
//│ 								in (fun _lh_findhash'_K_1⁴ -> (fun _lh_findhash'_K_2⁴ -> (fun maxval⁸ -> (fun try⁶ -> _lh_findhash'_LH_P2_0³(_lh_findhash'_K_1⁴, _lh_findhash'_K_2⁴, _lh_findhash'_LH_P2_1⁵, maxval⁸, try⁶)))))
//│ 							in _lh_matchIdent²⁵(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰, maxval⁷, try⁵)
//│ 						| _  => error⁰}))), blocked'_lh_₁(ds'¹, _lh_blocked'_LH_P2_1⁰))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def blocked_lh_₁(_lh_blocked_arg1¹) = blocked'_lh_₁([LH_N], _lh_blocked_arg1¹)
//│ def cichelli_lh_₁(_lh_cichelli_arg1¹) = 
//│ 	let attribkeys'¹ = attribkeys_lh_₁(mappend_lh_₁(keys_lh_₂(0), take_lh_₁((_lh_cichelli_arg1¹ % 2), keys_lh_₁(0))))
//│ 	in let hashkeys¹ = (fun _lh_funcomp_x¹ -> blocked_lh_₁(freqsorted_lh_₁(_lh_funcomp_x¹)))(attribkeys'¹)
//│ 	in findhash_lh_₁(hashkeys¹)
//│ def concat_lh_₁(lss¹) = lss¹(99)
//│ def ends_lh_₁(_lh_ends_arg1³) = case _lh_ends_arg1³ of {
//│ 	K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => 
//│ 		let _lh_listcomp_fun_ls_t⁶ = 	
//│ 			let _lh_listcomp_fun_ls_t⁷ = (fun _lh_listcomp_fun¹⁰ -> (fun _lh_union_arg1⁴ -> [LH_N]))
//│ 			in let _lh_listcomp_fun_ls_h⁷ = _lh_ends_K_2²
//│ 			in (fun _lh_listcomp_fun⁹ -> (fun _lh_union_arg1³ -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁷, _lh_union_arg1³)) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁷)))
//│ 		in let _lh_listcomp_fun_ls_h⁶ = _lh_ends_K_1²
//│ 		in (fun _lh_listcomp_fun⁸ -> (fun _lh_union_arg1² -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁶, _lh_union_arg1²)) then [LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁶)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁶)))
//│ 	| _  => error⁰}
//│ def ends_lh_₂(_lh_ends_arg1⁵) = case _lh_ends_arg1⁵ of {
//│ 	K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => 
//│ 		let _lh_all_LH_C_1¹ = 	
//│ 			let _lh_all_LH_C_1² = (fun _lh_all_arg1³ -> [True])
//│ 			in let _lh_all_LH_C_0² = _lh_ends_K_2¹
//│ 			in (fun _lh_all_arg1² -> if _lh_all_arg1²(_lh_all_LH_C_0²) then all_lh_₁(_lh_all_arg1², _lh_all_LH_C_1²) else [False])
//│ 		in let _lh_all_LH_C_0¹ = _lh_ends_K_1¹
//│ 		in (fun _lh_all_arg1¹ -> if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₁(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False])
//│ 	| _  => error⁰}
//│ def ends_lh_₃(_lh_ends_arg1⁴) = _lh_ends_arg1⁴
//│ def enumFromTo_lz_lh_₁(_lh_enumFromTo_lz_arg1⁵, _lh_enumFromTo_lz_arg2⁵) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁵ <= _lh_enumFromTo_lz_arg2⁵) then 
//│ 	let t²³ = enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁵ + 1), _lh_enumFromTo_lz_arg2⁵)
//│ 	in let h²³ = _lh_enumFromTo_lz_arg1⁵
//│ 	in (fun f¹¹ -> 
//│ 		let _lh_first_LH_C_1⁵ = map_lz_lh_₃(f¹¹, t²³)
//│ 		in let _lh_first_LH_C_0⁵ = f¹¹(h²³)
//│ 		in (fun _lh_first_arg1⁸ -> 
//│ 			let _lh_matchIdent¹⁷ = _lh_first_LH_C_0⁵
//│ 			in case _lh_matchIdent¹⁷ of {
//│ 				YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1⁸ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]
//│ 				| NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1⁸ + _lh_first_NotEver_0¹), _lh_first_LH_C_1⁵)
//│ 				| _  => error⁰})) else (fun f¹² -> (fun _lh_first_arg1⁹ -> [NotEver _lh_first_arg1⁹])))
//│ def enumFromTo_lz_lh_₂(_lh_enumFromTo_lz_arg1⁹, _lh_enumFromTo_lz_arg2⁹) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁹ <= _lh_enumFromTo_lz_arg2⁹) then 
//│ 	let t⁶¹ = enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1⁹ + 1), _lh_enumFromTo_lz_arg2⁹)
//│ 	in let h⁵⁷ = _lh_enumFromTo_lz_arg1⁹
//│ 	in (fun f⁴⁵ -> 
//│ 		let _lh_first_LH_C_1⁷ = map_lz_lh_₄(f⁴⁵, t⁶¹)
//│ 		in let _lh_first_LH_C_0⁷ = f⁴⁵(h⁵⁷)
//│ 		in (fun _lh_first_arg1¹⁴ -> 
//│ 			let _lh_matchIdent²² = _lh_first_LH_C_0⁷
//│ 			in case _lh_matchIdent²² of {
//│ 				YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1¹⁴ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]
//│ 				| NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1¹⁴ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁷)
//│ 				| _  => error⁰})) else (fun f⁴⁶ -> (fun _lh_first_arg1¹⁵ -> [NotEver _lh_first_arg1¹⁵])))
//│ def enumFromTo_lz_lh_₃(_lh_enumFromTo_lz_arg1⁸, _lh_enumFromTo_lz_arg2⁸) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁸ <= _lh_enumFromTo_lz_arg2⁸) then 
//│ 	let _lh_listcomp_fun_ls_t⁸ = enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1⁸ + 1), _lh_enumFromTo_lz_arg2⁸)
//│ 	in let _lh_listcomp_fun_ls_h⁸ = _lh_enumFromTo_lz_arg1⁸
//│ 	in (fun _lh_listcomp_fun¹¹ -> (fun maxval³ -> 
//│ 		let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para⁴ -> force⁰(_lh_listcomp_fun_para⁴, _lh_listcomp_fun_ls_h⁸, _lh_listcomp_fun¹², _lh_listcomp_fun_ls_t⁸, _lh_listcomp_fun¹¹))
//│ 		in _lh_listcomp_fun¹²(enumFromTo_lz_lh_₄(0, maxval³)))) else (fun _lh_listcomp_fun¹³ -> (fun maxval⁴ -> lazy⁰([LH_N]))))
//│ def enumFromTo_lz_lh_₄(_lh_enumFromTo_lz_arg1⁶, _lh_enumFromTo_lz_arg2⁶) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁶ <= _lh_enumFromTo_lz_arg2⁶) then 
//│ 	let _lh_listcomp_fun_ls_t³ = enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1⁶ + 1), _lh_enumFromTo_lz_arg2⁶)
//│ 	in let _lh_listcomp_fun_ls_h³ = _lh_enumFromTo_lz_arg1⁶
//│ 	in (fun _lh_listcomp_fun_ls_h⁴ -> (fun _lh_listcomp_fun⁴ -> (fun _lh_listcomp_fun_ls_t⁴ -> (fun _lh_listcomp_fun⁵ -> lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_h³] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t³)]))))) else (fun _lh_listcomp_fun_ls_h⁵ -> (fun _lh_listcomp_fun⁶ -> (fun _lh_listcomp_fun_ls_t⁵ -> (fun _lh_listcomp_fun⁷ -> _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁵))))))
//│ def enumFromTo_lz_lh_₅(_lh_enumFromTo_lz_arg1⁷, _lh_enumFromTo_lz_arg2⁷) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁷ <= _lh_enumFromTo_lz_arg2⁷) then 
//│ 	let t⁴⁰ = enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1⁷ + 1), _lh_enumFromTo_lz_arg2⁷)
//│ 	in let h³⁶ = _lh_enumFromTo_lz_arg1⁷
//│ 	in (fun f³⁰ -> 
//│ 		let _lh_first_LH_C_1⁶ = map_lz_lh_₂(f³⁰, t⁴⁰)
//│ 		in let _lh_first_LH_C_0⁶ = f³⁰(h³⁶)
//│ 		in (fun _lh_first_arg1¹² -> 
//│ 			let _lh_matchIdent²⁰ = _lh_first_LH_C_0⁶
//│ 			in case _lh_matchIdent²⁰ of {
//│ 				YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1¹² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]
//│ 				| NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1¹² + _lh_first_NotEver_0²), _lh_first_LH_C_1⁶)
//│ 				| _  => error⁰})) else (fun f³¹ -> (fun _lh_first_arg1¹³ -> [NotEver _lh_first_arg1¹³])))
//│ def findhash'_lh_₁(_lh_findhash'_arg1², _lh_findhash'_arg2², _lh_findhash'_arg3¹) = _lh_findhash'_arg3¹(_lh_findhash'_arg2², _lh_findhash'_arg1²)
//│ def findhash_lh_₁(_lh_findhash_arg1¹) = findhash'_lh_₁([H [Nothing] [Nothing] [LH_N]], [LH_N], _lh_findhash_arg1¹)
//│ def firstSuccess_lh_₁(_lh_firstSuccess_arg1⁴, _lh_firstSuccess_arg2⁴) = first_lh_₁(0, map_lz_lh_₁(_lh_firstSuccess_arg1⁴, _lh_firstSuccess_arg2⁴))
//│ def firstSuccess_lh_₂(_lh_firstSuccess_arg1⁷, _lh_firstSuccess_arg2⁷) = first_lh_₂(0, map_lz_lh_₂(_lh_firstSuccess_arg1⁷, _lh_firstSuccess_arg2⁷))
//│ def firstSuccess_lh_₃(_lh_firstSuccess_arg1⁵, _lh_firstSuccess_arg2⁵) = first_lh_₃(0, map_lz_lh_₃(_lh_firstSuccess_arg1⁵, _lh_firstSuccess_arg2⁵))
//│ def firstSuccess_lh_₄(_lh_firstSuccess_arg1⁶, _lh_firstSuccess_arg2⁶) = first_lh_₄(0, map_lz_lh_₄(_lh_firstSuccess_arg1⁶, _lh_firstSuccess_arg2⁶))
//│ def first_lh_₁(_lh_first_arg1⁷, _lh_first_arg2⁵) = 
//│ 	let _lh_matchIdent¹⁴ = force⁰(_lh_first_arg2⁵)
//│ 	in _lh_matchIdent¹⁴(_lh_first_arg1⁷)
//│ def first_lh_₂(_lh_first_arg1⁴, _lh_first_arg2⁴) = 
//│ 	let _lh_matchIdent¹² = force⁰(_lh_first_arg2⁴)
//│ 	in _lh_matchIdent¹²(_lh_first_arg1⁴)
//│ def first_lh_₃(_lh_first_arg1¹⁰, _lh_first_arg2⁶) = 
//│ 	let _lh_matchIdent¹⁸ = force⁰(_lh_first_arg2⁶)
//│ 	in _lh_matchIdent¹⁸(_lh_first_arg1¹⁰)
//│ def first_lh_₄(_lh_first_arg1¹¹, _lh_first_arg2⁷) = 
//│ 	let _lh_matchIdent¹⁹ = force⁰(_lh_first_arg2⁷)
//│ 	in _lh_matchIdent¹⁹(_lh_first_arg1¹¹)
//│ def foldr_lh_₁(f¹⁴, i², ls²²) = case ls²² of {
//│ 	LH_C h¹³ t¹³ => f¹⁴(h¹³, foldr_lh_₁(f¹⁴, i², t¹³))
//│ 	| LH_N  => i²}
//│ def foldr_lh_₂(f¹⁵, i³, ls²³) = ls²³(f¹⁵, i³)
//│ def freqsorted_lh_₁(_lh_freqsorted_arg1¹) = _lh_freqsorted_arg1¹
//│ def freqtab_lh_₁(_lh_freqtab_arg1¹) = histo_lh_₁(concat_lh_₁(map_lh_₂(ends_lh_₃, attribkeys_lh_₂(keys_lh_₄(0)))))
//│ def hash_lh_₁(_lh_hash_arg1², _lh_hash_arg2¹) = _lh_hash_arg2¹(_lh_hash_arg1²)
//│ def head_lh_₁(ls³⁰) = case ls³⁰ of {
//│ 	LH_C h¹⁷ t¹⁷ => h¹⁷
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls¹⁹) = case ls¹⁹ of {
//│ 	LH_C h⁰ t⁰ => h⁰
//│ 	| LH_N  => error⁰}
//│ def hinsert_lh_₁(_lh_hinsert_arg1¹, _lh_hinsert_arg2¹) = case _lh_hinsert_arg2¹ of {
//│ 	H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => 
//│ 		let lo'¹ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1¹)
//│ 		in let hi'¹ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1¹)
//│ 		in if (member_lh_₃(_lh_hinsert_arg1¹, _lh_hinsert_H_2⁰) || (((1 + hi'¹) - lo'¹) > length_lh_₃(keys_lh_₃(0)))) then [Nothing] else [Just [H [Just lo'¹] [Just hi'¹] [LH_C _lh_hinsert_arg1¹ _lh_hinsert_H_2⁰]]]
//│ 	| _  => error⁰}
//│ def histins_lh_₁(_lh_histins_arg1¹, _lh_histins_arg2¹) = case _lh_histins_arg2¹ of {
//│ 	LH_N  => [LH_C [LH_P2 _lh_histins_arg1¹ 1] [LH_N]]
//│ 	| LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {
//│ 		LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1¹, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1¹, _lh_histins_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def histo_lh_₁(_lh_histo_arg1¹) = foldr_lh_₂(histins_lh_₁, [LH_N], _lh_histo_arg1¹)
//│ def keys_lh_₁(_lh_keys_arg1⁶) = 
//│ 	let t⁴⁵ = 	
//│ 		let t⁴⁷ = 	
//│ 			let t⁴⁹ = 	
//│ 				let t⁵¹ = (fun n⁸ -> (fun f³⁹ -> [LH_N]))
//│ 				in let h⁴⁷ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun n⁷ -> 
//│ 					let t⁵² = take_lh_₁((n⁷ - 1), t⁵¹)
//│ 					in let h⁴⁸ = h⁴⁷
//│ 					in (fun f³⁸ -> [LH_C f³⁸(h⁴⁸) map_lh_₁(f³⁸, t⁵²)]))
//│ 			in let h⁴⁵ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun n⁶ -> 
//│ 				let t⁵⁰ = take_lh_₁((n⁶ - 1), t⁴⁹)
//│ 				in let h⁴⁶ = h⁴⁵
//│ 				in (fun f³⁷ -> [LH_C f³⁷(h⁴⁶) map_lh_₁(f³⁷, t⁵⁰)]))
//│ 		in let h⁴³ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun n⁵ -> 
//│ 			let t⁴⁸ = take_lh_₁((n⁵ - 1), t⁴⁷)
//│ 			in let h⁴⁴ = h⁴³
//│ 			in (fun f³⁶ -> [LH_C f³⁶(h⁴⁴) map_lh_₁(f³⁶, t⁴⁸)]))
//│ 	in let h⁴¹ = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun n⁴ -> 
//│ 		let t⁴⁶ = take_lh_₁((n⁴ - 1), t⁴⁵)
//│ 		in let h⁴² = h⁴¹
//│ 		in (fun f³⁵ -> [LH_C f³⁵(h⁴²) map_lh_₁(f³⁵, t⁴⁶)]))
//│ def keys_lh_₂(_lh_keys_arg1⁷) = 
//│ 	let t⁵³ = 	
//│ 		let t⁵⁵ = 	
//│ 			let t⁵⁷ = 	
//│ 				let t⁵⁹ = (fun ys¹⁹ -> ys¹⁹)
//│ 				in let h⁵⁵ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun ys¹⁸ -> 
//│ 					let t⁶⁰ = mappend_lh_₁(t⁵⁹, ys¹⁸)
//│ 					in let h⁵⁶ = h⁵⁵
//│ 					in (fun f⁴⁴ -> [LH_C f⁴⁴(h⁵⁶) map_lh_₁(f⁴⁴, t⁶⁰)]))
//│ 			in let h⁵³ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun ys¹⁷ -> 
//│ 				let t⁵⁸ = mappend_lh_₁(t⁵⁷, ys¹⁷)
//│ 				in let h⁵⁴ = h⁵³
//│ 				in (fun f⁴³ -> [LH_C f⁴³(h⁵⁴) map_lh_₁(f⁴³, t⁵⁸)]))
//│ 		in let h⁵¹ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun ys¹⁶ -> 
//│ 			let t⁵⁶ = mappend_lh_₁(t⁵⁵, ys¹⁶)
//│ 			in let h⁵² = h⁵¹
//│ 			in (fun f⁴² -> [LH_C f⁴²(h⁵²) map_lh_₁(f⁴², t⁵⁶)]))
//│ 	in let h⁴⁹ = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun ys¹⁵ -> 
//│ 		let t⁵⁴ = mappend_lh_₁(t⁵³, ys¹⁵)
//│ 		in let h⁵⁰ = h⁴⁹
//│ 		in (fun f⁴¹ -> [LH_C f⁴¹(h⁵⁰) map_lh_₁(f⁴¹, t⁵⁴)]))
//│ def keys_lh_₃(_lh_keys_arg1⁴) = 
//│ 	let t²⁴ = 	
//│ 		let t²⁵ = 	
//│ 			let t²⁶ = 	
//│ 				let t²⁷ = (fun _lh_dummy⁴ -> 0)
//│ 				in (fun _lh_dummy³ -> (1 + length_lh_₃(t²⁷)))
//│ 			in (fun _lh_dummy² -> (1 + length_lh_₃(t²⁶)))
//│ 		in (fun _lh_dummy¹ -> (1 + length_lh_₃(t²⁵)))
//│ 	in (fun _lh_dummy⁰ -> (1 + length_lh_₃(t²⁴)))
//│ def keys_lh_₄(_lh_keys_arg1⁵) = 
//│ 	let t²⁸ = 	
//│ 		let t³¹ = 	
//│ 			let t³⁴ = 	
//│ 				let t³⁷ = (fun f²⁷ -> (fun f²⁸ -> (fun _lh_dummy⁹ -> (fun f²⁹ -> (fun i⁴ -> i⁴)))))
//│ 				in let h³³ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun f²⁵ -> 
//│ 					let t³⁸ = map_lh_₃(f²⁵, t³⁷)
//│ 					in let h³⁴ = f²⁵(h³³)
//│ 					in (fun f²⁶ -> 
//│ 						let t³⁹ = map_lh_₂(f²⁶, t³⁸)
//│ 						in let h³⁵ = f²⁶(h³⁴)
//│ 						in (fun _lh_dummy⁸ -> mappend_lh_₅(h³⁵, concat_lh_₁(t³⁹)))))
//│ 			in let h³⁰ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun f²³ -> 
//│ 				let t³⁵ = map_lh_₃(f²³, t³⁴)
//│ 				in let h³¹ = f²³(h³⁰)
//│ 				in (fun f²⁴ -> 
//│ 					let t³⁶ = map_lh_₂(f²⁴, t³⁵)
//│ 					in let h³² = f²⁴(h³¹)
//│ 					in (fun _lh_dummy⁷ -> mappend_lh_₅(h³², concat_lh_₁(t³⁶)))))
//│ 		in let h²⁷ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun f²¹ -> 
//│ 			let t³² = map_lh_₃(f²¹, t³¹)
//│ 			in let h²⁸ = f²¹(h²⁷)
//│ 			in (fun f²² -> 
//│ 				let t³³ = map_lh_₂(f²², t³²)
//│ 				in let h²⁹ = f²²(h²⁸)
//│ 				in (fun _lh_dummy⁶ -> mappend_lh_₅(h²⁹, concat_lh_₁(t³³)))))
//│ 	in let h²⁴ = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun f¹⁹ -> 
//│ 		let t²⁹ = map_lh_₃(f¹⁹, t²⁸)
//│ 		in let h²⁵ = f¹⁹(h²⁴)
//│ 		in (fun f²⁰ -> 
//│ 			let t³⁰ = map_lh_₂(f²⁰, t²⁹)
//│ 			in let h²⁶ = f²⁰(h²⁵)
//│ 			in (fun _lh_dummy⁵ -> mappend_lh_₅(h²⁶, concat_lh_₁(t³⁰)))))
//│ def last_lh_₁(_lh_last_arg1³) = case _lh_last_arg1³ of {
//│ 	LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => 
//│ 		let go³ = (fun _lh_go_arg1³ -> (fun _lh_go_arg2³ -> case _lh_go_arg2³ of {
//│ 			LH_N  => _lh_go_arg1³
//│ 			| LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go³(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹)
//│ 			| _  => error⁰}))
//│ 		in go³(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def last_lh_₂(_lh_last_arg1²) = case _lh_last_arg1² of {
//│ 	LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => 
//│ 		let go² = (fun _lh_go_arg1² -> (fun _lh_go_arg2² -> case _lh_go_arg2² of {
//│ 			LH_N  => _lh_go_arg1²
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go²(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go²(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls²⁸) = case ls²⁸ of {
//│ 	LH_C h¹⁸ t¹⁸ => (1 + length_lh_₁(t¹⁸))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹⁷) = case ls¹⁷ of {
//│ 	LH_C h¹⁴ t¹⁴ => (1 + length_lh_₂(t¹⁴))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls¹⁶) = ls¹⁶(99)
//│ def length_lh_₄(ls²⁷) = case ls²⁷ of {
//│ 	LH_C h¹ t¹ => (1 + length_lh_₄(t¹))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f¹⁸, ls²⁶) = ls²⁶(f¹⁸)
//│ def map_lh_₂(f¹⁷, ls²⁵) = ls²⁵(f¹⁷)
//│ def map_lh_₃(f³², ls²⁹) = ls²⁹(f³²)
//│ def map_lz_lh_₁(f⁹, ls¹⁸) = lazy⁰(case force⁰(ls¹⁸) of {
//│ 	LH_C h¹¹ t¹¹ => 
//│ 		let _lh_first_LH_C_1⁴ = map_lz_lh_₁(f⁹, t¹¹)
//│ 		in let _lh_first_LH_C_0⁴ = f⁹(h¹¹)
//│ 		in (fun _lh_first_arg1⁵ -> 
//│ 			let _lh_matchIdent¹³ = _lh_first_LH_C_0⁴
//│ 			in case _lh_matchIdent¹³ of {
//│ 				YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1⁵ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]
//│ 				| NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1⁵ + _lh_first_NotEver_0³), _lh_first_LH_C_1⁴)
//│ 				| _  => error⁰})
//│ 	| LH_N  => (fun _lh_first_arg1⁶ -> [NotEver _lh_first_arg1⁶])})
//│ def map_lz_lh_₂(f⁴⁰, ls³¹) = lazy⁰(force⁰(ls³¹, f⁴⁰))
//│ def map_lz_lh_₃(f¹³, ls²¹) = lazy⁰(force⁰(ls²¹, f¹³))
//│ def map_lz_lh_₄(f¹⁰, ls²⁰) = lazy⁰(force⁰(ls²⁰, f¹⁰))
//│ def mappend_lh_₁(xs⁶, ys⁷) = xs⁶(ys⁷)
//│ def mappend_lh_₂(xs⁷, ys⁹) = xs⁷(ys⁹)
//│ def mappend_lh_₃(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h¹⁵ t¹⁵ => [LH_C h¹⁵ mappend_lh_₃(t¹⁵, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₄(xs⁹, ys¹¹) = case xs⁹ of {
//│ 	LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹¹)]
//│ 	| LH_N  => ys¹¹}
//│ def mappend_lh_₅(xs⁸, ys¹⁰) = xs⁸(ys¹⁰)
//│ def max_lh_₁(_lh_max_arg1¹, _lh_max_arg2¹) = if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ def maxm_lh_₁(_lh_maxm_arg1¹, _lh_maxm_arg2¹) = case _lh_maxm_arg1¹ of {
//│ 	Nothing  => _lh_maxm_arg2¹
//│ 	| Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2¹)
//│ 	| _  => error⁰}
//│ def member_lh_₁(_lh_member_arg1⁴, _lh_member_arg2⁴) = case _lh_member_arg2⁴ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1⁴, _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1⁴, _lh_member_LH_C_1²))
//│ 	| _  => error⁰}
//│ def member_lh_₂(_lh_member_arg1³, _lh_member_arg2³) = case _lh_member_arg2³ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1³, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1³, _lh_member_LH_C_1¹))
//│ 	| _  => error⁰}
//│ def member_lh_₃(_lh_member_arg1⁵, _lh_member_arg2⁵) = case _lh_member_arg2⁵ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁵, _lh_member_LH_C_0⁰) || member_lh_₃(_lh_member_arg1⁵, _lh_member_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def min_lh_₁(_lh_min_arg1¹, _lh_min_arg2¹) = if (_lh_min_arg1¹ < _lh_min_arg2¹) then _lh_min_arg1¹ else _lh_min_arg2¹
//│ def minm_lh_₁(_lh_minm_arg1¹, _lh_minm_arg2¹) = case _lh_minm_arg1¹ of {
//│ 	Nothing  => _lh_minm_arg2¹
//│ 	| Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2¹)
//│ 	| _  => error⁰}
//│ def partition'_lh_₁(_lh_partition'_arg1¹) = foldr_lh_₁(select_lh_₁(_lh_partition'_arg1¹), [LH_P2 (fun ys⁸ -> ys⁸) [LH_N]])
//│ def prog_lh_₁(_lh_prog_arg1¹) = cichelli_lh_₁(_lh_prog_arg1¹)
//│ def select_lh_₁(_lh_select_arg1¹, _lh_select_arg2¹, _lh_select_arg3¹) = case _lh_select_arg3¹ of {
//│ 	LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1¹(_lh_select_arg2¹) then [LH_P2 
//│ 		let t²² = _lh_select_LH_P2_0⁰
//│ 		in let h²² = _lh_select_arg2¹
//│ 		in (fun ys⁶ -> 
//│ 			let _lh_findhash'_LH_C_1¹ = mappend_lh_₂(t²², ys⁶)
//│ 			in let _lh_findhash'_LH_C_0¹ = h²²
//│ 			in (fun _lh_findhash'_arg2¹ -> (fun _lh_findhash'_arg1¹ -> case _lh_findhash'_LH_C_0¹ of {
//│ 				K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => 
//│ 					let try¹ = (fun newAssocs¹ -> 
//│ 						let newCharAssocs¹ = mappend_lh_₃(newAssocs¹, _lh_findhash'_arg2¹)
//│ 						in let _lh_matchIdent¹⁵ = hinsert_lh_₁(hash_lh_₁(newCharAssocs¹, 
//│ 							let _lh_hash_K_3¹ = _lh_findhash'_K_3⁰
//│ 							in let _lh_hash_K_2¹ = _lh_findhash'_K_2⁰
//│ 							in let _lh_hash_K_1¹ = _lh_findhash'_K_1⁰
//│ 							in (fun _lh_hash_arg1¹ -> ((_lh_hash_K_3¹ + assoc_lh_₂(_lh_hash_K_1¹, _lh_hash_arg1¹)) + assoc_lh_₁(_lh_hash_K_2¹, _lh_hash_arg1¹)))), _lh_findhash'_arg1¹)
//│ 						in case _lh_matchIdent¹⁵ of {
//│ 							Nothing  => [NotEver 1]
//│ 							| Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs¹, _lh_findhash'_LH_C_1¹)
//│ 							| _  => error⁰})
//│ 					in let maxval¹ = length_lh_₂(freqtab_lh_₁(0))
//│ 					in let _lh_matchIdent¹⁶ = 	
//│ 						let _lh_findhash'_LH_P2_1² = assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2¹)
//│ 						in let _lh_findhash'_LH_P2_0² = assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2¹)
//│ 						in (fun _lh_findhash'_K_1¹ -> (fun _lh_findhash'_K_2¹ -> (fun maxval² -> (fun try² -> _lh_findhash'_LH_P2_0²(_lh_findhash'_K_1¹, _lh_findhash'_K_2¹, _lh_findhash'_LH_P2_1², maxval², try²)))))
//│ 					in _lh_matchIdent¹⁶(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰, maxval¹, try¹)
//│ 				| _  => error⁰}))) _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2¹ _lh_select_LH_P2_1⁰]]
//│ 	| _  => error⁰}
//│ def subset_lh_₁(_lh_subset_arg1¹, _lh_subset_arg2¹) = all_lh_₁((fun x² -> member_lh_₁(x², _lh_subset_arg2¹)), _lh_subset_arg1¹)
//│ def take_lh_₁(n², ls²⁴) = if (n² > 0) then ls²⁴(n²) else (fun f¹⁶ -> [LH_N])
//│ def testCichelli_nofib_lh_₁(_lh_testCichelli_nofib_arg1¹) = prog_lh_₁(_lh_testCichelli_nofib_arg1¹)
//│ def union_lh_₁(_lh_union_arg1¹, _lh_union_arg2¹) = mappend_lh_₄(_lh_union_arg1¹, 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> _lh_listcomp_fun_para³(_lh_listcomp_fun³, _lh_union_arg1¹))
//│ 	in _lh_listcomp_fun³(_lh_union_arg2¹))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>> consumer ids >>>>>>>
//│ take_lh_₁, concat_lh_₁, map_lh_₃, mappend_lh_₁, map_lz_lh_₃, ends_lh_₃, first_lh_₄, map_lz_lh_₄, mappend_lh_₂, all_lh_₁, first_lh_₂, findhash'_lh_₁, map_lz_lh_₂, first_lh_₁, map_lh_₂, foldr_lh_₂, map_lh_₁, hash_lh_₁, mappend_lh_₅, union_lh_₁, first_lh_₃, length_lh_₃
//│ <<<<<<< consumer ids <<<<<<<
//│ 
//│ >>>>>>> floating out info >>>>>>>
//│ map_lz_lh_₁ -> 2
//│ select_lh_₁ -> 1
//│ enumFromTo_lz_lh_₁ -> 2
//│ keys_lh_₃ -> 2
//│ enumFromTo_lz_lh_₄ -> 2
//│ partition'_lh_₁ -> 2
//│ ends_lh_₁ -> 1
//│ keys_lh_₄ -> 1
//│ keys_lh_₂ -> 2
//│ enumFromTo_lz_lh_₅ -> 2
//│ enumFromTo_lz_lh_₃ -> 2
//│ ends_lh_₂ -> 1
//│ assocm_lh_₂ -> 2
//│ attribkeys_lh_₂ -> 3
//│ keys_lh_₁ -> 2
//│ enumFromTo_lz_lh_₂ -> 2
//│ blocked'_lh_₁ -> 2
//│ <<<<<<< floating out info <<<<<<<
//│ 
//│ >>>>>>> after inlining >>>>>>>
//│ testCichelli_nofib_lh_₁(primId⁰(6))
//│ def all_lh_₁(_lh_all_arg1³, _lh_all_arg2⁰) = _lh_all_arg2⁰(_lh_all_arg1³)
//│ def assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_arg2¹) = case _lh_assoc_arg2¹ of {
//│ 	LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_arg2⁰) = case _lh_assoc_arg2⁰ of {
//│ 	LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₁(_lh_assocm_arg1⁰, _lh_assocm_arg2⁰) = case _lh_assocm_arg2⁰ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₁(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₂(_lh_assocm_arg1¹, _lh_assocm_arg2¹) = case _lh_assocm_arg2¹ of {
//│ 	LH_N  => (fun _lh_findhash'_K_1² -> (fun _lh_findhash'_K_2² -> (fun _lh_findhash'_LH_P2_1¹ -> (fun maxval⁴ -> (fun try² -> case _lh_findhash'_LH_P2_1¹ of {
//│ 		Nothing  => if polyEq⁰(_lh_findhash'_K_1², _lh_findhash'_K_2²) then firstSuccess_lh_₄((fun m⁰ -> try²([LH_C [LH_P2 _lh_findhash'_K_1² m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁴)) else firstSuccess_lh_₁((fun mn⁰ -> 
//│ 			let _lh_matchIdent¹⁵ = mn⁰
//│ 			in case _lh_matchIdent¹⁵ of {
//│ 				LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1² => try²([LH_C [LH_P2 _lh_findhash'_K_1² _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2² _lh_findhash'_LH_P2_1²] [LH_N]]])
//│ 				| _  => error⁰}), 
//│ 			let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para² -> force⁰(_lh_listcomp_fun_para², _lh_listcomp_fun¹¹, maxval⁴))
//│ 			in _lh_listcomp_fun¹¹(enumFromTo_lz_lh_₃(0, maxval⁴)))
//│ 		| Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try²([LH_C [LH_P2 _lh_findhash'_K_1² m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁴))
//│ 		| _  => error⁰})))))
//│ 	| LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then (fun _lh_findhash'_K_1³ -> (fun _lh_findhash'_K_2³ -> (fun _lh_findhash'_LH_P2_1³ -> (fun maxval⁵ -> (fun try³ -> case _lh_findhash'_LH_P2_1³ of {
//│ 			Nothing  => firstSuccess_lh_₃((fun n¹ -> try³([LH_C [LH_P2 _lh_findhash'_K_2³ n¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁵))
//│ 			| Just _lh_findhash'_Just_0² => try³([LH_N])
//│ 			| _  => error⁰}))))) else assocm_lh_₂(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def attribkeys_lh_₁(_lh_attribkeys_arg1⁰) = _lh_attribkeys_arg1⁰((fun k⁰ -> [K k⁰ head_lh_₁(k⁰) last_lh_₁(k⁰) length_lh_₁(k⁰)]))
//│ def attribkeys_lh_₂(_lh_attribkeys_arg1¹) = _lh_attribkeys_arg1¹((fun k¹ -> 
//│ 	let _lh_ends_K_2² = last_lh_₂(k¹)
//│ 	in let _lh_ends_K_1² = head_lh_₂(k¹)
//│ 	in let t²⁷ = 	
//│ 		let t²⁸ = (fun ys⁷ -> ys⁷)
//│ 		in let h²³ = _lh_ends_K_2²
//│ 		in (fun ys⁸ -> 
//│ 			let t²⁹ = t²⁸(ys⁸)
//│ 			in let h²⁴ = h²³
//│ 			in (fun f²⁵ -> (fun i³ -> f²⁵(h²⁴, t²⁹(f²⁵, i³)))))
//│ 	in let h²⁵ = _lh_ends_K_1²
//│ 	in (fun ys⁹ -> 
//│ 		let t³⁰ = t²⁷(ys⁹)
//│ 		in let h²⁶ = h²⁵
//│ 		in (fun f²⁶ -> (fun i⁴ -> f²⁶(h²⁶, t³⁰(f²⁶, i⁴)))))))
//│ def blocked'_lh_₁(_lh_blocked'_arg1⁰, _lh_blocked'_arg2⁰) = case _lh_blocked'_arg2⁰ of {
//│ 	LH_N  => (fun _lh_findhash'_arg2² -> (fun _lh_findhash'_arg1² -> [YesIts 1 _lh_findhash'_arg2²]))
//│ 	| LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => 
//│ 		let ds'⁰ = mappend_lh_₄(_lh_blocked'_arg1⁰, 
//│ 			let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para³ -> _lh_listcomp_fun_para³(_lh_listcomp_fun¹², _lh_blocked'_arg1⁰))
//│ 			in _lh_listcomp_fun¹²(ends_lh_₁(_lh_blocked'_LH_C_0⁰)))
//│ 		in let _lh_matchIdent¹⁹ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₂(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ 		in case _lh_matchIdent¹⁹ of {
//│ 			LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => 
//│ 				let t⁴⁹ = _lh_blocked'_LH_P2_0⁰
//│ 				in let h⁴⁵ = _lh_blocked'_LH_C_0⁰
//│ 				in (fun ys¹⁵ -> 
//│ 					let _lh_findhash'_LH_C_1¹ = t⁴⁹(ys¹⁵)
//│ 					in let _lh_findhash'_LH_C_0¹ = h⁴⁵
//│ 					in (fun _lh_findhash'_arg2³ -> (fun _lh_findhash'_arg1³ -> case _lh_findhash'_LH_C_0¹ of {
//│ 						K _lh_findhash'_K_0¹ _lh_findhash'_K_1⁴ _lh_findhash'_K_2⁴ _lh_findhash'_K_3¹ => 
//│ 							let try⁴ = (fun newAssocs¹ -> 
//│ 								let newCharAssocs¹ = mappend_lh_₃(newAssocs¹, _lh_findhash'_arg2³)
//│ 								in let _lh_matchIdent²⁰ = hinsert_lh_₁(
//│ 									let _lh_hash_K_3¹ = _lh_findhash'_K_3¹
//│ 									in let _lh_hash_K_2¹ = _lh_findhash'_K_2⁴
//│ 									in let _lh_hash_K_1¹ = _lh_findhash'_K_1⁴
//│ 									in (fun _lh_hash_arg1² -> ((_lh_hash_K_3¹ + assoc_lh_₂(_lh_hash_K_1¹, _lh_hash_arg1²)) + assoc_lh_₁(_lh_hash_K_2¹, _lh_hash_arg1²)))(newCharAssocs¹), _lh_findhash'_arg1³)
//│ 								in case _lh_matchIdent²⁰ of {
//│ 									Nothing  => [NotEver 1]
//│ 									| Just _lh_findhash'_Just_0³ => _lh_findhash'_LH_C_1¹(newCharAssocs¹, _lh_findhash'_Just_0³)
//│ 									| _  => error⁰})
//│ 							in let maxval⁶ = length_lh_₂(freqtab_lh_₁(0))
//│ 							in let _lh_matchIdent²¹ = 	
//│ 								let _lh_findhash'_LH_P2_1⁴ = assocm_lh_₁(_lh_findhash'_K_2⁴, _lh_findhash'_arg2³)
//│ 								in let _lh_findhash'_LH_P2_0² = assocm_lh_₂(_lh_findhash'_K_1⁴, _lh_findhash'_arg2³)
//│ 								in (fun _lh_findhash'_K_1⁵ -> (fun _lh_findhash'_K_2⁵ -> (fun maxval⁷ -> (fun try⁵ -> _lh_findhash'_LH_P2_0²(_lh_findhash'_K_1⁵, _lh_findhash'_K_2⁵, _lh_findhash'_LH_P2_1⁴, maxval⁷, try⁵)))))
//│ 							in _lh_matchIdent²¹(_lh_findhash'_K_1⁴, _lh_findhash'_K_2⁴, maxval⁶, try⁴)
//│ 						| _  => error⁰})))(blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def blocked_lh_₁(_lh_blocked_arg1⁰) = blocked'_lh_₁([LH_N], _lh_blocked_arg1⁰)
//│ def cichelli_lh_₁(_lh_cichelli_arg1⁰) = 
//│ 	let attribkeys'⁰ = attribkeys_lh_₁(keys_lh_₂(0, if ((_lh_cichelli_arg1⁰ % 2) > 0) then keys_lh_₁(0, (_lh_cichelli_arg1⁰ % 2)) else (fun f⁷ -> [LH_N])))
//│ 	in let hashkeys⁰ = (fun _lh_funcomp_x⁰ -> blocked_lh_₁(freqsorted_lh_₁(_lh_funcomp_x⁰)))(attribkeys'⁰)
//│ 	in findhash_lh_₁(hashkeys⁰)
//│ def concat_lh_₁(lss⁰) = lss⁰(99)
//│ def ends_lh_₁(_lh_ends_arg1⁰) = case _lh_ends_arg1⁰ of {
//│ 	K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => 
//│ 		let _lh_listcomp_fun_ls_t³ = 	
//│ 			let _lh_listcomp_fun_ls_t⁴ = (fun _lh_listcomp_fun⁵ -> (fun _lh_union_arg1¹ -> [LH_N]))
//│ 			in let _lh_listcomp_fun_ls_h³ = _lh_ends_K_2⁰
//│ 			in (fun _lh_listcomp_fun⁶ -> (fun _lh_union_arg1² -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h³, _lh_union_arg1²)) then [LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁴)))
//│ 		in let _lh_listcomp_fun_ls_h⁴ = _lh_ends_K_1⁰
//│ 		in (fun _lh_listcomp_fun⁷ -> (fun _lh_union_arg1³ -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁴, _lh_union_arg1³)) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t³)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t³)))
//│ 	| _  => error⁰}
//│ def ends_lh_₂(_lh_ends_arg1²) = case _lh_ends_arg1² of {
//│ 	K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => 
//│ 		let _lh_all_LH_C_1⁰ = 	
//│ 			let _lh_all_LH_C_1¹ = (fun _lh_all_arg1⁰ -> [True])
//│ 			in let _lh_all_LH_C_0⁰ = _lh_ends_K_2¹
//│ 			in (fun _lh_all_arg1¹ -> if _lh_all_arg1¹(_lh_all_LH_C_0⁰) then _lh_all_LH_C_1¹(_lh_all_arg1¹) else [False])
//│ 		in let _lh_all_LH_C_0¹ = _lh_ends_K_1¹
//│ 		in (fun _lh_all_arg1² -> if _lh_all_arg1²(_lh_all_LH_C_0¹) then _lh_all_LH_C_1⁰(_lh_all_arg1²) else [False])
//│ 	| _  => error⁰}
//│ def ends_lh_₃(_lh_ends_arg1¹) = _lh_ends_arg1¹
//│ def enumFromTo_lz_lh_₁(_lh_enumFromTo_lz_arg1⁰, _lh_enumFromTo_lz_arg2⁰) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁰ <= _lh_enumFromTo_lz_arg2⁰) then 
//│ 	let t⁵ = enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)
//│ 	in let h⁵ = _lh_enumFromTo_lz_arg1⁰
//│ 	in (fun f² -> 
//│ 		let _lh_first_LH_C_1¹ = lazy⁰(force⁰(t⁵, f²))
//│ 		in let _lh_first_LH_C_0¹ = f²(h⁵)
//│ 		in (fun _lh_first_arg1⁴ -> 
//│ 			let _lh_matchIdent⁷ = _lh_first_LH_C_0¹
//│ 			in case _lh_matchIdent⁷ of {
//│ 				YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1⁴ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]
//│ 				| NotEver _lh_first_NotEver_0¹ => 
//│ 					let _lh_matchIdent⁸ = force⁰(_lh_first_LH_C_1¹)
//│ 					in _lh_matchIdent⁸((_lh_first_arg1⁴ + _lh_first_NotEver_0¹))
//│ 				| _  => error⁰})) else (fun f³ -> (fun _lh_first_arg1⁵ -> [NotEver _lh_first_arg1⁵])))
//│ def enumFromTo_lz_lh_₂(_lh_enumFromTo_lz_arg1⁴, _lh_enumFromTo_lz_arg2⁴) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁴ <= _lh_enumFromTo_lz_arg2⁴) then 
//│ 	let t⁴⁸ = enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)
//│ 	in let h⁴⁴ = _lh_enumFromTo_lz_arg1⁴
//│ 	in (fun f⁴¹ -> 
//│ 		let _lh_first_LH_C_1³ = lazy⁰(force⁰(t⁴⁸, f⁴¹))
//│ 		in let _lh_first_LH_C_0³ = f⁴¹(h⁴⁴)
//│ 		in (fun _lh_first_arg1¹⁰ -> 
//│ 			let _lh_matchIdent¹⁷ = _lh_first_LH_C_0³
//│ 			in case _lh_matchIdent¹⁷ of {
//│ 				YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1¹⁰ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]
//│ 				| NotEver _lh_first_NotEver_0³ => 
//│ 					let _lh_matchIdent¹⁸ = force⁰(_lh_first_LH_C_1³)
//│ 					in _lh_matchIdent¹⁸((_lh_first_arg1¹⁰ + _lh_first_NotEver_0³))
//│ 				| _  => error⁰})) else (fun f⁴² -> (fun _lh_first_arg1¹¹ -> [NotEver _lh_first_arg1¹¹])))
//│ def enumFromTo_lz_lh_₃(_lh_enumFromTo_lz_arg1³, _lh_enumFromTo_lz_arg2³) = lazy⁰(if (_lh_enumFromTo_lz_arg1³ <= _lh_enumFromTo_lz_arg2³) then 
//│ 	let _lh_listcomp_fun_ls_t⁵ = enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)
//│ 	in let _lh_listcomp_fun_ls_h⁵ = _lh_enumFromTo_lz_arg1³
//│ 	in (fun _lh_listcomp_fun⁸ -> (fun maxval² -> 
//│ 		let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para¹ -> force⁰(_lh_listcomp_fun_para¹, _lh_listcomp_fun_ls_h⁵, _lh_listcomp_fun⁹, _lh_listcomp_fun_ls_t⁵, _lh_listcomp_fun⁸))
//│ 		in _lh_listcomp_fun⁹(enumFromTo_lz_lh_₄(0, maxval²)))) else (fun _lh_listcomp_fun¹⁰ -> (fun maxval³ -> lazy⁰([LH_N]))))
//│ def enumFromTo_lz_lh_₄(_lh_enumFromTo_lz_arg1¹, _lh_enumFromTo_lz_arg2¹) = lazy⁰(if (_lh_enumFromTo_lz_arg1¹ <= _lh_enumFromTo_lz_arg2¹) then 
//│ 	let _lh_listcomp_fun_ls_t⁰ = enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)
//│ 	in let _lh_listcomp_fun_ls_h⁰ = _lh_enumFromTo_lz_arg1¹
//│ 	in (fun _lh_listcomp_fun_ls_h¹ -> (fun _lh_listcomp_fun¹ -> (fun _lh_listcomp_fun_ls_t¹ -> (fun _lh_listcomp_fun² -> lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h⁰] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t⁰)]))))) else (fun _lh_listcomp_fun_ls_h² -> (fun _lh_listcomp_fun³ -> (fun _lh_listcomp_fun_ls_t² -> (fun _lh_listcomp_fun⁴ -> _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t²))))))
//│ def enumFromTo_lz_lh_₅(_lh_enumFromTo_lz_arg1², _lh_enumFromTo_lz_arg2²) = lazy⁰(if (_lh_enumFromTo_lz_arg1² <= _lh_enumFromTo_lz_arg2²) then 
//│ 	let t²⁵ = enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)
//│ 	in let h²¹ = _lh_enumFromTo_lz_arg1²
//│ 	in (fun f²² -> 
//│ 		let _lh_first_LH_C_1² = lazy⁰(force⁰(t²⁵, f²²))
//│ 		in let _lh_first_LH_C_0² = f²²(h²¹)
//│ 		in (fun _lh_first_arg1⁸ -> 
//│ 			let _lh_matchIdent¹³ = _lh_first_LH_C_0²
//│ 			in case _lh_matchIdent¹³ of {
//│ 				YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1⁸ + _lh_first_YesIts_0²) _lh_first_YesIts_1²]
//│ 				| NotEver _lh_first_NotEver_0² => 
//│ 					let _lh_matchIdent¹⁴ = force⁰(_lh_first_LH_C_1²)
//│ 					in _lh_matchIdent¹⁴((_lh_first_arg1⁸ + _lh_first_NotEver_0²))
//│ 				| _  => error⁰})) else (fun f²³ -> (fun _lh_first_arg1⁹ -> [NotEver _lh_first_arg1⁹])))
//│ def findhash'_lh_₁(_lh_findhash'_arg1¹, _lh_findhash'_arg2¹, _lh_findhash'_arg3⁰) = _lh_findhash'_arg3⁰(_lh_findhash'_arg2¹, _lh_findhash'_arg1¹)
//│ def findhash_lh_₁(_lh_findhash_arg1⁰) = _lh_findhash_arg1⁰([LH_N], [H [Nothing] [Nothing] [LH_N]])
//│ def firstSuccess_lh_₁(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰) = 
//│ 	let _lh_matchIdent¹ = force⁰(map_lz_lh_₁(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰))
//│ 	in _lh_matchIdent¹(0)
//│ def firstSuccess_lh_₂(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³) = 
//│ 	let _lh_matchIdent¹⁶ = force⁰(lazy⁰(force⁰(_lh_firstSuccess_arg2³, _lh_firstSuccess_arg1³)))
//│ 	in _lh_matchIdent¹⁶(0)
//│ def firstSuccess_lh_₃(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹) = 
//│ 	let _lh_matchIdent⁹ = force⁰(lazy⁰(force⁰(_lh_firstSuccess_arg2¹, _lh_firstSuccess_arg1¹)))
//│ 	in _lh_matchIdent⁹(0)
//│ def firstSuccess_lh_₄(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²) = 
//│ 	let _lh_matchIdent¹² = force⁰(lazy⁰(force⁰(_lh_firstSuccess_arg2², _lh_firstSuccess_arg1²)))
//│ 	in _lh_matchIdent¹²(0)
//│ def first_lh_₁(_lh_first_arg1³, _lh_first_arg2¹) = 
//│ 	let _lh_matchIdent⁴ = force⁰(_lh_first_arg2¹)
//│ 	in _lh_matchIdent⁴(_lh_first_arg1³)
//│ def first_lh_₂(_lh_first_arg1⁰, _lh_first_arg2⁰) = 
//│ 	let _lh_matchIdent⁰ = force⁰(_lh_first_arg2⁰)
//│ 	in _lh_matchIdent⁰(_lh_first_arg1⁰)
//│ def first_lh_₃(_lh_first_arg1⁶, _lh_first_arg2²) = 
//│ 	let _lh_matchIdent¹⁰ = force⁰(_lh_first_arg2²)
//│ 	in _lh_matchIdent¹⁰(_lh_first_arg1⁶)
//│ def first_lh_₄(_lh_first_arg1⁷, _lh_first_arg2³) = 
//│ 	let _lh_matchIdent¹¹ = force⁰(_lh_first_arg2³)
//│ 	in _lh_matchIdent¹¹(_lh_first_arg1⁷)
//│ def foldr_lh_₁(f⁵, i⁰, ls⁶) = case ls⁶ of {
//│ 	LH_C h⁶ t¹⁰ => f⁵(h⁶, foldr_lh_₁(f⁵, i⁰, t¹⁰))
//│ 	| LH_N  => i⁰}
//│ def foldr_lh_₂(f⁶, i¹, ls⁷) = ls⁷(f⁶, i¹)
//│ def freqsorted_lh_₁(_lh_freqsorted_arg1⁰) = _lh_freqsorted_arg1⁰
//│ def freqtab_lh_₁(_lh_freqtab_arg1⁰) = histo_lh_₁(attribkeys_lh_₂(keys_lh_₄(0), ends_lh_₃, 99))
//│ def hash_lh_₁(_lh_hash_arg1¹, _lh_hash_arg2⁰) = _lh_hash_arg2⁰(_lh_hash_arg1¹)
//│ def head_lh_₁(ls¹⁴) = case ls¹⁴ of {
//│ 	LH_C h³⁵ t³⁹ => h³⁵
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls³) = case ls³ of {
//│ 	LH_C h⁴ t⁴ => h⁴
//│ 	| LH_N  => error⁰}
//│ def hinsert_lh_₁(_lh_hinsert_arg1⁰, _lh_hinsert_arg2⁰) = case _lh_hinsert_arg2⁰ of {
//│ 	H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => 
//│ 		let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ 		in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ 		in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > keys_lh_₃(0, 99))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]
//│ 	| _  => error⁰}
//│ def histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_arg2⁰) = case _lh_histins_arg2⁰ of {
//│ 	LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]
//│ 	| LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {
//│ 		LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def histo_lh_₁(_lh_histo_arg1⁰) = _lh_histo_arg1⁰(histins_lh_₁, [LH_N])
//│ def keys_lh_₁(_lh_keys_arg1²) = 
//│ 	let t³¹ = 	
//│ 		let t³² = 	
//│ 			let t³³ = 	
//│ 				let t³⁴ = (fun n² -> (fun f²⁷ -> [LH_N]))
//│ 				in let h²⁷ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun n³ -> 
//│ 					let t³⁵ = if ((n³ - 1) > 0) then t³⁴((n³ - 1)) else (fun f²⁸ -> [LH_N])
//│ 					in let h²⁸ = h²⁷
//│ 					in (fun f²⁹ -> [LH_C f²⁹(h²⁸) t³⁵(f²⁹)]))
//│ 			in let h²⁹ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun n⁴ -> 
//│ 				let t³⁶ = if ((n⁴ - 1) > 0) then t³³((n⁴ - 1)) else (fun f³⁰ -> [LH_N])
//│ 				in let h³⁰ = h²⁹
//│ 				in (fun f³¹ -> [LH_C f³¹(h³⁰) t³⁶(f³¹)]))
//│ 		in let h³¹ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun n⁵ -> 
//│ 			let t³⁷ = if ((n⁵ - 1) > 0) then t³²((n⁵ - 1)) else (fun f³² -> [LH_N])
//│ 			in let h³² = h³¹
//│ 			in (fun f³³ -> [LH_C f³³(h³²) t³⁷(f³³)]))
//│ 	in let h³³ = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun n⁶ -> 
//│ 		let t³⁸ = if ((n⁶ - 1) > 0) then t³¹((n⁶ - 1)) else (fun f³⁴ -> [LH_N])
//│ 		in let h³⁴ = h³³
//│ 		in (fun f³⁵ -> [LH_C f³⁵(h³⁴) t³⁸(f³⁵)]))
//│ def keys_lh_₂(_lh_keys_arg1³) = 
//│ 	let t⁴⁰ = 	
//│ 		let t⁴¹ = 	
//│ 			let t⁴² = 	
//│ 				let t⁴³ = (fun ys¹⁰ -> ys¹⁰)
//│ 				in let h³⁶ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun ys¹¹ -> 
//│ 					let t⁴⁴ = t⁴³(ys¹¹)
//│ 					in let h³⁷ = h³⁶
//│ 					in (fun f³⁷ -> [LH_C f³⁷(h³⁷) t⁴⁴(f³⁷)]))
//│ 			in let h³⁸ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun ys¹² -> 
//│ 				let t⁴⁵ = t⁴²(ys¹²)
//│ 				in let h³⁹ = h³⁸
//│ 				in (fun f³⁸ -> [LH_C f³⁸(h³⁹) t⁴⁵(f³⁸)]))
//│ 		in let h⁴⁰ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun ys¹³ -> 
//│ 			let t⁴⁶ = t⁴¹(ys¹³)
//│ 			in let h⁴¹ = h⁴⁰
//│ 			in (fun f³⁹ -> [LH_C f³⁹(h⁴¹) t⁴⁶(f³⁹)]))
//│ 	in let h⁴² = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun ys¹⁴ -> 
//│ 		let t⁴⁷ = t⁴⁰(ys¹⁴)
//│ 		in let h⁴³ = h⁴²
//│ 		in (fun f⁴⁰ -> [LH_C f⁴⁰(h⁴³) t⁴⁷(f⁴⁰)]))
//│ def keys_lh_₃(_lh_keys_arg1⁰) = 
//│ 	let t⁶ = 	
//│ 		let t⁷ = 	
//│ 			let t⁸ = 	
//│ 				let t⁹ = (fun _lh_dummy⁰ -> 0)
//│ 				in (fun _lh_dummy¹ -> (1 + t⁹(99)))
//│ 			in (fun _lh_dummy² -> (1 + t⁸(99)))
//│ 		in (fun _lh_dummy³ -> (1 + t⁷(99)))
//│ 	in (fun _lh_dummy⁴ -> (1 + t⁶(99)))
//│ def keys_lh_₄(_lh_keys_arg1¹) = 
//│ 	let t¹² = 	
//│ 		let t¹³ = 	
//│ 			let t¹⁴ = 	
//│ 				let t¹⁵ = (fun f¹¹ -> (fun f¹² -> (fun _lh_dummy⁵ -> (fun f¹³ -> (fun i² -> i²)))))
//│ 				in let h⁸ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun f¹⁴ -> 
//│ 					let t¹⁶ = t¹⁵(f¹⁴)
//│ 					in let h⁹ = f¹⁴(h⁸)
//│ 					in (fun f¹⁵ -> 
//│ 						let t¹⁷ = t¹⁶(f¹⁵)
//│ 						in let h¹⁰ = f¹⁵(h⁹)
//│ 						in (fun _lh_dummy⁶ -> h¹⁰(t¹⁷(99)))))
//│ 			in let h¹¹ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun f¹⁶ -> 
//│ 				let t¹⁸ = t¹⁴(f¹⁶)
//│ 				in let h¹² = f¹⁶(h¹¹)
//│ 				in (fun f¹⁷ -> 
//│ 					let t¹⁹ = t¹⁸(f¹⁷)
//│ 					in let h¹³ = f¹⁷(h¹²)
//│ 					in (fun _lh_dummy⁷ -> h¹³(t¹⁹(99)))))
//│ 		in let h¹⁴ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun f¹⁸ -> 
//│ 			let t²⁰ = t¹³(f¹⁸)
//│ 			in let h¹⁵ = f¹⁸(h¹⁴)
//│ 			in (fun f¹⁹ -> 
//│ 				let t²¹ = t²⁰(f¹⁹)
//│ 				in let h¹⁶ = f¹⁹(h¹⁵)
//│ 				in (fun _lh_dummy⁸ -> h¹⁶(t²¹(99)))))
//│ 	in let h¹⁷ = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun f²⁰ -> 
//│ 		let t²² = t¹²(f²⁰)
//│ 		in let h¹⁸ = f²⁰(h¹⁷)
//│ 		in (fun f²¹ -> 
//│ 			let t²³ = t²²(f²¹)
//│ 			in let h¹⁹ = f²¹(h¹⁸)
//│ 			in (fun _lh_dummy⁹ -> h¹⁹(t²³(99)))))
//│ def last_lh_₁(_lh_last_arg1¹) = case _lh_last_arg1¹ of {
//│ 	LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => 
//│ 		let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {
//│ 			LH_N  => _lh_go_arg1¹
//│ 			| LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹)
//│ 			| _  => error⁰}))
//│ 		in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def last_lh_₂(_lh_last_arg1⁰) = case _lh_last_arg1⁰ of {
//│ 	LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => 
//│ 		let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {
//│ 			LH_N  => _lh_go_arg1⁰
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls¹²) = case ls¹² of {
//│ 	LH_C h²² t²⁶ => (1 + length_lh_₁(t²⁶))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹) = case ls¹ of {
//│ 	LH_C h⁰ t⁰ => (1 + length_lh_₂(t⁰))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls⁰) = ls⁰(99)
//│ def length_lh_₄(ls¹¹) = case ls¹¹ of {
//│ 	LH_C h²⁰ t²⁴ => (1 + length_lh_₄(t²⁴))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f¹⁰, ls¹⁰) = ls¹⁰(f¹⁰)
//│ def map_lh_₂(f⁹, ls⁹) = ls⁹(f⁹)
//│ def map_lh_₃(f²⁴, ls¹³) = ls¹³(f²⁴)
//│ def map_lz_lh_₁(f⁰, ls²) = lazy⁰(case force⁰(ls²) of {
//│ 	LH_C h¹ t¹ => 
//│ 		let _lh_first_LH_C_1⁰ = map_lz_lh_₁(f⁰, t¹)
//│ 		in let _lh_first_LH_C_0⁰ = f⁰(h¹)
//│ 		in (fun _lh_first_arg1¹ -> 
//│ 			let _lh_matchIdent² = _lh_first_LH_C_0⁰
//│ 			in case _lh_matchIdent² of {
//│ 				YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]
//│ 				| NotEver _lh_first_NotEver_0⁰ => 
//│ 					let _lh_matchIdent³ = force⁰(_lh_first_LH_C_1⁰)
//│ 					in _lh_matchIdent³((_lh_first_arg1¹ + _lh_first_NotEver_0⁰))
//│ 				| _  => error⁰})
//│ 	| LH_N  => (fun _lh_first_arg1² -> [NotEver _lh_first_arg1²])})
//│ def map_lz_lh_₂(f³⁶, ls¹⁵) = lazy⁰(force⁰(ls¹⁵, f³⁶))
//│ def map_lz_lh_₃(f⁴, ls⁵) = lazy⁰(force⁰(ls⁵, f⁴))
//│ def map_lz_lh_₄(f¹, ls⁴) = lazy⁰(force⁰(ls⁴, f¹))
//│ def mappend_lh_₁(xs¹, ys²) = xs¹(ys²)
//│ def mappend_lh_₂(xs², ys⁴) = xs²(ys⁴)
//│ def mappend_lh_₃(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₃(t², ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def mappend_lh_₄(xs⁴, ys⁶) = case xs⁴ of {
//│ 	LH_C h⁷ t¹¹ => [LH_C h⁷ mappend_lh_₄(t¹¹, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₅(xs³, ys⁵) = xs³(ys⁵)
//│ def max_lh_₁(_lh_max_arg1⁰, _lh_max_arg2⁰) = if (_lh_max_arg1⁰ > _lh_max_arg2⁰) then _lh_max_arg1⁰ else _lh_max_arg2⁰
//│ def maxm_lh_₁(_lh_maxm_arg1⁰, _lh_maxm_arg2⁰) = case _lh_maxm_arg1⁰ of {
//│ 	Nothing  => _lh_maxm_arg2⁰
//│ 	| Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰)
//│ 	| _  => error⁰}
//│ def member_lh_₁(_lh_member_arg1¹, _lh_member_arg2¹) = case _lh_member_arg2¹ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₁(_lh_member_arg1¹, _lh_member_LH_C_1¹))
//│ 	| _  => error⁰}
//│ def member_lh_₂(_lh_member_arg1⁰, _lh_member_arg2⁰) = case _lh_member_arg2⁰ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₂(_lh_member_arg1⁰, _lh_member_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def member_lh_₃(_lh_member_arg1², _lh_member_arg2²) = case _lh_member_arg2² of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₃(_lh_member_arg1², _lh_member_LH_C_1²))
//│ 	| _  => error⁰}
//│ def min_lh_₁(_lh_min_arg1⁰, _lh_min_arg2⁰) = if (_lh_min_arg1⁰ < _lh_min_arg2⁰) then _lh_min_arg1⁰ else _lh_min_arg2⁰
//│ def minm_lh_₁(_lh_minm_arg1⁰, _lh_minm_arg2⁰) = case _lh_minm_arg1⁰ of {
//│ 	Nothing  => _lh_minm_arg2⁰
//│ 	| Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰)
//│ 	| _  => error⁰}
//│ def partition'_lh_₁(_lh_partition'_arg1⁰) = foldr_lh_₁(select_lh_₁(_lh_partition'_arg1⁰), [LH_P2 (fun ys³ -> ys³) [LH_N]])
//│ def prog_lh_₁(_lh_prog_arg1⁰) = cichelli_lh_₁(_lh_prog_arg1⁰)
//│ def select_lh_₁(_lh_select_arg1⁰, _lh_select_arg2⁰, _lh_select_arg3⁰) = case _lh_select_arg3⁰ of {
//│ 	LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 
//│ 		let t³ = _lh_select_LH_P2_0⁰
//│ 		in let h³ = _lh_select_arg2⁰
//│ 		in (fun ys¹ -> 
//│ 			let _lh_findhash'_LH_C_1⁰ = t³(ys¹)
//│ 			in let _lh_findhash'_LH_C_0⁰ = h³
//│ 			in (fun _lh_findhash'_arg2⁰ -> (fun _lh_findhash'_arg1⁰ -> case _lh_findhash'_LH_C_0⁰ of {
//│ 				K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => 
//│ 					let try⁰ = (fun newAssocs⁰ -> 
//│ 						let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ 						in let _lh_matchIdent⁵ = hinsert_lh_₁(
//│ 							let _lh_hash_K_3⁰ = _lh_findhash'_K_3⁰
//│ 							in let _lh_hash_K_2⁰ = _lh_findhash'_K_2⁰
//│ 							in let _lh_hash_K_1⁰ = _lh_findhash'_K_1⁰
//│ 							in (fun _lh_hash_arg1⁰ -> ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)))(newCharAssocs⁰), _lh_findhash'_arg1⁰)
//│ 						in case _lh_matchIdent⁵ of {
//│ 							Nothing  => [NotEver 1]
//│ 							| Just _lh_findhash'_Just_0⁰ => _lh_findhash'_LH_C_1⁰(newCharAssocs⁰, _lh_findhash'_Just_0⁰)
//│ 							| _  => error⁰})
//│ 					in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ 					in let _lh_matchIdent⁶ = 	
//│ 						let _lh_findhash'_LH_P2_1⁰ = assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)
//│ 						in let _lh_findhash'_LH_P2_0⁰ = assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰)
//│ 						in (fun _lh_findhash'_K_1¹ -> (fun _lh_findhash'_K_2¹ -> (fun maxval¹ -> (fun try¹ -> _lh_findhash'_LH_P2_0⁰(_lh_findhash'_K_1¹, _lh_findhash'_K_2¹, _lh_findhash'_LH_P2_1⁰, maxval¹, try¹)))))
//│ 					in _lh_matchIdent⁶(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰, maxval⁰, try⁰)
//│ 				| _  => error⁰}))) _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]
//│ 	| _  => error⁰}
//│ def subset_lh_₁(_lh_subset_arg1⁰, _lh_subset_arg2⁰) = _lh_subset_arg1⁰((fun x⁰ -> member_lh_₁(x⁰, _lh_subset_arg2⁰)))
//│ def take_lh_₁(n⁰, ls⁸) = if (n⁰ > 0) then ls⁸(n⁰) else (fun f⁸ -> [LH_N])
//│ def testCichelli_nofib_lh_₁(_lh_testCichelli_nofib_arg1⁰) = prog_lh_₁(_lh_testCichelli_nofib_arg1⁰)
//│ def union_lh_₁(_lh_union_arg1⁰, _lh_union_arg2⁰) = mappend_lh_₄(_lh_union_arg1⁰, 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> _lh_listcomp_fun_para⁰(_lh_listcomp_fun⁰, _lh_union_arg1⁰))
//│ 	in _lh_listcomp_fun⁰(_lh_union_arg2⁰))
//│ <<<<<<< after inlining <<<<<<<
//│ 
//│ >>>>>>> after floating out >>>>>>>
//│ testCichelli_nofib_lh_₁(primId⁰(6))
//│ def all_lh_₁(_lh_all_arg1³, _lh_all_arg2⁰) = _lh_all_arg2⁰(_lh_all_arg1³)
//│ def assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_arg2¹) = case _lh_assoc_arg2¹ of {
//│ 	LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_arg2⁰) = case _lh_assoc_arg2⁰ of {
//│ 	LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₁(_lh_assocm_arg1⁰, _lh_assocm_arg2⁰) = case _lh_assocm_arg2⁰ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₁(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₂(_lh_assocm_arg1¹, _lh_assocm_arg2¹) = case _lh_assocm_arg2¹ of {
//│ 	LH_N  => (fun _lh_findhash'_K_1² -> (fun _lh_findhash'_K_2² -> (fun _lh_findhash'_LH_P2_1¹ -> (fun maxval⁴ -> (fun try² -> case _lh_findhash'_LH_P2_1¹ of {
//│ 		Nothing  => if polyEq⁰(_lh_findhash'_K_1², _lh_findhash'_K_2²) then firstSuccess_lh_₄((fun m⁰ -> try²([LH_C [LH_P2 _lh_findhash'_K_1² m⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval⁴)) else firstSuccess_lh_₁((fun mn⁰ -> 
//│ 			let _lh_matchIdent¹⁵ = mn⁰
//│ 			in case _lh_matchIdent¹⁵ of {
//│ 				LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1² => try²([LH_C [LH_P2 _lh_findhash'_K_1² _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2² _lh_findhash'_LH_P2_1²] [LH_N]]])
//│ 				| _  => error⁰}), 
//│ 			let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para² -> force⁰(_lh_listcomp_fun_para², _lh_listcomp_fun¹¹, maxval⁴))
//│ 			in _lh_listcomp_fun¹¹(enumFromTo_lz_lh_₃(0, maxval⁴)))
//│ 		| Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₂((fun m¹ -> try²([LH_C [LH_P2 _lh_findhash'_K_1² m¹] [LH_N]])), enumFromTo_lz_lh_₅(0, maxval⁴))
//│ 		| _  => error⁰})))))
//│ 	| LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then (fun _lh_findhash'_K_1³ -> (fun _lh_findhash'_K_2³ -> (fun _lh_findhash'_LH_P2_1³ -> (fun maxval⁵ -> (fun try³ -> case _lh_findhash'_LH_P2_1³ of {
//│ 			Nothing  => firstSuccess_lh_₃((fun n¹ -> try³([LH_C [LH_P2 _lh_findhash'_K_2³ n¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval⁵))
//│ 			| Just _lh_findhash'_Just_0² => try³([LH_N])
//│ 			| _  => error⁰}))))) else assocm_lh_₂(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def attribkeys_lh_₁(_lh_attribkeys_arg1⁰) = _lh_attribkeys_arg1⁰((fun k⁰ -> [K k⁰ head_lh_₁(k⁰) last_lh_₁(k⁰) length_lh_₁(k⁰)]))
//│ def attribkeys_lh_₂(_lh_attribkeys_arg1¹) = _lh_attribkeys_arg1¹((fun k¹ -> 
//│ 	let _lh_ends_K_2² = last_lh_₂(k¹)
//│ 	in let _lh_ends_K_1² = head_lh_₂(k¹)
//│ 	in let t²⁷ = 	
//│ 		let t²⁸ = (fun ys⁷ -> ys⁷)
//│ 		in let h²³ = _lh_ends_K_2²
//│ 		in (fun ys⁸ -> 
//│ 			let t²⁹ = t²⁸(ys⁸)
//│ 			in let h²⁴ = h²³
//│ 			in (fun f²⁵ -> (fun i³ -> f²⁵(h²⁴, t²⁹(f²⁵, i³)))))
//│ 	in let h²⁵ = _lh_ends_K_1²
//│ 	in (fun ys⁹ -> 
//│ 		let t³⁰ = t²⁷(ys⁹)
//│ 		in let h²⁶ = h²⁵
//│ 		in (fun f²⁶ -> (fun i⁴ -> f²⁶(h²⁶, t³⁰(f²⁶, i⁴)))))))
//│ def blocked'_lh_₁(_lh_blocked'_arg1⁰, _lh_blocked'_arg2⁰) = case _lh_blocked'_arg2⁰ of {
//│ 	LH_N  => (fun _lh_findhash'_arg2² -> (fun _lh_findhash'_arg1² -> [YesIts 1 _lh_findhash'_arg2²]))
//│ 	| LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => 
//│ 		let ds'⁰ = mappend_lh_₄(_lh_blocked'_arg1⁰, 
//│ 			let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para³ -> _lh_listcomp_fun_para³(_lh_listcomp_fun¹², _lh_blocked'_arg1⁰))
//│ 			in _lh_listcomp_fun¹²(ends_lh_₁(_lh_blocked'_LH_C_0⁰)))
//│ 		in let _lh_matchIdent¹⁹ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₂(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ 		in case _lh_matchIdent¹⁹ of {
//│ 			LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => 
//│ 				let t⁴⁹ = _lh_blocked'_LH_P2_0⁰
//│ 				in let h⁴⁵ = _lh_blocked'_LH_C_0⁰
//│ 				in (fun ys¹⁵ -> 
//│ 					let _lh_findhash'_LH_C_1¹ = t⁴⁹(ys¹⁵)
//│ 					in let _lh_findhash'_LH_C_0¹ = h⁴⁵
//│ 					in (fun _lh_findhash'_arg2³ -> (fun _lh_findhash'_arg1³ -> case _lh_findhash'_LH_C_0¹ of {
//│ 						K _lh_findhash'_K_0¹ _lh_findhash'_K_1⁴ _lh_findhash'_K_2⁴ _lh_findhash'_K_3¹ => 
//│ 							let try⁴ = (fun newAssocs¹ -> 
//│ 								let newCharAssocs¹ = mappend_lh_₃(newAssocs¹, _lh_findhash'_arg2³)
//│ 								in let _lh_matchIdent²⁰ = hinsert_lh_₁(
//│ 									let _lh_hash_K_3¹ = _lh_findhash'_K_3¹
//│ 									in let _lh_hash_K_2¹ = _lh_findhash'_K_2⁴
//│ 									in let _lh_hash_K_1¹ = _lh_findhash'_K_1⁴
//│ 									in (fun _lh_hash_arg1² -> ((_lh_hash_K_3¹ + assoc_lh_₂(_lh_hash_K_1¹, _lh_hash_arg1²)) + assoc_lh_₁(_lh_hash_K_2¹, _lh_hash_arg1²)))(newCharAssocs¹), _lh_findhash'_arg1³)
//│ 								in case _lh_matchIdent²⁰ of {
//│ 									Nothing  => [NotEver 1]
//│ 									| Just _lh_findhash'_Just_0³ => _lh_findhash'_LH_C_1¹(newCharAssocs¹, _lh_findhash'_Just_0³)
//│ 									| _  => error⁰})
//│ 							in let maxval⁶ = length_lh_₂(freqtab_lh_₁(0))
//│ 							in let _lh_matchIdent²¹ = 	
//│ 								let _lh_findhash'_LH_P2_1⁴ = assocm_lh_₁(_lh_findhash'_K_2⁴, _lh_findhash'_arg2³)
//│ 								in let _lh_findhash'_LH_P2_0² = assocm_lh_₂(_lh_findhash'_K_1⁴, _lh_findhash'_arg2³)
//│ 								in (fun _lh_findhash'_K_1⁵ -> (fun _lh_findhash'_K_2⁵ -> (fun maxval⁷ -> (fun try⁵ -> _lh_findhash'_LH_P2_0²(_lh_findhash'_K_1⁵, _lh_findhash'_K_2⁵, _lh_findhash'_LH_P2_1⁴, maxval⁷, try⁵)))))
//│ 							in _lh_matchIdent²¹(_lh_findhash'_K_1⁴, _lh_findhash'_K_2⁴, maxval⁶, try⁴)
//│ 						| _  => error⁰})))(blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def blocked_lh_₁(_lh_blocked_arg1⁰) = blocked'_lh_₁([LH_N], _lh_blocked_arg1⁰)
//│ def cichelli_lh_₁(_lh_cichelli_arg1⁰) = 
//│ 	let attribkeys'⁰ = attribkeys_lh_₁(keys_lh_₂(0, if ((_lh_cichelli_arg1⁰ % 2) > 0) then keys_lh_₁(0, (_lh_cichelli_arg1⁰ % 2)) else (fun f⁷ -> [LH_N])))
//│ 	in let hashkeys⁰ = (fun _lh_funcomp_x⁰ -> blocked_lh_₁(freqsorted_lh_₁(_lh_funcomp_x⁰)))(attribkeys'⁰)
//│ 	in findhash_lh_₁(hashkeys⁰)
//│ def concat_lh_₁(lss⁰) = lss⁰(99)
//│ def ends_lh_₁(_lh_ends_arg1⁰) = case _lh_ends_arg1⁰ of {
//│ 	K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => 
//│ 		let _lh_listcomp_fun_ls_t³ = 	
//│ 			let _lh_listcomp_fun_ls_t⁴ = (fun _lh_listcomp_fun⁵ -> (fun _lh_union_arg1¹ -> [LH_N]))
//│ 			in let _lh_listcomp_fun_ls_h³ = _lh_ends_K_2⁰
//│ 			in (fun _lh_listcomp_fun⁶ -> (fun _lh_union_arg1² -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h³, _lh_union_arg1²)) then [LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁴)))
//│ 		in let _lh_listcomp_fun_ls_h⁴ = _lh_ends_K_1⁰
//│ 		in (fun _lh_listcomp_fun⁷ -> (fun _lh_union_arg1³ -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁴, _lh_union_arg1³)) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t³)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t³)))
//│ 	| _  => error⁰}
//│ def ends_lh_₂(_lh_ends_arg1²) = case _lh_ends_arg1² of {
//│ 	K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => 
//│ 		let _lh_all_LH_C_1⁰ = 	
//│ 			let _lh_all_LH_C_1¹ = (fun _lh_all_arg1⁰ -> [True])
//│ 			in let _lh_all_LH_C_0⁰ = _lh_ends_K_2¹
//│ 			in (fun _lh_all_arg1¹ -> if _lh_all_arg1¹(_lh_all_LH_C_0⁰) then _lh_all_LH_C_1¹(_lh_all_arg1¹) else [False])
//│ 		in let _lh_all_LH_C_0¹ = _lh_ends_K_1¹
//│ 		in (fun _lh_all_arg1² -> if _lh_all_arg1²(_lh_all_LH_C_0¹) then _lh_all_LH_C_1⁰(_lh_all_arg1²) else [False])
//│ 	| _  => error⁰}
//│ def ends_lh_₃(_lh_ends_arg1¹) = _lh_ends_arg1¹
//│ def enumFromTo_lz_lh_₁(_lh_enumFromTo_lz_arg1⁰, _lh_enumFromTo_lz_arg2⁰) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁰ <= _lh_enumFromTo_lz_arg2⁰) then 
//│ 	let t⁵ = enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)
//│ 	in let h⁵ = _lh_enumFromTo_lz_arg1⁰
//│ 	in (fun f² -> 
//│ 		let _lh_first_LH_C_1¹ = lazy⁰(force⁰(t⁵, f²))
//│ 		in let _lh_first_LH_C_0¹ = f²(h⁵)
//│ 		in (fun _lh_first_arg1⁴ -> 
//│ 			let _lh_matchIdent⁷ = _lh_first_LH_C_0¹
//│ 			in case _lh_matchIdent⁷ of {
//│ 				YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1⁴ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]
//│ 				| NotEver _lh_first_NotEver_0¹ => 
//│ 					let _lh_matchIdent⁸ = force⁰(_lh_first_LH_C_1¹)
//│ 					in _lh_matchIdent⁸((_lh_first_arg1⁴ + _lh_first_NotEver_0¹))
//│ 				| _  => error⁰})) else (fun f³ -> (fun _lh_first_arg1⁵ -> [NotEver _lh_first_arg1⁵])))
//│ def enumFromTo_lz_lh_₂(_lh_enumFromTo_lz_arg1⁴, _lh_enumFromTo_lz_arg2⁴) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁴ <= _lh_enumFromTo_lz_arg2⁴) then 
//│ 	let t⁴⁸ = enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)
//│ 	in let h⁴⁴ = _lh_enumFromTo_lz_arg1⁴
//│ 	in (fun f⁴¹ -> 
//│ 		let _lh_first_LH_C_1³ = lazy⁰(force⁰(t⁴⁸, f⁴¹))
//│ 		in let _lh_first_LH_C_0³ = f⁴¹(h⁴⁴)
//│ 		in (fun _lh_first_arg1¹⁰ -> 
//│ 			let _lh_matchIdent¹⁷ = _lh_first_LH_C_0³
//│ 			in case _lh_matchIdent¹⁷ of {
//│ 				YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1¹⁰ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]
//│ 				| NotEver _lh_first_NotEver_0³ => 
//│ 					let _lh_matchIdent¹⁸ = force⁰(_lh_first_LH_C_1³)
//│ 					in _lh_matchIdent¹⁸((_lh_first_arg1¹⁰ + _lh_first_NotEver_0³))
//│ 				| _  => error⁰})) else (fun f⁴² -> (fun _lh_first_arg1¹¹ -> [NotEver _lh_first_arg1¹¹])))
//│ def enumFromTo_lz_lh_₃(_lh_enumFromTo_lz_arg1³, _lh_enumFromTo_lz_arg2³) = lazy⁰(if (_lh_enumFromTo_lz_arg1³ <= _lh_enumFromTo_lz_arg2³) then 
//│ 	let _lh_listcomp_fun_ls_t⁵ = enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)
//│ 	in let _lh_listcomp_fun_ls_h⁵ = _lh_enumFromTo_lz_arg1³
//│ 	in (fun _lh_listcomp_fun⁸ -> (fun maxval² -> 
//│ 		let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para¹ -> force⁰(_lh_listcomp_fun_para¹, _lh_listcomp_fun_ls_h⁵, _lh_listcomp_fun⁹, _lh_listcomp_fun_ls_t⁵, _lh_listcomp_fun⁸))
//│ 		in _lh_listcomp_fun⁹(enumFromTo_lz_lh_₄(0, maxval²)))) else (fun _lh_listcomp_fun¹⁰ -> (fun maxval³ -> lazy⁰([LH_N]))))
//│ def enumFromTo_lz_lh_₄(_lh_enumFromTo_lz_arg1¹, _lh_enumFromTo_lz_arg2¹) = lazy⁰(if (_lh_enumFromTo_lz_arg1¹ <= _lh_enumFromTo_lz_arg2¹) then 
//│ 	let _lh_listcomp_fun_ls_t⁰ = enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)
//│ 	in let _lh_listcomp_fun_ls_h⁰ = _lh_enumFromTo_lz_arg1¹
//│ 	in (fun _lh_listcomp_fun_ls_h¹ -> (fun _lh_listcomp_fun¹ -> (fun _lh_listcomp_fun_ls_t¹ -> (fun _lh_listcomp_fun² -> lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h⁰] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t⁰)]))))) else (fun _lh_listcomp_fun_ls_h² -> (fun _lh_listcomp_fun³ -> (fun _lh_listcomp_fun_ls_t² -> (fun _lh_listcomp_fun⁴ -> _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t²))))))
//│ def enumFromTo_lz_lh_₅(_lh_enumFromTo_lz_arg1², _lh_enumFromTo_lz_arg2²) = lazy⁰(if (_lh_enumFromTo_lz_arg1² <= _lh_enumFromTo_lz_arg2²) then 
//│ 	let t²⁵ = enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)
//│ 	in let h²¹ = _lh_enumFromTo_lz_arg1²
//│ 	in (fun f²² -> 
//│ 		let _lh_first_LH_C_1² = lazy⁰(force⁰(t²⁵, f²²))
//│ 		in let _lh_first_LH_C_0² = f²²(h²¹)
//│ 		in (fun _lh_first_arg1⁸ -> 
//│ 			let _lh_matchIdent¹³ = _lh_first_LH_C_0²
//│ 			in case _lh_matchIdent¹³ of {
//│ 				YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1⁸ + _lh_first_YesIts_0²) _lh_first_YesIts_1²]
//│ 				| NotEver _lh_first_NotEver_0² => 
//│ 					let _lh_matchIdent¹⁴ = force⁰(_lh_first_LH_C_1²)
//│ 					in _lh_matchIdent¹⁴((_lh_first_arg1⁸ + _lh_first_NotEver_0²))
//│ 				| _  => error⁰})) else (fun f²³ -> (fun _lh_first_arg1⁹ -> [NotEver _lh_first_arg1⁹])))
//│ def findhash'_lh_₁(_lh_findhash'_arg1¹, _lh_findhash'_arg2¹, _lh_findhash'_arg3⁰) = _lh_findhash'_arg3⁰(_lh_findhash'_arg2¹, _lh_findhash'_arg1¹)
//│ def findhash_lh_₁(_lh_findhash_arg1⁰) = _lh_findhash_arg1⁰([LH_N], [H [Nothing] [Nothing] [LH_N]])
//│ def firstSuccess_lh_₁(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰) = 
//│ 	let _lh_matchIdent¹ = force⁰(map_lz_lh_₁(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰))
//│ 	in _lh_matchIdent¹(0)
//│ def firstSuccess_lh_₂(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³) = 
//│ 	let _lh_matchIdent¹⁶ = force⁰(lazy⁰(force⁰(_lh_firstSuccess_arg2³, _lh_firstSuccess_arg1³)))
//│ 	in _lh_matchIdent¹⁶(0)
//│ def firstSuccess_lh_₃(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹) = 
//│ 	let _lh_matchIdent⁹ = force⁰(lazy⁰(force⁰(_lh_firstSuccess_arg2¹, _lh_firstSuccess_arg1¹)))
//│ 	in _lh_matchIdent⁹(0)
//│ def firstSuccess_lh_₄(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²) = 
//│ 	let _lh_matchIdent¹² = force⁰(lazy⁰(force⁰(_lh_firstSuccess_arg2², _lh_firstSuccess_arg1²)))
//│ 	in _lh_matchIdent¹²(0)
//│ def first_lh_₁(_lh_first_arg1³, _lh_first_arg2¹) = 
//│ 	let _lh_matchIdent⁴ = force⁰(_lh_first_arg2¹)
//│ 	in _lh_matchIdent⁴(_lh_first_arg1³)
//│ def first_lh_₂(_lh_first_arg1⁰, _lh_first_arg2⁰) = 
//│ 	let _lh_matchIdent⁰ = force⁰(_lh_first_arg2⁰)
//│ 	in _lh_matchIdent⁰(_lh_first_arg1⁰)
//│ def first_lh_₃(_lh_first_arg1⁶, _lh_first_arg2²) = 
//│ 	let _lh_matchIdent¹⁰ = force⁰(_lh_first_arg2²)
//│ 	in _lh_matchIdent¹⁰(_lh_first_arg1⁶)
//│ def first_lh_₄(_lh_first_arg1⁷, _lh_first_arg2³) = 
//│ 	let _lh_matchIdent¹¹ = force⁰(_lh_first_arg2³)
//│ 	in _lh_matchIdent¹¹(_lh_first_arg1⁷)
//│ def foldr_lh_₁(f⁵, i⁰, ls⁶) = case ls⁶ of {
//│ 	LH_C h⁶ t¹⁰ => f⁵(h⁶, foldr_lh_₁(f⁵, i⁰, t¹⁰))
//│ 	| LH_N  => i⁰}
//│ def foldr_lh_₂(f⁶, i¹, ls⁷) = ls⁷(f⁶, i¹)
//│ def freqsorted_lh_₁(_lh_freqsorted_arg1⁰) = _lh_freqsorted_arg1⁰
//│ def freqtab_lh_₁(_lh_freqtab_arg1⁰) = histo_lh_₁(attribkeys_lh_₂(keys_lh_₄(0), ends_lh_₃, 99))
//│ def hash_lh_₁(_lh_hash_arg1¹, _lh_hash_arg2⁰) = _lh_hash_arg2⁰(_lh_hash_arg1¹)
//│ def head_lh_₁(ls¹⁴) = case ls¹⁴ of {
//│ 	LH_C h³⁵ t³⁹ => h³⁵
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls³) = case ls³ of {
//│ 	LH_C h⁴ t⁴ => h⁴
//│ 	| LH_N  => error⁰}
//│ def hinsert_lh_₁(_lh_hinsert_arg1⁰, _lh_hinsert_arg2⁰) = case _lh_hinsert_arg2⁰ of {
//│ 	H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => 
//│ 		let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ 		in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ 		in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > keys_lh_₃(0, 99))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]
//│ 	| _  => error⁰}
//│ def histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_arg2⁰) = case _lh_histins_arg2⁰ of {
//│ 	LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]
//│ 	| LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {
//│ 		LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def histo_lh_₁(_lh_histo_arg1⁰) = _lh_histo_arg1⁰(histins_lh_₁, [LH_N])
//│ def keys_lh_₁(_lh_keys_arg1²) = 
//│ 	let t³¹ = 	
//│ 		let t³² = 	
//│ 			let t³³ = 	
//│ 				let t³⁴ = (fun n² -> (fun f²⁷ -> [LH_N]))
//│ 				in let h²⁷ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun n³ -> 
//│ 					let t³⁵ = if ((n³ - 1) > 0) then t³⁴((n³ - 1)) else (fun f²⁸ -> [LH_N])
//│ 					in let h²⁸ = h²⁷
//│ 					in (fun f²⁹ -> [LH_C f²⁹(h²⁸) t³⁵(f²⁹)]))
//│ 			in let h²⁹ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun n⁴ -> 
//│ 				let t³⁶ = if ((n⁴ - 1) > 0) then t³³((n⁴ - 1)) else (fun f³⁰ -> [LH_N])
//│ 				in let h³⁰ = h²⁹
//│ 				in (fun f³¹ -> [LH_C f³¹(h³⁰) t³⁶(f³¹)]))
//│ 		in let h³¹ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun n⁵ -> 
//│ 			let t³⁷ = if ((n⁵ - 1) > 0) then t³²((n⁵ - 1)) else (fun f³² -> [LH_N])
//│ 			in let h³² = h³¹
//│ 			in (fun f³³ -> [LH_C f³³(h³²) t³⁷(f³³)]))
//│ 	in let h³³ = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun n⁶ -> 
//│ 		let t³⁸ = if ((n⁶ - 1) > 0) then t³¹((n⁶ - 1)) else (fun f³⁴ -> [LH_N])
//│ 		in let h³⁴ = h³³
//│ 		in (fun f³⁵ -> [LH_C f³⁵(h³⁴) t³⁸(f³⁵)]))
//│ def keys_lh_₂(_lh_keys_arg1³) = 
//│ 	let t⁴⁰ = 	
//│ 		let t⁴¹ = 	
//│ 			let t⁴² = 	
//│ 				let t⁴³ = (fun ys¹⁰ -> ys¹⁰)
//│ 				in let h³⁶ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun ys¹¹ -> 
//│ 					let t⁴⁴ = t⁴³(ys¹¹)
//│ 					in let h³⁷ = h³⁶
//│ 					in (fun f³⁷ -> [LH_C f³⁷(h³⁷) t⁴⁴(f³⁷)]))
//│ 			in let h³⁸ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun ys¹² -> 
//│ 				let t⁴⁵ = t⁴²(ys¹²)
//│ 				in let h³⁹ = h³⁸
//│ 				in (fun f³⁸ -> [LH_C f³⁸(h³⁹) t⁴⁵(f³⁸)]))
//│ 		in let h⁴⁰ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun ys¹³ -> 
//│ 			let t⁴⁶ = t⁴¹(ys¹³)
//│ 			in let h⁴¹ = h⁴⁰
//│ 			in (fun f³⁹ -> [LH_C f³⁹(h⁴¹) t⁴⁶(f³⁹)]))
//│ 	in let h⁴² = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun ys¹⁴ -> 
//│ 		let t⁴⁷ = t⁴⁰(ys¹⁴)
//│ 		in let h⁴³ = h⁴²
//│ 		in (fun f⁴⁰ -> [LH_C f⁴⁰(h⁴³) t⁴⁷(f⁴⁰)]))
//│ def keys_lh_₃(_lh_keys_arg1⁰, _lh_dummy⁰) = 
//│ 	let t⁶ = 	
//│ 		let t⁷ = 	
//│ 			let t⁸ = 	
//│ 				let t⁹ = (fun _lh_dummy¹ -> 0)
//│ 				in (fun _lh_dummy² -> (1 + t⁹(99)))
//│ 			in (fun _lh_dummy³ -> (1 + t⁸(99)))
//│ 		in (fun _lh_dummy⁴ -> (1 + t⁷(99)))
//│ 	in (1 + t⁶(99))
//│ def keys_lh_₄(_lh_keys_arg1¹) = 
//│ 	let t¹² = 	
//│ 		let t¹³ = 	
//│ 			let t¹⁴ = 	
//│ 				let t¹⁵ = (fun f¹¹ -> (fun f¹² -> (fun _lh_dummy⁵ -> (fun f¹³ -> (fun i² -> i²)))))
//│ 				in let h⁸ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun f¹⁴ -> 
//│ 					let t¹⁶ = t¹⁵(f¹⁴)
//│ 					in let h⁹ = f¹⁴(h⁸)
//│ 					in (fun f¹⁵ -> 
//│ 						let t¹⁷ = t¹⁶(f¹⁵)
//│ 						in let h¹⁰ = f¹⁵(h⁹)
//│ 						in (fun _lh_dummy⁶ -> h¹⁰(t¹⁷(99)))))
//│ 			in let h¹¹ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun f¹⁶ -> 
//│ 				let t¹⁸ = t¹⁴(f¹⁶)
//│ 				in let h¹² = f¹⁶(h¹¹)
//│ 				in (fun f¹⁷ -> 
//│ 					let t¹⁹ = t¹⁸(f¹⁷)
//│ 					in let h¹³ = f¹⁷(h¹²)
//│ 					in (fun _lh_dummy⁷ -> h¹³(t¹⁹(99)))))
//│ 		in let h¹⁴ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun f¹⁸ -> 
//│ 			let t²⁰ = t¹³(f¹⁸)
//│ 			in let h¹⁵ = f¹⁸(h¹⁴)
//│ 			in (fun f¹⁹ -> 
//│ 				let t²¹ = t²⁰(f¹⁹)
//│ 				in let h¹⁶ = f¹⁹(h¹⁵)
//│ 				in (fun _lh_dummy⁸ -> h¹⁶(t²¹(99)))))
//│ 	in let h¹⁷ = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun f²⁰ -> 
//│ 		let t²² = t¹²(f²⁰)
//│ 		in let h¹⁸ = f²⁰(h¹⁷)
//│ 		in (fun f²¹ -> 
//│ 			let t²³ = t²²(f²¹)
//│ 			in let h¹⁹ = f²¹(h¹⁸)
//│ 			in (fun _lh_dummy⁹ -> h¹⁹(t²³(99)))))
//│ def last_lh_₁(_lh_last_arg1¹) = case _lh_last_arg1¹ of {
//│ 	LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => 
//│ 		let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {
//│ 			LH_N  => _lh_go_arg1¹
//│ 			| LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹)
//│ 			| _  => error⁰}))
//│ 		in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def last_lh_₂(_lh_last_arg1⁰) = case _lh_last_arg1⁰ of {
//│ 	LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => 
//│ 		let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {
//│ 			LH_N  => _lh_go_arg1⁰
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls¹²) = case ls¹² of {
//│ 	LH_C h²² t²⁶ => (1 + length_lh_₁(t²⁶))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹) = case ls¹ of {
//│ 	LH_C h⁰ t⁰ => (1 + length_lh_₂(t⁰))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls⁰) = ls⁰(99)
//│ def length_lh_₄(ls¹¹) = case ls¹¹ of {
//│ 	LH_C h²⁰ t²⁴ => (1 + length_lh_₄(t²⁴))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f¹⁰, ls¹⁰) = ls¹⁰(f¹⁰)
//│ def map_lh_₂(f⁹, ls⁹) = ls⁹(f⁹)
//│ def map_lh_₃(f²⁴, ls¹³) = ls¹³(f²⁴)
//│ def map_lz_lh_₁(f⁰, ls²) = lazy⁰(case force⁰(ls²) of {
//│ 	LH_C h¹ t¹ => 
//│ 		let _lh_first_LH_C_1⁰ = map_lz_lh_₁(f⁰, t¹)
//│ 		in let _lh_first_LH_C_0⁰ = f⁰(h¹)
//│ 		in (fun _lh_first_arg1¹ -> 
//│ 			let _lh_matchIdent² = _lh_first_LH_C_0⁰
//│ 			in case _lh_matchIdent² of {
//│ 				YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]
//│ 				| NotEver _lh_first_NotEver_0⁰ => 
//│ 					let _lh_matchIdent³ = force⁰(_lh_first_LH_C_1⁰)
//│ 					in _lh_matchIdent³((_lh_first_arg1¹ + _lh_first_NotEver_0⁰))
//│ 				| _  => error⁰})
//│ 	| LH_N  => (fun _lh_first_arg1² -> [NotEver _lh_first_arg1²])})
//│ def map_lz_lh_₂(f³⁶, ls¹⁵) = lazy⁰(force⁰(ls¹⁵, f³⁶))
//│ def map_lz_lh_₃(f⁴, ls⁵) = lazy⁰(force⁰(ls⁵, f⁴))
//│ def map_lz_lh_₄(f¹, ls⁴) = lazy⁰(force⁰(ls⁴, f¹))
//│ def mappend_lh_₁(xs¹, ys²) = xs¹(ys²)
//│ def mappend_lh_₂(xs², ys⁴) = xs²(ys⁴)
//│ def mappend_lh_₃(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₃(t², ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def mappend_lh_₄(xs⁴, ys⁶) = case xs⁴ of {
//│ 	LH_C h⁷ t¹¹ => [LH_C h⁷ mappend_lh_₄(t¹¹, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₅(xs³, ys⁵) = xs³(ys⁵)
//│ def max_lh_₁(_lh_max_arg1⁰, _lh_max_arg2⁰) = if (_lh_max_arg1⁰ > _lh_max_arg2⁰) then _lh_max_arg1⁰ else _lh_max_arg2⁰
//│ def maxm_lh_₁(_lh_maxm_arg1⁰, _lh_maxm_arg2⁰) = case _lh_maxm_arg1⁰ of {
//│ 	Nothing  => _lh_maxm_arg2⁰
//│ 	| Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰)
//│ 	| _  => error⁰}
//│ def member_lh_₁(_lh_member_arg1¹, _lh_member_arg2¹) = case _lh_member_arg2¹ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₁(_lh_member_arg1¹, _lh_member_LH_C_1¹))
//│ 	| _  => error⁰}
//│ def member_lh_₂(_lh_member_arg1⁰, _lh_member_arg2⁰) = case _lh_member_arg2⁰ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₂(_lh_member_arg1⁰, _lh_member_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def member_lh_₃(_lh_member_arg1², _lh_member_arg2²) = case _lh_member_arg2² of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₃(_lh_member_arg1², _lh_member_LH_C_1²))
//│ 	| _  => error⁰}
//│ def min_lh_₁(_lh_min_arg1⁰, _lh_min_arg2⁰) = if (_lh_min_arg1⁰ < _lh_min_arg2⁰) then _lh_min_arg1⁰ else _lh_min_arg2⁰
//│ def minm_lh_₁(_lh_minm_arg1⁰, _lh_minm_arg2⁰) = case _lh_minm_arg1⁰ of {
//│ 	Nothing  => _lh_minm_arg2⁰
//│ 	| Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰)
//│ 	| _  => error⁰}
//│ def partition'_lh_₁(_lh_partition'_arg1⁰) = foldr_lh_₁(select_lh_₁(_lh_partition'_arg1⁰), [LH_P2 (fun ys³ -> ys³) [LH_N]])
//│ def prog_lh_₁(_lh_prog_arg1⁰) = cichelli_lh_₁(_lh_prog_arg1⁰)
//│ def select_lh_₁(_lh_select_arg1⁰, _lh_select_arg2⁰, _lh_select_arg3⁰) = case _lh_select_arg3⁰ of {
//│ 	LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 
//│ 		let t³ = _lh_select_LH_P2_0⁰
//│ 		in let h³ = _lh_select_arg2⁰
//│ 		in (fun ys¹ -> 
//│ 			let _lh_findhash'_LH_C_1⁰ = t³(ys¹)
//│ 			in let _lh_findhash'_LH_C_0⁰ = h³
//│ 			in (fun _lh_findhash'_arg2⁰ -> (fun _lh_findhash'_arg1⁰ -> case _lh_findhash'_LH_C_0⁰ of {
//│ 				K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => 
//│ 					let try⁰ = (fun newAssocs⁰ -> 
//│ 						let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ 						in let _lh_matchIdent⁵ = hinsert_lh_₁(
//│ 							let _lh_hash_K_3⁰ = _lh_findhash'_K_3⁰
//│ 							in let _lh_hash_K_2⁰ = _lh_findhash'_K_2⁰
//│ 							in let _lh_hash_K_1⁰ = _lh_findhash'_K_1⁰
//│ 							in (fun _lh_hash_arg1⁰ -> ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)))(newCharAssocs⁰), _lh_findhash'_arg1⁰)
//│ 						in case _lh_matchIdent⁵ of {
//│ 							Nothing  => [NotEver 1]
//│ 							| Just _lh_findhash'_Just_0⁰ => _lh_findhash'_LH_C_1⁰(newCharAssocs⁰, _lh_findhash'_Just_0⁰)
//│ 							| _  => error⁰})
//│ 					in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ 					in let _lh_matchIdent⁶ = 	
//│ 						let _lh_findhash'_LH_P2_1⁰ = assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)
//│ 						in let _lh_findhash'_LH_P2_0⁰ = assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰)
//│ 						in (fun _lh_findhash'_K_1¹ -> (fun _lh_findhash'_K_2¹ -> (fun maxval¹ -> (fun try¹ -> _lh_findhash'_LH_P2_0⁰(_lh_findhash'_K_1¹, _lh_findhash'_K_2¹, _lh_findhash'_LH_P2_1⁰, maxval¹, try¹)))))
//│ 					in _lh_matchIdent⁶(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰, maxval⁰, try⁰)
//│ 				| _  => error⁰}))) _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]
//│ 	| _  => error⁰}
//│ def subset_lh_₁(_lh_subset_arg1⁰, _lh_subset_arg2⁰) = _lh_subset_arg1⁰((fun x⁰ -> member_lh_₁(x⁰, _lh_subset_arg2⁰)))
//│ def take_lh_₁(n⁰, ls⁸) = if (n⁰ > 0) then ls⁸(n⁰) else (fun f⁸ -> [LH_N])
//│ def testCichelli_nofib_lh_₁(_lh_testCichelli_nofib_arg1⁰) = prog_lh_₁(_lh_testCichelli_nofib_arg1⁰)
//│ def union_lh_₁(_lh_union_arg1⁰, _lh_union_arg2⁰) = mappend_lh_₄(_lh_union_arg1⁰, 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> _lh_listcomp_fun_para⁰(_lh_listcomp_fun⁰, _lh_union_arg1⁰))
//│ 	in _lh_listcomp_fun⁰(_lh_union_arg2⁰))
//│ <<<<<<< after floating out <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

