



:lhInHaskell
:lhGenOCaml
enumFromTo_lz a b = lazy (if a <= b then a:(enumFromTo_lz (a + 1) b) else [])
max a b = if a > b then a else b
min a b = if a < b then a else b
last (h:t) = go h t
  where
    go h [] = h
    go h (head:t) = go head t
all p [] = True
all p (h:t) = if p h then all p t else False
data Key = K String Char Char Int {- String, end letters, length of string -}
data HashSet = H (Maybe Int) (Maybe Int) [Int]
type HashFun = [(Char,Int)]  {- Association list of Character to values -}
ends :: Key -> String
ends (K _ a z _) = [a,z]
morefreq :: Key -> Key -> Bool
morefreq (K _ a x _) (K _ b y _) = ((freq a) + (freq x)) > ((freq b) + (freq y))
freq :: Char -> Int
freq c = assoc c (freqtab)
assoc :: (Eq a) => a -> [(a,b)] -> b
assoc x ((y,z):yzs) = if polyEq x y then z else assoc x yzs
assocm :: (Eq a) => a -> [(a,b)] -> Maybe b
assocm x [] = Nothing
assocm x ((y,z):yzs) = if polyEq x y then Just z else assocm x yzs
--- freqtab :: [(Char, Int)]
freqtab = histo (concat (map ends (attribkeys (keys))))
histins x [] = [(x,1)]
histins x ((y,n):yns) = if polyEq x y then (y,n+1):yns else (y,n):(histins x yns)
histo :: (Eq a) => [a] -> [(a,Int)]
histo ls = (foldr histins []) ls
subset :: (Eq a) => [a] -> [a] -> Bool
subset xs ys = all (\x -> member x ys) xs
union :: (Eq a) => [a] -> [a] -> [a]
union xs ys = xs ++ [y | y <- ys, not (member y xs)]
attribkeys :: [String] -> [Key]
attribkeys ks = map (\k->(K k (head k) (last k) (length k))) ks
numberofkeys = length keys
maxval = length freqtab
hinsert :: Int -> HashSet -> Maybe HashSet
hinsert h (H lo hi hs) =
  let lo' = minm lo h in
  let hi' = maxm hi h in
    if (member h hs) || ((1 + hi'- lo') > (numberofkeys)) then Nothing
    else Just (H (Just lo') (Just hi') (h:hs))
minm, maxm :: Maybe Int -> Int -> Int
minm Nothing y = y
minm (Just x) y = min x y
maxm Nothing y = y
maxm (Just x) y = max x y
member :: (Eq a) => a -> [a] -> Bool
member _ [] = False
member x (y:ys) = (polyEq x y) || (member x ys)
hash :: HashFun -> Key -> Int
hash cvs (K _ a z n) = n + (assoc a cvs) + (assoc z cvs)
partition' :: (a->Bool) -> [a] -> ([a],[a])
partition' p = foldr (select p) ([],[])
select p x (ts,fs) = if p x then (x:ts,fs) else (ts,x:fs)
freqsorted :: [Key] -> [Key]
freqsorted x = x
blocked :: [Key] -> [Key]
blocked ls = blocked' [] ls
blocked' ds [] = []
blocked' ds (k : ks) =
  let ds' = union ds (ends k) in
  case (partition' (\x->subset (ends x) ds') ks) of {
    (det,rest) ->  (k : det ++ blocked' ds' rest)
  }
keys = ["case","class","data","default","deriving","else","hiding", "if","import","in","infix","infixl","instance","interface","let","module","of","renaming","then","to","type","where"]
data Status a = NotEver Int | YesIts Int a deriving Show
prog n = cichelli n
findhash :: [Key] -> FeedBack
findhash keys = findhash' (H Nothing Nothing []) [] keys
findhash' :: HashSet -> HashFun -> [Key] -> FeedBack
findhash' keyHashSet charAssocs [] = (YesIts 1 charAssocs)
findhash' keyHashSet charAssocs ((K s a z n):ks) =
  let try = (\newAssocs -> let newCharAssocs = newAssocs ++ charAssocs in (case (hinsert (hash newCharAssocs (K s a z n)) keyHashSet) of {Nothing -> (NotEver 1); Just newKeyHashSet -> findhash' newKeyHashSet newCharAssocs ks})) in
  case (assocm a charAssocs, assocm z charAssocs) of
    (Nothing,Nothing) ->
        if polyEq a z then
          firstSuccess (\m-> try [(a,m)]) (enumFromTo_lz 0 maxval)
        else
          firstSuccess (\mn -> case mn of { (m,n) -> try [(a,m),(z,n)] }) (lazy [(m,n) | m<-(enumFromTo_lz 0 maxval), n<-(enumFromTo_lz 0 maxval)])
    (Nothing,Just zc) -> firstSuccess (\m->try [(a,m)]) (enumFromTo_lz 0 maxval)
    (Just ac,Nothing) -> firstSuccess (\n->try [(z,n)]) (enumFromTo_lz 0 maxval)
    (Just ac,Just zc) -> try []
-- Returns the first successful `working' function on a list of possible arguments
firstSuccess :: (a -> FeedBack) -> [a] -> FeedBack
firstSuccess f possibles =  first 0 (map_lz f possibles)
first :: Int -> [FeedBack] -> FeedBack
first k ls =
  case (force ls) of {
    [] -> NotEver k;
    (a:l) -> case a of
                  (YesIts leaves y) -> YesIts (k+leaves) y
                  (NotEver leaves)  -> first (k+leaves) l
  }
type FeedBack = Status HashFun
cichelli :: Int -> FeedBack
cichelli n =
  let attribkeys' = attribkeys ((keys) ++ take (n `mod` 2) (keys)) in
  let hashkeys = (blocked.freqsorted) attribkeys' in
  findhash hashkeys
testCichelli_nofib n = prog n
testCichelli_nofib $ primId 6
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> after expansion >>>>>>>>>>
//│ testCichelli_nofib_lh_₁(primId⁰(6))
//│ def all_lh_₁(_lh_all_arg1⁰, _lh_all_arg2⁰) = case _lh_all_arg2⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False]
//│ 	| _  => error⁰}
//│ def assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_arg2¹) = case _lh_assoc_arg2¹ of {
//│ 	LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_arg2⁰) = case _lh_assoc_arg2⁰ of {
//│ 	LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_arg2¹) = case _lh_assocm_arg2¹ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_arg2⁰) = case _lh_assocm_arg2⁰ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def attribkeys_lh_₁(_lh_attribkeys_arg1³) = map_lh_₁((fun k³ -> [K k³ head_lh_₁(k³) last_lh_₁(k³) length_lh_₁(k³)]), _lh_attribkeys_arg1³)
//│ def attribkeys_lh_₂(_lh_attribkeys_arg1²) = map_lh_₄((fun k² -> [K k² head_lh_₁(k²) last_lh_₁(k²) length_lh_₆(k²)]), _lh_attribkeys_arg1²)
//│ def attribkeys_lh_₃(_lh_attribkeys_arg1¹) = map_lh_₄((fun k¹ -> [K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₆(k¹)]), _lh_attribkeys_arg1¹)
//│ def attribkeys_lh_₄(_lh_attribkeys_arg1⁰) = map_lh_₄((fun k⁰ -> [K k⁰ head_lh_₁(k⁰) last_lh_₁(k⁰) length_lh_₆(k⁰)]), _lh_attribkeys_arg1⁰)
//│ def blocked'_lh_₁(_lh_blocked'_arg1⁰, _lh_blocked'_arg2⁰) = case _lh_blocked'_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => 
//│ 		let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₁(_lh_blocked'_LH_C_0⁰))
//│ 		in let _lh_matchIdent¹¹ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₂(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ 		in case _lh_matchIdent¹¹ of {
//│ 			LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def blocked_lh_₁(_lh_blocked_arg1⁰) = blocked'_lh_₁([LH_N], _lh_blocked_arg1⁰)
//│ def cichelli_lh_₁(_lh_cichelli_arg1⁰) = 
//│ 	let attribkeys'⁰ = attribkeys_lh_₁(mappend_lh_₁(keys_lh_₂, take_lh_₁((_lh_cichelli_arg1⁰ % 2), keys_lh_₁)))
//│ 	in let hashkeys⁰ = (fun _lh_funcomp_x⁰ -> blocked_lh_₁(freqsorted_lh_₁(_lh_funcomp_x⁰)))(attribkeys'⁰)
//│ 	in findhash_lh_₁(hashkeys⁰)
//│ def concat_lh_₁(lss¹) = case lss¹ of {
//│ 	LH_C h³ t³ => mappend_lh_₄(h³, concat_lh_₁(t³))
//│ 	| LH_N  => [LH_N]}
//│ def concat_lh_₂(lss⁰) = case lss⁰ of {
//│ 	LH_C h¹ t¹ => mappend_lh_₄(h¹, concat_lh_₂(t¹))
//│ 	| LH_N  => [LH_N]}
//│ def ends_lh_₁(_lh_ends_arg1³) = case _lh_ends_arg1³ of {
//│ 	K _lh_ends_K_0³ _lh_ends_K_1³ _lh_ends_K_2³ _lh_ends_K_3³ => [LH_C _lh_ends_K_1³ [LH_C _lh_ends_K_2³ [LH_N]]]
//│ 	| _  => error⁰}
//│ def ends_lh_₂(_lh_ends_arg1²) = case _lh_ends_arg1² of {
//│ 	K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]
//│ 	| _  => error⁰}
//│ def ends_lh_₃(_lh_ends_arg1¹) = case _lh_ends_arg1¹ of {
//│ 	K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]
//│ 	| _  => error⁰}
//│ def ends_lh_₄(_lh_ends_arg1⁰) = case _lh_ends_arg1⁰ of {
//│ 	K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]
//│ 	| _  => error⁰}
//│ def enumFromTo_lz_lh_₁(_lh_enumFromTo_lz_arg1⁴, _lh_enumFromTo_lz_arg2⁴) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁴ <= _lh_enumFromTo_lz_arg2⁴) then [LH_C _lh_enumFromTo_lz_arg1⁴ enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)] else [LH_N])
//│ def enumFromTo_lz_lh_₂(_lh_enumFromTo_lz_arg1³, _lh_enumFromTo_lz_arg2³) = lazy⁰(if (_lh_enumFromTo_lz_arg1³ <= _lh_enumFromTo_lz_arg2³) then [LH_C _lh_enumFromTo_lz_arg1³ enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)] else [LH_N])
//│ def enumFromTo_lz_lh_₃(_lh_enumFromTo_lz_arg1², _lh_enumFromTo_lz_arg2²) = lazy⁰(if (_lh_enumFromTo_lz_arg1² <= _lh_enumFromTo_lz_arg2²) then [LH_C _lh_enumFromTo_lz_arg1² enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)] else [LH_N])
//│ def enumFromTo_lz_lh_₄(_lh_enumFromTo_lz_arg1¹, _lh_enumFromTo_lz_arg2¹) = lazy⁰(if (_lh_enumFromTo_lz_arg1¹ <= _lh_enumFromTo_lz_arg2¹) then [LH_C _lh_enumFromTo_lz_arg1¹ enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)] else [LH_N])
//│ def enumFromTo_lz_lh_₅(_lh_enumFromTo_lz_arg1⁰, _lh_enumFromTo_lz_arg2⁰) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁰ <= _lh_enumFromTo_lz_arg2⁰) then [LH_C _lh_enumFromTo_lz_arg1⁰ enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)] else [LH_N])
//│ def findhash'_lh_₁(_lh_findhash'_arg1⁰, _lh_findhash'_arg2⁰, _lh_findhash'_arg3⁰) = case _lh_findhash'_arg3⁰ of {
//│ 	LH_N  => [YesIts 1 _lh_findhash'_arg2⁰]
//│ 	| LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {
//│ 		K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => 
//│ 			let try⁰ = (fun newAssocs⁰ -> 
//│ 				let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ 				in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ 				in case _lh_matchIdent⁸ of {
//│ 					Nothing  => [NotEver 1]
//│ 					| Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰)
//│ 					| _  => error⁰})
//│ 			in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₁(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₂(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ 			in case _lh_matchIdent⁹ of {
//│ 				LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {
//│ 					Nothing  => case _lh_findhash'_LH_P2_1⁰ of {
//│ 						Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> 
//│ 							let _lh_matchIdent¹⁰ = mn⁰
//│ 							in case _lh_matchIdent¹⁰ of {
//│ 								LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]])
//│ 								| _  => error⁰}), 
//│ 							let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => 
//│ 									let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {
//│ 										LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)])
//│ 										| LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ 									in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂))
//│ 								| LH_N  => lazy⁰([LH_N])})
//│ 							in _lh_listcomp_fun¹(enumFromTo_lz_lh_₅(0, maxval_lh_₅)))
//│ 						| Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄))
//│ 						| _  => error⁰}
//│ 					| Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {
//│ 						Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁))
//│ 						| Just _lh_findhash'_Just_0³ => try⁰([LH_N])
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def findhash_lh_₁(_lh_findhash_arg1⁰) = findhash'_lh_₁([H [Nothing] [Nothing] [LH_N]], [LH_N], _lh_findhash_arg1⁰)
//│ def firstSuccess_lh_₁(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³) = first_lh_₁(0, map_lz_lh_₁(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³))
//│ def firstSuccess_lh_₂(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²) = first_lh_₂(0, map_lz_lh_₂(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²))
//│ def firstSuccess_lh_₃(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹) = first_lh_₃(0, map_lz_lh_₃(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹))
//│ def firstSuccess_lh_₄(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰) = first_lh_₄(0, map_lz_lh_₄(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰))
//│ def first_lh_₁(_lh_first_arg1³, _lh_first_arg2³) = 
//│ 	let _lh_matchIdent⁶ = force⁰(_lh_first_arg2³)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_N  => [NotEver _lh_first_arg1³]
//│ 		| LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => 
//│ 			let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ 			in case _lh_matchIdent⁷ of {
//│ 				YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]
//│ 				| NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def first_lh_₂(_lh_first_arg1², _lh_first_arg2²) = 
//│ 	let _lh_matchIdent⁴ = force⁰(_lh_first_arg2²)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_N  => [NotEver _lh_first_arg1²]
//│ 		| LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => 
//│ 			let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ 			in case _lh_matchIdent⁵ of {
//│ 				YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]
//│ 				| NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def first_lh_₃(_lh_first_arg1¹, _lh_first_arg2¹) = 
//│ 	let _lh_matchIdent² = force⁰(_lh_first_arg2¹)
//│ 	in case _lh_matchIdent² of {
//│ 		LH_N  => [NotEver _lh_first_arg1¹]
//│ 		| LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => 
//│ 			let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ 			in case _lh_matchIdent³ of {
//│ 				YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]
//│ 				| NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def first_lh_₄(_lh_first_arg1⁰, _lh_first_arg2⁰) = 
//│ 	let _lh_matchIdent⁰ = force⁰(_lh_first_arg2⁰)
//│ 	in case _lh_matchIdent⁰ of {
//│ 		LH_N  => [NotEver _lh_first_arg1⁰]
//│ 		| LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => 
//│ 			let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ 			in case _lh_matchIdent¹ of {
//│ 				YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]
//│ 				| NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰)
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def foldr_lh_₁(f⁷, i⁰, ls¹²) = case ls¹² of {
//│ 	LH_C h¹⁵ t¹⁵ => f⁷(h¹⁵, foldr_lh_₁(f⁷, i⁰, t¹⁵))
//│ 	| LH_N  => i⁰}
//│ def freqsorted_lh_₁(_lh_freqsorted_arg1⁰) = _lh_freqsorted_arg1⁰
//│ def freqtab_lh_₁ = histo_lh_₁(concat_lh_₁(map_lh_₂(ends_lh_₃, attribkeys_lh_₂(keys_lh_₃))))
//│ def freqtab_lh_₂ = histo_lh_₂(concat_lh_₂(map_lh_₃(ends_lh_₄, attribkeys_lh_₃(keys_lh_₄))))
//│ def freqtab_lh_₃ = histo_lh_₂(concat_lh_₂(map_lh_₄(ends_lh_₄, attribkeys_lh_₄(keys_lh_₄))))
//│ def freqtab_lh_₄ = histo_lh_₂(concat_lh_₂(map_lh_₄(ends_lh_₄, attribkeys_lh_₄(keys_lh_₄))))
//│ def freqtab_lh_₅ = histo_lh_₂(concat_lh_₂(map_lh_₄(ends_lh_₄, attribkeys_lh_₄(keys_lh_₄))))
//│ def hash_lh_₁(_lh_hash_arg1⁰, _lh_hash_arg2⁰) = case _lh_hash_arg2⁰ of {
//│ 	K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₁(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₂(_lh_hash_K_2⁰, _lh_hash_arg1⁰))
//│ 	| _  => error⁰}
//│ def head_lh_₁(ls¹⁴) = case ls¹⁴ of {
//│ 	LH_C h¹⁹ t¹⁹ => h¹⁹
//│ 	| LH_N  => error⁰}
//│ def hinsert_lh_₁(_lh_hinsert_arg1⁰, _lh_hinsert_arg2⁰) = case _lh_hinsert_arg2⁰ of {
//│ 	H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => 
//│ 		let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ 		in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ 		in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > numberofkeys_lh_₁)) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]
//│ 	| _  => error⁰}
//│ def histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_arg2⁰) = case _lh_histins_arg2⁰ of {
//│ 	LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]
//│ 	| LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {
//│ 		LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def histo_lh_₁(_lh_histo_arg1¹) = foldr_lh_₁(histins_lh_₁, [LH_N], _lh_histo_arg1¹)
//│ def histo_lh_₂(_lh_histo_arg1⁰) = foldr_lh_₁(histins_lh_₁, [LH_N], _lh_histo_arg1⁰)
//│ def keys_lh_₁ = [LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]
//│ def keys_lh_₂ = [LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]
//│ def keys_lh_₃ = [LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]
//│ def keys_lh_₄ = [LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]
//│ def last_lh_₁(_lh_last_arg1⁰) = case _lh_last_arg1⁰ of {
//│ 	LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => 
//│ 		let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {
//│ 			LH_N  => _lh_go_arg1⁰
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls¹⁵) = case ls¹⁵ of {
//│ 	LH_C h²⁰ t²⁰ => (1 + length_lh_₁(t²⁰))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹¹) = case ls¹¹ of {
//│ 	LH_C h¹³ t¹³ => (1 + length_lh_₂(t¹³))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls⁹) = case ls⁹ of {
//│ 	LH_C h¹¹ t¹¹ => (1 + length_lh_₃(t¹¹))
//│ 	| LH_N  => 0}
//│ def length_lh_₄(ls⁸) = case ls⁸ of {
//│ 	LH_C h¹⁰ t¹⁰ => (1 + length_lh_₄(t¹⁰))
//│ 	| LH_N  => 0}
//│ def length_lh_₅(ls⁷) = case ls⁷ of {
//│ 	LH_C h⁹ t⁹ => (1 + length_lh_₅(t⁹))
//│ 	| LH_N  => 0}
//│ def length_lh_₆(ls³) = case ls³ of {
//│ 	LH_C h⁵ t⁵ => (1 + length_lh_₆(t⁵))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f⁸, ls¹³) = case ls¹³ of {
//│ 	LH_C h¹⁸ t¹⁸ => [LH_C f⁸(h¹⁸) map_lh_₁(f⁸, t¹⁸)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₂(f², ls²) = case ls² of {
//│ 	LH_C h⁴ t⁴ => [LH_C f²(h⁴) map_lh_₂(f², t⁴)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₃(f¹, ls¹) = case ls¹ of {
//│ 	LH_C h² t² => [LH_C f¹(h²) map_lh_₃(f¹, t²)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₄(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₄(f⁰, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lz_lh_₁(f⁶, ls¹⁰) = lazy⁰(case force⁰(ls¹⁰) of {
//│ 	LH_C h¹² t¹² => [LH_C f⁶(h¹²) map_lz_lh_₁(f⁶, t¹²)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₂(f⁵, ls⁶) = lazy⁰(case force⁰(ls⁶) of {
//│ 	LH_C h⁸ t⁸ => [LH_C f⁵(h⁸) map_lz_lh_₂(f⁵, t⁸)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₃(f⁴, ls⁵) = lazy⁰(case force⁰(ls⁵) of {
//│ 	LH_C h⁷ t⁷ => [LH_C f⁴(h⁷) map_lz_lh_₃(f⁴, t⁷)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_lh_₄(f³, ls⁴) = lazy⁰(case force⁰(ls⁴) of {
//│ 	LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lz_lh_₄(f³, t⁶)]
//│ 	| LH_N  => [LH_N]})
//│ def mappend_lh_₁(xs³, ys³) = case xs³ of {
//│ 	LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₂(xs², ys²) = case xs² of {
//│ 	LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₂(t¹⁷, ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₃(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₃(t¹⁶, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₄(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₄(t¹⁴, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def max_lh_₁(_lh_max_arg1⁰, _lh_max_arg2⁰) = if (_lh_max_arg1⁰ > _lh_max_arg2⁰) then _lh_max_arg1⁰ else _lh_max_arg2⁰
//│ def maxm_lh_₁(_lh_maxm_arg1⁰, _lh_maxm_arg2⁰) = case _lh_maxm_arg1⁰ of {
//│ 	Nothing  => _lh_maxm_arg2⁰
//│ 	| Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰)
//│ 	| _  => error⁰}
//│ def maxval_lh_₁ = length_lh_₂(freqtab_lh_₁)
//│ def maxval_lh_₂ = length_lh_₃(freqtab_lh_₂)
//│ def maxval_lh_₃ = length_lh_₄(freqtab_lh_₃)
//│ def maxval_lh_₄ = length_lh_₅(freqtab_lh_₄)
//│ def maxval_lh_₅ = length_lh_₆(freqtab_lh_₅)
//│ def member_lh_₁(_lh_member_arg1², _lh_member_arg2²) = case _lh_member_arg2² of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1², _lh_member_LH_C_1²))
//│ 	| _  => error⁰}
//│ def member_lh_₂(_lh_member_arg1¹, _lh_member_arg2¹) = case _lh_member_arg2¹ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹))
//│ 	| _  => error⁰}
//│ def member_lh_₃(_lh_member_arg1⁰, _lh_member_arg2⁰) = case _lh_member_arg2⁰ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₃(_lh_member_arg1⁰, _lh_member_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def min_lh_₁(_lh_min_arg1⁰, _lh_min_arg2⁰) = if (_lh_min_arg1⁰ < _lh_min_arg2⁰) then _lh_min_arg1⁰ else _lh_min_arg2⁰
//│ def minm_lh_₁(_lh_minm_arg1⁰, _lh_minm_arg2⁰) = case _lh_minm_arg1⁰ of {
//│ 	Nothing  => _lh_minm_arg2⁰
//│ 	| Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰)
//│ 	| _  => error⁰}
//│ def numberofkeys_lh_₁ = length_lh_₆(keys_lh_₄)
//│ def partition'_lh_₁(_lh_partition'_arg1⁰) = foldr_lh_₁(select_lh_₁(_lh_partition'_arg1⁰), [LH_P2 [LH_N] [LH_N]])
//│ def prog_lh_₁(_lh_prog_arg1⁰) = cichelli_lh_₁(_lh_prog_arg1⁰)
//│ def select_lh_₁(_lh_select_arg1⁰, _lh_select_arg2⁰, _lh_select_arg3⁰) = case _lh_select_arg3⁰ of {
//│ 	LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]
//│ 	| _  => error⁰}
//│ def subset_lh_₁(_lh_subset_arg1⁰, _lh_subset_arg2⁰) = all_lh_₁((fun x⁰ -> member_lh_₁(x⁰, _lh_subset_arg2⁰)), _lh_subset_arg1⁰)
//│ def take_lh_₁(n¹, ls¹⁶) = if (n¹ > 0) then case ls¹⁶ of {
//│ 	LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testCichelli_nofib_lh_₁(_lh_testCichelli_nofib_arg1⁰) = prog_lh_₁(_lh_testCichelli_nofib_arg1⁰)
//│ def union_lh_₁(_lh_union_arg1⁰, _lh_union_arg2⁰) = mappend_lh_₄(_lh_union_arg1⁰, 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(_lh_union_arg2⁰))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec freqsorted_lh__d1 _lh_freqsorted_arg1_0 =
//│ 		  _lh_freqsorted_arg1_0;;
//│ 		let rec mappend_lh__d1 xs_3 ys_3 =
//│ 		  (match xs_3 with
//│ 		    | `LH_C(h_2_2, t_2_2) -> 
//│ 		      (`LH_C(h_2_2, ((mappend_lh__d1 t_2_2) ys_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_3);;
//│ 		let rec first_lh__d1 _lh_first_arg1_3 _lh_first_arg2_3 =
//│ 		  (let rec _lh_matchIdent_6 = (Lazy.force _lh_first_arg2_3) in
//│ 		    (match _lh_matchIdent_6 with
//│ 		      | `LH_N -> 
//│ 		        (`NotEver(_lh_first_arg1_3))
//│ 		      | `LH_C(_lh_first_LH_C_0_3, _lh_first_LH_C_1_3) -> 
//│ 		        (let rec _lh_matchIdent_7 = _lh_first_LH_C_0_3 in
//│ 		          (match _lh_matchIdent_7 with
//│ 		            | `YesIts(_lh_first_YesIts_0_3, _lh_first_YesIts_1_3) -> 
//│ 		              (`YesIts((_lh_first_arg1_3 + _lh_first_YesIts_0_3), _lh_first_YesIts_1_3))
//│ 		            | `NotEver(_lh_first_NotEver_0_3) -> 
//│ 		              ((first_lh__d1 (_lh_first_arg1_3 + _lh_first_NotEver_0_3)) _lh_first_LH_C_1_3)
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec map_lz_lh__d1 f_6 ls_1_0 =
//│ 		  (lazy (match (Lazy.force ls_1_0) with
//│ 		    | `LH_C(h_1_2, t_1_2) -> 
//│ 		      (`LH_C((f_6 h_1_2), ((map_lz_lh__d1 f_6) t_1_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec firstSuccess_lh__d1 _lh_firstSuccess_arg1_3 _lh_firstSuccess_arg2_3 =
//│ 		  ((first_lh__d1 0) ((map_lz_lh__d1 _lh_firstSuccess_arg1_3) _lh_firstSuccess_arg2_3));;
//│ 		let rec assocm_lh__d1 _lh_assocm_arg1_1 _lh_assocm_arg2_1 =
//│ 		  (match _lh_assocm_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`Nothing)
//│ 		    | `LH_C(_lh_assocm_LH_C_0_1, _lh_assocm_LH_C_1_1) -> 
//│ 		      (match _lh_assocm_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_assocm_LH_P2_0_1, _lh_assocm_LH_P2_1_1) -> 
//│ 		          (if (_lh_assocm_arg1_1 = _lh_assocm_LH_P2_0_1) then
//│ 		            (`Just(_lh_assocm_LH_P2_1_1))
//│ 		          else
//│ 		            ((assocm_lh__d1 _lh_assocm_arg1_1) _lh_assocm_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec enumFromTo_lz_lh__d1 _lh_enumFromTo_lz_arg1_4 _lh_enumFromTo_lz_arg2_4 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_4 <= _lh_enumFromTo_lz_arg2_4) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_4, ((enumFromTo_lz_lh__d1 (_lh_enumFromTo_lz_arg1_4 + 1)) _lh_enumFromTo_lz_arg2_4)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec first_lh__d3 _lh_first_arg1_1 _lh_first_arg2_1 =
//│ 		  (let rec _lh_matchIdent_2 = (Lazy.force _lh_first_arg2_1) in
//│ 		    (match _lh_matchIdent_2 with
//│ 		      | `LH_N -> 
//│ 		        (`NotEver(_lh_first_arg1_1))
//│ 		      | `LH_C(_lh_first_LH_C_0_1, _lh_first_LH_C_1_1) -> 
//│ 		        (let rec _lh_matchIdent_3 = _lh_first_LH_C_0_1 in
//│ 		          (match _lh_matchIdent_3 with
//│ 		            | `YesIts(_lh_first_YesIts_0_1, _lh_first_YesIts_1_1) -> 
//│ 		              (`YesIts((_lh_first_arg1_1 + _lh_first_YesIts_0_1), _lh_first_YesIts_1_1))
//│ 		            | `NotEver(_lh_first_NotEver_0_1) -> 
//│ 		              ((first_lh__d3 (_lh_first_arg1_1 + _lh_first_NotEver_0_1)) _lh_first_LH_C_1_1)
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec map_lz_lh__d3 f_4 ls_5 =
//│ 		  (lazy (match (Lazy.force ls_5) with
//│ 		    | `LH_C(h_7, t_7) -> 
//│ 		      (`LH_C((f_4 h_7), ((map_lz_lh__d3 f_4) t_7)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec firstSuccess_lh__d3 _lh_firstSuccess_arg1_1 _lh_firstSuccess_arg2_1 =
//│ 		  ((first_lh__d3 0) ((map_lz_lh__d3 _lh_firstSuccess_arg1_1) _lh_firstSuccess_arg2_1));;
//│ 		let rec enumFromTo_lz_lh__d4 _lh_enumFromTo_lz_arg1_1 _lh_enumFromTo_lz_arg2_1 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_1 <= _lh_enumFromTo_lz_arg2_1) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_1, ((enumFromTo_lz_lh__d4 (_lh_enumFromTo_lz_arg1_1 + 1)) _lh_enumFromTo_lz_arg2_1)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec keys_lh__d3 =
//│ 		  (`LH_C((`LH_C('c', (`LH_C('a', (`LH_C('s', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('c', (`LH_C('l', (`LH_C('a', (`LH_C('s', (`LH_C('s', (`LH_N))))))))))), (`LH_C((`LH_C('d', (`LH_C('a', (`LH_C('t', (`LH_C('a', (`LH_N))))))))), (`LH_C((`LH_C('d', (`LH_C('e', (`LH_C('f', (`LH_C('a', (`LH_C('u', (`LH_C('l', (`LH_C('t', (`LH_N))))))))))))))), (`LH_C((`LH_C('d', (`LH_C('e', (`LH_C('r', (`LH_C('i', (`LH_C('v', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))))))), (`LH_C((`LH_C('e', (`LH_C('l', (`LH_C('s', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('h', (`LH_C('i', (`LH_C('d', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('f', (`LH_N))))), (`LH_C((`LH_C('i', (`LH_C('m', (`LH_C('p', (`LH_C('o', (`LH_C('r', (`LH_C('t', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_N))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('f', (`LH_C('i', (`LH_C('x', (`LH_N))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('f', (`LH_C('i', (`LH_C('x', (`LH_C('l', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('s', (`LH_C('t', (`LH_C('a', (`LH_C('n', (`LH_C('c', (`LH_C('e', (`LH_N))))))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('t', (`LH_C('e', (`LH_C('r', (`LH_C('f', (`LH_C('a', (`LH_C('c', (`LH_C('e', (`LH_N))))))))))))))))))), (`LH_C((`LH_C('l', (`LH_C('e', (`LH_C('t', (`LH_N))))))), (`LH_C((`LH_C('m', (`LH_C('o', (`LH_C('d', (`LH_C('u', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))))), (`LH_C((`LH_C('o', (`LH_C('f', (`LH_N))))), (`LH_C((`LH_C('r', (`LH_C('e', (`LH_C('n', (`LH_C('a', (`LH_C('m', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))))))), (`LH_C((`LH_C('t', (`LH_C('h', (`LH_C('e', (`LH_C('n', (`LH_N))))))))), (`LH_C((`LH_C('t', (`LH_C('o', (`LH_N))))), (`LH_C((`LH_C('t', (`LH_C('y', (`LH_C('p', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('w', (`LH_C('h', (`LH_C('e', (`LH_C('r', (`LH_C('e', (`LH_N))))))))))), (`LH_N)))))))))))))))))))))))))))))))))))))))))))));;
//│ 		let rec ends_lh__d3 _lh_ends_arg1_1 =
//│ 		  (match _lh_ends_arg1_1 with
//│ 		    | `K(_lh_ends_K_0_1, _lh_ends_K_1_1, _lh_ends_K_2_1, _lh_ends_K_3_1) -> 
//│ 		      (`LH_C(_lh_ends_K_1_1, (`LH_C(_lh_ends_K_2_1, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d2 f_2 ls_2 =
//│ 		  (match ls_2 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      (`LH_C((f_2 h_4), ((map_lh__d2 f_2) t_4)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec foldr_lh__d1 f_7 i_0 ls_1_2 =
//│ 		  (match ls_1_2 with
//│ 		    | `LH_C(h_1_5, t_1_5) -> 
//│ 		      ((f_7 h_1_5) (((foldr_lh__d1 f_7) i_0) t_1_5))
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec histins_lh__d1 _lh_histins_arg1_0 _lh_histins_arg2_0 =
//│ 		  (match _lh_histins_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_C((`LH_P2(_lh_histins_arg1_0, 1)), (`LH_N)))
//│ 		    | `LH_C(_lh_histins_LH_C_0_0, _lh_histins_LH_C_1_0) -> 
//│ 		      (match _lh_histins_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_histins_LH_P2_0_0, _lh_histins_LH_P2_1_0) -> 
//│ 		          (if (_lh_histins_arg1_0 = _lh_histins_LH_P2_0_0) then
//│ 		            (`LH_C((`LH_P2(_lh_histins_LH_P2_0_0, (_lh_histins_LH_P2_1_0 + 1))), _lh_histins_LH_C_1_0))
//│ 		          else
//│ 		            (`LH_C((`LH_P2(_lh_histins_LH_P2_0_0, _lh_histins_LH_P2_1_0)), ((histins_lh__d1 _lh_histins_arg1_0) _lh_histins_LH_C_1_0))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec histo_lh__d1 _lh_histo_arg1_1 =
//│ 		  (((foldr_lh__d1 histins_lh__d1) (`LH_N)) _lh_histo_arg1_1);;
//│ 		let rec length_lh__d6 ls_3 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      (1 + (length_lh__d6 t_5))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec head_lh__d1 ls_1_4 =
//│ 		  (match ls_1_4 with
//│ 		    | `LH_C(h_1_9, t_1_9) -> 
//│ 		      h_1_9
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d4 f_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C((f_0 h_0), ((map_lh__d4 f_0) t_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec last_lh__d1 _lh_last_arg1_0 =
//│ 		  (match _lh_last_arg1_0 with
//│ 		    | `LH_C(_lh_last_LH_C_0_0, _lh_last_LH_C_1_0) -> 
//│ 		      (let rec go_0 = (fun _lh_go_arg1_0 _lh_go_arg2_0 -> 
//│ 		        (match _lh_go_arg2_0 with
//│ 		          | `LH_N -> 
//│ 		            _lh_go_arg1_0
//│ 		          | `LH_C(_lh_go_LH_C_0_0, _lh_go_LH_C_1_0) -> 
//│ 		            ((go_0 _lh_go_LH_C_0_0) _lh_go_LH_C_1_0)
//│ 		          | _ -> 
//│ 		            (failwith "error"))) in
//│ 		        ((go_0 _lh_last_LH_C_0_0) _lh_last_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec attribkeys_lh__d2 _lh_attribkeys_arg1_2 =
//│ 		  ((map_lh__d4 (fun k_2 -> 
//│ 		    (`K(k_2, (head_lh__d1 k_2), (last_lh__d1 k_2), (length_lh__d6 k_2))))) _lh_attribkeys_arg1_2);;
//│ 		let rec mappend_lh__d4 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_1_4, t_1_4) -> 
//│ 		      (`LH_C(h_1_4, ((mappend_lh__d4 t_1_4) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec concat_lh__d1 lss_1 =
//│ 		  (match lss_1 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      ((mappend_lh__d4 h_3) (concat_lh__d1 t_3))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec freqtab_lh__d1 =
//│ 		  (histo_lh__d1 (concat_lh__d1 ((map_lh__d2 ends_lh__d3) (attribkeys_lh__d2 keys_lh__d3))));;
//│ 		let rec length_lh__d2 ls_1_1 =
//│ 		  (match ls_1_1 with
//│ 		    | `LH_C(h_1_3, t_1_3) -> 
//│ 		      (1 + (length_lh__d2 t_1_3))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec maxval_lh__d1 =
//│ 		  (length_lh__d2 freqtab_lh__d1);;
//│ 		let rec length_lh__d3 ls_9 =
//│ 		  (match ls_9 with
//│ 		    | `LH_C(h_1_1, t_1_1) -> 
//│ 		      (1 + (length_lh__d3 t_1_1))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec attribkeys_lh__d3 _lh_attribkeys_arg1_1 =
//│ 		  ((map_lh__d4 (fun k_1 -> 
//│ 		    (`K(k_1, (head_lh__d1 k_1), (last_lh__d1 k_1), (length_lh__d6 k_1))))) _lh_attribkeys_arg1_1);;
//│ 		let rec concat_lh__d2 lss_0 =
//│ 		  (match lss_0 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      ((mappend_lh__d4 h_1) (concat_lh__d2 t_1))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec histo_lh__d2 _lh_histo_arg1_0 =
//│ 		  (((foldr_lh__d1 histins_lh__d1) (`LH_N)) _lh_histo_arg1_0);;
//│ 		let rec keys_lh__d4 =
//│ 		  (`LH_C((`LH_C('c', (`LH_C('a', (`LH_C('s', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('c', (`LH_C('l', (`LH_C('a', (`LH_C('s', (`LH_C('s', (`LH_N))))))))))), (`LH_C((`LH_C('d', (`LH_C('a', (`LH_C('t', (`LH_C('a', (`LH_N))))))))), (`LH_C((`LH_C('d', (`LH_C('e', (`LH_C('f', (`LH_C('a', (`LH_C('u', (`LH_C('l', (`LH_C('t', (`LH_N))))))))))))))), (`LH_C((`LH_C('d', (`LH_C('e', (`LH_C('r', (`LH_C('i', (`LH_C('v', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))))))), (`LH_C((`LH_C('e', (`LH_C('l', (`LH_C('s', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('h', (`LH_C('i', (`LH_C('d', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('f', (`LH_N))))), (`LH_C((`LH_C('i', (`LH_C('m', (`LH_C('p', (`LH_C('o', (`LH_C('r', (`LH_C('t', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_N))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('f', (`LH_C('i', (`LH_C('x', (`LH_N))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('f', (`LH_C('i', (`LH_C('x', (`LH_C('l', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('s', (`LH_C('t', (`LH_C('a', (`LH_C('n', (`LH_C('c', (`LH_C('e', (`LH_N))))))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('t', (`LH_C('e', (`LH_C('r', (`LH_C('f', (`LH_C('a', (`LH_C('c', (`LH_C('e', (`LH_N))))))))))))))))))), (`LH_C((`LH_C('l', (`LH_C('e', (`LH_C('t', (`LH_N))))))), (`LH_C((`LH_C('m', (`LH_C('o', (`LH_C('d', (`LH_C('u', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))))), (`LH_C((`LH_C('o', (`LH_C('f', (`LH_N))))), (`LH_C((`LH_C('r', (`LH_C('e', (`LH_C('n', (`LH_C('a', (`LH_C('m', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))))))), (`LH_C((`LH_C('t', (`LH_C('h', (`LH_C('e', (`LH_C('n', (`LH_N))))))))), (`LH_C((`LH_C('t', (`LH_C('o', (`LH_N))))), (`LH_C((`LH_C('t', (`LH_C('y', (`LH_C('p', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('w', (`LH_C('h', (`LH_C('e', (`LH_C('r', (`LH_C('e', (`LH_N))))))))))), (`LH_N)))))))))))))))))))))))))))))))))))))))))))));;
//│ 		let rec map_lh__d3 f_1 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (`LH_C((f_1 h_2), ((map_lh__d3 f_1) t_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec ends_lh__d4 _lh_ends_arg1_0 =
//│ 		  (match _lh_ends_arg1_0 with
//│ 		    | `K(_lh_ends_K_0_0, _lh_ends_K_1_0, _lh_ends_K_2_0, _lh_ends_K_3_0) -> 
//│ 		      (`LH_C(_lh_ends_K_1_0, (`LH_C(_lh_ends_K_2_0, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec freqtab_lh__d2 =
//│ 		  (histo_lh__d2 (concat_lh__d2 ((map_lh__d3 ends_lh__d4) (attribkeys_lh__d3 keys_lh__d4))));;
//│ 		let rec maxval_lh__d2 =
//│ 		  (length_lh__d3 freqtab_lh__d2);;
//│ 		let rec attribkeys_lh__d4 _lh_attribkeys_arg1_0 =
//│ 		  ((map_lh__d4 (fun k_0 -> 
//│ 		    (`K(k_0, (head_lh__d1 k_0), (last_lh__d1 k_0), (length_lh__d6 k_0))))) _lh_attribkeys_arg1_0);;
//│ 		let rec freqtab_lh__d5 =
//│ 		  (histo_lh__d2 (concat_lh__d2 ((map_lh__d4 ends_lh__d4) (attribkeys_lh__d4 keys_lh__d4))));;
//│ 		let rec maxval_lh__d5 =
//│ 		  (length_lh__d6 freqtab_lh__d5);;
//│ 		let rec first_lh__d4 _lh_first_arg1_0 _lh_first_arg2_0 =
//│ 		  (let rec _lh_matchIdent_0 = (Lazy.force _lh_first_arg2_0) in
//│ 		    (match _lh_matchIdent_0 with
//│ 		      | `LH_N -> 
//│ 		        (`NotEver(_lh_first_arg1_0))
//│ 		      | `LH_C(_lh_first_LH_C_0_0, _lh_first_LH_C_1_0) -> 
//│ 		        (let rec _lh_matchIdent_1 = _lh_first_LH_C_0_0 in
//│ 		          (match _lh_matchIdent_1 with
//│ 		            | `YesIts(_lh_first_YesIts_0_0, _lh_first_YesIts_1_0) -> 
//│ 		              (`YesIts((_lh_first_arg1_0 + _lh_first_YesIts_0_0), _lh_first_YesIts_1_0))
//│ 		            | `NotEver(_lh_first_NotEver_0_0) -> 
//│ 		              ((first_lh__d4 (_lh_first_arg1_0 + _lh_first_NotEver_0_0)) _lh_first_LH_C_1_0)
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec map_lz_lh__d4 f_3 ls_4 =
//│ 		  (lazy (match (Lazy.force ls_4) with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      (`LH_C((f_3 h_6), ((map_lz_lh__d4 f_3) t_6)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec firstSuccess_lh__d4 _lh_firstSuccess_arg1_0 _lh_firstSuccess_arg2_0 =
//│ 		  ((first_lh__d4 0) ((map_lz_lh__d4 _lh_firstSuccess_arg1_0) _lh_firstSuccess_arg2_0));;
//│ 		let rec assocm_lh__d2 _lh_assocm_arg1_0 _lh_assocm_arg2_0 =
//│ 		  (match _lh_assocm_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`Nothing)
//│ 		    | `LH_C(_lh_assocm_LH_C_0_0, _lh_assocm_LH_C_1_0) -> 
//│ 		      (match _lh_assocm_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_assocm_LH_P2_0_0, _lh_assocm_LH_P2_1_0) -> 
//│ 		          (if (_lh_assocm_arg1_0 = _lh_assocm_LH_P2_0_0) then
//│ 		            (`Just(_lh_assocm_LH_P2_1_0))
//│ 		          else
//│ 		            ((assocm_lh__d2 _lh_assocm_arg1_0) _lh_assocm_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lz_lh__d2 f_5 ls_6 =
//│ 		  (lazy (match (Lazy.force ls_6) with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      (`LH_C((f_5 h_8), ((map_lz_lh__d2 f_5) t_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)));;
//│ 		let rec first_lh__d2 _lh_first_arg1_2 _lh_first_arg2_2 =
//│ 		  (let rec _lh_matchIdent_4 = (Lazy.force _lh_first_arg2_2) in
//│ 		    (match _lh_matchIdent_4 with
//│ 		      | `LH_N -> 
//│ 		        (`NotEver(_lh_first_arg1_2))
//│ 		      | `LH_C(_lh_first_LH_C_0_2, _lh_first_LH_C_1_2) -> 
//│ 		        (let rec _lh_matchIdent_5 = _lh_first_LH_C_0_2 in
//│ 		          (match _lh_matchIdent_5 with
//│ 		            | `YesIts(_lh_first_YesIts_0_2, _lh_first_YesIts_1_2) -> 
//│ 		              (`YesIts((_lh_first_arg1_2 + _lh_first_YesIts_0_2), _lh_first_YesIts_1_2))
//│ 		            | `NotEver(_lh_first_NotEver_0_2) -> 
//│ 		              ((first_lh__d2 (_lh_first_arg1_2 + _lh_first_NotEver_0_2)) _lh_first_LH_C_1_2)
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec firstSuccess_lh__d2 _lh_firstSuccess_arg1_2 _lh_firstSuccess_arg2_2 =
//│ 		  ((first_lh__d2 0) ((map_lz_lh__d2 _lh_firstSuccess_arg1_2) _lh_firstSuccess_arg2_2));;
//│ 		let rec enumFromTo_lz_lh__d2 _lh_enumFromTo_lz_arg1_3 _lh_enumFromTo_lz_arg2_3 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_3 <= _lh_enumFromTo_lz_arg2_3) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_3, ((enumFromTo_lz_lh__d2 (_lh_enumFromTo_lz_arg1_3 + 1)) _lh_enumFromTo_lz_arg2_3)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec length_lh__d5 ls_7 =
//│ 		  (match ls_7 with
//│ 		    | `LH_C(h_9, t_9) -> 
//│ 		      (1 + (length_lh__d5 t_9))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec freqtab_lh__d4 =
//│ 		  (histo_lh__d2 (concat_lh__d2 ((map_lh__d4 ends_lh__d4) (attribkeys_lh__d4 keys_lh__d4))));;
//│ 		let rec maxval_lh__d4 =
//│ 		  (length_lh__d5 freqtab_lh__d4);;
//│ 		let rec min_lh__d1 _lh_min_arg1_0 _lh_min_arg2_0 =
//│ 		  (if (_lh_min_arg1_0 < _lh_min_arg2_0) then
//│ 		    _lh_min_arg1_0
//│ 		  else
//│ 		    _lh_min_arg2_0);;
//│ 		let rec minm_lh__d1 _lh_minm_arg1_0 _lh_minm_arg2_0 =
//│ 		  (match _lh_minm_arg1_0 with
//│ 		    | `Nothing -> 
//│ 		      _lh_minm_arg2_0
//│ 		    | `Just(_lh_minm_Just_0_0) -> 
//│ 		      ((min_lh__d1 _lh_minm_Just_0_0) _lh_minm_arg2_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec max_lh__d1 _lh_max_arg1_0 _lh_max_arg2_0 =
//│ 		  (if (_lh_max_arg1_0 > _lh_max_arg2_0) then
//│ 		    _lh_max_arg1_0
//│ 		  else
//│ 		    _lh_max_arg2_0);;
//│ 		let rec maxm_lh__d1 _lh_maxm_arg1_0 _lh_maxm_arg2_0 =
//│ 		  (match _lh_maxm_arg1_0 with
//│ 		    | `Nothing -> 
//│ 		      _lh_maxm_arg2_0
//│ 		    | `Just(_lh_maxm_Just_0_0) -> 
//│ 		      ((max_lh__d1 _lh_maxm_Just_0_0) _lh_maxm_arg2_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec member_lh__d3 _lh_member_arg1_0 _lh_member_arg2_0 =
//│ 		  (match _lh_member_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | `LH_C(_lh_member_LH_C_0_0, _lh_member_LH_C_1_0) -> 
//│ 		      ((_lh_member_arg1_0 = _lh_member_LH_C_0_0) || ((member_lh__d3 _lh_member_arg1_0) _lh_member_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec numberofkeys_lh__d1 =
//│ 		  (length_lh__d6 keys_lh__d4);;
//│ 		let rec hinsert_lh__d1 _lh_hinsert_arg1_0 _lh_hinsert_arg2_0 =
//│ 		  (match _lh_hinsert_arg2_0 with
//│ 		    | `H(_lh_hinsert_H_0_0, _lh_hinsert_H_1_0, _lh_hinsert_H_2_0) -> 
//│ 		      (let rec lo'_0 = ((minm_lh__d1 _lh_hinsert_H_0_0) _lh_hinsert_arg1_0) in
//│ 		        (let rec hi'_0 = ((maxm_lh__d1 _lh_hinsert_H_1_0) _lh_hinsert_arg1_0) in
//│ 		          (if (((member_lh__d3 _lh_hinsert_arg1_0) _lh_hinsert_H_2_0) || (((1 + hi'_0) - lo'_0) > numberofkeys_lh__d1)) then
//│ 		            (`Nothing)
//│ 		          else
//│ 		            (`Just((`H((`Just(lo'_0)), (`Just(hi'_0)), (`LH_C(_lh_hinsert_arg1_0, _lh_hinsert_H_2_0)))))))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d3 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_1_6, t_1_6) -> 
//│ 		      (`LH_C(h_1_6, ((mappend_lh__d3 t_1_6) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec freqtab_lh__d3 =
//│ 		  (histo_lh__d2 (concat_lh__d2 ((map_lh__d4 ends_lh__d4) (attribkeys_lh__d4 keys_lh__d4))));;
//│ 		let rec length_lh__d4 ls_8 =
//│ 		  (match ls_8 with
//│ 		    | `LH_C(h_1_0, t_1_0) -> 
//│ 		      (1 + (length_lh__d4 t_1_0))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec maxval_lh__d3 =
//│ 		  (length_lh__d4 freqtab_lh__d3);;
//│ 		let rec enumFromTo_lz_lh__d5 _lh_enumFromTo_lz_arg1_0 _lh_enumFromTo_lz_arg2_0 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_0 <= _lh_enumFromTo_lz_arg2_0) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_0, ((enumFromTo_lz_lh__d5 (_lh_enumFromTo_lz_arg1_0 + 1)) _lh_enumFromTo_lz_arg2_0)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec assoc_lh__d1 _lh_assoc_arg1_1 _lh_assoc_arg2_1 =
//│ 		  (match _lh_assoc_arg2_1 with
//│ 		    | `LH_C(_lh_assoc_LH_C_0_1, _lh_assoc_LH_C_1_1) -> 
//│ 		      (match _lh_assoc_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_assoc_LH_P2_0_1, _lh_assoc_LH_P2_1_1) -> 
//│ 		          (if (_lh_assoc_arg1_1 = _lh_assoc_LH_P2_0_1) then
//│ 		            _lh_assoc_LH_P2_1_1
//│ 		          else
//│ 		            ((assoc_lh__d1 _lh_assoc_arg1_1) _lh_assoc_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec assoc_lh__d2 _lh_assoc_arg1_0 _lh_assoc_arg2_0 =
//│ 		  (match _lh_assoc_arg2_0 with
//│ 		    | `LH_C(_lh_assoc_LH_C_0_0, _lh_assoc_LH_C_1_0) -> 
//│ 		      (match _lh_assoc_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_assoc_LH_P2_0_0, _lh_assoc_LH_P2_1_0) -> 
//│ 		          (if (_lh_assoc_arg1_0 = _lh_assoc_LH_P2_0_0) then
//│ 		            _lh_assoc_LH_P2_1_0
//│ 		          else
//│ 		            ((assoc_lh__d2 _lh_assoc_arg1_0) _lh_assoc_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec hash_lh__d1 _lh_hash_arg1_0 _lh_hash_arg2_0 =
//│ 		  (match _lh_hash_arg2_0 with
//│ 		    | `K(_lh_hash_K_0_0, _lh_hash_K_1_0, _lh_hash_K_2_0, _lh_hash_K_3_0) -> 
//│ 		      ((_lh_hash_K_3_0 + ((assoc_lh__d1 _lh_hash_K_1_0) _lh_hash_arg1_0)) + ((assoc_lh__d2 _lh_hash_K_2_0) _lh_hash_arg1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec enumFromTo_lz_lh__d3 _lh_enumFromTo_lz_arg1_2 _lh_enumFromTo_lz_arg2_2 =
//│ 		  (lazy (if (_lh_enumFromTo_lz_arg1_2 <= _lh_enumFromTo_lz_arg2_2) then
//│ 		    (`LH_C(_lh_enumFromTo_lz_arg1_2, ((enumFromTo_lz_lh__d3 (_lh_enumFromTo_lz_arg1_2 + 1)) _lh_enumFromTo_lz_arg2_2)))
//│ 		  else
//│ 		    (`LH_N)));;
//│ 		let rec findhash'_lh__d1 _lh_findhash'_arg1_0 _lh_findhash'_arg2_0 _lh_findhash'_arg3_0 =
//│ 		  (match _lh_findhash'_arg3_0 with
//│ 		    | `LH_N -> 
//│ 		      (`YesIts(1, _lh_findhash'_arg2_0))
//│ 		    | `LH_C(_lh_findhash'_LH_C_0_0, _lh_findhash'_LH_C_1_0) -> 
//│ 		      (match _lh_findhash'_LH_C_0_0 with
//│ 		        | `K(_lh_findhash'_K_0_0, _lh_findhash'_K_1_0, _lh_findhash'_K_2_0, _lh_findhash'_K_3_0) -> 
//│ 		          (let rec try_0 = (fun newAssocs_0 -> 
//│ 		            (let rec newCharAssocs_0 = ((mappend_lh__d3 newAssocs_0) _lh_findhash'_arg2_0) in
//│ 		              (let rec _lh_matchIdent_8 = ((hinsert_lh__d1 ((hash_lh__d1 newCharAssocs_0) (`K(_lh_findhash'_K_0_0, _lh_findhash'_K_1_0, _lh_findhash'_K_2_0, _lh_findhash'_K_3_0)))) _lh_findhash'_arg1_0) in
//│ 		                (match _lh_matchIdent_8 with
//│ 		                  | `Nothing -> 
//│ 		                    (`NotEver(1))
//│ 		                  | `Just(_lh_findhash'_Just_0_0) -> 
//│ 		                    (((findhash'_lh__d1 _lh_findhash'_Just_0_0) newCharAssocs_0) _lh_findhash'_LH_C_1_0)
//│ 		                  | _ -> 
//│ 		                    (failwith "error"))))) in
//│ 		            (let rec _lh_matchIdent_9 = (`LH_P2(((assocm_lh__d1 _lh_findhash'_K_1_0) _lh_findhash'_arg2_0), ((assocm_lh__d2 _lh_findhash'_K_2_0) _lh_findhash'_arg2_0))) in
//│ 		              (match _lh_matchIdent_9 with
//│ 		                | `LH_P2(_lh_findhash'_LH_P2_0_0, _lh_findhash'_LH_P2_1_0) -> 
//│ 		                  (match _lh_findhash'_LH_P2_0_0 with
//│ 		                    | `Nothing -> 
//│ 		                      (match _lh_findhash'_LH_P2_1_0 with
//│ 		                        | `Nothing -> 
//│ 		                          (if (_lh_findhash'_K_1_0 = _lh_findhash'_K_2_0) then
//│ 		                            ((firstSuccess_lh__d3 (fun m_0 -> 
//│ 		                              (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_1_0, m_0)), (`LH_N)))))) ((enumFromTo_lz_lh__d3 0) maxval_lh__d3))
//│ 		                          else
//│ 		                            ((firstSuccess_lh__d4 (fun mn_0 -> 
//│ 		                              (let rec _lh_matchIdent_1_0 = mn_0 in
//│ 		                                (match _lh_matchIdent_1_0 with
//│ 		                                  | `LH_P2(_lh_findhash'_LH_P2_0_1, _lh_findhash'_LH_P2_1_1) -> 
//│ 		                                    (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_1_0, _lh_findhash'_LH_P2_0_1)), (`LH_C((`LH_P2(_lh_findhash'_K_2_0, _lh_findhash'_LH_P2_1_1)), (`LH_N))))))
//│ 		                                  | _ -> 
//│ 		                                    (failwith "error"))))) (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		                              (match (Lazy.force _lh_listcomp_fun_para_1) with
//│ 		                                | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                                  (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		                                    (match (Lazy.force _lh_listcomp_fun_para_2) with
//│ 		                                      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		                                        (lazy (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_h_2)), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))))
//│ 		                                      | `LH_N -> 
//│ 		                                        (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))) in
//│ 		                                    (_lh_listcomp_fun_2 ((enumFromTo_lz_lh__d4 0) maxval_lh__d2)))
//│ 		                                | `LH_N -> 
//│ 		                                  (lazy (`LH_N)))) in
//│ 		                              (_lh_listcomp_fun_1 ((enumFromTo_lz_lh__d5 0) maxval_lh__d5)))))
//│ 		                        | `Just(_lh_findhash'_Just_0_1) -> 
//│ 		                          ((firstSuccess_lh__d1 (fun m_1 -> 
//│ 		                            (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_1_0, m_1)), (`LH_N)))))) ((enumFromTo_lz_lh__d1 0) maxval_lh__d4))
//│ 		                        | _ -> 
//│ 		                          (failwith "error"))
//│ 		                    | `Just(_lh_findhash'_Just_0_2) -> 
//│ 		                      (match _lh_findhash'_LH_P2_1_0 with
//│ 		                        | `Nothing -> 
//│ 		                          ((firstSuccess_lh__d2 (fun n_0 -> 
//│ 		                            (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_2_0, n_0)), (`LH_N)))))) ((enumFromTo_lz_lh__d2 0) maxval_lh__d1))
//│ 		                        | `Just(_lh_findhash'_Just_0_3) -> 
//│ 		                          (try_0 (`LH_N))
//│ 		                        | _ -> 
//│ 		                          (failwith "error"))
//│ 		                    | _ -> 
//│ 		                      (failwith "error"))
//│ 		                | _ -> 
//│ 		                  (failwith "error"))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec findhash_lh__d1 _lh_findhash_arg1_0 =
//│ 		  (((findhash'_lh__d1 (`H((`Nothing), (`Nothing), (`LH_N)))) (`LH_N)) _lh_findhash_arg1_0);;
//│ 		let rec take_lh__d1 n_1 ls_1_6 =
//│ 		  (if (n_1 > 0) then
//│ 		    (match ls_1_6 with
//│ 		      | `LH_C(h_2_1, t_2_1) -> 
//│ 		        (`LH_C(h_2_1, ((take_lh__d1 (n_1 - 1)) t_2_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec map_lh__d1 f_8 ls_1_3 =
//│ 		  (match ls_1_3 with
//│ 		    | `LH_C(h_1_8, t_1_8) -> 
//│ 		      (`LH_C((f_8 h_1_8), ((map_lh__d1 f_8) t_1_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec length_lh__d1 ls_1_5 =
//│ 		  (match ls_1_5 with
//│ 		    | `LH_C(h_2_0, t_2_0) -> 
//│ 		      (1 + (length_lh__d1 t_2_0))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec attribkeys_lh__d1 _lh_attribkeys_arg1_3 =
//│ 		  ((map_lh__d1 (fun k_3 -> 
//│ 		    (`K(k_3, (head_lh__d1 k_3), (last_lh__d1 k_3), (length_lh__d1 k_3))))) _lh_attribkeys_arg1_3);;
//│ 		let rec keys_lh__d1 =
//│ 		  (`LH_C((`LH_C('c', (`LH_C('a', (`LH_C('s', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('c', (`LH_C('l', (`LH_C('a', (`LH_C('s', (`LH_C('s', (`LH_N))))))))))), (`LH_C((`LH_C('d', (`LH_C('a', (`LH_C('t', (`LH_C('a', (`LH_N))))))))), (`LH_C((`LH_C('d', (`LH_C('e', (`LH_C('f', (`LH_C('a', (`LH_C('u', (`LH_C('l', (`LH_C('t', (`LH_N))))))))))))))), (`LH_C((`LH_C('d', (`LH_C('e', (`LH_C('r', (`LH_C('i', (`LH_C('v', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))))))), (`LH_C((`LH_C('e', (`LH_C('l', (`LH_C('s', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('h', (`LH_C('i', (`LH_C('d', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('f', (`LH_N))))), (`LH_C((`LH_C('i', (`LH_C('m', (`LH_C('p', (`LH_C('o', (`LH_C('r', (`LH_C('t', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_N))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('f', (`LH_C('i', (`LH_C('x', (`LH_N))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('f', (`LH_C('i', (`LH_C('x', (`LH_C('l', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('s', (`LH_C('t', (`LH_C('a', (`LH_C('n', (`LH_C('c', (`LH_C('e', (`LH_N))))))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('t', (`LH_C('e', (`LH_C('r', (`LH_C('f', (`LH_C('a', (`LH_C('c', (`LH_C('e', (`LH_N))))))))))))))))))), (`LH_C((`LH_C('l', (`LH_C('e', (`LH_C('t', (`LH_N))))))), (`LH_C((`LH_C('m', (`LH_C('o', (`LH_C('d', (`LH_C('u', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))))), (`LH_C((`LH_C('o', (`LH_C('f', (`LH_N))))), (`LH_C((`LH_C('r', (`LH_C('e', (`LH_C('n', (`LH_C('a', (`LH_C('m', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))))))), (`LH_C((`LH_C('t', (`LH_C('h', (`LH_C('e', (`LH_C('n', (`LH_N))))))))), (`LH_C((`LH_C('t', (`LH_C('o', (`LH_N))))), (`LH_C((`LH_C('t', (`LH_C('y', (`LH_C('p', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('w', (`LH_C('h', (`LH_C('e', (`LH_C('r', (`LH_C('e', (`LH_N))))))))))), (`LH_N)))))))))))))))))))))))))))))))))))))))))))));;
//│ 		let rec member_lh__d2 _lh_member_arg1_1 _lh_member_arg2_1 =
//│ 		  (match _lh_member_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | `LH_C(_lh_member_LH_C_0_1, _lh_member_LH_C_1_1) -> 
//│ 		      ((_lh_member_arg1_1 = _lh_member_LH_C_0_1) || ((member_lh__d2 _lh_member_arg1_1) _lh_member_LH_C_1_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec union_lh__d1 _lh_union_arg1_0 _lh_union_arg2_0 =
//│ 		  ((mappend_lh__d4 _lh_union_arg1_0) (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		    (match _lh_listcomp_fun_para_0 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		        (if (not ((member_lh__d2 _lh_listcomp_fun_ls_h_0) _lh_union_arg1_0)) then
//│ 		          (`LH_C(_lh_listcomp_fun_ls_h_0, (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		        else
//│ 		          (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_0 _lh_union_arg2_0)));;
//│ 		let rec ends_lh__d1 _lh_ends_arg1_3 =
//│ 		  (match _lh_ends_arg1_3 with
//│ 		    | `K(_lh_ends_K_0_3, _lh_ends_K_1_3, _lh_ends_K_2_3, _lh_ends_K_3_3) -> 
//│ 		      (`LH_C(_lh_ends_K_1_3, (`LH_C(_lh_ends_K_2_3, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec ends_lh__d2 _lh_ends_arg1_2 =
//│ 		  (match _lh_ends_arg1_2 with
//│ 		    | `K(_lh_ends_K_0_2, _lh_ends_K_1_2, _lh_ends_K_2_2, _lh_ends_K_3_2) -> 
//│ 		      (`LH_C(_lh_ends_K_1_2, (`LH_C(_lh_ends_K_2_2, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec all_lh__d1 _lh_all_arg1_0 _lh_all_arg2_0 =
//│ 		  (match _lh_all_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_all_LH_C_0_0, _lh_all_LH_C_1_0) -> 
//│ 		      (if (_lh_all_arg1_0 _lh_all_LH_C_0_0) then
//│ 		        ((all_lh__d1 _lh_all_arg1_0) _lh_all_LH_C_1_0)
//│ 		      else
//│ 		        false)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec member_lh__d1 _lh_member_arg1_2 _lh_member_arg2_2 =
//│ 		  (match _lh_member_arg2_2 with
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | `LH_C(_lh_member_LH_C_0_2, _lh_member_LH_C_1_2) -> 
//│ 		      ((_lh_member_arg1_2 = _lh_member_LH_C_0_2) || ((member_lh__d1 _lh_member_arg1_2) _lh_member_LH_C_1_2))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec subset_lh__d1 _lh_subset_arg1_0 _lh_subset_arg2_0 =
//│ 		  ((all_lh__d1 (fun x_0 -> 
//│ 		    ((member_lh__d1 x_0) _lh_subset_arg2_0))) _lh_subset_arg1_0);;
//│ 		let rec select_lh__d1 _lh_select_arg1_0 _lh_select_arg2_0 _lh_select_arg3_0 =
//│ 		  (match _lh_select_arg3_0 with
//│ 		    | `LH_P2(_lh_select_LH_P2_0_0, _lh_select_LH_P2_1_0) -> 
//│ 		      (if (_lh_select_arg1_0 _lh_select_arg2_0) then
//│ 		        (`LH_P2((`LH_C(_lh_select_arg2_0, _lh_select_LH_P2_0_0)), _lh_select_LH_P2_1_0))
//│ 		      else
//│ 		        (`LH_P2(_lh_select_LH_P2_0_0, (`LH_C(_lh_select_arg2_0, _lh_select_LH_P2_1_0)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec partition'_lh__d1 _lh_partition'_arg1_0 =
//│ 		  ((foldr_lh__d1 (select_lh__d1 _lh_partition'_arg1_0)) (`LH_P2((`LH_N), (`LH_N))));;
//│ 		let rec mappend_lh__d2 xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_1_7, t_1_7) -> 
//│ 		      (`LH_C(h_1_7, ((mappend_lh__d2 t_1_7) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec blocked'_lh__d1 _lh_blocked'_arg1_0 _lh_blocked'_arg2_0 =
//│ 		  (match _lh_blocked'_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_blocked'_LH_C_0_0, _lh_blocked'_LH_C_1_0) -> 
//│ 		      (let rec ds'_0 = ((union_lh__d1 _lh_blocked'_arg1_0) (ends_lh__d1 _lh_blocked'_LH_C_0_0)) in
//│ 		        (let rec _lh_matchIdent_1_1 = ((partition'_lh__d1 (fun x_1 -> 
//│ 		          ((subset_lh__d1 (ends_lh__d2 x_1)) ds'_0))) _lh_blocked'_LH_C_1_0) in
//│ 		          (match _lh_matchIdent_1_1 with
//│ 		            | `LH_P2(_lh_blocked'_LH_P2_0_0, _lh_blocked'_LH_P2_1_0) -> 
//│ 		              ((mappend_lh__d2 (`LH_C(_lh_blocked'_LH_C_0_0, _lh_blocked'_LH_P2_0_0))) ((blocked'_lh__d1 ds'_0) _lh_blocked'_LH_P2_1_0))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec blocked_lh__d1 _lh_blocked_arg1_0 =
//│ 		  ((blocked'_lh__d1 (`LH_N)) _lh_blocked_arg1_0);;
//│ 		let rec keys_lh__d2 =
//│ 		  (`LH_C((`LH_C('c', (`LH_C('a', (`LH_C('s', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('c', (`LH_C('l', (`LH_C('a', (`LH_C('s', (`LH_C('s', (`LH_N))))))))))), (`LH_C((`LH_C('d', (`LH_C('a', (`LH_C('t', (`LH_C('a', (`LH_N))))))))), (`LH_C((`LH_C('d', (`LH_C('e', (`LH_C('f', (`LH_C('a', (`LH_C('u', (`LH_C('l', (`LH_C('t', (`LH_N))))))))))))))), (`LH_C((`LH_C('d', (`LH_C('e', (`LH_C('r', (`LH_C('i', (`LH_C('v', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))))))), (`LH_C((`LH_C('e', (`LH_C('l', (`LH_C('s', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('h', (`LH_C('i', (`LH_C('d', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('f', (`LH_N))))), (`LH_C((`LH_C('i', (`LH_C('m', (`LH_C('p', (`LH_C('o', (`LH_C('r', (`LH_C('t', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_N))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('f', (`LH_C('i', (`LH_C('x', (`LH_N))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('f', (`LH_C('i', (`LH_C('x', (`LH_C('l', (`LH_N))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('s', (`LH_C('t', (`LH_C('a', (`LH_C('n', (`LH_C('c', (`LH_C('e', (`LH_N))))))))))))))))), (`LH_C((`LH_C('i', (`LH_C('n', (`LH_C('t', (`LH_C('e', (`LH_C('r', (`LH_C('f', (`LH_C('a', (`LH_C('c', (`LH_C('e', (`LH_N))))))))))))))))))), (`LH_C((`LH_C('l', (`LH_C('e', (`LH_C('t', (`LH_N))))))), (`LH_C((`LH_C('m', (`LH_C('o', (`LH_C('d', (`LH_C('u', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))))), (`LH_C((`LH_C('o', (`LH_C('f', (`LH_N))))), (`LH_C((`LH_C('r', (`LH_C('e', (`LH_C('n', (`LH_C('a', (`LH_C('m', (`LH_C('i', (`LH_C('n', (`LH_C('g', (`LH_N))))))))))))))))), (`LH_C((`LH_C('t', (`LH_C('h', (`LH_C('e', (`LH_C('n', (`LH_N))))))))), (`LH_C((`LH_C('t', (`LH_C('o', (`LH_N))))), (`LH_C((`LH_C('t', (`LH_C('y', (`LH_C('p', (`LH_C('e', (`LH_N))))))))), (`LH_C((`LH_C('w', (`LH_C('h', (`LH_C('e', (`LH_C('r', (`LH_C('e', (`LH_N))))))))))), (`LH_N)))))))))))))))))))))))))))))))))))))))))))));;
//│ 		let rec cichelli_lh__d1 _lh_cichelli_arg1_0 =
//│ 		  (let rec attribkeys'_0 = (attribkeys_lh__d1 ((mappend_lh__d1 keys_lh__d2) ((take_lh__d1 (_lh_cichelli_arg1_0 mod 2)) keys_lh__d1))) in
//│ 		    (let rec hashkeys_0 = ((fun _lh_funcomp_x_0 -> 
//│ 		      (blocked_lh__d1 (freqsorted_lh__d1 _lh_funcomp_x_0))) attribkeys'_0) in
//│ 		      (findhash_lh__d1 hashkeys_0)));;
//│ 		let rec prog_lh__d1 _lh_prog_arg1_0 =
//│ 		  (cichelli_lh__d1 _lh_prog_arg1_0);;
//│ 		let rec testCichelli_nofib_lh__d1 _lh_testCichelli_nofib_arg1_0 =
//│ 		  (prog_lh__d1 _lh_testCichelli_nofib_arg1_0);;
//│ 		(testCichelli_nofib_lh__d1 6)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< after expansion <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f²(h⁴) map_lh_₂(f², t⁴)]: 458 --->
//│ 	case lss¹ of {LH_C h³ t³ => mappend_lh_₄(h³, concat_lh_₁(t³)) | LH_N  => [LH_N]}: 447
//│ [LH_N]: 459 --->
//│ 	case lss¹ of {LH_C h³ t³ => mappend_lh_₄(h³, concat_lh_₁(t³)) | LH_N  => [LH_N]}: 447
//│ [LH_C f³(h⁶) map_lz_lh_₄(f³, t⁶)]: 803 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 787
//│ [LH_N]: 804 --->
//│ 	case _lh_matchIdent⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 787
//│ [LH_C f⁴(h⁷) map_lz_lh_₃(f⁴, t⁷)]: 853 --->
//│ 	case _lh_matchIdent² of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 837
//│ [LH_N]: 854 --->
//│ 	case _lh_matchIdent² of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 837
//│ [LH_C f⁵(h⁸) map_lz_lh_₂(f⁵, t⁸)]: 903 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ in case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 887
//│ [LH_N]: 904 --->
//│ 	case _lh_matchIdent⁴ of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ in case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 887
//│ [LH_C f⁶(h¹²) map_lz_lh_₁(f⁶, t¹²)]: 1103 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 1087
//│ [LH_N]: 1104 --->
//│ 	case _lh_matchIdent⁶ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 1087
//│ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 1203 --->
//│ 	case xs² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₂(t¹⁷, ys²)] | LH_N  => ys²}: 1609
//│ [LH_C _lh_enumFromTo_lz_arg1⁰ enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)]: 1363 --->
//│ 	case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])}: 1786
//│ [LH_N]: 1364 --->
//│ 	case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])}: 1786
//│ [LH_C _lh_enumFromTo_lz_arg1¹ enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)]: 1400 --->
//│ 	case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1773
//│ [LH_N]: 1401 --->
//│ 	case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1773
//│ [LH_C _lh_enumFromTo_lz_arg1² enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)]: 1444 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷ t⁷ => [LH_C f⁴(h⁷) map_lz_lh_₃(f⁴, t⁷)] | LH_N  => [LH_N]}: 855
//│ [LH_N]: 1445 --->
//│ 	case force⁰(ls⁵) of {LH_C h⁷ t⁷ => [LH_C f⁴(h⁷) map_lz_lh_₃(f⁴, t⁷)] | LH_N  => [LH_N]}: 855
//│ [LH_C _lh_enumFromTo_lz_arg1³ enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)]: 1466 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁸ t⁸ => [LH_C f⁵(h⁸) map_lz_lh_₂(f⁵, t⁸)] | LH_N  => [LH_N]}: 905
//│ [LH_N]: 1467 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁸ t⁸ => [LH_C f⁵(h⁸) map_lz_lh_₂(f⁵, t⁸)] | LH_N  => [LH_N]}: 905
//│ [Nothing]: 1473 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₅(0, maxval_lh_₅))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1839
//│ [Just _lh_assocm_LH_P2_1¹]: 1481 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₅(0, maxval_lh_₅))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1839
//│ [LH_C _lh_enumFromTo_lz_arg1⁴ enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)]: 1510 --->
//│ 	case force⁰(ls¹⁰) of {LH_C h¹² t¹² => [LH_C f⁶(h¹²) map_lz_lh_₁(f⁶, t¹²)] | LH_N  => [LH_N]}: 1105
//│ [LH_N]: 1511 --->
//│ 	case force⁰(ls¹⁰) of {LH_C h¹² t¹² => [LH_C f⁶(h¹²) map_lz_lh_₁(f⁶, t¹²)] | LH_N  => [LH_N]}: 1105
//│ [LH_N]: 1533 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 1194
//│ [LH_C _lh_ends_K_2² [LH_N]]: 1534 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 1194
//│ [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1535 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 1194
//│ [LH_N]: 1586 --->
//│ 	case xs² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₂(t¹⁷, ys²)] | LH_N  => ys²}: 1609
//│ [LH_N]: 1594 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1560
//│ [LH_C _lh_ends_K_2³ [LH_N]]: 1595 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1560
//│ [LH_C _lh_ends_K_1³ [LH_C _lh_ends_K_2³ [LH_N]]]: 1596 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1560
//│ [LH_C h¹⁷ mappend_lh_₂(t¹⁷, ys²)]: 1607 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₁(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₂(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₅(0, maxval_lh_₅))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1847
//│ [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1681 --->
//│ 	case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₁(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₂(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 1425
//│ [LH_P2 assocm_lh_₁(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₂(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1711 --->
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₅(0, maxval_lh_₅))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1841
//│ [LH_N]: 1852 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₁(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₂(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₅(0, maxval_lh_₅))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1847
//│ [LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1876 --->
//│ 	case xs² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₂(t¹⁷, ys²)] | LH_N  => ys²}: 1609
//│ [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)]: 1908 --->
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C f⁸(h¹⁸) map_lh_₁(f⁸, t¹⁸)] | LH_N  => [LH_N]}: 1623
//│ [LH_N]: 1909 --->
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C f⁸(h¹⁸) map_lh_₁(f⁸, t¹⁸)] | LH_N  => [LH_N]}: 1623
//│ [LH_N]: 1911 --->
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C f⁸(h¹⁸) map_lh_₁(f⁸, t¹⁸)] | LH_N  => [LH_N]}: 1623
//│ [LH_N]: 2157 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]: 2158 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]: 2159 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]: 2160 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]: 2161 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]: 2162 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]: 2163 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]: 2164 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]: 2165 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]: 2166 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]: 2167 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]: 2168 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]: 2169 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]: 2170 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]: 2171 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]: 2172 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]: 2173 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]: 2174 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]: 2175 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]: 2176 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]: 2177 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]: 2178 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]: 2179 --->
//│ 	case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219
//│ [LH_C h²² mappend_lh_₁(t²², ys³)]: 2217 --->
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C f⁸(h¹⁸) map_lh_₁(f⁸, t¹⁸)] | LH_N  => [LH_N]}: 1623
//│ [LH_N]: 2464 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]: 2465 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]: 2466 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]: 2467 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]: 2468 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]: 2469 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]: 2470 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]: 2471 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]: 2472 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]: 2473 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]: 2474 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]: 2475 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]: 2476 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]: 2477 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]: 2478 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]: 2479 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]: 2480 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]: 2481 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]: 2482 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]: 2483 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]: 2484 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]: 2485 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ [LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]: 2486 --->
//│ 	case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910
//│ ------------------
//│ case lss¹ of {LH_C h³ t³ => mappend_lh_₄(h³, concat_lh_₁(t³)) | LH_N  => [LH_N]}: 447 --->
//│ 	[LH_C f²(h⁴) map_lh_₂(f², t⁴)]: 458
//│ 	[LH_N]: 459
//│ case _lh_matchIdent⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent¹ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 787 --->
//│ 	[LH_C f³(h⁶) map_lz_lh_₄(f³, t⁶)]: 803
//│ 	[LH_N]: 804
//│ case _lh_matchIdent² of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent³ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 837 --->
//│ 	[LH_C f⁴(h⁷) map_lz_lh_₃(f⁴, t⁷)]: 853
//│ 	[LH_N]: 854
//│ case force⁰(ls⁵) of {LH_C h⁷ t⁷ => [LH_C f⁴(h⁷) map_lz_lh_₃(f⁴, t⁷)] | LH_N  => [LH_N]}: 855 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1² enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)]: 1444
//│ 	[LH_N]: 1445
//│ case _lh_matchIdent⁴ of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent⁵ = _lh_first_LH_C_0²
//│ in case _lh_matchIdent⁵ of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 887 --->
//│ 	[LH_C f⁵(h⁸) map_lz_lh_₂(f⁵, t⁸)]: 903
//│ 	[LH_N]: 904
//│ case force⁰(ls⁶) of {LH_C h⁸ t⁸ => [LH_C f⁵(h⁸) map_lz_lh_₂(f⁵, t⁸)] | LH_N  => [LH_N]}: 905 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1³ enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)]: 1466
//│ 	[LH_N]: 1467
//│ case _lh_matchIdent⁶ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent⁷ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent⁷ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 1087 --->
//│ 	[LH_C f⁶(h¹²) map_lz_lh_₁(f⁶, t¹²)]: 1103
//│ 	[LH_N]: 1104
//│ case force⁰(ls¹⁰) of {LH_C h¹² t¹² => [LH_C f⁶(h¹²) map_lz_lh_₁(f⁶, t¹²)] | LH_N  => [LH_N]}: 1105 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1⁴ enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)]: 1510
//│ 	[LH_N]: 1511
//│ case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 1194 --->
//│ 	[LH_N]: 1533
//│ 	[LH_C _lh_ends_K_2² [LH_N]]: 1534
//│ 	[LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1535
//│ case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₁(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₂(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 1425 --->
//│ 	[K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1681
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 1560 --->
//│ 	[LH_N]: 1594
//│ 	[LH_C _lh_ends_K_2³ [LH_N]]: 1595
//│ 	[LH_C _lh_ends_K_1³ [LH_C _lh_ends_K_2³ [LH_N]]]: 1596
//│ case xs² of {LH_C h¹⁷ t¹⁷ => [LH_C h¹⁷ mappend_lh_₂(t¹⁷, ys²)] | LH_N  => ys²}: 1609 --->
//│ 	[LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 1203
//│ 	[LH_N]: 1586
//│ 	[LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1876
//│ case ls¹³ of {LH_C h¹⁸ t¹⁸ => [LH_C f⁸(h¹⁸) map_lh_₁(f⁸, t¹⁸)] | LH_N  => [LH_N]}: 1623 --->
//│ 	[LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)]: 1908
//│ 	[LH_N]: 1909
//│ 	[LH_N]: 1911
//│ 	[LH_C h²² mappend_lh_₁(t²², ys³)]: 2217
//│ case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1773 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1¹ enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)]: 1400
//│ 	[LH_N]: 1401
//│ case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])}: 1786 --->
//│ 	[LH_C _lh_enumFromTo_lz_arg1⁰ enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)]: 1363
//│ 	[LH_N]: 1364
//│ case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₅(0, maxval_lh_₅))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1839 --->
//│ 	[Nothing]: 1473
//│ 	[Just _lh_assocm_LH_P2_1¹]: 1481
//│ case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₅(0, maxval_lh_₅))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1841 --->
//│ 	[LH_P2 assocm_lh_₁(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₂(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1711
//│ case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁸ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let _lh_matchIdent⁹ = [LH_P2 assocm_lh_₁(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₂(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁹ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> let _lh_matchIdent¹⁰ = mn⁰
//│ in case _lh_matchIdent¹⁰ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case force⁰(_lh_listcomp_fun_para¹) of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case force⁰(_lh_listcomp_fun_para²) of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]) | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lz_lh_₄(0, maxval_lh_₂)) | LH_N  => lazy⁰([LH_N])})
//│ in _lh_listcomp_fun¹(enumFromTo_lz_lh_₅(0, maxval_lh_₅))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1847 --->
//│ 	[LH_C h¹⁷ mappend_lh_₂(t¹⁷, ys²)]: 1607
//│ 	[LH_N]: 1852
//│ case ls¹⁶ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1910 --->
//│ 	[LH_N]: 2464
//│ 	[LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]: 2465
//│ 	[LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]: 2466
//│ 	[LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]: 2467
//│ 	[LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]: 2468
//│ 	[LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]: 2469
//│ 	[LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]: 2470
//│ 	[LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]: 2471
//│ 	[LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]: 2472
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]: 2473
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]: 2474
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]: 2475
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]: 2476
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]: 2477
//│ 	[LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]: 2478
//│ 	[LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]: 2479
//│ 	[LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]: 2480
//│ 	[LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]: 2481
//│ 	[LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]: 2482
//│ 	[LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]: 2483
//│ 	[LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]: 2484
//│ 	[LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]: 2485
//│ 	[LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]: 2486
//│ case xs³ of {LH_C h²² t²² => [LH_C h²² mappend_lh_₁(t²², ys³)] | LH_N  => ys³}: 2219 --->
//│ 	[LH_N]: 2157
//│ 	[LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]: 2158
//│ 	[LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]: 2159
//│ 	[LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]: 2160
//│ 	[LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]: 2161
//│ 	[LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]: 2162
//│ 	[LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]: 2163
//│ 	[LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]: 2164
//│ 	[LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]: 2165
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]: 2166
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]: 2167
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]: 2168
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]: 2169
//│ 	[LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]: 2170
//│ 	[LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]: 2171
//│ 	[LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]: 2172
//│ 	[LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]: 2173
//│ 	[LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]: 2174
//│ 	[LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]: 2175
//│ 	[LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]: 2176
//│ 	[LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]: 2177
//│ 	[LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]: 2178
//│ 	[LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]: 2179
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testCichelli_nofib_lh_₁(primId⁰(6))
//│ def all_lh_₁(_lh_all_arg1³, _lh_all_arg2⁰) = _lh_all_arg2⁰(_lh_all_arg1³)
//│ def assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_arg2¹) = case _lh_assoc_arg2¹ of {
//│ 	LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_arg2⁰) = case _lh_assoc_arg2⁰ of {
//│ 	LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₁(_lh_assocm_arg1⁰, _lh_assocm_arg2⁰) = case _lh_assocm_arg2⁰ of {
//│ 	LH_N  => (fun _lh_findhash'_K_1⁰ -> (fun _lh_findhash'_K_2⁰ -> (fun _lh_findhash'_LH_P2_1⁰ -> (fun try⁰ -> case _lh_findhash'_LH_P2_1⁰ of {
//│ 		Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₃((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lz_lh_₃(0, maxval_lh_₃)) else firstSuccess_lh_₄((fun mn⁰ -> 
//│ 			let _lh_matchIdent⁰ = mn⁰
//│ 			in case _lh_matchIdent⁰ of {
//│ 				LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0⁰] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]])
//│ 				| _  => error⁰}), 
//│ 			let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> force⁰(_lh_listcomp_fun_para⁰, _lh_listcomp_fun⁰))
//│ 			in _lh_listcomp_fun⁰(enumFromTo_lz_lh_₅(0, maxval_lh_₅)))
//│ 		| Just _lh_findhash'_Just_0⁰ => firstSuccess_lh_₁((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lz_lh_₁(0, maxval_lh_₄))
//│ 		| _  => error⁰}))))
//│ 	| LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then 
//│ 			let _lh_findhash'_Just_0¹ = _lh_assocm_LH_P2_1⁰
//│ 			in (fun _lh_findhash'_K_1¹ -> (fun _lh_findhash'_K_2¹ -> (fun _lh_findhash'_LH_P2_1² -> (fun try¹ -> case _lh_findhash'_LH_P2_1² of {
//│ 				Nothing  => firstSuccess_lh_₂((fun n⁰ -> try¹([LH_C [LH_P2 _lh_findhash'_K_2¹ n⁰] [LH_N]])), enumFromTo_lz_lh_₂(0, maxval_lh_₁))
//│ 				| Just _lh_findhash'_Just_0² => try¹([LH_N])
//│ 				| _  => error⁰})))) else assocm_lh_₁(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₂(_lh_assocm_arg1¹, _lh_assocm_arg2¹) = case _lh_assocm_arg2¹ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₂(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def attribkeys_lh_₁(_lh_attribkeys_arg1²) = map_lh_₁((fun k² -> [K k² head_lh_₁(k²) last_lh_₁(k²) length_lh_₁(k²)]), _lh_attribkeys_arg1²)
//│ def attribkeys_lh_₂(_lh_attribkeys_arg1³) = map_lh_₄((fun k³ -> [K k³ head_lh_₁(k³) last_lh_₁(k³) length_lh_₆(k³)]), _lh_attribkeys_arg1³)
//│ def attribkeys_lh_₃(_lh_attribkeys_arg1⁰) = map_lh_₄((fun k⁰ -> [K k⁰ head_lh_₁(k⁰) last_lh_₁(k⁰) length_lh_₆(k⁰)]), _lh_attribkeys_arg1⁰)
//│ def attribkeys_lh_₄(_lh_attribkeys_arg1¹) = map_lh_₄((fun k¹ -> [K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₆(k¹)]), _lh_attribkeys_arg1¹)
//│ def blocked'_lh_₁(_lh_blocked'_arg1⁰, _lh_blocked'_arg2⁰) = case _lh_blocked'_arg2⁰ of {
//│ 	LH_N  => (fun _lh_findhash'_arg2² -> (fun _lh_findhash'_arg1² -> [YesIts 1 _lh_findhash'_arg2²]))
//│ 	| LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => 
//│ 		let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₁(_lh_blocked'_LH_C_0⁰))
//│ 		in let _lh_matchIdent¹¹ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₂(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ 		in case _lh_matchIdent¹¹ of {
//│ 			LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂(
//│ 				let t¹⁰⁶ = _lh_blocked'_LH_P2_0⁰
//│ 				in let h¹⁰⁶ = _lh_blocked'_LH_C_0⁰
//│ 				in (fun ys²⁹ -> 
//│ 					let _lh_findhash'_LH_C_1¹ = mappend_lh_₂(t¹⁰⁶, ys²⁹)
//│ 					in let _lh_findhash'_LH_C_0¹ = h¹⁰⁶
//│ 					in (fun _lh_findhash'_arg2³ -> (fun _lh_findhash'_arg1³ -> case _lh_findhash'_LH_C_0¹ of {
//│ 						K _lh_findhash'_K_0¹ _lh_findhash'_K_1⁴ _lh_findhash'_K_2⁴ _lh_findhash'_K_3¹ => 
//│ 							let try⁴ = (fun newAssocs¹ -> 
//│ 								let newCharAssocs¹ = mappend_lh_₃(newAssocs¹, _lh_findhash'_arg2³)
//│ 								in let _lh_matchIdent¹² = hinsert_lh_₁(hash_lh_₁(newCharAssocs¹, 
//│ 									let _lh_hash_K_3¹ = _lh_findhash'_K_3¹
//│ 									in let _lh_hash_K_2¹ = _lh_findhash'_K_2⁴
//│ 									in let _lh_hash_K_1¹ = _lh_findhash'_K_1⁴
//│ 									in let _lh_hash_K_0¹ = _lh_findhash'_K_0¹
//│ 									in (fun _lh_hash_arg1² -> ((_lh_hash_K_3¹ + assoc_lh_₁(_lh_hash_K_1¹, _lh_hash_arg1²)) + assoc_lh_₂(_lh_hash_K_2¹, _lh_hash_arg1²)))), _lh_findhash'_arg1³)
//│ 								in case _lh_matchIdent¹² of {
//│ 									Nothing  => [NotEver 1]
//│ 									| Just _lh_findhash'_Just_0⁴ => findhash'_lh_₁(_lh_findhash'_Just_0⁴, newCharAssocs¹, _lh_findhash'_LH_C_1¹)
//│ 									| _  => error⁰})
//│ 							in let _lh_matchIdent¹³ = 	
//│ 								let _lh_findhash'_LH_P2_1⁴ = assocm_lh_₂(_lh_findhash'_K_2⁴, _lh_findhash'_arg2³)
//│ 								in let _lh_findhash'_LH_P2_0² = assocm_lh_₁(_lh_findhash'_K_1⁴, _lh_findhash'_arg2³)
//│ 								in (fun _lh_findhash'_K_1⁵ -> (fun _lh_findhash'_K_2⁵ -> (fun try⁵ -> _lh_findhash'_LH_P2_0²(_lh_findhash'_K_1⁵, _lh_findhash'_K_2⁵, _lh_findhash'_LH_P2_1⁴, try⁵))))
//│ 							in _lh_matchIdent¹³(_lh_findhash'_K_1⁴, _lh_findhash'_K_2⁴, try⁴)
//│ 						| _  => error⁰}))), blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def blocked_lh_₁(_lh_blocked_arg1⁰) = blocked'_lh_₁([LH_N], _lh_blocked_arg1⁰)
//│ def cichelli_lh_₁(_lh_cichelli_arg1⁰) = 
//│ 	let attribkeys'⁰ = attribkeys_lh_₁(mappend_lh_₁(keys_lh_₂, take_lh_₁((_lh_cichelli_arg1⁰ % 2), keys_lh_₁)))
//│ 	in let hashkeys⁰ = (fun _lh_funcomp_x⁰ -> blocked_lh_₁(freqsorted_lh_₁(_lh_funcomp_x⁰)))(attribkeys'⁰)
//│ 	in findhash_lh_₁(hashkeys⁰)
//│ def concat_lh_₁(lss¹) = lss¹([lh_Unit])
//│ def concat_lh_₂(lss⁰) = case lss⁰ of {
//│ 	LH_C h⁶ t⁶ => mappend_lh_₄(h⁶, concat_lh_₂(t⁶))
//│ 	| LH_N  => [LH_N]}
//│ def ends_lh_₁(_lh_ends_arg1⁰) = case _lh_ends_arg1⁰ of {
//│ 	K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => 
//│ 		let _lh_listcomp_fun_ls_t³ = 	
//│ 			let _lh_listcomp_fun_ls_t⁴ = (fun _lh_listcomp_fun⁶ -> (fun _lh_union_arg1¹ -> [LH_N]))
//│ 			in let _lh_listcomp_fun_ls_h³ = _lh_ends_K_2⁰
//│ 			in (fun _lh_listcomp_fun⁷ -> (fun _lh_union_arg1² -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h³, _lh_union_arg1²)) then [LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁴)] else _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁴)))
//│ 		in let _lh_listcomp_fun_ls_h⁴ = _lh_ends_K_1⁰
//│ 		in (fun _lh_listcomp_fun⁸ -> (fun _lh_union_arg1³ -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁴, _lh_union_arg1³)) then [LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t³)] else _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t³)))
//│ 	| _  => error⁰}
//│ def ends_lh_₂(_lh_ends_arg1²) = case _lh_ends_arg1² of {
//│ 	K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => 
//│ 		let _lh_all_LH_C_1⁰ = 	
//│ 			let _lh_all_LH_C_1¹ = (fun _lh_all_arg1⁰ -> [True])
//│ 			in let _lh_all_LH_C_0⁰ = _lh_ends_K_2²
//│ 			in (fun _lh_all_arg1¹ -> if _lh_all_arg1¹(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False])
//│ 		in let _lh_all_LH_C_0¹ = _lh_ends_K_1²
//│ 		in (fun _lh_all_arg1² -> if _lh_all_arg1²(_lh_all_LH_C_0¹) then all_lh_₁(_lh_all_arg1², _lh_all_LH_C_1⁰) else [False])
//│ 	| _  => error⁰}
//│ def ends_lh_₃(_lh_ends_arg1¹) = case _lh_ends_arg1¹ of {
//│ 	K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]
//│ 	| _  => error⁰}
//│ def ends_lh_₄(_lh_ends_arg1³) = case _lh_ends_arg1³ of {
//│ 	K _lh_ends_K_0³ _lh_ends_K_1³ _lh_ends_K_2³ _lh_ends_K_3³ => [LH_C _lh_ends_K_1³ [LH_C _lh_ends_K_2³ [LH_N]]]
//│ 	| _  => error⁰}
//│ def enumFromTo_lz_lh_₁(_lh_enumFromTo_lz_arg1⁰, _lh_enumFromTo_lz_arg2⁰) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁰ <= _lh_enumFromTo_lz_arg2⁰) then 
//│ 	let t⁵ = enumFromTo_lz_lh_₁((_lh_enumFromTo_lz_arg1⁰ + 1), _lh_enumFromTo_lz_arg2⁰)
//│ 	in let h⁵ = _lh_enumFromTo_lz_arg1⁰
//│ 	in (fun f² -> 
//│ 		let _lh_first_LH_C_1¹ = map_lz_lh_₁(f², t⁵)
//│ 		in let _lh_first_LH_C_0¹ = f²(h⁵)
//│ 		in (fun _lh_first_arg1⁴ -> 
//│ 			let _lh_matchIdent⁶ = _lh_first_LH_C_0¹
//│ 			in case _lh_matchIdent⁶ of {
//│ 				YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1⁴ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]
//│ 				| NotEver _lh_first_NotEver_0¹ => first_lh_₁((_lh_first_arg1⁴ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹)
//│ 				| _  => error⁰})) else (fun f³ -> (fun _lh_first_arg1⁵ -> [NotEver _lh_first_arg1⁵])))
//│ def enumFromTo_lz_lh_₂(_lh_enumFromTo_lz_arg1⁴, _lh_enumFromTo_lz_arg2⁴) = lazy⁰(if (_lh_enumFromTo_lz_arg1⁴ <= _lh_enumFromTo_lz_arg2⁴) then 
//│ 	let t¹⁰⁵ = enumFromTo_lz_lh_₂((_lh_enumFromTo_lz_arg1⁴ + 1), _lh_enumFromTo_lz_arg2⁴)
//│ 	in let h¹⁰⁵ = _lh_enumFromTo_lz_arg1⁴
//│ 	in (fun f⁵⁹ -> 
//│ 		let _lh_first_LH_C_1³ = map_lz_lh_₂(f⁵⁹, t¹⁰⁵)
//│ 		in let _lh_first_LH_C_0³ = f⁵⁹(h¹⁰⁵)
//│ 		in (fun _lh_first_arg1¹⁰ -> 
//│ 			let _lh_matchIdent¹⁰ = _lh_first_LH_C_0³
//│ 			in case _lh_matchIdent¹⁰ of {
//│ 				YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1¹⁰ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]
//│ 				| NotEver _lh_first_NotEver_0³ => first_lh_₂((_lh_first_arg1¹⁰ + _lh_first_NotEver_0³), _lh_first_LH_C_1³)
//│ 				| _  => error⁰})) else (fun f⁶⁰ -> (fun _lh_first_arg1¹¹ -> [NotEver _lh_first_arg1¹¹])))
//│ def enumFromTo_lz_lh_₃(_lh_enumFromTo_lz_arg1³, _lh_enumFromTo_lz_arg2³) = lazy⁰(if (_lh_enumFromTo_lz_arg1³ <= _lh_enumFromTo_lz_arg2³) then 
//│ 	let t¹² = enumFromTo_lz_lh_₃((_lh_enumFromTo_lz_arg1³ + 1), _lh_enumFromTo_lz_arg2³)
//│ 	in let h¹² = _lh_enumFromTo_lz_arg1³
//│ 	in (fun f⁹ -> 
//│ 		let _lh_first_LH_C_1² = map_lz_lh_₃(f⁹, t¹²)
//│ 		in let _lh_first_LH_C_0² = f⁹(h¹²)
//│ 		in (fun _lh_first_arg1⁸ -> 
//│ 			let _lh_matchIdent⁹ = _lh_first_LH_C_0²
//│ 			in case _lh_matchIdent⁹ of {
//│ 				YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1⁸ + _lh_first_YesIts_0²) _lh_first_YesIts_1²]
//│ 				| NotEver _lh_first_NotEver_0² => first_lh_₃((_lh_first_arg1⁸ + _lh_first_NotEver_0²), _lh_first_LH_C_1²)
//│ 				| _  => error⁰})) else (fun f¹⁰ -> (fun _lh_first_arg1⁹ -> [NotEver _lh_first_arg1⁹])))
//│ def enumFromTo_lz_lh_₄(_lh_enumFromTo_lz_arg1¹, _lh_enumFromTo_lz_arg2¹) = lazy⁰(if (_lh_enumFromTo_lz_arg1¹ <= _lh_enumFromTo_lz_arg2¹) then 
//│ 	let _lh_listcomp_fun_ls_t⁰ = enumFromTo_lz_lh_₄((_lh_enumFromTo_lz_arg1¹ + 1), _lh_enumFromTo_lz_arg2¹)
//│ 	in let _lh_listcomp_fun_ls_h⁰ = _lh_enumFromTo_lz_arg1¹
//│ 	in (fun _lh_listcomp_fun_ls_h¹ -> (fun _lh_listcomp_fun² -> (fun _lh_listcomp_fun_ls_t¹ -> (fun _lh_listcomp_fun³ -> lazy⁰([LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h⁰] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t⁰)]))))) else (fun _lh_listcomp_fun_ls_h² -> (fun _lh_listcomp_fun⁴ -> (fun _lh_listcomp_fun_ls_t² -> (fun _lh_listcomp_fun⁵ -> _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t²))))))
//│ def enumFromTo_lz_lh_₅(_lh_enumFromTo_lz_arg1², _lh_enumFromTo_lz_arg2²) = lazy⁰(if (_lh_enumFromTo_lz_arg1² <= _lh_enumFromTo_lz_arg2²) then 
//│ 	let _lh_listcomp_fun_ls_t⁵ = enumFromTo_lz_lh_₅((_lh_enumFromTo_lz_arg1² + 1), _lh_enumFromTo_lz_arg2²)
//│ 	in let _lh_listcomp_fun_ls_h⁵ = _lh_enumFromTo_lz_arg1²
//│ 	in (fun _lh_listcomp_fun⁹ -> 
//│ 		let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para² -> force⁰(_lh_listcomp_fun_para², _lh_listcomp_fun_ls_h⁵, _lh_listcomp_fun¹⁰, _lh_listcomp_fun_ls_t⁵, _lh_listcomp_fun⁹))
//│ 		in _lh_listcomp_fun¹⁰(enumFromTo_lz_lh_₄(0, maxval_lh_₂))) else (fun _lh_listcomp_fun¹¹ -> lazy⁰([LH_N])))
//│ def findhash'_lh_₁(_lh_findhash'_arg1¹, _lh_findhash'_arg2¹, _lh_findhash'_arg3⁰) = _lh_findhash'_arg3⁰(_lh_findhash'_arg2¹, _lh_findhash'_arg1¹)
//│ def findhash_lh_₁(_lh_findhash_arg1⁰) = findhash'_lh_₁([H [Nothing] [Nothing] [LH_N]], [LH_N], _lh_findhash_arg1⁰)
//│ def firstSuccess_lh_₁(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰) = first_lh_₁(0, map_lz_lh_₁(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰))
//│ def firstSuccess_lh_₂(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³) = first_lh_₂(0, map_lz_lh_₂(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³))
//│ def firstSuccess_lh_₃(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹) = first_lh_₃(0, map_lz_lh_₃(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹))
//│ def firstSuccess_lh_₄(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²) = first_lh_₄(0, map_lz_lh_₄(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²))
//│ def first_lh_₁(_lh_first_arg1¹, _lh_first_arg2¹) = 
//│ 	let _lh_matchIdent² = force⁰(_lh_first_arg2¹)
//│ 	in _lh_matchIdent²(_lh_first_arg1¹)
//│ def first_lh_₂(_lh_first_arg1⁰, _lh_first_arg2⁰) = 
//│ 	let _lh_matchIdent¹ = force⁰(_lh_first_arg2⁰)
//│ 	in _lh_matchIdent¹(_lh_first_arg1⁰)
//│ def first_lh_₃(_lh_first_arg1⁶, _lh_first_arg2²) = 
//│ 	let _lh_matchIdent⁷ = force⁰(_lh_first_arg2²)
//│ 	in _lh_matchIdent⁷(_lh_first_arg1⁶)
//│ def first_lh_₄(_lh_first_arg1⁷, _lh_first_arg2³) = 
//│ 	let _lh_matchIdent⁸ = force⁰(_lh_first_arg2³)
//│ 	in _lh_matchIdent⁸(_lh_first_arg1⁷)
//│ def foldr_lh_₁(f⁵, i⁰, ls⁵) = case ls⁵ of {
//│ 	LH_C h⁷ t⁷ => f⁵(h⁷, foldr_lh_₁(f⁵, i⁰, t⁷))
//│ 	| LH_N  => i⁰}
//│ def freqsorted_lh_₁(_lh_freqsorted_arg1⁰) = _lh_freqsorted_arg1⁰
//│ def freqtab_lh_₁ = histo_lh_₁(concat_lh_₁(map_lh_₂(ends_lh_₃, attribkeys_lh_₂(keys_lh_₃))))
//│ def freqtab_lh_₂ = histo_lh_₂(concat_lh_₂(map_lh_₃(ends_lh_₄, attribkeys_lh_₃(keys_lh_₄))))
//│ def freqtab_lh_₃ = histo_lh_₂(concat_lh_₂(map_lh_₄(ends_lh_₄, attribkeys_lh_₄(keys_lh_₄))))
//│ def freqtab_lh_₄ = histo_lh_₂(concat_lh_₂(map_lh_₄(ends_lh_₄, attribkeys_lh_₄(keys_lh_₄))))
//│ def freqtab_lh_₅ = histo_lh_₂(concat_lh_₂(map_lh_₄(ends_lh_₄, attribkeys_lh_₄(keys_lh_₄))))
//│ def hash_lh_₁(_lh_hash_arg1¹, _lh_hash_arg2⁰) = _lh_hash_arg2⁰(_lh_hash_arg1¹)
//│ def head_lh_₁(ls¹³) = case ls¹³ of {
//│ 	LH_C h⁶⁰ t⁶⁰ => h⁶⁰
//│ 	| LH_N  => error⁰}
//│ def hinsert_lh_₁(_lh_hinsert_arg1⁰, _lh_hinsert_arg2⁰) = case _lh_hinsert_arg2⁰ of {
//│ 	H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => 
//│ 		let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ 		in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ 		in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > numberofkeys_lh_₁)) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]
//│ 	| _  => error⁰}
//│ def histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_arg2⁰) = case _lh_histins_arg2⁰ of {
//│ 	LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]
//│ 	| LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {
//│ 		LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def histo_lh_₁(_lh_histo_arg1¹) = foldr_lh_₁(histins_lh_₁, [LH_N], _lh_histo_arg1¹)
//│ def histo_lh_₂(_lh_histo_arg1⁰) = foldr_lh_₁(histins_lh_₁, [LH_N], _lh_histo_arg1⁰)
//│ def keys_lh_₁(n²⁴, f³⁴) = 
//│ 	let t¹⁵ = 	
//│ 		let t¹⁶ = 	
//│ 			let t¹⁷ = 	
//│ 				let t¹⁸ = 	
//│ 					let t¹⁹ = 	
//│ 						let t²⁰ = 	
//│ 							let t²¹ = 	
//│ 								let t²² = 	
//│ 									let t²³ = 	
//│ 										let t²⁴ = 	
//│ 											let t²⁵ = 	
//│ 												let t²⁶ = 	
//│ 													let t²⁷ = 	
//│ 														let t²⁸ = 	
//│ 															let t²⁹ = 	
//│ 																let t³⁰ = 	
//│ 																	let t³¹ = 	
//│ 																		let t³² = 	
//│ 																			let t³³ = 	
//│ 																				let t³⁴ = 	
//│ 																					let t³⁵ = 	
//│ 																						let t³⁶ = (fun n² -> (fun f¹² -> [LH_N]))
//│ 																						in let h¹⁵ = [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]]
//│ 																						in (fun n³ -> 
//│ 																							let t³⁷ = take_lh_₁((n³ - 1), t³⁶)
//│ 																							in let h¹⁶ = h¹⁵
//│ 																							in (fun f¹³ -> [LH_C f¹³(h¹⁶) map_lh_₁(f¹³, t³⁷)]))
//│ 																					in let h¹⁷ = [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]]
//│ 																					in (fun n⁴ -> 
//│ 																						let t³⁸ = take_lh_₁((n⁴ - 1), t³⁵)
//│ 																						in let h¹⁸ = h¹⁷
//│ 																						in (fun f¹⁴ -> [LH_C f¹⁴(h¹⁸) map_lh_₁(f¹⁴, t³⁸)]))
//│ 																				in let h¹⁹ = [LH_C 't' [LH_C 'o' [LH_N]]]
//│ 																				in (fun n⁵ -> 
//│ 																					let t³⁹ = take_lh_₁((n⁵ - 1), t³⁴)
//│ 																					in let h²⁰ = h¹⁹
//│ 																					in (fun f¹⁵ -> [LH_C f¹⁵(h²⁰) map_lh_₁(f¹⁵, t³⁹)]))
//│ 																			in let h²¹ = [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]]
//│ 																			in (fun n⁶ -> 
//│ 																				let t⁴⁰ = take_lh_₁((n⁶ - 1), t³³)
//│ 																				in let h²² = h²¹
//│ 																				in (fun f¹⁶ -> [LH_C f¹⁶(h²²) map_lh_₁(f¹⁶, t⁴⁰)]))
//│ 																		in let h²³ = [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]]
//│ 																		in (fun n⁷ -> 
//│ 																			let t⁴¹ = take_lh_₁((n⁷ - 1), t³²)
//│ 																			in let h²⁴ = h²³
//│ 																			in (fun f¹⁷ -> [LH_C f¹⁷(h²⁴) map_lh_₁(f¹⁷, t⁴¹)]))
//│ 																	in let h²⁵ = [LH_C 'o' [LH_C 'f' [LH_N]]]
//│ 																	in (fun n⁸ -> 
//│ 																		let t⁴² = take_lh_₁((n⁸ - 1), t³¹)
//│ 																		in let h²⁶ = h²⁵
//│ 																		in (fun f¹⁸ -> [LH_C f¹⁸(h²⁶) map_lh_₁(f¹⁸, t⁴²)]))
//│ 																in let h²⁷ = [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]]
//│ 																in (fun n⁹ -> 
//│ 																	let t⁴³ = take_lh_₁((n⁹ - 1), t³⁰)
//│ 																	in let h²⁸ = h²⁷
//│ 																	in (fun f¹⁹ -> [LH_C f¹⁹(h²⁸) map_lh_₁(f¹⁹, t⁴³)]))
//│ 															in let h²⁹ = [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]]
//│ 															in (fun n¹⁰ -> 
//│ 																let t⁴⁴ = take_lh_₁((n¹⁰ - 1), t²⁹)
//│ 																in let h³⁰ = h²⁹
//│ 																in (fun f²⁰ -> [LH_C f²⁰(h³⁰) map_lh_₁(f²⁰, t⁴⁴)]))
//│ 														in let h³¹ = [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]]
//│ 														in (fun n¹¹ -> 
//│ 															let t⁴⁵ = take_lh_₁((n¹¹ - 1), t²⁸)
//│ 															in let h³² = h³¹
//│ 															in (fun f²¹ -> [LH_C f²¹(h³²) map_lh_₁(f²¹, t⁴⁵)]))
//│ 													in let h³³ = [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]
//│ 													in (fun n¹² -> 
//│ 														let t⁴⁶ = take_lh_₁((n¹² - 1), t²⁷)
//│ 														in let h³⁴ = h³³
//│ 														in (fun f²² -> [LH_C f²²(h³⁴) map_lh_₁(f²², t⁴⁶)]))
//│ 												in let h³⁵ = [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]]
//│ 												in (fun n¹³ -> 
//│ 													let t⁴⁷ = take_lh_₁((n¹³ - 1), t²⁶)
//│ 													in let h³⁶ = h³⁵
//│ 													in (fun f²³ -> [LH_C f²³(h³⁶) map_lh_₁(f²³, t⁴⁷)]))
//│ 											in let h³⁷ = [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]]
//│ 											in (fun n¹⁴ -> 
//│ 												let t⁴⁸ = take_lh_₁((n¹⁴ - 1), t²⁵)
//│ 												in let h³⁸ = h³⁷
//│ 												in (fun f²⁴ -> [LH_C f²⁴(h³⁸) map_lh_₁(f²⁴, t⁴⁸)]))
//│ 										in let h³⁹ = [LH_C 'i' [LH_C 'n' [LH_N]]]
//│ 										in (fun n¹⁵ -> 
//│ 											let t⁴⁹ = take_lh_₁((n¹⁵ - 1), t²⁴)
//│ 											in let h⁴⁰ = h³⁹
//│ 											in (fun f²⁵ -> [LH_C f²⁵(h⁴⁰) map_lh_₁(f²⁵, t⁴⁹)]))
//│ 									in let h⁴¹ = [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]]
//│ 									in (fun n¹⁶ -> 
//│ 										let t⁵⁰ = take_lh_₁((n¹⁶ - 1), t²³)
//│ 										in let h⁴² = h⁴¹
//│ 										in (fun f²⁶ -> [LH_C f²⁶(h⁴²) map_lh_₁(f²⁶, t⁵⁰)]))
//│ 								in let h⁴³ = [LH_C 'i' [LH_C 'f' [LH_N]]]
//│ 								in (fun n¹⁷ -> 
//│ 									let t⁵¹ = take_lh_₁((n¹⁷ - 1), t²²)
//│ 									in let h⁴⁴ = h⁴³
//│ 									in (fun f²⁷ -> [LH_C f²⁷(h⁴⁴) map_lh_₁(f²⁷, t⁵¹)]))
//│ 							in let h⁴⁵ = [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]
//│ 							in (fun n¹⁸ -> 
//│ 								let t⁵² = take_lh_₁((n¹⁸ - 1), t²¹)
//│ 								in let h⁴⁶ = h⁴⁵
//│ 								in (fun f²⁸ -> [LH_C f²⁸(h⁴⁶) map_lh_₁(f²⁸, t⁵²)]))
//│ 						in let h⁴⁷ = [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]]
//│ 						in (fun n¹⁹ -> 
//│ 							let t⁵³ = take_lh_₁((n¹⁹ - 1), t²⁰)
//│ 							in let h⁴⁸ = h⁴⁷
//│ 							in (fun f²⁹ -> [LH_C f²⁹(h⁴⁸) map_lh_₁(f²⁹, t⁵³)]))
//│ 					in let h⁴⁹ = [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]]
//│ 					in (fun n²⁰ -> 
//│ 						let t⁵⁴ = take_lh_₁((n²⁰ - 1), t¹⁹)
//│ 						in let h⁵⁰ = h⁴⁹
//│ 						in (fun f³⁰ -> [LH_C f³⁰(h⁵⁰) map_lh_₁(f³⁰, t⁵⁴)]))
//│ 				in let h⁵¹ = [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun n²¹ -> 
//│ 					let t⁵⁵ = take_lh_₁((n²¹ - 1), t¹⁸)
//│ 					in let h⁵² = h⁵¹
//│ 					in (fun f³¹ -> [LH_C f³¹(h⁵²) map_lh_₁(f³¹, t⁵⁵)]))
//│ 			in let h⁵³ = [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]]
//│ 			in (fun n²² -> 
//│ 				let t⁵⁶ = take_lh_₁((n²² - 1), t¹⁷)
//│ 				in let h⁵⁴ = h⁵³
//│ 				in (fun f³² -> [LH_C f³²(h⁵⁴) map_lh_₁(f³², t⁵⁶)]))
//│ 		in let h⁵⁵ = [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]]
//│ 		in (fun n²³ -> 
//│ 			let t⁵⁷ = take_lh_₁((n²³ - 1), t¹⁶)
//│ 			in let h⁵⁶ = h⁵⁵
//│ 			in (fun f³³ -> [LH_C f³³(h⁵⁶) map_lh_₁(f³³, t⁵⁷)]))
//│ 	in let h⁵⁷ = [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]]
//│ 	in let t⁵⁸ = take_lh_₁((n²⁴ - 1), t¹⁵)
//│ 	in let h⁵⁸ = h⁵⁷
//│ 	in [LH_C f³⁴(h⁵⁸) map_lh_₁(f³⁴, t⁵⁸)]
//│ def keys_lh_₂(ys²⁸, f⁵⁸) = 
//│ 	let t⁶¹ = 	
//│ 		let t⁶² = 	
//│ 			let t⁶³ = 	
//│ 				let t⁶⁴ = 	
//│ 					let t⁶⁵ = 	
//│ 						let t⁶⁶ = 	
//│ 							let t⁶⁷ = 	
//│ 								let t⁶⁸ = 	
//│ 									let t⁶⁹ = 	
//│ 										let t⁷⁰ = 	
//│ 											let t⁷¹ = 	
//│ 												let t⁷² = 	
//│ 													let t⁷³ = 	
//│ 														let t⁷⁴ = 	
//│ 															let t⁷⁵ = 	
//│ 																let t⁷⁶ = 	
//│ 																	let t⁷⁷ = 	
//│ 																		let t⁷⁸ = 	
//│ 																			let t⁷⁹ = 	
//│ 																				let t⁸⁰ = 	
//│ 																					let t⁸¹ = 	
//│ 																						let t⁸² = (fun ys⁶ -> ys⁶)
//│ 																						in let h⁶¹ = [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]]
//│ 																						in (fun ys⁷ -> 
//│ 																							let t⁸³ = mappend_lh_₁(t⁸², ys⁷)
//│ 																							in let h⁶² = h⁶¹
//│ 																							in (fun f³⁷ -> [LH_C f³⁷(h⁶²) map_lh_₁(f³⁷, t⁸³)]))
//│ 																					in let h⁶³ = [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]]
//│ 																					in (fun ys⁸ -> 
//│ 																						let t⁸⁴ = mappend_lh_₁(t⁸¹, ys⁸)
//│ 																						in let h⁶⁴ = h⁶³
//│ 																						in (fun f³⁸ -> [LH_C f³⁸(h⁶⁴) map_lh_₁(f³⁸, t⁸⁴)]))
//│ 																				in let h⁶⁵ = [LH_C 't' [LH_C 'o' [LH_N]]]
//│ 																				in (fun ys⁹ -> 
//│ 																					let t⁸⁵ = mappend_lh_₁(t⁸⁰, ys⁹)
//│ 																					in let h⁶⁶ = h⁶⁵
//│ 																					in (fun f³⁹ -> [LH_C f³⁹(h⁶⁶) map_lh_₁(f³⁹, t⁸⁵)]))
//│ 																			in let h⁶⁷ = [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]]
//│ 																			in (fun ys¹⁰ -> 
//│ 																				let t⁸⁶ = mappend_lh_₁(t⁷⁹, ys¹⁰)
//│ 																				in let h⁶⁸ = h⁶⁷
//│ 																				in (fun f⁴⁰ -> [LH_C f⁴⁰(h⁶⁸) map_lh_₁(f⁴⁰, t⁸⁶)]))
//│ 																		in let h⁶⁹ = [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]]
//│ 																		in (fun ys¹¹ -> 
//│ 																			let t⁸⁷ = mappend_lh_₁(t⁷⁸, ys¹¹)
//│ 																			in let h⁷⁰ = h⁶⁹
//│ 																			in (fun f⁴¹ -> [LH_C f⁴¹(h⁷⁰) map_lh_₁(f⁴¹, t⁸⁷)]))
//│ 																	in let h⁷¹ = [LH_C 'o' [LH_C 'f' [LH_N]]]
//│ 																	in (fun ys¹² -> 
//│ 																		let t⁸⁸ = mappend_lh_₁(t⁷⁷, ys¹²)
//│ 																		in let h⁷² = h⁷¹
//│ 																		in (fun f⁴² -> [LH_C f⁴²(h⁷²) map_lh_₁(f⁴², t⁸⁸)]))
//│ 																in let h⁷³ = [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]]
//│ 																in (fun ys¹³ -> 
//│ 																	let t⁸⁹ = mappend_lh_₁(t⁷⁶, ys¹³)
//│ 																	in let h⁷⁴ = h⁷³
//│ 																	in (fun f⁴³ -> [LH_C f⁴³(h⁷⁴) map_lh_₁(f⁴³, t⁸⁹)]))
//│ 															in let h⁷⁵ = [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]]
//│ 															in (fun ys¹⁴ -> 
//│ 																let t⁹⁰ = mappend_lh_₁(t⁷⁵, ys¹⁴)
//│ 																in let h⁷⁶ = h⁷⁵
//│ 																in (fun f⁴⁴ -> [LH_C f⁴⁴(h⁷⁶) map_lh_₁(f⁴⁴, t⁹⁰)]))
//│ 														in let h⁷⁷ = [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]]
//│ 														in (fun ys¹⁵ -> 
//│ 															let t⁹¹ = mappend_lh_₁(t⁷⁴, ys¹⁵)
//│ 															in let h⁷⁸ = h⁷⁷
//│ 															in (fun f⁴⁵ -> [LH_C f⁴⁵(h⁷⁸) map_lh_₁(f⁴⁵, t⁹¹)]))
//│ 													in let h⁷⁹ = [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]
//│ 													in (fun ys¹⁶ -> 
//│ 														let t⁹² = mappend_lh_₁(t⁷³, ys¹⁶)
//│ 														in let h⁸⁰ = h⁷⁹
//│ 														in (fun f⁴⁶ -> [LH_C f⁴⁶(h⁸⁰) map_lh_₁(f⁴⁶, t⁹²)]))
//│ 												in let h⁸¹ = [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]]
//│ 												in (fun ys¹⁷ -> 
//│ 													let t⁹³ = mappend_lh_₁(t⁷², ys¹⁷)
//│ 													in let h⁸² = h⁸¹
//│ 													in (fun f⁴⁷ -> [LH_C f⁴⁷(h⁸²) map_lh_₁(f⁴⁷, t⁹³)]))
//│ 											in let h⁸³ = [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]]
//│ 											in (fun ys¹⁸ -> 
//│ 												let t⁹⁴ = mappend_lh_₁(t⁷¹, ys¹⁸)
//│ 												in let h⁸⁴ = h⁸³
//│ 												in (fun f⁴⁸ -> [LH_C f⁴⁸(h⁸⁴) map_lh_₁(f⁴⁸, t⁹⁴)]))
//│ 										in let h⁸⁵ = [LH_C 'i' [LH_C 'n' [LH_N]]]
//│ 										in (fun ys¹⁹ -> 
//│ 											let t⁹⁵ = mappend_lh_₁(t⁷⁰, ys¹⁹)
//│ 											in let h⁸⁶ = h⁸⁵
//│ 											in (fun f⁴⁹ -> [LH_C f⁴⁹(h⁸⁶) map_lh_₁(f⁴⁹, t⁹⁵)]))
//│ 									in let h⁸⁷ = [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]]
//│ 									in (fun ys²⁰ -> 
//│ 										let t⁹⁶ = mappend_lh_₁(t⁶⁹, ys²⁰)
//│ 										in let h⁸⁸ = h⁸⁷
//│ 										in (fun f⁵⁰ -> [LH_C f⁵⁰(h⁸⁸) map_lh_₁(f⁵⁰, t⁹⁶)]))
//│ 								in let h⁸⁹ = [LH_C 'i' [LH_C 'f' [LH_N]]]
//│ 								in (fun ys²¹ -> 
//│ 									let t⁹⁷ = mappend_lh_₁(t⁶⁸, ys²¹)
//│ 									in let h⁹⁰ = h⁸⁹
//│ 									in (fun f⁵¹ -> [LH_C f⁵¹(h⁹⁰) map_lh_₁(f⁵¹, t⁹⁷)]))
//│ 							in let h⁹¹ = [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]
//│ 							in (fun ys²² -> 
//│ 								let t⁹⁸ = mappend_lh_₁(t⁶⁷, ys²²)
//│ 								in let h⁹² = h⁹¹
//│ 								in (fun f⁵² -> [LH_C f⁵²(h⁹²) map_lh_₁(f⁵², t⁹⁸)]))
//│ 						in let h⁹³ = [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]]
//│ 						in (fun ys²³ -> 
//│ 							let t⁹⁹ = mappend_lh_₁(t⁶⁶, ys²³)
//│ 							in let h⁹⁴ = h⁹³
//│ 							in (fun f⁵³ -> [LH_C f⁵³(h⁹⁴) map_lh_₁(f⁵³, t⁹⁹)]))
//│ 					in let h⁹⁵ = [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]]
//│ 					in (fun ys²⁴ -> 
//│ 						let t¹⁰⁰ = mappend_lh_₁(t⁶⁵, ys²⁴)
//│ 						in let h⁹⁶ = h⁹⁵
//│ 						in (fun f⁵⁴ -> [LH_C f⁵⁴(h⁹⁶) map_lh_₁(f⁵⁴, t¹⁰⁰)]))
//│ 				in let h⁹⁷ = [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun ys²⁵ -> 
//│ 					let t¹⁰¹ = mappend_lh_₁(t⁶⁴, ys²⁵)
//│ 					in let h⁹⁸ = h⁹⁷
//│ 					in (fun f⁵⁵ -> [LH_C f⁵⁵(h⁹⁸) map_lh_₁(f⁵⁵, t¹⁰¹)]))
//│ 			in let h⁹⁹ = [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]]
//│ 			in (fun ys²⁶ -> 
//│ 				let t¹⁰² = mappend_lh_₁(t⁶³, ys²⁶)
//│ 				in let h¹⁰⁰ = h⁹⁹
//│ 				in (fun f⁵⁶ -> [LH_C f⁵⁶(h¹⁰⁰) map_lh_₁(f⁵⁶, t¹⁰²)]))
//│ 		in let h¹⁰¹ = [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]]
//│ 		in (fun ys²⁷ -> 
//│ 			let t¹⁰³ = mappend_lh_₁(t⁶², ys²⁷)
//│ 			in let h¹⁰² = h¹⁰¹
//│ 			in (fun f⁵⁷ -> [LH_C f⁵⁷(h¹⁰²) map_lh_₁(f⁵⁷, t¹⁰³)]))
//│ 	in let h¹⁰³ = [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]]
//│ 	in let t¹⁰⁴ = mappend_lh_₁(t⁶¹, ys²⁸)
//│ 	in let h¹⁰⁴ = h¹⁰³
//│ 	in [LH_C f⁵⁸(h¹⁰⁴) map_lh_₁(f⁵⁸, t¹⁰⁴)]
//│ def keys_lh_₃ = [LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]
//│ def keys_lh_₄ = [LH_C [LH_C 'c' [LH_C 'a' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'c' [LH_C 'l' [LH_C 'a' [LH_C 's' [LH_C 's' [LH_N]]]]]] [LH_C [LH_C 'd' [LH_C 'a' [LH_C 't' [LH_C 'a' [LH_N]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'a' [LH_C 'u' [LH_C 'l' [LH_C 't' [LH_N]]]]]]]] [LH_C [LH_C 'd' [LH_C 'e' [LH_C 'r' [LH_C 'i' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 'e' [LH_C 'l' [LH_C 's' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'h' [LH_C 'i' [LH_C 'd' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'o' [LH_C 'r' [LH_C 't' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_N]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_N]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 'f' [LH_C 'i' [LH_C 'x' [LH_C 'l' [LH_N]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 's' [LH_C 't' [LH_C 'a' [LH_C 'n' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]] [LH_C [LH_C 'i' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'r' [LH_C 'f' [LH_C 'a' [LH_C 'c' [LH_C 'e' [LH_N]]]]]]]]]] [LH_C [LH_C 'l' [LH_C 'e' [LH_C 't' [LH_N]]]] [LH_C [LH_C 'm' [LH_C 'o' [LH_C 'd' [LH_C 'u' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]] [LH_C [LH_C 'o' [LH_C 'f' [LH_N]]] [LH_C [LH_C 'r' [LH_C 'e' [LH_C 'n' [LH_C 'a' [LH_C 'm' [LH_C 'i' [LH_C 'n' [LH_C 'g' [LH_N]]]]]]]]] [LH_C [LH_C 't' [LH_C 'h' [LH_C 'e' [LH_C 'n' [LH_N]]]]] [LH_C [LH_C 't' [LH_C 'o' [LH_N]]] [LH_C [LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_N]]]]] [LH_C [LH_C 'w' [LH_C 'h' [LH_C 'e' [LH_C 'r' [LH_C 'e' [LH_N]]]]]] [LH_N]]]]]]]]]]]]]]]]]]]]]]]
//│ def last_lh_₁(_lh_last_arg1⁰) = case _lh_last_arg1⁰ of {
//│ 	LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => 
//│ 		let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {
//│ 			LH_N  => _lh_go_arg1⁰
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls¹⁰) = case ls¹⁰ of {
//│ 	LH_C h¹³ t¹³ => (1 + length_lh_₁(t¹³))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹⁶) = case ls¹⁶ of {
//│ 	LH_C h¹⁰⁸ t¹⁰⁸ => (1 + length_lh_₂(t¹⁰⁸))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls¹) = case ls¹ of {
//│ 	LH_C h¹ t¹ => (1 + length_lh_₃(t¹))
//│ 	| LH_N  => 0}
//│ def length_lh_₄(ls⁹) = case ls⁹ of {
//│ 	LH_C h¹¹ t¹¹ => (1 + length_lh_₄(t¹¹))
//│ 	| LH_N  => 0}
//│ def length_lh_₅(ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => (1 + length_lh_₅(t⁰))
//│ 	| LH_N  => 0}
//│ def length_lh_₆(ls¹⁵) = case ls¹⁵ of {
//│ 	LH_C h¹⁰⁷ t¹⁰⁷ => (1 + length_lh_₆(t¹⁰⁷))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f⁸, ls⁸) = ls⁸(f⁸)
//│ def map_lh_₂(f⁷, ls⁷, _lh_floatOutId_0⁰) = case ls⁷ of {
//│ 	LH_C h⁹ t⁹ => 
//│ 		let t¹⁰ = map_lh_₂(f⁷, t⁹)
//│ 		in let h¹⁰ = f⁷(h⁹)
//│ 		in mappend_lh_₄(h¹⁰, concat_lh_₁(t¹⁰))
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₃(f¹¹, ls¹¹) = case ls¹¹ of {
//│ 	LH_C h¹⁴ t¹⁴ => [LH_C f¹¹(h¹⁴) map_lh_₃(f¹¹, t¹⁴)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₄(f³⁵, ls¹²) = case ls¹² of {
//│ 	LH_C h⁵⁹ t⁵⁹ => [LH_C f³⁵(h⁵⁹) map_lh_₄(f³⁵, t⁵⁹)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lz_lh_₁(f⁰, ls²) = lazy⁰(force⁰(ls², f⁰))
//│ def map_lz_lh_₂(f³⁶, ls¹⁴) = lazy⁰(force⁰(ls¹⁴, f³⁶))
//│ def map_lz_lh_₃(f⁴, ls⁴) = lazy⁰(force⁰(ls⁴, f⁴))
//│ def map_lz_lh_₄(f¹, ls³) = lazy⁰(case force⁰(ls³) of {
//│ 	LH_C h⁴ t⁴ => 
//│ 		let _lh_first_LH_C_1⁰ = map_lz_lh_₄(f¹, t⁴)
//│ 		in let _lh_first_LH_C_0⁰ = f¹(h⁴)
//│ 		in (fun _lh_first_arg1² -> 
//│ 			let _lh_matchIdent⁵ = _lh_first_LH_C_0⁰
//│ 			in case _lh_matchIdent⁵ of {
//│ 				YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]
//│ 				| NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1² + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰)
//│ 				| _  => error⁰})
//│ 	| LH_N  => (fun _lh_first_arg1³ -> [NotEver _lh_first_arg1³])})
//│ def mappend_lh_₁(xs¹, ys²) = xs¹(ys²)
//│ def mappend_lh_₂(xs², ys⁴) = xs²(ys⁴)
//│ def mappend_lh_₃(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₃(t², ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def mappend_lh_₄(xs³, ys⁵) = case xs³ of {
//│ 	LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₄(t⁸, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def max_lh_₁(_lh_max_arg1⁰, _lh_max_arg2⁰) = if (_lh_max_arg1⁰ > _lh_max_arg2⁰) then _lh_max_arg1⁰ else _lh_max_arg2⁰
//│ def maxm_lh_₁(_lh_maxm_arg1⁰, _lh_maxm_arg2⁰) = case _lh_maxm_arg1⁰ of {
//│ 	Nothing  => _lh_maxm_arg2⁰
//│ 	| Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰)
//│ 	| _  => error⁰}
//│ def maxval_lh_₁ = length_lh_₂(freqtab_lh_₁)
//│ def maxval_lh_₂ = length_lh_₃(freqtab_lh_₂)
//│ def maxval_lh_₃ = length_lh_₄(freqtab_lh_₃)
//│ def maxval_lh_₄ = length_lh_₅(freqtab_lh_₄)
//│ def maxval_lh_₅ = length_lh_₆(freqtab_lh_₅)
//│ def member_lh_₁(_lh_member_arg1¹, _lh_member_arg2¹) = case _lh_member_arg2¹ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₁(_lh_member_arg1¹, _lh_member_LH_C_1¹))
//│ 	| _  => error⁰}
//│ def member_lh_₂(_lh_member_arg1⁰, _lh_member_arg2⁰) = case _lh_member_arg2⁰ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₂(_lh_member_arg1⁰, _lh_member_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def member_lh_₃(_lh_member_arg1², _lh_member_arg2²) = case _lh_member_arg2² of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₃(_lh_member_arg1², _lh_member_LH_C_1²))
//│ 	| _  => error⁰}
//│ def min_lh_₁(_lh_min_arg1⁰, _lh_min_arg2⁰) = if (_lh_min_arg1⁰ < _lh_min_arg2⁰) then _lh_min_arg1⁰ else _lh_min_arg2⁰
//│ def minm_lh_₁(_lh_minm_arg1⁰, _lh_minm_arg2⁰) = case _lh_minm_arg1⁰ of {
//│ 	Nothing  => _lh_minm_arg2⁰
//│ 	| Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰)
//│ 	| _  => error⁰}
//│ def numberofkeys_lh_₁ = length_lh_₆(keys_lh_₄)
//│ def partition'_lh_₁(_lh_partition'_arg1⁰) = foldr_lh_₁(select_lh_₁(_lh_partition'_arg1⁰), [LH_P2 (fun ys³ -> ys³) [LH_N]])
//│ def prog_lh_₁(_lh_prog_arg1⁰) = cichelli_lh_₁(_lh_prog_arg1⁰)
//│ def select_lh_₁(_lh_select_arg1⁰, _lh_select_arg2⁰, _lh_select_arg3⁰) = case _lh_select_arg3⁰ of {
//│ 	LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 
//│ 		let t³ = _lh_select_LH_P2_0⁰
//│ 		in let h³ = _lh_select_arg2⁰
//│ 		in (fun ys¹ -> 
//│ 			let _lh_findhash'_LH_C_1⁰ = mappend_lh_₂(t³, ys¹)
//│ 			in let _lh_findhash'_LH_C_0⁰ = h³
//│ 			in (fun _lh_findhash'_arg2⁰ -> (fun _lh_findhash'_arg1⁰ -> case _lh_findhash'_LH_C_0⁰ of {
//│ 				K _lh_findhash'_K_0⁰ _lh_findhash'_K_1² _lh_findhash'_K_2² _lh_findhash'_K_3⁰ => 
//│ 					let try² = (fun newAssocs⁰ -> 
//│ 						let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ 						in let _lh_matchIdent³ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, 
//│ 							let _lh_hash_K_3⁰ = _lh_findhash'_K_3⁰
//│ 							in let _lh_hash_K_2⁰ = _lh_findhash'_K_2²
//│ 							in let _lh_hash_K_1⁰ = _lh_findhash'_K_1²
//│ 							in let _lh_hash_K_0⁰ = _lh_findhash'_K_0⁰
//│ 							in (fun _lh_hash_arg1⁰ -> ((_lh_hash_K_3⁰ + assoc_lh_₁(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₂(_lh_hash_K_2⁰, _lh_hash_arg1⁰)))), _lh_findhash'_arg1⁰)
//│ 						in case _lh_matchIdent³ of {
//│ 							Nothing  => [NotEver 1]
//│ 							| Just _lh_findhash'_Just_0³ => findhash'_lh_₁(_lh_findhash'_Just_0³, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰)
//│ 							| _  => error⁰})
//│ 					in let _lh_matchIdent⁴ = 	
//│ 						let _lh_findhash'_LH_P2_1³ = assocm_lh_₂(_lh_findhash'_K_2², _lh_findhash'_arg2⁰)
//│ 						in let _lh_findhash'_LH_P2_0¹ = assocm_lh_₁(_lh_findhash'_K_1², _lh_findhash'_arg2⁰)
//│ 						in (fun _lh_findhash'_K_1³ -> (fun _lh_findhash'_K_2³ -> (fun try³ -> _lh_findhash'_LH_P2_0¹(_lh_findhash'_K_1³, _lh_findhash'_K_2³, _lh_findhash'_LH_P2_1³, try³))))
//│ 					in _lh_matchIdent⁴(_lh_findhash'_K_1², _lh_findhash'_K_2², try²)
//│ 				| _  => error⁰}))) _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]
//│ 	| _  => error⁰}
//│ def subset_lh_₁(_lh_subset_arg1⁰, _lh_subset_arg2⁰) = all_lh_₁((fun x⁰ -> member_lh_₁(x⁰, _lh_subset_arg2⁰)), _lh_subset_arg1⁰)
//│ def take_lh_₁(n¹, ls⁶) = if (n¹ > 0) then ls⁶(n¹) else (fun f⁶ -> [LH_N])
//│ def testCichelli_nofib_lh_₁(_lh_testCichelli_nofib_arg1⁰) = prog_lh_₁(_lh_testCichelli_nofib_arg1⁰)
//│ def union_lh_₁(_lh_union_arg1⁰, _lh_union_arg2⁰) = mappend_lh_₄(_lh_union_arg1⁰, 
//│ 	let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> _lh_listcomp_fun_para¹(_lh_listcomp_fun¹, _lh_union_arg1⁰))
//│ 	in _lh_listcomp_fun¹(_lh_union_arg2⁰))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

