:NewParser
:ParseOnly

:lhNoIter
:lhInHaskell
:lhGenOCaml
max a b = if a > b then a else b
min a b = if a < b then a else b
last (h:t) = go h t
  where
    go h [] = h
    go h (head:t) = go head t
all p [] = True
all p (h:t) = if p h then all p t else False
data Key = K String Char Char Int {- String, end letters, length of string -}
data HashSet = H (Maybe Int) (Maybe Int) [Int]
type HashFun = [(Char,Int)]  {- Association list of Character to values -}
ends :: Key -> String
ends (K _ a z _) = [a,z]
morefreq :: Key -> Key -> Bool
morefreq (K _ a x _) (K _ b y _) = ((freq a) + (freq x)) > ((freq b) + (freq y))
freq :: Char -> Int
freq c = assoc c (freqtab 0)
assoc :: (Eq a) => a -> [(a,b)] -> b
assoc x ((y,z):yzs) = if polyEq x y then z else assoc x yzs
assocm :: (Eq a) => a -> [(a,b)] -> Maybe b
assocm x [] = Nothing
assocm x ((y,z):yzs) = if polyEq x y then Just z else assocm x yzs
--- freqtab :: [(Char, Int)]
freqtab _ = histo (concat (map ends (attribkeys (keys 0))))
histins x [] = [(x,1)]
histins x ((y,n):yns) = if polyEq x y then (y,n+1):yns else (y,n):(histins x yns)
histo :: (Eq a) => [a] -> [(a,Int)]
histo ls = (foldr histins []) ls
subset :: (Eq a) => [a] -> [a] -> Bool
subset xs ys = all (\x -> member x ys) xs
union :: (Eq a) => [a] -> [a] -> [a]
union xs ys = xs ++ [y | y <- ys, not (member y xs)]
attribkeys :: [String] -> [Key]
attribkeys ks = map (\k->(K k (head k) (last k) (length k))) ks
hinsert :: Int -> HashSet -> Maybe HashSet
hinsert h (H lo hi hs) =
  let lo' = minm lo h in
  let hi' = maxm hi h in
    if (member h hs) || ((1 + hi'- lo') > (length (keys 0))) then Nothing
    else Just (H (Just lo') (Just hi') (h:hs))
minm, maxm :: Maybe Int -> Int -> Int
minm Nothing y = y
minm (Just x) y = min x y
maxm Nothing y = y
maxm (Just x) y = max x y
member :: (Eq a) => a -> [a] -> Bool
member _ [] = False
member x (y:ys) = (polyEq x y) || (member x ys)
hash :: HashFun -> Key -> Int
hash cvs (K _ a z n) = n + (assoc a cvs) + (assoc z cvs)
partition' :: (a->Bool) -> [a] -> ([a],[a])
partition' p = foldr (select p) ([],[])
select p x (ts,fs) = if p x then (x:ts,fs) else (ts,x:fs)
freqsorted :: [Key] -> [Key]
freqsorted x = x
blocked :: [Key] -> [Key]
blocked ls = blocked' [] ls
blocked' ds [] = []
blocked' ds (k : ks) =
  let ds' = union ds (ends k) in
  case (partition' (\x->subset (ends x) ds') ks) of {
    (det,rest) ->  (k : det ++ blocked' ds' rest)
  }
keys _ = ["apple","banana","peach","apricot"]
data Status a = NotEver Int | YesIts Int a deriving Show
prog n = cichelli n
findhash :: [Key] -> FeedBack
findhash keys = findhash' (H Nothing Nothing []) [] keys
findhash' :: HashSet -> HashFun -> [Key] -> FeedBack
findhash' keyHashSet charAssocs [] = (YesIts 1 charAssocs)
findhash' keyHashSet charAssocs ((K s a z n):ks) =
  let try = (\newAssocs -> let newCharAssocs = newAssocs ++ charAssocs in (case (hinsert (hash newCharAssocs (K s a z n)) keyHashSet) of {Nothing -> (NotEver 1); Just newKeyHashSet -> findhash' newKeyHashSet newCharAssocs ks})) in
  let maxval = length (freqtab 0) in
  case (assocm a charAssocs, assocm z charAssocs) of
    (Nothing,Nothing) ->
        if polyEq a z then
          firstSuccess (\m-> try [(a,m)]) [0..maxval]
        else
          firstSuccess (\mn -> case mn of { (m,n) -> try [(a,m),(z,n)] }) [(m,n) | m<-[0..maxval], n<-[0..maxval]]
    (Nothing,Just zc) -> firstSuccess (\m->try [(a,m)]) [0..maxval]
    (Just ac,Nothing) -> firstSuccess (\n->try [(z,n)]) [0..maxval]
    (Just ac,Just zc) -> try []
-- Returns the first successful `working' function on a list of possible arguments
firstSuccess :: (a -> FeedBack) -> [a] -> FeedBack
firstSuccess f possibles =  first 0 (map f possibles)
first :: Int -> [FeedBack] -> FeedBack
first k [] = NotEver k
first k (a:l) = case a of
                (YesIts leaves y) -> YesIts (k+leaves) y
                (NotEver leaves)  -> first (k+leaves) l
type FeedBack = Status HashFun
cichelli :: Int -> FeedBack
cichelli n =
  let attribkeys' = attribkeys ((keys 0) ++ take (n `mod` 2) (keys 0)) in
  let hashkeys = (blocked.freqsorted) attribkeys' in
  findhash hashkeys
testCichelli_nofib n = prog n
testCichelli_nofib $ primId 6
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testCichelli_nofib_lh_₁^1556(primId⁰(6))
//│ def all_lh_₁(_lh_all_arg1⁰, _lh_all_arg2⁰) = case _lh_all_arg2⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁^624(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False]
//│ 	| _  => error⁰}
//│ def assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_arg2¹) = case _lh_assoc_arg2¹ of {
//│ 	LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁^250(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_arg2⁰) = case _lh_assoc_arg2⁰ of {
//│ 	LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂^230(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_arg2¹) = case _lh_assocm_arg2¹ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁^800(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_arg2⁰) = case _lh_assocm_arg2⁰ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂^702(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def attribkeys_lh_₁(_lh_attribkeys_arg1¹) = map_lh_₁^1498((fun k¹ -> [K k¹ head_lh_₁^1500(k¹) last_lh_₁^1503(k¹) length_lh_₁^1506(k¹)]), _lh_attribkeys_arg1¹)
//│ def attribkeys_lh_₂(_lh_attribkeys_arg1⁰) = map_lh_₇^544((fun k⁰ -> [K k⁰ head_lh_₂^546(k⁰) last_lh_₂^549(k⁰) length_lh_₄^552(k⁰)]), _lh_attribkeys_arg1⁰)
//│ def blocked'_lh_₁(_lh_blocked'_arg1⁰, _lh_blocked'_arg2⁰) = case _lh_blocked'_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => 
//│ 		let ds'⁰ = union_lh_₁^1242(_lh_blocked'_arg1⁰, ends_lh_₂^1245(_lh_blocked'_LH_C_0⁰))
//│ 		in let _lh_matchIdent⁷ = partition'_lh_₁^1249((fun x¹ -> subset_lh_₁^1250(ends_lh_₁^1251(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ 		in case _lh_matchIdent⁷ of {
//│ 			LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂^1262([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁^1267(ds'⁰, _lh_blocked'_LH_P2_1⁰))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def blocked_lh_₁(_lh_blocked_arg1⁰) = blocked'_lh_₁^1457([LH_N], _lh_blocked_arg1⁰)
//│ def cichelli_lh_₁(_lh_cichelli_arg1⁰) = 
//│ 	let attribkeys'⁰ = attribkeys_lh_₁^1515(mappend_lh_₁^1516(keys_lh_₂^1517(0), take_lh_₁^1521((_lh_cichelli_arg1⁰ % 2), keys_lh_₁^1528(0))))
//│ 	in let hashkeys⁰ = (fun _lh_funcomp_x⁰ -> blocked_lh_₁^1534(freqsorted_lh_₁^1535(_lh_funcomp_x⁰)))(attribkeys'⁰)
//│ 	in findhash_lh_₁^1542(hashkeys⁰)
//│ def concat_lh_₁(lss⁰) = case lss⁰ of {
//│ 	LH_C h¹¹ t¹¹ => mappend_lh_₅^534(h¹¹, concat_lh_₁^537(t¹¹))
//│ 	| LH_N  => [LH_N]}
//│ def ends_lh_₁(_lh_ends_arg1²) = case _lh_ends_arg1² of {
//│ 	K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]
//│ 	| _  => error⁰}
//│ def ends_lh_₂(_lh_ends_arg1¹) = case _lh_ends_arg1¹ of {
//│ 	K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]
//│ 	| _  => error⁰}
//│ def ends_lh_₃(_lh_ends_arg1⁰) = case _lh_ends_arg1⁰ of {
//│ 	K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]
//│ 	| _  => error⁰}
//│ def enumFromTo_lh_₁(a⁴, b⁴) = if (a⁴ <= b⁴) then [LH_C a⁴ enumFromTo_lh_₁^933((a⁴ + 1), b⁴)] else [LH_N]
//│ def enumFromTo_lh_₂(a³, b³) = if (a³ <= b³) then [LH_C a³ enumFromTo_lh_₂^913((a³ + 1), b³)] else [LH_N]
//│ def enumFromTo_lh_₃(a², b²) = if (a² <= b²) then [LH_C a² enumFromTo_lh_₃^893((a² + 1), b²)] else [LH_N]
//│ def enumFromTo_lh_₄(a¹, b¹) = if (a¹ <= b¹) then [LH_C a¹ enumFromTo_lh_₄^754((a¹ + 1), b¹)] else [LH_N]
//│ def enumFromTo_lh_₅(a⁰, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromTo_lh_₅^678((a⁰ + 1), b⁰)] else [LH_N]
//│ def findhash'_lh_₁(_lh_findhash'_arg1⁰, _lh_findhash'_arg2⁰, _lh_findhash'_arg3⁰) = case _lh_findhash'_arg3⁰ of {
//│ 	LH_N  => [YesIts 1 _lh_findhash'_arg2⁰]
//│ 	| LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {
//│ 		K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => 
//│ 			let try⁰ = (fun newAssocs⁰ -> 
//│ 				let newCharAssocs⁰ = mappend_lh_₃^1059(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ 				in let _lh_matchIdent⁴ = hinsert_lh_₁^1064(hash_lh_₁^1065(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ 				in case _lh_matchIdent⁴ of {
//│ 					Nothing  => [NotEver 1]
//│ 					| Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁^1080(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰)
//│ 					| _  => error⁰})
//│ 			in let maxval⁰ = length_lh_₂^1092(freqtab_lh_₁^1093(0))
//│ 			in let _lh_matchIdent⁵ = [LH_P2 assocm_lh_₂^1097(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁^1102(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ 			in case _lh_matchIdent⁵ of {
//│ 				LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {
//│ 					Nothing  => case _lh_findhash'_LH_P2_1⁰ of {
//│ 						Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄^1116((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄^1126(0, maxval⁰)) else firstSuccess_lh_₁^1132((fun mn⁰ -> 
//│ 							let _lh_matchIdent⁶ = mn⁰
//│ 							in case _lh_matchIdent⁶ of {
//│ 								LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]])
//│ 								| _  => error⁰}), 
//│ 							let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => 
//│ 									let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 										LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 										| LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ 									in _lh_listcomp_fun²(enumFromTo_lh_₁^1166(0, maxval⁰))
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun¹(enumFromTo_lh_₂^1177(0, maxval⁰)))
//│ 						| Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃^1186((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅^1196(0, maxval⁰))
//│ 						| _  => error⁰}
//│ 					| Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {
//│ 						Nothing  => firstSuccess_lh_₂^1205((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃^1215(0, maxval⁰))
//│ 						| Just _lh_findhash'_Just_0³ => try⁰([LH_N])
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def findhash_lh_₁(_lh_findhash_arg1⁰) = findhash'_lh_₁^1334([H [Nothing] [Nothing] [LH_N]], [LH_N], _lh_findhash_arg1⁰)
//│ def firstSuccess_lh_₁(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³) = first_lh_₁^947(0, map_lh_₃^950(_lh_firstSuccess_arg1³, _lh_firstSuccess_arg2³))
//│ def firstSuccess_lh_₂(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²) = first_lh_₂^876(0, map_lh_₄^879(_lh_firstSuccess_arg1², _lh_firstSuccess_arg2²))
//│ def firstSuccess_lh_₃(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹) = first_lh_₃^725(0, map_lh_₅^728(_lh_firstSuccess_arg1¹, _lh_firstSuccess_arg2¹))
//│ def firstSuccess_lh_₄(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰) = first_lh_₄^714(0, map_lh_₆^717(_lh_firstSuccess_arg1⁰, _lh_firstSuccess_arg2⁰))
//│ def first_lh_₁(_lh_first_arg1³, _lh_first_arg2³) = case _lh_first_arg2³ of {
//│ 	LH_N  => [NotEver _lh_first_arg1³]
//│ 	| LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => 
//│ 		let _lh_matchIdent³ = _lh_first_LH_C_0³
//│ 		in case _lh_matchIdent³ of {
//│ 			YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]
//│ 			| NotEver _lh_first_NotEver_0³ => first_lh_₁^424((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³)
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def first_lh_₂(_lh_first_arg1², _lh_first_arg2²) = case _lh_first_arg2² of {
//│ 	LH_N  => [NotEver _lh_first_arg1²]
//│ 	| LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => 
//│ 		let _lh_matchIdent² = _lh_first_LH_C_0²
//│ 		in case _lh_matchIdent² of {
//│ 			YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]
//│ 			| NotEver _lh_first_NotEver_0² => first_lh_₂^382((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²)
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def first_lh_₃(_lh_first_arg1¹, _lh_first_arg2¹) = case _lh_first_arg2¹ of {
//│ 	LH_N  => [NotEver _lh_first_arg1¹]
//│ 	| LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => 
//│ 		let _lh_matchIdent¹ = _lh_first_LH_C_0¹
//│ 		in case _lh_matchIdent¹ of {
//│ 			YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]
//│ 			| NotEver _lh_first_NotEver_0¹ => first_lh_₃^192((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹)
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def first_lh_₄(_lh_first_arg1⁰, _lh_first_arg2⁰) = case _lh_first_arg2⁰ of {
//│ 	LH_N  => [NotEver _lh_first_arg1⁰]
//│ 	| LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => 
//│ 		let _lh_matchIdent⁰ = _lh_first_LH_C_0⁰
//│ 		in case _lh_matchIdent⁰ of {
//│ 			YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]
//│ 			| NotEver _lh_first_NotEver_0⁰ => first_lh_₄^150((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰)
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def foldr_lh_₁(f⁷, i¹, ls¹⁰) = case ls¹⁰ of {
//│ 	LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁^639(f⁷, i¹, t¹³))
//│ 	| LH_N  => i¹}
//│ def foldr_lh_₂(f¹, i⁰, ls³) = case ls³ of {
//│ 	LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂^88(f¹, i⁰, t⁴))
//│ 	| LH_N  => i⁰}
//│ def freqsorted_lh_₁(_lh_freqsorted_arg1⁰) = _lh_freqsorted_arg1⁰
//│ def freqtab_lh_₁(_lh_freqtab_arg1⁰) = histo_lh_₁^958(concat_lh_₁^959(map_lh_₂^960(ends_lh_₃^961, attribkeys_lh_₂^963(keys_lh_₃^964(0)))))
//│ def hash_lh_₁(_lh_hash_arg1⁰, _lh_hash_arg2⁰) = case _lh_hash_arg2⁰ of {
//│ 	K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂^773(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁^780(_lh_hash_K_2⁰, _lh_hash_arg1⁰))
//│ 	| _  => error⁰}
//│ def head_lh_₁(ls¹³) = case ls¹³ of {
//│ 	LH_C h¹⁸ t¹⁸ => h¹⁸
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls¹) = case ls¹ of {
//│ 	LH_C h² t² => h²
//│ 	| LH_N  => error⁰}
//│ def hinsert_lh_₁(_lh_hinsert_arg1⁰, _lh_hinsert_arg2⁰) = case _lh_hinsert_arg2⁰ of {
//│ 	H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => 
//│ 		let lo'⁰ = minm_lh_₁^813(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ 		in let hi'⁰ = maxm_lh_₁^818(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ 		in if (member_lh_₃^824(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > length_lh_₃^841(keys_lh_₄^842(0)))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]
//│ 	| _  => error⁰}
//│ def histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_arg2⁰) = case _lh_histins_arg2⁰ of {
//│ 	LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]
//│ 	| LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {
//│ 		LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁^125(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def histo_lh_₁(_lh_histo_arg1⁰) = foldr_lh_₂^561(histins_lh_₁^562, [LH_N], _lh_histo_arg1⁰)
//│ def keys_lh_₁(_lh_keys_arg1³) = [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]
//│ def keys_lh_₂(_lh_keys_arg1²) = [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]
//│ def keys_lh_₃(_lh_keys_arg1¹) = [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]
//│ def keys_lh_₄(_lh_keys_arg1⁰) = [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]
//│ def last_lh_₁(_lh_last_arg1¹) = case _lh_last_arg1¹ of {
//│ 	LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => 
//│ 		let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {
//│ 			LH_N  => _lh_go_arg1¹
//│ 			| LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹)
//│ 			| _  => error⁰}))
//│ 		in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def last_lh_₂(_lh_last_arg1⁰) = case _lh_last_arg1⁰ of {
//│ 	LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => 
//│ 		let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {
//│ 			LH_N  => _lh_go_arg1⁰
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls¹²) = case ls¹² of {
//│ 	LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁^1285(t¹⁷))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹¹) = case ls¹¹ of {
//│ 	LH_C h¹⁵ t¹⁵ => (1 + length_lh_₂^869(t¹⁵))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls⁶) = case ls⁶ of {
//│ 	LH_C h⁷ t⁷ => (1 + length_lh_₃^288(t⁷))
//│ 	| LH_N  => 0}
//│ def length_lh_₄(ls⁰) = case ls⁰ of {
//│ 	LH_C h¹ t¹ => (1 + length_lh_₄^37(t¹))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f⁸, ls¹⁴) = case ls¹⁴ of {
//│ 	LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁^1301(f⁸, t¹⁹)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₂(f⁶, ls⁹) = case ls⁹ of {
//│ 	LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂^467(f⁶, t¹⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₃(f⁵, ls⁸) = case ls⁸ of {
//│ 	LH_C h⁹ t⁹ => [LH_C f⁵(h⁹) map_lh_₃^444(f⁵, t⁹)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₄(f⁴, ls⁷) = case ls⁷ of {
//│ 	LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lh_₄^402(f⁴, t⁸)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₅(f³, ls⁵) = case ls⁵ of {
//│ 	LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₅^212(f³, t⁶)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₆(f², ls⁴) = case ls⁴ of {
//│ 	LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lh_₆^170(f², t⁵)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₇(f⁰, ls²) = case ls² of {
//│ 	LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇^53(f⁰, t³)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh_₁(xs⁴, ys⁴) = case xs⁴ of {
//│ 	LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁^1465(t²⁰, ys⁴)]
//│ 	| LH_N  => ys⁴}
//│ def mappend_lh_₂(xs³, ys³) = case xs³ of {
//│ 	LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂^1044(t¹⁶, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₃(xs², ys²) = case xs² of {
//│ 	LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃^738(t¹⁴, ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₄(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄^571(t¹², ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₅(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₅^23(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def max_lh_₁(_lh_max_arg1⁰, _lh_max_arg2⁰) = if (_lh_max_arg1⁰ > _lh_max_arg2⁰) then _lh_max_arg1⁰ else _lh_max_arg2⁰
//│ def maxm_lh_₁(_lh_maxm_arg1⁰, _lh_maxm_arg2⁰) = case _lh_maxm_arg1⁰ of {
//│ 	Nothing  => _lh_maxm_arg2⁰
//│ 	| Just _lh_maxm_Just_0⁰ => max_lh_₁^264(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰)
//│ 	| _  => error⁰}
//│ def member_lh_₁(_lh_member_arg1², _lh_member_arg2²) = case _lh_member_arg2² of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁^609(_lh_member_arg1², _lh_member_LH_C_1²))
//│ 	| _  => error⁰}
//│ def member_lh_₂(_lh_member_arg1¹, _lh_member_arg2¹) = case _lh_member_arg2¹ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂^590(_lh_member_arg1¹, _lh_member_LH_C_1¹))
//│ 	| _  => error⁰}
//│ def member_lh_₃(_lh_member_arg1⁰, _lh_member_arg2⁰) = case _lh_member_arg2⁰ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₃^360(_lh_member_arg1⁰, _lh_member_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def min_lh_₁(_lh_min_arg1⁰, _lh_min_arg2⁰) = if (_lh_min_arg1⁰ < _lh_min_arg2⁰) then _lh_min_arg1⁰ else _lh_min_arg2⁰
//│ def minm_lh_₁(_lh_minm_arg1⁰, _lh_minm_arg2⁰) = case _lh_minm_arg1⁰ of {
//│ 	Nothing  => _lh_minm_arg2⁰
//│ 	| Just _lh_minm_Just_0⁰ => min_lh_₁^275(_lh_minm_Just_0⁰, _lh_minm_arg2⁰)
//│ 	| _  => error⁰}
//│ def partition'_lh_₁(_lh_partition'_arg1⁰) = foldr_lh_₁^1014(select_lh_₁^1015(_lh_partition'_arg1⁰), [LH_P2 [LH_N] [LH_N]])
//│ def prog_lh_₁(_lh_prog_arg1⁰) = cichelli_lh_₁^1548(_lh_prog_arg1⁰)
//│ def select_lh_₁(_lh_select_arg1⁰, _lh_select_arg2⁰, _lh_select_arg3⁰) = case _lh_select_arg3⁰ of {
//│ 	LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]
//│ 	| _  => error⁰}
//│ def subset_lh_₁(_lh_subset_arg1⁰, _lh_subset_arg2⁰) = all_lh_₁^1002((fun x⁰ -> member_lh_₁^1003(x⁰, _lh_subset_arg2⁰)), _lh_subset_arg1⁰)
//│ def take_lh_₁(n¹, ls¹⁵) = if (n¹ > 0) then case ls¹⁵ of {
//│ 	LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁^1482((n¹ - 1), t²¹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testCichelli_nofib_lh_₁(_lh_testCichelli_nofib_arg1⁰) = prog_lh_₁^1552(_lh_testCichelli_nofib_arg1⁰)
//│ def union_lh_₁(_lh_union_arg1⁰, _lh_union_arg2⁰) = mappend_lh_₄^972(_lh_union_arg1⁰, 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂^977(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(_lh_union_arg2⁰))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec freqsorted_lh__d1 _lh_freqsorted_arg1_0 =
//│ 		  _lh_freqsorted_arg1_0;;
//│ 		let rec mappend_lh__d1 xs_4 ys_4 =
//│ 		  (match xs_4 with
//│ 		    | `LH_C(h_2_0, t_2_0) -> 
//│ 		      (`LH_C(h_2_0, ((mappend_lh__d1 t_2_0) ys_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_4);;
//│ 		let rec map_lh__d3 f_5 ls_8 =
//│ 		  (match ls_8 with
//│ 		    | `LH_C(h_9, t_9) -> 
//│ 		      (`LH_C((f_5 h_9), ((map_lh__d3 f_5) t_9)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec first_lh__d1 _lh_first_arg1_3 _lh_first_arg2_3 =
//│ 		  (match _lh_first_arg2_3 with
//│ 		    | `LH_N -> 
//│ 		      (`NotEver(_lh_first_arg1_3))
//│ 		    | `LH_C(_lh_first_LH_C_0_3, _lh_first_LH_C_1_3) -> 
//│ 		      (let rec _lh_matchIdent_3 = _lh_first_LH_C_0_3 in
//│ 		        (match _lh_matchIdent_3 with
//│ 		          | `YesIts(_lh_first_YesIts_0_3, _lh_first_YesIts_1_3) -> 
//│ 		            (`YesIts((_lh_first_arg1_3 + _lh_first_YesIts_0_3), _lh_first_YesIts_1_3))
//│ 		          | `NotEver(_lh_first_NotEver_0_3) -> 
//│ 		            ((first_lh__d1 (_lh_first_arg1_3 + _lh_first_NotEver_0_3)) _lh_first_LH_C_1_3)
//│ 		          | _ -> 
//│ 		            (failwith "error")))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec firstSuccess_lh__d1 _lh_firstSuccess_arg1_3 _lh_firstSuccess_arg2_3 =
//│ 		  ((first_lh__d1 0) ((map_lh__d3 _lh_firstSuccess_arg1_3) _lh_firstSuccess_arg2_3));;
//│ 		let rec max_lh__d1 _lh_max_arg1_0 _lh_max_arg2_0 =
//│ 		  (if (_lh_max_arg1_0 > _lh_max_arg2_0) then
//│ 		    _lh_max_arg1_0
//│ 		  else
//│ 		    _lh_max_arg2_0);;
//│ 		let rec maxm_lh__d1 _lh_maxm_arg1_0 _lh_maxm_arg2_0 =
//│ 		  (match _lh_maxm_arg1_0 with
//│ 		    | `Nothing -> 
//│ 		      _lh_maxm_arg2_0
//│ 		    | `Just(_lh_maxm_Just_0_0) -> 
//│ 		      ((max_lh__d1 _lh_maxm_Just_0_0) _lh_maxm_arg2_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec min_lh__d1 _lh_min_arg1_0 _lh_min_arg2_0 =
//│ 		  (if (_lh_min_arg1_0 < _lh_min_arg2_0) then
//│ 		    _lh_min_arg1_0
//│ 		  else
//│ 		    _lh_min_arg2_0);;
//│ 		let rec minm_lh__d1 _lh_minm_arg1_0 _lh_minm_arg2_0 =
//│ 		  (match _lh_minm_arg1_0 with
//│ 		    | `Nothing -> 
//│ 		      _lh_minm_arg2_0
//│ 		    | `Just(_lh_minm_Just_0_0) -> 
//│ 		      ((min_lh__d1 _lh_minm_Just_0_0) _lh_minm_arg2_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec keys_lh__d4 _lh_keys_arg1_0 =
//│ 		  (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))), (`LH_C((`LH_C('b', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_N))))))))))))), (`LH_C((`LH_C('p', (`LH_C('e', (`LH_C('a', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('c', (`LH_C('o', (`LH_C('t', (`LH_N))))))))))))))), (`LH_N)))))))));;
//│ 		let rec length_lh__d3 ls_6 =
//│ 		  (match ls_6 with
//│ 		    | `LH_C(h_7, t_7) -> 
//│ 		      (1 + (length_lh__d3 t_7))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec member_lh__d3 _lh_member_arg1_0 _lh_member_arg2_0 =
//│ 		  (match _lh_member_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | `LH_C(_lh_member_LH_C_0_0, _lh_member_LH_C_1_0) -> 
//│ 		      ((_lh_member_arg1_0 = _lh_member_LH_C_0_0) || ((member_lh__d3 _lh_member_arg1_0) _lh_member_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec hinsert_lh__d1 _lh_hinsert_arg1_0 _lh_hinsert_arg2_0 =
//│ 		  (match _lh_hinsert_arg2_0 with
//│ 		    | `H(_lh_hinsert_H_0_0, _lh_hinsert_H_1_0, _lh_hinsert_H_2_0) -> 
//│ 		      (let rec lo'_0 = ((minm_lh__d1 _lh_hinsert_H_0_0) _lh_hinsert_arg1_0) in
//│ 		        (let rec hi'_0 = ((maxm_lh__d1 _lh_hinsert_H_1_0) _lh_hinsert_arg1_0) in
//│ 		          (if (((member_lh__d3 _lh_hinsert_arg1_0) _lh_hinsert_H_2_0) || (((1 + hi'_0) - lo'_0) > (length_lh__d3 (keys_lh__d4 0)))) then
//│ 		            (`Nothing)
//│ 		          else
//│ 		            (`Just((`H((`Just(lo'_0)), (`Just(hi'_0)), (`LH_C(_lh_hinsert_arg1_0, _lh_hinsert_H_2_0)))))))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec assocm_lh__d1 _lh_assocm_arg1_1 _lh_assocm_arg2_1 =
//│ 		  (match _lh_assocm_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`Nothing)
//│ 		    | `LH_C(_lh_assocm_LH_C_0_1, _lh_assocm_LH_C_1_1) -> 
//│ 		      (match _lh_assocm_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_assocm_LH_P2_0_1, _lh_assocm_LH_P2_1_1) -> 
//│ 		          (if (_lh_assocm_arg1_1 = _lh_assocm_LH_P2_0_1) then
//│ 		            (`Just(_lh_assocm_LH_P2_1_1))
//│ 		          else
//│ 		            ((assocm_lh__d1 _lh_assocm_arg1_1) _lh_assocm_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d3 xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_1_4, t_1_4) -> 
//│ 		      (`LH_C(h_1_4, ((mappend_lh__d3 t_1_4) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec enumFromTo_lh__d4 a_1 b_1 =
//│ 		  (if (a_1 <= b_1) then
//│ 		    (`LH_C(a_1, ((enumFromTo_lh__d4 (a_1 + 1)) b_1)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec map_lh__d5 f_3 ls_5 =
//│ 		  (match ls_5 with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      (`LH_C((f_3 h_6), ((map_lh__d5 f_3) t_6)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec first_lh__d3 _lh_first_arg1_1 _lh_first_arg2_1 =
//│ 		  (match _lh_first_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (`NotEver(_lh_first_arg1_1))
//│ 		    | `LH_C(_lh_first_LH_C_0_1, _lh_first_LH_C_1_1) -> 
//│ 		      (let rec _lh_matchIdent_1 = _lh_first_LH_C_0_1 in
//│ 		        (match _lh_matchIdent_1 with
//│ 		          | `YesIts(_lh_first_YesIts_0_1, _lh_first_YesIts_1_1) -> 
//│ 		            (`YesIts((_lh_first_arg1_1 + _lh_first_YesIts_0_1), _lh_first_YesIts_1_1))
//│ 		          | `NotEver(_lh_first_NotEver_0_1) -> 
//│ 		            ((first_lh__d3 (_lh_first_arg1_1 + _lh_first_NotEver_0_1)) _lh_first_LH_C_1_1)
//│ 		          | _ -> 
//│ 		            (failwith "error")))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec firstSuccess_lh__d3 _lh_firstSuccess_arg1_1 _lh_firstSuccess_arg2_1 =
//│ 		  ((first_lh__d3 0) ((map_lh__d5 _lh_firstSuccess_arg1_1) _lh_firstSuccess_arg2_1));;
//│ 		let rec enumFromTo_lh__d2 a_3 b_3 =
//│ 		  (if (a_3 <= b_3) then
//│ 		    (`LH_C(a_3, ((enumFromTo_lh__d2 (a_3 + 1)) b_3)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec enumFromTo_lh__d1 a_4 b_4 =
//│ 		  (if (a_4 <= b_4) then
//│ 		    (`LH_C(a_4, ((enumFromTo_lh__d1 (a_4 + 1)) b_4)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec enumFromTo_lh__d3 a_2 b_2 =
//│ 		  (if (a_2 <= b_2) then
//│ 		    (`LH_C(a_2, ((enumFromTo_lh__d3 (a_2 + 1)) b_2)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec assocm_lh__d2 _lh_assocm_arg1_0 _lh_assocm_arg2_0 =
//│ 		  (match _lh_assocm_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`Nothing)
//│ 		    | `LH_C(_lh_assocm_LH_C_0_0, _lh_assocm_LH_C_1_0) -> 
//│ 		      (match _lh_assocm_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_assocm_LH_P2_0_0, _lh_assocm_LH_P2_1_0) -> 
//│ 		          (if (_lh_assocm_arg1_0 = _lh_assocm_LH_P2_0_0) then
//│ 		            (`Just(_lh_assocm_LH_P2_1_0))
//│ 		          else
//│ 		            ((assocm_lh__d2 _lh_assocm_arg1_0) _lh_assocm_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d4 f_4 ls_7 =
//│ 		  (match ls_7 with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      (`LH_C((f_4 h_8), ((map_lh__d4 f_4) t_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec first_lh__d2 _lh_first_arg1_2 _lh_first_arg2_2 =
//│ 		  (match _lh_first_arg2_2 with
//│ 		    | `LH_N -> 
//│ 		      (`NotEver(_lh_first_arg1_2))
//│ 		    | `LH_C(_lh_first_LH_C_0_2, _lh_first_LH_C_1_2) -> 
//│ 		      (let rec _lh_matchIdent_2 = _lh_first_LH_C_0_2 in
//│ 		        (match _lh_matchIdent_2 with
//│ 		          | `YesIts(_lh_first_YesIts_0_2, _lh_first_YesIts_1_2) -> 
//│ 		            (`YesIts((_lh_first_arg1_2 + _lh_first_YesIts_0_2), _lh_first_YesIts_1_2))
//│ 		          | `NotEver(_lh_first_NotEver_0_2) -> 
//│ 		            ((first_lh__d2 (_lh_first_arg1_2 + _lh_first_NotEver_0_2)) _lh_first_LH_C_1_2)
//│ 		          | _ -> 
//│ 		            (failwith "error")))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec firstSuccess_lh__d2 _lh_firstSuccess_arg1_2 _lh_firstSuccess_arg2_2 =
//│ 		  ((first_lh__d2 0) ((map_lh__d4 _lh_firstSuccess_arg1_2) _lh_firstSuccess_arg2_2));;
//│ 		let rec length_lh__d2 ls_1_1 =
//│ 		  (match ls_1_1 with
//│ 		    | `LH_C(h_1_5, t_1_5) -> 
//│ 		      (1 + (length_lh__d2 t_1_5))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec map_lh__d6 f_2 ls_4 =
//│ 		  (match ls_4 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      (`LH_C((f_2 h_5), ((map_lh__d6 f_2) t_5)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec first_lh__d4 _lh_first_arg1_0 _lh_first_arg2_0 =
//│ 		  (match _lh_first_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`NotEver(_lh_first_arg1_0))
//│ 		    | `LH_C(_lh_first_LH_C_0_0, _lh_first_LH_C_1_0) -> 
//│ 		      (let rec _lh_matchIdent_0 = _lh_first_LH_C_0_0 in
//│ 		        (match _lh_matchIdent_0 with
//│ 		          | `YesIts(_lh_first_YesIts_0_0, _lh_first_YesIts_1_0) -> 
//│ 		            (`YesIts((_lh_first_arg1_0 + _lh_first_YesIts_0_0), _lh_first_YesIts_1_0))
//│ 		          | `NotEver(_lh_first_NotEver_0_0) -> 
//│ 		            ((first_lh__d4 (_lh_first_arg1_0 + _lh_first_NotEver_0_0)) _lh_first_LH_C_1_0)
//│ 		          | _ -> 
//│ 		            (failwith "error")))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec firstSuccess_lh__d4 _lh_firstSuccess_arg1_0 _lh_firstSuccess_arg2_0 =
//│ 		  ((first_lh__d4 0) ((map_lh__d6 _lh_firstSuccess_arg1_0) _lh_firstSuccess_arg2_0));;
//│ 		let rec enumFromTo_lh__d5 a_0 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, ((enumFromTo_lh__d5 (a_0 + 1)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec keys_lh__d3 _lh_keys_arg1_1 =
//│ 		  (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))), (`LH_C((`LH_C('b', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_N))))))))))))), (`LH_C((`LH_C('p', (`LH_C('e', (`LH_C('a', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('c', (`LH_C('o', (`LH_C('t', (`LH_N))))))))))))))), (`LH_N)))))))));;
//│ 		let rec ends_lh__d3 _lh_ends_arg1_0 =
//│ 		  (match _lh_ends_arg1_0 with
//│ 		    | `K(_lh_ends_K_0_0, _lh_ends_K_1_0, _lh_ends_K_2_0, _lh_ends_K_3_0) -> 
//│ 		      (`LH_C(_lh_ends_K_1_0, (`LH_C(_lh_ends_K_2_0, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d2 f_6 ls_9 =
//│ 		  (match ls_9 with
//│ 		    | `LH_C(h_1_0, t_1_0) -> 
//│ 		      (`LH_C((f_6 h_1_0), ((map_lh__d2 f_6) t_1_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec foldr_lh__d2 f_1 i_0 ls_3 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      ((f_1 h_4) (((foldr_lh__d2 f_1) i_0) t_4))
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec histins_lh__d1 _lh_histins_arg1_0 _lh_histins_arg2_0 =
//│ 		  (match _lh_histins_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_C((`LH_P2(_lh_histins_arg1_0, 1)), (`LH_N)))
//│ 		    | `LH_C(_lh_histins_LH_C_0_0, _lh_histins_LH_C_1_0) -> 
//│ 		      (match _lh_histins_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_histins_LH_P2_0_0, _lh_histins_LH_P2_1_0) -> 
//│ 		          (if (_lh_histins_arg1_0 = _lh_histins_LH_P2_0_0) then
//│ 		            (`LH_C((`LH_P2(_lh_histins_LH_P2_0_0, (_lh_histins_LH_P2_1_0 + 1))), _lh_histins_LH_C_1_0))
//│ 		          else
//│ 		            (`LH_C((`LH_P2(_lh_histins_LH_P2_0_0, _lh_histins_LH_P2_1_0)), ((histins_lh__d1 _lh_histins_arg1_0) _lh_histins_LH_C_1_0))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec histo_lh__d1 _lh_histo_arg1_0 =
//│ 		  (((foldr_lh__d2 histins_lh__d1) (`LH_N)) _lh_histo_arg1_0);;
//│ 		let rec length_lh__d4 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (1 + (length_lh__d4 t_1))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec head_lh__d2 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      h_2
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec last_lh__d2 _lh_last_arg1_0 =
//│ 		  (match _lh_last_arg1_0 with
//│ 		    | `LH_C(_lh_last_LH_C_0_0, _lh_last_LH_C_1_0) -> 
//│ 		      (let rec go_0 = (fun _lh_go_arg1_0 _lh_go_arg2_0 -> 
//│ 		        (match _lh_go_arg2_0 with
//│ 		          | `LH_N -> 
//│ 		            _lh_go_arg1_0
//│ 		          | `LH_C(_lh_go_LH_C_0_0, _lh_go_LH_C_1_0) -> 
//│ 		            ((go_0 _lh_go_LH_C_0_0) _lh_go_LH_C_1_0)
//│ 		          | _ -> 
//│ 		            (failwith "error"))) in
//│ 		        ((go_0 _lh_last_LH_C_0_0) _lh_last_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d7 f_0 ls_2 =
//│ 		  (match ls_2 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      (`LH_C((f_0 h_3), ((map_lh__d7 f_0) t_3)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec attribkeys_lh__d2 _lh_attribkeys_arg1_0 =
//│ 		  ((map_lh__d7 (fun k_0 -> 
//│ 		    (`K(k_0, (head_lh__d2 k_0), (last_lh__d2 k_0), (length_lh__d4 k_0))))) _lh_attribkeys_arg1_0);;
//│ 		let rec mappend_lh__d5 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C(h_0, ((mappend_lh__d5 t_0) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec concat_lh__d1 lss_0 =
//│ 		  (match lss_0 with
//│ 		    | `LH_C(h_1_1, t_1_1) -> 
//│ 		      ((mappend_lh__d5 h_1_1) (concat_lh__d1 t_1_1))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec freqtab_lh__d1 _lh_freqtab_arg1_0 =
//│ 		  (histo_lh__d1 (concat_lh__d1 ((map_lh__d2 ends_lh__d3) (attribkeys_lh__d2 (keys_lh__d3 0)))));;
//│ 		let rec assoc_lh__d1 _lh_assoc_arg1_1 _lh_assoc_arg2_1 =
//│ 		  (match _lh_assoc_arg2_1 with
//│ 		    | `LH_C(_lh_assoc_LH_C_0_1, _lh_assoc_LH_C_1_1) -> 
//│ 		      (match _lh_assoc_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_assoc_LH_P2_0_1, _lh_assoc_LH_P2_1_1) -> 
//│ 		          (if (_lh_assoc_arg1_1 = _lh_assoc_LH_P2_0_1) then
//│ 		            _lh_assoc_LH_P2_1_1
//│ 		          else
//│ 		            ((assoc_lh__d1 _lh_assoc_arg1_1) _lh_assoc_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec assoc_lh__d2 _lh_assoc_arg1_0 _lh_assoc_arg2_0 =
//│ 		  (match _lh_assoc_arg2_0 with
//│ 		    | `LH_C(_lh_assoc_LH_C_0_0, _lh_assoc_LH_C_1_0) -> 
//│ 		      (match _lh_assoc_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_assoc_LH_P2_0_0, _lh_assoc_LH_P2_1_0) -> 
//│ 		          (if (_lh_assoc_arg1_0 = _lh_assoc_LH_P2_0_0) then
//│ 		            _lh_assoc_LH_P2_1_0
//│ 		          else
//│ 		            ((assoc_lh__d2 _lh_assoc_arg1_0) _lh_assoc_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec hash_lh__d1 _lh_hash_arg1_0 _lh_hash_arg2_0 =
//│ 		  (match _lh_hash_arg2_0 with
//│ 		    | `K(_lh_hash_K_0_0, _lh_hash_K_1_0, _lh_hash_K_2_0, _lh_hash_K_3_0) -> 
//│ 		      ((_lh_hash_K_3_0 + ((assoc_lh__d2 _lh_hash_K_1_0) _lh_hash_arg1_0)) + ((assoc_lh__d1 _lh_hash_K_2_0) _lh_hash_arg1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec findhash'_lh__d1 _lh_findhash'_arg1_0 _lh_findhash'_arg2_0 _lh_findhash'_arg3_0 =
//│ 		  (match _lh_findhash'_arg3_0 with
//│ 		    | `LH_N -> 
//│ 		      (`YesIts(1, _lh_findhash'_arg2_0))
//│ 		    | `LH_C(_lh_findhash'_LH_C_0_0, _lh_findhash'_LH_C_1_0) -> 
//│ 		      (match _lh_findhash'_LH_C_0_0 with
//│ 		        | `K(_lh_findhash'_K_0_0, _lh_findhash'_K_1_0, _lh_findhash'_K_2_0, _lh_findhash'_K_3_0) -> 
//│ 		          (let rec try_0 = (fun newAssocs_0 -> 
//│ 		            (let rec newCharAssocs_0 = ((mappend_lh__d3 newAssocs_0) _lh_findhash'_arg2_0) in
//│ 		              (let rec _lh_matchIdent_4 = ((hinsert_lh__d1 ((hash_lh__d1 newCharAssocs_0) (`K(_lh_findhash'_K_0_0, _lh_findhash'_K_1_0, _lh_findhash'_K_2_0, _lh_findhash'_K_3_0)))) _lh_findhash'_arg1_0) in
//│ 		                (match _lh_matchIdent_4 with
//│ 		                  | `Nothing -> 
//│ 		                    (`NotEver(1))
//│ 		                  | `Just(_lh_findhash'_Just_0_0) -> 
//│ 		                    (((findhash'_lh__d1 _lh_findhash'_Just_0_0) newCharAssocs_0) _lh_findhash'_LH_C_1_0)
//│ 		                  | _ -> 
//│ 		                    (failwith "error"))))) in
//│ 		            (let rec maxval_0 = (length_lh__d2 (freqtab_lh__d1 0)) in
//│ 		              (let rec _lh_matchIdent_5 = (`LH_P2(((assocm_lh__d2 _lh_findhash'_K_1_0) _lh_findhash'_arg2_0), ((assocm_lh__d1 _lh_findhash'_K_2_0) _lh_findhash'_arg2_0))) in
//│ 		                (match _lh_matchIdent_5 with
//│ 		                  | `LH_P2(_lh_findhash'_LH_P2_0_0, _lh_findhash'_LH_P2_1_0) -> 
//│ 		                    (match _lh_findhash'_LH_P2_0_0 with
//│ 		                      | `Nothing -> 
//│ 		                        (match _lh_findhash'_LH_P2_1_0 with
//│ 		                          | `Nothing -> 
//│ 		                            (if (_lh_findhash'_K_1_0 = _lh_findhash'_K_2_0) then
//│ 		                              ((firstSuccess_lh__d4 (fun m_0 -> 
//│ 		                                (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_1_0, m_0)), (`LH_N)))))) ((enumFromTo_lh__d4 0) maxval_0))
//│ 		                            else
//│ 		                              ((firstSuccess_lh__d1 (fun mn_0 -> 
//│ 		                                (let rec _lh_matchIdent_6 = mn_0 in
//│ 		                                  (match _lh_matchIdent_6 with
//│ 		                                    | `LH_P2(_lh_findhash'_LH_P2_0_1, _lh_findhash'_LH_P2_1_1) -> 
//│ 		                                      (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_1_0, _lh_findhash'_LH_P2_0_1)), (`LH_C((`LH_P2(_lh_findhash'_K_2_0, _lh_findhash'_LH_P2_1_1)), (`LH_N))))))
//│ 		                                    | _ -> 
//│ 		                                      (failwith "error"))))) (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		                                (match _lh_listcomp_fun_para_1 with
//│ 		                                  | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                                    (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		                                      (match _lh_listcomp_fun_para_2 with
//│ 		                                        | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		                                          (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_h_2)), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		                                        | `LH_N -> 
//│ 		                                          (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))) in
//│ 		                                      (_lh_listcomp_fun_2 ((enumFromTo_lh__d1 0) maxval_0)))
//│ 		                                  | `LH_N -> 
//│ 		                                    (`LH_N))) in
//│ 		                                (_lh_listcomp_fun_1 ((enumFromTo_lh__d2 0) maxval_0)))))
//│ 		                          | `Just(_lh_findhash'_Just_0_1) -> 
//│ 		                            ((firstSuccess_lh__d3 (fun m_1 -> 
//│ 		                              (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_1_0, m_1)), (`LH_N)))))) ((enumFromTo_lh__d5 0) maxval_0))
//│ 		                          | _ -> 
//│ 		                            (failwith "error"))
//│ 		                      | `Just(_lh_findhash'_Just_0_2) -> 
//│ 		                        (match _lh_findhash'_LH_P2_1_0 with
//│ 		                          | `Nothing -> 
//│ 		                            ((firstSuccess_lh__d2 (fun n_0 -> 
//│ 		                              (try_0 (`LH_C((`LH_P2(_lh_findhash'_K_2_0, n_0)), (`LH_N)))))) ((enumFromTo_lh__d3 0) maxval_0))
//│ 		                          | `Just(_lh_findhash'_Just_0_3) -> 
//│ 		                            (try_0 (`LH_N))
//│ 		                          | _ -> 
//│ 		                            (failwith "error"))
//│ 		                      | _ -> 
//│ 		                        (failwith "error"))
//│ 		                  | _ -> 
//│ 		                    (failwith "error")))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec findhash_lh__d1 _lh_findhash_arg1_0 =
//│ 		  (((findhash'_lh__d1 (`H((`Nothing), (`Nothing), (`LH_N)))) (`LH_N)) _lh_findhash_arg1_0);;
//│ 		let rec take_lh__d1 n_1 ls_1_5 =
//│ 		  (if (n_1 > 0) then
//│ 		    (match ls_1_5 with
//│ 		      | `LH_C(h_2_1, t_2_1) -> 
//│ 		        (`LH_C(h_2_1, ((take_lh__d1 (n_1 - 1)) t_2_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec last_lh__d1 _lh_last_arg1_1 =
//│ 		  (match _lh_last_arg1_1 with
//│ 		    | `LH_C(_lh_last_LH_C_0_1, _lh_last_LH_C_1_1) -> 
//│ 		      (let rec go_1 = (fun _lh_go_arg1_1 _lh_go_arg2_1 -> 
//│ 		        (match _lh_go_arg2_1 with
//│ 		          | `LH_N -> 
//│ 		            _lh_go_arg1_1
//│ 		          | `LH_C(_lh_go_LH_C_0_1, _lh_go_LH_C_1_1) -> 
//│ 		            ((go_1 _lh_go_LH_C_0_1) _lh_go_LH_C_1_1)
//│ 		          | _ -> 
//│ 		            (failwith "error"))) in
//│ 		        ((go_1 _lh_last_LH_C_0_1) _lh_last_LH_C_1_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec length_lh__d1 ls_1_2 =
//│ 		  (match ls_1_2 with
//│ 		    | `LH_C(h_1_7, t_1_7) -> 
//│ 		      (1 + (length_lh__d1 t_1_7))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec head_lh__d1 ls_1_3 =
//│ 		  (match ls_1_3 with
//│ 		    | `LH_C(h_1_8, t_1_8) -> 
//│ 		      h_1_8
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d1 f_8 ls_1_4 =
//│ 		  (match ls_1_4 with
//│ 		    | `LH_C(h_1_9, t_1_9) -> 
//│ 		      (`LH_C((f_8 h_1_9), ((map_lh__d1 f_8) t_1_9)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec attribkeys_lh__d1 _lh_attribkeys_arg1_1 =
//│ 		  ((map_lh__d1 (fun k_1 -> 
//│ 		    (`K(k_1, (head_lh__d1 k_1), (last_lh__d1 k_1), (length_lh__d1 k_1))))) _lh_attribkeys_arg1_1);;
//│ 		let rec keys_lh__d1 _lh_keys_arg1_3 =
//│ 		  (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))), (`LH_C((`LH_C('b', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_N))))))))))))), (`LH_C((`LH_C('p', (`LH_C('e', (`LH_C('a', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('c', (`LH_C('o', (`LH_C('t', (`LH_N))))))))))))))), (`LH_N)))))))));;
//│ 		let rec member_lh__d2 _lh_member_arg1_1 _lh_member_arg2_1 =
//│ 		  (match _lh_member_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | `LH_C(_lh_member_LH_C_0_1, _lh_member_LH_C_1_1) -> 
//│ 		      ((_lh_member_arg1_1 = _lh_member_LH_C_0_1) || ((member_lh__d2 _lh_member_arg1_1) _lh_member_LH_C_1_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d4 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_1_2, t_1_2) -> 
//│ 		      (`LH_C(h_1_2, ((mappend_lh__d4 t_1_2) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec union_lh__d1 _lh_union_arg1_0 _lh_union_arg2_0 =
//│ 		  ((mappend_lh__d4 _lh_union_arg1_0) (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		    (match _lh_listcomp_fun_para_0 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		        (if (not ((member_lh__d2 _lh_listcomp_fun_ls_h_0) _lh_union_arg1_0)) then
//│ 		          (`LH_C(_lh_listcomp_fun_ls_h_0, (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		        else
//│ 		          (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_0 _lh_union_arg2_0)));;
//│ 		let rec ends_lh__d1 _lh_ends_arg1_2 =
//│ 		  (match _lh_ends_arg1_2 with
//│ 		    | `K(_lh_ends_K_0_2, _lh_ends_K_1_2, _lh_ends_K_2_2, _lh_ends_K_3_2) -> 
//│ 		      (`LH_C(_lh_ends_K_1_2, (`LH_C(_lh_ends_K_2_2, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec ends_lh__d2 _lh_ends_arg1_1 =
//│ 		  (match _lh_ends_arg1_1 with
//│ 		    | `K(_lh_ends_K_0_1, _lh_ends_K_1_1, _lh_ends_K_2_1, _lh_ends_K_3_1) -> 
//│ 		      (`LH_C(_lh_ends_K_1_1, (`LH_C(_lh_ends_K_2_1, (`LH_N)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec member_lh__d1 _lh_member_arg1_2 _lh_member_arg2_2 =
//│ 		  (match _lh_member_arg2_2 with
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | `LH_C(_lh_member_LH_C_0_2, _lh_member_LH_C_1_2) -> 
//│ 		      ((_lh_member_arg1_2 = _lh_member_LH_C_0_2) || ((member_lh__d1 _lh_member_arg1_2) _lh_member_LH_C_1_2))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec all_lh__d1 _lh_all_arg1_0 _lh_all_arg2_0 =
//│ 		  (match _lh_all_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_all_LH_C_0_0, _lh_all_LH_C_1_0) -> 
//│ 		      (if (_lh_all_arg1_0 _lh_all_LH_C_0_0) then
//│ 		        ((all_lh__d1 _lh_all_arg1_0) _lh_all_LH_C_1_0)
//│ 		      else
//│ 		        false)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec subset_lh__d1 _lh_subset_arg1_0 _lh_subset_arg2_0 =
//│ 		  ((all_lh__d1 (fun x_0 -> 
//│ 		    ((member_lh__d1 x_0) _lh_subset_arg2_0))) _lh_subset_arg1_0);;
//│ 		let rec foldr_lh__d1 f_7 i_1 ls_1_0 =
//│ 		  (match ls_1_0 with
//│ 		    | `LH_C(h_1_3, t_1_3) -> 
//│ 		      ((f_7 h_1_3) (((foldr_lh__d1 f_7) i_1) t_1_3))
//│ 		    | `LH_N -> 
//│ 		      i_1);;
//│ 		let rec select_lh__d1 _lh_select_arg1_0 _lh_select_arg2_0 _lh_select_arg3_0 =
//│ 		  (match _lh_select_arg3_0 with
//│ 		    | `LH_P2(_lh_select_LH_P2_0_0, _lh_select_LH_P2_1_0) -> 
//│ 		      (if (_lh_select_arg1_0 _lh_select_arg2_0) then
//│ 		        (`LH_P2((`LH_C(_lh_select_arg2_0, _lh_select_LH_P2_0_0)), _lh_select_LH_P2_1_0))
//│ 		      else
//│ 		        (`LH_P2(_lh_select_LH_P2_0_0, (`LH_C(_lh_select_arg2_0, _lh_select_LH_P2_1_0)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec partition'_lh__d1 _lh_partition'_arg1_0 =
//│ 		  ((foldr_lh__d1 (select_lh__d1 _lh_partition'_arg1_0)) (`LH_P2((`LH_N), (`LH_N))));;
//│ 		let rec mappend_lh__d2 xs_3 ys_3 =
//│ 		  (match xs_3 with
//│ 		    | `LH_C(h_1_6, t_1_6) -> 
//│ 		      (`LH_C(h_1_6, ((mappend_lh__d2 t_1_6) ys_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_3);;
//│ 		let rec blocked'_lh__d1 _lh_blocked'_arg1_0 _lh_blocked'_arg2_0 =
//│ 		  (match _lh_blocked'_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_blocked'_LH_C_0_0, _lh_blocked'_LH_C_1_0) -> 
//│ 		      (let rec ds'_0 = ((union_lh__d1 _lh_blocked'_arg1_0) (ends_lh__d2 _lh_blocked'_LH_C_0_0)) in
//│ 		        (let rec _lh_matchIdent_7 = ((partition'_lh__d1 (fun x_1 -> 
//│ 		          ((subset_lh__d1 (ends_lh__d1 x_1)) ds'_0))) _lh_blocked'_LH_C_1_0) in
//│ 		          (match _lh_matchIdent_7 with
//│ 		            | `LH_P2(_lh_blocked'_LH_P2_0_0, _lh_blocked'_LH_P2_1_0) -> 
//│ 		              ((mappend_lh__d2 (`LH_C(_lh_blocked'_LH_C_0_0, _lh_blocked'_LH_P2_0_0))) ((blocked'_lh__d1 ds'_0) _lh_blocked'_LH_P2_1_0))
//│ 		            | _ -> 
//│ 		              (failwith "error"))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec blocked_lh__d1 _lh_blocked_arg1_0 =
//│ 		  ((blocked'_lh__d1 (`LH_N)) _lh_blocked_arg1_0);;
//│ 		let rec keys_lh__d2 _lh_keys_arg1_2 =
//│ 		  (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))), (`LH_C((`LH_C('b', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_N))))))))))))), (`LH_C((`LH_C('p', (`LH_C('e', (`LH_C('a', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('c', (`LH_C('o', (`LH_C('t', (`LH_N))))))))))))))), (`LH_N)))))))));;
//│ 		let rec cichelli_lh__d1 _lh_cichelli_arg1_0 =
//│ 		  (let rec attribkeys'_0 = (attribkeys_lh__d1 ((mappend_lh__d1 (keys_lh__d2 0)) ((take_lh__d1 (_lh_cichelli_arg1_0 mod 2)) (keys_lh__d1 0)))) in
//│ 		    (let rec hashkeys_0 = ((fun _lh_funcomp_x_0 -> 
//│ 		      (blocked_lh__d1 (freqsorted_lh__d1 _lh_funcomp_x_0))) attribkeys'_0) in
//│ 		      (findhash_lh__d1 hashkeys_0)));;
//│ 		let rec prog_lh__d1 _lh_prog_arg1_0 =
//│ 		  (cichelli_lh__d1 _lh_prog_arg1_0);;
//│ 		let rec testCichelli_nofib_lh__d1 _lh_testCichelli_nofib_arg1_0 =
//│ 		  (prog_lh__d1 _lh_testCichelli_nofib_arg1_0);;
//│ 		(testCichelli_nofib_lh__d1 6)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)]: 28 --->
//│ 	case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 97
//│ [LH_C f⁰(h³) map_lh_₇(f⁰, t³)]: 58 --->
//│ 	case ls⁹ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 474
//│ [LH_N]: 59 --->
//│ 	case ls⁹ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 474
//│ [LH_P2 _lh_histins_arg1⁰ 1]: 104 --->
//│ 	DeadCodeCons
//│ 	case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰}: 133
//│ [LH_N]: 105 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 135
//│ 	case ls¹¹ of {LH_C h¹⁵ t¹⁵ => (1 + length_lh_₂(t¹⁵)) | LH_N  => 0}: 874
//│ [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]: 106 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 135
//│ 	case ls¹¹ of {LH_C h¹⁵ t¹⁵ => (1 + length_lh_₂(t¹⁵)) | LH_N  => 0}: 874
//│ [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)]: 119 --->
//│ 	DeadCodeCons
//│ 	case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰}: 133
//│ [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰]: 121 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 135
//│ 	case ls¹¹ of {LH_C h¹⁵ t¹⁵ => (1 + length_lh_₂(t¹⁵)) | LH_N  => 0}: 874
//│ [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰]: 124 --->
//│ 	DeadCodeCons
//│ 	case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰}: 133
//│ [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]: 130 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 135
//│ 	case ls¹¹ of {LH_C h¹⁵ t¹⁵ => (1 + length_lh_₂(t¹⁵)) | LH_N  => 0}: 874
//│ [NotEver _lh_first_arg1⁰]: 140 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 149 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [LH_C f²(h⁵) map_lh_₆(f², t⁵)]: 175 --->
//│ 	case _lh_first_arg2⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent⁰ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 163
//│ [LH_N]: 176 --->
//│ 	case _lh_first_arg2⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent⁰ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 163
//│ [NotEver _lh_first_arg1¹]: 182 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 191 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [LH_C f³(h⁶) map_lh_₅(f³, t⁶)]: 217 --->
//│ 	case _lh_first_arg2¹ of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent¹ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 205
//│ [LH_N]: 218 --->
//│ 	case _lh_first_arg2¹ of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent¹ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 205
//│ [LH_N]: 345 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 346 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 347 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 348 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 349 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [NotEver _lh_first_arg1²]: 372 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 381 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)]: 407 --->
//│ 	case _lh_first_arg2² of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent² = _lh_first_LH_C_0²
//│ in case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 395
//│ [LH_N]: 408 --->
//│ 	case _lh_first_arg2² of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent² = _lh_first_LH_C_0²
//│ in case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 395
//│ [NotEver _lh_first_arg1³]: 414 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 423 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [LH_C f⁵(h⁹) map_lh_₃(f⁵, t⁹)]: 449 --->
//│ 	case _lh_first_arg2³ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent³ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 437
//│ [LH_N]: 450 --->
//│ 	case _lh_first_arg2³ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent³ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 437
//│ [LH_N]: 457 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)] | LH_N  => ys⁰}: 30
//│ [LH_C _lh_ends_K_2⁰ [LH_N]]: 458 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)] | LH_N  => ys⁰}: 30
//│ [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]: 459 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)] | LH_N  => ys⁰}: 30
//│ [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)]: 472 --->
//│ 	case lss⁰ of {LH_C h¹¹ t¹¹ => mappend_lh_₅(h¹¹, concat_lh_₁(t¹¹)) | LH_N  => [LH_N]}: 542
//│ [LH_N]: 473 --->
//│ 	case lss⁰ of {LH_C h¹¹ t¹¹ => mappend_lh_₅(h¹¹, concat_lh_₁(t¹¹)) | LH_N  => [LH_N]}: 542
//│ [LH_N]: 482 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'e' [LH_N]]: 483 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'l' [LH_C 'e' [LH_N]]]: 484 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 485 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 486 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 487 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case ls¹ of {LH_C h² t² => h² | LH_N  => error⁰}: 47
//│ 	case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 82
//│ [LH_N]: 494 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'a' [LH_N]]: 495 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'n' [LH_C 'a' [LH_N]]]: 496 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 497 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 498 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 499 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 500 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case ls¹ of {LH_C h² t² => h² | LH_N  => error⁰}: 47
//│ 	case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 82
//│ [LH_N]: 506 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'h' [LH_N]]: 507 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'c' [LH_C 'h' [LH_N]]]: 508 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 509 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 510 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 511 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case ls¹ of {LH_C h² t² => h² | LH_N  => error⁰}: 47
//│ 	case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 82
//│ [LH_N]: 519 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 't' [LH_N]]: 520 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'o' [LH_C 't' [LH_N]]]: 521 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 522 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 523 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 524 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 525 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72
//│ [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 526 --->
//│ 	DeadCodeCons
//│ 	case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42
//│ 	case ls¹ of {LH_C h² t² => h² | LH_N  => error⁰}: 47
//│ 	case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 82
//│ [LH_N]: 527 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 528 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 529 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 530 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 531 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_N]: 541 --->
//│ 	case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 97
//│ [K k⁰ head_lh_₂(k⁰) last_lh_₂(k⁰) length_lh_₄(k⁰)]: 555 --->
//│ 	case _lh_ends_arg1⁰ of {K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]] | _  => error⁰}: 461
//│ [LH_N]: 564 --->
//│ 	case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 135
//│ 	case ls¹¹ of {LH_C h¹⁵ t¹⁵ => (1 + length_lh_₂(t¹⁵)) | LH_N  => 0}: 874
//│ [LH_C h¹² mappend_lh_₄(t¹², ys¹)]: 576 --->
//│ 	case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 578
//│ 	case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 597
//│ 	case _lh_member_arg2² of {LH_N  => [False] | LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1², _lh_member_LH_C_1²)) | _  => error⁰}: 616
//│ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 658 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1051
//│ [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰]: 660 --->
//│ 	case _lh_select_arg3⁰ of {LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]] | _  => error⁰}: 668
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰}: 1274
//│ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]: 664 --->
//│ 	case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 648
//│ 	case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₂(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent⁷ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₁(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1278
//│ [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]: 665 --->
//│ 	case _lh_select_arg3⁰ of {LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]] | _  => error⁰}: 668
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰}: 1274
//│ [LH_C a⁰ enumFromTo_lh_₅((a⁰ + 1), b⁰)]: 687 --->
//│ 	case ls⁵ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₅(f³, t⁶)] | LH_N  => [LH_N]}: 219
//│ [LH_N]: 688 --->
//│ 	case ls⁵ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₅(f³, t⁶)] | LH_N  => [LH_N]}: 219
//│ [Nothing]: 693 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1227
//│ [Just _lh_assocm_LH_P2_1⁰]: 701 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1227
//│ [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)]: 743 --->
//│ 	NoCons
//│ 	case _lh_assoc_arg2⁰ of {LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 239
//│ 	case _lh_assoc_arg2¹ of {LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 259
//│ 	case _lh_assocm_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 711
//│ 	case _lh_assocm_arg2¹ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 809
//│ [LH_C a¹ enumFromTo_lh_₄((a¹ + 1), b¹)]: 763 --->
//│ 	case ls⁴ of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lh_₆(f², t⁵)] | LH_N  => [LH_N]}: 177
//│ [LH_N]: 764 --->
//│ 	case ls⁴ of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lh_₆(f², t⁵)] | LH_N  => [LH_N]}: 177
//│ [Nothing]: 791 --->
//│ 	case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰}: 1203
//│ 	case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰}: 1225
//│ [Just _lh_assocm_LH_P2_1¹]: 799 --->
//│ 	case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰}: 1203
//│ 	case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰}: 1225
//│ [Nothing]: 848 --->
//│ 	case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰}: 1088
//│ [Just lo'⁰]: 850 --->
//│ 	case _lh_minm_arg1⁰ of {Nothing  => _lh_minm_arg2⁰ | Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰) | _  => error⁰}: 281
//│ [Just hi'⁰]: 852 --->
//│ 	case _lh_maxm_arg1⁰ of {Nothing  => _lh_maxm_arg2⁰ | Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰) | _  => error⁰}: 270
//│ [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]: 855 --->
//│ 	case _lh_member_arg2⁰ of {LH_N  => [False] | LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₃(_lh_member_arg1⁰, _lh_member_LH_C_1⁰)) | _  => error⁰}: 367
//│ [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]: 856 --->
//│ 	case _lh_hinsert_arg2⁰ of {H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > length_lh_₃(keys_lh_₄(0)))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]] | _  => error⁰}: 862
//│ [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]: 857 --->
//│ 	case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰}: 1088
//│ [LH_C a² enumFromTo_lh_₃((a² + 1), b²)]: 902 --->
//│ 	case ls⁷ of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)] | LH_N  => [LH_N]}: 409
//│ [LH_N]: 903 --->
//│ 	case ls⁷ of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)] | LH_N  => [LH_N]}: 409
//│ [LH_C a³ enumFromTo_lh_₂((a³ + 1), b³)]: 922 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]}: 1174
//│ [LH_N]: 923 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]}: 1174
//│ [LH_C a⁴ enumFromTo_lh_₁((a⁴ + 1), b⁴)]: 942 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1163
//│ [LH_N]: 943 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1163
//│ [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 987 --->
//│ 	case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 578
//│ 	case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 597
//│ 	case _lh_member_arg2² of {LH_N  => [False] | LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1², _lh_member_LH_C_1²)) | _  => error⁰}: 616
//│ [LH_N]: 992 --->
//│ 	case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 578
//│ 	case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 597
//│ 	case _lh_member_arg2² of {LH_N  => [False] | LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1², _lh_member_LH_C_1²)) | _  => error⁰}: 616
//│ [LH_N]: 1019 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1051
//│ [LH_N]: 1020 --->
//│ 	case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 648
//│ 	case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₂(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent⁷ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₁(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1278
//│ [LH_P2 [LH_N] [LH_N]]: 1021 --->
//│ 	case _lh_select_arg3⁰ of {LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]] | _  => error⁰}: 668
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰}: 1274
//│ [LH_N]: 1027 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 993
//│ [LH_C _lh_ends_K_2¹ [LH_N]]: 1028 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 993
//│ [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]: 1029 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 993
//│ [LH_N]: 1036 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 632
//│ [LH_C _lh_ends_K_2² [LH_N]]: 1037 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 632
//│ [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1038 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 632
//│ [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)]: 1049 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁴ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁵ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1236
//│ [YesIts 1 _lh_findhash'_arg2⁰]: 1057 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1072 --->
//│ 	case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 787
//│ [NotEver 1]: 1079 --->
//│ 	NoCons
//│ 	case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160
//│ 	case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202
//│ 	case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392
//│ 	case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434
//│ [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1107 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1229
//│ [LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1120 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 237
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 257
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 709
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 807
//│ [LH_N]: 1121 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]]: 1122 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1138 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 237
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 257
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 709
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 807
//│ [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1141 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 237
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 257
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 709
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 807
//│ [LH_N]: 1142 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]: 1143 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]: 1144 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²]: 1155 --->
//│ 	case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}: 1147
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 1159 --->
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => [LH_C f⁵(h⁹) map_lh_₃(f⁵, t⁹)] | LH_N  => [LH_N]}: 451
//│ [LH_N]: 1173 --->
//│ 	case ls⁸ of {LH_C h⁹ t⁹ => [LH_C f⁵(h⁹) map_lh_₃(f⁵, t⁹)] | LH_N  => [LH_N]}: 451
//│ [LH_P2 _lh_findhash'_K_1⁰ m¹]: 1190 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 237
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 257
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 709
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 807
//│ [LH_N]: 1191 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]]: 1192 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1209 --->
//│ 	NoCons
//│ 	case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 237
//│ 	case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 257
//│ 	case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 709
//│ 	case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 807
//│ [LH_N]: 1210 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]]: 1211 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_N]: 1222 --->
//│ 	case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745
//│ [LH_N]: 1241 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁴ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁵ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1236
//│ [LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1265 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1051
//│ [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)]: 1306 --->
//│ 	case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 648
//│ 	case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₂(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent⁷ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₁(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1278
//│ [LH_N]: 1307 --->
//│ 	case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 648
//│ 	case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₂(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent⁷ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₁(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1278
//│ [Nothing]: 1335 --->
//│ 	case _lh_minm_arg1⁰ of {Nothing  => _lh_minm_arg2⁰ | Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰) | _  => error⁰}: 281
//│ [Nothing]: 1336 --->
//│ 	case _lh_maxm_arg1⁰ of {Nothing  => _lh_maxm_arg2⁰ | Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰) | _  => error⁰}: 270
//│ [LH_N]: 1337 --->
//│ 	case _lh_member_arg2⁰ of {LH_N  => [False] | LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₃(_lh_member_arg1⁰, _lh_member_LH_C_1⁰)) | _  => error⁰}: 367
//│ [H [Nothing] [Nothing] [LH_N]]: 1338 --->
//│ 	case _lh_hinsert_arg2⁰ of {H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > length_lh_₃(keys_lh_₄(0)))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]] | _  => error⁰}: 862
//│ [LH_N]: 1340 --->
//│ 	NoCons
//│ 	case _lh_assoc_arg2⁰ of {LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 239
//│ 	case _lh_assoc_arg2¹ of {LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 259
//│ 	case _lh_assocm_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 711
//│ 	case _lh_assocm_arg2¹ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 809
//│ [LH_N]: 1350 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'e' [LH_N]]: 1351 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'l' [LH_C 'e' [LH_N]]]: 1352 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1353 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1354 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1355 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 1295
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1330
//│ [LH_N]: 1362 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_N]]: 1363 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'n' [LH_C 'a' [LH_N]]]: 1364 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1365 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1366 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1367 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1368 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 1295
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1330
//│ [LH_N]: 1374 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'h' [LH_N]]: 1375 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'c' [LH_C 'h' [LH_N]]]: 1376 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1377 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1378 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1379 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 1295
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1330
//│ [LH_N]: 1387 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 't' [LH_N]]: 1388 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'o' [LH_C 't' [LH_N]]]: 1389 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1390 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1391 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1392 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1393 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1394 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 1295
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1330
//│ [LH_N]: 1395 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1396 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1397 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1398 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1399 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_N]: 1406 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'e' [LH_N]]: 1407 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'l' [LH_C 'e' [LH_N]]]: 1408 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1409 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1410 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1411 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 1295
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1330
//│ [LH_N]: 1418 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_N]]: 1419 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'n' [LH_C 'a' [LH_N]]]: 1420 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1421 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1422 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1423 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1424 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 1295
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1330
//│ [LH_N]: 1430 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'h' [LH_N]]: 1431 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'c' [LH_C 'h' [LH_N]]]: 1432 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1433 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1434 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1435 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 1295
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1330
//│ [LH_N]: 1443 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 't' [LH_N]]: 1444 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'o' [LH_C 't' [LH_N]]]: 1445 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1446 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1447 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1448 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1449 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320
//│ [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1450 --->
//│ 	DeadCodeCons
//│ 	case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290
//│ 	case ls¹³ of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 1295
//│ 	case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1330
//│ [LH_N]: 1451 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1452 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1453 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1454 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1455 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_N]: 1458 --->
//│ 	case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 578
//│ 	case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 597
//│ [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)]: 1470 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308
//│ [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)]: 1491 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308
//│ [LH_N]: 1492 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308
//│ [LH_N]: 1494 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308
//│ [K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₁(k¹)]: 1509 --->
//│ 	case _lh_ends_arg1¹ of {K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]] | _  => error⁰}: 1031
//│ 	case _lh_ends_arg1² of {K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]] | _  => error⁰}: 1040
//│ 	case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁴ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁵ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1234
//│ ------------------
//│ case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)] | LH_N  => ys⁰}: 30 --->
//│ 	[LH_N]: 457
//│ 	[LH_C _lh_ends_K_2⁰ [LH_N]]: 458
//│ 	[LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]: 459
//│ case ls⁰ of {LH_C h¹ t¹ => (1 + length_lh_₄(t¹)) | LH_N  => 0}: 42 --->
//│ 	[LH_N]: 482
//│ 	[LH_C 'e' [LH_N]]: 483
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 484
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 485
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 486
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 487
//│ 	[LH_N]: 494
//│ 	[LH_C 'a' [LH_N]]: 495
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 496
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 497
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 498
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 499
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 500
//│ 	[LH_N]: 506
//│ 	[LH_C 'h' [LH_N]]: 507
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 508
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 509
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 510
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 511
//│ 	[LH_N]: 519
//│ 	[LH_C 't' [LH_N]]: 520
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 521
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 522
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 523
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 524
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 525
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 526
//│ case ls¹ of {LH_C h² t² => h² | LH_N  => error⁰}: 47 --->
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 487
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 500
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 511
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 526
//│ case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60 --->
//│ 	[LH_N]: 527
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 528
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 529
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 530
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 531
//│ case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}: 72 --->
//│ 	[LH_N]: 482
//│ 	[LH_C 'e' [LH_N]]: 483
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 484
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 485
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 486
//│ 	[LH_N]: 494
//│ 	[LH_C 'a' [LH_N]]: 495
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 496
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 497
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 498
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 499
//│ 	[LH_N]: 506
//│ 	[LH_C 'h' [LH_N]]: 507
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 508
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 509
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 510
//│ 	[LH_N]: 519
//│ 	[LH_C 't' [LH_N]]: 520
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 521
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 522
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 523
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 524
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 525
//│ case _lh_last_arg1⁰ of {LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => let go⁰ = (fun _lh_go_arg1⁰ -> (fun _lh_go_arg2⁰ -> case _lh_go_arg2⁰ of {LH_N  => _lh_go_arg1⁰ | LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go⁰(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰) | _  => error⁰}))
//│ in go⁰(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰) | _  => error⁰}: 82 --->
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 487
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 500
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 511
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 526
//│ case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 97 --->
//│ 	[LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)]: 28
//│ 	[LH_N]: 541
//│ case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰}: 133 --->
//│ 	[LH_P2 _lh_histins_arg1⁰ 1]: 104
//│ 	[LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)]: 119
//│ 	[LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰]: 124
//│ case _lh_histins_arg2⁰ of {LH_N  => [LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]] | LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1⁰, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 135 --->
//│ 	[LH_N]: 105
//│ 	[LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]: 106
//│ 	[LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰]: 121
//│ 	[LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]: 130
//│ 	[LH_N]: 564
//│ case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰}: 160 --->
//│ 	[NotEver _lh_first_arg1⁰]: 140
//│ 	[YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 149
//│ 	[NotEver _lh_first_arg1¹]: 182
//│ 	[YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 191
//│ 	[NotEver _lh_first_arg1²]: 372
//│ 	[YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 381
//│ 	[NotEver _lh_first_arg1³]: 414
//│ 	[YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 423
//│ 	[YesIts 1 _lh_findhash'_arg2⁰]: 1057
//│ 	[NotEver 1]: 1079
//│ case _lh_first_arg2⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent⁰ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 163 --->
//│ 	[LH_C f²(h⁵) map_lh_₆(f², t⁵)]: 175
//│ 	[LH_N]: 176
//│ case ls⁴ of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lh_₆(f², t⁵)] | LH_N  => [LH_N]}: 177 --->
//│ 	[LH_C a¹ enumFromTo_lh_₄((a¹ + 1), b¹)]: 763
//│ 	[LH_N]: 764
//│ case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰}: 202 --->
//│ 	[NotEver _lh_first_arg1⁰]: 140
//│ 	[YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 149
//│ 	[NotEver _lh_first_arg1¹]: 182
//│ 	[YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 191
//│ 	[NotEver _lh_first_arg1²]: 372
//│ 	[YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 381
//│ 	[NotEver _lh_first_arg1³]: 414
//│ 	[YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 423
//│ 	[YesIts 1 _lh_findhash'_arg2⁰]: 1057
//│ 	[NotEver 1]: 1079
//│ case _lh_first_arg2¹ of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent¹ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 205 --->
//│ 	[LH_C f³(h⁶) map_lh_₅(f³, t⁶)]: 217
//│ 	[LH_N]: 218
//│ case ls⁵ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₅(f³, t⁶)] | LH_N  => [LH_N]}: 219 --->
//│ 	[LH_C a⁰ enumFromTo_lh_₅((a⁰ + 1), b⁰)]: 687
//│ 	[LH_N]: 688
//│ case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰}: 237 --->
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1120
//│ 	[LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1138
//│ 	[LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1141
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m¹]: 1190
//│ 	[LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1209
//│ case _lh_assoc_arg2⁰ of {LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1⁰, _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1⁰, _lh_assoc_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 239 --->
//│ 	[LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)]: 743
//│ 	[LH_N]: 1340
//│ case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰}: 257 --->
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1120
//│ 	[LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1138
//│ 	[LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1141
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m¹]: 1190
//│ 	[LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1209
//│ case _lh_assoc_arg2¹ of {LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1¹, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1¹, _lh_assoc_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 259 --->
//│ 	[LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)]: 743
//│ 	[LH_N]: 1340
//│ case _lh_maxm_arg1⁰ of {Nothing  => _lh_maxm_arg2⁰ | Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2⁰) | _  => error⁰}: 270 --->
//│ 	[Just hi'⁰]: 852
//│ 	[Nothing]: 1336
//│ case _lh_minm_arg1⁰ of {Nothing  => _lh_minm_arg2⁰ | Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2⁰) | _  => error⁰}: 281 --->
//│ 	[Just lo'⁰]: 850
//│ 	[Nothing]: 1335
//│ case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293 --->
//│ 	[LH_N]: 345
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 346
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 347
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 348
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 349
//│ case _lh_member_arg2⁰ of {LH_N  => [False] | LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁰, _lh_member_LH_C_0⁰) || member_lh_₃(_lh_member_arg1⁰, _lh_member_LH_C_1⁰)) | _  => error⁰}: 367 --->
//│ 	[LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]: 855
//│ 	[LH_N]: 1337
//│ case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰}: 392 --->
//│ 	[NotEver _lh_first_arg1⁰]: 140
//│ 	[YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 149
//│ 	[NotEver _lh_first_arg1¹]: 182
//│ 	[YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 191
//│ 	[NotEver _lh_first_arg1²]: 372
//│ 	[YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 381
//│ 	[NotEver _lh_first_arg1³]: 414
//│ 	[YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 423
//│ 	[YesIts 1 _lh_findhash'_arg2⁰]: 1057
//│ 	[NotEver 1]: 1079
//│ case _lh_first_arg2² of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent² = _lh_first_LH_C_0²
//│ in case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 395 --->
//│ 	[LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)]: 407
//│ 	[LH_N]: 408
//│ case ls⁷ of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)] | LH_N  => [LH_N]}: 409 --->
//│ 	[LH_C a² enumFromTo_lh_₃((a² + 1), b²)]: 902
//│ 	[LH_N]: 903
//│ case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰}: 434 --->
//│ 	[NotEver _lh_first_arg1⁰]: 140
//│ 	[YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]: 149
//│ 	[NotEver _lh_first_arg1¹]: 182
//│ 	[YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]: 191
//│ 	[NotEver _lh_first_arg1²]: 372
//│ 	[YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]: 381
//│ 	[NotEver _lh_first_arg1³]: 414
//│ 	[YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]: 423
//│ 	[YesIts 1 _lh_findhash'_arg2⁰]: 1057
//│ 	[NotEver 1]: 1079
//│ case _lh_first_arg2³ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent³ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 437 --->
//│ 	[LH_C f⁵(h⁹) map_lh_₃(f⁵, t⁹)]: 449
//│ 	[LH_N]: 450
//│ case ls⁸ of {LH_C h⁹ t⁹ => [LH_C f⁵(h⁹) map_lh_₃(f⁵, t⁹)] | LH_N  => [LH_N]}: 451 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 1159
//│ 	[LH_N]: 1173
//│ case _lh_ends_arg1⁰ of {K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]] | _  => error⁰}: 461 --->
//│ 	[K k⁰ head_lh_₂(k⁰) last_lh_₂(k⁰) length_lh_₄(k⁰)]: 555
//│ case ls⁹ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 474 --->
//│ 	[LH_C f⁰(h³) map_lh_₇(f⁰, t³)]: 58
//│ 	[LH_N]: 59
//│ case lss⁰ of {LH_C h¹¹ t¹¹ => mappend_lh_₅(h¹¹, concat_lh_₁(t¹¹)) | LH_N  => [LH_N]}: 542 --->
//│ 	[LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)]: 472
//│ 	[LH_N]: 473
//│ case xs¹ of {LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹)] | LH_N  => ys¹}: 578 --->
//│ 	[LH_C h¹² mappend_lh_₄(t¹², ys¹)]: 576
//│ 	[LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 987
//│ 	[LH_N]: 992
//│ 	[LH_N]: 1458
//│ case _lh_member_arg2¹ of {LH_N  => [False] | LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1¹, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1¹, _lh_member_LH_C_1¹)) | _  => error⁰}: 597 --->
//│ 	[LH_C h¹² mappend_lh_₄(t¹², ys¹)]: 576
//│ 	[LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 987
//│ 	[LH_N]: 992
//│ 	[LH_N]: 1458
//│ case _lh_member_arg2² of {LH_N  => [False] | LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1², _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1², _lh_member_LH_C_1²)) | _  => error⁰}: 616 --->
//│ 	[LH_C h¹² mappend_lh_₄(t¹², ys¹)]: 576
//│ 	[LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 987
//│ 	[LH_N]: 992
//│ case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 632 --->
//│ 	[LH_N]: 1036
//│ 	[LH_C _lh_ends_K_2² [LH_N]]: 1037
//│ 	[LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1038
//│ case ls¹⁰ of {LH_C h¹³ t¹³ => f⁷(h¹³, foldr_lh_₁(f⁷, i¹, t¹³)) | LH_N  => i¹}: 648 --->
//│ 	[LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]: 664
//│ 	[LH_N]: 1020
//│ 	[LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)]: 1306
//│ 	[LH_N]: 1307
//│ case _lh_select_arg3⁰ of {LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1⁰(_lh_select_arg2⁰) then [LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]] | _  => error⁰}: 668 --->
//│ 	[LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰]: 660
//│ 	[LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]: 665
//│ 	[LH_P2 [LH_N] [LH_N]]: 1021
//│ case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰}: 709 --->
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1120
//│ 	[LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1138
//│ 	[LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1141
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m¹]: 1190
//│ 	[LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1209
//│ case _lh_assocm_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1⁰, _lh_assocm_LH_P2_0⁰) then [Just _lh_assocm_LH_P2_1⁰] else assocm_lh_₂(_lh_assocm_arg1⁰, _lh_assocm_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 711 --->
//│ 	[LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)]: 743
//│ 	[LH_N]: 1340
//│ case xs² of {LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)] | LH_N  => ys²}: 745 --->
//│ 	[LH_N]: 1121
//│ 	[LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]]: 1122
//│ 	[LH_N]: 1142
//│ 	[LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]: 1143
//│ 	[LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]: 1144
//│ 	[LH_N]: 1191
//│ 	[LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]]: 1192
//│ 	[LH_N]: 1210
//│ 	[LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]]: 1211
//│ 	[LH_N]: 1222
//│ case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 787 --->
//│ 	[K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1072
//│ case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰}: 807 --->
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m⁰]: 1120
//│ 	[LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹]: 1138
//│ 	[LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹]: 1141
//│ 	[LH_P2 _lh_findhash'_K_1⁰ m¹]: 1190
//│ 	[LH_P2 _lh_findhash'_K_2⁰ n⁰]: 1209
//│ case _lh_assocm_arg2¹ of {LH_N  => [Nothing] | LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1¹, _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1¹, _lh_assocm_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 809 --->
//│ 	[LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys²)]: 743
//│ 	[LH_N]: 1340
//│ case _lh_hinsert_arg2⁰ of {H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => let lo'⁰ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1⁰)
//│ in let hi'⁰ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1⁰)
//│ in if (member_lh_₃(_lh_hinsert_arg1⁰, _lh_hinsert_H_2⁰) || (((1 + hi'⁰) - lo'⁰) > length_lh_₃(keys_lh_₄(0)))) then [Nothing] else [Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]] | _  => error⁰}: 862 --->
//│ 	[H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]: 856
//│ 	[H [Nothing] [Nothing] [LH_N]]: 1338
//│ case ls¹¹ of {LH_C h¹⁵ t¹⁵ => (1 + length_lh_₂(t¹⁵)) | LH_N  => 0}: 874 --->
//│ 	[LH_N]: 105
//│ 	[LH_C [LH_P2 _lh_histins_arg1⁰ 1] [LH_N]]: 106
//│ 	[LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰]: 121
//│ 	[LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1⁰, _lh_histins_LH_C_1⁰)]: 130
//│ 	[LH_N]: 564
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 993 --->
//│ 	[LH_N]: 1027
//│ 	[LH_C _lh_ends_K_2¹ [LH_N]]: 1028
//│ 	[LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]: 1029
//│ case _lh_ends_arg1¹ of {K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]] | _  => error⁰}: 1031 --->
//│ 	[K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₁(k¹)]: 1509
//│ case _lh_ends_arg1² of {K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]] | _  => error⁰}: 1040 --->
//│ 	[K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₁(k¹)]: 1509
//│ case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1051 --->
//│ 	[LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 658
//│ 	[LH_N]: 1019
//│ 	[LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1265
//│ case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰}: 1088 --->
//│ 	[Nothing]: 848
//│ 	[Just [H [Just lo'⁰] [Just hi'⁰] [LH_C _lh_hinsert_arg1⁰ _lh_hinsert_H_2⁰]]]: 857
//│ case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}: 1147 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²]: 1155
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1163 --->
//│ 	[LH_C a⁴ enumFromTo_lh_₁((a⁴ + 1), b⁴)]: 942
//│ 	[LH_N]: 943
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]}: 1174 --->
//│ 	[LH_C a³ enumFromTo_lh_₂((a³ + 1), b³)]: 922
//│ 	[LH_N]: 923
//│ case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰}: 1203 --->
//│ 	[Nothing]: 791
//│ 	[Just _lh_assocm_LH_P2_1¹]: 799
//│ case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰}: 1225 --->
//│ 	[Nothing]: 791
//│ 	[Just _lh_assocm_LH_P2_1¹]: 799
//│ case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1227 --->
//│ 	[Nothing]: 693
//│ 	[Just _lh_assocm_LH_P2_1⁰]: 701
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1229 --->
//│ 	[LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1107
//│ case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁴ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁵ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1234 --->
//│ 	[K k¹ head_lh_₁(k¹) last_lh_₁(k¹) length_lh_₁(k¹)]: 1509
//│ case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁴ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁵ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1236 --->
//│ 	[LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)]: 1049
//│ 	[LH_N]: 1241
//│ case _lh_matchIdent⁷ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰}: 1274 --->
//│ 	[LH_P2 [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰] _lh_select_LH_P2_1⁰]: 660
//│ 	[LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]]: 665
//│ 	[LH_P2 [LH_N] [LH_N]]: 1021
//│ case _lh_blocked'_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => let ds'⁰ = union_lh_₁(_lh_blocked'_arg1⁰, ends_lh_₂(_lh_blocked'_LH_C_0⁰))
//│ in let _lh_matchIdent⁷ = partition'_lh_₁((fun x¹ -> subset_lh_₁(ends_lh_₁(x¹), ds'⁰)), _lh_blocked'_LH_C_1⁰)
//│ in case _lh_matchIdent⁷ of {LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂([LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰], blocked'_lh_₁(ds'⁰, _lh_blocked'_LH_P2_1⁰)) | _  => error⁰} | _  => error⁰}: 1278 --->
//│ 	[LH_C _lh_select_arg2⁰ _lh_select_LH_P2_1⁰]: 664
//│ 	[LH_N]: 1020
//│ 	[LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)]: 1306
//│ 	[LH_N]: 1307
//│ case ls¹² of {LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷)) | LH_N  => 0}: 1290 --->
//│ 	[LH_N]: 1350
//│ 	[LH_C 'e' [LH_N]]: 1351
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 1352
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1353
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1354
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1355
//│ 	[LH_N]: 1362
//│ 	[LH_C 'a' [LH_N]]: 1363
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 1364
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1365
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1366
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1367
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1368
//│ 	[LH_N]: 1374
//│ 	[LH_C 'h' [LH_N]]: 1375
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 1376
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1377
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1378
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1379
//│ 	[LH_N]: 1387
//│ 	[LH_C 't' [LH_N]]: 1388
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 1389
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1390
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1391
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1392
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1393
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1394
//│ 	[LH_N]: 1406
//│ 	[LH_C 'e' [LH_N]]: 1407
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 1408
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1409
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1410
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1411
//│ 	[LH_N]: 1418
//│ 	[LH_C 'a' [LH_N]]: 1419
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 1420
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1421
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1422
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1423
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1424
//│ 	[LH_N]: 1430
//│ 	[LH_C 'h' [LH_N]]: 1431
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 1432
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1433
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1434
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1435
//│ 	[LH_N]: 1443
//│ 	[LH_C 't' [LH_N]]: 1444
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 1445
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1446
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1447
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1448
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1449
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1450
//│ case ls¹³ of {LH_C h¹⁸ t¹⁸ => h¹⁸ | LH_N  => error⁰}: 1295 --->
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1355
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1368
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1379
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1394
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1411
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1424
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1435
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1450
//│ case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308 --->
//│ 	[LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)]: 1470
//│ 	[LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)]: 1491
//│ 	[LH_N]: 1492
//│ 	[LH_N]: 1494
//│ case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}: 1320 --->
//│ 	[LH_N]: 1350
//│ 	[LH_C 'e' [LH_N]]: 1351
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 1352
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1353
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1354
//│ 	[LH_N]: 1362
//│ 	[LH_C 'a' [LH_N]]: 1363
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 1364
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1365
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1366
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1367
//│ 	[LH_N]: 1374
//│ 	[LH_C 'h' [LH_N]]: 1375
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 1376
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1377
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1378
//│ 	[LH_N]: 1387
//│ 	[LH_C 't' [LH_N]]: 1388
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 1389
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1390
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1391
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1392
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1393
//│ 	[LH_N]: 1406
//│ 	[LH_C 'e' [LH_N]]: 1407
//│ 	[LH_C 'l' [LH_C 'e' [LH_N]]]: 1408
//│ 	[LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]: 1409
//│ 	[LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]: 1410
//│ 	[LH_N]: 1418
//│ 	[LH_C 'a' [LH_N]]: 1419
//│ 	[LH_C 'n' [LH_C 'a' [LH_N]]]: 1420
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]: 1421
//│ 	[LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]: 1422
//│ 	[LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]: 1423
//│ 	[LH_N]: 1430
//│ 	[LH_C 'h' [LH_N]]: 1431
//│ 	[LH_C 'c' [LH_C 'h' [LH_N]]]: 1432
//│ 	[LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]: 1433
//│ 	[LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]: 1434
//│ 	[LH_N]: 1443
//│ 	[LH_C 't' [LH_N]]: 1444
//│ 	[LH_C 'o' [LH_C 't' [LH_N]]]: 1445
//│ 	[LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]: 1446
//│ 	[LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]: 1447
//│ 	[LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]: 1448
//│ 	[LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]: 1449
//│ case _lh_last_arg1¹ of {LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => let go¹ = (fun _lh_go_arg1¹ -> (fun _lh_go_arg2¹ -> case _lh_go_arg2¹ of {LH_N  => _lh_go_arg1¹ | LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go¹(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹) | _  => error⁰}))
//│ in go¹(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹) | _  => error⁰}: 1330 --->
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1355
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1368
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1379
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1394
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]: 1411
//│ 	[LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]: 1424
//│ 	[LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]: 1435
//│ 	[LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]: 1450
//│ case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472 --->
//│ 	[LH_N]: 1395
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1396
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1397
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1398
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1399
//│ case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493 --->
//│ 	[LH_N]: 1451
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1452
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1453
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1454
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1455
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)]: 28 --->
//│ 	case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 97
//│ [LH_C f⁰(h³) map_lh_₇(f⁰, t³)]: 58 --->
//│ 	case ls⁹ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 474
//│ [LH_N]: 59 --->
//│ 	case ls⁹ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 474
//│ [LH_C f²(h⁵) map_lh_₆(f², t⁵)]: 175 --->
//│ 	case _lh_first_arg2⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent⁰ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 163
//│ [LH_N]: 176 --->
//│ 	case _lh_first_arg2⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent⁰ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 163
//│ [LH_C f³(h⁶) map_lh_₅(f³, t⁶)]: 217 --->
//│ 	case _lh_first_arg2¹ of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent¹ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 205
//│ [LH_N]: 218 --->
//│ 	case _lh_first_arg2¹ of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent¹ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 205
//│ [LH_N]: 345 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 346 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 347 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 348 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 349 --->
//│ 	case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293
//│ [LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)]: 407 --->
//│ 	case _lh_first_arg2² of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent² = _lh_first_LH_C_0²
//│ in case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 395
//│ [LH_N]: 408 --->
//│ 	case _lh_first_arg2² of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent² = _lh_first_LH_C_0²
//│ in case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 395
//│ [LH_C f⁵(h⁹) map_lh_₃(f⁵, t⁹)]: 449 --->
//│ 	case _lh_first_arg2³ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent³ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 437
//│ [LH_N]: 450 --->
//│ 	case _lh_first_arg2³ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent³ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 437
//│ [LH_N]: 457 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)] | LH_N  => ys⁰}: 30
//│ [LH_C _lh_ends_K_2⁰ [LH_N]]: 458 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)] | LH_N  => ys⁰}: 30
//│ [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]: 459 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)] | LH_N  => ys⁰}: 30
//│ [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)]: 472 --->
//│ 	case lss⁰ of {LH_C h¹¹ t¹¹ => mappend_lh_₅(h¹¹, concat_lh_₁(t¹¹)) | LH_N  => [LH_N]}: 542
//│ [LH_N]: 473 --->
//│ 	case lss⁰ of {LH_C h¹¹ t¹¹ => mappend_lh_₅(h¹¹, concat_lh_₁(t¹¹)) | LH_N  => [LH_N]}: 542
//│ [LH_N]: 527 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 528 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 529 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 530 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 531 --->
//│ 	case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60
//│ [LH_N]: 541 --->
//│ 	case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 97
//│ [K k⁰ head_lh_₂(k⁰) last_lh_₂(k⁰) length_lh_₄(k⁰)]: 555 --->
//│ 	case _lh_ends_arg1⁰ of {K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]] | _  => error⁰}: 461
//│ [LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 658 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1051
//│ [LH_C a⁰ enumFromTo_lh_₅((a⁰ + 1), b⁰)]: 687 --->
//│ 	case ls⁵ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₅(f³, t⁶)] | LH_N  => [LH_N]}: 219
//│ [LH_N]: 688 --->
//│ 	case ls⁵ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₅(f³, t⁶)] | LH_N  => [LH_N]}: 219
//│ [Nothing]: 693 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1227
//│ [Just _lh_assocm_LH_P2_1⁰]: 701 --->
//│ 	case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1227
//│ [LH_C a¹ enumFromTo_lh_₄((a¹ + 1), b¹)]: 763 --->
//│ 	case ls⁴ of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lh_₆(f², t⁵)] | LH_N  => [LH_N]}: 177
//│ [LH_N]: 764 --->
//│ 	case ls⁴ of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lh_₆(f², t⁵)] | LH_N  => [LH_N]}: 177
//│ [LH_C a² enumFromTo_lh_₃((a² + 1), b²)]: 902 --->
//│ 	case ls⁷ of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)] | LH_N  => [LH_N]}: 409
//│ [LH_N]: 903 --->
//│ 	case ls⁷ of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)] | LH_N  => [LH_N]}: 409
//│ [LH_C a³ enumFromTo_lh_₂((a³ + 1), b³)]: 922 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]}: 1174
//│ [LH_N]: 923 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]}: 1174
//│ [LH_C a⁴ enumFromTo_lh_₁((a⁴ + 1), b⁴)]: 942 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1163
//│ [LH_N]: 943 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1163
//│ [LH_N]: 1019 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1051
//│ [LH_N]: 1027 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 993
//│ [LH_C _lh_ends_K_2¹ [LH_N]]: 1028 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 993
//│ [LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]: 1029 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 993
//│ [LH_N]: 1036 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 632
//│ [LH_C _lh_ends_K_2² [LH_N]]: 1037 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 632
//│ [LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1038 --->
//│ 	case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 632
//│ [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)]: 1049 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁴ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁵ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1236
//│ [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1072 --->
//│ 	case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 787
//│ [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1107 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1229
//│ [LH_N]: 1241 --->
//│ 	case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁴ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁵ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1236
//│ [LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1265 --->
//│ 	case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1051
//│ [LH_N]: 1395 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1396 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1397 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1398 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1399 --->
//│ 	case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472
//│ [LH_N]: 1451 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1452 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1453 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1454 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1455 --->
//│ 	case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493
//│ [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)]: 1470 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308
//│ [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)]: 1491 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308
//│ [LH_N]: 1492 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308
//│ [LH_N]: 1494 --->
//│ 	case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308
//│ ------------------
//│ case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)] | LH_N  => ys⁰}: 30 --->
//│ 	[LH_N]: 457
//│ 	[LH_C _lh_ends_K_2⁰ [LH_N]]: 458
//│ 	[LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]]: 459
//│ case ls² of {LH_C h³ t³ => [LH_C f⁰(h³) map_lh_₇(f⁰, t³)] | LH_N  => [LH_N]}: 60 --->
//│ 	[LH_N]: 527
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 528
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 529
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 530
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 531
//│ case ls³ of {LH_C h⁴ t⁴ => f¹(h⁴, foldr_lh_₂(f¹, i⁰, t⁴)) | LH_N  => i⁰}: 97 --->
//│ 	[LH_C h⁰ mappend_lh_₅(t⁰, ys⁰)]: 28
//│ 	[LH_N]: 541
//│ case _lh_first_arg2⁰ of {LH_N  => [NotEver _lh_first_arg1⁰] | LH_C _lh_first_LH_C_0⁰ _lh_first_LH_C_1⁰ => let _lh_matchIdent⁰ = _lh_first_LH_C_0⁰
//│ in case _lh_matchIdent⁰ of {YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁰ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰] | NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁰ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 163 --->
//│ 	[LH_C f²(h⁵) map_lh_₆(f², t⁵)]: 175
//│ 	[LH_N]: 176
//│ case ls⁴ of {LH_C h⁵ t⁵ => [LH_C f²(h⁵) map_lh_₆(f², t⁵)] | LH_N  => [LH_N]}: 177 --->
//│ 	[LH_C a¹ enumFromTo_lh_₄((a¹ + 1), b¹)]: 763
//│ 	[LH_N]: 764
//│ case _lh_first_arg2¹ of {LH_N  => [NotEver _lh_first_arg1¹] | LH_C _lh_first_LH_C_0¹ _lh_first_LH_C_1¹ => let _lh_matchIdent¹ = _lh_first_LH_C_0¹
//│ in case _lh_matchIdent¹ of {YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹] | NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹ + _lh_first_NotEver_0¹), _lh_first_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 205 --->
//│ 	[LH_C f³(h⁶) map_lh_₅(f³, t⁶)]: 217
//│ 	[LH_N]: 218
//│ case ls⁵ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₅(f³, t⁶)] | LH_N  => [LH_N]}: 219 --->
//│ 	[LH_C a⁰ enumFromTo_lh_₅((a⁰ + 1), b⁰)]: 687
//│ 	[LH_N]: 688
//│ case ls⁶ of {LH_C h⁷ t⁷ => (1 + length_lh_₃(t⁷)) | LH_N  => 0}: 293 --->
//│ 	[LH_N]: 345
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 346
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 347
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 348
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 349
//│ case _lh_first_arg2² of {LH_N  => [NotEver _lh_first_arg1²] | LH_C _lh_first_LH_C_0² _lh_first_LH_C_1² => let _lh_matchIdent² = _lh_first_LH_C_0²
//│ in case _lh_matchIdent² of {YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1² + _lh_first_YesIts_0²) _lh_first_YesIts_1²] | NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1² + _lh_first_NotEver_0²), _lh_first_LH_C_1²) | _  => error⁰} | _  => error⁰}: 395 --->
//│ 	[LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)]: 407
//│ 	[LH_N]: 408
//│ case ls⁷ of {LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lh_₄(f⁴, t⁸)] | LH_N  => [LH_N]}: 409 --->
//│ 	[LH_C a² enumFromTo_lh_₃((a² + 1), b²)]: 902
//│ 	[LH_N]: 903
//│ case _lh_first_arg2³ of {LH_N  => [NotEver _lh_first_arg1³] | LH_C _lh_first_LH_C_0³ _lh_first_LH_C_1³ => let _lh_matchIdent³ = _lh_first_LH_C_0³
//│ in case _lh_matchIdent³ of {YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1³ + _lh_first_YesIts_0³) _lh_first_YesIts_1³] | NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1³ + _lh_first_NotEver_0³), _lh_first_LH_C_1³) | _  => error⁰} | _  => error⁰}: 437 --->
//│ 	[LH_C f⁵(h⁹) map_lh_₃(f⁵, t⁹)]: 449
//│ 	[LH_N]: 450
//│ case _lh_ends_arg1⁰ of {K _lh_ends_K_0⁰ _lh_ends_K_1⁰ _lh_ends_K_2⁰ _lh_ends_K_3⁰ => [LH_C _lh_ends_K_1⁰ [LH_C _lh_ends_K_2⁰ [LH_N]]] | _  => error⁰}: 461 --->
//│ 	[K k⁰ head_lh_₂(k⁰) last_lh_₂(k⁰) length_lh_₄(k⁰)]: 555
//│ case ls⁹ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 474 --->
//│ 	[LH_C f⁰(h³) map_lh_₇(f⁰, t³)]: 58
//│ 	[LH_N]: 59
//│ case lss⁰ of {LH_C h¹¹ t¹¹ => mappend_lh_₅(h¹¹, concat_lh_₁(t¹¹)) | LH_N  => [LH_N]}: 542 --->
//│ 	[LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)]: 472
//│ 	[LH_N]: 473
//│ case _lh_all_arg2⁰ of {LH_N  => [True] | LH_C _lh_all_LH_C_0⁰ _lh_all_LH_C_1⁰ => if _lh_all_arg1⁰(_lh_all_LH_C_0⁰) then all_lh_₁(_lh_all_arg1⁰, _lh_all_LH_C_1⁰) else [False] | _  => error⁰}: 632 --->
//│ 	[LH_N]: 1036
//│ 	[LH_C _lh_ends_K_2² [LH_N]]: 1037
//│ 	[LH_C _lh_ends_K_1² [LH_C _lh_ends_K_2² [LH_N]]]: 1038
//│ case _lh_hash_arg2⁰ of {K _lh_hash_K_0⁰ _lh_hash_K_1⁰ _lh_hash_K_2⁰ _lh_hash_K_3⁰ => ((_lh_hash_K_3⁰ + assoc_lh_₂(_lh_hash_K_1⁰, _lh_hash_arg1⁰)) + assoc_lh_₁(_lh_hash_K_2⁰, _lh_hash_arg1⁰)) | _  => error⁰}: 787 --->
//│ 	[K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]: 1072
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁰, _lh_union_arg1⁰)) then [LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] else _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰) | LH_N  => [LH_N]}: 993 --->
//│ 	[LH_N]: 1027
//│ 	[LH_C _lh_ends_K_2¹ [LH_N]]: 1028
//│ 	[LH_C _lh_ends_K_1¹ [LH_C _lh_ends_K_2¹ [LH_N]]]: 1029
//│ case xs³ of {LH_C h¹⁶ t¹⁶ => [LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)] | LH_N  => ys³}: 1051 --->
//│ 	[LH_C _lh_select_arg2⁰ _lh_select_LH_P2_0⁰]: 658
//│ 	[LH_N]: 1019
//│ 	[LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_P2_0⁰]: 1265
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1163 --->
//│ 	[LH_C a⁴ enumFromTo_lh_₁((a⁴ + 1), b⁴)]: 942
//│ 	[LH_N]: 943
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]}: 1174 --->
//│ 	[LH_C a³ enumFromTo_lh_₂((a³ + 1), b³)]: 922
//│ 	[LH_N]: 923
//│ case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰}: 1227 --->
//│ 	[Nothing]: 693
//│ 	[Just _lh_assocm_LH_P2_1⁰]: 701
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1229 --->
//│ 	[LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]: 1107
//│ case _lh_findhash'_arg3⁰ of {LH_N  => [YesIts 1 _lh_findhash'_arg2⁰] | LH_C _lh_findhash'_LH_C_0⁰ _lh_findhash'_LH_C_1⁰ => case _lh_findhash'_LH_C_0⁰ of {K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => let try⁰ = (fun newAssocs⁰ -> let newCharAssocs⁰ = mappend_lh_₃(newAssocs⁰, _lh_findhash'_arg2⁰)
//│ in let _lh_matchIdent⁴ = hinsert_lh_₁(hash_lh_₁(newCharAssocs⁰, [K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰]), _lh_findhash'_arg1⁰)
//│ in case _lh_matchIdent⁴ of {Nothing  => [NotEver 1] | Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs⁰, _lh_findhash'_LH_C_1⁰) | _  => error⁰})
//│ in let maxval⁰ = length_lh_₂(freqtab_lh_₁(0))
//│ in let _lh_matchIdent⁵ = [LH_P2 assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁰) assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁰)]
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_findhash'_LH_P2_0⁰ _lh_findhash'_LH_P2_1⁰ => case _lh_findhash'_LH_P2_0⁰ of {Nothing  => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => if polyEq⁰(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰) then firstSuccess_lh_₄((fun m⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m⁰] [LH_N]])), enumFromTo_lh_₄(0, maxval⁰)) else firstSuccess_lh_₁((fun mn⁰ -> let _lh_matchIdent⁶ = mn⁰
//│ in case _lh_matchIdent⁶ of {LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2⁰ _lh_findhash'_LH_P2_1¹] [LH_N]]]) | _  => error⁰}), let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_h²] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)})
//│ in _lh_listcomp_fun²(enumFromTo_lh_₁(0, maxval⁰)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(enumFromTo_lh_₂(0, maxval⁰))) | Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m¹ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_1⁰ m¹] [LH_N]])), enumFromTo_lh_₅(0, maxval⁰)) | _  => error⁰} | Just _lh_findhash'_Just_0² => case _lh_findhash'_LH_P2_1⁰ of {Nothing  => firstSuccess_lh_₂((fun n⁰ -> try⁰([LH_C [LH_P2 _lh_findhash'_K_2⁰ n⁰] [LH_N]])), enumFromTo_lh_₃(0, maxval⁰)) | Just _lh_findhash'_Just_0³ => try⁰([LH_N]) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1236 --->
//│ 	[LH_C h¹⁶ mappend_lh_₂(t¹⁶, ys³)]: 1049
//│ 	[LH_N]: 1241
//│ case ls¹⁴ of {LH_C h¹⁹ t¹⁹ => [LH_C f⁸(h¹⁹) map_lh_₁(f⁸, t¹⁹)] | LH_N  => [LH_N]}: 1308 --->
//│ 	[LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)]: 1470
//│ 	[LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)]: 1491
//│ 	[LH_N]: 1492
//│ 	[LH_N]: 1494
//│ case xs⁴ of {LH_C h²⁰ t²⁰ => [LH_C h²⁰ mappend_lh_₁(t²⁰, ys⁴)] | LH_N  => ys⁴}: 1472 --->
//│ 	[LH_N]: 1395
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1396
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1397
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1398
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1399
//│ case ls¹⁵ of {LH_C h²¹ t²¹ => [LH_C h²¹ take_lh_₁((n¹ - 1), t²¹)] | LH_N  => [LH_N]}: 1493 --->
//│ 	[LH_N]: 1451
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]: 1452
//│ 	[LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]: 1453
//│ 	[LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]: 1454
//│ 	[LH_C [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]] [LH_C [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]] [LH_C [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]] [LH_C [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]] [LH_N]]]]]: 1455
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testCichelli_nofib_lh_₁(primId⁰(6))
//│ def all_lh_₁(_lh_all_arg1⁴, _lh_all_arg2¹) = _lh_all_arg2¹(_lh_all_arg1⁴)
//│ def assoc_lh_₁(_lh_assoc_arg1³, _lh_assoc_arg2³) = case _lh_assoc_arg2³ of {
//│ 	LH_C _lh_assoc_LH_C_0¹ _lh_assoc_LH_C_1¹ => case _lh_assoc_LH_C_0¹ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0¹ _lh_assoc_LH_P2_1¹ => if polyEq⁰(_lh_assoc_arg1³, _lh_assoc_LH_P2_0¹) then _lh_assoc_LH_P2_1¹ else assoc_lh_₁(_lh_assoc_arg1³, _lh_assoc_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assoc_lh_₂(_lh_assoc_arg1², _lh_assoc_arg2²) = case _lh_assoc_arg2² of {
//│ 	LH_C _lh_assoc_LH_C_0⁰ _lh_assoc_LH_C_1⁰ => case _lh_assoc_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assoc_LH_P2_0⁰ _lh_assoc_LH_P2_1⁰ => if polyEq⁰(_lh_assoc_arg1², _lh_assoc_LH_P2_0⁰) then _lh_assoc_LH_P2_1⁰ else assoc_lh_₂(_lh_assoc_arg1², _lh_assoc_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₁(_lh_assocm_arg1², _lh_assocm_arg2²) = case _lh_assocm_arg2² of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_assocm_LH_C_0¹ _lh_assocm_LH_C_1¹ => case _lh_assocm_LH_C_0¹ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0¹ _lh_assocm_LH_P2_1¹ => if polyEq⁰(_lh_assocm_arg1², _lh_assocm_LH_P2_0¹) then [Just _lh_assocm_LH_P2_1¹] else assocm_lh_₁(_lh_assocm_arg1², _lh_assocm_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def assocm_lh_₂(_lh_assocm_arg1³, _lh_assocm_arg2³) = case _lh_assocm_arg2³ of {
//│ 	LH_N  => (fun _lh_findhash'_K_1² -> (fun _lh_findhash'_K_2² -> (fun _lh_findhash'_LH_P2_1³ -> (fun maxval⁵ -> (fun try³ -> case _lh_findhash'_LH_P2_1³ of {
//│ 		Nothing  => if polyEq⁰(_lh_findhash'_K_1², _lh_findhash'_K_2²) then firstSuccess_lh_₄((fun m² -> try³([LH_C [LH_P2 _lh_findhash'_K_1² m²] [LH_N]])), enumFromTo_lh_₄(0, maxval⁵)) else firstSuccess_lh_₁((fun mn¹ -> 
//│ 			let _lh_matchIdent¹⁴ = mn¹
//│ 			in case _lh_matchIdent¹⁴ of {
//│ 				LH_P2 _lh_findhash'_LH_P2_0¹ _lh_findhash'_LH_P2_1¹ => try³([LH_C [LH_P2 _lh_findhash'_K_1² _lh_findhash'_LH_P2_0¹] [LH_C [LH_P2 _lh_findhash'_K_2² _lh_findhash'_LH_P2_1¹] [LH_N]]])
//│ 				| _  => error⁰}), 
//│ 			let _lh_listcomp_fun¹⁴ = (fun _lh_listcomp_fun_para⁵ -> _lh_listcomp_fun_para⁵(_lh_listcomp_fun¹⁴, maxval⁵))
//│ 			in _lh_listcomp_fun¹⁴(enumFromTo_lh_₂(0, maxval⁵)))
//│ 		| Just _lh_findhash'_Just_0¹ => firstSuccess_lh_₃((fun m³ -> try³([LH_C [LH_P2 _lh_findhash'_K_1² m³] [LH_N]])), enumFromTo_lh_₅(0, maxval⁵))
//│ 		| _  => error⁰})))))
//│ 	| LH_C _lh_assocm_LH_C_0⁰ _lh_assocm_LH_C_1⁰ => case _lh_assocm_LH_C_0⁰ of {
//│ 		LH_P2 _lh_assocm_LH_P2_0⁰ _lh_assocm_LH_P2_1⁰ => if polyEq⁰(_lh_assocm_arg1³, _lh_assocm_LH_P2_0⁰) then (fun _lh_findhash'_K_1³ -> (fun _lh_findhash'_K_2³ -> (fun _lh_findhash'_LH_P2_1⁴ -> (fun maxval⁶ -> (fun try⁴ -> case _lh_findhash'_LH_P2_1⁴ of {
//│ 			Nothing  => firstSuccess_lh_₂((fun n³ -> try⁴([LH_C [LH_P2 _lh_findhash'_K_2³ n³] [LH_N]])), enumFromTo_lh_₃(0, maxval⁶))
//│ 			| Just _lh_findhash'_Just_0³ => try⁴([LH_N])
//│ 			| _  => error⁰}))))) else assocm_lh_₂(_lh_assocm_arg1³, _lh_assocm_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def attribkeys_lh_₁(_lh_attribkeys_arg1²) = map_lh_₁((fun k² -> [K k² head_lh_₁(k²) last_lh_₁(k²) length_lh_₁(k²)]), _lh_attribkeys_arg1²)
//│ def attribkeys_lh_₂(_lh_attribkeys_arg1³) = map_lh_₇((fun k³ -> 
//│ 	let _lh_ends_K_2³ = last_lh_₂(k³)
//│ 	in let _lh_ends_K_1³ = head_lh_₂(k³)
//│ 	in let t⁴² = 	
//│ 		let t⁴⁴ = (fun ys¹⁴ -> ys¹⁴)
//│ 		in let h⁴⁰ = _lh_ends_K_2³
//│ 		in (fun ys¹³ -> 
//│ 			let t⁴⁵ = mappend_lh_₅(t⁴⁴, ys¹³)
//│ 			in let h⁴¹ = h⁴⁰
//│ 			in (fun f³⁶ -> (fun i⁶ -> f³⁶(h⁴¹, foldr_lh_₂(f³⁶, i⁶, t⁴⁵)))))
//│ 	in let h³⁸ = _lh_ends_K_1³
//│ 	in (fun ys¹² -> 
//│ 		let t⁴³ = mappend_lh_₅(t⁴², ys¹²)
//│ 		in let h³⁹ = h³⁸
//│ 		in (fun f³⁵ -> (fun i⁵ -> f³⁵(h³⁹, foldr_lh_₂(f³⁵, i⁵, t⁴³)))))), _lh_attribkeys_arg1³)
//│ def blocked'_lh_₁(_lh_blocked'_arg1¹, _lh_blocked'_arg2¹) = case _lh_blocked'_arg2¹ of {
//│ 	LH_N  => (fun _lh_findhash'_arg2³ -> (fun _lh_findhash'_arg1³ -> [YesIts 1 _lh_findhash'_arg2³]))
//│ 	| LH_C _lh_blocked'_LH_C_0⁰ _lh_blocked'_LH_C_1⁰ => 
//│ 		let ds'¹ = union_lh_₁(_lh_blocked'_arg1¹, ends_lh_₂(_lh_blocked'_LH_C_0⁰))
//│ 		in let _lh_matchIdent¹⁵ = partition'_lh_₁((fun x³ -> subset_lh_₁(ends_lh_₁(x³), ds'¹)), _lh_blocked'_LH_C_1⁰)
//│ 		in case _lh_matchIdent¹⁵ of {
//│ 			LH_P2 _lh_blocked'_LH_P2_0⁰ _lh_blocked'_LH_P2_1⁰ => mappend_lh_₂(
//│ 				let t⁶² = _lh_blocked'_LH_P2_0⁰
//│ 				in let h⁵⁸ = _lh_blocked'_LH_C_0⁰
//│ 				in (fun ys²⁰ -> 
//│ 					let _lh_findhash'_LH_C_1² = mappend_lh_₂(t⁶², ys²⁰)
//│ 					in let _lh_findhash'_LH_C_0² = h⁵⁸
//│ 					in (fun _lh_findhash'_arg2⁴ -> (fun _lh_findhash'_arg1⁴ -> case _lh_findhash'_LH_C_0² of {
//│ 						K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => 
//│ 							let try⁵ = (fun newAssocs² -> 
//│ 								let newCharAssocs² = mappend_lh_₃(newAssocs², _lh_findhash'_arg2⁴)
//│ 								in let _lh_matchIdent¹⁶ = hinsert_lh_₁(hash_lh_₁(newCharAssocs², 
//│ 									let _lh_hash_K_3² = _lh_findhash'_K_3⁰
//│ 									in let _lh_hash_K_2² = _lh_findhash'_K_2⁰
//│ 									in let _lh_hash_K_1² = _lh_findhash'_K_1⁰
//│ 									in (fun _lh_hash_arg1³ -> ((_lh_hash_K_3² + assoc_lh_₂(_lh_hash_K_1², _lh_hash_arg1³)) + assoc_lh_₁(_lh_hash_K_2², _lh_hash_arg1³)))), _lh_findhash'_arg1⁴)
//│ 								in case _lh_matchIdent¹⁶ of {
//│ 									Nothing  => [NotEver 1]
//│ 									| Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs², _lh_findhash'_LH_C_1²)
//│ 									| _  => error⁰})
//│ 							in let maxval⁷ = length_lh_₂(freqtab_lh_₁(0))
//│ 							in let _lh_matchIdent¹⁷ = 	
//│ 								let _lh_findhash'_LH_P2_1⁵ = assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2⁴)
//│ 								in let _lh_findhash'_LH_P2_0³ = assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2⁴)
//│ 								in (fun _lh_findhash'_K_1⁴ -> (fun _lh_findhash'_K_2⁴ -> (fun maxval⁸ -> (fun try⁶ -> _lh_findhash'_LH_P2_0³(_lh_findhash'_K_1⁴, _lh_findhash'_K_2⁴, _lh_findhash'_LH_P2_1⁵, maxval⁸, try⁶)))))
//│ 							in _lh_matchIdent¹⁷(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰, maxval⁷, try⁵)
//│ 						| _  => error⁰}))), blocked'_lh_₁(ds'¹, _lh_blocked'_LH_P2_1⁰))
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def blocked_lh_₁(_lh_blocked_arg1¹) = blocked'_lh_₁([LH_N], _lh_blocked_arg1¹)
//│ def cichelli_lh_₁(_lh_cichelli_arg1¹) = 
//│ 	let attribkeys'¹ = attribkeys_lh_₁(mappend_lh_₁(keys_lh_₂(0), take_lh_₁((_lh_cichelli_arg1¹ % 2), keys_lh_₁(0))))
//│ 	in let hashkeys¹ = (fun _lh_funcomp_x¹ -> blocked_lh_₁(freqsorted_lh_₁(_lh_funcomp_x¹)))(attribkeys'¹)
//│ 	in findhash_lh_₁(hashkeys¹)
//│ def concat_lh_₁(lss¹) = lss¹(99)
//│ def ends_lh_₁(_lh_ends_arg1³) = case _lh_ends_arg1³ of {
//│ 	K _lh_ends_K_0² _lh_ends_K_1² _lh_ends_K_2² _lh_ends_K_3² => 
//│ 		let _lh_all_LH_C_1¹ = 	
//│ 			let _lh_all_LH_C_1² = (fun _lh_all_arg1³ -> [True])
//│ 			in let _lh_all_LH_C_0² = _lh_ends_K_2²
//│ 			in (fun _lh_all_arg1² -> if _lh_all_arg1²(_lh_all_LH_C_0²) then all_lh_₁(_lh_all_arg1², _lh_all_LH_C_1²) else [False])
//│ 		in let _lh_all_LH_C_0¹ = _lh_ends_K_1²
//│ 		in (fun _lh_all_arg1¹ -> if _lh_all_arg1¹(_lh_all_LH_C_0¹) then all_lh_₁(_lh_all_arg1¹, _lh_all_LH_C_1¹) else [False])
//│ 	| _  => error⁰}
//│ def ends_lh_₂(_lh_ends_arg1⁵) = case _lh_ends_arg1⁵ of {
//│ 	K _lh_ends_K_0¹ _lh_ends_K_1¹ _lh_ends_K_2¹ _lh_ends_K_3¹ => 
//│ 		let _lh_listcomp_fun_ls_t⁷ = 	
//│ 			let _lh_listcomp_fun_ls_t⁸ = (fun _lh_listcomp_fun¹³ -> (fun _lh_union_arg1⁴ -> [LH_N]))
//│ 			in let _lh_listcomp_fun_ls_h⁸ = _lh_ends_K_2¹
//│ 			in (fun _lh_listcomp_fun¹² -> (fun _lh_union_arg1³ -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁸, _lh_union_arg1³)) then [LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁸)] else _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁸)))
//│ 		in let _lh_listcomp_fun_ls_h⁷ = _lh_ends_K_1¹
//│ 		in (fun _lh_listcomp_fun¹¹ -> (fun _lh_union_arg1² -> if not⁰(member_lh_₂(_lh_listcomp_fun_ls_h⁷, _lh_union_arg1²)) then [LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁷)] else _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁷)))
//│ 	| _  => error⁰}
//│ def ends_lh_₃(_lh_ends_arg1⁴) = _lh_ends_arg1⁴
//│ def enumFromTo_lh_₁(a⁷, b⁷) = if (a⁷ <= b⁷) then 
//│ 	let _lh_listcomp_fun_ls_t⁴ = enumFromTo_lh_₁((a⁷ + 1), b⁷)
//│ 	in let _lh_listcomp_fun_ls_h⁴ = a⁷
//│ 	in (fun _lh_listcomp_fun_ls_h⁵ -> (fun _lh_listcomp_fun⁷ -> (fun _lh_listcomp_fun_ls_t⁵ -> (fun _lh_listcomp_fun⁸ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_h⁴] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁴)])))) else (fun _lh_listcomp_fun_ls_h⁶ -> (fun _lh_listcomp_fun⁹ -> (fun _lh_listcomp_fun_ls_t⁶ -> (fun _lh_listcomp_fun¹⁰ -> _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁶)))))
//│ def enumFromTo_lh_₂(a⁶, b⁶) = if (a⁶ <= b⁶) then 
//│ 	let _lh_listcomp_fun_ls_t³ = enumFromTo_lh_₂((a⁶ + 1), b⁶)
//│ 	in let _lh_listcomp_fun_ls_h³ = a⁶
//│ 	in (fun _lh_listcomp_fun⁴ -> (fun maxval³ -> 
//│ 		let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun_ls_h³, _lh_listcomp_fun⁵, _lh_listcomp_fun_ls_t³, _lh_listcomp_fun⁴))
//│ 		in _lh_listcomp_fun⁵(enumFromTo_lh_₁(0, maxval³)))) else (fun _lh_listcomp_fun⁶ -> (fun maxval⁴ -> [LH_N]))
//│ def enumFromTo_lh_₃(a⁹, b⁹) = if (a⁹ <= b⁹) then 
//│ 	let t⁴¹ = enumFromTo_lh_₃((a⁹ + 1), b⁹)
//│ 	in let h³⁷ = a⁹
//│ 	in (fun f³² -> 
//│ 		let _lh_first_LH_C_1⁶ = map_lh_₄(f³², t⁴¹)
//│ 		in let _lh_first_LH_C_0⁶ = f³²(h³⁷)
//│ 		in (fun _lh_first_arg1¹² -> 
//│ 			let _lh_matchIdent¹² = _lh_first_LH_C_0⁶
//│ 			in case _lh_matchIdent¹² of {
//│ 				YesIts _lh_first_YesIts_0² _lh_first_YesIts_1² => [YesIts (_lh_first_arg1¹² + _lh_first_YesIts_0²) _lh_first_YesIts_1²]
//│ 				| NotEver _lh_first_NotEver_0² => first_lh_₂((_lh_first_arg1¹² + _lh_first_NotEver_0²), _lh_first_LH_C_1⁶)
//│ 				| _  => error⁰})) else (fun f³³ -> (fun _lh_first_arg1¹³ -> [NotEver _lh_first_arg1¹³]))
//│ def enumFromTo_lh_₄(a⁵, b⁵) = if (a⁵ <= b⁵) then 
//│ 	let t²³ = enumFromTo_lh_₄((a⁵ + 1), b⁵)
//│ 	in let h²³ = a⁵
//│ 	in (fun f¹⁰ -> 
//│ 		let _lh_first_LH_C_1⁴ = map_lh_₆(f¹⁰, t²³)
//│ 		in let _lh_first_LH_C_0⁴ = f¹⁰(h²³)
//│ 		in (fun _lh_first_arg1⁶ -> 
//│ 			let _lh_matchIdent¹⁰ = _lh_first_LH_C_0⁴
//│ 			in case _lh_matchIdent¹⁰ of {
//│ 				YesIts _lh_first_YesIts_0⁰ _lh_first_YesIts_1⁰ => [YesIts (_lh_first_arg1⁶ + _lh_first_YesIts_0⁰) _lh_first_YesIts_1⁰]
//│ 				| NotEver _lh_first_NotEver_0⁰ => first_lh_₄((_lh_first_arg1⁶ + _lh_first_NotEver_0⁰), _lh_first_LH_C_1⁴)
//│ 				| _  => error⁰})) else (fun f¹¹ -> (fun _lh_first_arg1⁷ -> [NotEver _lh_first_arg1⁷]))
//│ def enumFromTo_lh_₅(a⁸, b⁸) = if (a⁸ <= b⁸) then 
//│ 	let t⁴⁰ = enumFromTo_lh_₅((a⁸ + 1), b⁸)
//│ 	in let h³⁶ = a⁸
//│ 	in (fun f²⁹ -> 
//│ 		let _lh_first_LH_C_1⁵ = map_lh_₅(f²⁹, t⁴⁰)
//│ 		in let _lh_first_LH_C_0⁵ = f²⁹(h³⁶)
//│ 		in (fun _lh_first_arg1¹⁰ -> 
//│ 			let _lh_matchIdent¹¹ = _lh_first_LH_C_0⁵
//│ 			in case _lh_matchIdent¹¹ of {
//│ 				YesIts _lh_first_YesIts_0¹ _lh_first_YesIts_1¹ => [YesIts (_lh_first_arg1¹⁰ + _lh_first_YesIts_0¹) _lh_first_YesIts_1¹]
//│ 				| NotEver _lh_first_NotEver_0¹ => first_lh_₃((_lh_first_arg1¹⁰ + _lh_first_NotEver_0¹), _lh_first_LH_C_1⁵)
//│ 				| _  => error⁰})) else (fun f³⁰ -> (fun _lh_first_arg1¹¹ -> [NotEver _lh_first_arg1¹¹]))
//│ def findhash'_lh_₁(_lh_findhash'_arg1², _lh_findhash'_arg2², _lh_findhash'_arg3¹) = _lh_findhash'_arg3¹(_lh_findhash'_arg2², _lh_findhash'_arg1²)
//│ def findhash_lh_₁(_lh_findhash_arg1¹) = findhash'_lh_₁([H [Nothing] [Nothing] [LH_N]], [LH_N], _lh_findhash_arg1¹)
//│ def firstSuccess_lh_₁(_lh_firstSuccess_arg1⁴, _lh_firstSuccess_arg2⁴) = first_lh_₁(0, map_lh_₃(_lh_firstSuccess_arg1⁴, _lh_firstSuccess_arg2⁴))
//│ def firstSuccess_lh_₂(_lh_firstSuccess_arg1⁷, _lh_firstSuccess_arg2⁷) = first_lh_₂(0, map_lh_₄(_lh_firstSuccess_arg1⁷, _lh_firstSuccess_arg2⁷))
//│ def firstSuccess_lh_₃(_lh_firstSuccess_arg1⁵, _lh_firstSuccess_arg2⁵) = first_lh_₃(0, map_lh_₅(_lh_firstSuccess_arg1⁵, _lh_firstSuccess_arg2⁵))
//│ def firstSuccess_lh_₄(_lh_firstSuccess_arg1⁶, _lh_firstSuccess_arg2⁶) = first_lh_₄(0, map_lh_₆(_lh_firstSuccess_arg1⁶, _lh_firstSuccess_arg2⁶))
//│ def first_lh_₁(_lh_first_arg1⁴, _lh_first_arg2⁴) = _lh_first_arg2⁴(_lh_first_arg1⁴)
//│ def first_lh_₂(_lh_first_arg1⁵, _lh_first_arg2⁵) = _lh_first_arg2⁵(_lh_first_arg1⁵)
//│ def first_lh_₃(_lh_first_arg1⁸, _lh_first_arg2⁶) = _lh_first_arg2⁶(_lh_first_arg1⁸)
//│ def first_lh_₄(_lh_first_arg1⁹, _lh_first_arg2⁷) = _lh_first_arg2⁷(_lh_first_arg1⁹)
//│ def foldr_lh_₁(f²³, i³, ls²⁰) = case ls²⁰ of {
//│ 	LH_C h¹³ t¹³ => f²³(h¹³, foldr_lh_₁(f²³, i³, t¹³))
//│ 	| LH_N  => i³}
//│ def foldr_lh_₂(f²⁴, i⁴, ls²¹) = ls²¹(f²⁴, i⁴)
//│ def freqsorted_lh_₁(_lh_freqsorted_arg1¹) = _lh_freqsorted_arg1¹
//│ def freqtab_lh_₁(_lh_freqtab_arg1¹) = histo_lh_₁(concat_lh_₁(map_lh_₂(ends_lh_₃, attribkeys_lh_₂(keys_lh_₃(0)))))
//│ def hash_lh_₁(_lh_hash_arg1², _lh_hash_arg2¹) = _lh_hash_arg2¹(_lh_hash_arg1²)
//│ def head_lh_₁(ls³¹) = case ls³¹ of {
//│ 	LH_C h¹⁸ t¹⁸ => h¹⁸
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls¹⁹) = case ls¹⁹ of {
//│ 	LH_C h² t² => h²
//│ 	| LH_N  => error⁰}
//│ def hinsert_lh_₁(_lh_hinsert_arg1¹, _lh_hinsert_arg2¹) = case _lh_hinsert_arg2¹ of {
//│ 	H _lh_hinsert_H_0⁰ _lh_hinsert_H_1⁰ _lh_hinsert_H_2⁰ => 
//│ 		let lo'¹ = minm_lh_₁(_lh_hinsert_H_0⁰, _lh_hinsert_arg1¹)
//│ 		in let hi'¹ = maxm_lh_₁(_lh_hinsert_H_1⁰, _lh_hinsert_arg1¹)
//│ 		in if (member_lh_₃(_lh_hinsert_arg1¹, _lh_hinsert_H_2⁰) || (((1 + hi'¹) - lo'¹) > length_lh_₃(keys_lh_₄(0)))) then [Nothing] else [Just [H [Just lo'¹] [Just hi'¹] [LH_C _lh_hinsert_arg1¹ _lh_hinsert_H_2⁰]]]
//│ 	| _  => error⁰}
//│ def histins_lh_₁(_lh_histins_arg1¹, _lh_histins_arg2¹) = case _lh_histins_arg2¹ of {
//│ 	LH_N  => [LH_C [LH_P2 _lh_histins_arg1¹ 1] [LH_N]]
//│ 	| LH_C _lh_histins_LH_C_0⁰ _lh_histins_LH_C_1⁰ => case _lh_histins_LH_C_0⁰ of {
//│ 		LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰ => if polyEq⁰(_lh_histins_arg1¹, _lh_histins_LH_P2_0⁰) then [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ (_lh_histins_LH_P2_1⁰ + 1)] _lh_histins_LH_C_1⁰] else [LH_C [LH_P2 _lh_histins_LH_P2_0⁰ _lh_histins_LH_P2_1⁰] histins_lh_₁(_lh_histins_arg1¹, _lh_histins_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def histo_lh_₁(_lh_histo_arg1¹) = foldr_lh_₂(histins_lh_₁, [LH_N], _lh_histo_arg1¹)
//│ def keys_lh_₁(_lh_keys_arg1⁶) = 
//│ 	let t⁴⁶ = 	
//│ 		let t⁴⁸ = 	
//│ 			let t⁵⁰ = 	
//│ 				let t⁵² = (fun n⁸ -> (fun f⁴¹ -> [LH_N]))
//│ 				in let h⁴⁸ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun n⁷ -> 
//│ 					let t⁵³ = take_lh_₁((n⁷ - 1), t⁵²)
//│ 					in let h⁴⁹ = h⁴⁸
//│ 					in (fun f⁴⁰ -> [LH_C f⁴⁰(h⁴⁹) map_lh_₁(f⁴⁰, t⁵³)]))
//│ 			in let h⁴⁶ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun n⁶ -> 
//│ 				let t⁵¹ = take_lh_₁((n⁶ - 1), t⁵⁰)
//│ 				in let h⁴⁷ = h⁴⁶
//│ 				in (fun f³⁹ -> [LH_C f³⁹(h⁴⁷) map_lh_₁(f³⁹, t⁵¹)]))
//│ 		in let h⁴⁴ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun n⁵ -> 
//│ 			let t⁴⁹ = take_lh_₁((n⁵ - 1), t⁴⁸)
//│ 			in let h⁴⁵ = h⁴⁴
//│ 			in (fun f³⁸ -> [LH_C f³⁸(h⁴⁵) map_lh_₁(f³⁸, t⁴⁹)]))
//│ 	in let h⁴² = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun n⁴ -> 
//│ 		let t⁴⁷ = take_lh_₁((n⁴ - 1), t⁴⁶)
//│ 		in let h⁴³ = h⁴²
//│ 		in (fun f³⁷ -> [LH_C f³⁷(h⁴³) map_lh_₁(f³⁷, t⁴⁷)]))
//│ def keys_lh_₂(_lh_keys_arg1⁷) = 
//│ 	let t⁵⁴ = 	
//│ 		let t⁵⁶ = 	
//│ 			let t⁵⁸ = 	
//│ 				let t⁶⁰ = (fun ys¹⁹ -> ys¹⁹)
//│ 				in let h⁵⁶ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun ys¹⁸ -> 
//│ 					let t⁶¹ = mappend_lh_₁(t⁶⁰, ys¹⁸)
//│ 					in let h⁵⁷ = h⁵⁶
//│ 					in (fun f⁴⁶ -> [LH_C f⁴⁶(h⁵⁷) map_lh_₁(f⁴⁶, t⁶¹)]))
//│ 			in let h⁵⁴ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun ys¹⁷ -> 
//│ 				let t⁵⁹ = mappend_lh_₁(t⁵⁸, ys¹⁷)
//│ 				in let h⁵⁵ = h⁵⁴
//│ 				in (fun f⁴⁵ -> [LH_C f⁴⁵(h⁵⁵) map_lh_₁(f⁴⁵, t⁵⁹)]))
//│ 		in let h⁵² = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun ys¹⁶ -> 
//│ 			let t⁵⁷ = mappend_lh_₁(t⁵⁶, ys¹⁶)
//│ 			in let h⁵³ = h⁵²
//│ 			in (fun f⁴⁴ -> [LH_C f⁴⁴(h⁵³) map_lh_₁(f⁴⁴, t⁵⁷)]))
//│ 	in let h⁵⁰ = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun ys¹⁵ -> 
//│ 		let t⁵⁵ = mappend_lh_₁(t⁵⁴, ys¹⁵)
//│ 		in let h⁵¹ = h⁵⁰
//│ 		in (fun f⁴³ -> [LH_C f⁴³(h⁵¹) map_lh_₁(f⁴³, t⁵⁵)]))
//│ def keys_lh_₃(_lh_keys_arg1⁴) = 
//│ 	let t²⁴ = 	
//│ 		let t²⁷ = 	
//│ 			let t³⁰ = 	
//│ 				let t³³ = (fun f²⁰ -> (fun f²¹ -> (fun _lh_dummy⁴ -> (fun f²² -> (fun i² -> i²)))))
//│ 				in let h³³ = [LH_C 'a' [LH_C 'p' [LH_C 'r' [LH_C 'i' [LH_C 'c' [LH_C 'o' [LH_C 't' [LH_N]]]]]]]]
//│ 				in (fun f¹⁸ -> 
//│ 					let t³⁴ = map_lh_₇(f¹⁸, t³³)
//│ 					in let h³⁴ = f¹⁸(h³³)
//│ 					in (fun f¹⁹ -> 
//│ 						let t³⁵ = map_lh_₂(f¹⁹, t³⁴)
//│ 						in let h³⁵ = f¹⁹(h³⁴)
//│ 						in (fun _lh_dummy³ -> mappend_lh_₅(h³⁵, concat_lh_₁(t³⁵)))))
//│ 			in let h³⁰ = [LH_C 'p' [LH_C 'e' [LH_C 'a' [LH_C 'c' [LH_C 'h' [LH_N]]]]]]
//│ 			in (fun f¹⁶ -> 
//│ 				let t³¹ = map_lh_₇(f¹⁶, t³⁰)
//│ 				in let h³¹ = f¹⁶(h³⁰)
//│ 				in (fun f¹⁷ -> 
//│ 					let t³² = map_lh_₂(f¹⁷, t³¹)
//│ 					in let h³² = f¹⁷(h³¹)
//│ 					in (fun _lh_dummy² -> mappend_lh_₅(h³², concat_lh_₁(t³²)))))
//│ 		in let h²⁷ = [LH_C 'b' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_C 'n' [LH_C 'a' [LH_N]]]]]]]
//│ 		in (fun f¹⁴ -> 
//│ 			let t²⁸ = map_lh_₇(f¹⁴, t²⁷)
//│ 			in let h²⁸ = f¹⁴(h²⁷)
//│ 			in (fun f¹⁵ -> 
//│ 				let t²⁹ = map_lh_₂(f¹⁵, t²⁸)
//│ 				in let h²⁹ = f¹⁵(h²⁸)
//│ 				in (fun _lh_dummy¹ -> mappend_lh_₅(h²⁹, concat_lh_₁(t²⁹)))))
//│ 	in let h²⁴ = [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_N]]]]]]
//│ 	in (fun f¹² -> 
//│ 		let t²⁵ = map_lh_₇(f¹², t²⁴)
//│ 		in let h²⁵ = f¹²(h²⁴)
//│ 		in (fun f¹³ -> 
//│ 			let t²⁶ = map_lh_₂(f¹³, t²⁵)
//│ 			in let h²⁶ = f¹³(h²⁵)
//│ 			in (fun _lh_dummy⁰ -> mappend_lh_₅(h²⁶, concat_lh_₁(t²⁶)))))
//│ def keys_lh_₄(_lh_keys_arg1⁵) = 
//│ 	let t³⁶ = 	
//│ 		let t³⁷ = 	
//│ 			let t³⁸ = 	
//│ 				let t³⁹ = (fun _lh_dummy⁹ -> 0)
//│ 				in (fun _lh_dummy⁸ -> (1 + length_lh_₃(t³⁹)))
//│ 			in (fun _lh_dummy⁷ -> (1 + length_lh_₃(t³⁸)))
//│ 		in (fun _lh_dummy⁶ -> (1 + length_lh_₃(t³⁷)))
//│ 	in (fun _lh_dummy⁵ -> (1 + length_lh_₃(t³⁶)))
//│ def last_lh_₁(_lh_last_arg1³) = case _lh_last_arg1³ of {
//│ 	LH_C _lh_last_LH_C_0¹ _lh_last_LH_C_1¹ => 
//│ 		let go³ = (fun _lh_go_arg1³ -> (fun _lh_go_arg2³ -> case _lh_go_arg2³ of {
//│ 			LH_N  => _lh_go_arg1³
//│ 			| LH_C _lh_go_LH_C_0¹ _lh_go_LH_C_1¹ => go³(_lh_go_LH_C_0¹, _lh_go_LH_C_1¹)
//│ 			| _  => error⁰}))
//│ 		in go³(_lh_last_LH_C_0¹, _lh_last_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def last_lh_₂(_lh_last_arg1²) = case _lh_last_arg1² of {
//│ 	LH_C _lh_last_LH_C_0⁰ _lh_last_LH_C_1⁰ => 
//│ 		let go² = (fun _lh_go_arg1² -> (fun _lh_go_arg2² -> case _lh_go_arg2² of {
//│ 			LH_N  => _lh_go_arg1²
//│ 			| LH_C _lh_go_LH_C_0⁰ _lh_go_LH_C_1⁰ => go²(_lh_go_LH_C_0⁰, _lh_go_LH_C_1⁰)
//│ 			| _  => error⁰}))
//│ 		in go²(_lh_last_LH_C_0⁰, _lh_last_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def length_lh_₁(ls²⁸) = case ls²⁸ of {
//│ 	LH_C h¹⁷ t¹⁷ => (1 + length_lh_₁(t¹⁷))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹⁷) = case ls¹⁷ of {
//│ 	LH_C h¹⁵ t¹⁵ => (1 + length_lh_₂(t¹⁵))
//│ 	| LH_N  => 0}
//│ def length_lh_₃(ls¹⁶) = ls¹⁶(99)
//│ def length_lh_₄(ls²⁷) = case ls²⁷ of {
//│ 	LH_C h¹ t¹ => (1 + length_lh_₄(t¹))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f²⁸, ls²⁵) = ls²⁵(f²⁸)
//│ def map_lh_₂(f²⁷, ls²⁴) = ls²⁴(f²⁷)
//│ def map_lh_₃(f³⁴, ls²⁹) = case ls²⁹ of {
//│ 	LH_C h⁹ t⁹ => 
//│ 		let _lh_first_LH_C_1⁷ = map_lh_₃(f³⁴, t⁹)
//│ 		in let _lh_first_LH_C_0⁷ = f³⁴(h⁹)
//│ 		in (fun _lh_first_arg1¹⁴ -> 
//│ 			let _lh_matchIdent¹³ = _lh_first_LH_C_0⁷
//│ 			in case _lh_matchIdent¹³ of {
//│ 				YesIts _lh_first_YesIts_0³ _lh_first_YesIts_1³ => [YesIts (_lh_first_arg1¹⁴ + _lh_first_YesIts_0³) _lh_first_YesIts_1³]
//│ 				| NotEver _lh_first_NotEver_0³ => first_lh_₁((_lh_first_arg1¹⁴ + _lh_first_NotEver_0³), _lh_first_LH_C_1⁷)
//│ 				| _  => error⁰})
//│ 	| LH_N  => (fun _lh_first_arg1¹⁵ -> [NotEver _lh_first_arg1¹⁵])}
//│ def map_lh_₄(f⁴², ls³⁰) = ls³⁰(f⁴²)
//│ def map_lh_₅(f³¹, ls²⁶) = ls²⁶(f³¹)
//│ def map_lh_₆(f²⁵, ls²²) = ls²²(f²⁵)
//│ def map_lh_₇(f⁹, ls¹⁸) = ls¹⁸(f⁹)
//│ def mappend_lh_₁(xs⁶, ys⁷) = xs⁶(ys⁷)
//│ def mappend_lh_₂(xs⁷, ys⁹) = xs⁷(ys⁹)
//│ def mappend_lh_₃(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h¹⁴ t¹⁴ => [LH_C h¹⁴ mappend_lh_₃(t¹⁴, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₄(xs⁹, ys¹¹) = case xs⁹ of {
//│ 	LH_C h¹² t¹² => [LH_C h¹² mappend_lh_₄(t¹², ys¹¹)]
//│ 	| LH_N  => ys¹¹}
//│ def mappend_lh_₅(xs⁸, ys¹⁰) = xs⁸(ys¹⁰)
//│ def max_lh_₁(_lh_max_arg1¹, _lh_max_arg2¹) = if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ def maxm_lh_₁(_lh_maxm_arg1¹, _lh_maxm_arg2¹) = case _lh_maxm_arg1¹ of {
//│ 	Nothing  => _lh_maxm_arg2¹
//│ 	| Just _lh_maxm_Just_0⁰ => max_lh_₁(_lh_maxm_Just_0⁰, _lh_maxm_arg2¹)
//│ 	| _  => error⁰}
//│ def member_lh_₁(_lh_member_arg1⁴, _lh_member_arg2⁴) = case _lh_member_arg2⁴ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0² _lh_member_LH_C_1² => (polyEq⁰(_lh_member_arg1⁴, _lh_member_LH_C_0²) || member_lh_₁(_lh_member_arg1⁴, _lh_member_LH_C_1²))
//│ 	| _  => error⁰}
//│ def member_lh_₂(_lh_member_arg1³, _lh_member_arg2³) = case _lh_member_arg2³ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0¹ _lh_member_LH_C_1¹ => (polyEq⁰(_lh_member_arg1³, _lh_member_LH_C_0¹) || member_lh_₂(_lh_member_arg1³, _lh_member_LH_C_1¹))
//│ 	| _  => error⁰}
//│ def member_lh_₃(_lh_member_arg1⁵, _lh_member_arg2⁵) = case _lh_member_arg2⁵ of {
//│ 	LH_N  => [False]
//│ 	| LH_C _lh_member_LH_C_0⁰ _lh_member_LH_C_1⁰ => (polyEq⁰(_lh_member_arg1⁵, _lh_member_LH_C_0⁰) || member_lh_₃(_lh_member_arg1⁵, _lh_member_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def min_lh_₁(_lh_min_arg1¹, _lh_min_arg2¹) = if (_lh_min_arg1¹ < _lh_min_arg2¹) then _lh_min_arg1¹ else _lh_min_arg2¹
//│ def minm_lh_₁(_lh_minm_arg1¹, _lh_minm_arg2¹) = case _lh_minm_arg1¹ of {
//│ 	Nothing  => _lh_minm_arg2¹
//│ 	| Just _lh_minm_Just_0⁰ => min_lh_₁(_lh_minm_Just_0⁰, _lh_minm_arg2¹)
//│ 	| _  => error⁰}
//│ def partition'_lh_₁(_lh_partition'_arg1¹) = foldr_lh_₁(select_lh_₁(_lh_partition'_arg1¹), [LH_P2 (fun ys⁸ -> ys⁸) [LH_N]])
//│ def prog_lh_₁(_lh_prog_arg1¹) = cichelli_lh_₁(_lh_prog_arg1¹)
//│ def select_lh_₁(_lh_select_arg1¹, _lh_select_arg2¹, _lh_select_arg3¹) = case _lh_select_arg3¹ of {
//│ 	LH_P2 _lh_select_LH_P2_0⁰ _lh_select_LH_P2_1⁰ => if _lh_select_arg1¹(_lh_select_arg2¹) then [LH_P2 
//│ 		let t²² = _lh_select_LH_P2_0⁰
//│ 		in let h²² = _lh_select_arg2¹
//│ 		in (fun ys⁶ -> 
//│ 			let _lh_findhash'_LH_C_1¹ = mappend_lh_₂(t²², ys⁶)
//│ 			in let _lh_findhash'_LH_C_0¹ = h²²
//│ 			in (fun _lh_findhash'_arg2¹ -> (fun _lh_findhash'_arg1¹ -> case _lh_findhash'_LH_C_0¹ of {
//│ 				K _lh_findhash'_K_0⁰ _lh_findhash'_K_1⁰ _lh_findhash'_K_2⁰ _lh_findhash'_K_3⁰ => 
//│ 					let try¹ = (fun newAssocs¹ -> 
//│ 						let newCharAssocs¹ = mappend_lh_₃(newAssocs¹, _lh_findhash'_arg2¹)
//│ 						in let _lh_matchIdent⁸ = hinsert_lh_₁(hash_lh_₁(newCharAssocs¹, 
//│ 							let _lh_hash_K_3¹ = _lh_findhash'_K_3⁰
//│ 							in let _lh_hash_K_2¹ = _lh_findhash'_K_2⁰
//│ 							in let _lh_hash_K_1¹ = _lh_findhash'_K_1⁰
//│ 							in (fun _lh_hash_arg1¹ -> ((_lh_hash_K_3¹ + assoc_lh_₂(_lh_hash_K_1¹, _lh_hash_arg1¹)) + assoc_lh_₁(_lh_hash_K_2¹, _lh_hash_arg1¹)))), _lh_findhash'_arg1¹)
//│ 						in case _lh_matchIdent⁸ of {
//│ 							Nothing  => [NotEver 1]
//│ 							| Just _lh_findhash'_Just_0⁰ => findhash'_lh_₁(_lh_findhash'_Just_0⁰, newCharAssocs¹, _lh_findhash'_LH_C_1¹)
//│ 							| _  => error⁰})
//│ 					in let maxval¹ = length_lh_₂(freqtab_lh_₁(0))
//│ 					in let _lh_matchIdent⁹ = 	
//│ 						let _lh_findhash'_LH_P2_1² = assocm_lh_₁(_lh_findhash'_K_2⁰, _lh_findhash'_arg2¹)
//│ 						in let _lh_findhash'_LH_P2_0² = assocm_lh_₂(_lh_findhash'_K_1⁰, _lh_findhash'_arg2¹)
//│ 						in (fun _lh_findhash'_K_1¹ -> (fun _lh_findhash'_K_2¹ -> (fun maxval² -> (fun try² -> _lh_findhash'_LH_P2_0²(_lh_findhash'_K_1¹, _lh_findhash'_K_2¹, _lh_findhash'_LH_P2_1², maxval², try²)))))
//│ 					in _lh_matchIdent⁹(_lh_findhash'_K_1⁰, _lh_findhash'_K_2⁰, maxval¹, try¹)
//│ 				| _  => error⁰}))) _lh_select_LH_P2_1⁰] else [LH_P2 _lh_select_LH_P2_0⁰ [LH_C _lh_select_arg2¹ _lh_select_LH_P2_1⁰]]
//│ 	| _  => error⁰}
//│ def subset_lh_₁(_lh_subset_arg1¹, _lh_subset_arg2¹) = all_lh_₁((fun x² -> member_lh_₁(x², _lh_subset_arg2¹)), _lh_subset_arg1¹)
//│ def take_lh_₁(n², ls²³) = if (n² > 0) then ls²³(n²) else (fun f²⁶ -> [LH_N])
//│ def testCichelli_nofib_lh_₁(_lh_testCichelli_nofib_arg1¹) = prog_lh_₁(_lh_testCichelli_nofib_arg1¹)
//│ def union_lh_₁(_lh_union_arg1¹, _lh_union_arg2¹) = mappend_lh_₄(_lh_union_arg1¹, 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> _lh_listcomp_fun_para³(_lh_listcomp_fun³, _lh_union_arg1¹))
//│ 	in _lh_listcomp_fun³(_lh_union_arg2¹))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
