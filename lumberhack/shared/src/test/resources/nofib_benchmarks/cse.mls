:NewParser
:ParseOnly

:lhNoIter
:lhInHaskell
:lhGenOCaml
scanl f q ls = q:(case ls of { [] -> []; (x:xs) -> scanl f (f q x) xs })
scanr _ q0 [] = [q0]
scanr f q0 (x:xs) = case (scanr f q0 xs) of {
  (q:t) -> (f x q):(q:t)
}
id x = x
null [] = True
null (x:xs) = False
dropWhile f [] = []
dropWhile f (h:t) = if (f h) then dropWhile f t else (h:t)
inList x (h:t) = if x == h then True else inList x t
inList x [] = False
-- General purpose state monad -----------------------------------------------
type SM s a       = s -> (s, a)
-- Primitive monad operators -------------------------------------------------
retURN           :: a -> SM s a
retURN x          = \s -> (s, x)
bind             :: SM s a -> (a -> SM s b) -> SM s b
bind m f          = \s -> case (m s) of { (s', a) -> f a s' }
join             :: SM s (SM s a) -> SM s a
join m            = \s -> case (m s) of { (s', ma) -> ma s' } 
mmap             :: (a -> b) -> (SM s a -> SM s b)
mmap f m          = \s -> case (m s) of { (s', a) -> (s', f a) }
-- General monad operators ---------------------------------------------------
mmapl            :: (a -> SM s b) -> ([a] -> SM s [b])
mmapl f []        = retURN []
mmapl f (a:as)    = f a             `bind` \b ->
                    mmapl f as      `bind` \bs ->
                    retURN (b:bs)
mmapr            :: (a -> SM s b) -> ([a] -> SM s [b])
mmapr f []        = retURN []
mmapr f (x:xs)    = mmapr f xs      `bind` \ys ->
                    f x             `bind` \y  ->
                    retURN (y:ys)
mfoldl           :: (a -> b -> SM s a) -> a -> [b] -> SM s a
mfoldl f a []     = retURN a
mfoldl f a (x:xs) = f a x           `bind` \fax ->
                    mfoldl f fax xs
mfoldr           :: (a -> b -> SM s b) -> b -> [a] -> SM s b
mfoldr f a []     = retURN a
mfoldr f a (x:xs) = mfoldr f a xs   `bind` \y ->
                    f x y
mif              :: SM s Bool -> SM s a -> SM s a -> SM s a
mif c t f         = c               `bind` \cond ->
                    if cond then t
                            else f
-- Specific utilities for state monads ---------------------------------------
startingWith      :: SM s a -> s -> a
startingWith m v   = case (m v) of { (final, answer) -> answer }
fetch             :: SM s s
fetch              = \s -> (s,s)
fetchWith         :: (s -> a) -> SM s a
fetchWith f        = \s -> (s, f s)
update            :: (s -> s) -> SM s s
update f           = \s -> (f s, s)
set               :: s -> SM s s
set s'             = \s -> (s',s)
-- Common use of state monad: counter ----------------------------------------
incr              :: a -> SM Int Int
incr _             = update (\x -> 1+x)
-- Data type definitions: ----------------------------------------------------
data GenTree a  = Node a [GenTree a]
type LabGraph a = [ (Label, a, [Label]) ]
type Label      = Int
-- Add distinct (integer) labels to each node of a tree: ---------------------
labelTree   :: GenTree a -> GenTree (Label,a)
labelTree t  = (label t) `startingWith` 0
               where label (Node x xs) = (incr 0)           `bind` \n  ->
                                         mmapl label xs `bind` \ts ->
                                         retURN (Node (n,x) ts)
-- Convert tree after labelling each node to a labelled graph: ---------------
ltGraph                :: GenTree (Label,a) -> LabGraph a
ltGraph (Node (n,x) xs) = (n, x, map labelOf xs) : (concat (map ltGraph xs))
                          where labelOf (Node (n,x) xs) = n
-- Build tree from labelled graph: -------------------------------------------
unGraph              :: LabGraph a -> GenTree a
unGraph ((n,x,cs):ts) = 
  let find = \c -> dropWhile (\d__ -> case d__ of (d, _, _) -> c/=d) ts in
  Node x (map (unGraph . find) cs)
-- Build tree but avoid duplicating shared parts: ----------------------------
unGraph'     :: LabGraph String -> GenTree (Int,String)
unGraph' lg =
  (ung lg) `startingWith` []
    where
      ung ((n,x,cs):ts) =
        let find = \c -> dropWhile (\d__ -> case d__ of (d, _, _) -> c/=d) ts in
        mif (visited n) (retURN (Node (n,"<>") [])) (mmapl (ung . find) cs `bind` \ts -> retURN (Node (n,x) ts))
visited      :: Label -> SM [Label] Bool
visited n     = fetch                               `bind` \us ->
                if inList n us then retURN True
                               else set (n:us)      `bind` \_p ->
                                    retURN False
-- Find (and eliminate) repeated subtrees in a labelled graph: ---------------
-- Described as a transformation on labelled graphs:  During the calculation
-- we use a pair (r,lg) :: (Label->Label, LabGraph a) where lg contains the
-- simplified portion of the graph calculated so far and r is a renaming (or
-- replacement?) which maps node labels in the original graph to the approp.
-- labels in the new graph.
findCommon :: Eq a => LabGraph a -> LabGraph a
findCommon ls = case (foldr sim (id,[]) ls) of { (a, b) -> b }
  where
    -- sim ::
    --   Eq a => (Label,a,[Label]) -> (Label -> Label, LabGraph a) ->
    --   (Label -> Label, LabGraph a)
    sim (n,s,cs) (r,lg) =
      let rcs = map r cs in
      let ms = [m | (m,s',cs')<-lg, polyEq s s', polyEq cs' rcs] in
      if null ms then
        (r, [(n,s,rcs)] ++ lg)
      else
        ((newlyDefined n (head ms)) r, lg)
newlyDefined :: Eq a => a -> b -> (a -> b) -> (a -> b)
newlyDefined x fx f y  = if polyEq x y then fx else f y
-- Common subexpression elimination: -----------------------------------------
cse :: Eq a => GenTree a -> LabGraph a
cse t = findCommon (ltGraph $ labelTree t)
-- Examples: -----------------------------------------------------------------
plus_ x y = Node "+" [x,y]
mult_ x y = Node "*" [x,y]
prod xs  = Node "X" xs
zerO 0     = Node "0" []
a        = Node "a" []
b        = Node "b" []
c        = Node "c" []
d        = Node "d" []
example0 _ = a
example1 _ = plus_ a a
example2 _ = plus_ (mult_ a b) (mult_ a b)
example3 _ = plus_ (mult_ (plus_ a b) c) (plus_ a b)
example4 _ = prod (scanl plus_ (zerO 0) [a,b,c,d])
example5 _ = prod (scanr plus_ (zerO 0) [a,b,c,d])
testCse_nofib n = map (\i -> (map cse (take (i `mod` 6) [(example0 0), (example1 0), (example2 0), (example3 0), (example4 0), (example5 0)]))) [1..n]
testCse_nofib $ primId 1000
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testCse_nofib_₀^2324(primId⁰(1000))
//│ def a_₀ = [Node [LH_C 'a' [LH_N]] [LH_N]]
//│ def a_₁ = [Node [LH_C 'a' [LH_N]] [LH_N]]
//│ def a_₂ = [Node [LH_C 'a' [LH_N]] [LH_N]]
//│ def a_₃ = [Node [LH_C 'a' [LH_N]] [LH_N]]
//│ def a_₄ = [Node [LH_C 'a' [LH_N]] [LH_N]]
//│ def a_₅ = [Node [LH_C 'a' [LH_N]] [LH_N]]
//│ def a_₆ = [Node [LH_C 'a' [LH_N]] [LH_N]]
//│ def a_₇ = [Node [LH_C 'a' [LH_N]] [LH_N]]
//│ def a_₈ = [Node [LH_C 'a' [LH_N]] [LH_N]]
//│ def b_₀ = [Node [LH_C 'b' [LH_N]] [LH_N]]
//│ def b_₁ = [Node [LH_C 'b' [LH_N]] [LH_N]]
//│ def b_₂ = [Node [LH_C 'b' [LH_N]] [LH_N]]
//│ def b_₃ = [Node [LH_C 'b' [LH_N]] [LH_N]]
//│ def b_₄ = [Node [LH_C 'b' [LH_N]] [LH_N]]
//│ def b_₅ = [Node [LH_C 'b' [LH_N]] [LH_N]]
//│ def bind_₀(_lh_bind_arg1¹, _lh_bind_arg2¹, s¹¹) = 
//│ 	let _lh_matchIdent¹¹ = _lh_bind_arg1¹(s¹¹)
//│ 	in case _lh_matchIdent¹¹ of {
//│ 		LH_P2 _lh_bind_LH_P2_0¹ _lh_bind_LH_P2_1¹ => _lh_bind_arg2¹(_lh_bind_LH_P2_1¹, _lh_bind_LH_P2_0¹)
//│ 		| _  => error⁰}
//│ def bind_₁(_lh_bind_arg1², _lh_bind_arg2², s¹²) = 
//│ 	let _lh_matchIdent¹² = _lh_bind_arg1²(s¹²)
//│ 	in case _lh_matchIdent¹² of {
//│ 		LH_P2 _lh_bind_LH_P2_0² _lh_bind_LH_P2_1² => _lh_bind_arg2²(_lh_bind_LH_P2_1², _lh_bind_LH_P2_0²)
//│ 		| _  => error⁰}
//│ def bind_₂(_lh_bind_arg1⁴, _lh_bind_arg2⁴, s¹⁴) = 
//│ 	let _lh_matchIdent¹⁵ = _lh_bind_arg1⁴(s¹⁴)
//│ 	in case _lh_matchIdent¹⁵ of {
//│ 		LH_P2 _lh_bind_LH_P2_0⁴ _lh_bind_LH_P2_1⁴ => _lh_bind_arg2⁴(_lh_bind_LH_P2_1⁴, _lh_bind_LH_P2_0⁴)
//│ 		| _  => error⁰}
//│ def bind_₃(_lh_bind_arg1³, _lh_bind_arg2³, s¹³) = 
//│ 	let _lh_matchIdent¹⁴ = _lh_bind_arg1³(s¹³)
//│ 	in case _lh_matchIdent¹⁴ of {
//│ 		LH_P2 _lh_bind_LH_P2_0³ _lh_bind_LH_P2_1³ => _lh_bind_arg2³(_lh_bind_LH_P2_1³, _lh_bind_LH_P2_0³)
//│ 		| _  => error⁰}
//│ def c_₀ = [Node [LH_C 'c' [LH_N]] [LH_N]]
//│ def c_₁ = [Node [LH_C 'c' [LH_N]] [LH_N]]
//│ def c_₂ = [Node [LH_C 'c' [LH_N]] [LH_N]]
//│ def concat_₀(lss¹) = case lss¹ of {
//│ 	LH_C h²² t²⁴ => mappend_₁^1688(h²², concat_₀^1691(t²⁴))
//│ 	| LH_N  => [LH_N]}
//│ def cse_₀(_lh_cse_arg1¹) = findCommon_₀^1615(ltGraph_₀^1616(labelTree_₀^1617(_lh_cse_arg1¹)))
//│ def d_₀ = [Node [LH_C 'd' [LH_N]] [LH_N]]
//│ def d_₁ = [Node [LH_C 'd' [LH_N]] [LH_N]]
//│ def enumFromTo_₀(a⁶, b⁵) = if (a⁶ <= b⁵) then [LH_C a⁶ enumFromTo_₀^2154((a⁶ + 1), b⁵)] else [LH_N]
//│ def example0_₀(_lh_example0_arg1¹) = a_₀^1450
//│ def example1_₀(_lh_example1_arg1¹) = plus__₀^2002(a_₁^2003, a_₂^2005)
//│ def example2_₀(_lh_example2_arg1¹) = plus__₁^2184(mult__₀^2185(a_₃^2186, b_₀^2188), mult__₁^2191(a_₄^2192, b_₁^2194))
//│ def example3_₀(_lh_example3_arg1¹) = plus__₂^1932(mult__₂^1933(plus__₃^1934(a_₅^1935, b_₂^1937), c_₀^1940), plus__₄^1943(a_₆^1944, b_₃^1946))
//│ def example4_₀(_lh_example4_arg1¹) = prod_₀^1651(scanl_₀^1652(plus__₅^1653, zerO_₀^1655(0), [LH_C a_₇^1659 [LH_C b_₄^1660 [LH_C c_₁^1661 [LH_C d_₀^1662 [LH_N]]]]]))
//│ def example5_₀(_lh_example5_arg1¹) = prod_₁^1817(scanr_₀^1818(plus__₆^1819, zerO_₁^1821(0), [LH_C a_₈^1825 [LH_C b_₅^1826 [LH_C c_₂^1827 [LH_C d_₁^1828 [LH_N]]]]]))
//│ def findCommon_₀(_lh_findCommon_arg1¹) = 
//│ 	let sim¹ = (fun _lh_sim_arg1¹ -> (fun _lh_sim_arg2¹ -> case _lh_sim_arg1¹ of {
//│ 		LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² _lh_sim_LH_P3_2² => case _lh_sim_arg2¹ of {
//│ 			LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => 
//│ 				let rcs¹ = map_₀^1488(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2²)
//│ 				in let ms¹ = 	
//│ 					let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 						LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 							LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)
//│ 							| _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun¹(_lh_sim_LH_P2_1¹)
//│ 				in if null_₀^1529(ms¹) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀^1533([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀^1544(_lh_sim_LH_P3_0², head_₀^1547(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹]
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}))
//│ 	in let _lh_matchIdent⁹ = foldr_₀^1564(sim¹, [LH_P2 id_₀^1567 [LH_N]], _lh_findCommon_arg1¹)
//│ 	in case _lh_matchIdent⁹ of {
//│ 		LH_P2 _lh_findCommon_LH_P2_0¹ _lh_findCommon_LH_P2_1¹ => _lh_findCommon_LH_P2_1¹
//│ 		| _  => error⁰}
//│ def foldr_₀(f¹⁶, i⁵, ls²⁴) = case ls²⁴ of {
//│ 	LH_C h²⁸ t³⁰ => f¹⁶(h²⁸, foldr_₀^2202(f¹⁶, i⁵, t³⁰))
//│ 	| LH_N  => i⁵}
//│ def head_₀(ls²⁰) = case ls²⁰ of {
//│ 	LH_C h²³ t²⁵ => h²³
//│ 	| LH_N  => error⁰}
//│ def id_₀(_lh_id_arg1¹) = _lh_id_arg1¹
//│ def incr_₀(_lh_incr_arg1¹) = update_₀^1709((fun x³ -> (1 + x³)))
//│ def labelTree_₀(_lh_labelTree_arg1¹) = 
//│ 	let label¹ = (fun _lh_label_arg1¹ -> case _lh_label_arg1¹ of {
//│ 		Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀^1725(incr_₀^1726(0), (fun n⁵ -> bind_₁^1730(mmapl_₀^1731(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂^1737([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²])))))
//│ 		| _  => error⁰})
//│ 	in startingWith_₀^1751(label¹(_lh_labelTree_arg1¹), 0)
//│ def ltGraph_₀(_lh_ltGraph_arg1¹) = case _lh_ltGraph_arg1¹ of {
//│ 	Node _lh_ltGraph_Node_0¹ _lh_ltGraph_Node_1¹ => case _lh_ltGraph_Node_0¹ of {
//│ 		LH_P2 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ => 
//│ 			let labelOf¹ = (fun _lh_labelOf_arg1¹ -> case _lh_labelOf_arg1¹ of {
//│ 				Node _lh_labelOf_Node_0¹ _lh_labelOf_Node_1¹ => case _lh_labelOf_Node_0¹ of {
//│ 					LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹
//│ 					| _  => error⁰}
//│ 				| _  => error⁰})
//│ 			in [LH_C [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁^2304(labelOf¹, _lh_ltGraph_Node_1¹)] concat_₀^2310(map_₂^2311(ltGraph_₀^2312, _lh_ltGraph_Node_1¹))]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def map_₀(f¹², ls¹⁹) = case ls¹⁹ of {
//│ 	LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₀^1594(f¹², t²²)]
//│ 	| LH_N  => [LH_N]}
//│ def map_₁(f¹⁷, ls²⁶) = case ls²⁶ of {
//│ 	LH_C h³⁰ t³² => [LH_C f¹⁷(h³⁰) map_₁^2282(f¹⁷, t³²)]
//│ 	| LH_N  => [LH_N]}
//│ def map_₂(f¹³, ls²¹) = case ls²¹ of {
//│ 	LH_C h²⁴ t²⁶ => [LH_C f¹³(h²⁴) map_₂^1846(f¹³, t²⁶)]
//│ 	| LH_N  => [LH_N]}
//│ def map_₃(f¹⁵, ls²³) = case ls²³ of {
//│ 	LH_C h²⁶ t²⁸ => [LH_C f¹⁵(h²⁶) map_₃^1874(f¹⁵, t²⁸)]
//│ 	| LH_N  => [LH_N]}
//│ def map_₄(f¹⁴, ls²²) = case ls²² of {
//│ 	LH_C h²⁵ t²⁷ => [LH_C f¹⁴(h²⁵) map_₄^1860(f¹⁴, t²⁷)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_₀(xs¹⁰, ys¹¹) = case xs¹⁰ of {
//│ 	LH_C h²⁷ t²⁹ => [LH_C h²⁷ mappend_₀^1886(t²⁹, ys¹¹)]
//│ 	| LH_N  => ys¹¹}
//│ def mappend_₁(xs⁹, ys¹⁰) = case xs⁹ of {
//│ 	LH_C h²¹ t²³ => [LH_C h²¹ mappend_₁^1625(t²³, ys¹⁰)]
//│ 	| LH_N  => ys¹⁰}
//│ def mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_arg2¹) = case _lh_mmapl_arg2¹ of {
//│ 	LH_N  => retURN_₀^1453([LH_N])
//│ 	| LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂^1456(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃^1461(mmapl_₀^1462(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁^1468([LH_C b⁴ bs¹])))))
//│ 	| _  => error⁰}
//│ def mult__₀(_lh_mult__arg1¹, _lh_mult__arg2¹) = [Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1¹ [LH_C _lh_mult__arg2¹ [LH_N]]]]
//│ def mult__₁(_lh_mult__arg1³, _lh_mult__arg2³) = [Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1³ [LH_C _lh_mult__arg2³ [LH_N]]]]
//│ def mult__₂(_lh_mult__arg1², _lh_mult__arg2²) = [Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1² [LH_C _lh_mult__arg2² [LH_N]]]]
//│ def newlyDefined_₀(_lh_newlyDefined_arg1¹, _lh_newlyDefined_arg2¹, _lh_newlyDefined_arg3¹, _lh_newlyDefined_arg4¹) = if polyEq⁰(_lh_newlyDefined_arg1¹, _lh_newlyDefined_arg4¹) then _lh_newlyDefined_arg2¹ else _lh_newlyDefined_arg3¹(_lh_newlyDefined_arg4¹)
//│ def null_₀(_lh_null_arg1¹) = case _lh_null_arg1¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False]
//│ 	| _  => error⁰}
//│ def plus__₀(_lh_plus__arg1⁴, _lh_plus__arg2⁴) = [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁴ [LH_C _lh_plus__arg2⁴ [LH_N]]]]
//│ def plus__₁(_lh_plus__arg1⁵, _lh_plus__arg2⁵) = [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁵ [LH_C _lh_plus__arg2⁵ [LH_N]]]]
//│ def plus__₂(_lh_plus__arg1⁶, _lh_plus__arg2⁶) = [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁶ [LH_C _lh_plus__arg2⁶ [LH_N]]]]
//│ def plus__₃(_lh_plus__arg1¹, _lh_plus__arg2¹) = [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1¹ [LH_C _lh_plus__arg2¹ [LH_N]]]]
//│ def plus__₄(_lh_plus__arg1⁷, _lh_plus__arg2⁷) = [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁷ [LH_C _lh_plus__arg2⁷ [LH_N]]]]
//│ def plus__₅(_lh_plus__arg1³, _lh_plus__arg2³) = [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1³ [LH_C _lh_plus__arg2³ [LH_N]]]]
//│ def plus__₆(_lh_plus__arg1², _lh_plus__arg2²) = [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1² [LH_C _lh_plus__arg2² [LH_N]]]]
//│ def prod_₀(_lh_prod_arg1¹) = [Node [LH_C 'X' [LH_N]] _lh_prod_arg1¹]
//│ def prod_₁(_lh_prod_arg1²) = [Node [LH_C 'X' [LH_N]] _lh_prod_arg1²]
//│ def retURN_₀(_lh_retURN_arg1², s⁹) = [LH_P2 s⁹ _lh_retURN_arg1²]
//│ def retURN_₁(_lh_retURN_arg1³, s¹⁵) = [LH_P2 s¹⁵ _lh_retURN_arg1³]
//│ def retURN_₂(_lh_retURN_arg1¹, s⁸) = [LH_P2 s⁸ _lh_retURN_arg1¹]
//│ def scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg2¹, _lh_scanl_arg3¹) = [LH_C _lh_scanl_arg2¹ 
//│ 	let _lh_matchIdent¹³ = _lh_scanl_arg3¹
//│ 	in case _lh_matchIdent¹³ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀^2027(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹)
//│ 		| _  => error⁰}]
//│ def scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_arg3¹) = case _lh_scanr_arg3¹ of {
//│ 	LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]]
//│ 	| LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => 
//│ 		let _lh_matchIdent¹⁰ = scanr_₀^1779(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ 		in case _lh_matchIdent¹⁰ of {
//│ 			LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]]
//│ 			| _  => error⁰}
//│ 	| _  => error⁰}
//│ def startingWith_₀(_lh_startingWith_arg1¹, _lh_startingWith_arg2¹) = 
//│ 	let _lh_matchIdent¹⁶ = _lh_startingWith_arg1¹(_lh_startingWith_arg2¹)
//│ 	in case _lh_matchIdent¹⁶ of {
//│ 		LH_P2 _lh_startingWith_LH_P2_0¹ _lh_startingWith_LH_P2_1¹ => _lh_startingWith_LH_P2_1¹
//│ 		| _  => error⁰}
//│ def take_₀(n⁶, ls²⁵) = if (n⁶ > 0) then case ls²⁵ of {
//│ 	LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀^2222((n⁶ - 1), t³¹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testCse_nofib_₀(_lh_testCse_nofib_arg1¹) = map_₃^2091((fun i⁴ -> map_₄^2092(cse_₀^2093, take_₀^2095((i⁴ % 6), [LH_C example0_₀^2102(0) [LH_C example1_₀^2105(0) [LH_C example2_₀^2108(0) [LH_C example3_₀^2111(0) [LH_C example4_₀^2114(0) [LH_C example5_₀^2117(0) [LH_N]]]]]]]))), enumFromTo_₀^2131(1, _lh_testCse_nofib_arg1¹))
//│ def update_₀(_lh_update_arg1¹, s¹⁰) = [LH_P2 _lh_update_arg1¹(s¹⁰) s¹⁰]
//│ def zerO_₀(_lh_zerO_arg1¹) = case _lh_zerO_arg1¹ of {
//│ 	0  => [Node [LH_C '0' [LH_N]] [LH_N]]
//│ 	| _  => error⁰}
//│ def zerO_₁(_lh_zerO_arg1²) = case _lh_zerO_arg1² of {
//│ 	0  => [Node [LH_C '0' [LH_N]] [LH_N]]
//│ 	| _  => error⁰}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec a__d0 =
//│ 		  (`Node((`LH_C('a', (`LH_N))), (`LH_N)))
//│ 		and a__d1 =
//│ 		  (`Node((`LH_C('a', (`LH_N))), (`LH_N)))
//│ 		and a__d2 =
//│ 		  (`Node((`LH_C('a', (`LH_N))), (`LH_N)))
//│ 		and a__d3 =
//│ 		  (`Node((`LH_C('a', (`LH_N))), (`LH_N)))
//│ 		and a__d4 =
//│ 		  (`Node((`LH_C('a', (`LH_N))), (`LH_N)))
//│ 		and a__d5 =
//│ 		  (`Node((`LH_C('a', (`LH_N))), (`LH_N)))
//│ 		and a__d6 =
//│ 		  (`Node((`LH_C('a', (`LH_N))), (`LH_N)))
//│ 		and a__d7 =
//│ 		  (`Node((`LH_C('a', (`LH_N))), (`LH_N)))
//│ 		and a__d8 =
//│ 		  (`Node((`LH_C('a', (`LH_N))), (`LH_N)))
//│ 		and b__d0 =
//│ 		  (`Node((`LH_C('b', (`LH_N))), (`LH_N)))
//│ 		and b__d1 =
//│ 		  (`Node((`LH_C('b', (`LH_N))), (`LH_N)))
//│ 		and b__d2 =
//│ 		  (`Node((`LH_C('b', (`LH_N))), (`LH_N)))
//│ 		and b__d3 =
//│ 		  (`Node((`LH_C('b', (`LH_N))), (`LH_N)))
//│ 		and b__d4 =
//│ 		  (`Node((`LH_C('b', (`LH_N))), (`LH_N)))
//│ 		and b__d5 =
//│ 		  (`Node((`LH_C('b', (`LH_N))), (`LH_N)))
//│ 		and bind__d0 _lh_bind_arg1_1 _lh_bind_arg2_1 s_1_1 =
//│ 		  (let rec _lh_matchIdent_1_1 = (_lh_bind_arg1_1 s_1_1) in
//│ 		    (match _lh_matchIdent_1_1 with
//│ 		      | `LH_P2(_lh_bind_LH_P2_0_1, _lh_bind_LH_P2_1_1) -> 
//│ 		        ((_lh_bind_arg2_1 _lh_bind_LH_P2_1_1) _lh_bind_LH_P2_0_1)
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and bind__d1 _lh_bind_arg1_2 _lh_bind_arg2_2 s_1_2 =
//│ 		  (let rec _lh_matchIdent_1_2 = (_lh_bind_arg1_2 s_1_2) in
//│ 		    (match _lh_matchIdent_1_2 with
//│ 		      | `LH_P2(_lh_bind_LH_P2_0_2, _lh_bind_LH_P2_1_2) -> 
//│ 		        ((_lh_bind_arg2_2 _lh_bind_LH_P2_1_2) _lh_bind_LH_P2_0_2)
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and bind__d2 _lh_bind_arg1_4 _lh_bind_arg2_4 s_1_4 =
//│ 		  (let rec _lh_matchIdent_1_5 = (_lh_bind_arg1_4 s_1_4) in
//│ 		    (match _lh_matchIdent_1_5 with
//│ 		      | `LH_P2(_lh_bind_LH_P2_0_4, _lh_bind_LH_P2_1_4) -> 
//│ 		        ((_lh_bind_arg2_4 _lh_bind_LH_P2_1_4) _lh_bind_LH_P2_0_4)
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and bind__d3 _lh_bind_arg1_3 _lh_bind_arg2_3 s_1_3 =
//│ 		  (let rec _lh_matchIdent_1_4 = (_lh_bind_arg1_3 s_1_3) in
//│ 		    (match _lh_matchIdent_1_4 with
//│ 		      | `LH_P2(_lh_bind_LH_P2_0_3, _lh_bind_LH_P2_1_3) -> 
//│ 		        ((_lh_bind_arg2_3 _lh_bind_LH_P2_1_3) _lh_bind_LH_P2_0_3)
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and c__d0 =
//│ 		  (`Node((`LH_C('c', (`LH_N))), (`LH_N)))
//│ 		and c__d1 =
//│ 		  (`Node((`LH_C('c', (`LH_N))), (`LH_N)))
//│ 		and c__d2 =
//│ 		  (`Node((`LH_C('c', (`LH_N))), (`LH_N)))
//│ 		and concat__d0 lss_1 =
//│ 		  (match lss_1 with
//│ 		    | `LH_C(h_2_2, t_2_4) -> 
//│ 		      ((mappend__d1 h_2_2) (concat__d0 t_2_4))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and cse__d0 _lh_cse_arg1_1 =
//│ 		  (findCommon__d0 (ltGraph__d0 (labelTree__d0 _lh_cse_arg1_1)))
//│ 		and d__d0 =
//│ 		  (`Node((`LH_C('d', (`LH_N))), (`LH_N)))
//│ 		and d__d1 =
//│ 		  (`Node((`LH_C('d', (`LH_N))), (`LH_N)))
//│ 		and enumFromTo__d0 a_6 b_5 =
//│ 		  (if (a_6 <= b_5) then
//│ 		    (`LH_C(a_6, ((enumFromTo__d0 (a_6 + 1)) b_5)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and example0__d0 _lh_example0_arg1_1 =
//│ 		  a__d0
//│ 		and example1__d0 _lh_example1_arg1_1 =
//│ 		  ((plus___d0 a__d1) a__d2)
//│ 		and example2__d0 _lh_example2_arg1_1 =
//│ 		  ((plus___d1 ((mult___d0 a__d3) b__d0)) ((mult___d1 a__d4) b__d1))
//│ 		and example3__d0 _lh_example3_arg1_1 =
//│ 		  ((plus___d2 ((mult___d2 ((plus___d3 a__d5) b__d2)) c__d0)) ((plus___d4 a__d6) b__d3))
//│ 		and example4__d0 _lh_example4_arg1_1 =
//│ 		  (prod__d0 (((scanl__d0 plus___d5) (zerO__d0 0)) (`LH_C(a__d7, (`LH_C(b__d4, (`LH_C(c__d1, (`LH_C(d__d0, (`LH_N)))))))))))
//│ 		and example5__d0 _lh_example5_arg1_1 =
//│ 		  (prod__d1 (((scanr__d0 plus___d6) (zerO__d1 0)) (`LH_C(a__d8, (`LH_C(b__d5, (`LH_C(c__d2, (`LH_C(d__d1, (`LH_N)))))))))))
//│ 		and findCommon__d0 _lh_findCommon_arg1_1 =
//│ 		  (let rec sim_1 = (fun _lh_sim_arg1_1 _lh_sim_arg2_1 -> 
//│ 		    (match _lh_sim_arg1_1 with
//│ 		      | `LH_P3(_lh_sim_LH_P3_0_2, _lh_sim_LH_P3_1_2, _lh_sim_LH_P3_2_2) -> 
//│ 		        (match _lh_sim_arg2_1 with
//│ 		          | `LH_P2(_lh_sim_LH_P2_0_1, _lh_sim_LH_P2_1_1) -> 
//│ 		            (let rec rcs_1 = ((map__d0 _lh_sim_LH_P2_0_1) _lh_sim_LH_P3_2_2) in
//│ 		              (let rec ms_1 = (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		                (match _lh_listcomp_fun_para_1 with
//│ 		                  | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                    (match _lh_listcomp_fun_ls_h_1 with
//│ 		                      | `LH_P3(_lh_sim_LH_P3_0_3, _lh_sim_LH_P3_1_3, _lh_sim_LH_P3_2_3) -> 
//│ 		                        (if (_lh_sim_LH_P3_1_2 = _lh_sim_LH_P3_1_3) then
//│ 		                          (if (_lh_sim_LH_P3_2_3 = rcs_1) then
//│ 		                            (`LH_C(_lh_sim_LH_P3_0_3, (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		                          else
//│ 		                            (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))
//│ 		                        else
//│ 		                          (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))
//│ 		                      | _ -> 
//│ 		                        (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1))
//│ 		                  | `LH_N -> 
//│ 		                    (`LH_N))) in
//│ 		                (_lh_listcomp_fun_1 _lh_sim_LH_P2_1_1)) in
//│ 		                (if (null__d0 ms_1) then
//│ 		                  (`LH_P2(_lh_sim_LH_P2_0_1, ((mappend__d0 (`LH_C((`LH_P3(_lh_sim_LH_P3_0_2, _lh_sim_LH_P3_1_2, rcs_1)), (`LH_N)))) _lh_sim_LH_P2_1_1)))
//│ 		                else
//│ 		                  (`LH_P2((((newlyDefined__d0 _lh_sim_LH_P3_0_2) (head__d0 ms_1)) _lh_sim_LH_P2_0_1), _lh_sim_LH_P2_1_1)))))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error"))) in
//│ 		    (let rec _lh_matchIdent_9 = (((foldr__d0 sim_1) (`LH_P2(id__d0, (`LH_N)))) _lh_findCommon_arg1_1) in
//│ 		      (match _lh_matchIdent_9 with
//│ 		        | `LH_P2(_lh_findCommon_LH_P2_0_1, _lh_findCommon_LH_P2_1_1) -> 
//│ 		          _lh_findCommon_LH_P2_1_1
//│ 		        | _ -> 
//│ 		          (failwith "error"))))
//│ 		and foldr__d0 f_1_6 i_5 ls_2_4 =
//│ 		  (match ls_2_4 with
//│ 		    | `LH_C(h_2_8, t_3_0) -> 
//│ 		      ((f_1_6 h_2_8) (((foldr__d0 f_1_6) i_5) t_3_0))
//│ 		    | `LH_N -> 
//│ 		      i_5)
//│ 		and head__d0 ls_2_0 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_3, t_2_5) -> 
//│ 		      h_2_3
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and id__d0 _lh_id_arg1_1 =
//│ 		  _lh_id_arg1_1
//│ 		and incr__d0 _lh_incr_arg1_1 =
//│ 		  (update__d0 (fun x_3 -> 
//│ 		    (1 + x_3)))
//│ 		and labelTree__d0 _lh_labelTree_arg1_1 =
//│ 		  (let rec label_1 = (fun _lh_label_arg1_1 -> 
//│ 		    (match _lh_label_arg1_1 with
//│ 		      | `Node(_lh_label_Node_0_1, _lh_label_Node_1_1) -> 
//│ 		        ((bind__d0 (incr__d0 0)) (fun n_5 -> 
//│ 		          ((bind__d1 ((mmapl__d0 label_1) _lh_label_Node_1_1)) (fun ts_2 -> 
//│ 		            (retURN__d2 (`Node((`LH_P2(n_5, _lh_label_Node_0_1)), ts_2)))))))
//│ 		      | _ -> 
//│ 		        (failwith "error"))) in
//│ 		    ((startingWith__d0 (label_1 _lh_labelTree_arg1_1)) 0))
//│ 		and ltGraph__d0 _lh_ltGraph_arg1_1 =
//│ 		  (match _lh_ltGraph_arg1_1 with
//│ 		    | `Node(_lh_ltGraph_Node_0_1, _lh_ltGraph_Node_1_1) -> 
//│ 		      (match _lh_ltGraph_Node_0_1 with
//│ 		        | `LH_P2(_lh_ltGraph_LH_P2_0_1, _lh_ltGraph_LH_P2_1_1) -> 
//│ 		          (let rec labelOf_1 = (fun _lh_labelOf_arg1_1 -> 
//│ 		            (match _lh_labelOf_arg1_1 with
//│ 		              | `Node(_lh_labelOf_Node_0_1, _lh_labelOf_Node_1_1) -> 
//│ 		                (match _lh_labelOf_Node_0_1 with
//│ 		                  | `LH_P2(_lh_labelOf_LH_P2_0_1, _lh_labelOf_LH_P2_1_1) -> 
//│ 		                    _lh_labelOf_LH_P2_0_1
//│ 		                  | _ -> 
//│ 		                    (failwith "error"))
//│ 		              | _ -> 
//│ 		                (failwith "error"))) in
//│ 		            (`LH_C((`LH_P3(_lh_ltGraph_LH_P2_0_1, _lh_ltGraph_LH_P2_1_1, ((map__d1 labelOf_1) _lh_ltGraph_Node_1_1))), (concat__d0 ((map__d2 ltGraph__d0) _lh_ltGraph_Node_1_1)))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and map__d0 f_1_2 ls_1_9 =
//│ 		  (match ls_1_9 with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      (`LH_C((f_1_2 h_2_0), ((map__d0 f_1_2) t_2_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and map__d1 f_1_7 ls_2_6 =
//│ 		  (match ls_2_6 with
//│ 		    | `LH_C(h_3_0, t_3_2) -> 
//│ 		      (`LH_C((f_1_7 h_3_0), ((map__d1 f_1_7) t_3_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and map__d2 f_1_3 ls_2_1 =
//│ 		  (match ls_2_1 with
//│ 		    | `LH_C(h_2_4, t_2_6) -> 
//│ 		      (`LH_C((f_1_3 h_2_4), ((map__d2 f_1_3) t_2_6)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and map__d3 f_1_5 ls_2_3 =
//│ 		  (match ls_2_3 with
//│ 		    | `LH_C(h_2_6, t_2_8) -> 
//│ 		      (`LH_C((f_1_5 h_2_6), ((map__d3 f_1_5) t_2_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and map__d4 f_1_4 ls_2_2 =
//│ 		  (match ls_2_2 with
//│ 		    | `LH_C(h_2_5, t_2_7) -> 
//│ 		      (`LH_C((f_1_4 h_2_5), ((map__d4 f_1_4) t_2_7)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and mappend__d0 xs_1_0 ys_1_1 =
//│ 		  (match xs_1_0 with
//│ 		    | `LH_C(h_2_7, t_2_9) -> 
//│ 		      (`LH_C(h_2_7, ((mappend__d0 t_2_9) ys_1_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_1)
//│ 		and mappend__d1 xs_9 ys_1_0 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (`LH_C(h_2_1, ((mappend__d1 t_2_3) ys_1_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_0)
//│ 		and mmapl__d0 _lh_mmapl_arg1_1 _lh_mmapl_arg2_1 =
//│ 		  (match _lh_mmapl_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      (retURN__d0 (`LH_N))
//│ 		    | `LH_C(_lh_mmapl_LH_C_0_1, _lh_mmapl_LH_C_1_1) -> 
//│ 		      ((bind__d2 (_lh_mmapl_arg1_1 _lh_mmapl_LH_C_0_1)) (fun b_4 -> 
//│ 		        ((bind__d3 ((mmapl__d0 _lh_mmapl_arg1_1) _lh_mmapl_LH_C_1_1)) (fun bs_1 -> 
//│ 		          (retURN__d1 (`LH_C(b_4, bs_1)))))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and mult___d0 _lh_mult__arg1_1 _lh_mult__arg2_1 =
//│ 		  (`Node((`LH_C('*', (`LH_N))), (`LH_C(_lh_mult__arg1_1, (`LH_C(_lh_mult__arg2_1, (`LH_N)))))))
//│ 		and mult___d1 _lh_mult__arg1_3 _lh_mult__arg2_3 =
//│ 		  (`Node((`LH_C('*', (`LH_N))), (`LH_C(_lh_mult__arg1_3, (`LH_C(_lh_mult__arg2_3, (`LH_N)))))))
//│ 		and mult___d2 _lh_mult__arg1_2 _lh_mult__arg2_2 =
//│ 		  (`Node((`LH_C('*', (`LH_N))), (`LH_C(_lh_mult__arg1_2, (`LH_C(_lh_mult__arg2_2, (`LH_N)))))))
//│ 		and newlyDefined__d0 _lh_newlyDefined_arg1_1 _lh_newlyDefined_arg2_1 _lh_newlyDefined_arg3_1 _lh_newlyDefined_arg4_1 =
//│ 		  (if (_lh_newlyDefined_arg1_1 = _lh_newlyDefined_arg4_1) then
//│ 		    _lh_newlyDefined_arg2_1
//│ 		  else
//│ 		    (_lh_newlyDefined_arg3_1 _lh_newlyDefined_arg4_1))
//│ 		and null__d0 _lh_null_arg1_1 =
//│ 		  (match _lh_null_arg1_1 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_null_LH_C_0_1, _lh_null_LH_C_1_1) -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and plus___d0 _lh_plus__arg1_4 _lh_plus__arg2_4 =
//│ 		  (`Node((`LH_C('+', (`LH_N))), (`LH_C(_lh_plus__arg1_4, (`LH_C(_lh_plus__arg2_4, (`LH_N)))))))
//│ 		and plus___d1 _lh_plus__arg1_5 _lh_plus__arg2_5 =
//│ 		  (`Node((`LH_C('+', (`LH_N))), (`LH_C(_lh_plus__arg1_5, (`LH_C(_lh_plus__arg2_5, (`LH_N)))))))
//│ 		and plus___d2 _lh_plus__arg1_6 _lh_plus__arg2_6 =
//│ 		  (`Node((`LH_C('+', (`LH_N))), (`LH_C(_lh_plus__arg1_6, (`LH_C(_lh_plus__arg2_6, (`LH_N)))))))
//│ 		and plus___d3 _lh_plus__arg1_1 _lh_plus__arg2_1 =
//│ 		  (`Node((`LH_C('+', (`LH_N))), (`LH_C(_lh_plus__arg1_1, (`LH_C(_lh_plus__arg2_1, (`LH_N)))))))
//│ 		and plus___d4 _lh_plus__arg1_7 _lh_plus__arg2_7 =
//│ 		  (`Node((`LH_C('+', (`LH_N))), (`LH_C(_lh_plus__arg1_7, (`LH_C(_lh_plus__arg2_7, (`LH_N)))))))
//│ 		and plus___d5 _lh_plus__arg1_3 _lh_plus__arg2_3 =
//│ 		  (`Node((`LH_C('+', (`LH_N))), (`LH_C(_lh_plus__arg1_3, (`LH_C(_lh_plus__arg2_3, (`LH_N)))))))
//│ 		and plus___d6 _lh_plus__arg1_2 _lh_plus__arg2_2 =
//│ 		  (`Node((`LH_C('+', (`LH_N))), (`LH_C(_lh_plus__arg1_2, (`LH_C(_lh_plus__arg2_2, (`LH_N)))))))
//│ 		and prod__d0 _lh_prod_arg1_1 =
//│ 		  (`Node((`LH_C('X', (`LH_N))), _lh_prod_arg1_1))
//│ 		and prod__d1 _lh_prod_arg1_2 =
//│ 		  (`Node((`LH_C('X', (`LH_N))), _lh_prod_arg1_2))
//│ 		and retURN__d0 _lh_retURN_arg1_2 s_9 =
//│ 		  (`LH_P2(s_9, _lh_retURN_arg1_2))
//│ 		and retURN__d1 _lh_retURN_arg1_3 s_1_5 =
//│ 		  (`LH_P2(s_1_5, _lh_retURN_arg1_3))
//│ 		and retURN__d2 _lh_retURN_arg1_1 s_8 =
//│ 		  (`LH_P2(s_8, _lh_retURN_arg1_1))
//│ 		and scanl__d0 _lh_scanl_arg1_1 _lh_scanl_arg2_1 _lh_scanl_arg3_1 =
//│ 		  (`LH_C(_lh_scanl_arg2_1, (let rec _lh_matchIdent_1_3 = _lh_scanl_arg3_1 in
//│ 		    (match _lh_matchIdent_1_3 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_scanl_LH_C_0_1, _lh_scanl_LH_C_1_1) -> 
//│ 		        (((scanl__d0 _lh_scanl_arg1_1) ((_lh_scanl_arg1_1 _lh_scanl_arg2_1) _lh_scanl_LH_C_0_1)) _lh_scanl_LH_C_1_1)
//│ 		      | _ -> 
//│ 		        (failwith "error")))))
//│ 		and scanr__d0 _lh_scanr_arg1_1 _lh_scanr_arg2_1 _lh_scanr_arg3_1 =
//│ 		  (match _lh_scanr_arg3_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_C(_lh_scanr_arg2_1, (`LH_N)))
//│ 		    | `LH_C(_lh_scanr_LH_C_0_2, _lh_scanr_LH_C_1_2) -> 
//│ 		      (let rec _lh_matchIdent_1_0 = (((scanr__d0 _lh_scanr_arg1_1) _lh_scanr_arg2_1) _lh_scanr_LH_C_1_2) in
//│ 		        (match _lh_matchIdent_1_0 with
//│ 		          | `LH_C(_lh_scanr_LH_C_0_3, _lh_scanr_LH_C_1_3) -> 
//│ 		            (`LH_C(((_lh_scanr_arg1_1 _lh_scanr_LH_C_0_2) _lh_scanr_LH_C_0_3), (`LH_C(_lh_scanr_LH_C_0_3, _lh_scanr_LH_C_1_3))))
//│ 		          | _ -> 
//│ 		            (failwith "error")))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and startingWith__d0 _lh_startingWith_arg1_1 _lh_startingWith_arg2_1 =
//│ 		  (let rec _lh_matchIdent_1_6 = (_lh_startingWith_arg1_1 _lh_startingWith_arg2_1) in
//│ 		    (match _lh_matchIdent_1_6 with
//│ 		      | `LH_P2(_lh_startingWith_LH_P2_0_1, _lh_startingWith_LH_P2_1_1) -> 
//│ 		        _lh_startingWith_LH_P2_1_1
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and take__d0 n_6 ls_2_5 =
//│ 		  (if (n_6 > 0) then
//│ 		    (match ls_2_5 with
//│ 		      | `LH_C(h_2_9, t_3_1) -> 
//│ 		        (`LH_C(h_2_9, ((take__d0 (n_6 - 1)) t_3_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testCse_nofib__d0 _lh_testCse_nofib_arg1_1 =
//│ 		  ((map__d3 (fun i_4 -> 
//│ 		    ((map__d4 cse__d0) ((take__d0 (i_4 mod 6)) (`LH_C((example0__d0 0), (`LH_C((example1__d0 0), (`LH_C((example2__d0 0), (`LH_C((example3__d0 0), (`LH_C((example4__d0 0), (`LH_C((example5__d0 0), (`LH_N))))))))))))))))) ((enumFromTo__d0 1) _lh_testCse_nofib_arg1_1))
//│ 		and update__d0 _lh_update_arg1_1 s_1_0 =
//│ 		  (`LH_P2((_lh_update_arg1_1 s_1_0), s_1_0))
//│ 		and zerO__d0 _lh_zerO_arg1_1 =
//│ 		  (match _lh_zerO_arg1_1 with
//│ 		    | 0 -> 
//│ 		      (`Node((`LH_C('0', (`LH_N))), (`LH_N)))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and zerO__d1 _lh_zerO_arg1_2 =
//│ 		  (match _lh_zerO_arg1_2 with
//│ 		    | 0 -> 
//│ 		      (`Node((`LH_C('0', (`LH_N))), (`LH_N)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		(testCse_nofib__d0 1000)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 1417 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1418 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1424 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg2¹ [LH_N]]: 1425 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg1¹ [LH_C _lh_plus__arg2¹ [LH_N]]]: 1426 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1¹ [LH_C _lh_plus__arg2¹ [LH_N]]]]: 1427 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1434 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '0' [LH_N]] [LH_N]]: 1435 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1444 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg2² [LH_N]]: 1445 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg1² [LH_C _lh_plus__arg2² [LH_N]]]: 1446 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1² [LH_C _lh_plus__arg2² [LH_N]]]]: 1447 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1454 --->
//│ 	DeadCodeCons
//│ 	case ls²¹ of {LH_C h²⁴ t²⁶ => [LH_C f¹³(h²⁴) map_₂(f¹³, t²⁶)] | LH_N  => [LH_N]}: 1853
//│ 	case ls²⁶ of {LH_C h³⁰ t³² => [LH_C f¹⁷(h³⁰) map_₁(f¹⁷, t³²)] | LH_N  => [LH_N]}: 2289
//│ [LH_C b⁴ bs¹]: 1471 --->
//│ 	DeadCodeCons
//│ 	case ls²¹ of {LH_C h²⁴ t²⁶ => [LH_C f¹³(h²⁴) map_₂(f¹³, t²⁶)] | LH_N  => [LH_N]}: 1853
//│ 	case ls²⁶ of {LH_C h³⁰ t³² => [LH_C f¹⁷(h³⁰) map_₁(f¹⁷, t³²)] | LH_N  => [LH_N]}: 2289
//│ [LH_N]: 1484 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1485 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1509 --->
//│ 	DeadCodeCons
//│ 	case _lh_null_arg1¹ of {LH_N  => [True] | LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False] | _  => error⁰}: 1722
//│ 	case ls²⁰ of {LH_C h²³ t²⁵ => h²³ | LH_N  => error⁰}: 1763
//│ [LH_N]: 1522 --->
//│ 	DeadCodeCons
//│ 	case _lh_null_arg1¹ of {LH_N  => [True] | LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False] | _  => error⁰}: 1722
//│ 	case ls²⁰ of {LH_C h²³ t²⁵ => h²³ | LH_N  => error⁰}: 1763
//│ [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹]: 1537 --->
//│ 	NoCons
//│ 	case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1521
//│ [LH_N]: 1538 --->
//│ 	case xs¹⁰ of {LH_C h²⁷ t²⁹ => [LH_C h²⁷ mappend_₀(t²⁹, ys¹¹)] | LH_N  => ys¹¹}: 1893
//│ [LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]]: 1539 --->
//│ 	case xs¹⁰ of {LH_C h²⁷ t²⁹ => [LH_C h²⁷ mappend_₀(t²⁹, ys¹¹)] | LH_N  => ys¹¹}: 1893
//│ [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)]: 1543 --->
//│ 	case _lh_sim_arg2¹ of {LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => let rcs¹ = map_₀(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2²)
//│ in let ms¹ = let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_sim_LH_P2_1¹)
//│ in if null_₀(ms¹) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹] | _  => error⁰}: 1559
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_findCommon_LH_P2_0¹ _lh_findCommon_LH_P2_1¹ => _lh_findCommon_LH_P2_1¹ | _  => error⁰}: 1576
//│ [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹]: 1554 --->
//│ 	case _lh_sim_arg2¹ of {LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => let rcs¹ = map_₀(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2²)
//│ in let ms¹ = let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_sim_LH_P2_1¹)
//│ in if null_₀(ms¹) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹] | _  => error⁰}: 1559
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_findCommon_LH_P2_0¹ _lh_findCommon_LH_P2_1¹ => _lh_findCommon_LH_P2_1¹ | _  => error⁰}: 1576
//│ [LH_N]: 1568 --->
//│ 	NoCons
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1523
//│ [LH_P2 id_₀ [LH_N]]: 1569 --->
//│ 	case _lh_sim_arg2¹ of {LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => let rcs¹ = map_₀(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2²)
//│ in let ms¹ = let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_sim_LH_P2_1¹)
//│ in if null_₀(ms¹) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹] | _  => error⁰}: 1559
//│ 	case _lh_matchIdent⁹ of {LH_P2 _lh_findCommon_LH_P2_0¹ _lh_findCommon_LH_P2_1¹ => _lh_findCommon_LH_P2_1¹ | _  => error⁰}: 1576
//│ [LH_N]: 1583 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1584 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1588 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1589 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1609 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_mult__arg2¹ [LH_N]]: 1610 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_mult__arg1¹ [LH_C _lh_mult__arg2¹ [LH_N]]]: 1611 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1¹ [LH_C _lh_mult__arg2¹ [LH_N]]]]: 1612 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C h²¹ mappend_₁(t²³, ys¹⁰)]: 1630 --->
//│ 	case xs⁹ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₁(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 1632
//│ 	case ls²⁴ of {LH_C h²⁸ t³⁰ => f¹⁶(h²⁸, foldr_₀(f¹⁶, i⁵, t³⁰)) | LH_N  => i⁵}: 2211
//│ [LH_N]: 1640 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg2³ [LH_N]]: 1641 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg1³ [LH_C _lh_plus__arg2³ [LH_N]]]: 1642 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1³ [LH_C _lh_plus__arg2³ [LH_N]]]]: 1643 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1649 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 1650 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1663 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [LH_C d_₀ [LH_N]]: 1664 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [LH_C c_₁ [LH_C d_₀ [LH_N]]]: 1665 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [LH_C b_₄ [LH_C c_₁ [LH_C d_₀ [LH_N]]]]: 1666 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [LH_C a_₇ [LH_C b_₄ [LH_C c_₁ [LH_C d_₀ [LH_N]]]]]: 1667 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [LH_P2 s⁸ _lh_retURN_arg1¹]: 1673 --->
//│ 	case _lh_matchIdent¹⁵ of {LH_P2 _lh_bind_LH_P2_0⁴ _lh_bind_LH_P2_1⁴ => _lh_bind_arg2⁴(_lh_bind_LH_P2_1⁴, _lh_bind_LH_P2_0⁴) | _  => error⁰}: 2086
//│ 	case _lh_matchIdent¹⁶ of {LH_P2 _lh_startingWith_LH_P2_0¹ _lh_startingWith_LH_P2_1¹ => _lh_startingWith_LH_P2_1¹ | _  => error⁰}: 2249
//│ [LH_N]: 1681 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg2⁴ [LH_N]]: 1682 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg1⁴ [LH_C _lh_plus__arg2⁴ [LH_N]]]: 1683 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁴ [LH_C _lh_plus__arg2⁴ [LH_N]]]]: 1684 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1695 --->
//│ 	case xs⁹ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₁(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 1632
//│ 	case ls²⁴ of {LH_C h²⁸ t³⁰ => f¹⁶(h²⁸, foldr_₀(f¹⁶, i⁵, t³⁰)) | LH_N  => i⁵}: 2211
//│ [LH_N]: 1703 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg2⁵ [LH_N]]: 1704 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg1⁵ [LH_C _lh_plus__arg2⁵ [LH_N]]]: 1705 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁵ [LH_C _lh_plus__arg2⁵ [LH_N]]]]: 1706 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_P2 n⁵ _lh_label_Node_0¹]: 1740 --->
//│ 	DeadCodeCons
//│ 	case _lh_labelOf_Node_0¹ of {LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹ | _  => error⁰}: 2298
//│ 	case _lh_ltGraph_Node_0¹ of {LH_P2 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ => let labelOf¹ = (fun _lh_labelOf_arg1¹ -> case _lh_labelOf_arg1¹ of {Node _lh_labelOf_Node_0¹ _lh_labelOf_Node_1¹ => case _lh_labelOf_Node_0¹ of {LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹ | _  => error⁰} | _  => error⁰})
//│ in [LH_C [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)] concat_₀(map_₂(ltGraph_₀, _lh_ltGraph_Node_1¹))] | _  => error⁰}: 2320
//│ [Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]: 1742 --->
//│ 	DeadCodeCons
//│ 	case _lh_labelOf_arg1¹ of {Node _lh_labelOf_Node_0¹ _lh_labelOf_Node_1¹ => case _lh_labelOf_Node_0¹ of {LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹ | _  => error⁰} | _  => error⁰}: 2300
//│ 	case _lh_ltGraph_arg1¹ of {Node _lh_ltGraph_Node_0¹ _lh_ltGraph_Node_1¹ => case _lh_ltGraph_Node_0¹ of {LH_P2 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ => let labelOf¹ = (fun _lh_labelOf_arg1¹ -> case _lh_labelOf_arg1¹ of {Node _lh_labelOf_Node_0¹ _lh_labelOf_Node_1¹ => case _lh_labelOf_Node_0¹ of {LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹ | _  => error⁰} | _  => error⁰})
//│ in [LH_C [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)] concat_₀(map_₂(ltGraph_₀, _lh_ltGraph_Node_1¹))] | _  => error⁰} | _  => error⁰}: 2322
//│ [LH_N]: 1768 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 1769 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_P2 s⁹ _lh_retURN_arg1²]: 1772 --->
//│ 	case _lh_matchIdent¹² of {LH_P2 _lh_bind_LH_P2_0² _lh_bind_LH_P2_1² => _lh_bind_arg2²(_lh_bind_LH_P2_1², _lh_bind_LH_P2_0²) | _  => error⁰}: 1965
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_bind_LH_P2_0³ _lh_bind_LH_P2_1³ => _lh_bind_arg2³(_lh_bind_LH_P2_1³, _lh_bind_LH_P2_0³) | _  => error⁰}: 2071
//│ [LH_N]: 1777 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_scanr_arg2¹ [LH_N]]: 1778 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ 	case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰}: 1797
//│ [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]: 1794 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]]: 1795 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ 	case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰}: 1797
//│ [LH_P2 _lh_update_arg1¹(s¹⁰) s¹⁰]: 1808 --->
//│ 	case _lh_matchIdent¹¹ of {LH_P2 _lh_bind_LH_P2_0¹ _lh_bind_LH_P2_1¹ => _lh_bind_arg2¹(_lh_bind_LH_P2_1¹, _lh_bind_LH_P2_0¹) | _  => error⁰}: 1906
//│ [Node [LH_C 'X' [LH_N]] _lh_prod_arg1¹]: 1815 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1829 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [LH_C d_₁ [LH_N]]: 1830 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [LH_C c_₂ [LH_C d_₁ [LH_N]]]: 1831 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [LH_C b_₅ [LH_C c_₂ [LH_C d_₁ [LH_N]]]]: 1832 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [LH_C a_₈ [LH_C b_₅ [LH_C c_₂ [LH_C d_₁ [LH_N]]]]]: 1833 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [LH_N]: 1840 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1841 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C f¹³(h²⁴) map_₂(f¹³, t²⁶)]: 1851 --->
//│ 	case lss¹ of {LH_C h²² t²⁴ => mappend_₁(h²², concat_₀(t²⁴)) | LH_N  => [LH_N]}: 1696
//│ [LH_N]: 1852 --->
//│ 	case lss¹ of {LH_C h²² t²⁴ => mappend_₁(h²², concat_₀(t²⁴)) | LH_N  => [LH_N]}: 1696
//│ [LH_C h²⁷ mappend_₀(t²⁹, ys¹¹)]: 1891 --->
//│ 	NoCons
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1523
//│ [LH_N]: 1914 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'c' [LH_N]] [LH_N]]: 1915 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1919 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'c' [LH_N]] [LH_N]]: 1920 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1926 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg2⁶ [LH_N]]: 1927 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg1⁶ [LH_C _lh_plus__arg2⁶ [LH_N]]]: 1928 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁶ [LH_C _lh_plus__arg2⁶ [LH_N]]]]: 1929 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1953 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 1954 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1973 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 1974 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1996 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_mult__arg2² [LH_N]]: 1997 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_mult__arg1² [LH_C _lh_mult__arg2² [LH_N]]]: 1998 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1² [LH_C _lh_mult__arg2² [LH_N]]]]: 1999 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2011 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 2012 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2016 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'd' [LH_N]] [LH_N]]: 2017 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2021 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2022 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2026 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_scanl_arg2¹ let _lh_matchIdent¹³ = _lh_scanl_arg3¹
//│ in case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}]: 2041 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_N]: 2048 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2049 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2055 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_mult__arg2³ [LH_N]]: 2056 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_mult__arg1³ [LH_C _lh_mult__arg2³ [LH_N]]]: 2057 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1³ [LH_C _lh_mult__arg2³ [LH_N]]]]: 2058 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2120 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example5_₀(0) [LH_N]]: 2121 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]: 2122 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]: 2123 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]: 2124 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example1_₀(0) [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]]: 2125 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example0_₀(0) [LH_C example1_₀(0) [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]]]: 2126 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_N]: 2141 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2142 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2146 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2147 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C a⁶ enumFromTo_₀((a⁶ + 1), b⁵)]: 2163 --->
//│ 	case ls²³ of {LH_C h²⁶ t²⁸ => [LH_C f¹⁵(h²⁶) map_₃(f¹⁵, t²⁸)] | LH_N  => [LH_N]}: 1881
//│ [LH_N]: 2164 --->
//│ 	case ls²³ of {LH_C h²⁶ t²⁸ => [LH_C f¹⁵(h²⁶) map_₃(f¹⁵, t²⁸)] | LH_N  => [LH_N]}: 1881
//│ [LH_N]: 2171 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2172 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2178 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg2⁷ [LH_N]]: 2179 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [LH_C _lh_plus__arg1⁷ [LH_C _lh_plus__arg2⁷ [LH_N]]]: 2180 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁷ [LH_C _lh_plus__arg2⁷ [LH_N]]]]: 2181 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)]: 2231 --->
//│ 	case ls²² of {LH_C h²⁵ t²⁷ => [LH_C f¹⁴(h²⁵) map_₄(f¹⁴, t²⁷)] | LH_N  => [LH_N]}: 1867
//│ [LH_N]: 2232 --->
//│ 	case ls²² of {LH_C h²⁵ t²⁷ => [LH_C f¹⁴(h²⁵) map_₄(f¹⁴, t²⁷)] | LH_N  => [LH_N]}: 1867
//│ [LH_N]: 2234 --->
//│ 	case ls²² of {LH_C h²⁵ t²⁷ => [LH_C f¹⁴(h²⁵) map_₄(f¹⁴, t²⁷)] | LH_N  => [LH_N]}: 1867
//│ [LH_N]: 2241 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'c' [LH_N]] [LH_N]]: 2242 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_P2 s¹⁵ _lh_retURN_arg1³]: 2255 --->
//│ 	case _lh_matchIdent¹² of {LH_P2 _lh_bind_LH_P2_0² _lh_bind_LH_P2_1² => _lh_bind_arg2²(_lh_bind_LH_P2_1², _lh_bind_LH_P2_0²) | _  => error⁰}: 1965
//│ 	case _lh_matchIdent¹⁴ of {LH_P2 _lh_bind_LH_P2_0³ _lh_bind_LH_P2_1³ => _lh_bind_arg2³(_lh_bind_LH_P2_1³, _lh_bind_LH_P2_0³) | _  => error⁰}: 2071
//│ [Node [LH_C 'X' [LH_N]] _lh_prod_arg1²]: 2262 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2267 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C 'd' [LH_N]] [LH_N]]: 2268 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2273 --->
//│ 	case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478
//│ [Node [LH_C '0' [LH_N]] [LH_N]]: 2274 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C f¹⁷(h³⁰) map_₁(f¹⁷, t³²)]: 2287 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₀(f¹², t²²)] | LH_N  => [LH_N]}: 1601
//│ [LH_N]: 2288 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₀(f¹², t²²)] | LH_N  => [LH_N]}: 1601
//│ [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)]: 2309 --->
//│ 	case _lh_sim_arg1¹ of {LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² _lh_sim_LH_P3_2² => case _lh_sim_arg2¹ of {LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => let rcs¹ = map_₀(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2²)
//│ in let ms¹ = let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_sim_LH_P2_1¹)
//│ in if null_₀(ms¹) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 1561
//│ [LH_C [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)] concat_₀(map_₂(ltGraph_₀, _lh_ltGraph_Node_1¹))]: 2317 --->
//│ 	case xs⁹ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₁(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 1632
//│ 	case ls²⁴ of {LH_C h²⁸ t³⁰ => f¹⁶(h²⁸, foldr_₀(f¹⁶, i⁵, t³⁰)) | LH_N  => i⁵}: 2211
//│ ------------------
//│ case _lh_mmapl_arg2¹ of {LH_N  => retURN_₀([LH_N]) | LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1¹(_lh_mmapl_LH_C_0¹), (fun b⁴ -> bind_₃(mmapl_₀(_lh_mmapl_arg1¹, _lh_mmapl_LH_C_1¹), (fun bs¹ -> retURN_₁([LH_C b⁴ bs¹]))))) | _  => error⁰}: 1478 --->
//│ 	[LH_N]: 1417
//│ 	[LH_N]: 1424
//│ 	[LH_C _lh_plus__arg2¹ [LH_N]]: 1425
//│ 	[LH_C _lh_plus__arg1¹ [LH_C _lh_plus__arg2¹ [LH_N]]]: 1426
//│ 	[LH_N]: 1434
//│ 	[LH_N]: 1444
//│ 	[LH_C _lh_plus__arg2² [LH_N]]: 1445
//│ 	[LH_C _lh_plus__arg1² [LH_C _lh_plus__arg2² [LH_N]]]: 1446
//│ 	[LH_N]: 1484
//│ 	[LH_N]: 1583
//│ 	[LH_N]: 1588
//│ 	[LH_N]: 1609
//│ 	[LH_C _lh_mult__arg2¹ [LH_N]]: 1610
//│ 	[LH_C _lh_mult__arg1¹ [LH_C _lh_mult__arg2¹ [LH_N]]]: 1611
//│ 	[LH_N]: 1640
//│ 	[LH_C _lh_plus__arg2³ [LH_N]]: 1641
//│ 	[LH_C _lh_plus__arg1³ [LH_C _lh_plus__arg2³ [LH_N]]]: 1642
//│ 	[LH_N]: 1649
//│ 	[LH_N]: 1681
//│ 	[LH_C _lh_plus__arg2⁴ [LH_N]]: 1682
//│ 	[LH_C _lh_plus__arg1⁴ [LH_C _lh_plus__arg2⁴ [LH_N]]]: 1683
//│ 	[LH_N]: 1703
//│ 	[LH_C _lh_plus__arg2⁵ [LH_N]]: 1704
//│ 	[LH_C _lh_plus__arg1⁵ [LH_C _lh_plus__arg2⁵ [LH_N]]]: 1705
//│ 	[LH_N]: 1768
//│ 	[LH_N]: 1777
//│ 	[LH_C _lh_scanr_arg2¹ [LH_N]]: 1778
//│ 	[LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]: 1794
//│ 	[LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]]: 1795
//│ 	[LH_N]: 1840
//│ 	[LH_N]: 1914
//│ 	[LH_N]: 1919
//│ 	[LH_N]: 1926
//│ 	[LH_C _lh_plus__arg2⁶ [LH_N]]: 1927
//│ 	[LH_C _lh_plus__arg1⁶ [LH_C _lh_plus__arg2⁶ [LH_N]]]: 1928
//│ 	[LH_N]: 1953
//│ 	[LH_N]: 1973
//│ 	[LH_N]: 1996
//│ 	[LH_C _lh_mult__arg2² [LH_N]]: 1997
//│ 	[LH_C _lh_mult__arg1² [LH_C _lh_mult__arg2² [LH_N]]]: 1998
//│ 	[LH_N]: 2011
//│ 	[LH_N]: 2016
//│ 	[LH_N]: 2021
//│ 	[LH_N]: 2026
//│ 	[LH_C _lh_scanl_arg2¹ let _lh_matchIdent¹³ = _lh_scanl_arg3¹
//│ in case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}]: 2041
//│ 	[LH_N]: 2048
//│ 	[LH_N]: 2055
//│ 	[LH_C _lh_mult__arg2³ [LH_N]]: 2056
//│ 	[LH_C _lh_mult__arg1³ [LH_C _lh_mult__arg2³ [LH_N]]]: 2057
//│ 	[LH_N]: 2141
//│ 	[LH_N]: 2146
//│ 	[LH_N]: 2171
//│ 	[LH_N]: 2178
//│ 	[LH_C _lh_plus__arg2⁷ [LH_N]]: 2179
//│ 	[LH_C _lh_plus__arg1⁷ [LH_C _lh_plus__arg2⁷ [LH_N]]]: 2180
//│ 	[LH_N]: 2241
//│ 	[LH_N]: 2267
//│ 	[LH_N]: 2273
//│ case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)}: 1521 --->
//│ 	[LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹]: 1537
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]}: 1523 --->
//│ 	[LH_N]: 1568
//│ 	[LH_C h²⁷ mappend_₀(t²⁹, ys¹¹)]: 1891
//│ case _lh_sim_arg2¹ of {LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => let rcs¹ = map_₀(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2²)
//│ in let ms¹ = let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_sim_LH_P2_1¹)
//│ in if null_₀(ms¹) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹] | _  => error⁰}: 1559 --->
//│ 	[LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)]: 1543
//│ 	[LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹]: 1554
//│ 	[LH_P2 id_₀ [LH_N]]: 1569
//│ case _lh_sim_arg1¹ of {LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² _lh_sim_LH_P3_2² => case _lh_sim_arg2¹ of {LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => let rcs¹ = map_₀(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2²)
//│ in let ms¹ = let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_sim_LH_P2_1¹)
//│ in if null_₀(ms¹) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 1561 --->
//│ 	[LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)]: 2309
//│ case _lh_matchIdent⁹ of {LH_P2 _lh_findCommon_LH_P2_0¹ _lh_findCommon_LH_P2_1¹ => _lh_findCommon_LH_P2_1¹ | _  => error⁰}: 1576 --->
//│ 	[LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)]: 1543
//│ 	[LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹]: 1554
//│ 	[LH_P2 id_₀ [LH_N]]: 1569
//│ case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₀(f¹², t²²)] | LH_N  => [LH_N]}: 1601 --->
//│ 	[LH_C f¹⁷(h³⁰) map_₁(f¹⁷, t³²)]: 2287
//│ 	[LH_N]: 2288
//│ case xs⁹ of {LH_C h²¹ t²³ => [LH_C h²¹ mappend_₁(t²³, ys¹⁰)] | LH_N  => ys¹⁰}: 1632 --->
//│ 	[LH_C h²¹ mappend_₁(t²³, ys¹⁰)]: 1630
//│ 	[LH_N]: 1695
//│ 	[LH_C [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)] concat_₀(map_₂(ltGraph_₀, _lh_ltGraph_Node_1¹))]: 2317
//│ case lss¹ of {LH_C h²² t²⁴ => mappend_₁(h²², concat_₀(t²⁴)) | LH_N  => [LH_N]}: 1696 --->
//│ 	[LH_C f¹³(h²⁴) map_₂(f¹³, t²⁶)]: 1851
//│ 	[LH_N]: 1852
//│ case _lh_null_arg1¹ of {LH_N  => [True] | LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False] | _  => error⁰}: 1722 --->
//│ 	[LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1509
//│ 	[LH_N]: 1522
//│ case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749 --->
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1418
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1¹ [LH_C _lh_plus__arg2¹ [LH_N]]]]: 1427
//│ 	[Node [LH_C '0' [LH_N]] [LH_N]]: 1435
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1² [LH_C _lh_plus__arg2² [LH_N]]]]: 1447
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1485
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1584
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1589
//│ 	[Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1¹ [LH_C _lh_mult__arg2¹ [LH_N]]]]: 1612
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1³ [LH_C _lh_plus__arg2³ [LH_N]]]]: 1643
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 1650
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁴ [LH_C _lh_plus__arg2⁴ [LH_N]]]]: 1684
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁵ [LH_C _lh_plus__arg2⁵ [LH_N]]]]: 1706
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 1769
//│ 	[Node [LH_C 'X' [LH_N]] _lh_prod_arg1¹]: 1815
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1841
//│ 	[Node [LH_C 'c' [LH_N]] [LH_N]]: 1915
//│ 	[Node [LH_C 'c' [LH_N]] [LH_N]]: 1920
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁶ [LH_C _lh_plus__arg2⁶ [LH_N]]]]: 1929
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 1954
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 1974
//│ 	[Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1² [LH_C _lh_mult__arg2² [LH_N]]]]: 1999
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 2012
//│ 	[Node [LH_C 'd' [LH_N]] [LH_N]]: 2017
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2022
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2049
//│ 	[Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1³ [LH_C _lh_mult__arg2³ [LH_N]]]]: 2058
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2142
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2147
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2172
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁷ [LH_C _lh_plus__arg2⁷ [LH_N]]]]: 2181
//│ 	[Node [LH_C 'c' [LH_N]] [LH_N]]: 2242
//│ 	[Node [LH_C 'X' [LH_N]] _lh_prod_arg1²]: 2262
//│ 	[Node [LH_C 'd' [LH_N]] [LH_N]]: 2268
//│ 	[Node [LH_C '0' [LH_N]] [LH_N]]: 2274
//│ case ls²⁰ of {LH_C h²³ t²⁵ => h²³ | LH_N  => error⁰}: 1763 --->
//│ 	[LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1509
//│ 	[LH_N]: 1522
//│ case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰}: 1797 --->
//│ 	[LH_C _lh_scanr_arg2¹ [LH_N]]: 1778
//│ 	[LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]]: 1795
//│ case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800 --->
//│ 	[LH_N]: 1829
//│ 	[LH_C d_₁ [LH_N]]: 1830
//│ 	[LH_C c_₂ [LH_C d_₁ [LH_N]]]: 1831
//│ 	[LH_C b_₅ [LH_C c_₂ [LH_C d_₁ [LH_N]]]]: 1832
//│ 	[LH_C a_₈ [LH_C b_₅ [LH_C c_₂ [LH_C d_₁ [LH_N]]]]]: 1833
//│ case ls²¹ of {LH_C h²⁴ t²⁶ => [LH_C f¹³(h²⁴) map_₂(f¹³, t²⁶)] | LH_N  => [LH_N]}: 1853 --->
//│ 	[LH_N]: 1454
//│ 	[LH_C b⁴ bs¹]: 1471
//│ case ls²² of {LH_C h²⁵ t²⁷ => [LH_C f¹⁴(h²⁵) map_₄(f¹⁴, t²⁷)] | LH_N  => [LH_N]}: 1867 --->
//│ 	[LH_C h²⁹ take_₀((n⁶ - 1), t³¹)]: 2231
//│ 	[LH_N]: 2232
//│ 	[LH_N]: 2234
//│ case ls²³ of {LH_C h²⁶ t²⁸ => [LH_C f¹⁵(h²⁶) map_₃(f¹⁵, t²⁸)] | LH_N  => [LH_N]}: 1881 --->
//│ 	[LH_C a⁶ enumFromTo_₀((a⁶ + 1), b⁵)]: 2163
//│ 	[LH_N]: 2164
//│ case xs¹⁰ of {LH_C h²⁷ t²⁹ => [LH_C h²⁷ mappend_₀(t²⁹, ys¹¹)] | LH_N  => ys¹¹}: 1893 --->
//│ 	[LH_N]: 1538
//│ 	[LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]]: 1539
//│ case _lh_matchIdent¹¹ of {LH_P2 _lh_bind_LH_P2_0¹ _lh_bind_LH_P2_1¹ => _lh_bind_arg2¹(_lh_bind_LH_P2_1¹, _lh_bind_LH_P2_0¹) | _  => error⁰}: 1906 --->
//│ 	[LH_P2 _lh_update_arg1¹(s¹⁰) s¹⁰]: 1808
//│ case _lh_matchIdent¹² of {LH_P2 _lh_bind_LH_P2_0² _lh_bind_LH_P2_1² => _lh_bind_arg2²(_lh_bind_LH_P2_1², _lh_bind_LH_P2_0²) | _  => error⁰}: 1965 --->
//│ 	[LH_P2 s⁹ _lh_retURN_arg1²]: 1772
//│ 	[LH_P2 s¹⁵ _lh_retURN_arg1³]: 2255
//│ case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039 --->
//│ 	[LH_N]: 1663
//│ 	[LH_C d_₀ [LH_N]]: 1664
//│ 	[LH_C c_₁ [LH_C d_₀ [LH_N]]]: 1665
//│ 	[LH_C b_₄ [LH_C c_₁ [LH_C d_₀ [LH_N]]]]: 1666
//│ 	[LH_C a_₇ [LH_C b_₄ [LH_C c_₁ [LH_C d_₀ [LH_N]]]]]: 1667
//│ case _lh_matchIdent¹⁴ of {LH_P2 _lh_bind_LH_P2_0³ _lh_bind_LH_P2_1³ => _lh_bind_arg2³(_lh_bind_LH_P2_1³, _lh_bind_LH_P2_0³) | _  => error⁰}: 2071 --->
//│ 	[LH_P2 s⁹ _lh_retURN_arg1²]: 1772
//│ 	[LH_P2 s¹⁵ _lh_retURN_arg1³]: 2255
//│ case _lh_matchIdent¹⁵ of {LH_P2 _lh_bind_LH_P2_0⁴ _lh_bind_LH_P2_1⁴ => _lh_bind_arg2⁴(_lh_bind_LH_P2_1⁴, _lh_bind_LH_P2_0⁴) | _  => error⁰}: 2086 --->
//│ 	[LH_P2 s⁸ _lh_retURN_arg1¹]: 1673
//│ case ls²⁴ of {LH_C h²⁸ t³⁰ => f¹⁶(h²⁸, foldr_₀(f¹⁶, i⁵, t³⁰)) | LH_N  => i⁵}: 2211 --->
//│ 	[LH_C h²¹ mappend_₁(t²³, ys¹⁰)]: 1630
//│ 	[LH_N]: 1695
//│ 	[LH_C [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)] concat_₀(map_₂(ltGraph_₀, _lh_ltGraph_Node_1¹))]: 2317
//│ case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233 --->
//│ 	[LH_N]: 2120
//│ 	[LH_C example5_₀(0) [LH_N]]: 2121
//│ 	[LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]: 2122
//│ 	[LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]: 2123
//│ 	[LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]: 2124
//│ 	[LH_C example1_₀(0) [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]]: 2125
//│ 	[LH_C example0_₀(0) [LH_C example1_₀(0) [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]]]: 2126
//│ case _lh_matchIdent¹⁶ of {LH_P2 _lh_startingWith_LH_P2_0¹ _lh_startingWith_LH_P2_1¹ => _lh_startingWith_LH_P2_1¹ | _  => error⁰}: 2249 --->
//│ 	[LH_P2 s⁸ _lh_retURN_arg1¹]: 1673
//│ case ls²⁶ of {LH_C h³⁰ t³² => [LH_C f¹⁷(h³⁰) map_₁(f¹⁷, t³²)] | LH_N  => [LH_N]}: 2289 --->
//│ 	[LH_N]: 1454
//│ 	[LH_C b⁴ bs¹]: 1471
//│ case _lh_labelOf_Node_0¹ of {LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹ | _  => error⁰}: 2298 --->
//│ 	[LH_P2 n⁵ _lh_label_Node_0¹]: 1740
//│ case _lh_labelOf_arg1¹ of {Node _lh_labelOf_Node_0¹ _lh_labelOf_Node_1¹ => case _lh_labelOf_Node_0¹ of {LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹ | _  => error⁰} | _  => error⁰}: 2300 --->
//│ 	[Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]: 1742
//│ case _lh_ltGraph_Node_0¹ of {LH_P2 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ => let labelOf¹ = (fun _lh_labelOf_arg1¹ -> case _lh_labelOf_arg1¹ of {Node _lh_labelOf_Node_0¹ _lh_labelOf_Node_1¹ => case _lh_labelOf_Node_0¹ of {LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹ | _  => error⁰} | _  => error⁰})
//│ in [LH_C [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)] concat_₀(map_₂(ltGraph_₀, _lh_ltGraph_Node_1¹))] | _  => error⁰}: 2320 --->
//│ 	[LH_P2 n⁵ _lh_label_Node_0¹]: 1740
//│ case _lh_ltGraph_arg1¹ of {Node _lh_ltGraph_Node_0¹ _lh_ltGraph_Node_1¹ => case _lh_ltGraph_Node_0¹ of {LH_P2 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ => let labelOf¹ = (fun _lh_labelOf_arg1¹ -> case _lh_labelOf_arg1¹ of {Node _lh_labelOf_Node_0¹ _lh_labelOf_Node_1¹ => case _lh_labelOf_Node_0¹ of {LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹ | _  => error⁰} | _  => error⁰})
//│ in [LH_C [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)] concat_₀(map_₂(ltGraph_₀, _lh_ltGraph_Node_1¹))] | _  => error⁰} | _  => error⁰}: 2322 --->
//│ 	[Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]: 1742
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1418 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1¹ [LH_C _lh_plus__arg2¹ [LH_N]]]]: 1427 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '0' [LH_N]] [LH_N]]: 1435 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1² [LH_C _lh_plus__arg2² [LH_N]]]]: 1447 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1485 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1538 --->
//│ 	case xs¹⁰ of {LH_C h²⁷ t²⁹ => [LH_C h²⁷ mappend_₀(t²⁹, ys¹¹)] | LH_N  => ys¹¹}: 1893
//│ [LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]]: 1539 --->
//│ 	case xs¹⁰ of {LH_C h²⁷ t²⁹ => [LH_C h²⁷ mappend_₀(t²⁹, ys¹¹)] | LH_N  => ys¹¹}: 1893
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1584 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1589 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1¹ [LH_C _lh_mult__arg2¹ [LH_N]]]]: 1612 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1³ [LH_C _lh_plus__arg2³ [LH_N]]]]: 1643 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 1650 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1663 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [LH_C d_₀ [LH_N]]: 1664 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [LH_C c_₁ [LH_C d_₀ [LH_N]]]: 1665 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [LH_C b_₄ [LH_C c_₁ [LH_C d_₀ [LH_N]]]]: 1666 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [LH_C a_₇ [LH_C b_₄ [LH_C c_₁ [LH_C d_₀ [LH_N]]]]]: 1667 --->
//│ 	case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁴ [LH_C _lh_plus__arg2⁴ [LH_N]]]]: 1684 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁵ [LH_C _lh_plus__arg2⁵ [LH_N]]]]: 1706 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 1769 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_P2 _lh_update_arg1¹(s¹⁰) s¹⁰]: 1808 --->
//│ 	case _lh_matchIdent¹¹ of {LH_P2 _lh_bind_LH_P2_0¹ _lh_bind_LH_P2_1¹ => _lh_bind_arg2¹(_lh_bind_LH_P2_1¹, _lh_bind_LH_P2_0¹) | _  => error⁰}: 1906
//│ [Node [LH_C 'X' [LH_N]] _lh_prod_arg1¹]: 1815 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 1829 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [LH_C d_₁ [LH_N]]: 1830 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [LH_C c_₂ [LH_C d_₁ [LH_N]]]: 1831 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [LH_C b_₅ [LH_C c_₂ [LH_C d_₁ [LH_N]]]]: 1832 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [LH_C a_₈ [LH_C b_₅ [LH_C c_₂ [LH_C d_₁ [LH_N]]]]]: 1833 --->
//│ 	case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 1841 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C f¹³(h²⁴) map_₂(f¹³, t²⁶)]: 1851 --->
//│ 	case lss¹ of {LH_C h²² t²⁴ => mappend_₁(h²², concat_₀(t²⁴)) | LH_N  => [LH_N]}: 1696
//│ [LH_N]: 1852 --->
//│ 	case lss¹ of {LH_C h²² t²⁴ => mappend_₁(h²², concat_₀(t²⁴)) | LH_N  => [LH_N]}: 1696
//│ [Node [LH_C 'c' [LH_N]] [LH_N]]: 1915 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'c' [LH_N]] [LH_N]]: 1920 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁶ [LH_C _lh_plus__arg2⁶ [LH_N]]]]: 1929 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 1954 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 1974 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1² [LH_C _lh_mult__arg2² [LH_N]]]]: 1999 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'b' [LH_N]] [LH_N]]: 2012 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'd' [LH_N]] [LH_N]]: 2017 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2022 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2049 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1³ [LH_C _lh_mult__arg2³ [LH_N]]]]: 2058 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_N]: 2120 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example5_₀(0) [LH_N]]: 2121 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]: 2122 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]: 2123 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]: 2124 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example1_₀(0) [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]]: 2125 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [LH_C example0_₀(0) [LH_C example1_₀(0) [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]]]: 2126 --->
//│ 	case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2142 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2147 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C a⁶ enumFromTo_₀((a⁶ + 1), b⁵)]: 2163 --->
//│ 	case ls²³ of {LH_C h²⁶ t²⁸ => [LH_C f¹⁵(h²⁶) map_₃(f¹⁵, t²⁸)] | LH_N  => [LH_N]}: 1881
//│ [LH_N]: 2164 --->
//│ 	case ls²³ of {LH_C h²⁶ t²⁸ => [LH_C f¹⁵(h²⁶) map_₃(f¹⁵, t²⁸)] | LH_N  => [LH_N]}: 1881
//│ [Node [LH_C 'a' [LH_N]] [LH_N]]: 2172 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁷ [LH_C _lh_plus__arg2⁷ [LH_N]]]]: 2181 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)]: 2231 --->
//│ 	case ls²² of {LH_C h²⁵ t²⁷ => [LH_C f¹⁴(h²⁵) map_₄(f¹⁴, t²⁷)] | LH_N  => [LH_N]}: 1867
//│ [LH_N]: 2232 --->
//│ 	case ls²² of {LH_C h²⁵ t²⁷ => [LH_C f¹⁴(h²⁵) map_₄(f¹⁴, t²⁷)] | LH_N  => [LH_N]}: 1867
//│ [LH_N]: 2234 --->
//│ 	case ls²² of {LH_C h²⁵ t²⁷ => [LH_C f¹⁴(h²⁵) map_₄(f¹⁴, t²⁷)] | LH_N  => [LH_N]}: 1867
//│ [Node [LH_C 'c' [LH_N]] [LH_N]]: 2242 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'X' [LH_N]] _lh_prod_arg1²]: 2262 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C 'd' [LH_N]] [LH_N]]: 2268 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [Node [LH_C '0' [LH_N]] [LH_N]]: 2274 --->
//│ 	case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749
//│ [LH_C f¹⁷(h³⁰) map_₁(f¹⁷, t³²)]: 2287 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₀(f¹², t²²)] | LH_N  => [LH_N]}: 1601
//│ [LH_N]: 2288 --->
//│ 	case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₀(f¹², t²²)] | LH_N  => [LH_N]}: 1601
//│ [LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)]: 2309 --->
//│ 	case _lh_sim_arg1¹ of {LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² _lh_sim_LH_P3_2² => case _lh_sim_arg2¹ of {LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => let rcs¹ = map_₀(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2²)
//│ in let ms¹ = let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_sim_LH_P2_1¹)
//│ in if null_₀(ms¹) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 1561
//│ ------------------
//│ case _lh_sim_arg1¹ of {LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² _lh_sim_LH_P3_2² => case _lh_sim_arg2¹ of {LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => let rcs¹ = map_₀(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2²)
//│ in let ms¹ = let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1², _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs¹) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹) | _  => _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)} | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_sim_LH_P2_1¹)
//│ in if null_₀(ms¹) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀([LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]], _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0², head_₀(ms¹), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹] | _  => error⁰} | _  => error⁰}: 1561 --->
//│ 	[LH_P3 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ map_₁(labelOf¹, _lh_ltGraph_Node_1¹)]: 2309
//│ case ls¹⁹ of {LH_C h²⁰ t²² => [LH_C f¹²(h²⁰) map_₀(f¹², t²²)] | LH_N  => [LH_N]}: 1601 --->
//│ 	[LH_C f¹⁷(h³⁰) map_₁(f¹⁷, t³²)]: 2287
//│ 	[LH_N]: 2288
//│ case lss¹ of {LH_C h²² t²⁴ => mappend_₁(h²², concat_₀(t²⁴)) | LH_N  => [LH_N]}: 1696 --->
//│ 	[LH_C f¹³(h²⁴) map_₂(f¹³, t²⁶)]: 1851
//│ 	[LH_N]: 1852
//│ case _lh_label_arg1¹ of {Node _lh_label_Node_0¹ _lh_label_Node_1¹ => bind_₀(incr_₀(0), (fun n⁵ -> bind_₁(mmapl_₀(label¹, _lh_label_Node_1¹), (fun ts² -> retURN_₂([Node [LH_P2 n⁵ _lh_label_Node_0¹] ts²]))))) | _  => error⁰}: 1749 --->
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1418
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1¹ [LH_C _lh_plus__arg2¹ [LH_N]]]]: 1427
//│ 	[Node [LH_C '0' [LH_N]] [LH_N]]: 1435
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1² [LH_C _lh_plus__arg2² [LH_N]]]]: 1447
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1485
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1584
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1589
//│ 	[Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1¹ [LH_C _lh_mult__arg2¹ [LH_N]]]]: 1612
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1³ [LH_C _lh_plus__arg2³ [LH_N]]]]: 1643
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 1650
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁴ [LH_C _lh_plus__arg2⁴ [LH_N]]]]: 1684
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁵ [LH_C _lh_plus__arg2⁵ [LH_N]]]]: 1706
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 1769
//│ 	[Node [LH_C 'X' [LH_N]] _lh_prod_arg1¹]: 1815
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 1841
//│ 	[Node [LH_C 'c' [LH_N]] [LH_N]]: 1915
//│ 	[Node [LH_C 'c' [LH_N]] [LH_N]]: 1920
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁶ [LH_C _lh_plus__arg2⁶ [LH_N]]]]: 1929
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 1954
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 1974
//│ 	[Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1² [LH_C _lh_mult__arg2² [LH_N]]]]: 1999
//│ 	[Node [LH_C 'b' [LH_N]] [LH_N]]: 2012
//│ 	[Node [LH_C 'd' [LH_N]] [LH_N]]: 2017
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2022
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2049
//│ 	[Node [LH_C '*' [LH_N]] [LH_C _lh_mult__arg1³ [LH_C _lh_mult__arg2³ [LH_N]]]]: 2058
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2142
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2147
//│ 	[Node [LH_C 'a' [LH_N]] [LH_N]]: 2172
//│ 	[Node [LH_C '+' [LH_N]] [LH_C _lh_plus__arg1⁷ [LH_C _lh_plus__arg2⁷ [LH_N]]]]: 2181
//│ 	[Node [LH_C 'c' [LH_N]] [LH_N]]: 2242
//│ 	[Node [LH_C 'X' [LH_N]] _lh_prod_arg1²]: 2262
//│ 	[Node [LH_C 'd' [LH_N]] [LH_N]]: 2268
//│ 	[Node [LH_C '0' [LH_N]] [LH_N]]: 2274
//│ case _lh_scanr_arg3¹ of {LH_N  => [LH_C _lh_scanr_arg2¹ [LH_N]] | LH_C _lh_scanr_LH_C_0² _lh_scanr_LH_C_1² => let _lh_matchIdent¹⁰ = scanr_₀(_lh_scanr_arg1¹, _lh_scanr_arg2¹, _lh_scanr_LH_C_1²)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1¹(_lh_scanr_LH_C_0², _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]] | _  => error⁰} | _  => error⁰}: 1800 --->
//│ 	[LH_N]: 1829
//│ 	[LH_C d_₁ [LH_N]]: 1830
//│ 	[LH_C c_₂ [LH_C d_₁ [LH_N]]]: 1831
//│ 	[LH_C b_₅ [LH_C c_₂ [LH_C d_₁ [LH_N]]]]: 1832
//│ 	[LH_C a_₈ [LH_C b_₅ [LH_C c_₂ [LH_C d_₁ [LH_N]]]]]: 1833
//│ case ls²² of {LH_C h²⁵ t²⁷ => [LH_C f¹⁴(h²⁵) map_₄(f¹⁴, t²⁷)] | LH_N  => [LH_N]}: 1867 --->
//│ 	[LH_C h²⁹ take_₀((n⁶ - 1), t³¹)]: 2231
//│ 	[LH_N]: 2232
//│ 	[LH_N]: 2234
//│ case ls²³ of {LH_C h²⁶ t²⁸ => [LH_C f¹⁵(h²⁶) map_₃(f¹⁵, t²⁸)] | LH_N  => [LH_N]}: 1881 --->
//│ 	[LH_C a⁶ enumFromTo_₀((a⁶ + 1), b⁵)]: 2163
//│ 	[LH_N]: 2164
//│ case xs¹⁰ of {LH_C h²⁷ t²⁹ => [LH_C h²⁷ mappend_₀(t²⁹, ys¹¹)] | LH_N  => ys¹¹}: 1893 --->
//│ 	[LH_N]: 1538
//│ 	[LH_C [LH_P3 _lh_sim_LH_P3_0² _lh_sim_LH_P3_1² rcs¹] [LH_N]]: 1539
//│ case _lh_matchIdent¹¹ of {LH_P2 _lh_bind_LH_P2_0¹ _lh_bind_LH_P2_1¹ => _lh_bind_arg2¹(_lh_bind_LH_P2_1¹, _lh_bind_LH_P2_0¹) | _  => error⁰}: 1906 --->
//│ 	[LH_P2 _lh_update_arg1¹(s¹⁰) s¹⁰]: 1808
//│ case _lh_matchIdent¹³ of {LH_N  => [LH_N] | LH_C _lh_scanl_LH_C_0¹ _lh_scanl_LH_C_1¹ => scanl_₀(_lh_scanl_arg1¹, _lh_scanl_arg1¹(_lh_scanl_arg2¹, _lh_scanl_LH_C_0¹), _lh_scanl_LH_C_1¹) | _  => error⁰}: 2039 --->
//│ 	[LH_N]: 1663
//│ 	[LH_C d_₀ [LH_N]]: 1664
//│ 	[LH_C c_₁ [LH_C d_₀ [LH_N]]]: 1665
//│ 	[LH_C b_₄ [LH_C c_₁ [LH_C d_₀ [LH_N]]]]: 1666
//│ 	[LH_C a_₇ [LH_C b_₄ [LH_C c_₁ [LH_C d_₀ [LH_N]]]]]: 1667
//│ case ls²⁵ of {LH_C h²⁹ t³¹ => [LH_C h²⁹ take_₀((n⁶ - 1), t³¹)] | LH_N  => [LH_N]}: 2233 --->
//│ 	[LH_N]: 2120
//│ 	[LH_C example5_₀(0) [LH_N]]: 2121
//│ 	[LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]: 2122
//│ 	[LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]: 2123
//│ 	[LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]: 2124
//│ 	[LH_C example1_₀(0) [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]]: 2125
//│ 	[LH_C example0_₀(0) [LH_C example1_₀(0) [LH_C example2_₀(0) [LH_C example3_₀(0) [LH_C example4_₀(0) [LH_C example5_₀(0) [LH_N]]]]]]]: 2126
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testCse_nofib_₀(primId⁰(1000))
//│ def a_₀ = 
//│ 	let _lh_label_Node_1³¹ = [LH_N]
//│ 	in let _lh_label_Node_0³¹ = [LH_C 'a' [LH_N]]
//│ 	in (fun label³² -> bind_₀(incr_₀(0), (fun n⁴⁴ -> bind_₁(mmapl_₀(label³², _lh_label_Node_1³¹), (fun ts³² -> retURN_₂([Node [LH_P2 n⁴⁴ _lh_label_Node_0³¹] ts³²]))))))
//│ def a_₁ = 
//│ 	let _lh_label_Node_1²² = [LH_N]
//│ 	in let _lh_label_Node_0²² = [LH_C 'a' [LH_N]]
//│ 	in (fun label²³ -> bind_₀(incr_₀(0), (fun n³⁵ -> bind_₁(mmapl_₀(label²³, _lh_label_Node_1²²), (fun ts²³ -> retURN_₂([Node [LH_P2 n³⁵ _lh_label_Node_0²²] ts²³]))))))
//│ def a_₂ = 
//│ 	let _lh_label_Node_1⁷ = [LH_N]
//│ 	in let _lh_label_Node_0⁷ = [LH_C 'a' [LH_N]]
//│ 	in (fun label⁷ -> bind_₀(incr_₀(0), (fun n¹² -> bind_₁(mmapl_₀(label⁷, _lh_label_Node_1⁷), (fun ts⁸ -> retURN_₂([Node [LH_P2 n¹² _lh_label_Node_0⁷] ts⁸]))))))
//│ def a_₃ = 
//│ 	let _lh_label_Node_1²⁵ = [LH_N]
//│ 	in let _lh_label_Node_0²⁵ = [LH_C 'a' [LH_N]]
//│ 	in (fun label²⁶ -> bind_₀(incr_₀(0), (fun n³⁸ -> bind_₁(mmapl_₀(label²⁶, _lh_label_Node_1²⁵), (fun ts²⁶ -> retURN_₂([Node [LH_P2 n³⁸ _lh_label_Node_0²⁵] ts²⁶]))))))
//│ def a_₄ = 
//│ 	let _lh_label_Node_1¹¹ = [LH_N]
//│ 	in let _lh_label_Node_0¹¹ = [LH_C 'a' [LH_N]]
//│ 	in (fun label¹¹ -> bind_₀(incr_₀(0), (fun n²³ -> bind_₁(mmapl_₀(label¹¹, _lh_label_Node_1¹¹), (fun ts¹² -> retURN_₂([Node [LH_P2 n²³ _lh_label_Node_0¹¹] ts¹²]))))))
//│ def a_₅ = 
//│ 	let _lh_label_Node_1²⁶ = [LH_N]
//│ 	in let _lh_label_Node_0²⁶ = [LH_C 'a' [LH_N]]
//│ 	in (fun label²⁷ -> bind_₀(incr_₀(0), (fun n³⁹ -> bind_₁(mmapl_₀(label²⁷, _lh_label_Node_1²⁶), (fun ts²⁷ -> retURN_₂([Node [LH_P2 n³⁹ _lh_label_Node_0²⁶] ts²⁷]))))))
//│ def a_₆ = 
//│ 	let _lh_label_Node_1¹² = [LH_N]
//│ 	in let _lh_label_Node_0¹² = [LH_C 'a' [LH_N]]
//│ 	in (fun label¹² -> bind_₀(incr_₀(0), (fun n²⁴ -> bind_₁(mmapl_₀(label¹², _lh_label_Node_1¹²), (fun ts¹³ -> retURN_₂([Node [LH_P2 n²⁴ _lh_label_Node_0¹²] ts¹³]))))))
//│ def a_₇ = 
//│ 	let _lh_label_Node_1⁸ = [LH_N]
//│ 	in let _lh_label_Node_0⁸ = [LH_C 'a' [LH_N]]
//│ 	in (fun label⁸ -> bind_₀(incr_₀(0), (fun n¹³ -> bind_₁(mmapl_₀(label⁸, _lh_label_Node_1⁸), (fun ts⁹ -> retURN_₂([Node [LH_P2 n¹³ _lh_label_Node_0⁸] ts⁹]))))))
//│ def a_₈ = 
//│ 	let _lh_label_Node_1²⁷ = [LH_N]
//│ 	in let _lh_label_Node_0²⁷ = [LH_C 'a' [LH_N]]
//│ 	in (fun label²⁸ -> bind_₀(incr_₀(0), (fun n⁴⁰ -> bind_₁(mmapl_₀(label²⁸, _lh_label_Node_1²⁷), (fun ts²⁸ -> retURN_₂([Node [LH_P2 n⁴⁰ _lh_label_Node_0²⁷] ts²⁸]))))))
//│ def b_₀ = 
//│ 	let _lh_label_Node_1³ = [LH_N]
//│ 	in let _lh_label_Node_0³ = [LH_C 'b' [LH_N]]
//│ 	in (fun label³ -> bind_₀(incr_₀(0), (fun n⁸ -> bind_₁(mmapl_₀(label³, _lh_label_Node_1³), (fun ts⁴ -> retURN_₂([Node [LH_P2 n⁸ _lh_label_Node_0³] ts⁴]))))))
//│ def b_₁ = 
//│ 	let _lh_label_Node_1²¹ = [LH_N]
//│ 	in let _lh_label_Node_0²¹ = [LH_C 'b' [LH_N]]
//│ 	in (fun label²² -> bind_₀(incr_₀(0), (fun n³⁴ -> bind_₁(mmapl_₀(label²², _lh_label_Node_1²¹), (fun ts²² -> retURN_₂([Node [LH_P2 n³⁴ _lh_label_Node_0²¹] ts²²]))))))
//│ def b_₂ = 
//│ 	let _lh_label_Node_1² = [LH_N]
//│ 	in let _lh_label_Node_0² = [LH_C 'b' [LH_N]]
//│ 	in (fun label² -> bind_₀(incr_₀(0), (fun n⁷ -> bind_₁(mmapl_₀(label², _lh_label_Node_1²), (fun ts³ -> retURN_₂([Node [LH_P2 n⁷ _lh_label_Node_0²] ts³]))))))
//│ def b_₃ = 
//│ 	let _lh_label_Node_1³⁵ = [LH_N]
//│ 	in let _lh_label_Node_0³⁵ = [LH_C 'b' [LH_N]]
//│ 	in (fun label³⁶ -> bind_₀(incr_₀(0), (fun n⁴⁸ -> bind_₁(mmapl_₀(label³⁶, _lh_label_Node_1³⁵), (fun ts³⁶ -> retURN_₂([Node [LH_P2 n⁴⁸ _lh_label_Node_0³⁵] ts³⁶]))))))
//│ def b_₄ = 
//│ 	let _lh_label_Node_1¹³ = [LH_N]
//│ 	in let _lh_label_Node_0¹³ = [LH_C 'b' [LH_N]]
//│ 	in (fun label¹³ -> bind_₀(incr_₀(0), (fun n²⁵ -> bind_₁(mmapl_₀(label¹³, _lh_label_Node_1¹³), (fun ts¹⁴ -> retURN_₂([Node [LH_P2 n²⁵ _lh_label_Node_0¹³] ts¹⁴]))))))
//│ def b_₅ = 
//│ 	let _lh_label_Node_1¹⁵ = [LH_N]
//│ 	in let _lh_label_Node_0¹⁵ = [LH_C 'b' [LH_N]]
//│ 	in (fun label¹⁵ -> bind_₀(incr_₀(0), (fun n²⁸ -> bind_₁(mmapl_₀(label¹⁵, _lh_label_Node_1¹⁵), (fun ts¹⁶ -> retURN_₂([Node [LH_P2 n²⁸ _lh_label_Node_0¹⁵] ts¹⁶]))))))
//│ def bind_₀(_lh_bind_arg1⁶, _lh_bind_arg2⁷, s¹⁸) = 
//│ 	let _lh_matchIdent²² = _lh_bind_arg1⁶(s¹⁸)
//│ 	in _lh_matchIdent²²(_lh_bind_arg2⁷)
//│ def bind_₁(_lh_bind_arg1⁵, _lh_bind_arg2⁶, s¹⁷) = 
//│ 	let _lh_matchIdent²¹ = _lh_bind_arg1⁵(s¹⁷)
//│ 	in case _lh_matchIdent²¹ of {
//│ 		LH_P2 _lh_bind_LH_P2_0² _lh_bind_LH_P2_1² => _lh_bind_arg2⁶(_lh_bind_LH_P2_1², _lh_bind_LH_P2_0²)
//│ 		| _  => error⁰}
//│ def bind_₂(_lh_bind_arg1⁷, _lh_bind_arg2⁸, s²¹) = 
//│ 	let _lh_matchIdent²⁴ = _lh_bind_arg1⁷(s²¹)
//│ 	in case _lh_matchIdent²⁴ of {
//│ 		LH_P2 _lh_bind_LH_P2_0⁴ _lh_bind_LH_P2_1⁴ => _lh_bind_arg2⁸(_lh_bind_LH_P2_1⁴, _lh_bind_LH_P2_0⁴)
//│ 		| _  => error⁰}
//│ def bind_₃(_lh_bind_arg1⁸, _lh_bind_arg2⁹, s²²) = 
//│ 	let _lh_matchIdent²⁶ = _lh_bind_arg1⁸(s²²)
//│ 	in case _lh_matchIdent²⁶ of {
//│ 		LH_P2 _lh_bind_LH_P2_0³ _lh_bind_LH_P2_1³ => _lh_bind_arg2⁹(_lh_bind_LH_P2_1³, _lh_bind_LH_P2_0³)
//│ 		| _  => error⁰}
//│ def c_₀ = 
//│ 	let _lh_label_Node_1²⁹ = [LH_N]
//│ 	in let _lh_label_Node_0²⁹ = [LH_C 'c' [LH_N]]
//│ 	in (fun label³⁰ -> bind_₀(incr_₀(0), (fun n⁴² -> bind_₁(mmapl_₀(label³⁰, _lh_label_Node_1²⁹), (fun ts³⁰ -> retURN_₂([Node [LH_P2 n⁴² _lh_label_Node_0²⁹] ts³⁰]))))))
//│ def c_₁ = 
//│ 	let _lh_label_Node_1¹⁸ = [LH_N]
//│ 	in let _lh_label_Node_0¹⁸ = [LH_C 'c' [LH_N]]
//│ 	in (fun label¹⁹ -> bind_₀(incr_₀(0), (fun n³¹ -> bind_₁(mmapl_₀(label¹⁹, _lh_label_Node_1¹⁸), (fun ts¹⁹ -> retURN_₂([Node [LH_P2 n³¹ _lh_label_Node_0¹⁸] ts¹⁹]))))))
//│ def c_₂ = 
//│ 	let _lh_label_Node_1⁵ = [LH_N]
//│ 	in let _lh_label_Node_0⁵ = [LH_C 'c' [LH_N]]
//│ 	in (fun label⁵ -> bind_₀(incr_₀(0), (fun n¹⁰ -> bind_₁(mmapl_₀(label⁵, _lh_label_Node_1⁵), (fun ts⁶ -> retURN_₂([Node [LH_P2 n¹⁰ _lh_label_Node_0⁵] ts⁶]))))))
//│ def concat_₀(lss²) = lss²(99)
//│ def cse_₀(_lh_cse_arg1²) = findCommon_₀(ltGraph_₀(labelTree_₀(_lh_cse_arg1²)))
//│ def d_₀ = 
//│ 	let _lh_label_Node_1³³ = [LH_N]
//│ 	in let _lh_label_Node_0³³ = [LH_C 'd' [LH_N]]
//│ 	in (fun label³⁴ -> bind_₀(incr_₀(0), (fun n⁴⁶ -> bind_₁(mmapl_₀(label³⁴, _lh_label_Node_1³³), (fun ts³⁴ -> retURN_₂([Node [LH_P2 n⁴⁶ _lh_label_Node_0³³] ts³⁴]))))))
//│ def d_₁ = 
//│ 	let _lh_label_Node_1⁶ = [LH_N]
//│ 	in let _lh_label_Node_0⁶ = [LH_C 'd' [LH_N]]
//│ 	in (fun label⁶ -> bind_₀(incr_₀(0), (fun n¹¹ -> bind_₁(mmapl_₀(label⁶, _lh_label_Node_1⁶), (fun ts⁷ -> retURN_₂([Node [LH_P2 n¹¹ _lh_label_Node_0⁶] ts⁷]))))))
//│ def enumFromTo_₀(a⁷, b⁷) = if (a⁷ <= b⁷) then 
//│ 	let t⁴⁸ = enumFromTo_₀((a⁷ + 1), b⁷)
//│ 	in let h⁴⁶ = a⁷
//│ 	in (fun f³⁴ -> [LH_C f³⁴(h⁴⁶) map_₃(f³⁴, t⁴⁸)]) else (fun f³⁵ -> [LH_N])
//│ def example0_₀(_lh_example0_arg1²) = a_₀
//│ def example1_₀(_lh_example1_arg1²) = plus__₀(a_₁, a_₂)
//│ def example2_₀(_lh_example2_arg1²) = plus__₁(mult__₀(a_₃, b_₀), mult__₁(a_₄, b_₁))
//│ def example3_₀(_lh_example3_arg1²) = plus__₂(mult__₂(plus__₃(a_₅, b_₂), c_₀), plus__₄(a_₆, b_₃))
//│ def example4_₀(_lh_example4_arg1²) = prod_₀(scanl_₀(plus__₅, zerO_₀(0), 
//│ 	let _lh_scanl_LH_C_1² = 	
//│ 		let _lh_scanl_LH_C_1³ = 	
//│ 			let _lh_scanl_LH_C_1⁴ = 	
//│ 				let _lh_scanl_LH_C_1⁵ = (fun _lh_scanl_arg1⁶ -> (fun _lh_scanl_arg2⁶ -> [LH_N]))
//│ 				in let _lh_scanl_LH_C_0⁵ = d_₀
//│ 				in (fun _lh_scanl_arg1⁵ -> (fun _lh_scanl_arg2⁵ -> scanl_₀(_lh_scanl_arg1⁵, _lh_scanl_arg1⁵(_lh_scanl_arg2⁵, _lh_scanl_LH_C_0⁵), _lh_scanl_LH_C_1⁵)))
//│ 			in let _lh_scanl_LH_C_0⁴ = c_₁
//│ 			in (fun _lh_scanl_arg1⁴ -> (fun _lh_scanl_arg2⁴ -> scanl_₀(_lh_scanl_arg1⁴, _lh_scanl_arg1⁴(_lh_scanl_arg2⁴, _lh_scanl_LH_C_0⁴), _lh_scanl_LH_C_1⁴)))
//│ 		in let _lh_scanl_LH_C_0³ = b_₄
//│ 		in (fun _lh_scanl_arg1³ -> (fun _lh_scanl_arg2³ -> scanl_₀(_lh_scanl_arg1³, _lh_scanl_arg1³(_lh_scanl_arg2³, _lh_scanl_LH_C_0³), _lh_scanl_LH_C_1³)))
//│ 	in let _lh_scanl_LH_C_0² = a_₇
//│ 	in (fun _lh_scanl_arg1² -> (fun _lh_scanl_arg2² -> scanl_₀(_lh_scanl_arg1², _lh_scanl_arg1²(_lh_scanl_arg2², _lh_scanl_LH_C_0²), _lh_scanl_LH_C_1²)))))
//│ def example5_₀(_lh_example5_arg1²) = prod_₁(scanr_₀(plus__₆, zerO_₁(0), 
//│ 	let _lh_scanr_LH_C_1⁴ = 	
//│ 		let _lh_scanr_LH_C_1⁵ = 	
//│ 			let _lh_scanr_LH_C_1⁶ = 	
//│ 				let _lh_scanr_LH_C_1⁷ = (fun _lh_scanr_arg2⁶ -> (fun _lh_scanr_arg1⁶ -> [LH_C _lh_scanr_arg2⁶ [LH_N]]))
//│ 				in let _lh_scanr_LH_C_0⁷ = d_₁
//│ 				in (fun _lh_scanr_arg2⁵ -> (fun _lh_scanr_arg1⁵ -> 
//│ 					let _lh_matchIdent²⁰ = scanr_₀(_lh_scanr_arg1⁵, _lh_scanr_arg2⁵, _lh_scanr_LH_C_1⁷)
//│ 					in case _lh_matchIdent²⁰ of {
//│ 						LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1⁵(_lh_scanr_LH_C_0⁷, _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]]
//│ 						| _  => error⁰}))
//│ 			in let _lh_scanr_LH_C_0⁶ = c_₂
//│ 			in (fun _lh_scanr_arg2⁴ -> (fun _lh_scanr_arg1⁴ -> 
//│ 				let _lh_matchIdent¹⁹ = scanr_₀(_lh_scanr_arg1⁴, _lh_scanr_arg2⁴, _lh_scanr_LH_C_1⁶)
//│ 				in case _lh_matchIdent¹⁹ of {
//│ 					LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1⁴(_lh_scanr_LH_C_0⁶, _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]]
//│ 					| _  => error⁰}))
//│ 		in let _lh_scanr_LH_C_0⁵ = b_₅
//│ 		in (fun _lh_scanr_arg2³ -> (fun _lh_scanr_arg1³ -> 
//│ 			let _lh_matchIdent¹⁸ = scanr_₀(_lh_scanr_arg1³, _lh_scanr_arg2³, _lh_scanr_LH_C_1⁵)
//│ 			in case _lh_matchIdent¹⁸ of {
//│ 				LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1³(_lh_scanr_LH_C_0⁵, _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]]
//│ 				| _  => error⁰}))
//│ 	in let _lh_scanr_LH_C_0⁴ = a_₈
//│ 	in (fun _lh_scanr_arg2² -> (fun _lh_scanr_arg1² -> 
//│ 		let _lh_matchIdent¹⁷ = scanr_₀(_lh_scanr_arg1², _lh_scanr_arg2², _lh_scanr_LH_C_1⁴)
//│ 		in case _lh_matchIdent¹⁷ of {
//│ 			LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³ => [LH_C _lh_scanr_arg1²(_lh_scanr_LH_C_0⁴, _lh_scanr_LH_C_0³) [LH_C _lh_scanr_LH_C_0³ _lh_scanr_LH_C_1³]]
//│ 			| _  => error⁰}))))
//│ def findCommon_₀(_lh_findCommon_arg1²) = 
//│ 	let sim² = (fun _lh_sim_arg1² -> (fun _lh_sim_arg2² -> _lh_sim_arg1²(_lh_sim_arg2²)))
//│ 	in let _lh_matchIdent²³ = foldr_₀(sim², [LH_P2 id_₀ [LH_N]], _lh_findCommon_arg1²)
//│ 	in case _lh_matchIdent²³ of {
//│ 		LH_P2 _lh_findCommon_LH_P2_0¹ _lh_findCommon_LH_P2_1¹ => _lh_findCommon_LH_P2_1¹
//│ 		| _  => error⁰}
//│ def foldr_₀(f²¹, i⁶, ls²⁸) = case ls²⁸ of {
//│ 	LH_C h²⁸ t³⁰ => f²¹(h²⁸, foldr_₀(f²¹, i⁶, t³⁰))
//│ 	| LH_N  => i⁶}
//│ def head_₀(ls³²) = case ls³² of {
//│ 	LH_C h²³ t²⁵ => h²³
//│ 	| LH_N  => error⁰}
//│ def id_₀(_lh_id_arg1²) = _lh_id_arg1²
//│ def incr_₀(_lh_incr_arg1²) = update_₀((fun x⁴ -> (1 + x⁴)))
//│ def labelTree_₀(_lh_labelTree_arg1²) = 
//│ 	let label¹⁷ = (fun _lh_label_arg1² -> _lh_label_arg1²(label¹⁷))
//│ 	in startingWith_₀(label¹⁷(_lh_labelTree_arg1²), 0)
//│ def ltGraph_₀(_lh_ltGraph_arg1²) = case _lh_ltGraph_arg1² of {
//│ 	Node _lh_ltGraph_Node_0¹ _lh_ltGraph_Node_1¹ => case _lh_ltGraph_Node_0¹ of {
//│ 		LH_P2 _lh_ltGraph_LH_P2_0¹ _lh_ltGraph_LH_P2_1¹ => 
//│ 			let labelOf² = (fun _lh_labelOf_arg1² -> case _lh_labelOf_arg1² of {
//│ 				Node _lh_labelOf_Node_0¹ _lh_labelOf_Node_1¹ => case _lh_labelOf_Node_0¹ of {
//│ 					LH_P2 _lh_labelOf_LH_P2_0¹ _lh_labelOf_LH_P2_1¹ => _lh_labelOf_LH_P2_0¹
//│ 					| _  => error⁰}
//│ 				| _  => error⁰})
//│ 			in [LH_C 
//│ 				let _lh_sim_LH_P3_2⁴ = map_₁(labelOf², _lh_ltGraph_Node_1¹)
//│ 				in let _lh_sim_LH_P3_1⁴ = _lh_ltGraph_LH_P2_1¹
//│ 				in let _lh_sim_LH_P3_0⁴ = _lh_ltGraph_LH_P2_0¹
//│ 				in (fun _lh_sim_arg2³ -> case _lh_sim_arg2³ of {
//│ 					LH_P2 _lh_sim_LH_P2_0¹ _lh_sim_LH_P2_1¹ => 
//│ 						let rcs² = map_₀(_lh_sim_LH_P2_0¹, _lh_sim_LH_P3_2⁴)
//│ 						in let ms² = 	
//│ 							let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => case _lh_listcomp_fun_ls_h¹ of {
//│ 									LH_P3 _lh_sim_LH_P3_0³ _lh_sim_LH_P3_1³ _lh_sim_LH_P3_2³ => if polyEq⁰(_lh_sim_LH_P3_1⁴, _lh_sim_LH_P3_1³) then if polyEq⁰(_lh_sim_LH_P3_2³, rcs²) then [LH_C _lh_sim_LH_P3_0³ _lh_listcomp_fun²(_lh_listcomp_fun_ls_t¹)] else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t¹) else _lh_listcomp_fun²(_lh_listcomp_fun_ls_t¹)
//│ 									| _  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t¹)}
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun²(_lh_sim_LH_P2_1¹)
//│ 						in if null_₀(ms²) then [LH_P2 _lh_sim_LH_P2_0¹ mappend_₀(
//│ 							let t⁴⁶ = (fun ys¹⁴ -> ys¹⁴)
//│ 							in let h⁴⁴ = [LH_P3 _lh_sim_LH_P3_0⁴ _lh_sim_LH_P3_1⁴ rcs²]
//│ 							in (fun ys¹³ -> [LH_C h⁴⁴ mappend_₀(t⁴⁶, ys¹³)]), _lh_sim_LH_P2_1¹)] else [LH_P2 newlyDefined_₀(_lh_sim_LH_P3_0⁴, head_₀(ms²), _lh_sim_LH_P2_0¹) _lh_sim_LH_P2_1¹]
//│ 					| _  => error⁰}) concat_₀(map_₂(ltGraph_₀, _lh_ltGraph_Node_1¹))]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def map_₀(f²², ls²⁹) = ls²⁹(f²²)
//│ def map_₁(f¹⁸, ls²⁷) = case ls²⁷ of {
//│ 	LH_C h³⁰ t³² => 
//│ 		let t³³ = map_₁(f¹⁸, t³²)
//│ 		in let h³¹ = f¹⁸(h³⁰)
//│ 		in (fun f¹⁹ -> [LH_C f¹⁹(h³¹) map_₀(f¹⁹, t³³)])
//│ 	| LH_N  => (fun f²⁰ -> [LH_N])}
//│ def map_₂(f³³, ls³⁴) = case ls³⁴ of {
//│ 	LH_C h²⁴ t²⁶ => 
//│ 		let t⁴⁷ = map_₂(f³³, t²⁶)
//│ 		in let h⁴⁵ = f³³(h²⁴)
//│ 		in (fun _lh_dummy⁰ -> mappend_₁(h⁴⁵, concat_₀(t⁴⁷)))
//│ 	| LH_N  => (fun _lh_dummy¹ -> [LH_N])}
//│ def map_₃(f²³, ls³⁰) = ls³⁰(f²³)
//│ def map_₄(f³¹, ls³¹) = ls³¹(f³¹)
//│ def mappend_₀(xs¹¹, ys¹²) = xs¹¹(ys¹²)
//│ def mappend_₁(xs¹², ys¹⁵) = case xs¹² of {
//│ 	LH_C h²¹ t²³ => [LH_C h²¹ mappend_₁(t²³, ys¹⁵)]
//│ 	| LH_N  => ys¹⁵}
//│ def mmapl_₀(_lh_mmapl_arg1², _lh_mmapl_arg2²) = case _lh_mmapl_arg2² of {
//│ 	LH_N  => retURN_₀([LH_N])
//│ 	| LH_C _lh_mmapl_LH_C_0¹ _lh_mmapl_LH_C_1¹ => bind_₂(_lh_mmapl_arg1²(_lh_mmapl_LH_C_0¹), (fun b⁶ -> bind_₃(mmapl_₀(_lh_mmapl_arg1², _lh_mmapl_LH_C_1¹), (fun bs² -> retURN_₁([LH_C b⁶ bs²])))))
//│ 	| _  => error⁰}
//│ def mult__₀(_lh_mult__arg1⁵, _lh_mult__arg2⁵) = 
//│ 	let _lh_label_Node_1²³ = [LH_C _lh_mult__arg1⁵ [LH_C _lh_mult__arg2⁵ [LH_N]]]
//│ 	in let _lh_label_Node_0²³ = [LH_C '*' [LH_N]]
//│ 	in (fun label²⁴ -> bind_₀(incr_₀(0), (fun n³⁶ -> bind_₁(mmapl_₀(label²⁴, _lh_label_Node_1²³), (fun ts²⁴ -> retURN_₂([Node [LH_P2 n³⁶ _lh_label_Node_0²³] ts²⁴]))))))
//│ def mult__₁(_lh_mult__arg1⁴, _lh_mult__arg2⁴) = 
//│ 	let _lh_label_Node_1²⁰ = [LH_C _lh_mult__arg1⁴ [LH_C _lh_mult__arg2⁴ [LH_N]]]
//│ 	in let _lh_label_Node_0²⁰ = [LH_C '*' [LH_N]]
//│ 	in (fun label²¹ -> bind_₀(incr_₀(0), (fun n³³ -> bind_₁(mmapl_₀(label²¹, _lh_label_Node_1²⁰), (fun ts²¹ -> retURN_₂([Node [LH_P2 n³³ _lh_label_Node_0²⁰] ts²¹]))))))
//│ def mult__₂(_lh_mult__arg1⁶, _lh_mult__arg2⁶) = 
//│ 	let _lh_label_Node_1³⁰ = [LH_C _lh_mult__arg1⁶ [LH_C _lh_mult__arg2⁶ [LH_N]]]
//│ 	in let _lh_label_Node_0³⁰ = [LH_C '*' [LH_N]]
//│ 	in (fun label³¹ -> bind_₀(incr_₀(0), (fun n⁴³ -> bind_₁(mmapl_₀(label³¹, _lh_label_Node_1³⁰), (fun ts³¹ -> retURN_₂([Node [LH_P2 n⁴³ _lh_label_Node_0³⁰] ts³¹]))))))
//│ def newlyDefined_₀(_lh_newlyDefined_arg1², _lh_newlyDefined_arg2², _lh_newlyDefined_arg3², _lh_newlyDefined_arg4²) = if polyEq⁰(_lh_newlyDefined_arg1², _lh_newlyDefined_arg4²) then _lh_newlyDefined_arg2² else _lh_newlyDefined_arg3²(_lh_newlyDefined_arg4²)
//│ def null_₀(_lh_null_arg1²) = case _lh_null_arg1² of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False]
//│ 	| _  => error⁰}
//│ def plus__₀(_lh_plus__arg1¹³, _lh_plus__arg2¹³) = 
//│ 	let _lh_label_Node_1²⁸ = [LH_C _lh_plus__arg1¹³ [LH_C _lh_plus__arg2¹³ [LH_N]]]
//│ 	in let _lh_label_Node_0²⁸ = [LH_C '+' [LH_N]]
//│ 	in (fun label²⁹ -> bind_₀(incr_₀(0), (fun n⁴¹ -> bind_₁(mmapl_₀(label²⁹, _lh_label_Node_1²⁸), (fun ts²⁹ -> retURN_₂([Node [LH_P2 n⁴¹ _lh_label_Node_0²⁸] ts²⁹]))))))
//│ def plus__₁(_lh_plus__arg1⁸, _lh_plus__arg2⁸) = 
//│ 	let _lh_label_Node_1⁴ = [LH_C _lh_plus__arg1⁸ [LH_C _lh_plus__arg2⁸ [LH_N]]]
//│ 	in let _lh_label_Node_0⁴ = [LH_C '+' [LH_N]]
//│ 	in (fun label⁴ -> bind_₀(incr_₀(0), (fun n⁹ -> bind_₁(mmapl_₀(label⁴, _lh_label_Node_1⁴), (fun ts⁵ -> retURN_₂([Node [LH_P2 n⁹ _lh_label_Node_0⁴] ts⁵]))))))
//│ def plus__₂(_lh_plus__arg1¹¹, _lh_plus__arg2¹¹) = 
//│ 	let _lh_label_Node_1¹⁶ = [LH_C _lh_plus__arg1¹¹ [LH_C _lh_plus__arg2¹¹ [LH_N]]]
//│ 	in let _lh_label_Node_0¹⁶ = [LH_C '+' [LH_N]]
//│ 	in (fun label¹⁶ -> bind_₀(incr_₀(0), (fun n²⁹ -> bind_₁(mmapl_₀(label¹⁶, _lh_label_Node_1¹⁶), (fun ts¹⁷ -> retURN_₂([Node [LH_P2 n²⁹ _lh_label_Node_0¹⁶] ts¹⁷]))))))
//│ def plus__₃(_lh_plus__arg1¹⁴, _lh_plus__arg2¹⁴) = 
//│ 	let _lh_label_Node_1³⁴ = [LH_C _lh_plus__arg1¹⁴ [LH_C _lh_plus__arg2¹⁴ [LH_N]]]
//│ 	in let _lh_label_Node_0³⁴ = [LH_C '+' [LH_N]]
//│ 	in (fun label³⁵ -> bind_₀(incr_₀(0), (fun n⁴⁷ -> bind_₁(mmapl_₀(label³⁵, _lh_label_Node_1³⁴), (fun ts³⁵ -> retURN_₂([Node [LH_P2 n⁴⁷ _lh_label_Node_0³⁴] ts³⁵]))))))
//│ def plus__₄(_lh_plus__arg1⁹, _lh_plus__arg2⁹) = 
//│ 	let _lh_label_Node_1¹⁰ = [LH_C _lh_plus__arg1⁹ [LH_C _lh_plus__arg2⁹ [LH_N]]]
//│ 	in let _lh_label_Node_0¹⁰ = [LH_C '+' [LH_N]]
//│ 	in (fun label¹⁰ -> bind_₀(incr_₀(0), (fun n¹⁵ -> bind_₁(mmapl_₀(label¹⁰, _lh_label_Node_1¹⁰), (fun ts¹¹ -> retURN_₂([Node [LH_P2 n¹⁵ _lh_label_Node_0¹⁰] ts¹¹]))))))
//│ def plus__₅(_lh_plus__arg1¹², _lh_plus__arg2¹²) = 
//│ 	let _lh_label_Node_1¹⁷ = [LH_C _lh_plus__arg1¹² [LH_C _lh_plus__arg2¹² [LH_N]]]
//│ 	in let _lh_label_Node_0¹⁷ = [LH_C '+' [LH_N]]
//│ 	in (fun label¹⁸ -> bind_₀(incr_₀(0), (fun n³⁰ -> bind_₁(mmapl_₀(label¹⁸, _lh_label_Node_1¹⁷), (fun ts¹⁸ -> retURN_₂([Node [LH_P2 n³⁰ _lh_label_Node_0¹⁷] ts¹⁸]))))))
//│ def plus__₆(_lh_plus__arg1¹⁰, _lh_plus__arg2¹⁰) = 
//│ 	let _lh_label_Node_1¹⁴ = [LH_C _lh_plus__arg1¹⁰ [LH_C _lh_plus__arg2¹⁰ [LH_N]]]
//│ 	in let _lh_label_Node_0¹⁴ = [LH_C '+' [LH_N]]
//│ 	in (fun label¹⁴ -> bind_₀(incr_₀(0), (fun n²⁶ -> bind_₁(mmapl_₀(label¹⁴, _lh_label_Node_1¹⁴), (fun ts¹⁵ -> retURN_₂([Node [LH_P2 n²⁶ _lh_label_Node_0¹⁴] ts¹⁵]))))))
//│ def prod_₀(_lh_prod_arg1³) = 
//│ 	let _lh_label_Node_1²⁴ = _lh_prod_arg1³
//│ 	in let _lh_label_Node_0²⁴ = [LH_C 'X' [LH_N]]
//│ 	in (fun label²⁵ -> bind_₀(incr_₀(0), (fun n³⁷ -> bind_₁(mmapl_₀(label²⁵, _lh_label_Node_1²⁴), (fun ts²⁵ -> retURN_₂([Node [LH_P2 n³⁷ _lh_label_Node_0²⁴] ts²⁵]))))))
//│ def prod_₁(_lh_prod_arg1⁴) = 
//│ 	let _lh_label_Node_1³² = _lh_prod_arg1⁴
//│ 	in let _lh_label_Node_0³² = [LH_C 'X' [LH_N]]
//│ 	in (fun label³³ -> bind_₀(incr_₀(0), (fun n⁴⁵ -> bind_₁(mmapl_₀(label³³, _lh_label_Node_1³²), (fun ts³³ -> retURN_₂([Node [LH_P2 n⁴⁵ _lh_label_Node_0³²] ts³³]))))))
//│ def retURN_₀(_lh_retURN_arg1⁶, s²³) = [LH_P2 s²³ _lh_retURN_arg1⁶]
//│ def retURN_₁(_lh_retURN_arg1⁵, s²⁰) = [LH_P2 s²⁰ _lh_retURN_arg1⁵]
//│ def retURN_₂(_lh_retURN_arg1⁴, s¹⁹) = [LH_P2 s¹⁹ _lh_retURN_arg1⁴]
//│ def scanl_₀(_lh_scanl_arg1⁷, _lh_scanl_arg2⁷, _lh_scanl_arg3²) = [LH_C _lh_scanl_arg2⁷ 
//│ 	let _lh_matchIdent²⁵ = _lh_scanl_arg3²
//│ 	in _lh_matchIdent²⁵(_lh_scanl_arg1⁷, _lh_scanl_arg2⁷)]
//│ def scanr_₀(_lh_scanr_arg1⁷, _lh_scanr_arg2⁷, _lh_scanr_arg3²) = _lh_scanr_arg3²(_lh_scanr_arg2⁷, _lh_scanr_arg1⁷)
//│ def startingWith_₀(_lh_startingWith_arg1², _lh_startingWith_arg2²) = 
//│ 	let _lh_matchIdent²⁷ = _lh_startingWith_arg1²(_lh_startingWith_arg2²)
//│ 	in case _lh_matchIdent²⁷ of {
//│ 		LH_P2 _lh_startingWith_LH_P2_0¹ _lh_startingWith_LH_P2_1¹ => _lh_startingWith_LH_P2_1¹
//│ 		| _  => error⁰}
//│ def take_₀(n²⁷, ls³³) = if (n²⁷ > 0) then ls³³(n²⁷) else (fun f³² -> [LH_N])
//│ def testCse_nofib_₀(_lh_testCse_nofib_arg1²) = map_₃((fun i⁷ -> map_₄(cse_₀, take_₀((i⁷ % 6), 
//│ 	let t³⁴ = 	
//│ 		let t³⁶ = 	
//│ 			let t³⁸ = 	
//│ 				let t⁴⁰ = 	
//│ 					let t⁴² = 	
//│ 						let t⁴⁴ = (fun n²² -> (fun f³⁰ -> [LH_N]))
//│ 						in let h⁴² = example5_₀(0)
//│ 						in (fun n²¹ -> 
//│ 							let t⁴⁵ = take_₀((n²¹ - 1), t⁴⁴)
//│ 							in let h⁴³ = h⁴²
//│ 							in (fun f²⁹ -> [LH_C f²⁹(h⁴³) map_₄(f²⁹, t⁴⁵)]))
//│ 					in let h⁴⁰ = example4_₀(0)
//│ 					in (fun n²⁰ -> 
//│ 						let t⁴³ = take_₀((n²⁰ - 1), t⁴²)
//│ 						in let h⁴¹ = h⁴⁰
//│ 						in (fun f²⁸ -> [LH_C f²⁸(h⁴¹) map_₄(f²⁸, t⁴³)]))
//│ 				in let h³⁸ = example3_₀(0)
//│ 				in (fun n¹⁹ -> 
//│ 					let t⁴¹ = take_₀((n¹⁹ - 1), t⁴⁰)
//│ 					in let h³⁹ = h³⁸
//│ 					in (fun f²⁷ -> [LH_C f²⁷(h³⁹) map_₄(f²⁷, t⁴¹)]))
//│ 			in let h³⁶ = example2_₀(0)
//│ 			in (fun n¹⁸ -> 
//│ 				let t³⁹ = take_₀((n¹⁸ - 1), t³⁸)
//│ 				in let h³⁷ = h³⁶
//│ 				in (fun f²⁶ -> [LH_C f²⁶(h³⁷) map_₄(f²⁶, t³⁹)]))
//│ 		in let h³⁴ = example1_₀(0)
//│ 		in (fun n¹⁷ -> 
//│ 			let t³⁷ = take_₀((n¹⁷ - 1), t³⁶)
//│ 			in let h³⁵ = h³⁴
//│ 			in (fun f²⁵ -> [LH_C f²⁵(h³⁵) map_₄(f²⁵, t³⁷)]))
//│ 	in let h³² = example0_₀(0)
//│ 	in (fun n¹⁶ -> 
//│ 		let t³⁵ = take_₀((n¹⁶ - 1), t³⁴)
//│ 		in let h³³ = h³²
//│ 		in (fun f²⁴ -> [LH_C f²⁴(h³³) map_₄(f²⁴, t³⁵)]))))), enumFromTo_₀(1, _lh_testCse_nofib_arg1²))
//│ def update_₀(_lh_update_arg1², s¹⁶) = 
//│ 	let _lh_bind_LH_P2_1⁵ = s¹⁶
//│ 	in let _lh_bind_LH_P2_0⁵ = _lh_update_arg1²(s¹⁶)
//│ 	in (fun _lh_bind_arg2⁵ -> _lh_bind_arg2⁵(_lh_bind_LH_P2_1⁵, _lh_bind_LH_P2_0⁵))
//│ def zerO_₀(_lh_zerO_arg1³) = case _lh_zerO_arg1³ of {
//│ 	0  => 
//│ 		let _lh_label_Node_1⁹ = [LH_N]
//│ 		in let _lh_label_Node_0⁹ = [LH_C '0' [LH_N]]
//│ 		in (fun label⁹ -> bind_₀(incr_₀(0), (fun n¹⁴ -> bind_₁(mmapl_₀(label⁹, _lh_label_Node_1⁹), (fun ts¹⁰ -> retURN_₂([Node [LH_P2 n¹⁴ _lh_label_Node_0⁹] ts¹⁰]))))))
//│ 	| _  => error⁰}
//│ def zerO_₁(_lh_zerO_arg1⁴) = case _lh_zerO_arg1⁴ of {
//│ 	0  => 
//│ 		let _lh_label_Node_1¹⁹ = [LH_N]
//│ 		in let _lh_label_Node_0¹⁹ = [LH_C '0' [LH_N]]
//│ 		in (fun label²⁰ -> bind_₀(incr_₀(0), (fun n³² -> bind_₁(mmapl_₀(label²⁰, _lh_label_Node_1¹⁹), (fun ts²⁰ -> retURN_₂([Node [LH_P2 n³² _lh_label_Node_0¹⁹] ts²⁰]))))))
//│ 	| _  => error⁰}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
