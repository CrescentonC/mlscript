:NewParser
:ParseOnly

// carryPropagate base (d:ds)
//   | carryguess == (d+9) `div` base
//       = carryguess : ((remainder+nextcarry) : fraction)
//   | otherwise
//       = (dCorrected `div` base) : ((dCorrected `mod` base) : fraction)
//   where carryguess = d `div` base
//         remainder = d `mod` base
//         (nextcarry:fraction) = carryPropagate (base+1) ds
//         dCorrected = d + nextcarry
// e n =
//     take_lz n $
//     (\b -> append_lz "2." b) $
//     tail_lz . concat_lz $
//     map_lz (string_of_int . head_lz) $
//     iterate ((carryPropagate 2) . (map_lz (\a -> (10*a))) . tail_lz) $
//     2:[1,1..]

// take_lz 5 $ (carryPropagate 2 $ repeat 1)

:lhInHaskell
:lhGenOCaml
append_lz xs ys = case xs of {
  (x:xs) -> lazy (x:(append_lz xs ys));
  [] -> ys
}
concat_lz ls = lazy (case (force ls) of {
  (h:t) -> force (append_lz h (concat_lz t));
  [] -> []
})
carryPropagate base l = lazy (case (force l) of {
                          (d:ds) -> let carryguess = (d `div` base) in
                                          let remainder = (d `mod` base) in
                                                let recRes = (carryPropagate (base+1) ds) in
                                                      if (carryguess == ((d + 9) `div` base))
                                                      then let tail = lazy (
                                                                  case (force recRes) of {
                                                                    (nextcarry:fraction) -> ((remainder+nextcarry) : fraction)
                                                                  }
                                                                ) in (carryguess : tail)
                                                      else case (force recRes) of {
                                                        (nextcarry:fraction) -> let dCorrected = (d + nextcarry) in
                                                                                        (dCorrected `div` base) : (lazy ((dCorrected `mod` base) : fraction))
                                                      }
                        })
e n =
  take_lz n ((\b -> append_lz "2." b) ((tail_lz . concat_lz) (map_lz (string_of_int . head_lz) (iterate ((carryPropagate 2) . (map_lz (\a -> (10*a))) . tail_lz) (lazy (2:[1,1..]))))))
testDigitsOfE2_nofib n = e n
testDigitsOfE2_nofib $ primId 500
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testDigitsOfE2_nofib_₀^1140(primId⁰(500))
//│ def append_lz_₀(_lh_append_lz_arg1¹, _lh_append_lz_arg2¹) = 
//│ 	let _lh_matchIdent⁵ = _lh_append_lz_arg1¹
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀^813(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)])
//│ 		| LH_N  => _lh_append_lz_arg2¹
//│ 		| _  => error⁰}
//│ def append_lz_₁(_lh_append_lz_arg1², _lh_append_lz_arg2²) = 
//│ 	let _lh_matchIdent⁷ = _lh_append_lz_arg1²
//│ 	in case _lh_matchIdent⁷ of {
//│ 		LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz_₁^989(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)])
//│ 		| LH_N  => _lh_append_lz_arg2²
//│ 		| _  => error⁰}
//│ def carryPropagate_₀(_lh_carryPropagate_arg1¹, _lh_carryPropagate_arg2¹) = lazy⁰(
//│ 	let _lh_matchIdent⁸ = force⁰(_lh_carryPropagate_arg2¹)
//│ 	in case _lh_matchIdent⁸ of {
//│ 		LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => 
//│ 			let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ 			in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ 			in let recRes¹ = carryPropagate_₀^1024((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ 			in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then 
//│ 				let tail² = lazy⁰(
//│ 					let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ 					in case _lh_matchIdent⁹ of {
//│ 						LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴]
//│ 						| _  => error⁰})
//│ 				in [LH_C carryguess¹ tail²] else 
//│ 				let _lh_matchIdent¹⁰ = force⁰(recRes¹)
//│ 				in case _lh_matchIdent¹⁰ of {
//│ 					LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => 
//│ 						let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ 						in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]
//│ 					| _  => error⁰}
//│ 		| _  => error⁰})
//│ def concat_lz_₀(_lh_concat_lz_arg1¹) = lazy⁰(
//│ 	let _lh_matchIdent⁶ = force⁰(_lh_concat_lz_arg1¹)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz_₁^889(_lh_concat_lz_LH_C_0¹, concat_lz_₀^892(_lh_concat_lz_LH_C_1¹)))
//│ 		| LH_N  => [LH_N]
//│ 		| _  => error⁰})
//│ def e_₀(_lh_e_arg1¹) = take_lz_₀^903(_lh_e_arg1¹, (fun b³ -> append_lz_₀^906([LH_C '2' [LH_C '.' [LH_N]]], b³))((fun _lh_funcomp_x⁴ -> tail_lz_₀^916(concat_lz_₀^917(_lh_funcomp_x⁴)))(map_lz_₀^922((fun _lh_funcomp_x⁵ -> string_of_int⁰(head_lz_₀^924(_lh_funcomp_x⁵))), iterate_₀^930((fun _lh_funcomp_x⁶ -> (fun _lh_funcomp_x⁷ -> carryPropagate_₀^931(2, map_lz_₁^934((fun a⁷ -> (10 * a⁷)), _lh_funcomp_x⁷)))(tail_lz_₁^946(_lh_funcomp_x⁶))), lazy⁰([LH_C 2 enumFromThen_₀^954(1, 1)]))))))
//│ def enumFromThen_₀(a⁶, t²⁴) = lazy⁰([LH_C a⁶ enumFromThen_₀^866(t²⁴, ((2 * t²⁴) - a⁶))])
//│ def head_lz_₀(ls²²) = case force⁰(ls²²) of {
//│ 	LH_C h²³ t²⁶ => h²³
//│ 	| LH_N  => error⁰}
//│ def iterate_₀(f¹², x²) = lazy⁰([LH_C x² iterate_₀^828(f¹², f¹²(x²))])
//│ def map_lz_₀(f¹⁴, ls²¹) = lazy⁰(case force⁰(ls²¹) of {
//│ 	LH_C h²² t²⁵ => [LH_C f¹⁴(h²²) map_lz_₀^974(f¹⁴, t²⁵)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz_₁(f¹³, ls²⁰) = lazy⁰(case force⁰(ls²⁰) of {
//│ 	LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_lz_₁^853(f¹³, t²³)]
//│ 	| LH_N  => [LH_N]})
//│ def tail_lz_₀(ls¹⁹) = case force⁰(ls¹⁹) of {
//│ 	LH_C h²⁰ t²² => t²²
//│ 	| LH_N  => error⁰}
//│ def tail_lz_₁(ls²⁴) = case force⁰(ls²⁴) of {
//│ 	LH_C h²⁵ t²⁸ => t²⁸
//│ 	| LH_N  => error⁰}
//│ def take_lz_₀(n⁴, ls²³) = if (n⁴ > 0) then case force⁰(ls²³) of {
//│ 	LH_C h²⁴ t²⁷ => [LH_C h²⁴ take_lz_₀^1117((n⁴ - 1), t²⁷)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testDigitsOfE2_nofib_₀(_lh_testDigitsOfE2_nofib_arg1¹) = e_₀^1104(_lh_testDigitsOfE2_nofib_arg1¹)
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec append_lz__d0 _lh_append_lz_arg1_1 _lh_append_lz_arg2_1 =
//│ 		  (let rec _lh_matchIdent_5 = _lh_append_lz_arg1_1 in
//│ 		    (match _lh_matchIdent_5 with
//│ 		      | `LH_C(_lh_append_lz_LH_C_0_1, _lh_append_lz_LH_C_1_1) -> 
//│ 		        (lazy (`LH_C(_lh_append_lz_LH_C_0_1, ((append_lz__d0 _lh_append_lz_LH_C_1_1) _lh_append_lz_arg2_1))))
//│ 		      | `LH_N -> 
//│ 		        _lh_append_lz_arg2_1
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and append_lz__d1 _lh_append_lz_arg1_2 _lh_append_lz_arg2_2 =
//│ 		  (let rec _lh_matchIdent_7 = _lh_append_lz_arg1_2 in
//│ 		    (match _lh_matchIdent_7 with
//│ 		      | `LH_C(_lh_append_lz_LH_C_0_2, _lh_append_lz_LH_C_1_2) -> 
//│ 		        (lazy (`LH_C(_lh_append_lz_LH_C_0_2, ((append_lz__d1 _lh_append_lz_LH_C_1_2) _lh_append_lz_arg2_2))))
//│ 		      | `LH_N -> 
//│ 		        _lh_append_lz_arg2_2
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and carryPropagate__d0 _lh_carryPropagate_arg1_1 _lh_carryPropagate_arg2_1 =
//│ 		  (lazy (let rec _lh_matchIdent_8 = (Lazy.force _lh_carryPropagate_arg2_1) in
//│ 		    (match _lh_matchIdent_8 with
//│ 		      | `LH_C(_lh_carryPropagate_LH_C_0_3, _lh_carryPropagate_LH_C_1_3) -> 
//│ 		        (let rec carryguess_1 = (_lh_carryPropagate_LH_C_0_3 / _lh_carryPropagate_arg1_1) in
//│ 		          (let rec remainder_1 = (_lh_carryPropagate_LH_C_0_3 mod _lh_carryPropagate_arg1_1) in
//│ 		            (let rec recRes_1 = ((carryPropagate__d0 (_lh_carryPropagate_arg1_1 + 1)) _lh_carryPropagate_LH_C_1_3) in
//│ 		              (if (carryguess_1 = ((_lh_carryPropagate_LH_C_0_3 + 9) / _lh_carryPropagate_arg1_1)) then
//│ 		                (let rec tail_2 = (lazy (let rec _lh_matchIdent_9 = (Lazy.force recRes_1) in
//│ 		                  (match _lh_matchIdent_9 with
//│ 		                    | `LH_C(_lh_carryPropagate_LH_C_0_4, _lh_carryPropagate_LH_C_1_4) -> 
//│ 		                      (`LH_C((remainder_1 + _lh_carryPropagate_LH_C_0_4), _lh_carryPropagate_LH_C_1_4))
//│ 		                    | _ -> 
//│ 		                      (failwith "error")))) in
//│ 		                  (`LH_C(carryguess_1, tail_2)))
//│ 		              else
//│ 		                (let rec _lh_matchIdent_1_0 = (Lazy.force recRes_1) in
//│ 		                  (match _lh_matchIdent_1_0 with
//│ 		                    | `LH_C(_lh_carryPropagate_LH_C_0_5, _lh_carryPropagate_LH_C_1_5) -> 
//│ 		                      (let rec dCorrected_1 = (_lh_carryPropagate_LH_C_0_3 + _lh_carryPropagate_LH_C_0_5) in
//│ 		                        (`LH_C((dCorrected_1 / _lh_carryPropagate_arg1_1), (lazy (`LH_C((dCorrected_1 mod _lh_carryPropagate_arg1_1), _lh_carryPropagate_LH_C_1_5))))))
//│ 		                    | _ -> 
//│ 		                      (failwith "error")))))))
//│ 		      | _ -> 
//│ 		        (failwith "error"))))
//│ 		and concat_lz__d0 _lh_concat_lz_arg1_1 =
//│ 		  (lazy (let rec _lh_matchIdent_6 = (Lazy.force _lh_concat_lz_arg1_1) in
//│ 		    (match _lh_matchIdent_6 with
//│ 		      | `LH_C(_lh_concat_lz_LH_C_0_1, _lh_concat_lz_LH_C_1_1) -> 
//│ 		        (Lazy.force ((append_lz__d1 _lh_concat_lz_LH_C_0_1) (concat_lz__d0 _lh_concat_lz_LH_C_1_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | _ -> 
//│ 		        (failwith "error"))))
//│ 		and e__d0 _lh_e_arg1_1 =
//│ 		  ((take_lz__d0 _lh_e_arg1_1) ((fun b_3 -> 
//│ 		    ((append_lz__d0 (`LH_C('2', (`LH_C('.', (`LH_N)))))) b_3)) ((fun _lh_funcomp_x_4 -> 
//│ 		    (tail_lz__d0 (concat_lz__d0 _lh_funcomp_x_4))) ((map_lz__d0 (fun _lh_funcomp_x_5 -> 
//│ 		    (string_of_int (head_lz__d0 _lh_funcomp_x_5)))) ((iterate__d0 (fun _lh_funcomp_x_6 -> 
//│ 		    ((fun _lh_funcomp_x_7 -> 
//│ 		      ((carryPropagate__d0 2) ((map_lz__d1 (fun a_7 -> 
//│ 		        (10 * a_7))) _lh_funcomp_x_7))) (tail_lz__d1 _lh_funcomp_x_6)))) (lazy (`LH_C(2, ((enumFromThen__d0 1) 1)))))))))
//│ 		and enumFromThen__d0 a_6 t_2_4 =
//│ 		  (lazy (`LH_C(a_6, ((enumFromThen__d0 t_2_4) ((2 * t_2_4) - a_6)))))
//│ 		and head_lz__d0 ls_2_2 =
//│ 		  (match (Lazy.force ls_2_2) with
//│ 		    | `LH_C(h_2_3, t_2_6) -> 
//│ 		      h_2_3
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and iterate__d0 f_1_2 x_2 =
//│ 		  (lazy (`LH_C(x_2, ((iterate__d0 f_1_2) (f_1_2 x_2)))))
//│ 		and map_lz__d0 f_1_4 ls_2_1 =
//│ 		  (lazy (match (Lazy.force ls_2_1) with
//│ 		    | `LH_C(h_2_2, t_2_5) -> 
//│ 		      (`LH_C((f_1_4 h_2_2), ((map_lz__d0 f_1_4) t_2_5)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz__d1 f_1_3 ls_2_0 =
//│ 		  (lazy (match (Lazy.force ls_2_0) with
//│ 		    | `LH_C(h_2_1, t_2_3) -> 
//│ 		      (`LH_C((f_1_3 h_2_1), ((map_lz__d1 f_1_3) t_2_3)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and tail_lz__d0 ls_1_9 =
//│ 		  (match (Lazy.force ls_1_9) with
//│ 		    | `LH_C(h_2_0, t_2_2) -> 
//│ 		      t_2_2
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and tail_lz__d1 ls_2_4 =
//│ 		  (match (Lazy.force ls_2_4) with
//│ 		    | `LH_C(h_2_5, t_2_8) -> 
//│ 		      t_2_8
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and take_lz__d0 n_4 ls_2_3 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match (Lazy.force ls_2_3) with
//│ 		      | `LH_C(h_2_4, t_2_7) -> 
//│ 		        (`LH_C(h_2_4, ((take_lz__d0 (n_4 - 1)) t_2_7)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testDigitsOfE2_nofib__d0 _lh_testDigitsOfE2_nofib_arg1_1 =
//│ 		  (e__d0 _lh_testDigitsOfE2_nofib_arg1_1);;
//│ 		(testDigitsOfE2_nofib__d0 500)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 818 --->
//│ 	case force⁰(ls²³) of {LH_C h²⁴ t²⁷ => [LH_C h²⁴ take_lz_₀((n⁴ - 1), t²⁷)] | LH_N  => [LH_N]}: 1128
//│ [LH_C x² iterate_₀(f¹², f¹²(x²))]: 835 --->
//│ 	case force⁰(ls²¹) of {LH_C h²² t²⁵ => [LH_C f¹⁴(h²²) map_lz_₀(f¹⁴, t²⁵)] | LH_N  => [LH_N]}: 981
//│ [LH_C f¹³(h²¹) map_lz_₁(f¹³, t²³)]: 858 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ in let recRes¹ = carryPropagate_₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then let tail² = lazy⁰(let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰})
//│ in [LH_C carryguess¹ tail²] else let _lh_matchIdent¹⁰ = force⁰(recRes¹)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰} | _  => error⁰}: 1099
//│ [LH_N]: 859 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ in let recRes¹ = carryPropagate_₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then let tail² = lazy⁰(let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰})
//│ in [LH_C carryguess¹ tail²] else let _lh_matchIdent¹⁰ = force⁰(recRes¹)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰} | _  => error⁰}: 1099
//│ [LH_C a⁶ enumFromThen_₀(t²⁴, ((2 * t²⁴) - a⁶))]: 879 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls²⁰) of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_lz_₁(f¹³, t²³)] | LH_N  => [LH_N]}: 860
//│ [LH_N]: 897 --->
//│ 	case force⁰(ls¹⁹) of {LH_C h²⁰ t²² => t²² | LH_N  => error⁰}: 844
//│ 	case force⁰(ls²³) of {LH_C h²⁴ t²⁷ => [LH_C h²⁴ take_lz_₀((n⁴ - 1), t²⁷)] | LH_N  => [LH_N]}: 1128
//│ [LH_N]: 909 --->
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 822
//│ [LH_C '.' [LH_N]]: 910 --->
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 822
//│ [LH_C '2' [LH_C '.' [LH_N]]]: 911 --->
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 822
//│ [LH_C 2 enumFromThen_₀(1, 1)]: 959 --->
//│ 	case force⁰(ls²²) of {LH_C h²³ t²⁶ => h²³ | LH_N  => error⁰}: 1007
//│ 	case force⁰(ls²⁴) of {LH_C h²⁵ t²⁸ => t²⁸ | LH_N  => error⁰}: 1138
//│ [LH_C f¹⁴(h²²) map_lz_₀(f¹⁴, t²⁵)]: 979 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz_₁(_lh_concat_lz_LH_C_0¹, concat_lz_₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 899
//│ [LH_N]: 980 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz_₁(_lh_concat_lz_LH_C_0¹, concat_lz_₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 899
//│ [LH_C _lh_append_lz_LH_C_0² append_lz_₁(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]: 994 --->
//│ 	case force⁰(ls¹⁹) of {LH_C h²⁰ t²² => t²² | LH_N  => error⁰}: 844
//│ 	case force⁰(ls²³) of {LH_C h²⁴ t²⁷ => [LH_C h²⁴ take_lz_₀((n⁴ - 1), t²⁷)] | LH_N  => [LH_N]}: 1128
//│ [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴]: 1057 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls²⁰) of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_lz_₁(f¹³, t²³)] | LH_N  => [LH_N]}: 860
//│ [LH_C carryguess¹ tail²]: 1064 --->
//│ 	case force⁰(ls²²) of {LH_C h²³ t²⁶ => h²³ | LH_N  => error⁰}: 1007
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰}: 1059
//│ 	case _lh_matchIdent¹⁰ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰}: 1092
//│ 	case force⁰(ls²⁴) of {LH_C h²⁵ t²⁸ => t²⁸ | LH_N  => error⁰}: 1138
//│ [LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵]: 1087 --->
//│ 	DeadCodeCons
//│ 	case force⁰(ls²⁰) of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_lz_₁(f¹³, t²³)] | LH_N  => [LH_N]}: 860
//│ [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 1089 --->
//│ 	case force⁰(ls²²) of {LH_C h²³ t²⁶ => h²³ | LH_N  => error⁰}: 1007
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰}: 1059
//│ 	case _lh_matchIdent¹⁰ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰}: 1092
//│ 	case force⁰(ls²⁴) of {LH_C h²⁵ t²⁸ => t²⁸ | LH_N  => error⁰}: 1138
//│ ------------------
//│ case _lh_matchIdent⁵ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 822 --->
//│ 	[LH_N]: 909
//│ 	[LH_C '.' [LH_N]]: 910
//│ 	[LH_C '2' [LH_C '.' [LH_N]]]: 911
//│ case force⁰(ls¹⁹) of {LH_C h²⁰ t²² => t²² | LH_N  => error⁰}: 844 --->
//│ 	[LH_N]: 897
//│ 	[LH_C _lh_append_lz_LH_C_0² append_lz_₁(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]: 994
//│ case force⁰(ls²⁰) of {LH_C h²¹ t²³ => [LH_C f¹³(h²¹) map_lz_₁(f¹³, t²³)] | LH_N  => [LH_N]}: 860 --->
//│ 	[LH_C a⁶ enumFromThen_₀(t²⁴, ((2 * t²⁴) - a⁶))]: 879
//│ 	[LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴]: 1057
//│ 	[LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵]: 1087
//│ case _lh_matchIdent⁶ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz_₁(_lh_concat_lz_LH_C_0¹, concat_lz_₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 899 --->
//│ 	[LH_C f¹⁴(h²²) map_lz_₀(f¹⁴, t²⁵)]: 979
//│ 	[LH_N]: 980
//│ case force⁰(ls²¹) of {LH_C h²² t²⁵ => [LH_C f¹⁴(h²²) map_lz_₀(f¹⁴, t²⁵)] | LH_N  => [LH_N]}: 981 --->
//│ 	[LH_C x² iterate_₀(f¹², f¹²(x²))]: 835
//│ case force⁰(ls²²) of {LH_C h²³ t²⁶ => h²³ | LH_N  => error⁰}: 1007 --->
//│ 	[LH_C 2 enumFromThen_₀(1, 1)]: 959
//│ 	[LH_C carryguess¹ tail²]: 1064
//│ 	[LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 1089
//│ case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰}: 1059 --->
//│ 	[LH_C carryguess¹ tail²]: 1064
//│ 	[LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 1089
//│ case _lh_matchIdent¹⁰ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰}: 1092 --->
//│ 	[LH_C carryguess¹ tail²]: 1064
//│ 	[LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 1089
//│ case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ in let recRes¹ = carryPropagate_₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then let tail² = lazy⁰(let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰})
//│ in [LH_C carryguess¹ tail²] else let _lh_matchIdent¹⁰ = force⁰(recRes¹)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰} | _  => error⁰}: 1099 --->
//│ 	[LH_C f¹³(h²¹) map_lz_₁(f¹³, t²³)]: 858
//│ 	[LH_N]: 859
//│ case force⁰(ls²³) of {LH_C h²⁴ t²⁷ => [LH_C h²⁴ take_lz_₀((n⁴ - 1), t²⁷)] | LH_N  => [LH_N]}: 1128 --->
//│ 	[LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]: 818
//│ 	[LH_N]: 897
//│ 	[LH_C _lh_append_lz_LH_C_0² append_lz_₁(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]: 994
//│ case force⁰(ls²⁴) of {LH_C h²⁵ t²⁸ => t²⁸ | LH_N  => error⁰}: 1138 --->
//│ 	[LH_C 2 enumFromThen_₀(1, 1)]: 959
//│ 	[LH_C carryguess¹ tail²]: 1064
//│ 	[LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 1089
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C x² iterate_₀(f¹², f¹²(x²))]: 835 --->
//│ 	case force⁰(ls²¹) of {LH_C h²² t²⁵ => [LH_C f¹⁴(h²²) map_lz_₀(f¹⁴, t²⁵)] | LH_N  => [LH_N]}: 981
//│ [LH_C f¹³(h²¹) map_lz_₁(f¹³, t²³)]: 858 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ in let recRes¹ = carryPropagate_₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then let tail² = lazy⁰(let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰})
//│ in [LH_C carryguess¹ tail²] else let _lh_matchIdent¹⁰ = force⁰(recRes¹)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰} | _  => error⁰}: 1099
//│ [LH_N]: 859 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ in let recRes¹ = carryPropagate_₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then let tail² = lazy⁰(let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰})
//│ in [LH_C carryguess¹ tail²] else let _lh_matchIdent¹⁰ = force⁰(recRes¹)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰} | _  => error⁰}: 1099
//│ [LH_N]: 909 --->
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 822
//│ [LH_C '.' [LH_N]]: 910 --->
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 822
//│ [LH_C '2' [LH_C '.' [LH_N]]]: 911 --->
//│ 	case _lh_matchIdent⁵ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 822
//│ [LH_C f¹⁴(h²²) map_lz_₀(f¹⁴, t²⁵)]: 979 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz_₁(_lh_concat_lz_LH_C_0¹, concat_lz_₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 899
//│ [LH_N]: 980 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz_₁(_lh_concat_lz_LH_C_0¹, concat_lz_₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 899
//│ ------------------
//│ case _lh_matchIdent⁵ of {LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz_₀(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)]) | LH_N  => _lh_append_lz_arg2¹ | _  => error⁰}: 822 --->
//│ 	[LH_N]: 909
//│ 	[LH_C '.' [LH_N]]: 910
//│ 	[LH_C '2' [LH_C '.' [LH_N]]]: 911
//│ case _lh_matchIdent⁶ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz_₁(_lh_concat_lz_LH_C_0¹, concat_lz_₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 899 --->
//│ 	[LH_C f¹⁴(h²²) map_lz_₀(f¹⁴, t²⁵)]: 979
//│ 	[LH_N]: 980
//│ case force⁰(ls²¹) of {LH_C h²² t²⁵ => [LH_C f¹⁴(h²²) map_lz_₀(f¹⁴, t²⁵)] | LH_N  => [LH_N]}: 981 --->
//│ 	[LH_C x² iterate_₀(f¹², f¹²(x²))]: 835
//│ case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ in let recRes¹ = carryPropagate_₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then let tail² = lazy⁰(let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰})
//│ in [LH_C carryguess¹ tail²] else let _lh_matchIdent¹⁰ = force⁰(recRes¹)
//│ in case _lh_matchIdent¹⁰ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰} | _  => error⁰}: 1099 --->
//│ 	[LH_C f¹³(h²¹) map_lz_₁(f¹³, t²³)]: 858
//│ 	[LH_N]: 859
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testDigitsOfE2_nofib_₀(primId⁰(500))
//│ def append_lz_₀(_lh_append_lz_arg1³, _lh_append_lz_arg2³) = 
//│ 	let _lh_matchIdent¹² = _lh_append_lz_arg1³
//│ 	in _lh_matchIdent¹²(_lh_append_lz_arg2³)
//│ def append_lz_₁(_lh_append_lz_arg1⁴, _lh_append_lz_arg2⁴) = 
//│ 	let _lh_matchIdent¹³ = _lh_append_lz_arg1⁴
//│ 	in case _lh_matchIdent¹³ of {
//│ 		LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz_₁(_lh_append_lz_LH_C_1², _lh_append_lz_arg2⁴)])
//│ 		| LH_N  => _lh_append_lz_arg2⁴
//│ 		| _  => error⁰}
//│ def carryPropagate_₀(_lh_carryPropagate_arg1², _lh_carryPropagate_arg2²) = lazy⁰(
//│ 	let _lh_matchIdent¹⁴ = force⁰(_lh_carryPropagate_arg2²)
//│ 	in _lh_matchIdent¹⁴(_lh_carryPropagate_arg1²))
//│ def concat_lz_₀(_lh_concat_lz_arg1²) = lazy⁰(
//│ 	let _lh_matchIdent¹¹ = force⁰(_lh_concat_lz_arg1²)
//│ 	in _lh_matchIdent¹¹(99))
//│ def e_₀(_lh_e_arg1²) = take_lz_₀(_lh_e_arg1², (fun b⁴ -> append_lz_₀(
//│ 	let _lh_append_lz_LH_C_1³ = 	
//│ 		let _lh_append_lz_LH_C_1⁴ = (fun _lh_append_lz_arg2⁷ -> _lh_append_lz_arg2⁷)
//│ 		in let _lh_append_lz_LH_C_0⁴ = '.'
//│ 		in (fun _lh_append_lz_arg2⁶ -> lazy⁰([LH_C _lh_append_lz_LH_C_0⁴ append_lz_₀(_lh_append_lz_LH_C_1⁴, _lh_append_lz_arg2⁶)]))
//│ 	in let _lh_append_lz_LH_C_0³ = '2'
//│ 	in (fun _lh_append_lz_arg2⁵ -> lazy⁰([LH_C _lh_append_lz_LH_C_0³ append_lz_₀(_lh_append_lz_LH_C_1³, _lh_append_lz_arg2⁵)])), b⁴))((fun _lh_funcomp_x⁸ -> tail_lz_₀(concat_lz_₀(_lh_funcomp_x⁸)))(map_lz_₀((fun _lh_funcomp_x⁹ -> string_of_int⁰(head_lz_₀(_lh_funcomp_x⁹))), iterate_₀((fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> carryPropagate_₀(2, map_lz_₁((fun a⁹ -> (10 * a⁹)), _lh_funcomp_x¹¹)))(tail_lz_₁(_lh_funcomp_x¹⁰))), lazy⁰([LH_C 2 enumFromThen_₀(1, 1)]))))))
//│ def enumFromThen_₀(a⁸, t²⁹) = lazy⁰([LH_C a⁸ enumFromThen_₀(t²⁹, ((2 * t²⁹) - a⁸))])
//│ def head_lz_₀(ls²⁵) = case force⁰(ls²⁵) of {
//│ 	LH_C h²³ t²⁶ => h²³
//│ 	| LH_N  => error⁰}
//│ def iterate_₀(f¹⁵, x³) = lazy⁰(
//│ 	let t³⁰ = iterate_₀(f¹⁵, f¹⁵(x³))
//│ 	in let h²⁶ = x³
//│ 	in (fun f¹⁶ -> 
//│ 		let _lh_concat_lz_LH_C_1² = map_lz_₀(f¹⁶, t³⁰)
//│ 		in let _lh_concat_lz_LH_C_0² = f¹⁶(h²⁶)
//│ 		in (fun _lh_dummy⁰ -> force⁰(append_lz_₁(_lh_concat_lz_LH_C_0², concat_lz_₀(_lh_concat_lz_LH_C_1²))))))
//│ def map_lz_₀(f¹⁷, ls²⁷) = lazy⁰(force⁰(ls²⁷, f¹⁷))
//│ def map_lz_₁(f¹⁸, ls³⁰) = lazy⁰(case force⁰(ls³⁰) of {
//│ 	LH_C h²¹ t²³ => 
//│ 		let _lh_carryPropagate_LH_C_1⁶ = map_lz_₁(f¹⁸, t²³)
//│ 		in let _lh_carryPropagate_LH_C_0⁶ = f¹⁸(h²¹)
//│ 		in (fun _lh_carryPropagate_arg1³ -> 
//│ 			let carryguess² = div⁰(_lh_carryPropagate_LH_C_0⁶, _lh_carryPropagate_arg1³)
//│ 			in let remainder² = (_lh_carryPropagate_LH_C_0⁶ % _lh_carryPropagate_arg1³)
//│ 			in let recRes² = carryPropagate_₀((_lh_carryPropagate_arg1³ + 1), _lh_carryPropagate_LH_C_1⁶)
//│ 			in if (carryguess² == div⁰((_lh_carryPropagate_LH_C_0⁶ + 9), _lh_carryPropagate_arg1³)) then 
//│ 				let tail³ = lazy⁰(
//│ 					let _lh_matchIdent¹⁵ = force⁰(recRes²)
//│ 					in case _lh_matchIdent¹⁵ of {
//│ 						LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder² + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴]
//│ 						| _  => error⁰})
//│ 				in [LH_C carryguess² tail³] else 
//│ 				let _lh_matchIdent¹⁶ = force⁰(recRes²)
//│ 				in case _lh_matchIdent¹⁶ of {
//│ 					LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => 
//│ 						let dCorrected² = (_lh_carryPropagate_LH_C_0⁶ + _lh_carryPropagate_LH_C_0⁵)
//│ 						in [LH_C div⁰(dCorrected², _lh_carryPropagate_arg1³) lazy⁰([LH_C (dCorrected² % _lh_carryPropagate_arg1³) _lh_carryPropagate_LH_C_1⁵])]
//│ 					| _  => error⁰})
//│ 	| LH_N  => (fun _lh_carryPropagate_arg1⁴ -> error⁰)})
//│ def tail_lz_₀(ls²⁹) = case force⁰(ls²⁹) of {
//│ 	LH_C h²⁰ t²² => t²²
//│ 	| LH_N  => error⁰}
//│ def tail_lz_₁(ls²⁶) = case force⁰(ls²⁶) of {
//│ 	LH_C h²⁵ t²⁸ => t²⁸
//│ 	| LH_N  => error⁰}
//│ def take_lz_₀(n⁵, ls²⁸) = if (n⁵ > 0) then case force⁰(ls²⁸) of {
//│ 	LH_C h²⁴ t²⁷ => [LH_C h²⁴ take_lz_₀((n⁵ - 1), t²⁷)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testDigitsOfE2_nofib_₀(_lh_testDigitsOfE2_nofib_arg1²) = e_₀(_lh_testDigitsOfE2_nofib_arg1²)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

