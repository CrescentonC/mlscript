:NewParser
:ParseOnly

// carryPropagate base (d:ds)
//   | carryguess == (d+9) `div` base
//       = carryguess : ((remainder+nextcarry) : fraction)
//   | otherwise
//       = (dCorrected `div` base) : ((dCorrected `mod` base) : fraction)
//   where carryguess = d `div` base
//         remainder = d `mod` base
//         (nextcarry:fraction) = carryPropagate (base+1) ds
//         dCorrected = d + nextcarry
// e n =
//     take_lz n $
//     (\b -> append_lz "2." b) $
//     tail_lz . concat_lz $
//     map_lz (string_of_int . head_lz) $
//     iterate ((carryPropagate 2) . (map_lz (\a -> (10*a))) . tail_lz) $
//     2:[1,1..]

// take_lz 5 $ (carryPropagate 2 $ repeat 1)

:lhInHaskell
:lhGenOCaml
append_lz xs ys = case xs of {
  (x:xs) -> lazy (x:(append_lz xs ys));
  [] -> ys
}
concat_lz ls = lazy (case (force ls) of {
  (h:t) -> force (append_lz h (concat_lz t));
  [] -> []
})
carryPropagate base l = lazy (case (force l) of {
                          (d:ds) -> let carryguess = (d `div` base) in
                                          let remainder = (d `mod` base) in
                                                let recRes = (carryPropagate (base+1) ds) in
                                                      if (carryguess == ((d + 9) `div` base))
                                                      then let tail = lazy (
                                                                  case (force recRes) of {
                                                                    (nextcarry:fraction) -> ((remainder+nextcarry) : fraction)
                                                                  }
                                                                ) in (carryguess : tail)
                                                      else case (force recRes) of {
                                                        (nextcarry:fraction) -> let dCorrected = (d + nextcarry) in
                                                                                        (dCorrected `div` base) : (lazy ((dCorrected `mod` base) : fraction))
                                                      }
                        })
e n =
  take_lz n ((\b -> append_lz "2." b) ((tail_lz . concat_lz) (map_lz (string_of_int . head_lz) (iterate ((carryPropagate 2) . (map_lz (\a -> (10*a))) . tail_lz) (lazy (2:[1,1..]))))))
testDigitsOfE2_nofib n = e n
testDigitsOfE2_nofib $ primId 500
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testDigitsOfE2_nofib₀^1138(primId⁰(500))
//│ def append_lz₀(_lh_append_lz_arg1², _lh_append_lz_arg2²) = 
//│ 	let _lh_matchIdent¹⁰ = _lh_append_lz_arg1²
//│ 	in case _lh_matchIdent¹⁰ of {
//│ 		LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀^1125(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)])
//│ 		| LH_N  => _lh_append_lz_arg2²
//│ 		| _  => error⁰}
//│ def append_lz₁(_lh_append_lz_arg1¹, _lh_append_lz_arg2¹) = 
//│ 	let _lh_matchIdent⁸ = _lh_append_lz_arg1¹
//│ 	in case _lh_matchIdent⁸ of {
//│ 		LH_C _lh_append_lz_LH_C_0¹ _lh_append_lz_LH_C_1¹ => lazy⁰([LH_C _lh_append_lz_LH_C_0¹ append_lz₁^1025(_lh_append_lz_LH_C_1¹, _lh_append_lz_arg2¹)])
//│ 		| LH_N  => _lh_append_lz_arg2¹
//│ 		| _  => error⁰}
//│ def carryPropagate₀(_lh_carryPropagate_arg1¹, _lh_carryPropagate_arg2¹) = lazy⁰(
//│ 	let _lh_matchIdent⁵ = force⁰(_lh_carryPropagate_arg2¹)
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => 
//│ 			let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ 			in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ 			in let recRes¹ = carryPropagate₀^841((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ 			in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then 
//│ 				let tail² = lazy⁰(
//│ 					let _lh_matchIdent⁶ = force⁰(recRes¹)
//│ 					in case _lh_matchIdent⁶ of {
//│ 						LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴]
//│ 						| _  => error⁰})
//│ 				in [LH_C carryguess¹ tail²] else 
//│ 				let _lh_matchIdent⁷ = force⁰(recRes¹)
//│ 				in case _lh_matchIdent⁷ of {
//│ 					LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => 
//│ 						let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ 						in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]
//│ 					| _  => error⁰}
//│ 		| _  => error⁰})
//│ def concat_lz₀(_lh_concat_lz_arg1¹) = lazy⁰(
//│ 	let _lh_matchIdent⁹ = force⁰(_lh_concat_lz_arg1¹)
//│ 	in case _lh_matchIdent⁹ of {
//│ 		LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz₁^1055(_lh_concat_lz_LH_C_0¹, concat_lz₀^1058(_lh_concat_lz_LH_C_1¹)))
//│ 		| LH_N  => [LH_N]
//│ 		| _  => error⁰})
//│ def enumFromThen₀(a⁶, t²²) = lazy⁰([LH_C a⁶ enumFromThen₀^809(t²², ((2 * t²²) - a⁶))])
//│ def e₀(_lh_e_arg1¹) = take_lz₀^921(_lh_e_arg1¹, (fun b³ -> append_lz₀^924([LH_C '2' [LH_C '.' [LH_N]]], b³))((fun _lh_funcomp_x⁴ -> tail_lz₀^934(concat_lz₀^935(_lh_funcomp_x⁴)))(map_lz₀^940((fun _lh_funcomp_x⁵ -> string_of_int⁰(head_lz₀^942(_lh_funcomp_x⁵))), iterate₀^948((fun _lh_funcomp_x⁶ -> (fun _lh_funcomp_x⁷ -> carryPropagate₀^949(2, map_lz₁^952((fun a⁷ -> (10 * a⁷)), _lh_funcomp_x⁷)))(tail_lz₁^964(_lh_funcomp_x⁶))), lazy⁰([LH_C 2 enumFromThen₀^972(1, 1)]))))))
//│ def head_lz₀(ls²¹) = case force⁰(ls²¹) of {
//│ 	LH_C h²² t²⁵ => h²²
//│ 	| LH_N  => error⁰}
//│ def iterate₀(f¹⁴, x²) = lazy⁰([LH_C x² iterate₀^1103(f¹⁴, f¹⁴(x²))])
//│ def map_lz₀(f¹³, ls²⁰) = lazy⁰(case force⁰(ls²⁰) of {
//│ 	LH_C h²¹ t²⁴ => [LH_C f¹³(h²¹) map_lz₀^1010(f¹³, t²⁴)]
//│ 	| LH_N  => [LH_N]})
//│ def map_lz₁(f¹², ls¹⁹) = lazy⁰(case force⁰(ls¹⁹) of {
//│ 	LH_C h²⁰ t²³ => [LH_C f¹²(h²⁰) map_lz₁^992(f¹², t²³)]
//│ 	| LH_N  => [LH_N]})
//│ def tail_lz₀(ls²³) = case force⁰(ls²³) of {
//│ 	LH_C h²⁴ t²⁷ => t²⁷
//│ 	| LH_N  => error⁰}
//│ def tail_lz₁(ls²⁴) = case force⁰(ls²⁴) of {
//│ 	LH_C h²⁵ t²⁸ => t²⁸
//│ 	| LH_N  => error⁰}
//│ def take_lz₀(n⁴, ls²²) = if (n⁴ > 0) then case force⁰(ls²²) of {
//│ 	LH_C h²³ t²⁶ => [LH_C h²³ take_lz₀^1078((n⁴ - 1), t²⁶)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testDigitsOfE2_nofib₀(_lh_testDigitsOfE2_nofib_arg1¹) = e₀^1045(_lh_testDigitsOfE2_nofib_arg1¹)
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec append_lz_d0 _lh_append_lz_arg1_2 _lh_append_lz_arg2_2 =
//│ 		  (let rec _lh_matchIdent_1_0 = _lh_append_lz_arg1_2 in
//│ 		    (match _lh_matchIdent_1_0 with
//│ 		      | `LH_C(_lh_append_lz_LH_C_0_2, _lh_append_lz_LH_C_1_2) -> 
//│ 		        (lazy (`LH_C(_lh_append_lz_LH_C_0_2, ((append_lz_d0 _lh_append_lz_LH_C_1_2) _lh_append_lz_arg2_2))))
//│ 		      | `LH_N -> 
//│ 		        _lh_append_lz_arg2_2
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and append_lz_d1 _lh_append_lz_arg1_1 _lh_append_lz_arg2_1 =
//│ 		  (let rec _lh_matchIdent_8 = _lh_append_lz_arg1_1 in
//│ 		    (match _lh_matchIdent_8 with
//│ 		      | `LH_C(_lh_append_lz_LH_C_0_1, _lh_append_lz_LH_C_1_1) -> 
//│ 		        (lazy (`LH_C(_lh_append_lz_LH_C_0_1, ((append_lz_d1 _lh_append_lz_LH_C_1_1) _lh_append_lz_arg2_1))))
//│ 		      | `LH_N -> 
//│ 		        _lh_append_lz_arg2_1
//│ 		      | _ -> 
//│ 		        (failwith "error")))
//│ 		and carryPropagate_d0 _lh_carryPropagate_arg1_1 _lh_carryPropagate_arg2_1 =
//│ 		  (lazy (let rec _lh_matchIdent_5 = (Lazy.force _lh_carryPropagate_arg2_1) in
//│ 		    (match _lh_matchIdent_5 with
//│ 		      | `LH_C(_lh_carryPropagate_LH_C_0_3, _lh_carryPropagate_LH_C_1_3) -> 
//│ 		        (let rec carryguess_1 = (_lh_carryPropagate_LH_C_0_3 / _lh_carryPropagate_arg1_1) in
//│ 		          (let rec remainder_1 = (_lh_carryPropagate_LH_C_0_3 mod _lh_carryPropagate_arg1_1) in
//│ 		            (let rec recRes_1 = ((carryPropagate_d0 (_lh_carryPropagate_arg1_1 + 1)) _lh_carryPropagate_LH_C_1_3) in
//│ 		              (if (carryguess_1 = ((_lh_carryPropagate_LH_C_0_3 + 9) / _lh_carryPropagate_arg1_1)) then
//│ 		                (let rec tail_2 = (lazy (let rec _lh_matchIdent_6 = (Lazy.force recRes_1) in
//│ 		                  (match _lh_matchIdent_6 with
//│ 		                    | `LH_C(_lh_carryPropagate_LH_C_0_4, _lh_carryPropagate_LH_C_1_4) -> 
//│ 		                      (`LH_C((remainder_1 + _lh_carryPropagate_LH_C_0_4), _lh_carryPropagate_LH_C_1_4))
//│ 		                    | _ -> 
//│ 		                      (failwith "error")))) in
//│ 		                  (`LH_C(carryguess_1, tail_2)))
//│ 		              else
//│ 		                (let rec _lh_matchIdent_7 = (Lazy.force recRes_1) in
//│ 		                  (match _lh_matchIdent_7 with
//│ 		                    | `LH_C(_lh_carryPropagate_LH_C_0_5, _lh_carryPropagate_LH_C_1_5) -> 
//│ 		                      (let rec dCorrected_1 = (_lh_carryPropagate_LH_C_0_3 + _lh_carryPropagate_LH_C_0_5) in
//│ 		                        (`LH_C((dCorrected_1 / _lh_carryPropagate_arg1_1), (lazy (`LH_C((dCorrected_1 mod _lh_carryPropagate_arg1_1), _lh_carryPropagate_LH_C_1_5))))))
//│ 		                    | _ -> 
//│ 		                      (failwith "error")))))))
//│ 		      | _ -> 
//│ 		        (failwith "error"))))
//│ 		and concat_lz_d0 _lh_concat_lz_arg1_1 =
//│ 		  (lazy (let rec _lh_matchIdent_9 = (Lazy.force _lh_concat_lz_arg1_1) in
//│ 		    (match _lh_matchIdent_9 with
//│ 		      | `LH_C(_lh_concat_lz_LH_C_0_1, _lh_concat_lz_LH_C_1_1) -> 
//│ 		        (Lazy.force ((append_lz_d1 _lh_concat_lz_LH_C_0_1) (concat_lz_d0 _lh_concat_lz_LH_C_1_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | _ -> 
//│ 		        (failwith "error"))))
//│ 		and enumFromThen_d0 a_6 t_2_2 =
//│ 		  (lazy (`LH_C(a_6, ((enumFromThen_d0 t_2_2) ((2 * t_2_2) - a_6)))))
//│ 		and e_d0 _lh_e_arg1_1 =
//│ 		  ((take_lz_d0 _lh_e_arg1_1) ((fun b_3 -> 
//│ 		    ((append_lz_d0 (`LH_C('2', (`LH_C('.', (`LH_N)))))) b_3)) ((fun _lh_funcomp_x_4 -> 
//│ 		    (tail_lz_d0 (concat_lz_d0 _lh_funcomp_x_4))) ((map_lz_d0 (fun _lh_funcomp_x_5 -> 
//│ 		    (string_of_int (head_lz_d0 _lh_funcomp_x_5)))) ((iterate_d0 (fun _lh_funcomp_x_6 -> 
//│ 		    ((fun _lh_funcomp_x_7 -> 
//│ 		      ((carryPropagate_d0 2) ((map_lz_d1 (fun a_7 -> 
//│ 		        (10 * a_7))) _lh_funcomp_x_7))) (tail_lz_d1 _lh_funcomp_x_6)))) (lazy (`LH_C(2, ((enumFromThen_d0 1) 1)))))))))
//│ 		and head_lz_d0 ls_2_1 =
//│ 		  (match (Lazy.force ls_2_1) with
//│ 		    | `LH_C(h_2_2, t_2_5) -> 
//│ 		      h_2_2
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and iterate_d0 f_1_4 x_2 =
//│ 		  (lazy (`LH_C(x_2, ((iterate_d0 f_1_4) (f_1_4 x_2)))))
//│ 		and map_lz_d0 f_1_3 ls_2_0 =
//│ 		  (lazy (match (Lazy.force ls_2_0) with
//│ 		    | `LH_C(h_2_1, t_2_4) -> 
//│ 		      (`LH_C((f_1_3 h_2_1), ((map_lz_d0 f_1_3) t_2_4)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and map_lz_d1 f_1_2 ls_1_9 =
//│ 		  (lazy (match (Lazy.force ls_1_9) with
//│ 		    | `LH_C(h_2_0, t_2_3) -> 
//│ 		      (`LH_C((f_1_2 h_2_0), ((map_lz_d1 f_1_2) t_2_3)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)))
//│ 		and tail_lz_d0 ls_2_3 =
//│ 		  (match (Lazy.force ls_2_3) with
//│ 		    | `LH_C(h_2_4, t_2_7) -> 
//│ 		      t_2_7
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and tail_lz_d1 ls_2_4 =
//│ 		  (match (Lazy.force ls_2_4) with
//│ 		    | `LH_C(h_2_5, t_2_8) -> 
//│ 		      t_2_8
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"))
//│ 		and take_lz_d0 n_4 ls_2_2 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match (Lazy.force ls_2_2) with
//│ 		      | `LH_C(h_2_3, t_2_6) -> 
//│ 		        (`LH_C(h_2_3, ((take_lz_d0 (n_4 - 1)) t_2_6)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testDigitsOfE2_nofib_d0 _lh_testDigitsOfE2_nofib_arg1_1 =
//│ 		  (e_d0 _lh_testDigitsOfE2_nofib_arg1_1);;
//│ 		(testDigitsOfE2_nofib_d0 500)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testDigitsOfE2_nofib₀^1138]
//│ 	[testDigitsOfE2_nofib₀^1138 · e₀^1045]
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · append_lz₀^924] (hopeless to continue)
//│ 			[testDigitsOfE2_nofib₀^1138 · e₀^1045 · append_lz₀^924 · append_lz₀^1125] ---> [testDigitsOfE2_nofib₀^1138 · e₀^1045 · append_lz₀^924] (using original def)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · carryPropagate₀^949] (hopeless to continue)
//│ 			[testDigitsOfE2_nofib₀^1138 · e₀^1045 · carryPropagate₀^949 · carryPropagate₀^841] ---> [testDigitsOfE2_nofib₀^1138 · e₀^1045 · carryPropagate₀^949] (using original def)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · concat_lz₀^935] (hopeless to continue)
//│ 			[testDigitsOfE2_nofib₀^1138 · e₀^1045 · concat_lz₀^935 · append_lz₁^1055] (using original def)
//│ 				[testDigitsOfE2_nofib₀^1138 · e₀^1045 · concat_lz₀^935 · append_lz₁^1055 · append_lz₁^1025] ---> [testDigitsOfE2_nofib₀^1138 · e₀^1045 · concat_lz₀^935 · append_lz₁^1055] (using original def)
//│ 			[testDigitsOfE2_nofib₀^1138 · e₀^1045 · concat_lz₀^935 · concat_lz₀^1058] ---> [testDigitsOfE2_nofib₀^1138 · e₀^1045 · concat_lz₀^935] (using original def)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · enumFromThen₀^972] (hopeless to continue)
//│ 			[testDigitsOfE2_nofib₀^1138 · e₀^1045 · enumFromThen₀^972 · enumFromThen₀^809] ---> [testDigitsOfE2_nofib₀^1138 · e₀^1045 · enumFromThen₀^972] (using original def)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · head_lz₀^942] (hopeless to continue)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · iterate₀^948] (hopeless to continue)
//│ 			[testDigitsOfE2_nofib₀^1138 · e₀^1045 · iterate₀^948 · iterate₀^1103] ---> [testDigitsOfE2_nofib₀^1138 · e₀^1045 · iterate₀^948] (using original def)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · map_lz₀^940] (hopeless to continue)
//│ 			[testDigitsOfE2_nofib₀^1138 · e₀^1045 · map_lz₀^940 · map_lz₀^1010] ---> [testDigitsOfE2_nofib₀^1138 · e₀^1045 · map_lz₀^940] (using original def)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · map_lz₁^952] (hopeless to continue)
//│ 			[testDigitsOfE2_nofib₀^1138 · e₀^1045 · map_lz₁^952 · map_lz₁^992] ---> [testDigitsOfE2_nofib₀^1138 · e₀^1045 · map_lz₁^952] (using original def)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · tail_lz₀^934] (hopeless to continue)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · tail_lz₁^964] (hopeless to continue)
//│ 		[testDigitsOfE2_nofib₀^1138 · e₀^1045 · take_lz₀^921]
//│ 			[testDigitsOfE2_nofib₀^1138 · e₀^1045 · take_lz₀^921 · take_lz₀^1078] ---> [testDigitsOfE2_nofib₀^1138 · e₀^1045 · take_lz₀^921] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testDigitsOfE2_nofib₀₀(primId⁰(500))
//│ def testDigitsOfE2_nofib₀₀(_lh_testDigitsOfE2_nofib_arg1¹) = 
//│ 	e₀₀(_lh_testDigitsOfE2_nofib_arg1¹)
//│ 	where
//│ 	def e₀₀(_lh_e_arg1¹) = 
//│ 		take_lz₀₀(_lh_e_arg1¹, (fun b¹ -> append_lz₀₀([LH_C '2' [LH_C '.' [LH_N]]], b¹))((fun _lh_funcomp_x⁴ -> tail_lz₀₀(concat_lz₀₀(_lh_funcomp_x⁴)))(map_lz₀₀((fun _lh_funcomp_x⁵ -> string_of_int⁰(head_lz₀₀(_lh_funcomp_x⁵))), iterate₀₀((fun _lh_funcomp_x⁶ -> (fun _lh_funcomp_x⁷ -> carryPropagate₀₀(2, map_lz₁₀((fun a² -> (10 * a²)), _lh_funcomp_x⁷)))(tail_lz₁₀(_lh_funcomp_x⁶))), lazy⁰([LH_C 2 enumFromThen₀₀(1, 1)]))))))
//│ 		where
//│ 		def append_lz₀₀(_lh_append_lz_arg1², _lh_append_lz_arg2²) = 
//│ 			let _lh_matchIdent⁶ = _lh_append_lz_arg1²
//│ 			in case _lh_matchIdent⁶ of {
//│ 				LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)])
//│ 				| LH_N  => _lh_append_lz_arg2²
//│ 				| _  => error⁰}
//│ 		def carryPropagate₀₀(_lh_carryPropagate_arg1¹, _lh_carryPropagate_arg2¹) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent⁷ = force⁰(_lh_carryPropagate_arg2¹)
//│ 				in case _lh_matchIdent⁷ of {
//│ 					LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => 
//│ 						let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ 						in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ 						in let recRes¹ = carryPropagate₀₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ 						in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then 
//│ 							let tail¹ = lazy⁰(
//│ 								let _lh_matchIdent⁸ = force⁰(recRes¹)
//│ 								in case _lh_matchIdent⁸ of {
//│ 									LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴]
//│ 									| _  => error⁰})
//│ 							in [LH_C carryguess¹ tail¹] else 
//│ 							let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ 							in case _lh_matchIdent⁹ of {
//│ 								LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => 
//│ 									let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ 									in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]
//│ 								| _  => error⁰}
//│ 					| _  => error⁰})
//│ 		def concat_lz₀₀(_lh_concat_lz_arg1¹) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent¹⁰ = force⁰(_lh_concat_lz_arg1¹)
//│ 				in case _lh_matchIdent¹⁰ of {
//│ 					LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz₁₀(_lh_concat_lz_LH_C_0¹, concat_lz₀₀(_lh_concat_lz_LH_C_1¹)))
//│ 					| LH_N  => [LH_N]
//│ 					| _  => error⁰})
//│ 			where
//│ 			def append_lz₁₀(_lh_append_lz_arg1³, _lh_append_lz_arg2³) = 
//│ 				let _lh_matchIdent¹¹ = _lh_append_lz_arg1³
//│ 				in case _lh_matchIdent¹¹ of {
//│ 					LH_C _lh_append_lz_LH_C_0³ _lh_append_lz_LH_C_1³ => lazy⁰([LH_C _lh_append_lz_LH_C_0³ append_lz₁₀(_lh_append_lz_LH_C_1³, _lh_append_lz_arg2³)])
//│ 					| LH_N  => _lh_append_lz_arg2³
//│ 					| _  => error⁰}
//│ 		def enumFromThen₀₀(a³, t¹¹) = 
//│ 			lazy⁰([LH_C a³ enumFromThen₀₀(t¹¹, ((2 * t¹¹) - a³))])
//│ 		def head_lz₀₀(ls¹¹) = 
//│ 			case force⁰(ls¹¹) of {
//│ 				LH_C h¹¹ t¹³ => h¹¹
//│ 				| LH_N  => error⁰}
//│ 		def iterate₀₀(f⁵, x¹) = 
//│ 			lazy⁰([LH_C x¹ iterate₀₀(f⁵, f⁵(x¹))])
//│ 		def map_lz₀₀(f⁴, ls⁷) = 
//│ 			lazy⁰(case force⁰(ls⁷) of {
//│ 				LH_C h⁷ t⁸ => [LH_C f⁴(h⁷) map_lz₀₀(f⁴, t⁸)]
//│ 				| LH_N  => [LH_N]})
//│ 		def map_lz₁₀(f³, ls⁶) = 
//│ 			lazy⁰(case force⁰(ls⁶) of {
//│ 				LH_C h⁶ t⁷ => [LH_C f³(h⁶) map_lz₁₀(f³, t⁷)]
//│ 				| LH_N  => [LH_N]})
//│ 		def tail_lz₀₀(ls⁹) = 
//│ 			case force⁰(ls⁹) of {
//│ 				LH_C h⁹ t¹⁰ => t¹⁰
//│ 				| LH_N  => error⁰}
//│ 		def tail_lz₁₀(ls¹⁰) = 
//│ 			case force⁰(ls¹⁰) of {
//│ 				LH_C h¹⁰ t¹² => t¹²
//│ 				| LH_N  => error⁰}
//│ 		def take_lz₀₀(n¹, ls⁸) = 
//│ 			if (n¹ > 0) then case force⁰(ls⁸) of {
//│ 				LH_C h⁸ t⁹ => [LH_C h⁸ take_lz₀₀((n¹ - 1), t⁹)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]: 346 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁹ => [LH_C h⁸ take_lz₀₀((n¹ - 1), t⁹)] | LH_N  => [LH_N]}: 606
//│ [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴]: 402 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁷ => [LH_C f³(h⁶) map_lz₁₀(f³, t⁷)] | LH_N  => [LH_N]}: 487
//│ [LH_C carryguess¹ tail¹]: 409 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰}: 404
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰}: 437
//│ 	case force⁰(ls¹⁰) of {LH_C h¹⁰ t¹² => t¹² | LH_N  => error⁰}: 659
//│ 	case force⁰(ls¹¹) of {LH_C h¹¹ t¹³ => h¹¹ | LH_N  => error⁰}: 666
//│ [LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵]: 432 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁷ => [LH_C f³(h⁶) map_lz₁₀(f³, t⁷)] | LH_N  => [LH_N]}: 487
//│ [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 434 --->
//│ 	case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰}: 404
//│ 	case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰}: 437
//│ 	case force⁰(ls¹⁰) of {LH_C h¹⁰ t¹² => t¹² | LH_N  => error⁰}: 659
//│ 	case force⁰(ls¹¹) of {LH_C h¹¹ t¹³ => h¹¹ | LH_N  => error⁰}: 666
//│ [LH_N]: 467 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁹ => [LH_C h⁸ take_lz₀₀((n¹ - 1), t⁹)] | LH_N  => [LH_N]}: 606
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t¹⁰ => t¹⁰ | LH_N  => error⁰}: 616
//│ [LH_C f³(h⁶) map_lz₁₀(f³, t⁷)]: 485 --->
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ in let recRes¹ = carryPropagate₀₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then let tail¹ = lazy⁰(let _lh_matchIdent⁸ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰})
//│ in [LH_C carryguess¹ tail¹] else let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰} | _  => error⁰}: 444
//│ [LH_N]: 486 --->
//│ 	case _lh_matchIdent⁷ of {LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ in let recRes¹ = carryPropagate₀₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then let tail¹ = lazy⁰(let _lh_matchIdent⁸ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰})
//│ in [LH_C carryguess¹ tail¹] else let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰} | _  => error⁰}: 444
//│ [LH_N]: 497 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]) | LH_N  => _lh_append_lz_arg2² | _  => error⁰}: 350
//│ [LH_C '.' [LH_N]]: 498 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]) | LH_N  => _lh_append_lz_arg2² | _  => error⁰}: 350
//│ [LH_C '2' [LH_C '.' [LH_N]]]: 499 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]) | LH_N  => _lh_append_lz_arg2² | _  => error⁰}: 350
//│ [LH_C 2 enumFromThen₀₀(1, 1)]: 547 --->
//│ 	case force⁰(ls¹⁰) of {LH_C h¹⁰ t¹² => t¹² | LH_N  => error⁰}: 659
//│ 	case force⁰(ls¹¹) of {LH_C h¹¹ t¹³ => h¹¹ | LH_N  => error⁰}: 666
//│ [LH_C f⁴(h⁷) map_lz₀₀(f⁴, t⁸)]: 567 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz₁₀(_lh_concat_lz_LH_C_0¹, concat_lz₀₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 469
//│ [LH_N]: 568 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz₁₀(_lh_concat_lz_LH_C_0¹, concat_lz₀₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 469
//│ [LH_C x¹ iterate₀₀(f⁵, f⁵(x¹))]: 582 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t⁸ => [LH_C f⁴(h⁷) map_lz₀₀(f⁴, t⁸)] | LH_N  => [LH_N]}: 569
//│ [LH_C a³ enumFromThen₀₀(t¹¹, ((2 * t¹¹) - a³))]: 633 --->
//│ 	case force⁰(ls⁶) of {LH_C h⁶ t⁷ => [LH_C f³(h⁶) map_lz₁₀(f³, t⁷)] | LH_N  => [LH_N]}: 487
//│ [LH_C _lh_append_lz_LH_C_0³ append_lz₁₀(_lh_append_lz_LH_C_1³, _lh_append_lz_arg2³)]: 646 --->
//│ 	case force⁰(ls⁸) of {LH_C h⁸ t⁹ => [LH_C h⁸ take_lz₀₀((n¹ - 1), t⁹)] | LH_N  => [LH_N]}: 606
//│ 	case force⁰(ls⁹) of {LH_C h⁹ t¹⁰ => t¹⁰ | LH_N  => error⁰}: 616
//│ ------------------
//│ case _lh_matchIdent⁶ of {LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]) | LH_N  => _lh_append_lz_arg2² | _  => error⁰}: 350 --->
//│ 	[LH_N]: 497
//│ 	[LH_C '.' [LH_N]]: 498
//│ 	[LH_C '2' [LH_C '.' [LH_N]]]: 499
//│ case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰}: 404 --->
//│ 	[LH_C carryguess¹ tail¹]: 409
//│ 	[LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 434
//│ case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰}: 437 --->
//│ 	[LH_C carryguess¹ tail¹]: 409
//│ 	[LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 434
//│ case _lh_matchIdent⁷ of {LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => let carryguess¹ = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1¹)
//│ in let remainder¹ = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1¹)
//│ in let recRes¹ = carryPropagate₀₀((_lh_carryPropagate_arg1¹ + 1), _lh_carryPropagate_LH_C_1³)
//│ in if (carryguess¹ == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1¹)) then let tail¹ = lazy⁰(let _lh_matchIdent⁸ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁸ of {LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴] | _  => error⁰})
//│ in [LH_C carryguess¹ tail¹] else let _lh_matchIdent⁹ = force⁰(recRes¹)
//│ in case _lh_matchIdent⁹ of {LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => let dCorrected¹ = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ in [LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])] | _  => error⁰} | _  => error⁰}: 444 --->
//│ 	[LH_C f³(h⁶) map_lz₁₀(f³, t⁷)]: 485
//│ 	[LH_N]: 486
//│ case _lh_matchIdent¹⁰ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz₁₀(_lh_concat_lz_LH_C_0¹, concat_lz₀₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 469 --->
//│ 	[LH_C f⁴(h⁷) map_lz₀₀(f⁴, t⁸)]: 567
//│ 	[LH_N]: 568
//│ case force⁰(ls⁶) of {LH_C h⁶ t⁷ => [LH_C f³(h⁶) map_lz₁₀(f³, t⁷)] | LH_N  => [LH_N]}: 487 --->
//│ 	[LH_C (remainder¹ + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴]: 402
//│ 	[LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵]: 432
//│ 	[LH_C a³ enumFromThen₀₀(t¹¹, ((2 * t¹¹) - a³))]: 633
//│ case force⁰(ls⁷) of {LH_C h⁷ t⁸ => [LH_C f⁴(h⁷) map_lz₀₀(f⁴, t⁸)] | LH_N  => [LH_N]}: 569 --->
//│ 	[LH_C x¹ iterate₀₀(f⁵, f⁵(x¹))]: 582
//│ case force⁰(ls⁸) of {LH_C h⁸ t⁹ => [LH_C h⁸ take_lz₀₀((n¹ - 1), t⁹)] | LH_N  => [LH_N]}: 606 --->
//│ 	[LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]: 346
//│ 	[LH_N]: 467
//│ 	[LH_C _lh_append_lz_LH_C_0³ append_lz₁₀(_lh_append_lz_LH_C_1³, _lh_append_lz_arg2³)]: 646
//│ case force⁰(ls⁹) of {LH_C h⁹ t¹⁰ => t¹⁰ | LH_N  => error⁰}: 616 --->
//│ 	[LH_N]: 467
//│ 	[LH_C _lh_append_lz_LH_C_0³ append_lz₁₀(_lh_append_lz_LH_C_1³, _lh_append_lz_arg2³)]: 646
//│ case force⁰(ls¹⁰) of {LH_C h¹⁰ t¹² => t¹² | LH_N  => error⁰}: 659 --->
//│ 	[LH_C carryguess¹ tail¹]: 409
//│ 	[LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 434
//│ 	[LH_C 2 enumFromThen₀₀(1, 1)]: 547
//│ case force⁰(ls¹¹) of {LH_C h¹¹ t¹³ => h¹¹ | LH_N  => error⁰}: 666 --->
//│ 	[LH_C carryguess¹ tail¹]: 409
//│ 	[LH_C div⁰(dCorrected¹, _lh_carryPropagate_arg1¹) lazy⁰([LH_C (dCorrected¹ % _lh_carryPropagate_arg1¹) _lh_carryPropagate_LH_C_1⁵])]: 434
//│ 	[LH_C 2 enumFromThen₀₀(1, 1)]: 547
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_N]: 497 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]) | LH_N  => _lh_append_lz_arg2² | _  => error⁰}: 350
//│ [LH_C '.' [LH_N]]: 498 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]) | LH_N  => _lh_append_lz_arg2² | _  => error⁰}: 350
//│ [LH_C '2' [LH_C '.' [LH_N]]]: 499 --->
//│ 	case _lh_matchIdent⁶ of {LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]) | LH_N  => _lh_append_lz_arg2² | _  => error⁰}: 350
//│ [LH_C f⁴(h⁷) map_lz₀₀(f⁴, t⁸)]: 567 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz₁₀(_lh_concat_lz_LH_C_0¹, concat_lz₀₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 469
//│ [LH_N]: 568 --->
//│ 	case _lh_matchIdent¹⁰ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz₁₀(_lh_concat_lz_LH_C_0¹, concat_lz₀₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 469
//│ [LH_C x¹ iterate₀₀(f⁵, f⁵(x¹))]: 582 --->
//│ 	case force⁰(ls⁷) of {LH_C h⁷ t⁸ => [LH_C f⁴(h⁷) map_lz₀₀(f⁴, t⁸)] | LH_N  => [LH_N]}: 569
//│ ------------------
//│ case _lh_matchIdent⁶ of {LH_C _lh_append_lz_LH_C_0² _lh_append_lz_LH_C_1² => lazy⁰([LH_C _lh_append_lz_LH_C_0² append_lz₀₀(_lh_append_lz_LH_C_1², _lh_append_lz_arg2²)]) | LH_N  => _lh_append_lz_arg2² | _  => error⁰}: 350 --->
//│ 	[LH_N]: 497
//│ 	[LH_C '.' [LH_N]]: 498
//│ 	[LH_C '2' [LH_C '.' [LH_N]]]: 499
//│ case _lh_matchIdent¹⁰ of {LH_C _lh_concat_lz_LH_C_0¹ _lh_concat_lz_LH_C_1¹ => force⁰(append_lz₁₀(_lh_concat_lz_LH_C_0¹, concat_lz₀₀(_lh_concat_lz_LH_C_1¹))) | LH_N  => [LH_N] | _  => error⁰}: 469 --->
//│ 	[LH_C f⁴(h⁷) map_lz₀₀(f⁴, t⁸)]: 567
//│ 	[LH_N]: 568
//│ case force⁰(ls⁷) of {LH_C h⁷ t⁸ => [LH_C f⁴(h⁷) map_lz₀₀(f⁴, t⁸)] | LH_N  => [LH_N]}: 569 --->
//│ 	[LH_C x¹ iterate₀₀(f⁵, f⁵(x¹))]: 582
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testDigitsOfE2_nofib₀₀(primId⁰(500))
//│ def testDigitsOfE2_nofib₀₀(_lh_testDigitsOfE2_nofib_arg1²) = 
//│ 	e₀₀(_lh_testDigitsOfE2_nofib_arg1²)
//│ 	where
//│ 	def e₀₀(_lh_e_arg1²) = 
//│ 		take_lz₀₀(_lh_e_arg1², (fun b² -> append_lz₀₀(
//│ 			let _lh_append_lz_LH_C_0⁴ = '2'
//│ 			in let _lh_append_lz_LH_C_1⁴ = 	
//│ 				let _lh_append_lz_LH_C_0⁵ = '.'
//│ 				in let _lh_append_lz_LH_C_1⁵ = (fun _lh_append_lz_arg2⁸ -> _lh_append_lz_arg2⁸)
//│ 				in (fun _lh_append_lz_arg2⁷ -> lazy⁰([LH_C _lh_append_lz_LH_C_0⁵ append_lz₀₀(_lh_append_lz_LH_C_1⁵, _lh_append_lz_arg2⁷)]))
//│ 			in (fun _lh_append_lz_arg2⁶ -> lazy⁰([LH_C _lh_append_lz_LH_C_0⁴ append_lz₀₀(_lh_append_lz_LH_C_1⁴, _lh_append_lz_arg2⁶)])), b²))((fun _lh_funcomp_x⁸ -> tail_lz₀₀(concat_lz₀₀(_lh_funcomp_x⁸)))(map_lz₀₀((fun _lh_funcomp_x⁹ -> string_of_int⁰(head_lz₀₀(_lh_funcomp_x⁹))), iterate₀₀((fun _lh_funcomp_x¹⁰ -> (fun _lh_funcomp_x¹¹ -> carryPropagate₀₀(2, map_lz₁₀((fun a⁵ -> (10 * a⁵)), _lh_funcomp_x¹¹)))(tail_lz₁₀(_lh_funcomp_x¹⁰))), lazy⁰([LH_C 2 enumFromThen₀₀(1, 1)]))))))
//│ 		where
//│ 		def append_lz₀₀(_lh_append_lz_arg1⁴, _lh_append_lz_arg2⁴) = 
//│ 			let _lh_matchIdent¹² = _lh_append_lz_arg1⁴
//│ 			in _lh_matchIdent¹²(_lh_append_lz_arg2⁴)
//│ 		def carryPropagate₀₀(_lh_carryPropagate_arg1², _lh_carryPropagate_arg2²) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent¹⁵ = force⁰(_lh_carryPropagate_arg2²)
//│ 				in case _lh_matchIdent¹⁵ of {
//│ 					LH_C _lh_carryPropagate_LH_C_0³ _lh_carryPropagate_LH_C_1³ => 
//│ 						let carryguess² = div⁰(_lh_carryPropagate_LH_C_0³, _lh_carryPropagate_arg1²)
//│ 						in let remainder² = (_lh_carryPropagate_LH_C_0³ % _lh_carryPropagate_arg1²)
//│ 						in let recRes² = carryPropagate₀₀((_lh_carryPropagate_arg1² + 1), _lh_carryPropagate_LH_C_1³)
//│ 						in if (carryguess² == div⁰((_lh_carryPropagate_LH_C_0³ + 9), _lh_carryPropagate_arg1²)) then 
//│ 							let tail² = lazy⁰(
//│ 								let _lh_matchIdent¹⁶ = force⁰(recRes²)
//│ 								in case _lh_matchIdent¹⁶ of {
//│ 									LH_C _lh_carryPropagate_LH_C_0⁴ _lh_carryPropagate_LH_C_1⁴ => [LH_C (remainder² + _lh_carryPropagate_LH_C_0⁴) _lh_carryPropagate_LH_C_1⁴]
//│ 									| _  => error⁰})
//│ 							in [LH_C carryguess² tail²] else 
//│ 							let _lh_matchIdent¹⁷ = force⁰(recRes²)
//│ 							in case _lh_matchIdent¹⁷ of {
//│ 								LH_C _lh_carryPropagate_LH_C_0⁵ _lh_carryPropagate_LH_C_1⁵ => 
//│ 									let dCorrected² = (_lh_carryPropagate_LH_C_0³ + _lh_carryPropagate_LH_C_0⁵)
//│ 									in [LH_C div⁰(dCorrected², _lh_carryPropagate_arg1²) lazy⁰([LH_C (dCorrected² % _lh_carryPropagate_arg1²) _lh_carryPropagate_LH_C_1⁵])]
//│ 								| _  => error⁰}
//│ 					| _  => error⁰})
//│ 		def concat_lz₀₀(_lh_concat_lz_arg1²) = 
//│ 			lazy⁰(
//│ 				let _lh_matchIdent¹³ = force⁰(_lh_concat_lz_arg1²)
//│ 				in _lh_matchIdent¹³)
//│ 			where
//│ 			def append_lz₁₀(_lh_append_lz_arg1⁵, _lh_append_lz_arg2⁵) = 
//│ 				let _lh_matchIdent¹⁴ = _lh_append_lz_arg1⁵
//│ 				in case _lh_matchIdent¹⁴ of {
//│ 					LH_C _lh_append_lz_LH_C_0³ _lh_append_lz_LH_C_1³ => lazy⁰([LH_C _lh_append_lz_LH_C_0³ append_lz₁₀(_lh_append_lz_LH_C_1³, _lh_append_lz_arg2⁵)])
//│ 					| LH_N  => _lh_append_lz_arg2⁵
//│ 					| _  => error⁰}
//│ 		def enumFromThen₀₀(a⁴, t¹⁵) = 
//│ 			lazy⁰([LH_C a⁴ enumFromThen₀₀(t¹⁵, ((2 * t¹⁵) - a⁴))])
//│ 		def head_lz₀₀(ls¹⁷) = 
//│ 			case force⁰(ls¹⁷) of {
//│ 				LH_C h¹¹ t¹³ => h¹¹
//│ 				| LH_N  => error⁰}
//│ 		def iterate₀₀(f⁸, x²) = 
//│ 			lazy⁰(
//│ 				let h¹² = x²
//│ 				in let t¹⁴ = iterate₀₀(f⁸, f⁸(x²))
//│ 				in (fun f⁹ -> 
//│ 					let _lh_concat_lz_LH_C_0² = f⁹(h¹²)
//│ 					in let _lh_concat_lz_LH_C_1² = map_lz₀₀(f⁹, t¹⁴)
//│ 					in force⁰(append_lz₁₀(_lh_concat_lz_LH_C_0², concat_lz₀₀(_lh_concat_lz_LH_C_1²)))))
//│ 		def map_lz₀₀(f⁶, ls¹²) = 
//│ 			lazy⁰(force⁰(ls¹², f⁶))
//│ 		def map_lz₁₀(f⁷, ls¹³) = 
//│ 			lazy⁰(case force⁰(ls¹³) of {
//│ 				LH_C h⁶ t⁷ => [LH_C f⁷(h⁶) map_lz₁₀(f⁷, t⁷)]
//│ 				| LH_N  => [LH_N]})
//│ 		def tail_lz₀₀(ls¹⁵) = 
//│ 			case force⁰(ls¹⁵) of {
//│ 				LH_C h⁹ t¹⁰ => t¹⁰
//│ 				| LH_N  => error⁰}
//│ 		def tail_lz₁₀(ls¹⁴) = 
//│ 			case force⁰(ls¹⁴) of {
//│ 				LH_C h¹⁰ t¹² => t¹²
//│ 				| LH_N  => error⁰}
//│ 		def take_lz₀₀(n², ls¹⁶) = 
//│ 			if (n² > 0) then case force⁰(ls¹⁶) of {
//│ 				LH_C h⁸ t⁹ => [LH_C h⁸ take_lz₀₀((n² - 1), t⁹)]
//│ 				| LH_N  => [LH_N]} else [LH_N]
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

