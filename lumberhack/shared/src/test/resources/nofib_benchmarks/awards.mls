:NewParser
:ParseOnly

:lhInHaskell
:lhGenOCaml
compareTuple2 (a, b) (c, d) = a <= c
delete (x:xs) e = if polyEq x e then delete xs e else x:(delete xs e)
delete [] e = []
listDiff = foldl delete
sort :: (Ord a) => [a] -> [a]
sort  l = qsort (\a b -> compareTuple2 a b) l []
qsort le []     r = r
qsort le [x]    r = x:r
qsort le (x:xs) r = qpart le x xs [] [] r
qpart le x [] rlt rge r =
    rqsort le rlt (x:rqsort le rge r)
qpart le x (y:ys) rlt rge r =
    if le x y then
    qpart le x ys rlt (y:rge) r
    else
    qpart le x ys (y:rlt) rge r
rqsort le []     r = r
rqsort le [x]    r = x:r
rqsort le (x:xs) r = rqpart le x xs [] [] r
rqpart le x [] rle rgt r =
    qsort le rle (x:qsort le rgt r)
rqpart le x (y:ys) rle rgt r =
    if le y x then
    rqpart le x ys (y:rle) rgt r
    else
    rqpart le x ys rle (y:rgt) r
perms m [] = []
perms 1 l  = map (\x -> x:[]) l
perms m (n:ns) = map (\x -> n:x) (perms (m-1) ns) ++ perms m ns
awards scores = 
  let sumscores = map (\p -> (sum p, p)) (perms 3 scores) in
  let atleast = \threshold -> (filter (\sum_p -> case sum_p of { (sum, p) -> sum >= threshold }) sumscores) in
  let award = \name_threshold -> case name_threshold of { (name, threshold) -> map (\ps -> (name,ps)) (sort (atleast threshold)) } in
    award ("Gold",70) ++ award ("Silver",60) ++ award ("Bronze",50)
findawards scores = case (awards scores) of {
  [] -> [];
  head:tail -> case head of  {
    (award,(sum,perm)) -> (award,(sum,perm)) : (findawards (listDiff scores perm))
  }
}
findallawards competitors =
    map (\name_scores -> case name_scores of { (name, scores) -> (name, findawards scores) }) competitors
competitors i =
  [ ("Simon",[35,27,40,i,34,21])
  , ("Hans",[23,19,45,i,17,10,5,8,14])
  , ("Phil",[1,18,i,20,21,19,34,8,16,21])
  , ("Kevin",[9,23,17,54,i,41,9,18,14])
  ]
testAwards_nofib n = map (\x -> findallawards (competitors (x `mod` 100))) (primId [1..n])
testAwards_nofib $ primId 500
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testAwards_nofib_lh_₁^844(primId⁰(500))
//│ def awards_lh_₁(_lh_awards_arg1⁰) = 
//│ 	let sumscores⁰ = map_lh_₃^499((fun p⁰ -> [LH_P2 sum_lh_₁^500(p⁰) p⁰]), perms_lh_₁^507(3, _lh_awards_arg1⁰))
//│ 	in let atleast⁰ = (fun threshold⁰ -> filter_lh_₁^513((fun sum_p⁰ -> 
//│ 		let _lh_matchIdent⁰ = sum_p⁰
//│ 		in case _lh_matchIdent⁰ of {
//│ 			LH_P2 _lh_awards_LH_P2_0⁰ _lh_awards_LH_P2_1⁰ => (_lh_awards_LH_P2_0⁰ >= threshold⁰)
//│ 			| _  => error⁰}), sumscores⁰))
//│ 	in let award⁰ = (fun name_threshold⁰ -> 
//│ 		let _lh_matchIdent¹ = name_threshold⁰
//│ 		in case _lh_matchIdent¹ of {
//│ 			LH_P2 _lh_awards_LH_P2_0¹ _lh_awards_LH_P2_1¹ => map_lh_₄^531((fun ps⁰ -> [LH_P2 _lh_awards_LH_P2_0¹ ps⁰]), sort_lh_₁^537(atleast⁰(_lh_awards_LH_P2_1¹)))
//│ 			| _  => error⁰})
//│ 	in mappend_lh_₂^547(mappend_lh_₁^548(award⁰([LH_P2 [LH_C 'G' [LH_C 'o' [LH_C 'l' [LH_C 'd' [LH_N]]]]] 70]), award⁰([LH_P2 [LH_C 'S' [LH_C 'i' [LH_C 'l' [LH_C 'v' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]] 60])), award⁰([LH_P2 [LH_C 'B' [LH_C 'r' [LH_C 'o' [LH_C 'n' [LH_C 'z' [LH_C 'e' [LH_N]]]]]]] 50]))
//│ def compareTuple2_lh_₁(_lh_compareTuple2_arg1⁰, _lh_compareTuple2_arg2⁰) = case _lh_compareTuple2_arg1⁰ of {
//│ 	LH_P2 _lh_compareTuple2_LH_P2_0⁰ _lh_compareTuple2_LH_P2_1⁰ => case _lh_compareTuple2_arg2⁰ of {
//│ 		LH_P2 _lh_compareTuple2_LH_P2_0¹ _lh_compareTuple2_LH_P2_1¹ => (_lh_compareTuple2_LH_P2_0⁰ <= _lh_compareTuple2_LH_P2_0¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def competitors_lh_₁(_lh_competitors_arg1⁰) = [LH_C [LH_P2 [LH_C 'S' [LH_C 'i' [LH_C 'm' [LH_C 'o' [LH_C 'n' [LH_N]]]]]] [LH_C 35 [LH_C 27 [LH_C 40 [LH_C _lh_competitors_arg1⁰ [LH_C 34 [LH_C 21 [LH_N]]]]]]]] [LH_C [LH_P2 [LH_C 'H' [LH_C 'a' [LH_C 'n' [LH_C 's' [LH_N]]]]] [LH_C 23 [LH_C 19 [LH_C 45 [LH_C _lh_competitors_arg1⁰ [LH_C 17 [LH_C 10 [LH_C 5 [LH_C 8 [LH_C 14 [LH_N]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]] [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1⁰ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]] [LH_N]]]]]
//│ def delete_lh_₁(_lh_delete_arg1⁰, _lh_delete_arg2⁰) = case _lh_delete_arg1⁰ of {
//│ 	LH_C _lh_delete_LH_C_0⁰ _lh_delete_LH_C_1⁰ => if polyEq⁰(_lh_delete_LH_C_0⁰, _lh_delete_arg2⁰) then delete_lh_₁^481(_lh_delete_LH_C_1⁰, _lh_delete_arg2⁰) else [LH_C _lh_delete_LH_C_0⁰ delete_lh_₁^487(_lh_delete_LH_C_1⁰, _lh_delete_arg2⁰)]
//│ 	| LH_N  => [LH_N]
//│ 	| _  => error⁰}
//│ def enumFromTo_lh_₁(a², b¹) = if (a² <= b¹) then [LH_C a² enumFromTo_lh_₁^657((a² + 1), b¹)] else [LH_N]
//│ def filter_lh_₁(f², ls³) = case ls³ of {
//│ 	LH_C h⁵ t⁵ => if f²(h⁵) then [LH_C h⁵ filter_lh_₁^340(f², t⁵)] else filter_lh_₁^346(f², t⁵)
//│ 	| LH_N  => [LH_N]}
//│ def findallawards_lh_₁(_lh_findallawards_arg1⁰) = map_lh_₂^807((fun name_scores⁰ -> 
//│ 	let _lh_matchIdent⁴ = name_scores⁰
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_P2 _lh_findallawards_LH_P2_0⁰ _lh_findallawards_LH_P2_1⁰ => [LH_P2 _lh_findallawards_LH_P2_0⁰ findawards_lh_₁^811(_lh_findallawards_LH_P2_1⁰)]
//│ 		| _  => error⁰}), _lh_findallawards_arg1⁰)
//│ def findawards_lh_₁(_lh_findawards_arg1⁰) = 
//│ 	let _lh_matchIdent² = awards_lh_₁^607(_lh_findawards_arg1⁰)
//│ 	in case _lh_matchIdent² of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_findawards_LH_C_0⁰ _lh_findawards_LH_C_1⁰ => 
//│ 			let _lh_matchIdent³ = _lh_findawards_LH_C_0⁰
//│ 			in case _lh_matchIdent³ of {
//│ 				LH_P2 _lh_findawards_LH_P2_0⁰ _lh_findawards_LH_P2_1⁰ => case _lh_findawards_LH_P2_1⁰ of {
//│ 					LH_P2 _lh_findawards_LH_P2_0¹ _lh_findawards_LH_P2_1¹ => [LH_C [LH_P2 _lh_findawards_LH_P2_0⁰ [LH_P2 _lh_findawards_LH_P2_0¹ _lh_findawards_LH_P2_1¹]] findawards_lh_₁^620(listDiff_lh_₁^621(_lh_findawards_arg1⁰, _lh_findawards_LH_P2_1¹))]
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def foldl_lh_₁(f⁵, i⁰, ls⁷) = case ls⁷ of {
//│ 	LH_C h⁹ t⁹ => foldl_lh_₁^459(f⁵, f⁵(i⁰, h⁹), t⁹)
//│ 	| LH_N  => i⁰}
//│ def listDiff_lh_₁ = foldl_lh_₁^604(delete_lh_₁^605)
//│ def map_lh_₁(f⁷, ls⁹) = case ls⁹ of {
//│ 	LH_C h¹¹ t¹¹ => [LH_C f⁷(h¹¹) map_lh_₁^675(f⁷, t¹¹)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₂(f⁶, ls⁸) = case ls⁸ of {
//│ 	LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂^641(f⁶, t¹⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₃(f⁴, ls⁶) = case ls⁶ of {
//│ 	LH_C h⁸ t⁸ => [LH_C f⁴(h⁸) map_lh_₃^448(f⁴, t⁸)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₄(f³, ls⁴) = case ls⁴ of {
//│ 	LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₄^374(f³, t⁶)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₅(f¹, ls¹) = case ls¹ of {
//│ 	LH_C h² t² => [LH_C f¹(h²) map_lh_₅^299(f¹, t²)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₆(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₆^273(f⁰, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh_₁(xs², ys²) = case xs² of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁^428(t⁷, ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₂(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂^325(t⁴, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₃(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₃^285(t¹, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def perms_lh_₁(_lh_perms_arg1⁰, _lh_perms_arg2⁰) = case _lh_perms_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| _  => case _lh_perms_arg1⁰ of {
//│ 		1  => map_lh_₆^387((fun x⁰ -> [LH_C x⁰ [LH_N]]), _lh_perms_arg2⁰)
//│ 		| _  => case _lh_perms_arg2⁰ of {
//│ 			LH_C _lh_perms_LH_C_0⁰ _lh_perms_LH_C_1⁰ => mappend_lh_₃^396(map_lh_₅^397((fun x¹ -> [LH_C _lh_perms_LH_C_0⁰ x¹]), perms_lh_₁^403((_lh_perms_arg1⁰ - 1), _lh_perms_LH_C_1⁰)), perms_lh_₁^414(_lh_perms_arg1⁰, _lh_perms_LH_C_1⁰))
//│ 			| _  => error⁰}}}
//│ def qpart_lh_₁(_lh_qpart_arg1⁰, _lh_qpart_arg2⁰, _lh_qpart_arg3⁰, _lh_qpart_arg4⁰, _lh_qpart_arg5⁰, _lh_qpart_arg6⁰) = case _lh_qpart_arg3⁰ of {
//│ 	LH_N  => rqsort_lh_₁^172(_lh_qpart_arg1⁰, _lh_qpart_arg4⁰, [LH_C _lh_qpart_arg2⁰ rqsort_lh_₂^178(_lh_qpart_arg1⁰, _lh_qpart_arg5⁰, _lh_qpart_arg6⁰)])
//│ 	| LH_C _lh_qpart_LH_C_0⁰ _lh_qpart_LH_C_1⁰ => if _lh_qpart_arg1⁰(_lh_qpart_arg2⁰, _lh_qpart_LH_C_0⁰) then qpart_lh_₁^192(_lh_qpart_arg1⁰, _lh_qpart_arg2⁰, _lh_qpart_LH_C_1⁰, _lh_qpart_arg4⁰, [LH_C _lh_qpart_LH_C_0⁰ _lh_qpart_arg5⁰], _lh_qpart_arg6⁰) else qpart_lh_₁^207(_lh_qpart_arg1⁰, _lh_qpart_arg2⁰, _lh_qpart_LH_C_1⁰, [LH_C _lh_qpart_LH_C_0⁰ _lh_qpart_arg4⁰], _lh_qpart_arg5⁰, _lh_qpart_arg6⁰)
//│ 	| _  => error⁰}
//│ def qsort_lh_₁(_lh_qsort_arg1⁰, _lh_qsort_arg2⁰, _lh_qsort_arg3⁰) = case _lh_qsort_arg2⁰ of {
//│ 	LH_N  => _lh_qsort_arg3⁰
//│ 	| LH_C _lh_qsort_LH_C_0⁰ _lh_qsort_LH_C_1⁰ => case _lh_qsort_LH_C_1⁰ of {
//│ 		LH_N  => [LH_C _lh_qsort_LH_C_0⁰ _lh_qsort_arg3⁰]
//│ 		| _  => qpart_lh_₁^250(_lh_qsort_arg1⁰, _lh_qsort_LH_C_0⁰, _lh_qsort_LH_C_1⁰, [LH_N], [LH_N], _lh_qsort_arg3⁰)}
//│ 	| _  => error⁰}
//│ def rqpart_lh_₁(_lh_rqpart_arg1¹, _lh_rqpart_arg2¹, _lh_rqpart_arg3¹, _lh_rqpart_arg4¹, _lh_rqpart_arg5¹, _lh_rqpart_arg6¹) = case _lh_rqpart_arg3¹ of {
//│ 	LH_N  => qsort_lh_₁^62(_lh_rqpart_arg1¹, _lh_rqpart_arg4¹, [LH_C _lh_rqpart_arg2¹ qsort_lh_₁^68(_lh_rqpart_arg1¹, _lh_rqpart_arg5¹, _lh_rqpart_arg6¹)])
//│ 	| LH_C _lh_rqpart_LH_C_0¹ _lh_rqpart_LH_C_1¹ => if _lh_rqpart_arg1¹(_lh_rqpart_LH_C_0¹, _lh_rqpart_arg2¹) then rqpart_lh_₁^82(_lh_rqpart_arg1¹, _lh_rqpart_arg2¹, _lh_rqpart_LH_C_1¹, [LH_C _lh_rqpart_LH_C_0¹ _lh_rqpart_arg4¹], _lh_rqpart_arg5¹, _lh_rqpart_arg6¹) else rqpart_lh_₁^97(_lh_rqpart_arg1¹, _lh_rqpart_arg2¹, _lh_rqpart_LH_C_1¹, _lh_rqpart_arg4¹, [LH_C _lh_rqpart_LH_C_0¹ _lh_rqpart_arg5¹], _lh_rqpart_arg6¹)
//│ 	| _  => error⁰}
//│ def rqpart_lh_₂(_lh_rqpart_arg1⁰, _lh_rqpart_arg2⁰, _lh_rqpart_arg3⁰, _lh_rqpart_arg4⁰, _lh_rqpart_arg5⁰, _lh_rqpart_arg6⁰) = case _lh_rqpart_arg3⁰ of {
//│ 	LH_N  => qsort_lh_₁^2(_lh_rqpart_arg1⁰, _lh_rqpart_arg4⁰, [LH_C _lh_rqpart_arg2⁰ qsort_lh_₁^8(_lh_rqpart_arg1⁰, _lh_rqpart_arg5⁰, _lh_rqpart_arg6⁰)])
//│ 	| LH_C _lh_rqpart_LH_C_0⁰ _lh_rqpart_LH_C_1⁰ => if _lh_rqpart_arg1⁰(_lh_rqpart_LH_C_0⁰, _lh_rqpart_arg2⁰) then rqpart_lh_₂^22(_lh_rqpart_arg1⁰, _lh_rqpart_arg2⁰, _lh_rqpart_LH_C_1⁰, [LH_C _lh_rqpart_LH_C_0⁰ _lh_rqpart_arg4⁰], _lh_rqpart_arg5⁰, _lh_rqpart_arg6⁰) else rqpart_lh_₂^37(_lh_rqpart_arg1⁰, _lh_rqpart_arg2⁰, _lh_rqpart_LH_C_1⁰, _lh_rqpart_arg4⁰, [LH_C _lh_rqpart_LH_C_0⁰ _lh_rqpart_arg5⁰], _lh_rqpart_arg6⁰)
//│ 	| _  => error⁰}
//│ def rqsort_lh_₁(_lh_rqsort_arg1¹, _lh_rqsort_arg2¹, _lh_rqsort_arg3¹) = case _lh_rqsort_arg2¹ of {
//│ 	LH_N  => _lh_rqsort_arg3¹
//│ 	| LH_C _lh_rqsort_LH_C_0¹ _lh_rqsort_LH_C_1¹ => case _lh_rqsort_LH_C_1¹ of {
//│ 		LH_N  => [LH_C _lh_rqsort_LH_C_0¹ _lh_rqsort_arg3¹]
//│ 		| _  => rqpart_lh_₁^152(_lh_rqsort_arg1¹, _lh_rqsort_LH_C_0¹, _lh_rqsort_LH_C_1¹, [LH_N], [LH_N], _lh_rqsort_arg3¹)}
//│ 	| _  => error⁰}
//│ def rqsort_lh_₂(_lh_rqsort_arg1⁰, _lh_rqsort_arg2⁰, _lh_rqsort_arg3⁰) = case _lh_rqsort_arg2⁰ of {
//│ 	LH_N  => _lh_rqsort_arg3⁰
//│ 	| LH_C _lh_rqsort_LH_C_0⁰ _lh_rqsort_LH_C_1⁰ => case _lh_rqsort_LH_C_1⁰ of {
//│ 		LH_N  => [LH_C _lh_rqsort_LH_C_0⁰ _lh_rqsort_arg3⁰]
//│ 		| _  => rqpart_lh_₂^127(_lh_rqsort_arg1⁰, _lh_rqsort_LH_C_0⁰, _lh_rqsort_LH_C_1⁰, [LH_N], [LH_N], _lh_rqsort_arg3⁰)}
//│ 	| _  => error⁰}
//│ def sort_lh_₁(_lh_sort_arg1⁰) = qsort_lh_₁^356((fun a¹ -> (fun b⁰ -> compareTuple2_lh_₁^357(a¹, b⁰))), _lh_sort_arg1⁰, [LH_N])
//│ def sumAux_lh_₁(ls², a⁰) = case ls² of {
//│ 	LH_N  => a⁰
//│ 	| LH_C h³ t³ => sumAux_lh_₁^311(t³, (a⁰ + h³))}
//│ def sum_lh_₁(ls⁵) = sumAux_lh_₁^438(ls⁵, 0)
//│ def testAwards_nofib_lh_₁(_lh_testAwards_nofib_arg1⁰) = map_lh_₁^823((fun x² -> findallawards_lh_₁^824(competitors_lh_₁^825((x² % 100)))), primId⁰(enumFromTo_lh_₁^836(1, _lh_testAwards_nofib_arg1⁰)))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec map_lh__d1 f_7 ls_9 =
//│ 		  (match ls_9 with
//│ 		    | `LH_C(h_1_1, t_1_1) -> 
//│ 		      (`LH_C((f_7 h_1_1), ((map_lh__d1 f_7) t_1_1)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec competitors_lh__d1 _lh_competitors_arg1_0 =
//│ 		  (`LH_C((`LH_P2((`LH_C('S', (`LH_C('i', (`LH_C('m', (`LH_C('o', (`LH_C('n', (`LH_N))))))))))), (`LH_C(35, (`LH_C(27, (`LH_C(40, (`LH_C(_lh_competitors_arg1_0, (`LH_C(34, (`LH_C(21, (`LH_N))))))))))))))), (`LH_C((`LH_P2((`LH_C('H', (`LH_C('a', (`LH_C('n', (`LH_C('s', (`LH_N))))))))), (`LH_C(23, (`LH_C(19, (`LH_C(45, (`LH_C(_lh_competitors_arg1_0, (`LH_C(17, (`LH_C(10, (`LH_C(5, (`LH_C(8, (`LH_C(14, (`LH_N))))))))))))))))))))), (`LH_C((`LH_P2((`LH_C('P', (`LH_C('h', (`LH_C('i', (`LH_C('l', (`LH_N))))))))), (`LH_C(1, (`LH_C(18, (`LH_C(_lh_competitors_arg1_0, (`LH_C(20, (`LH_C(21, (`LH_C(19, (`LH_C(34, (`LH_C(8, (`LH_C(16, (`LH_C(21, (`LH_N))))))))))))))))))))))), (`LH_C((`LH_P2((`LH_C('K', (`LH_C('e', (`LH_C('v', (`LH_C('i', (`LH_C('n', (`LH_N))))))))))), (`LH_C(9, (`LH_C(23, (`LH_C(17, (`LH_C(54, (`LH_C(_lh_competitors_arg1_0, (`LH_C(41, (`LH_C(9, (`LH_C(18, (`LH_C(14, (`LH_N))))))))))))))))))))), (`LH_N)))))))));;
//│ 		let rec enumFromTo_lh__d1 a_2 b_1 =
//│ 		  (if (a_2 <= b_1) then
//│ 		    (`LH_C(a_2, ((enumFromTo_lh__d1 (a_2 + 1)) b_1)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec mappend_lh__d1 xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_7, t_7) -> 
//│ 		      (`LH_C(h_7, ((mappend_lh__d1 t_7) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec compareTuple2_lh__d1 _lh_compareTuple2_arg1_0 _lh_compareTuple2_arg2_0 =
//│ 		  (match _lh_compareTuple2_arg1_0 with
//│ 		    | `LH_P2(_lh_compareTuple2_LH_P2_0_0, _lh_compareTuple2_LH_P2_1_0) -> 
//│ 		      (match _lh_compareTuple2_arg2_0 with
//│ 		        | `LH_P2(_lh_compareTuple2_LH_P2_0_1, _lh_compareTuple2_LH_P2_1_1) -> 
//│ 		          (_lh_compareTuple2_LH_P2_0_0 <= _lh_compareTuple2_LH_P2_0_1)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec qpart_lh__d1 _lh_qpart_arg1_0 _lh_qpart_arg2_0 _lh_qpart_arg3_0 _lh_qpart_arg4_0 _lh_qpart_arg5_0 _lh_qpart_arg6_0 =
//│ 		  (match _lh_qpart_arg3_0 with
//│ 		    | `LH_N -> 
//│ 		      (((rqsort_lh__d1 _lh_qpart_arg1_0) _lh_qpart_arg4_0) (`LH_C(_lh_qpart_arg2_0, (((rqsort_lh__d2 _lh_qpart_arg1_0) _lh_qpart_arg5_0) _lh_qpart_arg6_0))))
//│ 		    | `LH_C(_lh_qpart_LH_C_0_0, _lh_qpart_LH_C_1_0) -> 
//│ 		      (if ((_lh_qpart_arg1_0 _lh_qpart_arg2_0) _lh_qpart_LH_C_0_0) then
//│ 		        ((((((qpart_lh__d1 _lh_qpart_arg1_0) _lh_qpart_arg2_0) _lh_qpart_LH_C_1_0) _lh_qpart_arg4_0) (`LH_C(_lh_qpart_LH_C_0_0, _lh_qpart_arg5_0))) _lh_qpart_arg6_0)
//│ 		      else
//│ 		        ((((((qpart_lh__d1 _lh_qpart_arg1_0) _lh_qpart_arg2_0) _lh_qpart_LH_C_1_0) (`LH_C(_lh_qpart_LH_C_0_0, _lh_qpart_arg4_0))) _lh_qpart_arg5_0) _lh_qpart_arg6_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and
//│ 		qsort_lh__d1 _lh_qsort_arg1_0 _lh_qsort_arg2_0 _lh_qsort_arg3_0 =
//│ 		  (match _lh_qsort_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      _lh_qsort_arg3_0
//│ 		    | `LH_C(_lh_qsort_LH_C_0_0, _lh_qsort_LH_C_1_0) -> 
//│ 		      (match _lh_qsort_LH_C_1_0 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_C(_lh_qsort_LH_C_0_0, _lh_qsort_arg3_0))
//│ 		        | _ -> 
//│ 		          ((((((qpart_lh__d1 _lh_qsort_arg1_0) _lh_qsort_LH_C_0_0) _lh_qsort_LH_C_1_0) (`LH_N)) (`LH_N)) _lh_qsort_arg3_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and
//│ 		rqpart_lh__d1 _lh_rqpart_arg1_1 _lh_rqpart_arg2_1 _lh_rqpart_arg3_1 _lh_rqpart_arg4_1 _lh_rqpart_arg5_1 _lh_rqpart_arg6_1 =
//│ 		  (match _lh_rqpart_arg3_1 with
//│ 		    | `LH_N -> 
//│ 		      (((qsort_lh__d1 _lh_rqpart_arg1_1) _lh_rqpart_arg4_1) (`LH_C(_lh_rqpart_arg2_1, (((qsort_lh__d1 _lh_rqpart_arg1_1) _lh_rqpart_arg5_1) _lh_rqpart_arg6_1))))
//│ 		    | `LH_C(_lh_rqpart_LH_C_0_1, _lh_rqpart_LH_C_1_1) -> 
//│ 		      (if ((_lh_rqpart_arg1_1 _lh_rqpart_LH_C_0_1) _lh_rqpart_arg2_1) then
//│ 		        ((((((rqpart_lh__d1 _lh_rqpart_arg1_1) _lh_rqpart_arg2_1) _lh_rqpart_LH_C_1_1) (`LH_C(_lh_rqpart_LH_C_0_1, _lh_rqpart_arg4_1))) _lh_rqpart_arg5_1) _lh_rqpart_arg6_1)
//│ 		      else
//│ 		        ((((((rqpart_lh__d1 _lh_rqpart_arg1_1) _lh_rqpart_arg2_1) _lh_rqpart_LH_C_1_1) _lh_rqpart_arg4_1) (`LH_C(_lh_rqpart_LH_C_0_1, _lh_rqpart_arg5_1))) _lh_rqpart_arg6_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and
//│ 		rqpart_lh__d2 _lh_rqpart_arg1_0 _lh_rqpart_arg2_0 _lh_rqpart_arg3_0 _lh_rqpart_arg4_0 _lh_rqpart_arg5_0 _lh_rqpart_arg6_0 =
//│ 		  (match _lh_rqpart_arg3_0 with
//│ 		    | `LH_N -> 
//│ 		      (((qsort_lh__d1 _lh_rqpart_arg1_0) _lh_rqpart_arg4_0) (`LH_C(_lh_rqpart_arg2_0, (((qsort_lh__d1 _lh_rqpart_arg1_0) _lh_rqpart_arg5_0) _lh_rqpart_arg6_0))))
//│ 		    | `LH_C(_lh_rqpart_LH_C_0_0, _lh_rqpart_LH_C_1_0) -> 
//│ 		      (if ((_lh_rqpart_arg1_0 _lh_rqpart_LH_C_0_0) _lh_rqpart_arg2_0) then
//│ 		        ((((((rqpart_lh__d2 _lh_rqpart_arg1_0) _lh_rqpart_arg2_0) _lh_rqpart_LH_C_1_0) (`LH_C(_lh_rqpart_LH_C_0_0, _lh_rqpart_arg4_0))) _lh_rqpart_arg5_0) _lh_rqpart_arg6_0)
//│ 		      else
//│ 		        ((((((rqpart_lh__d2 _lh_rqpart_arg1_0) _lh_rqpart_arg2_0) _lh_rqpart_LH_C_1_0) _lh_rqpart_arg4_0) (`LH_C(_lh_rqpart_LH_C_0_0, _lh_rqpart_arg5_0))) _lh_rqpart_arg6_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and
//│ 		rqsort_lh__d1 _lh_rqsort_arg1_1 _lh_rqsort_arg2_1 _lh_rqsort_arg3_1 =
//│ 		  (match _lh_rqsort_arg2_1 with
//│ 		    | `LH_N -> 
//│ 		      _lh_rqsort_arg3_1
//│ 		    | `LH_C(_lh_rqsort_LH_C_0_1, _lh_rqsort_LH_C_1_1) -> 
//│ 		      (match _lh_rqsort_LH_C_1_1 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_C(_lh_rqsort_LH_C_0_1, _lh_rqsort_arg3_1))
//│ 		        | _ -> 
//│ 		          ((((((rqpart_lh__d1 _lh_rqsort_arg1_1) _lh_rqsort_LH_C_0_1) _lh_rqsort_LH_C_1_1) (`LH_N)) (`LH_N)) _lh_rqsort_arg3_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and
//│ 		rqsort_lh__d2 _lh_rqsort_arg1_0 _lh_rqsort_arg2_0 _lh_rqsort_arg3_0 =
//│ 		  (match _lh_rqsort_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      _lh_rqsort_arg3_0
//│ 		    | `LH_C(_lh_rqsort_LH_C_0_0, _lh_rqsort_LH_C_1_0) -> 
//│ 		      (match _lh_rqsort_LH_C_1_0 with
//│ 		        | `LH_N -> 
//│ 		          (`LH_C(_lh_rqsort_LH_C_0_0, _lh_rqsort_arg3_0))
//│ 		        | _ -> 
//│ 		          ((((((rqpart_lh__d2 _lh_rqsort_arg1_0) _lh_rqsort_LH_C_0_0) _lh_rqsort_LH_C_1_0) (`LH_N)) (`LH_N)) _lh_rqsort_arg3_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec sort_lh__d1 _lh_sort_arg1_0 =
//│ 		  (((qsort_lh__d1 (fun a_1 b_0 -> 
//│ 		    ((compareTuple2_lh__d1 a_1) b_0))) _lh_sort_arg1_0) (`LH_N));;
//│ 		let rec mappend_lh__d3 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (`LH_C(h_1, ((mappend_lh__d3 t_1) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec map_lh__d6 f_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C((f_0 h_0), ((map_lh__d6 f_0) t_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec map_lh__d5 f_1 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (`LH_C((f_1 h_2), ((map_lh__d5 f_1) t_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec perms_lh__d1 _lh_perms_arg1_0 _lh_perms_arg2_0 =
//│ 		  (match _lh_perms_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | _ -> 
//│ 		      (match _lh_perms_arg1_0 with
//│ 		        | 1 -> 
//│ 		          ((map_lh__d6 (fun x_0 -> 
//│ 		            (`LH_C(x_0, (`LH_N))))) _lh_perms_arg2_0)
//│ 		        | _ -> 
//│ 		          (match _lh_perms_arg2_0 with
//│ 		            | `LH_C(_lh_perms_LH_C_0_0, _lh_perms_LH_C_1_0) -> 
//│ 		              ((mappend_lh__d3 ((map_lh__d5 (fun x_1 -> 
//│ 		                (`LH_C(_lh_perms_LH_C_0_0, x_1)))) ((perms_lh__d1 (_lh_perms_arg1_0 - 1)) _lh_perms_LH_C_1_0))) ((perms_lh__d1 _lh_perms_arg1_0) _lh_perms_LH_C_1_0))
//│ 		            | _ -> 
//│ 		              (failwith "error"))));;
//│ 		let rec mappend_lh__d2 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      (`LH_C(h_4, ((mappend_lh__d2 t_4) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec sumAux_lh__d1 ls_2 a_0 =
//│ 		  (match ls_2 with
//│ 		    | `LH_N -> 
//│ 		      a_0
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      ((sumAux_lh__d1 t_3) (a_0 + h_3)));;
//│ 		let rec sum_lh__d1 ls_5 =
//│ 		  ((sumAux_lh__d1 ls_5) 0);;
//│ 		let rec map_lh__d3 f_4 ls_6 =
//│ 		  (match ls_6 with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      (`LH_C((f_4 h_8), ((map_lh__d3 f_4) t_8)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec filter_lh__d1 f_2 ls_3 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      (if (f_2 h_5) then
//│ 		        (`LH_C(h_5, ((filter_lh__d1 f_2) t_5)))
//│ 		      else
//│ 		        ((filter_lh__d1 f_2) t_5))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec map_lh__d4 f_3 ls_4 =
//│ 		  (match ls_4 with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      (`LH_C((f_3 h_6), ((map_lh__d4 f_3) t_6)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec awards_lh__d1 _lh_awards_arg1_0 =
//│ 		  (let rec sumscores_0 = ((map_lh__d3 (fun p_0 -> 
//│ 		    (`LH_P2((sum_lh__d1 p_0), p_0)))) ((perms_lh__d1 3) _lh_awards_arg1_0)) in
//│ 		    (let rec atleast_0 = (fun threshold_0 -> 
//│ 		      ((filter_lh__d1 (fun sum_p_0 -> 
//│ 		        (let rec _lh_matchIdent_0 = sum_p_0 in
//│ 		          (match _lh_matchIdent_0 with
//│ 		            | `LH_P2(_lh_awards_LH_P2_0_0, _lh_awards_LH_P2_1_0) -> 
//│ 		              (_lh_awards_LH_P2_0_0 >= threshold_0)
//│ 		            | _ -> 
//│ 		              (failwith "error"))))) sumscores_0)) in
//│ 		      (let rec award_0 = (fun name_threshold_0 -> 
//│ 		        (let rec _lh_matchIdent_1 = name_threshold_0 in
//│ 		          (match _lh_matchIdent_1 with
//│ 		            | `LH_P2(_lh_awards_LH_P2_0_1, _lh_awards_LH_P2_1_1) -> 
//│ 		              ((map_lh__d4 (fun ps_0 -> 
//│ 		                (`LH_P2(_lh_awards_LH_P2_0_1, ps_0)))) (sort_lh__d1 (atleast_0 _lh_awards_LH_P2_1_1)))
//│ 		            | _ -> 
//│ 		              (failwith "error")))) in
//│ 		        ((mappend_lh__d2 ((mappend_lh__d1 (award_0 (`LH_P2((`LH_C('G', (`LH_C('o', (`LH_C('l', (`LH_C('d', (`LH_N))))))))), 70)))) (award_0 (`LH_P2((`LH_C('S', (`LH_C('i', (`LH_C('l', (`LH_C('v', (`LH_C('e', (`LH_C('r', (`LH_N))))))))))))), 60))))) (award_0 (`LH_P2((`LH_C('B', (`LH_C('r', (`LH_C('o', (`LH_C('n', (`LH_C('z', (`LH_C('e', (`LH_N))))))))))))), 50)))))));;
//│ 		let rec foldl_lh__d1 f_5 i_0 ls_7 =
//│ 		  (match ls_7 with
//│ 		    | `LH_C(h_9, t_9) -> 
//│ 		      (((foldl_lh__d1 f_5) ((f_5 i_0) h_9)) t_9)
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec delete_lh__d1 _lh_delete_arg1_0 _lh_delete_arg2_0 =
//│ 		  (match _lh_delete_arg1_0 with
//│ 		    | `LH_C(_lh_delete_LH_C_0_0, _lh_delete_LH_C_1_0) -> 
//│ 		      (if (_lh_delete_LH_C_0_0 = _lh_delete_arg2_0) then
//│ 		        ((delete_lh__d1 _lh_delete_LH_C_1_0) _lh_delete_arg2_0)
//│ 		      else
//│ 		        (`LH_C(_lh_delete_LH_C_0_0, ((delete_lh__d1 _lh_delete_LH_C_1_0) _lh_delete_arg2_0))))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec listDiff_lh__d1 =
//│ 		  (foldl_lh__d1 delete_lh__d1);;
//│ 		let rec findawards_lh__d1 _lh_findawards_arg1_0 =
//│ 		  (let rec _lh_matchIdent_2 = (awards_lh__d1 _lh_findawards_arg1_0) in
//│ 		    (match _lh_matchIdent_2 with
//│ 		      | `LH_N -> 
//│ 		        (`LH_N)
//│ 		      | `LH_C(_lh_findawards_LH_C_0_0, _lh_findawards_LH_C_1_0) -> 
//│ 		        (let rec _lh_matchIdent_3 = _lh_findawards_LH_C_0_0 in
//│ 		          (match _lh_matchIdent_3 with
//│ 		            | `LH_P2(_lh_findawards_LH_P2_0_0, _lh_findawards_LH_P2_1_0) -> 
//│ 		              (match _lh_findawards_LH_P2_1_0 with
//│ 		                | `LH_P2(_lh_findawards_LH_P2_0_1, _lh_findawards_LH_P2_1_1) -> 
//│ 		                  (`LH_C((`LH_P2(_lh_findawards_LH_P2_0_0, (`LH_P2(_lh_findawards_LH_P2_0_1, _lh_findawards_LH_P2_1_1)))), (findawards_lh__d1 ((listDiff_lh__d1 _lh_findawards_arg1_0) _lh_findawards_LH_P2_1_1))))
//│ 		                | _ -> 
//│ 		                  (failwith "error"))
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec map_lh__d2 f_6 ls_8 =
//│ 		  (match ls_8 with
//│ 		    | `LH_C(h_1_0, t_1_0) -> 
//│ 		      (`LH_C((f_6 h_1_0), ((map_lh__d2 f_6) t_1_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec findallawards_lh__d1 _lh_findallawards_arg1_0 =
//│ 		  ((map_lh__d2 (fun name_scores_0 -> 
//│ 		    (let rec _lh_matchIdent_4 = name_scores_0 in
//│ 		      (match _lh_matchIdent_4 with
//│ 		        | `LH_P2(_lh_findallawards_LH_P2_0_0, _lh_findallawards_LH_P2_1_0) -> 
//│ 		          (`LH_P2(_lh_findallawards_LH_P2_0_0, (findawards_lh__d1 _lh_findallawards_LH_P2_1_0)))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))) _lh_findallawards_arg1_0);;
//│ 		let rec testAwards_nofib_lh__d1 _lh_testAwards_nofib_arg1_0 =
//│ 		  ((map_lh__d1 (fun x_2 -> 
//│ 		    (findallawards_lh__d1 (competitors_lh__d1 (x_2 mod 100))))) ((enumFromTo_lh__d1 1) _lh_testAwards_nofib_arg1_0));;
//│ 		(testAwards_nofib_lh__d1 500)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion strategies >>>>>>>
//│ [LH_C _lh_rqpart_arg2⁰ qsort_lh_₁(_lh_rqpart_arg1⁰, _lh_rqpart_arg5⁰, _lh_rqpart_arg6⁰)]: 15 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₄(f³, t⁶)] | LH_N  => [LH_N]}: 381
//│ [LH_C _lh_rqpart_arg2¹ qsort_lh_₁(_lh_rqpart_arg1¹, _lh_rqpart_arg5¹, _lh_rqpart_arg6¹)]: 75 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₄(f³, t⁶)] | LH_N  => [LH_N]}: 381
//│ [LH_C _lh_rqsort_LH_C_0⁰ _lh_rqsort_arg3⁰]: 126 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₄(f³, t⁶)] | LH_N  => [LH_N]}: 381
//│ [LH_C _lh_rqsort_LH_C_0¹ _lh_rqsort_arg3¹]: 151 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₄(f³, t⁶)] | LH_N  => [LH_N]}: 381
//│ [LH_C _lh_qpart_arg2⁰ rqsort_lh_₂(_lh_qpart_arg1⁰, _lh_qpart_arg5⁰, _lh_qpart_arg6⁰)]: 185 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₄(f³, t⁶)] | LH_N  => [LH_N]}: 381
//│ [LH_C _lh_qsort_LH_C_0⁰ _lh_qsort_arg3⁰]: 249 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₄(f³, t⁶)] | LH_N  => [LH_N]}: 381
//│ [LH_C f¹(h²) map_lh_₅(f¹, t²)]: 304 --->
//│ 	case xs⁰ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 292
//│ [LH_N]: 305 --->
//│ 	case xs⁰ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 292
//│ [LH_N]: 367 --->
//│ 	case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₄(f³, t⁶)] | LH_N  => [LH_N]}: 381
//│ [LH_C f⁴(h⁸) map_lh_₃(f⁴, t⁸)]: 453 --->
//│ 	case ls³ of {LH_C h⁵ t⁵ => if f²(h⁵) then [LH_C h⁵ filter_lh_₁(f², t⁵)] else filter_lh_₁(f², t⁵) | LH_N  => [LH_N]}: 353
//│ [LH_N]: 454 --->
//│ 	case ls³ of {LH_C h⁵ t⁵ => if f²(h⁵) then [LH_C h⁵ filter_lh_₁(f², t⁵)] else filter_lh_₁(f², t⁵) | LH_N  => [LH_N]}: 353
//│ [LH_P2 [LH_C 'G' [LH_C 'o' [LH_C 'l' [LH_C 'd' [LH_N]]]]] 70]: 560 --->
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_awards_LH_P2_0¹ _lh_awards_LH_P2_1¹ => map_lh_₄((fun ps⁰ -> [LH_P2 _lh_awards_LH_P2_0¹ ps⁰]), sort_lh_₁(atleast⁰(_lh_awards_LH_P2_1¹))) | _  => error⁰}: 544
//│ [LH_P2 [LH_C 'S' [LH_C 'i' [LH_C 'l' [LH_C 'v' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]] 60]: 578 --->
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_awards_LH_P2_0¹ _lh_awards_LH_P2_1¹ => map_lh_₄((fun ps⁰ -> [LH_P2 _lh_awards_LH_P2_0¹ ps⁰]), sort_lh_₁(atleast⁰(_lh_awards_LH_P2_1¹))) | _  => error⁰}: 544
//│ [LH_P2 [LH_C 'B' [LH_C 'r' [LH_C 'o' [LH_C 'n' [LH_C 'z' [LH_C 'e' [LH_N]]]]]]] 50]: 597 --->
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_awards_LH_P2_0¹ _lh_awards_LH_P2_1¹ => map_lh_₄((fun ps⁰ -> [LH_P2 _lh_awards_LH_P2_0¹ ps⁰]), sort_lh_₁(atleast⁰(_lh_awards_LH_P2_1¹))) | _  => error⁰}: 544
//│ [LH_P2 [LH_C 'S' [LH_C 'i' [LH_C 'm' [LH_C 'o' [LH_C 'n' [LH_N]]]]]] [LH_C 35 [LH_C 27 [LH_C 40 [LH_C _lh_competitors_arg1⁰ [LH_C 34 [LH_C 21 [LH_N]]]]]]]]: 709 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_findallawards_LH_P2_0⁰ _lh_findallawards_LH_P2_1⁰ => [LH_P2 _lh_findallawards_LH_P2_0⁰ findawards_lh_₁(_lh_findallawards_LH_P2_1⁰)] | _  => error⁰}: 816
//│ [LH_P2 [LH_C 'H' [LH_C 'a' [LH_C 'n' [LH_C 's' [LH_N]]]]] [LH_C 23 [LH_C 19 [LH_C 45 [LH_C _lh_competitors_arg1⁰ [LH_C 17 [LH_C 10 [LH_C 5 [LH_C 8 [LH_C 14 [LH_N]]]]]]]]]]]: 738 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_findallawards_LH_P2_0⁰ _lh_findallawards_LH_P2_1⁰ => [LH_P2 _lh_findallawards_LH_P2_0⁰ findawards_lh_₁(_lh_findallawards_LH_P2_1⁰)] | _  => error⁰}: 816
//│ [LH_P2 [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]] [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1⁰ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]]: 769 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_findallawards_LH_P2_0⁰ _lh_findallawards_LH_P2_1⁰ => [LH_P2 _lh_findallawards_LH_P2_0⁰ findawards_lh_₁(_lh_findallawards_LH_P2_1⁰)] | _  => error⁰}: 816
//│ [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]]: 800 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_findallawards_LH_P2_0⁰ _lh_findallawards_LH_P2_1⁰ => [LH_P2 _lh_findallawards_LH_P2_0⁰ findawards_lh_₁(_lh_findallawards_LH_P2_1⁰)] | _  => error⁰}: 816
//│ [LH_N]: 801 --->
//│ 	case ls⁸ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 648
//│ [LH_C [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]] [LH_N]]: 802 --->
//│ 	case ls⁸ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 648
//│ [LH_C [LH_P2 [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]] [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1⁰ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]] [LH_N]]]: 803 --->
//│ 	case ls⁸ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 648
//│ [LH_C [LH_P2 [LH_C 'H' [LH_C 'a' [LH_C 'n' [LH_C 's' [LH_N]]]]] [LH_C 23 [LH_C 19 [LH_C 45 [LH_C _lh_competitors_arg1⁰ [LH_C 17 [LH_C 10 [LH_C 5 [LH_C 8 [LH_C 14 [LH_N]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]] [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1⁰ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]] [LH_N]]]]: 804 --->
//│ 	case ls⁸ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 648
//│ [LH_C [LH_P2 [LH_C 'S' [LH_C 'i' [LH_C 'm' [LH_C 'o' [LH_C 'n' [LH_N]]]]]] [LH_C 35 [LH_C 27 [LH_C 40 [LH_C _lh_competitors_arg1⁰ [LH_C 34 [LH_C 21 [LH_N]]]]]]]] [LH_C [LH_P2 [LH_C 'H' [LH_C 'a' [LH_C 'n' [LH_C 's' [LH_N]]]]] [LH_C 23 [LH_C 19 [LH_C 45 [LH_C _lh_competitors_arg1⁰ [LH_C 17 [LH_C 10 [LH_C 5 [LH_C 8 [LH_C 14 [LH_N]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]] [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1⁰ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]] [LH_N]]]]]: 805 --->
//│ 	case ls⁸ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 648
//│ ------------------
//│ case xs⁰ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₃(t¹, ys⁰)] | LH_N  => ys⁰}: 292 --->
//│ 	[LH_C f¹(h²) map_lh_₅(f¹, t²)]: 304
//│ 	[LH_N]: 305
//│ case ls³ of {LH_C h⁵ t⁵ => if f²(h⁵) then [LH_C h⁵ filter_lh_₁(f², t⁵)] else filter_lh_₁(f², t⁵) | LH_N  => [LH_N]}: 353 --->
//│ 	[LH_C f⁴(h⁸) map_lh_₃(f⁴, t⁸)]: 453
//│ 	[LH_N]: 454
//│ case ls⁴ of {LH_C h⁶ t⁶ => [LH_C f³(h⁶) map_lh_₄(f³, t⁶)] | LH_N  => [LH_N]}: 381 --->
//│ 	[LH_C _lh_rqpart_arg2⁰ qsort_lh_₁(_lh_rqpart_arg1⁰, _lh_rqpart_arg5⁰, _lh_rqpart_arg6⁰)]: 15
//│ 	[LH_C _lh_rqpart_arg2¹ qsort_lh_₁(_lh_rqpart_arg1¹, _lh_rqpart_arg5¹, _lh_rqpart_arg6¹)]: 75
//│ 	[LH_C _lh_rqsort_LH_C_0⁰ _lh_rqsort_arg3⁰]: 126
//│ 	[LH_C _lh_rqsort_LH_C_0¹ _lh_rqsort_arg3¹]: 151
//│ 	[LH_C _lh_qpart_arg2⁰ rqsort_lh_₂(_lh_qpart_arg1⁰, _lh_qpart_arg5⁰, _lh_qpart_arg6⁰)]: 185
//│ 	[LH_C _lh_qsort_LH_C_0⁰ _lh_qsort_arg3⁰]: 249
//│ 	[LH_N]: 367
//│ case _lh_matchIdent¹ of {LH_P2 _lh_awards_LH_P2_0¹ _lh_awards_LH_P2_1¹ => map_lh_₄((fun ps⁰ -> [LH_P2 _lh_awards_LH_P2_0¹ ps⁰]), sort_lh_₁(atleast⁰(_lh_awards_LH_P2_1¹))) | _  => error⁰}: 544 --->
//│ 	[LH_P2 [LH_C 'G' [LH_C 'o' [LH_C 'l' [LH_C 'd' [LH_N]]]]] 70]: 560
//│ 	[LH_P2 [LH_C 'S' [LH_C 'i' [LH_C 'l' [LH_C 'v' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]] 60]: 578
//│ 	[LH_P2 [LH_C 'B' [LH_C 'r' [LH_C 'o' [LH_C 'n' [LH_C 'z' [LH_C 'e' [LH_N]]]]]]] 50]: 597
//│ case ls⁸ of {LH_C h¹⁰ t¹⁰ => [LH_C f⁶(h¹⁰) map_lh_₂(f⁶, t¹⁰)] | LH_N  => [LH_N]}: 648 --->
//│ 	[LH_N]: 801
//│ 	[LH_C [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]] [LH_N]]: 802
//│ 	[LH_C [LH_P2 [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]] [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1⁰ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]] [LH_N]]]: 803
//│ 	[LH_C [LH_P2 [LH_C 'H' [LH_C 'a' [LH_C 'n' [LH_C 's' [LH_N]]]]] [LH_C 23 [LH_C 19 [LH_C 45 [LH_C _lh_competitors_arg1⁰ [LH_C 17 [LH_C 10 [LH_C 5 [LH_C 8 [LH_C 14 [LH_N]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]] [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1⁰ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]] [LH_N]]]]: 804
//│ 	[LH_C [LH_P2 [LH_C 'S' [LH_C 'i' [LH_C 'm' [LH_C 'o' [LH_C 'n' [LH_N]]]]]] [LH_C 35 [LH_C 27 [LH_C 40 [LH_C _lh_competitors_arg1⁰ [LH_C 34 [LH_C 21 [LH_N]]]]]]]] [LH_C [LH_P2 [LH_C 'H' [LH_C 'a' [LH_C 'n' [LH_C 's' [LH_N]]]]] [LH_C 23 [LH_C 19 [LH_C 45 [LH_C _lh_competitors_arg1⁰ [LH_C 17 [LH_C 10 [LH_C 5 [LH_C 8 [LH_C 14 [LH_N]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]] [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1⁰ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]] [LH_C [LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]] [LH_N]]]]]: 805
//│ case _lh_matchIdent⁴ of {LH_P2 _lh_findallawards_LH_P2_0⁰ _lh_findallawards_LH_P2_1⁰ => [LH_P2 _lh_findallawards_LH_P2_0⁰ findawards_lh_₁(_lh_findallawards_LH_P2_1⁰)] | _  => error⁰}: 816 --->
//│ 	[LH_P2 [LH_C 'S' [LH_C 'i' [LH_C 'm' [LH_C 'o' [LH_C 'n' [LH_N]]]]]] [LH_C 35 [LH_C 27 [LH_C 40 [LH_C _lh_competitors_arg1⁰ [LH_C 34 [LH_C 21 [LH_N]]]]]]]]: 709
//│ 	[LH_P2 [LH_C 'H' [LH_C 'a' [LH_C 'n' [LH_C 's' [LH_N]]]]] [LH_C 23 [LH_C 19 [LH_C 45 [LH_C _lh_competitors_arg1⁰ [LH_C 17 [LH_C 10 [LH_C 5 [LH_C 8 [LH_C 14 [LH_N]]]]]]]]]]]: 738
//│ 	[LH_P2 [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]] [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1⁰ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]]: 769
//│ 	[LH_P2 [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]] [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1⁰ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]]: 800
//│ <<<<<<< fusion strategies <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testAwards_nofib_lh_₁(primId⁰(500))
//│ def awards_lh_₁(_lh_awards_arg1¹) = 
//│ 	let sumscores¹ = map_lh_₃((fun p¹ -> [LH_P2 sum_lh_₁(p¹) p¹]), perms_lh_₁(3, _lh_awards_arg1¹))
//│ 	in let atleast¹ = (fun threshold¹ -> filter_lh_₁((fun sum_p¹ -> 
//│ 		let _lh_matchIdent⁸ = sum_p¹
//│ 		in case _lh_matchIdent⁸ of {
//│ 			LH_P2 _lh_awards_LH_P2_0⁰ _lh_awards_LH_P2_1⁰ => (_lh_awards_LH_P2_0⁰ >= threshold¹)
//│ 			| _  => error⁰}), sumscores¹))
//│ 	in let award¹ = (fun name_threshold¹ -> 
//│ 		let _lh_matchIdent⁹ = name_threshold¹
//│ 		in _lh_matchIdent⁹(atleast¹))
//│ 	in mappend_lh_₂(mappend_lh_₁(award¹(
//│ 		let _lh_awards_LH_P2_1² = 70
//│ 		in let _lh_awards_LH_P2_0² = [LH_C 'G' [LH_C 'o' [LH_C 'l' [LH_C 'd' [LH_N]]]]]
//│ 		in (fun atleast² -> map_lh_₄((fun ps¹ -> [LH_P2 _lh_awards_LH_P2_0² ps¹]), sort_lh_₁(atleast²(_lh_awards_LH_P2_1²))))), award¹(
//│ 		let _lh_awards_LH_P2_1³ = 60
//│ 		in let _lh_awards_LH_P2_0³ = [LH_C 'S' [LH_C 'i' [LH_C 'l' [LH_C 'v' [LH_C 'e' [LH_C 'r' [LH_N]]]]]]]
//│ 		in (fun atleast³ -> map_lh_₄((fun ps² -> [LH_P2 _lh_awards_LH_P2_0³ ps²]), sort_lh_₁(atleast³(_lh_awards_LH_P2_1³)))))), award¹(
//│ 		let _lh_awards_LH_P2_1⁴ = 50
//│ 		in let _lh_awards_LH_P2_0⁴ = [LH_C 'B' [LH_C 'r' [LH_C 'o' [LH_C 'n' [LH_C 'z' [LH_C 'e' [LH_N]]]]]]]
//│ 		in (fun atleast⁴ -> map_lh_₄((fun ps³ -> [LH_P2 _lh_awards_LH_P2_0⁴ ps³]), sort_lh_₁(atleast⁴(_lh_awards_LH_P2_1⁴))))))
//│ def compareTuple2_lh_₁(_lh_compareTuple2_arg1¹, _lh_compareTuple2_arg2¹) = case _lh_compareTuple2_arg1¹ of {
//│ 	LH_P2 _lh_compareTuple2_LH_P2_0⁰ _lh_compareTuple2_LH_P2_1⁰ => case _lh_compareTuple2_arg2¹ of {
//│ 		LH_P2 _lh_compareTuple2_LH_P2_0¹ _lh_compareTuple2_LH_P2_1¹ => (_lh_compareTuple2_LH_P2_0⁰ <= _lh_compareTuple2_LH_P2_0¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def competitors_lh_₁(_lh_competitors_arg1¹) = 
//│ 	let t¹⁷ = 	
//│ 		let t¹⁸ = 	
//│ 			let t¹⁹ = 	
//│ 				let t²⁰ = (fun f²⁵ -> [LH_N])
//│ 				in let h²⁰ = 	
//│ 					let _lh_findallawards_LH_P2_1⁴ = [LH_C 9 [LH_C 23 [LH_C 17 [LH_C 54 [LH_C _lh_competitors_arg1¹ [LH_C 41 [LH_C 9 [LH_C 18 [LH_C 14 [LH_N]]]]]]]]]]
//│ 					in let _lh_findallawards_LH_P2_0⁴ = [LH_C 'K' [LH_C 'e' [LH_C 'v' [LH_C 'i' [LH_C 'n' [LH_N]]]]]]
//│ 					in (fun _lh_dummy³ -> [LH_P2 _lh_findallawards_LH_P2_0⁴ findawards_lh_₁(_lh_findallawards_LH_P2_1⁴)])
//│ 				in (fun f²⁴ -> [LH_C f²⁴(h²⁰) map_lh_₂(f²⁴, t²⁰)])
//│ 			in let h¹⁹ = 	
//│ 				let _lh_findallawards_LH_P2_1³ = [LH_C 1 [LH_C 18 [LH_C _lh_competitors_arg1¹ [LH_C 20 [LH_C 21 [LH_C 19 [LH_C 34 [LH_C 8 [LH_C 16 [LH_C 21 [LH_N]]]]]]]]]]]
//│ 				in let _lh_findallawards_LH_P2_0³ = [LH_C 'P' [LH_C 'h' [LH_C 'i' [LH_C 'l' [LH_N]]]]]
//│ 				in (fun _lh_dummy² -> [LH_P2 _lh_findallawards_LH_P2_0³ findawards_lh_₁(_lh_findallawards_LH_P2_1³)])
//│ 			in (fun f²³ -> [LH_C f²³(h¹⁹) map_lh_₂(f²³, t¹⁹)])
//│ 		in let h¹⁸ = 	
//│ 			let _lh_findallawards_LH_P2_1² = [LH_C 23 [LH_C 19 [LH_C 45 [LH_C _lh_competitors_arg1¹ [LH_C 17 [LH_C 10 [LH_C 5 [LH_C 8 [LH_C 14 [LH_N]]]]]]]]]]
//│ 			in let _lh_findallawards_LH_P2_0² = [LH_C 'H' [LH_C 'a' [LH_C 'n' [LH_C 's' [LH_N]]]]]
//│ 			in (fun _lh_dummy¹ -> [LH_P2 _lh_findallawards_LH_P2_0² findawards_lh_₁(_lh_findallawards_LH_P2_1²)])
//│ 		in (fun f²² -> [LH_C f²²(h¹⁸) map_lh_₂(f²², t¹⁸)])
//│ 	in let h¹⁷ = 	
//│ 		let _lh_findallawards_LH_P2_1¹ = [LH_C 35 [LH_C 27 [LH_C 40 [LH_C _lh_competitors_arg1¹ [LH_C 34 [LH_C 21 [LH_N]]]]]]]
//│ 		in let _lh_findallawards_LH_P2_0¹ = [LH_C 'S' [LH_C 'i' [LH_C 'm' [LH_C 'o' [LH_C 'n' [LH_N]]]]]]
//│ 		in (fun _lh_dummy⁰ -> [LH_P2 _lh_findallawards_LH_P2_0¹ findawards_lh_₁(_lh_findallawards_LH_P2_1¹)])
//│ 	in (fun f²¹ -> [LH_C f²¹(h¹⁷) map_lh_₂(f²¹, t¹⁷)])
//│ def delete_lh_₁(_lh_delete_arg1¹, _lh_delete_arg2¹) = case _lh_delete_arg1¹ of {
//│ 	LH_C _lh_delete_LH_C_0⁰ _lh_delete_LH_C_1⁰ => if polyEq⁰(_lh_delete_LH_C_0⁰, _lh_delete_arg2¹) then delete_lh_₁(_lh_delete_LH_C_1⁰, _lh_delete_arg2¹) else [LH_C _lh_delete_LH_C_0⁰ delete_lh_₁(_lh_delete_LH_C_1⁰, _lh_delete_arg2¹)]
//│ 	| LH_N  => [LH_N]
//│ 	| _  => error⁰}
//│ def enumFromTo_lh_₁(a⁴, b³) = if (a⁴ <= b³) then [LH_C a⁴ enumFromTo_lh_₁((a⁴ + 1), b³)] else [LH_N]
//│ def filter_lh_₁(f²⁸, ls¹⁹) = ls¹⁹(f²⁸)
//│ def findallawards_lh_₁(_lh_findallawards_arg1¹) = map_lh_₂((fun name_scores¹ -> 
//│ 	let _lh_matchIdent⁵ = name_scores¹
//│ 	in _lh_matchIdent⁵(99)), _lh_findallawards_arg1¹)
//│ def findawards_lh_₁(_lh_findawards_arg1¹) = 
//│ 	let _lh_matchIdent⁶ = awards_lh_₁(_lh_findawards_arg1¹)
//│ 	in case _lh_matchIdent⁶ of {
//│ 		LH_N  => [LH_N]
//│ 		| LH_C _lh_findawards_LH_C_0⁰ _lh_findawards_LH_C_1⁰ => 
//│ 			let _lh_matchIdent⁷ = _lh_findawards_LH_C_0⁰
//│ 			in case _lh_matchIdent⁷ of {
//│ 				LH_P2 _lh_findawards_LH_P2_0⁰ _lh_findawards_LH_P2_1⁰ => case _lh_findawards_LH_P2_1⁰ of {
//│ 					LH_P2 _lh_findawards_LH_P2_0¹ _lh_findawards_LH_P2_1¹ => [LH_C [LH_P2 _lh_findawards_LH_P2_0⁰ [LH_P2 _lh_findawards_LH_P2_0¹ _lh_findawards_LH_P2_1¹]] findawards_lh_₁(listDiff_lh_₁(_lh_findawards_arg1¹, _lh_findawards_LH_P2_1¹))]
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 		| _  => error⁰}
//│ def foldl_lh_₁(f¹⁵, i¹, ls¹⁴) = case ls¹⁴ of {
//│ 	LH_C h⁹ t⁹ => foldl_lh_₁(f¹⁵, f¹⁵(i¹, h⁹), t⁹)
//│ 	| LH_N  => i¹}
//│ def listDiff_lh_₁ = foldl_lh_₁(delete_lh_₁)
//│ def map_lh_₁(f¹⁸, ls¹⁷) = case ls¹⁷ of {
//│ 	LH_C h¹¹ t¹¹ => [LH_C f¹⁸(h¹¹) map_lh_₁(f¹⁸, t¹¹)]
//│ 	| LH_N  => [LH_N]}
//│ def map_lh_₂(f⁹, ls¹⁰) = ls¹⁰(f⁹)
//│ def map_lh_₃(f¹⁰, ls¹²) = case ls¹² of {
//│ 	LH_C h⁸ t⁸ => 
//│ 		let t¹² = map_lh_₃(f¹⁰, t⁸)
//│ 		in let h¹² = f¹⁰(h⁸)
//│ 		in (fun f¹¹ -> if f¹¹(h¹²) then [LH_C h¹² filter_lh_₁(f¹¹, t¹²)] else filter_lh_₁(f¹¹, t¹²))
//│ 	| LH_N  => (fun f¹² -> [LH_N])}
//│ def map_lh_₄(f¹³, ls¹³) = ls¹³(f¹³)
//│ def map_lh_₅(f²⁶, ls¹⁸) = case ls¹⁸ of {
//│ 	LH_C h² t² => 
//│ 		let t²¹ = map_lh_₅(f²⁶, t²)
//│ 		in let h²¹ = f²⁶(h²)
//│ 		in (fun ys⁶ -> [LH_C h²¹ mappend_lh_₃(t²¹, ys⁶)])
//│ 	| LH_N  => (fun ys⁷ -> ys⁷)}
//│ def map_lh_₆(f¹⁷, ls¹⁶) = case ls¹⁶ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f¹⁷(h⁰) map_lh_₆(f¹⁷, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def mappend_lh_₁(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁(t⁷, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₂(xs³, ys³) = case xs³ of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂(t⁴, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₃(xs⁴, ys⁴) = xs⁴(ys⁴)
//│ def perms_lh_₁(_lh_perms_arg1¹, _lh_perms_arg2¹) = case _lh_perms_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| _  => case _lh_perms_arg1¹ of {
//│ 		1  => map_lh_₆((fun x³ -> [LH_C x³ [LH_N]]), _lh_perms_arg2¹)
//│ 		| _  => case _lh_perms_arg2¹ of {
//│ 			LH_C _lh_perms_LH_C_0⁰ _lh_perms_LH_C_1⁰ => mappend_lh_₃(map_lh_₅((fun x⁴ -> [LH_C _lh_perms_LH_C_0⁰ x⁴]), perms_lh_₁((_lh_perms_arg1¹ - 1), _lh_perms_LH_C_1⁰)), perms_lh_₁(_lh_perms_arg1¹, _lh_perms_LH_C_1⁰))
//│ 			| _  => error⁰}}}
//│ def qpart_lh_₁(_lh_qpart_arg1¹, _lh_qpart_arg2¹, _lh_qpart_arg3¹, _lh_qpart_arg4¹, _lh_qpart_arg5¹, _lh_qpart_arg6¹) = case _lh_qpart_arg3¹ of {
//│ 	LH_N  => rqsort_lh_₁(_lh_qpart_arg1¹, _lh_qpart_arg4¹, 
//│ 		let t²² = rqsort_lh_₂(_lh_qpart_arg1¹, _lh_qpart_arg5¹, _lh_qpart_arg6¹)
//│ 		in let h²² = _lh_qpart_arg2¹
//│ 		in (fun f²⁷ -> [LH_C f²⁷(h²²) map_lh_₄(f²⁷, t²²)]))
//│ 	| LH_C _lh_qpart_LH_C_0⁰ _lh_qpart_LH_C_1⁰ => if _lh_qpart_arg1¹(_lh_qpart_arg2¹, _lh_qpart_LH_C_0⁰) then qpart_lh_₁(_lh_qpart_arg1¹, _lh_qpart_arg2¹, _lh_qpart_LH_C_1⁰, _lh_qpart_arg4¹, [LH_C _lh_qpart_LH_C_0⁰ _lh_qpart_arg5¹], _lh_qpart_arg6¹) else qpart_lh_₁(_lh_qpart_arg1¹, _lh_qpart_arg2¹, _lh_qpart_LH_C_1⁰, [LH_C _lh_qpart_LH_C_0⁰ _lh_qpart_arg4¹], _lh_qpart_arg5¹, _lh_qpart_arg6¹)
//│ 	| _  => error⁰}
//│ def qsort_lh_₁(_lh_qsort_arg1¹, _lh_qsort_arg2¹, _lh_qsort_arg3¹) = case _lh_qsort_arg2¹ of {
//│ 	LH_N  => _lh_qsort_arg3¹
//│ 	| LH_C _lh_qsort_LH_C_0⁰ _lh_qsort_LH_C_1⁰ => case _lh_qsort_LH_C_1⁰ of {
//│ 		LH_N  => 
//│ 			let t¹³ = _lh_qsort_arg3¹
//│ 			in let h¹³ = _lh_qsort_LH_C_0⁰
//│ 			in (fun f¹⁴ -> [LH_C f¹⁴(h¹³) map_lh_₄(f¹⁴, t¹³)])
//│ 		| _  => qpart_lh_₁(_lh_qsort_arg1¹, _lh_qsort_LH_C_0⁰, _lh_qsort_LH_C_1⁰, [LH_N], [LH_N], _lh_qsort_arg3¹)}
//│ 	| _  => error⁰}
//│ def rqpart_lh_₁(_lh_rqpart_arg1³, _lh_rqpart_arg2³, _lh_rqpart_arg3³, _lh_rqpart_arg4³, _lh_rqpart_arg5³, _lh_rqpart_arg6³) = case _lh_rqpart_arg3³ of {
//│ 	LH_N  => qsort_lh_₁(_lh_rqpart_arg1³, _lh_rqpart_arg4³, 
//│ 		let t²³ = qsort_lh_₁(_lh_rqpart_arg1³, _lh_rqpart_arg5³, _lh_rqpart_arg6³)
//│ 		in let h²³ = _lh_rqpart_arg2³
//│ 		in (fun f²⁹ -> [LH_C f²⁹(h²³) map_lh_₄(f²⁹, t²³)]))
//│ 	| LH_C _lh_rqpart_LH_C_0¹ _lh_rqpart_LH_C_1¹ => if _lh_rqpart_arg1³(_lh_rqpart_LH_C_0¹, _lh_rqpart_arg2³) then rqpart_lh_₁(_lh_rqpart_arg1³, _lh_rqpart_arg2³, _lh_rqpart_LH_C_1¹, [LH_C _lh_rqpart_LH_C_0¹ _lh_rqpart_arg4³], _lh_rqpart_arg5³, _lh_rqpart_arg6³) else rqpart_lh_₁(_lh_rqpart_arg1³, _lh_rqpart_arg2³, _lh_rqpart_LH_C_1¹, _lh_rqpart_arg4³, [LH_C _lh_rqpart_LH_C_0¹ _lh_rqpart_arg5³], _lh_rqpart_arg6³)
//│ 	| _  => error⁰}
//│ def rqpart_lh_₂(_lh_rqpart_arg1², _lh_rqpart_arg2², _lh_rqpart_arg3², _lh_rqpart_arg4², _lh_rqpart_arg5², _lh_rqpart_arg6²) = case _lh_rqpart_arg3² of {
//│ 	LH_N  => qsort_lh_₁(_lh_rqpart_arg1², _lh_rqpart_arg4², 
//│ 		let t¹⁴ = qsort_lh_₁(_lh_rqpart_arg1², _lh_rqpart_arg5², _lh_rqpart_arg6²)
//│ 		in let h¹⁴ = _lh_rqpart_arg2²
//│ 		in (fun f¹⁶ -> [LH_C f¹⁶(h¹⁴) map_lh_₄(f¹⁶, t¹⁴)]))
//│ 	| LH_C _lh_rqpart_LH_C_0⁰ _lh_rqpart_LH_C_1⁰ => if _lh_rqpart_arg1²(_lh_rqpart_LH_C_0⁰, _lh_rqpart_arg2²) then rqpart_lh_₂(_lh_rqpart_arg1², _lh_rqpart_arg2², _lh_rqpart_LH_C_1⁰, [LH_C _lh_rqpart_LH_C_0⁰ _lh_rqpart_arg4²], _lh_rqpart_arg5², _lh_rqpart_arg6²) else rqpart_lh_₂(_lh_rqpart_arg1², _lh_rqpart_arg2², _lh_rqpart_LH_C_1⁰, _lh_rqpart_arg4², [LH_C _lh_rqpart_LH_C_0⁰ _lh_rqpart_arg5²], _lh_rqpart_arg6²)
//│ 	| _  => error⁰}
//│ def rqsort_lh_₁(_lh_rqsort_arg1², _lh_rqsort_arg2², _lh_rqsort_arg3²) = case _lh_rqsort_arg2² of {
//│ 	LH_N  => _lh_rqsort_arg3²
//│ 	| LH_C _lh_rqsort_LH_C_0¹ _lh_rqsort_LH_C_1¹ => case _lh_rqsort_LH_C_1¹ of {
//│ 		LH_N  => 
//│ 			let t¹⁵ = _lh_rqsort_arg3²
//│ 			in let h¹⁵ = _lh_rqsort_LH_C_0¹
//│ 			in (fun f¹⁹ -> [LH_C f¹⁹(h¹⁵) map_lh_₄(f¹⁹, t¹⁵)])
//│ 		| _  => rqpart_lh_₁(_lh_rqsort_arg1², _lh_rqsort_LH_C_0¹, _lh_rqsort_LH_C_1¹, [LH_N], [LH_N], _lh_rqsort_arg3²)}
//│ 	| _  => error⁰}
//│ def rqsort_lh_₂(_lh_rqsort_arg1³, _lh_rqsort_arg2³, _lh_rqsort_arg3³) = case _lh_rqsort_arg2³ of {
//│ 	LH_N  => _lh_rqsort_arg3³
//│ 	| LH_C _lh_rqsort_LH_C_0⁰ _lh_rqsort_LH_C_1⁰ => case _lh_rqsort_LH_C_1⁰ of {
//│ 		LH_N  => 
//│ 			let t¹⁶ = _lh_rqsort_arg3³
//│ 			in let h¹⁶ = _lh_rqsort_LH_C_0⁰
//│ 			in (fun f²⁰ -> [LH_C f²⁰(h¹⁶) map_lh_₄(f²⁰, t¹⁶)])
//│ 		| _  => rqpart_lh_₂(_lh_rqsort_arg1³, _lh_rqsort_LH_C_0⁰, _lh_rqsort_LH_C_1⁰, [LH_N], [LH_N], _lh_rqsort_arg3³)}
//│ 	| _  => error⁰}
//│ def sort_lh_₁(_lh_sort_arg1¹) = qsort_lh_₁((fun a³ -> (fun b² -> compareTuple2_lh_₁(a³, b²))), _lh_sort_arg1¹, (fun f⁸ -> [LH_N]))
//│ def sumAux_lh_₁(ls¹¹, a⁵) = case ls¹¹ of {
//│ 	LH_N  => a⁵
//│ 	| LH_C h³ t³ => sumAux_lh_₁(t³, (a⁵ + h³))}
//│ def sum_lh_₁(ls¹⁵) = sumAux_lh_₁(ls¹⁵, 0)
//│ def testAwards_nofib_lh_₁(_lh_testAwards_nofib_arg1¹) = map_lh_₁((fun x⁵ -> findallawards_lh_₁(competitors_lh_₁((x⁵ % 100)))), primId⁰(enumFromTo_lh_₁(1, _lh_testAwards_nofib_arg1¹)))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
