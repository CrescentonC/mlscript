:NewParser
:ParseOnly


:lhInHaskell
:lhGenOCaml
max a b = if a > b then a else b
drop n (h:t) = if n == 0 then (h:t) else (drop (n - 1) t)
snd (_, x) = x
inList x (h:t) = if x == h then True else inList x t
inList x [] = False
algb1 [] yss = map snd yss
algb1 (x:xs) yss = algb1 xs (algb2 x 0 0 yss)
algb2 _ _ _ [] = []
algb2 x k0j1 k1j1 ((y,k0j):ys)
  = let kjcurr = if x == y then k0j1+1 else max k1j1 k0j
    in (y,kjcurr) : (algb2 x k0j kjcurr ys)
algb xs ys = 0 : algb1 xs [ (y,0) | y <- ys ]
findk k km m [] = km
findk k km m ((x,y):xys) =
  if (x+y) >= m then findk (k+1) k (x+y) xys
  else findk (k+1) km m xys
algc m n xs []  = \x -> x
algc m n [x] ys = if inList x ys then (\t -> (x:t)) else (\x -> x)
algc m n xs ys
  = let m2 = (m `div` 2) in
    let xs1 = take m2 xs in
    let xs2 = drop m2 xs in
    let l1 = algb xs1 ys in
    let l2 = reverse (algb (reverse xs2) (reverse ys)) in
    let k = findk 0 0 (0-1) (zip l1 l2) in
    (algc m2 k xs1 (take k ys)) . (algc (m-m2) (n-k) xs2 (drop k ys))
lcss xs ys = algc (length xs) (length ys) xs ys []
lcssMain a b c d e f = lcss [a,b..c] [d,e..f]
testLCSS_nofib _ = lcssMain 1 2 60 30 31 90
testLCSS_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testLCSS_nofib_₀^1865(primId⁰(0))
//│ def algb1_₀(_lh_algb1_arg1², _lh_algb1_arg2²) = case _lh_algb1_arg1² of {
//│ 	LH_N  => map_₀^1281(snd_₀^1282, _lh_algb1_arg2²)
//│ 	| LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_₀^1286(_lh_algb1_LH_C_1², algb2_₀^1289(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²))
//│ 	| _  => error⁰}
//│ def algb1_₁(_lh_algb1_arg1¹, _lh_algb1_arg2¹) = case _lh_algb1_arg1¹ of {
//│ 	LH_N  => map_₁^1192(snd_₁^1193, _lh_algb1_arg2¹)
//│ 	| LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_₁^1197(_lh_algb1_LH_C_1¹, algb2_₁^1200(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹))
//│ 	| _  => error⁰}
//│ def algb2_₀(_lh_algb2_arg1¹, _lh_algb2_arg2¹, _lh_algb2_arg3¹, _lh_algb2_arg4¹) = case _lh_algb2_arg4¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {
//│ 		LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => 
//│ 			let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_₀^1380(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ 			in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀^1389(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def algb2_₁(_lh_algb2_arg1², _lh_algb2_arg2², _lh_algb2_arg3², _lh_algb2_arg4²) = case _lh_algb2_arg4² of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {
//│ 		LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => 
//│ 			let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_₁^1571(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ 			in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁^1580(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def algb_₀(_lh_algb_arg1², _lh_algb_arg2²) = [LH_C 0 algb1_₀^1304(_lh_algb_arg1², 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(_lh_algb_arg2²))]
//│ def algb_₁(_lh_algb_arg1¹, _lh_algb_arg2¹) = [LH_C 0 algb1_₁^1169(_lh_algb_arg1¹, 
//│ 	let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun¹(_lh_algb_arg2¹))]
//│ def algc_₀(_lh_algc_arg1¹, _lh_algc_arg2¹, _lh_algc_arg3¹, _lh_algc_arg4¹) = case _lh_algc_arg4¹ of {
//│ 	LH_N  => (fun x⁴ -> x⁴)
//│ 	| _  => case _lh_algc_arg3¹ of {
//│ 		LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {
//│ 			LH_N  => if inList_₀^1662(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵)
//│ 			| _  => 
//│ 				let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ 				in let xs1² = take_₀^1679(m2², _lh_algc_arg3¹)
//│ 				in let xs2² = drop_₀^1684(m2², _lh_algc_arg3¹)
//│ 				in let l1² = algb_₀^1689(xs1², _lh_algc_arg4¹)
//│ 				in let l2² = reverse_₀^1694(algb_₁^1695(reverse_₁^1696(xs2²), reverse_₂^1700(_lh_algc_arg4¹)))
//│ 				in let k² = findk_₀^1705(0, 0, (0 - 1), zip_₀^1716(l1², l2²))
//│ 				in (fun _lh_funcomp_x² -> algc_₀^1722(m2², k², xs1², take_₁^1729(k², _lh_algc_arg4¹), algc_₀^1735((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁^1750(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}
//│ 		| _  => 
//│ 			let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ 			in let xs1³ = take_₀^1772(m2³, _lh_algc_arg3¹)
//│ 			in let xs2³ = drop_₀^1777(m2³, _lh_algc_arg3¹)
//│ 			in let l1³ = algb_₀^1782(xs1³, _lh_algc_arg4¹)
//│ 			in let l2³ = reverse_₀^1787(algb_₁^1788(reverse_₁^1789(xs2³), reverse_₂^1793(_lh_algc_arg4¹)))
//│ 			in let k³ = findk_₀^1798(0, 0, (0 - 1), zip_₀^1809(l1³, l2³))
//│ 			in (fun _lh_funcomp_x³ -> algc_₀^1815(m2³, k³, xs1³, take_₁^1822(k³, _lh_algc_arg4¹), algc_₀^1828((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁^1843(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}
//│ def drop_₀(_lh_drop_arg1², _lh_drop_arg2²) = case _lh_drop_arg2² of {
//│ 	LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_₀^1417((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²)
//│ 	| _  => error⁰}
//│ def drop_₁(_lh_drop_arg1¹, _lh_drop_arg2¹) = case _lh_drop_arg2¹ of {
//│ 	LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_₁^1335((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def enumFromThenTo_₀(a⁵, t²³, b²) = if (a⁵ <= b²) then [LH_C a⁵ enumFromThenTo_₀^1120(t²³, ((2 * t²³) - a⁵), b²)] else [LH_N]
//│ def enumFromThenTo_₁(a⁶, t²⁴, b³) = if (a⁶ <= b³) then [LH_C a⁶ enumFromThenTo_₁^1147(t²⁴, ((2 * t²⁴) - a⁶), b³)] else [LH_N]
//│ def findk_₀(_lh_findk_arg1¹, _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_arg4¹) = case _lh_findk_arg4¹ of {
//│ 	LH_N  => _lh_findk_arg2¹
//│ 	| LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {
//│ 		LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀^1075((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀^1092((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def inList_₀(_lh_inList_arg1¹, _lh_inList_arg2¹) = case _lh_inList_arg2¹ of {
//│ 	LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_₀^1252(_lh_inList_arg1¹, _lh_inList_LH_C_1¹)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def lcssMain_₀(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹, _lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹) = lcss_₀^1613(enumFromThenTo_₀^1614(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹), enumFromThenTo_₁^1622(_lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹))
//│ def lcss_₀(_lh_lcss_arg1¹, _lh_lcss_arg2¹) = algc_₀^1214(length_₀^1215(_lh_lcss_arg1¹), length_₁^1219(_lh_lcss_arg2¹), _lh_lcss_arg1¹, _lh_lcss_arg2¹, [LH_N])
//│ def length_₀(ls³⁰) = case ls³⁰ of {
//│ 	LH_C h²⁸ t³³ => (1 + length_₀^1650(t³³))
//│ 	| LH_N  => 0}
//│ def length_₁(ls²³) = case ls²³ of {
//│ 	LH_C h²² t²⁷ => (1 + length_₁^1460(t²⁷))
//│ 	| LH_N  => 0}
//│ def map_₀(f¹², ls²¹) = case ls²¹ of {
//│ 	LH_C h²¹ t²⁶ => [LH_C f¹²(h²¹) map_₀^1435(f¹², t²⁶)]
//│ 	| LH_N  => [LH_N]}
//│ def map_₁(f¹³, ls²⁹) = case ls²⁹ of {
//│ 	LH_C h²⁷ t³² => [LH_C f¹³(h²⁷) map_₁^1603(f¹³, t³²)]
//│ 	| LH_N  => [LH_N]}
//│ def max_₀(_lh_max_arg1², _lh_max_arg2²) = if (_lh_max_arg1² > _lh_max_arg2²) then _lh_max_arg1² else _lh_max_arg2²
//│ def max_₁(_lh_max_arg1¹, _lh_max_arg2¹) = if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ def reverse_helper_₀(ls²⁰, a⁷) = case ls²⁰ of {
//│ 	LH_C h²⁰ t²⁵ => reverse_helper_₀^1356(t²⁵, [LH_C h²⁰ a⁷])
//│ 	| LH_N  => a⁷}
//│ def reverse_helper_₁(ls²⁶, a⁸) = case ls²⁶ of {
//│ 	LH_C h²⁴ t²⁹ => reverse_helper_₁^1512(t²⁹, [LH_C h²⁴ a⁸])
//│ 	| LH_N  => a⁸}
//│ def reverse_helper_₂(ls²⁸, a⁹) = case ls²⁸ of {
//│ 	LH_C h²⁶ t³¹ => reverse_helper_₂^1547(t³¹, [LH_C h²⁶ a⁹])
//│ 	| LH_N  => a⁹}
//│ def reverse_₀(ls¹⁹) = reverse_helper_₀^1349(ls¹⁹, [LH_N])
//│ def reverse_₁(ls²²) = reverse_helper_₁^1445(ls²², [LH_N])
//│ def reverse_₂(ls²⁴) = reverse_helper_₂^1477(ls²⁴, [LH_N])
//│ def snd_₀(_lh_snd_arg1¹) = case _lh_snd_arg1¹ of {
//│ 	LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 	| _  => error⁰}
//│ def snd_₁(_lh_snd_arg1²) = case _lh_snd_arg1² of {
//│ 	LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1²
//│ 	| _  => error⁰}
//│ def take_₀(n⁵, ls²⁷) = if (n⁵ > 0) then case ls²⁷ of {
//│ 	LH_C h²⁵ t³⁰ => [LH_C h²⁵ take_₀^1530((n⁵ - 1), t³⁰)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_₁(n⁴, ls²⁵) = if (n⁴ > 0) then case ls²⁵ of {
//│ 	LH_C h²³ t²⁸ => [LH_C h²³ take_₁^1490((n⁴ - 1), t²⁸)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testLCSS_nofib_₀(_lh_testLCSS_nofib_arg1¹) = lcssMain_₀^1231(1, 2, 60, 30, 31, 90)
//│ def zip_₀(xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C hx⁸ tx⁸ => case ys⁹ of {
//│ 		LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀^1268(tx⁸, ty⁸)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec algb1__d0 _lh_algb1_arg1_2 _lh_algb1_arg2_2 =
//│ 		  (match _lh_algb1_arg1_2 with
//│ 		    | `LH_N -> 
//│ 		      ((map__d0 snd__d0) _lh_algb1_arg2_2)
//│ 		    | `LH_C(_lh_algb1_LH_C_0_2, _lh_algb1_LH_C_1_2) -> 
//│ 		      ((algb1__d0 _lh_algb1_LH_C_1_2) ((((algb2__d0 _lh_algb1_LH_C_0_2) 0) 0) _lh_algb1_arg2_2))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and algb1__d1 _lh_algb1_arg1_1 _lh_algb1_arg2_1 =
//│ 		  (match _lh_algb1_arg1_1 with
//│ 		    | `LH_N -> 
//│ 		      ((map__d1 snd__d1) _lh_algb1_arg2_1)
//│ 		    | `LH_C(_lh_algb1_LH_C_0_1, _lh_algb1_LH_C_1_1) -> 
//│ 		      ((algb1__d1 _lh_algb1_LH_C_1_1) ((((algb2__d1 _lh_algb1_LH_C_0_1) 0) 0) _lh_algb1_arg2_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and algb2__d0 _lh_algb2_arg1_1 _lh_algb2_arg2_1 _lh_algb2_arg3_1 _lh_algb2_arg4_1 =
//│ 		  (match _lh_algb2_arg4_1 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_algb2_LH_C_0_1, _lh_algb2_LH_C_1_1) -> 
//│ 		      (match _lh_algb2_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_algb2_LH_P2_0_1, _lh_algb2_LH_P2_1_1) -> 
//│ 		          (let rec kjcurr_1 = (if (_lh_algb2_arg1_1 = _lh_algb2_LH_P2_0_1) then
//│ 		            (_lh_algb2_arg2_1 + 1)
//│ 		          else
//│ 		            ((max__d0 _lh_algb2_arg3_1) _lh_algb2_LH_P2_1_1)) in
//│ 		            (`LH_C((`LH_P2(_lh_algb2_LH_P2_0_1, kjcurr_1)), ((((algb2__d0 _lh_algb2_arg1_1) _lh_algb2_LH_P2_1_1) kjcurr_1) _lh_algb2_LH_C_1_1))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and algb2__d1 _lh_algb2_arg1_2 _lh_algb2_arg2_2 _lh_algb2_arg3_2 _lh_algb2_arg4_2 =
//│ 		  (match _lh_algb2_arg4_2 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_algb2_LH_C_0_2, _lh_algb2_LH_C_1_2) -> 
//│ 		      (match _lh_algb2_LH_C_0_2 with
//│ 		        | `LH_P2(_lh_algb2_LH_P2_0_2, _lh_algb2_LH_P2_1_2) -> 
//│ 		          (let rec kjcurr_2 = (if (_lh_algb2_arg1_2 = _lh_algb2_LH_P2_0_2) then
//│ 		            (_lh_algb2_arg2_2 + 1)
//│ 		          else
//│ 		            ((max__d1 _lh_algb2_arg3_2) _lh_algb2_LH_P2_1_2)) in
//│ 		            (`LH_C((`LH_P2(_lh_algb2_LH_P2_0_2, kjcurr_2)), ((((algb2__d1 _lh_algb2_arg1_2) _lh_algb2_LH_P2_1_2) kjcurr_2) _lh_algb2_LH_C_1_2))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and algb__d0 _lh_algb_arg1_2 _lh_algb_arg2_2 =
//│ 		  (`LH_C(0, ((algb1__d0 _lh_algb_arg1_2) (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		    (match _lh_listcomp_fun_para_2 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		        (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_2, 0)), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_2 _lh_algb_arg2_2)))))
//│ 		and algb__d1 _lh_algb_arg1_1 _lh_algb_arg2_1 =
//│ 		  (`LH_C(0, ((algb1__d1 _lh_algb_arg1_1) (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		    (match _lh_listcomp_fun_para_1 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		        (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_1, 0)), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_1 _lh_algb_arg2_1)))))
//│ 		and algc__d0 _lh_algc_arg1_1 _lh_algc_arg2_1 _lh_algc_arg3_1 _lh_algc_arg4_1 =
//│ 		  (match _lh_algc_arg4_1 with
//│ 		    | `LH_N -> 
//│ 		      (fun x_4 -> 
//│ 		        x_4)
//│ 		    | _ -> 
//│ 		      (match _lh_algc_arg3_1 with
//│ 		        | `LH_C(_lh_algc_LH_C_0_1, _lh_algc_LH_C_1_1) -> 
//│ 		          (match _lh_algc_LH_C_1_1 with
//│ 		            | `LH_N -> 
//│ 		              (if ((inList__d0 _lh_algc_LH_C_0_1) _lh_algc_arg4_1) then
//│ 		                (fun t_3_4 -> 
//│ 		                  (`LH_C(_lh_algc_LH_C_0_1, t_3_4)))
//│ 		              else
//│ 		                (fun x_5 -> 
//│ 		                  x_5))
//│ 		            | _ -> 
//│ 		              (let rec m2_2 = (_lh_algc_arg1_1 / 2) in
//│ 		                (let rec xs1_2 = ((take__d0 m2_2) _lh_algc_arg3_1) in
//│ 		                  (let rec xs2_2 = ((drop__d0 m2_2) _lh_algc_arg3_1) in
//│ 		                    (let rec l1_2 = ((algb__d0 xs1_2) _lh_algc_arg4_1) in
//│ 		                      (let rec l2_2 = (reverse__d0 ((algb__d1 (reverse__d1 xs2_2)) (reverse__d2 _lh_algc_arg4_1))) in
//│ 		                        (let rec k_2 = ((((findk__d0 0) 0) (0 - 1)) ((zip__d0 l1_2) l2_2)) in
//│ 		                          (fun _lh_funcomp_x_2 -> 
//│ 		                            (((((algc__d0 m2_2) k_2) xs1_2) ((take__d1 k_2) _lh_algc_arg4_1)) (((((algc__d0 (_lh_algc_arg1_1 - m2_2)) (_lh_algc_arg2_1 - k_2)) xs2_2) ((drop__d1 k_2) _lh_algc_arg4_1)) _lh_funcomp_x_2))))))))))
//│ 		        | _ -> 
//│ 		          (let rec m2_3 = (_lh_algc_arg1_1 / 2) in
//│ 		            (let rec xs1_3 = ((take__d0 m2_3) _lh_algc_arg3_1) in
//│ 		              (let rec xs2_3 = ((drop__d0 m2_3) _lh_algc_arg3_1) in
//│ 		                (let rec l1_3 = ((algb__d0 xs1_3) _lh_algc_arg4_1) in
//│ 		                  (let rec l2_3 = (reverse__d0 ((algb__d1 (reverse__d1 xs2_3)) (reverse__d2 _lh_algc_arg4_1))) in
//│ 		                    (let rec k_3 = ((((findk__d0 0) 0) (0 - 1)) ((zip__d0 l1_3) l2_3)) in
//│ 		                      (fun _lh_funcomp_x_3 -> 
//│ 		                        (((((algc__d0 m2_3) k_3) xs1_3) ((take__d1 k_3) _lh_algc_arg4_1)) (((((algc__d0 (_lh_algc_arg1_1 - m2_3)) (_lh_algc_arg2_1 - k_3)) xs2_3) ((drop__d1 k_3) _lh_algc_arg4_1)) _lh_funcomp_x_3)))))))))))
//│ 		and drop__d0 _lh_drop_arg1_2 _lh_drop_arg2_2 =
//│ 		  (match _lh_drop_arg2_2 with
//│ 		    | `LH_C(_lh_drop_LH_C_0_2, _lh_drop_LH_C_1_2) -> 
//│ 		      (if (_lh_drop_arg1_2 = 0) then
//│ 		        (`LH_C(_lh_drop_LH_C_0_2, _lh_drop_LH_C_1_2))
//│ 		      else
//│ 		        ((drop__d0 (_lh_drop_arg1_2 - 1)) _lh_drop_LH_C_1_2))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and drop__d1 _lh_drop_arg1_1 _lh_drop_arg2_1 =
//│ 		  (match _lh_drop_arg2_1 with
//│ 		    | `LH_C(_lh_drop_LH_C_0_1, _lh_drop_LH_C_1_1) -> 
//│ 		      (if (_lh_drop_arg1_1 = 0) then
//│ 		        (`LH_C(_lh_drop_LH_C_0_1, _lh_drop_LH_C_1_1))
//│ 		      else
//│ 		        ((drop__d1 (_lh_drop_arg1_1 - 1)) _lh_drop_LH_C_1_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and enumFromThenTo__d0 a_5 t_2_3 b_2 =
//│ 		  (if (a_5 <= b_2) then
//│ 		    (`LH_C(a_5, (((enumFromThenTo__d0 t_2_3) ((2 * t_2_3) - a_5)) b_2)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and enumFromThenTo__d1 a_6 t_2_4 b_3 =
//│ 		  (if (a_6 <= b_3) then
//│ 		    (`LH_C(a_6, (((enumFromThenTo__d1 t_2_4) ((2 * t_2_4) - a_6)) b_3)))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and findk__d0 _lh_findk_arg1_1 _lh_findk_arg2_1 _lh_findk_arg3_1 _lh_findk_arg4_1 =
//│ 		  (match _lh_findk_arg4_1 with
//│ 		    | `LH_N -> 
//│ 		      _lh_findk_arg2_1
//│ 		    | `LH_C(_lh_findk_LH_C_0_1, _lh_findk_LH_C_1_1) -> 
//│ 		      (match _lh_findk_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_findk_LH_P2_0_1, _lh_findk_LH_P2_1_1) -> 
//│ 		          (if ((_lh_findk_LH_P2_0_1 + _lh_findk_LH_P2_1_1) >= _lh_findk_arg3_1) then
//│ 		            ((((findk__d0 (_lh_findk_arg1_1 + 1)) _lh_findk_arg1_1) (_lh_findk_LH_P2_0_1 + _lh_findk_LH_P2_1_1)) _lh_findk_LH_C_1_1)
//│ 		          else
//│ 		            ((((findk__d0 (_lh_findk_arg1_1 + 1)) _lh_findk_arg2_1) _lh_findk_arg3_1) _lh_findk_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and inList__d0 _lh_inList_arg1_1 _lh_inList_arg2_1 =
//│ 		  (match _lh_inList_arg2_1 with
//│ 		    | `LH_C(_lh_inList_LH_C_0_1, _lh_inList_LH_C_1_1) -> 
//│ 		      (if (_lh_inList_arg1_1 = _lh_inList_LH_C_0_1) then
//│ 		        true
//│ 		      else
//│ 		        ((inList__d0 _lh_inList_arg1_1) _lh_inList_LH_C_1_1))
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and lcssMain__d0 _lh_lcssMain_arg1_1 _lh_lcssMain_arg2_1 _lh_lcssMain_arg3_1 _lh_lcssMain_arg4_1 _lh_lcssMain_arg5_1 _lh_lcssMain_arg6_1 =
//│ 		  ((lcss__d0 (((enumFromThenTo__d0 _lh_lcssMain_arg1_1) _lh_lcssMain_arg2_1) _lh_lcssMain_arg3_1)) (((enumFromThenTo__d1 _lh_lcssMain_arg4_1) _lh_lcssMain_arg5_1) _lh_lcssMain_arg6_1))
//│ 		and lcss__d0 _lh_lcss_arg1_1 _lh_lcss_arg2_1 =
//│ 		  (((((algc__d0 (length__d0 _lh_lcss_arg1_1)) (length__d1 _lh_lcss_arg2_1)) _lh_lcss_arg1_1) _lh_lcss_arg2_1) (`LH_N))
//│ 		and length__d0 ls_3_0 =
//│ 		  (match ls_3_0 with
//│ 		    | `LH_C(h_2_8, t_3_3) -> 
//│ 		      (1 + (length__d0 t_3_3))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and length__d1 ls_2_3 =
//│ 		  (match ls_2_3 with
//│ 		    | `LH_C(h_2_2, t_2_7) -> 
//│ 		      (1 + (length__d1 t_2_7))
//│ 		    | `LH_N -> 
//│ 		      0)
//│ 		and map__d0 f_1_2 ls_2_1 =
//│ 		  (match ls_2_1 with
//│ 		    | `LH_C(h_2_1, t_2_6) -> 
//│ 		      (`LH_C((f_1_2 h_2_1), ((map__d0 f_1_2) t_2_6)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and map__d1 f_1_3 ls_2_9 =
//│ 		  (match ls_2_9 with
//│ 		    | `LH_C(h_2_7, t_3_2) -> 
//│ 		      (`LH_C((f_1_3 h_2_7), ((map__d1 f_1_3) t_3_2)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N))
//│ 		and max__d0 _lh_max_arg1_2 _lh_max_arg2_2 =
//│ 		  (if (_lh_max_arg1_2 > _lh_max_arg2_2) then
//│ 		    _lh_max_arg1_2
//│ 		  else
//│ 		    _lh_max_arg2_2)
//│ 		and max__d1 _lh_max_arg1_1 _lh_max_arg2_1 =
//│ 		  (if (_lh_max_arg1_1 > _lh_max_arg2_1) then
//│ 		    _lh_max_arg1_1
//│ 		  else
//│ 		    _lh_max_arg2_1)
//│ 		and reverse_helper__d0 ls_2_0 a_7 =
//│ 		  (match ls_2_0 with
//│ 		    | `LH_C(h_2_0, t_2_5) -> 
//│ 		      ((reverse_helper__d0 t_2_5) (`LH_C(h_2_0, a_7)))
//│ 		    | `LH_N -> 
//│ 		      a_7)
//│ 		and reverse_helper__d1 ls_2_6 a_8 =
//│ 		  (match ls_2_6 with
//│ 		    | `LH_C(h_2_4, t_2_9) -> 
//│ 		      ((reverse_helper__d1 t_2_9) (`LH_C(h_2_4, a_8)))
//│ 		    | `LH_N -> 
//│ 		      a_8)
//│ 		and reverse_helper__d2 ls_2_8 a_9 =
//│ 		  (match ls_2_8 with
//│ 		    | `LH_C(h_2_6, t_3_1) -> 
//│ 		      ((reverse_helper__d2 t_3_1) (`LH_C(h_2_6, a_9)))
//│ 		    | `LH_N -> 
//│ 		      a_9)
//│ 		and reverse__d0 ls_1_9 =
//│ 		  ((reverse_helper__d0 ls_1_9) (`LH_N))
//│ 		and reverse__d1 ls_2_2 =
//│ 		  ((reverse_helper__d1 ls_2_2) (`LH_N))
//│ 		and reverse__d2 ls_2_4 =
//│ 		  ((reverse_helper__d2 ls_2_4) (`LH_N))
//│ 		and snd__d0 _lh_snd_arg1_1 =
//│ 		  (match _lh_snd_arg1_1 with
//│ 		    | `LH_P2(_lh_snd_LH_P2_0_1, _lh_snd_LH_P2_1_1) -> 
//│ 		      _lh_snd_LH_P2_1_1
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and snd__d1 _lh_snd_arg1_2 =
//│ 		  (match _lh_snd_arg1_2 with
//│ 		    | `LH_P2(_lh_snd_LH_P2_0_2, _lh_snd_LH_P2_1_2) -> 
//│ 		      _lh_snd_LH_P2_1_2
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and take__d0 n_5 ls_2_7 =
//│ 		  (if (n_5 > 0) then
//│ 		    (match ls_2_7 with
//│ 		      | `LH_C(h_2_5, t_3_0) -> 
//│ 		        (`LH_C(h_2_5, ((take__d0 (n_5 - 1)) t_3_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and take__d1 n_4 ls_2_5 =
//│ 		  (if (n_4 > 0) then
//│ 		    (match ls_2_5 with
//│ 		      | `LH_C(h_2_3, t_2_8) -> 
//│ 		        (`LH_C(h_2_3, ((take__d1 (n_4 - 1)) t_2_8)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N))
//│ 		and testLCSS_nofib__d0 _lh_testLCSS_nofib_arg1_1 =
//│ 		  ((((((lcssMain__d0 1) 2) 60) 30) 31) 90)
//│ 		and zip__d0 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(hx_8, tx_8) -> 
//│ 		      (match ys_9 with
//│ 		        | `LH_C(hy_8, ty_8) -> 
//│ 		          (`LH_C((`LH_P2(hx_8, hy_8)), ((zip__d0 tx_8) ty_8)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		(testLCSS_nofib__d0 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C a⁵ enumFromThenTo_₀(t²³, ((2 * t²³) - a⁵), b²)]: 1135 --->
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 1428
//│ 	case ls²⁶ of {LH_C h²⁴ t²⁹ => reverse_helper_₁(t²⁹, [LH_C h²⁴ a⁸]) | LH_N  => a⁸}: 1520
//│ 	case ls²⁷ of {LH_C h²⁵ t³⁰ => [LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)] | LH_N  => [LH_N]}: 1541
//│ 	case ls³⁰ of {LH_C h²⁸ t³³ => (1 + length_₀(t³³)) | LH_N  => 0}: 1655
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1766
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1859
//│ [LH_N]: 1136 --->
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 1428
//│ 	case ls²⁶ of {LH_C h²⁴ t²⁹ => reverse_helper_₁(t²⁹, [LH_C h²⁴ a⁸]) | LH_N  => a⁸}: 1520
//│ 	case ls²⁷ of {LH_C h²⁵ t³⁰ => [LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)] | LH_N  => [LH_N]}: 1541
//│ 	case ls³⁰ of {LH_C h²⁸ t³³ => (1 + length_₀(t³³)) | LH_N  => 0}: 1655
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1766
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1859
//│ [LH_C a⁶ enumFromThenTo_₁(t²⁴, ((2 * t²⁴) - a⁶), b³)]: 1162 --->
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1260
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1316
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 1346
//│ 	case ls²³ of {LH_C h²² t²⁷ => (1 + length_₁(t²⁷)) | LH_N  => 0}: 1465
//│ 	case ls²⁵ of {LH_C h²³ t²⁸ => [LH_C h²³ take_₁((n⁴ - 1), t²⁸)] | LH_N  => [LH_N]}: 1501
//│ 	case ls²⁸ of {LH_C h²⁶ t³¹ => reverse_helper_₂(t³¹, [LH_C h²⁶ a⁹]) | LH_N  => a⁹}: 1555
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x⁴ -> x⁴) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1860
//│ [LH_N]: 1163 --->
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1260
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1316
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 1346
//│ 	case ls²³ of {LH_C h²² t²⁷ => (1 + length_₁(t²⁷)) | LH_N  => 0}: 1465
//│ 	case ls²⁵ of {LH_C h²³ t²⁸ => [LH_C h²³ take_₁((n⁴ - 1), t²⁸)] | LH_N  => [LH_N]}: 1501
//│ 	case ls²⁸ of {LH_C h²⁶ t³¹ => reverse_helper_₂(t³¹, [LH_C h²⁶ a⁹]) | LH_N  => a⁹}: 1555
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x⁴ -> x⁴) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1860
//│ [LH_P2 _lh_listcomp_fun_ls_h¹ 0]: 1175 --->
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 1509
//│ 	case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰}: 1592
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1179 --->
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1594
//│ 	case ls²⁹ of {LH_C h²⁷ t³² => [LH_C f¹³(h²⁷) map_₁(f¹³, t³²)] | LH_N  => [LH_N]}: 1610
//│ [LH_N]: 1180 --->
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1594
//│ 	case ls²⁹ of {LH_C h²⁷ t³² => [LH_C f¹³(h²⁷) map_₁(f¹³, t³²)] | LH_N  => [LH_N]}: 1610
//│ [LH_C 0 algb1_₁(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 1188 --->
//│ 	case ls²⁰ of {LH_C h²⁰ t²⁵ => reverse_helper_₀(t²⁵, [LH_C h²⁰ a⁷]) | LH_N  => a⁷}: 1364
//│ [LH_P2 hx⁸ hy⁸]: 1267 --->
//│ 	case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰}: 1107
//│ [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)]: 1273 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 1109
//│ [LH_N]: 1274 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 1109
//│ [LH_N]: 1276 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 1109
//│ [LH_P2 _lh_listcomp_fun_ls_h² 0]: 1310 --->
//│ 	case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_₀(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰}: 1401
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 1454
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 1314 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_₀(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1403
//│ 	case ls²¹ of {LH_C h²¹ t²⁶ => [LH_C f¹²(h²¹) map_₀(f¹², t²⁶)] | LH_N  => [LH_N]}: 1442
//│ [LH_N]: 1315 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_₀(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1403
//│ 	case ls²¹ of {LH_C h²¹ t²⁶ => [LH_C f¹²(h²¹) map_₀(f¹², t²⁶)] | LH_N  => [LH_N]}: 1442
//│ [LH_C 0 algb1_₀(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 1323 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1277
//│ [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 1334 --->
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1260
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1316
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 1346
//│ 	case ls²⁵ of {LH_C h²³ t²⁸ => [LH_C h²³ take_₁((n⁴ - 1), t²⁸)] | LH_N  => [LH_N]}: 1501
//│ 	case ls²⁸ of {LH_C h²⁶ t³¹ => reverse_helper_₂(t³¹, [LH_C h²⁶ a⁹]) | LH_N  => a⁹}: 1555
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x⁴ -> x⁴) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1860
//│ [LH_N]: 1352 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]}: 1275
//│ [LH_C h²⁰ a⁷]: 1361 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]}: 1275
//│ [LH_N]: 1368 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_₀(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1403
//│ 	case ls²¹ of {LH_C h²¹ t²⁶ => [LH_C f¹²(h²¹) map_₀(f¹², t²⁶)] | LH_N  => [LH_N]}: 1442
//│ [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹]: 1388 --->
//│ 	case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_₀(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰}: 1401
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 1454
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]: 1398 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_₀(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1403
//│ 	case ls²¹ of {LH_C h²¹ t²⁶ => [LH_C f¹²(h²¹) map_₀(f¹², t²⁶)] | LH_N  => [LH_N]}: 1442
//│ [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 1416 --->
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 1428
//│ 	case ls²⁶ of {LH_C h²⁴ t²⁹ => reverse_helper_₁(t²⁹, [LH_C h²⁴ a⁸]) | LH_N  => a⁸}: 1520
//│ 	case ls²⁷ of {LH_C h²⁵ t³⁰ => [LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)] | LH_N  => [LH_N]}: 1541
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1859
//│ [LH_C f¹²(h²¹) map_₀(f¹², t²⁶)]: 1440 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1277
//│ [LH_N]: 1441 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1277
//│ [LH_N]: 1448 --->
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_₁(snd_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_₁(_lh_algb1_LH_C_1¹, algb2_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 1211
//│ [LH_N]: 1480 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 1181
//│ [LH_C h²³ take_₁((n⁴ - 1), t²⁸)]: 1499 --->
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1260
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1316
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 1346
//│ 	case ls²⁵ of {LH_C h²³ t²⁸ => [LH_C h²³ take_₁((n⁴ - 1), t²⁸)] | LH_N  => [LH_N]}: 1501
//│ 	case ls²⁸ of {LH_C h²⁶ t³¹ => reverse_helper_₂(t³¹, [LH_C h²⁶ a⁹]) | LH_N  => a⁹}: 1555
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x⁴ -> x⁴) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1860
//│ [LH_N]: 1500 --->
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1260
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1316
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 1346
//│ 	case ls²⁵ of {LH_C h²³ t²⁸ => [LH_C h²³ take_₁((n⁴ - 1), t²⁸)] | LH_N  => [LH_N]}: 1501
//│ 	case ls²⁸ of {LH_C h²⁶ t³¹ => reverse_helper_₂(t³¹, [LH_C h²⁶ a⁹]) | LH_N  => a⁹}: 1555
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x⁴ -> x⁴) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1860
//│ [LH_N]: 1502 --->
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1260
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1316
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 1346
//│ 	case ls²⁵ of {LH_C h²³ t²⁸ => [LH_C h²³ take_₁((n⁴ - 1), t²⁸)] | LH_N  => [LH_N]}: 1501
//│ 	case ls²⁸ of {LH_C h²⁶ t³¹ => reverse_helper_₂(t³¹, [LH_C h²⁶ a⁹]) | LH_N  => a⁹}: 1555
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x⁴ -> x⁴) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1860
//│ [LH_C h²⁴ a⁸]: 1517 --->
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_₁(snd_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_₁(_lh_algb1_LH_C_1¹, algb2_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 1211
//│ [LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)]: 1539 --->
//│ 	case _lh_algb1_arg1² of {LH_N  => map_₀(snd_₀, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_₀(_lh_algb1_LH_C_1², algb2_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 1300
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 1428
//│ 	case ls²⁶ of {LH_C h²⁴ t²⁹ => reverse_helper_₁(t²⁹, [LH_C h²⁴ a⁸]) | LH_N  => a⁸}: 1520
//│ 	case ls²⁷ of {LH_C h²⁵ t³⁰ => [LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)] | LH_N  => [LH_N]}: 1541
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1766
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1859
//│ [LH_N]: 1540 --->
//│ 	case _lh_algb1_arg1² of {LH_N  => map_₀(snd_₀, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_₀(_lh_algb1_LH_C_1², algb2_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 1300
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 1428
//│ 	case ls²⁶ of {LH_C h²⁴ t²⁹ => reverse_helper_₁(t²⁹, [LH_C h²⁴ a⁸]) | LH_N  => a⁸}: 1520
//│ 	case ls²⁷ of {LH_C h²⁵ t³⁰ => [LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)] | LH_N  => [LH_N]}: 1541
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1766
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1859
//│ [LH_N]: 1542 --->
//│ 	case _lh_algb1_arg1² of {LH_N  => map_₀(snd_₀, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_₀(_lh_algb1_LH_C_1², algb2_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 1300
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 1428
//│ 	case ls²⁶ of {LH_C h²⁴ t²⁹ => reverse_helper_₁(t²⁹, [LH_C h²⁴ a⁸]) | LH_N  => a⁸}: 1520
//│ 	case ls²⁷ of {LH_C h²⁵ t³⁰ => [LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)] | LH_N  => [LH_N]}: 1541
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1766
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1859
//│ [LH_C h²⁶ a⁹]: 1552 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 1181
//│ [LH_N]: 1559 --->
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1594
//│ 	case ls²⁹ of {LH_C h²⁷ t³² => [LH_C f¹³(h²⁷) map_₁(f¹³, t³²)] | LH_N  => [LH_N]}: 1610
//│ [LH_P2 _lh_algb2_LH_P2_0² kjcurr²]: 1579 --->
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 1509
//│ 	case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰}: 1592
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]: 1589 --->
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1594
//│ 	case ls²⁹ of {LH_C h²⁷ t³² => [LH_C f¹³(h²⁷) map_₁(f¹³, t³²)] | LH_N  => [LH_N]}: 1610
//│ [LH_C f¹³(h²⁷) map_₁(f¹³, t³²)]: 1608 --->
//│ 	case ls²⁰ of {LH_C h²⁰ t²⁵ => reverse_helper_₀(t²⁵, [LH_C h²⁰ a⁷]) | LH_N  => a⁷}: 1364
//│ [LH_N]: 1609 --->
//│ 	case ls²⁰ of {LH_C h²⁰ t²⁵ => reverse_helper_₀(t²⁵, [LH_C h²⁰ a⁷]) | LH_N  => a⁷}: 1364
//│ ------------------
//│ case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰}: 1107 --->
//│ 	[LH_P2 hx⁸ hy⁸]: 1267
//│ case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 1109 --->
//│ 	[LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)]: 1273
//│ 	[LH_N]: 1274
//│ 	[LH_N]: 1276
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 1181 --->
//│ 	[LH_N]: 1480
//│ 	[LH_C h²⁶ a⁹]: 1552
//│ case _lh_algb1_arg1¹ of {LH_N  => map_₁(snd_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_₁(_lh_algb1_LH_C_1¹, algb2_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 1211 --->
//│ 	[LH_N]: 1448
//│ 	[LH_C h²⁴ a⁸]: 1517
//│ case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1260 --->
//│ 	[LH_C a⁶ enumFromThenTo_₁(t²⁴, ((2 * t²⁴) - a⁶), b³)]: 1162
//│ 	[LH_N]: 1163
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 1334
//│ 	[LH_C h²³ take_₁((n⁴ - 1), t²⁸)]: 1499
//│ 	[LH_N]: 1500
//│ 	[LH_N]: 1502
//│ case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]}: 1275 --->
//│ 	[LH_N]: 1352
//│ 	[LH_C h²⁰ a⁷]: 1361
//│ case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1277 --->
//│ 	[LH_C 0 algb1_₀(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 1323
//│ 	[LH_C f¹²(h²¹) map_₀(f¹², t²⁶)]: 1440
//│ 	[LH_N]: 1441
//│ case _lh_algb1_arg1² of {LH_N  => map_₀(snd_₀, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_₀(_lh_algb1_LH_C_1², algb2_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 1300 --->
//│ 	[LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)]: 1539
//│ 	[LH_N]: 1540
//│ 	[LH_N]: 1542
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 1316 --->
//│ 	[LH_C a⁶ enumFromThenTo_₁(t²⁴, ((2 * t²⁴) - a⁶), b³)]: 1162
//│ 	[LH_N]: 1163
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 1334
//│ 	[LH_C h²³ take_₁((n⁴ - 1), t²⁸)]: 1499
//│ 	[LH_N]: 1500
//│ 	[LH_N]: 1502
//│ case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 1346 --->
//│ 	[LH_C a⁶ enumFromThenTo_₁(t²⁴, ((2 * t²⁴) - a⁶), b³)]: 1162
//│ 	[LH_N]: 1163
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 1334
//│ 	[LH_C h²³ take_₁((n⁴ - 1), t²⁸)]: 1499
//│ 	[LH_N]: 1500
//│ 	[LH_N]: 1502
//│ case ls²⁰ of {LH_C h²⁰ t²⁵ => reverse_helper_₀(t²⁵, [LH_C h²⁰ a⁷]) | LH_N  => a⁷}: 1364 --->
//│ 	[LH_C 0 algb1_₁(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 1188
//│ 	[LH_C f¹³(h²⁷) map_₁(f¹³, t³²)]: 1608
//│ 	[LH_N]: 1609
//│ case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_₀(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰}: 1401 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² 0]: 1310
//│ 	[LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹]: 1388
//│ case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_₀(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1403 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 1314
//│ 	[LH_N]: 1315
//│ 	[LH_N]: 1368
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]: 1398
//│ case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 1428 --->
//│ 	[LH_C a⁵ enumFromThenTo_₀(t²³, ((2 * t²³) - a⁵), b²)]: 1135
//│ 	[LH_N]: 1136
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 1416
//│ 	[LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)]: 1539
//│ 	[LH_N]: 1540
//│ 	[LH_N]: 1542
//│ case ls²¹ of {LH_C h²¹ t²⁶ => [LH_C f¹²(h²¹) map_₀(f¹², t²⁶)] | LH_N  => [LH_N]}: 1442 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 1314
//│ 	[LH_N]: 1315
//│ 	[LH_N]: 1368
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_₀(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]: 1398
//│ case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 1454 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² 0]: 1310
//│ 	[LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹]: 1388
//│ case ls²³ of {LH_C h²² t²⁷ => (1 + length_₁(t²⁷)) | LH_N  => 0}: 1465 --->
//│ 	[LH_C a⁶ enumFromThenTo_₁(t²⁴, ((2 * t²⁴) - a⁶), b³)]: 1162
//│ 	[LH_N]: 1163
//│ case ls²⁵ of {LH_C h²³ t²⁸ => [LH_C h²³ take_₁((n⁴ - 1), t²⁸)] | LH_N  => [LH_N]}: 1501 --->
//│ 	[LH_C a⁶ enumFromThenTo_₁(t²⁴, ((2 * t²⁴) - a⁶), b³)]: 1162
//│ 	[LH_N]: 1163
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 1334
//│ 	[LH_C h²³ take_₁((n⁴ - 1), t²⁸)]: 1499
//│ 	[LH_N]: 1500
//│ 	[LH_N]: 1502
//│ case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 1509 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹ 0]: 1175
//│ 	[LH_P2 _lh_algb2_LH_P2_0² kjcurr²]: 1579
//│ case ls²⁶ of {LH_C h²⁴ t²⁹ => reverse_helper_₁(t²⁹, [LH_C h²⁴ a⁸]) | LH_N  => a⁸}: 1520 --->
//│ 	[LH_C a⁵ enumFromThenTo_₀(t²³, ((2 * t²³) - a⁵), b²)]: 1135
//│ 	[LH_N]: 1136
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 1416
//│ 	[LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)]: 1539
//│ 	[LH_N]: 1540
//│ 	[LH_N]: 1542
//│ case ls²⁷ of {LH_C h²⁵ t³⁰ => [LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)] | LH_N  => [LH_N]}: 1541 --->
//│ 	[LH_C a⁵ enumFromThenTo_₀(t²³, ((2 * t²³) - a⁵), b²)]: 1135
//│ 	[LH_N]: 1136
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 1416
//│ 	[LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)]: 1539
//│ 	[LH_N]: 1540
//│ 	[LH_N]: 1542
//│ case ls²⁸ of {LH_C h²⁶ t³¹ => reverse_helper_₂(t³¹, [LH_C h²⁶ a⁹]) | LH_N  => a⁹}: 1555 --->
//│ 	[LH_C a⁶ enumFromThenTo_₁(t²⁴, ((2 * t²⁴) - a⁶), b³)]: 1162
//│ 	[LH_N]: 1163
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 1334
//│ 	[LH_C h²³ take_₁((n⁴ - 1), t²⁸)]: 1499
//│ 	[LH_N]: 1500
//│ 	[LH_N]: 1502
//│ case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰}: 1592 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹ 0]: 1175
//│ 	[LH_P2 _lh_algb2_LH_P2_0² kjcurr²]: 1579
//│ case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1594 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1179
//│ 	[LH_N]: 1180
//│ 	[LH_N]: 1559
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]: 1589
//│ case ls²⁹ of {LH_C h²⁷ t³² => [LH_C f¹³(h²⁷) map_₁(f¹³, t³²)] | LH_N  => [LH_N]}: 1610 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 1179
//│ 	[LH_N]: 1180
//│ 	[LH_N]: 1559
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]: 1589
//│ case ls³⁰ of {LH_C h²⁸ t³³ => (1 + length_₀(t³³)) | LH_N  => 0}: 1655 --->
//│ 	[LH_C a⁵ enumFromThenTo_₀(t²³, ((2 * t²³) - a⁵), b²)]: 1135
//│ 	[LH_N]: 1136
//│ case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1766 --->
//│ 	[LH_C a⁵ enumFromThenTo_₀(t²³, ((2 * t²³) - a⁵), b²)]: 1135
//│ 	[LH_N]: 1136
//│ 	[LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)]: 1539
//│ 	[LH_N]: 1540
//│ 	[LH_N]: 1542
//│ case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1859 --->
//│ 	[LH_C a⁵ enumFromThenTo_₀(t²³, ((2 * t²³) - a⁵), b²)]: 1135
//│ 	[LH_N]: 1136
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 1416
//│ 	[LH_C h²⁵ take_₀((n⁵ - 1), t³⁰)]: 1539
//│ 	[LH_N]: 1540
//│ 	[LH_N]: 1542
//│ case _lh_algc_arg4¹ of {LH_N  => (fun x⁴ -> x⁴) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t³⁴ -> [LH_C _lh_algc_LH_C_0¹ t³⁴]) else (fun x⁵ -> x⁵) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_₀(algb_₁(reverse_₁(xs2²), reverse_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_₀(0, 0, (0 - 1), zip_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_₀(m2², k², xs1², take_₁(k², _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_₀(algb_₁(reverse_₁(xs2³), reverse_₂(_lh_algc_arg4¹)))
//│ in let k³ = findk_₀(0, 0, (0 - 1), zip_₀(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_₀(m2³, k³, xs1³, take_₁(k³, _lh_algc_arg4¹), algc_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_₁(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1860 --->
//│ 	[LH_C a⁶ enumFromThenTo_₁(t²⁴, ((2 * t²⁴) - a⁶), b³)]: 1162
//│ 	[LH_N]: 1163
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 1334
//│ 	[LH_C h²³ take_₁((n⁴ - 1), t²⁸)]: 1499
//│ 	[LH_N]: 1500
//│ 	[LH_N]: 1502
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C 0 algb1_₁(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 1188 --->
//│ 	case ls²⁰ of {LH_C h²⁰ t²⁵ => reverse_helper_₀(t²⁵, [LH_C h²⁰ a⁷]) | LH_N  => a⁷}: 1364
//│ [LH_P2 hx⁸ hy⁸]: 1267 --->
//│ 	case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰}: 1107
//│ [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)]: 1273 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 1109
//│ [LH_N]: 1274 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 1109
//│ [LH_N]: 1276 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 1109
//│ [LH_C 0 algb1_₀(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 1323 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1277
//│ [LH_N]: 1352 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]}: 1275
//│ [LH_C h²⁰ a⁷]: 1361 --->
//│ 	case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]}: 1275
//│ [LH_C f¹²(h²¹) map_₀(f¹², t²⁶)]: 1440 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1277
//│ [LH_N]: 1441 --->
//│ 	case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1277
//│ [LH_N]: 1448 --->
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_₁(snd_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_₁(_lh_algb1_LH_C_1¹, algb2_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 1211
//│ [LH_N]: 1480 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 1181
//│ [LH_C h²⁴ a⁸]: 1517 --->
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_₁(snd_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_₁(_lh_algb1_LH_C_1¹, algb2_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 1211
//│ [LH_C h²⁶ a⁹]: 1552 --->
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 1181
//│ [LH_C f¹³(h²⁷) map_₁(f¹³, t³²)]: 1608 --->
//│ 	case ls²⁰ of {LH_C h²⁰ t²⁵ => reverse_helper_₀(t²⁵, [LH_C h²⁰ a⁷]) | LH_N  => a⁷}: 1364
//│ [LH_N]: 1609 --->
//│ 	case ls²⁰ of {LH_C h²⁰ t²⁵ => reverse_helper_₀(t²⁵, [LH_C h²⁰ a⁷]) | LH_N  => a⁷}: 1364
//│ ------------------
//│ case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰}: 1107 --->
//│ 	[LH_P2 hx⁸ hy⁸]: 1267
//│ case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_₀((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 1109 --->
//│ 	[LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)]: 1273
//│ 	[LH_N]: 1274
//│ 	[LH_N]: 1276
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 1181 --->
//│ 	[LH_N]: 1480
//│ 	[LH_C h²⁶ a⁹]: 1552
//│ case _lh_algb1_arg1¹ of {LH_N  => map_₁(snd_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_₁(_lh_algb1_LH_C_1¹, algb2_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 1211 --->
//│ 	[LH_N]: 1448
//│ 	[LH_C h²⁴ a⁸]: 1517
//│ case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]}: 1275 --->
//│ 	[LH_N]: 1352
//│ 	[LH_C h²⁰ a⁷]: 1361
//│ case xs⁹ of {LH_C hx⁸ tx⁸ => case ys⁹ of {LH_C hy⁸ ty⁸ => [LH_C [LH_P2 hx⁸ hy⁸] zip_₀(tx⁸, ty⁸)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 1277 --->
//│ 	[LH_C 0 algb1_₀(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 1323
//│ 	[LH_C f¹²(h²¹) map_₀(f¹², t²⁶)]: 1440
//│ 	[LH_N]: 1441
//│ case ls²⁰ of {LH_C h²⁰ t²⁵ => reverse_helper_₀(t²⁵, [LH_C h²⁰ a⁷]) | LH_N  => a⁷}: 1364 --->
//│ 	[LH_C 0 algb1_₁(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 1188
//│ 	[LH_C f¹³(h²⁷) map_₁(f¹³, t³²)]: 1608
//│ 	[LH_N]: 1609
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testLCSS_nofib_₀(primId⁰(0))
//│ def algb1_₀(_lh_algb1_arg1⁴, _lh_algb1_arg2⁴) = case _lh_algb1_arg1⁴ of {
//│ 	LH_N  => map_₀(snd_₀, _lh_algb1_arg2⁴)
//│ 	| LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_₀(_lh_algb1_LH_C_1², algb2_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2⁴))
//│ 	| _  => error⁰}
//│ def algb1_₁(_lh_algb1_arg1³, _lh_algb1_arg2³) = _lh_algb1_arg1³(_lh_algb1_arg2³)
//│ def algb2_₀(_lh_algb2_arg1³, _lh_algb2_arg2³, _lh_algb2_arg3³, _lh_algb2_arg4³) = case _lh_algb2_arg4³ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {
//│ 		LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => 
//│ 			let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2³ + 1) else max_₀(_lh_algb2_arg3³, _lh_algb2_LH_P2_1¹)
//│ 			in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr³] algb2_₀(_lh_algb2_arg1³, _lh_algb2_LH_P2_1¹, kjcurr³, _lh_algb2_LH_C_1¹)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def algb2_₁(_lh_algb2_arg1⁴, _lh_algb2_arg2⁴, _lh_algb2_arg3⁴, _lh_algb2_arg4⁴) = case _lh_algb2_arg4⁴ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {
//│ 		LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => 
//│ 			let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2⁴ + 1) else max_₁(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1²)
//│ 			in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr⁴] algb2_₁(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1², kjcurr⁴, _lh_algb2_LH_C_1²)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def algb_₀(_lh_algb_arg1⁴, _lh_algb_arg2⁴) = 
//│ 	let tx¹² = algb1_₀(_lh_algb_arg1⁴, 
//│ 		let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 			LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t²)]
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁶(_lh_algb_arg2⁴))
//│ 	in let hx¹² = 0
//│ 	in (fun ys¹³ -> ys¹³(hx¹², tx¹²))
//│ def algb_₁(_lh_algb_arg1³, _lh_algb_arg2³) = 
//│ 	let t³⁷ = algb1_₁(_lh_algb_arg1³, 
//│ 		let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para³ -> _lh_listcomp_fun_para³(_lh_listcomp_fun⁴))
//│ 		in _lh_listcomp_fun⁴(_lh_algb_arg2³))
//│ 	in let h²⁹ = 0
//│ 	in (fun a¹⁴ -> reverse_helper_₀(t³⁷, 
//│ 		let ty⁹ = a¹⁴
//│ 		in let hy⁹ = h²⁹
//│ 		in (fun hx¹⁰ -> (fun tx¹⁰ -> 
//│ 			let _lh_findk_LH_C_1² = zip_₀(tx¹⁰, ty⁹)
//│ 			in let _lh_findk_LH_C_0² = 	
//│ 				let _lh_findk_LH_P2_1² = hy⁹
//│ 				in let _lh_findk_LH_P2_0² = hx¹⁰
//│ 				in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁵ -> (fun _lh_findk_arg2⁵ -> (fun _lh_findk_arg3⁵ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3⁵) then findk_₀((_lh_findk_arg1⁵ + 1), _lh_findk_arg1⁵, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1³) else findk_₀((_lh_findk_arg1⁵ + 1), _lh_findk_arg2⁵, _lh_findk_arg3⁵, _lh_findk_LH_C_1³)))))
//│ 			in (fun _lh_findk_arg2⁴ -> (fun _lh_findk_arg1⁴ -> (fun _lh_findk_arg3⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1², _lh_findk_arg1⁴, _lh_findk_arg2⁴, _lh_findk_arg3⁴))))))))
//│ def algc_₀(_lh_algc_arg1², _lh_algc_arg2², _lh_algc_arg3², _lh_algc_arg4²) = case _lh_algc_arg4² of {
//│ 	LH_N  => (fun x⁶ -> x⁶)
//│ 	| _  => case _lh_algc_arg3² of {
//│ 		LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {
//│ 			LH_N  => if inList_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4²) then (fun t³⁸ -> [LH_C _lh_algc_LH_C_0¹ t³⁸]) else (fun x⁷ -> x⁷)
//│ 			| _  => 
//│ 				let m2⁴ = div⁰(_lh_algc_arg1², 2)
//│ 				in let xs1⁴ = take_₀(m2⁴, _lh_algc_arg3²)
//│ 				in let xs2⁴ = drop_₀(m2⁴, _lh_algc_arg3²)
//│ 				in let l1⁴ = algb_₀(xs1⁴, _lh_algc_arg4²)
//│ 				in let l2⁴ = reverse_₀(algb_₁(reverse_₁(xs2⁴), reverse_₂(_lh_algc_arg4²)))
//│ 				in let k⁴ = findk_₀(0, 0, (0 - 1), zip_₀(l1⁴, l2⁴))
//│ 				in (fun _lh_funcomp_x⁴ -> algc_₀(m2⁴, k⁴, xs1⁴, take_₁(k⁴, _lh_algc_arg4²), algc_₀((_lh_algc_arg1² - m2⁴), (_lh_algc_arg2² - k⁴), xs2⁴, drop_₁(k⁴, _lh_algc_arg4²), _lh_funcomp_x⁴)))}
//│ 		| _  => 
//│ 			let m2⁵ = div⁰(_lh_algc_arg1², 2)
//│ 			in let xs1⁵ = take_₀(m2⁵, _lh_algc_arg3²)
//│ 			in let xs2⁵ = drop_₀(m2⁵, _lh_algc_arg3²)
//│ 			in let l1⁵ = algb_₀(xs1⁵, _lh_algc_arg4²)
//│ 			in let l2⁵ = reverse_₀(algb_₁(reverse_₁(xs2⁵), reverse_₂(_lh_algc_arg4²)))
//│ 			in let k⁵ = findk_₀(0, 0, (0 - 1), zip_₀(l1⁵, l2⁵))
//│ 			in (fun _lh_funcomp_x⁵ -> algc_₀(m2⁵, k⁵, xs1⁵, take_₁(k⁵, _lh_algc_arg4²), algc_₀((_lh_algc_arg1² - m2⁵), (_lh_algc_arg2² - k⁵), xs2⁵, drop_₁(k⁵, _lh_algc_arg4²), _lh_funcomp_x⁵)))}}
//│ def drop_₀(_lh_drop_arg1⁴, _lh_drop_arg2⁴) = case _lh_drop_arg2⁴ of {
//│ 	LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1²)
//│ 	| _  => error⁰}
//│ def drop_₁(_lh_drop_arg1³, _lh_drop_arg2³) = case _lh_drop_arg2³ of {
//│ 	LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def enumFromThenTo_₀(a¹³, t³⁶, b⁵) = if (a¹³ <= b⁵) then [LH_C a¹³ enumFromThenTo_₀(t³⁶, ((2 * t³⁶) - a¹³), b⁵)] else [LH_N]
//│ def enumFromThenTo_₁(a¹², t³⁵, b⁴) = if (a¹² <= b⁴) then [LH_C a¹² enumFromThenTo_₁(t³⁵, ((2 * t³⁵) - a¹²), b⁴)] else [LH_N]
//│ def findk_₀(_lh_findk_arg1³, _lh_findk_arg2³, _lh_findk_arg3³, _lh_findk_arg4²) = _lh_findk_arg4²(_lh_findk_arg2³, _lh_findk_arg1³, _lh_findk_arg3³)
//│ def inList_₀(_lh_inList_arg1², _lh_inList_arg2²) = case _lh_inList_arg2² of {
//│ 	LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1² == _lh_inList_LH_C_0¹) then [True] else inList_₀(_lh_inList_arg1², _lh_inList_LH_C_1¹)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def lcssMain_₀(_lh_lcssMain_arg1², _lh_lcssMain_arg2², _lh_lcssMain_arg3², _lh_lcssMain_arg4², _lh_lcssMain_arg5², _lh_lcssMain_arg6²) = lcss_₀(enumFromThenTo_₀(_lh_lcssMain_arg1², _lh_lcssMain_arg2², _lh_lcssMain_arg3²), enumFromThenTo_₁(_lh_lcssMain_arg4², _lh_lcssMain_arg5², _lh_lcssMain_arg6²))
//│ def lcss_₀(_lh_lcss_arg1², _lh_lcss_arg2²) = algc_₀(length_₀(_lh_lcss_arg1²), length_₁(_lh_lcss_arg2²), _lh_lcss_arg1², _lh_lcss_arg2², [LH_N])
//│ def length_₀(ls³⁴) = case ls³⁴ of {
//│ 	LH_C h²⁸ t³³ => (1 + length_₀(t³³))
//│ 	| LH_N  => 0}
//│ def length_₁(ls⁴¹) = case ls⁴¹ of {
//│ 	LH_C h²² t²⁷ => (1 + length_₁(t²⁷))
//│ 	| LH_N  => 0}
//│ def map_₀(f¹⁴, ls³¹) = case ls³¹ of {
//│ 	LH_C h²¹ t²⁶ => 
//│ 		let tx⁹ = map_₀(f¹⁴, t²⁶)
//│ 		in let hx⁹ = f¹⁴(h²¹)
//│ 		in (fun ys¹⁰ -> ys¹⁰(hx⁹, tx⁹))
//│ 	| LH_N  => (fun ys¹¹ -> (fun _lh_findk_arg2² -> (fun _lh_findk_arg1² -> (fun _lh_findk_arg3² -> _lh_findk_arg2²))))}
//│ def map_₁(f¹⁵, ls⁴²) = case ls⁴² of {
//│ 	LH_C h²⁷ t³² => 
//│ 		let t³⁹ = map_₁(f¹⁵, t³²)
//│ 		in let h³⁰ = f¹⁵(h²⁷)
//│ 		in (fun a¹⁶ -> reverse_helper_₀(t³⁹, 
//│ 			let ty¹⁰ = a¹⁶
//│ 			in let hy¹⁰ = h³⁰
//│ 			in (fun hx¹³ -> (fun tx¹³ -> 
//│ 				let _lh_findk_LH_C_1⁴ = zip_₀(tx¹³, ty¹⁰)
//│ 				in let _lh_findk_LH_C_0³ = 	
//│ 					let _lh_findk_LH_P2_1³ = hy¹⁰
//│ 					in let _lh_findk_LH_P2_0³ = hx¹³
//│ 					in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg3⁸ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3⁸) then findk_₀((_lh_findk_arg1⁸ + 1), _lh_findk_arg1⁸, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁵) else findk_₀((_lh_findk_arg1⁸ + 1), _lh_findk_arg2⁸, _lh_findk_arg3⁸, _lh_findk_LH_C_1⁵)))))
//│ 				in (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg3⁷ -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁴, _lh_findk_arg1⁷, _lh_findk_arg2⁷, _lh_findk_arg3⁷))))))))
//│ 	| LH_N  => (fun a¹⁷ -> a¹⁷)}
//│ def max_₀(_lh_max_arg1⁴, _lh_max_arg2⁴) = if (_lh_max_arg1⁴ > _lh_max_arg2⁴) then _lh_max_arg1⁴ else _lh_max_arg2⁴
//│ def max_₁(_lh_max_arg1³, _lh_max_arg2³) = if (_lh_max_arg1³ > _lh_max_arg2³) then _lh_max_arg1³ else _lh_max_arg2³
//│ def reverse_helper_₀(ls³⁹, a¹⁵) = ls³⁹(a¹⁵)
//│ def reverse_helper_₁(ls³³, a¹¹) = case ls³³ of {
//│ 	LH_C h²⁴ t²⁹ => reverse_helper_₁(t²⁹, 
//│ 		let _lh_algb1_LH_C_1³ = a¹¹
//│ 		in let _lh_algb1_LH_C_0³ = h²⁴
//│ 		in (fun _lh_algb1_arg2⁵ -> algb1_₁(_lh_algb1_LH_C_1³, algb2_₁(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2⁵))))
//│ 	| LH_N  => a¹¹}
//│ def reverse_helper_₂(ls³², a¹⁰) = case ls³² of {
//│ 	LH_C h²⁶ t³¹ => reverse_helper_₂(t³¹, 
//│ 		let _lh_listcomp_fun_ls_t³ = a¹⁰
//│ 		in let _lh_listcomp_fun_ls_h³ = h²⁶
//│ 		in (fun _lh_listcomp_fun³ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]))
//│ 	| LH_N  => a¹⁰}
//│ def reverse_₀(ls³⁶) = reverse_helper_₀(ls³⁶, (fun hx¹¹ -> (fun tx¹¹ -> (fun _lh_findk_arg2⁶ -> (fun _lh_findk_arg1⁶ -> (fun _lh_findk_arg3⁶ -> _lh_findk_arg2⁶))))))
//│ def reverse_₁(ls³⁷) = reverse_helper_₁(ls³⁷, (fun _lh_algb1_arg2⁶ -> map_₁(snd_₁, _lh_algb1_arg2⁶)))
//│ def reverse_₂(ls³⁵) = reverse_helper_₂(ls³⁵, (fun _lh_listcomp_fun⁵ -> [LH_N]))
//│ def snd_₀(_lh_snd_arg1³) = case _lh_snd_arg1³ of {
//│ 	LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 	| _  => error⁰}
//│ def snd_₁(_lh_snd_arg1⁴) = case _lh_snd_arg1⁴ of {
//│ 	LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1²
//│ 	| _  => error⁰}
//│ def take_₀(n⁶, ls³⁸) = if (n⁶ > 0) then case ls³⁸ of {
//│ 	LH_C h²⁵ t³⁰ => [LH_C h²⁵ take_₀((n⁶ - 1), t³⁰)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_₁(n⁷, ls⁴⁰) = if (n⁷ > 0) then case ls⁴⁰ of {
//│ 	LH_C h²³ t²⁸ => [LH_C h²³ take_₁((n⁷ - 1), t²⁸)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testLCSS_nofib_₀(_lh_testLCSS_nofib_arg1²) = lcssMain_₀(1, 2, 60, 30, 31, 90)
//│ def zip_₀(xs¹⁰, ys¹²) = xs¹⁰(ys¹²)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
