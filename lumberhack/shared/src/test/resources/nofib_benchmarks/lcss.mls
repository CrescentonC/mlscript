:NewParser
:ParseOnly


:lhInHaskell
:lhGenOCaml
max a b = if a > b then a else b
drop n (h:t) = if n == 0 then (h:t) else (drop (n - 1) t)
snd (_, x) = x
inList x (h:t) = if x == h then True else inList x t
inList x [] = False
algb1 [] yss = map snd yss
algb1 (x:xs) yss = algb1 xs (algb2 x 0 0 yss)
algb2 _ _ _ [] = []
algb2 x k0j1 k1j1 ((y,k0j):ys)
  = let kjcurr = if x == y then k0j1+1 else max k1j1 k0j
    in (y,kjcurr) : (algb2 x k0j kjcurr ys)
algb xs ys = 0 : algb1 xs [ (y,0) | y <- ys ]
findk k km m [] = km
findk k km m ((x,y):xys) =
  if (x+y) >= m then findk (k+1) k (x+y) xys
  else findk (k+1) km m xys
algc m n xs []  = \x -> x
algc m n [x] ys = if inList x ys then (\t -> (x:t)) else (\x -> x)
algc m n xs ys
  = let m2 = (m `div` 2) in
    let xs1 = take m2 xs in
    let xs2 = drop m2 xs in
    let l1 = algb xs1 ys in
    let l2 = reverse (algb (reverse xs2) (reverse ys)) in
    let k = findk 0 0 (0-1) (zip l1 l2) in
    (algc m2 k xs1 (take k ys)) . (algc (m-m2) (n-k) xs2 (drop k ys))
lcss xs ys = algc (length xs) (length ys) xs ys []
lcssMain a b c d e f = lcss [a,b..c] [d,e..f]
testLCSS_nofib _ = lcssMain 1 2 60 30 31 90
testLCSS_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testLCSS_nofib_lh^567(primId⁰(0))
//│ def algb1_lh(_lh_algb1_arg1⁰, _lh_algb1_arg2⁰) = case _lh_algb1_arg1⁰ of {
//│ 	LH_N  => map_lh^477(snd_lh^478, _lh_algb1_arg2⁰)
//│ 	| LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh^482(_lh_algb1_LH_C_1⁰, algb2_lh^485(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰))
//│ 	| _  => error⁰}
//│ def algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_arg2⁰, _lh_algb2_arg3⁰, _lh_algb2_arg4⁰) = case _lh_algb2_arg4⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {
//│ 		LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => 
//│ 			let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh^448(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ 			in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh^457(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def algb_lh(_lh_algb_arg1⁰, _lh_algb_arg2⁰) = [LH_C 0 algb1_lh^371(_lh_algb_arg1⁰, 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(_lh_algb_arg2⁰))]
//│ def algc_lh(_lh_algc_arg1⁰, _lh_algc_arg2⁰, _lh_algc_arg3⁰, _lh_algc_arg4⁰) = case _lh_algc_arg4⁰ of {
//│ 	LH_N  => (fun x⁰ -> x⁰)
//│ 	| _  => case _lh_algc_arg3⁰ of {
//│ 		LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {
//│ 			LH_N  => if inList_lh^116(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹)
//│ 			| _  => 
//│ 				let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ 				in let xs1⁰ = take_lh^133(m2⁰, _lh_algc_arg3⁰)
//│ 				in let xs2⁰ = drop_lh^138(m2⁰, _lh_algc_arg3⁰)
//│ 				in let l1⁰ = algb_lh^143(xs1⁰, _lh_algc_arg4⁰)
//│ 				in let l2⁰ = reverse_lh^148(algb_lh^149(reverse_lh^150(xs2⁰), reverse_lh^154(_lh_algc_arg4⁰)))
//│ 				in let k⁰ = findk_lh^159(0, 0, (0 - 1), zip_lh^170(l1⁰, l2⁰))
//│ 				in (fun _lh_funcomp_x⁰ -> algc_lh^176(m2⁰, k⁰, xs1⁰, take_lh^183(k⁰, _lh_algc_arg4⁰), algc_lh^189((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh^204(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}
//│ 		| _  => 
//│ 			let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ 			in let xs1¹ = take_lh^226(m2¹, _lh_algc_arg3⁰)
//│ 			in let xs2¹ = drop_lh^231(m2¹, _lh_algc_arg3⁰)
//│ 			in let l1¹ = algb_lh^236(xs1¹, _lh_algc_arg4⁰)
//│ 			in let l2¹ = reverse_lh^241(algb_lh^242(reverse_lh^243(xs2¹), reverse_lh^247(_lh_algc_arg4⁰)))
//│ 			in let k¹ = findk_lh^252(0, 0, (0 - 1), zip_lh^263(l1¹, l2¹))
//│ 			in (fun _lh_funcomp_x¹ -> algc_lh^269(m2¹, k¹, xs1¹, take_lh^276(k¹, _lh_algc_arg4⁰), algc_lh^282((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh^297(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}
//│ def drop_lh(_lh_drop_arg1⁰, _lh_drop_arg2⁰) = case _lh_drop_arg2⁰ of {
//│ 	LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh^553((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def enumFromThenTo_lh(a⁰, t¹, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromThenTo_lh^38(t¹, ((2 * t¹) - a⁰), b⁰)] else [LH_N]
//│ def findk_lh(_lh_findk_arg1⁰, _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_arg4⁰) = case _lh_findk_arg4⁰ of {
//│ 	LH_N  => _lh_findk_arg2⁰
//│ 	| LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {
//│ 		LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh^331((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh^348((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def inList_lh(_lh_inList_arg1⁰, _lh_inList_arg2⁰) = case _lh_inList_arg2⁰ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh^424(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def lcssMain_lh(_lh_lcssMain_arg1⁰, _lh_lcssMain_arg2⁰, _lh_lcssMain_arg3⁰, _lh_lcssMain_arg4⁰, _lh_lcssMain_arg5⁰, _lh_lcssMain_arg6⁰) = lcss_lh^499(enumFromThenTo_lh^500(_lh_lcssMain_arg1⁰, _lh_lcssMain_arg2⁰, _lh_lcssMain_arg3⁰), enumFromThenTo_lh^508(_lh_lcssMain_arg4⁰, _lh_lcssMain_arg5⁰, _lh_lcssMain_arg6⁰))
//│ def lcss_lh(_lh_lcss_arg1⁰, _lh_lcss_arg2⁰) = algc_lh^522(length_lh^523(_lh_lcss_arg1⁰), length_lh^527(_lh_lcss_arg2⁰), _lh_lcss_arg1⁰, _lh_lcss_arg2⁰, [LH_N])
//│ def length_lh(ls²) = case ls² of {
//│ 	LH_C h² t³ => (1 + length_lh^86(t³))
//│ 	| LH_N  => 0}
//│ def map_lh(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh^5(f⁰, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def max_lh(_lh_max_arg1⁰, _lh_max_arg2⁰) = if (_lh_max_arg1⁰ > _lh_max_arg2⁰) then _lh_max_arg1⁰ else _lh_max_arg2⁰
//│ def reverse_helper_lh(ls⁴, a¹) = case ls⁴ of {
//│ 	LH_C h³ t⁴ => reverse_helper_lh^100(t⁴, [LH_C h³ a¹])
//│ 	| LH_N  => a¹}
//│ def reverse_lh(ls³) = reverse_helper_lh^93(ls³, [LH_N])
//│ def snd_lh(_lh_snd_arg1⁰) = case _lh_snd_arg1⁰ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def take_lh(n⁰, ls¹) = if (n⁰ > 0) then case ls¹ of {
//│ 	LH_C h¹ t² => [LH_C h¹ take_lh^66((n⁰ - 1), t²)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testLCSS_nofib_lh(_lh_testLCSS_nofib_arg1⁰) = lcssMain_lh^403(1, 2, 60, 30, 31, 90)
//│ def zip_lh(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C hx⁰ tx⁰ => case ys⁰ of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh^20(tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec enumFromThenTo_lh a_0 t_1 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, (((enumFromThenTo_lh t_1) ((2 * t_1) - a_0)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec length_lh ls_2 =
//│ 		  (match ls_2 with
//│ 		    | `LH_C(h_2, t_3) -> 
//│ 		      (1 + (length_lh t_3))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec drop_lh _lh_drop_arg1_0 _lh_drop_arg2_0 =
//│ 		  (match _lh_drop_arg2_0 with
//│ 		    | `LH_C(_lh_drop_LH_C_0_0, _lh_drop_LH_C_1_0) -> 
//│ 		      (if (_lh_drop_arg1_0 = 0) then
//│ 		        (`LH_C(_lh_drop_LH_C_0_0, _lh_drop_LH_C_1_0))
//│ 		      else
//│ 		        ((drop_lh (_lh_drop_arg1_0 - 1)) _lh_drop_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec reverse_helper_lh ls_4 a_1 =
//│ 		  (match ls_4 with
//│ 		    | `LH_C(h_3, t_4) -> 
//│ 		      ((reverse_helper_lh t_4) (`LH_C(h_3, a_1)))
//│ 		    | `LH_N -> 
//│ 		      a_1);;
//│ 		let rec reverse_lh ls_3 =
//│ 		  ((reverse_helper_lh ls_3) (`LH_N));;
//│ 		let rec inList_lh _lh_inList_arg1_0 _lh_inList_arg2_0 =
//│ 		  (match _lh_inList_arg2_0 with
//│ 		    | `LH_C(_lh_inList_LH_C_0_0, _lh_inList_LH_C_1_0) -> 
//│ 		      (if (_lh_inList_arg1_0 = _lh_inList_LH_C_0_0) then
//│ 		        true
//│ 		      else
//│ 		        ((inList_lh _lh_inList_arg1_0) _lh_inList_LH_C_1_0))
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec findk_lh _lh_findk_arg1_0 _lh_findk_arg2_0 _lh_findk_arg3_0 _lh_findk_arg4_0 =
//│ 		  (match _lh_findk_arg4_0 with
//│ 		    | `LH_N -> 
//│ 		      _lh_findk_arg2_0
//│ 		    | `LH_C(_lh_findk_LH_C_0_0, _lh_findk_LH_C_1_0) -> 
//│ 		      (match _lh_findk_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_findk_LH_P2_0_0, _lh_findk_LH_P2_1_0) -> 
//│ 		          (if ((_lh_findk_LH_P2_0_0 + _lh_findk_LH_P2_1_0) >= _lh_findk_arg3_0) then
//│ 		            ((((findk_lh (_lh_findk_arg1_0 + 1)) _lh_findk_arg1_0) (_lh_findk_LH_P2_0_0 + _lh_findk_LH_P2_1_0)) _lh_findk_LH_C_1_0)
//│ 		          else
//│ 		            ((((findk_lh (_lh_findk_arg1_0 + 1)) _lh_findk_arg2_0) _lh_findk_arg3_0) _lh_findk_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec zip_lh xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(hx_0, tx_0) -> 
//│ 		      (match ys_0 with
//│ 		        | `LH_C(hy_0, ty_0) -> 
//│ 		          (`LH_C((`LH_P2(hx_0, hy_0)), ((zip_lh tx_0) ty_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec take_lh n_0 ls_1 =
//│ 		  (if (n_0 > 0) then
//│ 		    (match ls_1 with
//│ 		      | `LH_C(h_1, t_2) -> 
//│ 		        (`LH_C(h_1, ((take_lh (n_0 - 1)) t_2)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec map_lh f_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C((f_0 h_0), ((map_lh f_0) t_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec snd_lh _lh_snd_arg1_0 =
//│ 		  (match _lh_snd_arg1_0 with
//│ 		    | `LH_P2(_lh_snd_LH_P2_0_0, _lh_snd_LH_P2_1_0) -> 
//│ 		      _lh_snd_LH_P2_1_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec max_lh _lh_max_arg1_0 _lh_max_arg2_0 =
//│ 		  (if (_lh_max_arg1_0 > _lh_max_arg2_0) then
//│ 		    _lh_max_arg1_0
//│ 		  else
//│ 		    _lh_max_arg2_0);;
//│ 		let rec algb2_lh _lh_algb2_arg1_0 _lh_algb2_arg2_0 _lh_algb2_arg3_0 _lh_algb2_arg4_0 =
//│ 		  (match _lh_algb2_arg4_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_algb2_LH_C_0_0, _lh_algb2_LH_C_1_0) -> 
//│ 		      (match _lh_algb2_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_algb2_LH_P2_0_0, _lh_algb2_LH_P2_1_0) -> 
//│ 		          (let rec kjcurr_0 = (if (_lh_algb2_arg1_0 = _lh_algb2_LH_P2_0_0) then
//│ 		            (_lh_algb2_arg2_0 + 1)
//│ 		          else
//│ 		            ((max_lh _lh_algb2_arg3_0) _lh_algb2_LH_P2_1_0)) in
//│ 		            (`LH_C((`LH_P2(_lh_algb2_LH_P2_0_0, kjcurr_0)), ((((algb2_lh _lh_algb2_arg1_0) _lh_algb2_LH_P2_1_0) kjcurr_0) _lh_algb2_LH_C_1_0))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec algb1_lh _lh_algb1_arg1_0 _lh_algb1_arg2_0 =
//│ 		  (match _lh_algb1_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      ((map_lh snd_lh) _lh_algb1_arg2_0)
//│ 		    | `LH_C(_lh_algb1_LH_C_0_0, _lh_algb1_LH_C_1_0) -> 
//│ 		      ((algb1_lh _lh_algb1_LH_C_1_0) ((((algb2_lh _lh_algb1_LH_C_0_0) 0) 0) _lh_algb1_arg2_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec algb_lh _lh_algb_arg1_0 _lh_algb_arg2_0 =
//│ 		  (`LH_C(0, ((algb1_lh _lh_algb_arg1_0) (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		    (match _lh_listcomp_fun_para_0 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		        (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_0, 0)), (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_0 _lh_algb_arg2_0)))));;
//│ 		let rec algc_lh _lh_algc_arg1_0 _lh_algc_arg2_0 _lh_algc_arg3_0 _lh_algc_arg4_0 =
//│ 		  (match _lh_algc_arg4_0 with
//│ 		    | `LH_N -> 
//│ 		      (fun x_0 -> 
//│ 		        x_0)
//│ 		    | _ -> 
//│ 		      (match _lh_algc_arg3_0 with
//│ 		        | `LH_C(_lh_algc_LH_C_0_0, _lh_algc_LH_C_1_0) -> 
//│ 		          (match _lh_algc_LH_C_1_0 with
//│ 		            | `LH_N -> 
//│ 		              (if ((inList_lh _lh_algc_LH_C_0_0) _lh_algc_arg4_0) then
//│ 		                (fun t_5 -> 
//│ 		                  (`LH_C(_lh_algc_LH_C_0_0, t_5)))
//│ 		              else
//│ 		                (fun x_1 -> 
//│ 		                  x_1))
//│ 		            | _ -> 
//│ 		              (let rec m2_0 = (_lh_algc_arg1_0 / 2) in
//│ 		                (let rec xs1_0 = ((take_lh m2_0) _lh_algc_arg3_0) in
//│ 		                  (let rec xs2_0 = ((drop_lh m2_0) _lh_algc_arg3_0) in
//│ 		                    (let rec l1_0 = ((algb_lh xs1_0) _lh_algc_arg4_0) in
//│ 		                      (let rec l2_0 = (reverse_lh ((algb_lh (reverse_lh xs2_0)) (reverse_lh _lh_algc_arg4_0))) in
//│ 		                        (let rec k_0 = ((((findk_lh 0) 0) (0 - 1)) ((zip_lh l1_0) l2_0)) in
//│ 		                          (fun _lh_funcomp_x_0 -> 
//│ 		                            (((((algc_lh m2_0) k_0) xs1_0) ((take_lh k_0) _lh_algc_arg4_0)) (((((algc_lh (_lh_algc_arg1_0 - m2_0)) (_lh_algc_arg2_0 - k_0)) xs2_0) ((drop_lh k_0) _lh_algc_arg4_0)) _lh_funcomp_x_0))))))))))
//│ 		        | _ -> 
//│ 		          (let rec m2_1 = (_lh_algc_arg1_0 / 2) in
//│ 		            (let rec xs1_1 = ((take_lh m2_1) _lh_algc_arg3_0) in
//│ 		              (let rec xs2_1 = ((drop_lh m2_1) _lh_algc_arg3_0) in
//│ 		                (let rec l1_1 = ((algb_lh xs1_1) _lh_algc_arg4_0) in
//│ 		                  (let rec l2_1 = (reverse_lh ((algb_lh (reverse_lh xs2_1)) (reverse_lh _lh_algc_arg4_0))) in
//│ 		                    (let rec k_1 = ((((findk_lh 0) 0) (0 - 1)) ((zip_lh l1_1) l2_1)) in
//│ 		                      (fun _lh_funcomp_x_1 -> 
//│ 		                        (((((algc_lh m2_1) k_1) xs1_1) ((take_lh k_1) _lh_algc_arg4_0)) (((((algc_lh (_lh_algc_arg1_0 - m2_1)) (_lh_algc_arg2_0 - k_1)) xs2_1) ((drop_lh k_1) _lh_algc_arg4_0)) _lh_funcomp_x_1)))))))))));;
//│ 		let rec lcss_lh _lh_lcss_arg1_0 _lh_lcss_arg2_0 =
//│ 		  (((((algc_lh (length_lh _lh_lcss_arg1_0)) (length_lh _lh_lcss_arg2_0)) _lh_lcss_arg1_0) _lh_lcss_arg2_0) (`LH_N));;
//│ 		let rec lcssMain_lh _lh_lcssMain_arg1_0 _lh_lcssMain_arg2_0 _lh_lcssMain_arg3_0 _lh_lcssMain_arg4_0 _lh_lcssMain_arg5_0 _lh_lcssMain_arg6_0 =
//│ 		  ((lcss_lh (((enumFromThenTo_lh _lh_lcssMain_arg1_0) _lh_lcssMain_arg2_0) _lh_lcssMain_arg3_0)) (((enumFromThenTo_lh _lh_lcssMain_arg4_0) _lh_lcssMain_arg5_0) _lh_lcssMain_arg6_0));;
//│ 		let rec testLCSS_nofib_lh _lh_testLCSS_nofib_arg1_0 =
//│ 		  ((((((lcssMain_lh 1) 2) 60) 30) 31) 90);;
//│ 		(testLCSS_nofib_lh 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10 --->
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 29
//│ 	case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108
//│ [LH_N]: 11 --->
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 29
//│ 	case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108
//│ [LH_P2 hx⁰ hy⁰]: 19 --->
//│ 	case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰}: 363
//│ [LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)]: 25 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 365
//│ [LH_N]: 26 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 365
//│ [LH_N]: 28 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 365
//│ [LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53 --->
//│ 	case ls¹ of {LH_C h¹ t² => [LH_C h¹ take_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 77
//│ 	case ls² of {LH_C h² t³ => (1 + length_lh(t³)) | LH_N  => 0}: 91
//│ 	case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 220
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 313
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 314
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 383
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 432
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 564
//│ [LH_N]: 54 --->
//│ 	case ls¹ of {LH_C h¹ t² => [LH_C h¹ take_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 77
//│ 	case ls² of {LH_C h² t³ => (1 + length_lh(t³)) | LH_N  => 0}: 91
//│ 	case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 220
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 313
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 314
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 383
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 432
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 564
//│ [LH_C h¹ take_lh((n⁰ - 1), t²)]: 75 --->
//│ 	case ls¹ of {LH_C h¹ t² => [LH_C h¹ take_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 77
//│ 	case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 220
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 313
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 314
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 383
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 432
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh(snd_lh, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh(_lh_algb1_LH_C_1⁰, algb2_lh(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 496
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 564
//│ [LH_N]: 76 --->
//│ 	case ls¹ of {LH_C h¹ t² => [LH_C h¹ take_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 77
//│ 	case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 220
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 313
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 314
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 383
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 432
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh(snd_lh, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh(_lh_algb1_LH_C_1⁰, algb2_lh(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 496
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 564
//│ [LH_N]: 78 --->
//│ 	case ls¹ of {LH_C h¹ t² => [LH_C h¹ take_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 77
//│ 	case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 220
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 313
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 314
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 383
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 432
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh(snd_lh, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh(_lh_algb1_LH_C_1⁰, algb2_lh(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 496
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 564
//│ [LH_N]: 96 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 27
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 383
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh(snd_lh, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh(_lh_algb1_LH_C_1⁰, algb2_lh(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 496
//│ [LH_C h³ a¹]: 105 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 27
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 383
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh(snd_lh, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh(_lh_algb1_LH_C_1⁰, algb2_lh(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 496
//│ [LH_P2 _lh_listcomp_fun_ls_h⁰ 0]: 377 --->
//│ 	case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰}: 469
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 542
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 381 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 471
//│ [LH_N]: 382 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 471
//│ [LH_C 0 algb1_lh(_lh_algb_arg1⁰, let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_algb_arg2⁰))]: 390 --->
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 29
//│ 	case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108
//│ [LH_N]: 436 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 471
//│ [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰]: 456 --->
//│ 	case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰}: 469
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 542
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)]: 466 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 471
//│ [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 552 --->
//│ 	case ls¹ of {LH_C h¹ t² => [LH_C h¹ take_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 77
//│ 	case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 313
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 314
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 383
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 432
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 564
//│ ------------------
//│ case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh(f⁰, t⁰)] | LH_N  => [LH_N]}: 12 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 381
//│ 	[LH_N]: 382
//│ 	[LH_N]: 436
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)]: 466
//│ case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 27 --->
//│ 	[LH_N]: 96
//│ 	[LH_C h³ a¹]: 105
//│ case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 29 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ 	[LH_C 0 algb1_lh(_lh_algb_arg1⁰, let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_algb_arg2⁰))]: 390
//│ case ls¹ of {LH_C h¹ t² => [LH_C h¹ take_lh((n⁰ - 1), t²)] | LH_N  => [LH_N]}: 77 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53
//│ 	[LH_N]: 54
//│ 	[LH_C h¹ take_lh((n⁰ - 1), t²)]: 75
//│ 	[LH_N]: 76
//│ 	[LH_N]: 78
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 552
//│ case ls² of {LH_C h² t³ => (1 + length_lh(t³)) | LH_N  => 0}: 91 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53
//│ 	[LH_N]: 54
//│ case ls⁴ of {LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a¹]) | LH_N  => a¹}: 108 --->
//│ 	[LH_C f⁰(h⁰) map_lh(f⁰, t⁰)]: 10
//│ 	[LH_N]: 11
//│ 	[LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53
//│ 	[LH_N]: 54
//│ 	[LH_C h¹ take_lh((n⁰ - 1), t²)]: 75
//│ 	[LH_N]: 76
//│ 	[LH_N]: 78
//│ 	[LH_C 0 algb1_lh(_lh_algb_arg1⁰, let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_algb_arg2⁰))]: 390
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 552
//│ case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 220 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53
//│ 	[LH_N]: 54
//│ 	[LH_C h¹ take_lh((n⁰ - 1), t²)]: 75
//│ 	[LH_N]: 76
//│ 	[LH_N]: 78
//│ case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 313 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53
//│ 	[LH_N]: 54
//│ 	[LH_C h¹ take_lh((n⁰ - 1), t²)]: 75
//│ 	[LH_N]: 76
//│ 	[LH_N]: 78
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 552
//│ case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t⁵ -> [LH_C _lh_algc_LH_C_0⁰ t⁵]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh(algb_lh(reverse_lh(xs2⁰), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh(0, 0, (0 - 1), zip_lh(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh(m2⁰, k⁰, xs1⁰, take_lh(k⁰, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh(algb_lh(reverse_lh(xs2¹), reverse_lh(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh(0, 0, (0 - 1), zip_lh(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh(m2¹, k¹, xs1¹, take_lh(k¹, _lh_algc_arg4⁰), algc_lh((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 314 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53
//│ 	[LH_N]: 54
//│ 	[LH_C h¹ take_lh((n⁰ - 1), t²)]: 75
//│ 	[LH_N]: 76
//│ 	[LH_N]: 78
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 552
//│ case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰}: 363 --->
//│ 	[LH_P2 hx⁰ hy⁰]: 19
//│ case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 365 --->
//│ 	[LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)]: 25
//│ 	[LH_N]: 26
//│ 	[LH_N]: 28
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 383 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53
//│ 	[LH_N]: 54
//│ 	[LH_C h¹ take_lh((n⁰ - 1), t²)]: 75
//│ 	[LH_N]: 76
//│ 	[LH_N]: 78
//│ 	[LH_N]: 96
//│ 	[LH_C h³ a¹]: 105
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 552
//│ case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 432 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53
//│ 	[LH_N]: 54
//│ 	[LH_C h¹ take_lh((n⁰ - 1), t²)]: 75
//│ 	[LH_N]: 76
//│ 	[LH_N]: 78
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 552
//│ case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰}: 469 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁰ 0]: 377
//│ 	[LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰]: 456
//│ case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 471 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 381
//│ 	[LH_N]: 382
//│ 	[LH_N]: 436
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)]: 466
//│ case _lh_algb1_arg1⁰ of {LH_N  => map_lh(snd_lh, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh(_lh_algb1_LH_C_1⁰, algb2_lh(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 496 --->
//│ 	[LH_C h¹ take_lh((n⁰ - 1), t²)]: 75
//│ 	[LH_N]: 76
//│ 	[LH_N]: 78
//│ 	[LH_N]: 96
//│ 	[LH_C h³ a¹]: 105
//│ case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 542 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁰ 0]: 377
//│ 	[LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰]: 456
//│ case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 564 --->
//│ 	[LH_C a⁰ enumFromThenTo_lh(t¹, ((2 * t¹) - a⁰), b⁰)]: 53
//│ 	[LH_N]: 54
//│ 	[LH_C h¹ take_lh((n⁰ - 1), t²)]: 75
//│ 	[LH_N]: 76
//│ 	[LH_N]: 78
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 552
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_P2 hx⁰ hy⁰]: 19 --->
//│ 	case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰}: 363
//│ [LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)]: 25 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 365
//│ [LH_N]: 26 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 365
//│ [LH_N]: 28 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 365
//│ ------------------
//│ case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰}: 363 --->
//│ 	[LH_P2 hx⁰ hy⁰]: 19
//│ case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 365 --->
//│ 	[LH_C [LH_P2 hx⁰ hy⁰] zip_lh(tx⁰, ty⁰)]: 25
//│ 	[LH_N]: 26
//│ 	[LH_N]: 28
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testLCSS_nofib_lh(primId⁰(0))
//│ def algb1_lh(_lh_algb1_arg1¹, _lh_algb1_arg2¹) = case _lh_algb1_arg1¹ of {
//│ 	LH_N  => map_lh(snd_lh, _lh_algb1_arg2¹)
//│ 	| LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh(_lh_algb1_LH_C_1⁰, algb2_lh(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2¹))
//│ 	| _  => error⁰}
//│ def algb2_lh(_lh_algb2_arg1¹, _lh_algb2_arg2¹, _lh_algb2_arg3¹, _lh_algb2_arg4¹) = case _lh_algb2_arg4¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {
//│ 		LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => 
//│ 			let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2¹ + 1) else max_lh(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1⁰)
//│ 			in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr¹] algb2_lh(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1⁰, kjcurr¹, _lh_algb2_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def algb_lh(_lh_algb_arg1¹, _lh_algb_arg2¹) = [LH_C 0 algb1_lh(_lh_algb_arg1¹, 
//│ 	let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t⁰)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun¹(_lh_algb_arg2¹))]
//│ def algc_lh(_lh_algc_arg1¹, _lh_algc_arg2¹, _lh_algc_arg3¹, _lh_algc_arg4¹) = case _lh_algc_arg4¹ of {
//│ 	LH_N  => (fun x² -> x²)
//│ 	| _  => case _lh_algc_arg3¹ of {
//│ 		LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {
//│ 			LH_N  => if inList_lh(_lh_algc_LH_C_0⁰, _lh_algc_arg4¹) then (fun t⁷ -> [LH_C _lh_algc_LH_C_0⁰ t⁷]) else (fun x³ -> x³)
//│ 			| _  => 
//│ 				let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ 				in let xs1² = take_lh(m2², _lh_algc_arg3¹)
//│ 				in let xs2² = drop_lh(m2², _lh_algc_arg3¹)
//│ 				in let l1² = algb_lh(xs1², _lh_algc_arg4¹)
//│ 				in let l2² = reverse_lh(algb_lh(reverse_lh(xs2²), reverse_lh(_lh_algc_arg4¹)))
//│ 				in let k² = findk_lh(0, 0, (0 - 1), zip_lh(l1², l2²))
//│ 				in (fun _lh_funcomp_x² -> algc_lh(m2², k², xs1², take_lh(k², _lh_algc_arg4¹), algc_lh((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}
//│ 		| _  => 
//│ 			let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ 			in let xs1³ = take_lh(m2³, _lh_algc_arg3¹)
//│ 			in let xs2³ = drop_lh(m2³, _lh_algc_arg3¹)
//│ 			in let l1³ = algb_lh(xs1³, _lh_algc_arg4¹)
//│ 			in let l2³ = reverse_lh(algb_lh(reverse_lh(xs2³), reverse_lh(_lh_algc_arg4¹)))
//│ 			in let k³ = findk_lh(0, 0, (0 - 1), zip_lh(l1³, l2³))
//│ 			in (fun _lh_funcomp_x³ -> algc_lh(m2³, k³, xs1³, take_lh(k³, _lh_algc_arg4¹), algc_lh((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}
//│ def drop_lh(_lh_drop_arg1¹, _lh_drop_arg2¹) = case _lh_drop_arg2¹ of {
//│ 	LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def enumFromThenTo_lh(a³, t⁶, b¹) = if (a³ <= b¹) then [LH_C a³ enumFromThenTo_lh(t⁶, ((2 * t⁶) - a³), b¹)] else [LH_N]
//│ def findk_lh(_lh_findk_arg1¹, _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_arg4¹) = _lh_findk_arg4¹(_lh_findk_arg2¹, _lh_findk_arg1¹, _lh_findk_arg3¹)
//│ def inList_lh(_lh_inList_arg1¹, _lh_inList_arg2¹) = case _lh_inList_arg2¹ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0⁰) then [True] else inList_lh(_lh_inList_arg1¹, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def lcssMain_lh(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹, _lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹) = lcss_lh(enumFromThenTo_lh(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹), enumFromThenTo_lh(_lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹))
//│ def lcss_lh(_lh_lcss_arg1¹, _lh_lcss_arg2¹) = algc_lh(length_lh(_lh_lcss_arg1¹), length_lh(_lh_lcss_arg2¹), _lh_lcss_arg1¹, _lh_lcss_arg2¹, [LH_N])
//│ def length_lh(ls⁶) = case ls⁶ of {
//│ 	LH_C h² t³ => (1 + length_lh(t³))
//│ 	| LH_N  => 0}
//│ def map_lh(f¹, ls⁷) = case ls⁷ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f¹(h⁰) map_lh(f¹, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def max_lh(_lh_max_arg1¹, _lh_max_arg2¹) = if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ def reverse_helper_lh(ls⁹, a²) = case ls⁹ of {
//│ 	LH_C h³ t⁴ => reverse_helper_lh(t⁴, [LH_C h³ a²])
//│ 	| LH_N  => a²}
//│ def reverse_lh(ls⁵) = reverse_helper_lh(ls⁵, [LH_N])
//│ def snd_lh(_lh_snd_arg1¹) = case _lh_snd_arg1¹ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def take_lh(n¹, ls⁸) = if (n¹ > 0) then case ls⁸ of {
//│ 	LH_C h¹ t² => [LH_C h¹ take_lh((n¹ - 1), t²)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testLCSS_nofib_lh(_lh_testLCSS_nofib_arg1¹) = lcssMain_lh(1, 2, 60, 30, 31, 90)
//│ def zip_lh(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C hx⁰ tx⁰ => case ys¹ of {
//│ 		LH_C hy⁰ ty⁰ => 
//│ 			let _lh_findk_LH_C_1¹ = zip_lh(tx⁰, ty⁰)
//│ 			in let _lh_findk_LH_C_0¹ = 	
//│ 				let _lh_findk_LH_P2_1¹ = hy⁰
//│ 				in let _lh_findk_LH_P2_0¹ = hx⁰
//│ 				in (fun _lh_findk_LH_C_1² -> (fun _lh_findk_arg1³ -> (fun _lh_findk_arg2³ -> (fun _lh_findk_arg3³ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3³) then findk_lh((_lh_findk_arg1³ + 1), _lh_findk_arg1³, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1²) else findk_lh((_lh_findk_arg1³ + 1), _lh_findk_arg2³, _lh_findk_arg3³, _lh_findk_LH_C_1²)))))
//│ 			in (fun _lh_findk_arg2² -> (fun _lh_findk_arg1² -> (fun _lh_findk_arg3² -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1¹, _lh_findk_arg1², _lh_findk_arg2², _lh_findk_arg3²))))
//│ 		| LH_N  => (fun _lh_findk_arg2⁴ -> (fun _lh_findk_arg1⁴ -> (fun _lh_findk_arg3⁴ -> _lh_findk_arg2⁴)))}
//│ 	| LH_N  => (fun _lh_findk_arg2⁵ -> (fun _lh_findk_arg1⁵ -> (fun _lh_findk_arg3⁵ -> _lh_findk_arg2⁵)))}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testLCSS_nofib_lh^1] (hopeless to continue)
//│ 	[testLCSS_nofib_lh^1 · lcssMain_lh^582] (using original def)
//│ 		[testLCSS_nofib_lh^1 · lcssMain_lh^582 · enumFromThenTo_lh^220] (using original def)
//│ 			[testLCSS_nofib_lh^1 · lcssMain_lh^582 · enumFromThenTo_lh^220 · enumFromThenTo_lh^320] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · enumFromThenTo_lh^220] (using original def)
//│ 		[testLCSS_nofib_lh^1 · lcssMain_lh^582 · enumFromThenTo_lh^228] (using original def)
//│ 			[testLCSS_nofib_lh^1 · lcssMain_lh^582 · enumFromThenTo_lh^228 · enumFromThenTo_lh^320] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · enumFromThenTo_lh^228] (using original def)
//│ 		[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219] (using original def)
//│ 			[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342 · algb1_lh^285] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342 · algb2_lh^288] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342 · algb2_lh^288 · algb2_lh^119] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342 · algb2_lh^288] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342 · algb2_lh^288 · max_lh^110] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342 · map_lh^280] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342 · map_lh^280 · map_lh^246] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342 · map_lh^280] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^396 · algb1_lh^342 · snd_lh^281] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342 · algb1_lh^285] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342 · algb2_lh^288] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342 · algb2_lh^288 · algb2_lh^119] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342 · algb2_lh^288] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342 · algb2_lh^288 · max_lh^110] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342 · map_lh^280] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342 · map_lh^280 · map_lh^246] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342 · map_lh^280] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^402 · algb1_lh^342 · snd_lh^281] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342 · algb1_lh^285] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342 · algb2_lh^288] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342 · algb2_lh^288 · algb2_lh^119] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342 · algb2_lh^288] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342 · algb2_lh^288 · max_lh^110] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342 · map_lh^280] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342 · map_lh^280 · map_lh^246] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342 · map_lh^280] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^489 · algb1_lh^342 · snd_lh^281] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342 · algb1_lh^285] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342 · algb2_lh^288] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342 · algb2_lh^288 · algb2_lh^119] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342 · algb2_lh^288] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342 · algb2_lh^288 · max_lh^110] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342 · map_lh^280] (using original def)
//│ 							[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342 · map_lh^280 · map_lh^246] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342 · map_lh^280] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algb_lh^495 · algb1_lh^342 · snd_lh^281] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algc_lh^429] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algc_lh^442] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algc_lh^522] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · algc_lh^535] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^391] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^391 · drop_lh^32] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^391] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^457] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^457 · drop_lh^32] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^457] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^484] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^484 · drop_lh^32] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^484] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^550] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^550 · drop_lh^32] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · drop_lh^550] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · findk_lh^412] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · findk_lh^505] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · inList_lh^369] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · inList_lh^369 · inList_lh^64] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · inList_lh^369] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^401] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^401 · reverse_helper_lh^46] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^401 · reverse_helper_lh^46 · reverse_helper_lh^303] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^401 · reverse_helper_lh^46] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^403] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^403 · reverse_helper_lh^46] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^403 · reverse_helper_lh^46 · reverse_helper_lh^303] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^403 · reverse_helper_lh^46] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^407] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^407 · reverse_helper_lh^46] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^407 · reverse_helper_lh^46 · reverse_helper_lh^303] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^407 · reverse_helper_lh^46] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^494] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^494 · reverse_helper_lh^46] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^494 · reverse_helper_lh^46 · reverse_helper_lh^303] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^494 · reverse_helper_lh^46] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^496] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^496 · reverse_helper_lh^46] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^496 · reverse_helper_lh^46 · reverse_helper_lh^303] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^496 · reverse_helper_lh^46] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^500] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^500 · reverse_helper_lh^46] (using original def)
//│ 						[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^500 · reverse_helper_lh^46 · reverse_helper_lh^303] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · reverse_lh^500 · reverse_helper_lh^46] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^386] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^386 · take_lh^263] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^386] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^436] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^436 · take_lh^263] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^436] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^479] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^479 · take_lh^263] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^479] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^529] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^529 · take_lh^263] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · take_lh^529] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^423] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^423 · findk_lh^156] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^423 · findk_lh^173] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^423 · zip_lh^140] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^423] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^516] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^516 · findk_lh^156] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^516 · findk_lh^173] (using original def)
//│ 					[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^516 · zip_lh^140] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · algc_lh^6 · zip_lh^516] (using original def)
//│ 			[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · length_lh^11] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · length_lh^11 · length_lh^79] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · length_lh^11] (using original def)
//│ 			[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · length_lh^7] (using original def)
//│ 				[testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · length_lh^7 · length_lh^79] ---> [testLCSS_nofib_lh^1 · lcssMain_lh^582 · lcss_lh^219 · length_lh^7] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testLCSS_nofib_lh_₀(primId⁰(0))
//│ def testLCSS_nofib_lh_₀(_lh_testLCSS_nofib_arg1¹) = 
//│ 	lcssMain_lh_₀(1, 2, 60, 30, 31, 90)
//│ 	where
//│ 	def lcssMain_lh_₀(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹, _lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹) = 
//│ 		lcss_lh_₀(enumFromThenTo_lh_₀(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹), enumFromThenTo_lh_₁(_lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹))
//│ 		where
//│ 		def enumFromThenTo_lh_₀(a², t⁹, b¹) = 
//│ 			if (a² <= b¹) then [LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)] else [LH_N]
//│ 		def enumFromThenTo_lh_₁(a⁵, t¹⁷, b²) = 
//│ 			if (a⁵ <= b²) then [LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)] else [LH_N]
//│ 		def lcss_lh_₀(_lh_lcss_arg1¹, _lh_lcss_arg2¹) = 
//│ 			algc_lh_₀(length_lh_₁(_lh_lcss_arg1¹), length_lh_₀(_lh_lcss_arg2¹), _lh_lcss_arg1¹, _lh_lcss_arg2¹, [LH_N])
//│ 			where
//│ 			def algc_lh_₀(_lh_algc_arg1¹, _lh_algc_arg2¹, _lh_algc_arg3¹, _lh_algc_arg4¹) = 
//│ 				case _lh_algc_arg4¹ of {
//│ 					LH_N  => (fun x² -> x²)
//│ 					| _  => case _lh_algc_arg3¹ of {
//│ 						LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {
//│ 							LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³)
//│ 							| _  => 
//│ 								let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ 								in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ 								in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ 								in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ 								in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ 								in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ 								in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}
//│ 						| _  => 
//│ 							let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ 							in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ 							in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ 							in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ 							in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ 							in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ 							in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}
//│ 				where
//│ 				def algb_lh_₀(_lh_algb_arg1¹, _lh_algb_arg2¹) = 
//│ 					[LH_C 0 algb1_lh_₀(_lh_algb_arg1¹, 
//│ 						let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun¹(_lh_algb_arg2¹))]
//│ 					where
//│ 					def algb1_lh_₀(_lh_algb1_arg1², _lh_algb1_arg2²) = 
//│ 						case _lh_algb1_arg1² of {
//│ 							LH_N  => map_lh_₀(snd_lh_₀, _lh_algb1_arg2²)
//│ 							| LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₀(_lh_algb1_LH_C_1², algb2_lh_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_arg2⁴, _lh_algb2_arg3⁴, _lh_algb2_arg4⁴) = 
//│ 							case _lh_algb2_arg4⁴ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => 
//│ 										let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₀(_lh_max_arg1¹, _lh_max_arg2¹) = 
//│ 								if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ 						def map_lh_₀(f⁴, ls¹⁷) = 
//│ 							case ls¹⁷ of {
//│ 								LH_C h¹⁴ t¹⁸ => [LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)]
//│ 								| LH_N  => [LH_N]}
//│ 						def snd_lh_₀(_lh_snd_arg1³) = 
//│ 							case _lh_snd_arg1³ of {
//│ 								LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³
//│ 								| _  => error⁰}
//│ 				def algb_lh_₁(_lh_algb_arg1², _lh_algb_arg2²) = 
//│ 					[LH_C 0 algb1_lh_₁(_lh_algb_arg1², 
//│ 						let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 							LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun²(_lh_algb_arg2²))]
//│ 					where
//│ 					def algb1_lh_₁(_lh_algb1_arg1³, _lh_algb1_arg2³) = 
//│ 						case _lh_algb1_arg1³ of {
//│ 							LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2³)
//│ 							| LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₁(_lh_algb1_LH_C_1³, algb2_lh_₁(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2³))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_arg2², _lh_algb2_arg3², _lh_algb2_arg4²) = 
//│ 							case _lh_algb2_arg4² of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {
//│ 									LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => 
//│ 										let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁(_lh_max_arg1³, _lh_max_arg2³) = 
//│ 								if (_lh_max_arg1³ > _lh_max_arg2³) then _lh_max_arg1³ else _lh_max_arg2³
//│ 						def map_lh_₁(f¹, ls⁵) = 
//│ 							case ls⁵ of {
//│ 								LH_C h⁴ t⁶ => [LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)]
//│ 								| LH_N  => [LH_N]}
//│ 						def snd_lh_₁(_lh_snd_arg1⁴) = 
//│ 							case _lh_snd_arg1⁴ of {
//│ 								LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴
//│ 								| _  => error⁰}
//│ 				def algb_lh_₂(_lh_algb_arg1³, _lh_algb_arg2³) = 
//│ 					[LH_C 0 algb1_lh_₂(_lh_algb_arg1³, 
//│ 						let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 							LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun³(_lh_algb_arg2³))]
//│ 					where
//│ 					def algb1_lh_₂(_lh_algb1_arg1¹, _lh_algb1_arg2¹) = 
//│ 						case _lh_algb1_arg1¹ of {
//│ 							LH_N  => map_lh_₂(snd_lh_₂, _lh_algb1_arg2¹)
//│ 							| LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₂(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_arg2³, _lh_algb2_arg3³, _lh_algb2_arg4³) = 
//│ 							case _lh_algb2_arg4³ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => 
//│ 										let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₂(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₂(_lh_max_arg1⁴, _lh_max_arg2⁴) = 
//│ 								if (_lh_max_arg1⁴ > _lh_max_arg2⁴) then _lh_max_arg1⁴ else _lh_max_arg2⁴
//│ 						def map_lh_₂(f², ls¹⁰) = 
//│ 							case ls¹⁰ of {
//│ 								LH_C h⁹ t¹² => [LH_C f²(h⁹) map_lh_₂(f², t¹²)]
//│ 								| LH_N  => [LH_N]}
//│ 						def snd_lh_₂(_lh_snd_arg1¹) = 
//│ 							case _lh_snd_arg1¹ of {
//│ 								LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 								| _  => error⁰}
//│ 				def algb_lh_₃(_lh_algb_arg1⁴, _lh_algb_arg2⁴) = 
//│ 					[LH_C 0 algb1_lh_₃(_lh_algb_arg1⁴, 
//│ 						let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 							LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun⁴(_lh_algb_arg2⁴))]
//│ 					where
//│ 					def algb1_lh_₃(_lh_algb1_arg1⁴, _lh_algb1_arg2⁴) = 
//│ 						case _lh_algb1_arg1⁴ of {
//│ 							LH_N  => map_lh_₃(snd_lh_₃, _lh_algb1_arg2⁴)
//│ 							| LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₃(_lh_algb1_LH_C_1⁴, algb2_lh_₃(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁴))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_arg2¹, _lh_algb2_arg3¹, _lh_algb2_arg4¹) = 
//│ 							case _lh_algb2_arg4¹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => 
//│ 										let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₃(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₃(_lh_max_arg1², _lh_max_arg2²) = 
//│ 								if (_lh_max_arg1² > _lh_max_arg2²) then _lh_max_arg1² else _lh_max_arg2²
//│ 						def map_lh_₃(f³, ls¹⁶) = 
//│ 							case ls¹⁶ of {
//│ 								LH_C h¹³ t¹⁶ => [LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)]
//│ 								| LH_N  => [LH_N]}
//│ 						def snd_lh_₃(_lh_snd_arg1²) = 
//│ 							case _lh_snd_arg1² of {
//│ 								LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1²
//│ 								| _  => error⁰}
//│ 				def drop_lh_₀(_lh_drop_arg1², _lh_drop_arg2²) = 
//│ 					case _lh_drop_arg2² of {
//│ 						LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₁(_lh_drop_arg1¹, _lh_drop_arg2¹) = 
//│ 					case _lh_drop_arg2¹ of {
//│ 						LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₂(_lh_drop_arg1³, _lh_drop_arg2³) = 
//│ 					case _lh_drop_arg2³ of {
//│ 						LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₃(_lh_drop_arg1⁴, _lh_drop_arg2⁴) = 
//│ 					case _lh_drop_arg2⁴ of {
//│ 						LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴)
//│ 						| _  => error⁰}
//│ 				def findk_lh_₀(_lh_findk_arg1¹¹, _lh_findk_arg2¹¹, _lh_findk_arg3¹¹, _lh_findk_arg4³) = 
//│ 					_lh_findk_arg4³(_lh_findk_arg2¹¹, _lh_findk_arg1¹¹, _lh_findk_arg3¹¹)
//│ 				def findk_lh_₁(_lh_findk_arg1¹², _lh_findk_arg2¹², _lh_findk_arg3¹², _lh_findk_arg4⁴) = 
//│ 					_lh_findk_arg4⁴(_lh_findk_arg2¹², _lh_findk_arg1¹², _lh_findk_arg3¹²)
//│ 				def inList_lh_₀(_lh_inList_arg1¹, _lh_inList_arg2¹) = 
//│ 					case _lh_inList_arg2¹ of {
//│ 						LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹)
//│ 						| LH_N  => [False]
//│ 						| _  => error⁰}
//│ 				def reverse_lh_₀(ls¹⁵) = 
//│ 					reverse_helper_lh_₀(ls¹⁵, [LH_N])
//│ 					where
//│ 					def reverse_helper_lh_₀(ls²¹, a⁷) = 
//│ 						case ls²¹ of {
//│ 							LH_C h¹⁶ t²⁰ => reverse_helper_lh_₀(t²⁰, [LH_C h¹⁶ a⁷])
//│ 							| LH_N  => a⁷}
//│ 				def reverse_lh_₁(ls¹⁹) = 
//│ 					reverse_helper_lh_₁(ls¹⁹, [LH_N])
//│ 					where
//│ 					def reverse_helper_lh_₁(ls¹³, a⁴) = 
//│ 						case ls¹³ of {
//│ 							LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴])
//│ 							| LH_N  => a⁴}
//│ 				def reverse_lh_₂(ls²³) = 
//│ 					reverse_helper_lh_₂(ls²³, [LH_N])
//│ 					where
//│ 					def reverse_helper_lh_₂(ls¹², a³) = 
//│ 						case ls¹² of {
//│ 							LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³])
//│ 							| LH_N  => a³}
//│ 				def reverse_lh_₃(ls²⁴) = 
//│ 					reverse_helper_lh_₃(ls²⁴, [LH_N])
//│ 					where
//│ 					def reverse_helper_lh_₃(ls²², a⁸) = 
//│ 						case ls²² of {
//│ 							LH_C h¹⁷ t²¹ => reverse_helper_lh_₃(t²¹, [LH_C h¹⁷ a⁸])
//│ 							| LH_N  => a⁸}
//│ 				def reverse_lh_₄(ls¹⁴) = 
//│ 					reverse_helper_lh_₄(ls¹⁴, [LH_N])
//│ 					where
//│ 					def reverse_helper_lh_₄(ls²⁵, a⁹) = 
//│ 						case ls²⁵ of {
//│ 							LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹])
//│ 							| LH_N  => a⁹}
//│ 				def reverse_lh_₅(ls²⁰) = 
//│ 					reverse_helper_lh_₅(ls²⁰, [LH_N])
//│ 					where
//│ 					def reverse_helper_lh_₅(ls¹⁸, a⁶) = 
//│ 						case ls¹⁸ of {
//│ 							LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶])
//│ 							| LH_N  => a⁶}
//│ 				def take_lh_₀(n³, ls⁸) = 
//│ 					if (n³ > 0) then case ls⁸ of {
//│ 						LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₁(n¹, ls⁶) = 
//│ 					if (n¹ > 0) then case ls⁶ of {
//│ 						LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₂(n², ls⁷) = 
//│ 					if (n² > 0) then case ls⁷ of {
//│ 						LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₃(n⁴, ls²⁶) = 
//│ 					if (n⁴ > 0) then case ls²⁶ of {
//│ 						LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def zip_lh_₀(xs¹, ys¹) = 
//│ 					case xs¹ of {
//│ 						LH_C hx¹ tx¹ => case ys¹ of {
//│ 							LH_C hy¹ ty¹ => 
//│ 								let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ 								in let _lh_findk_LH_C_0¹ = 	
//│ 									let _lh_findk_LH_P2_1¹ = hy¹
//│ 									in let _lh_findk_LH_P2_0¹ = hx¹
//│ 									in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ 								in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸))))
//│ 							| LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))}
//│ 						| LH_N  => (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰)))}
//│ 					where
//│ 					def findk_lh_₂(_lh_findk_arg1⁶, _lh_findk_arg2⁶, _lh_findk_arg3⁶, _lh_findk_arg4²) = 
//│ 						_lh_findk_arg4²(_lh_findk_arg2⁶, _lh_findk_arg1⁶, _lh_findk_arg3⁶)
//│ 					def findk_lh_₃(_lh_findk_arg1¹⁷, _lh_findk_arg2¹⁷, _lh_findk_arg3¹⁷, _lh_findk_arg4⁵) = 
//│ 						_lh_findk_arg4⁵(_lh_findk_arg2¹⁷, _lh_findk_arg1¹⁷, _lh_findk_arg3¹⁷)
//│ 				def zip_lh_₁(xs², ys²) = 
//│ 					case xs² of {
//│ 						LH_C hx² tx² => case ys² of {
//│ 							LH_C hy² ty² => 
//│ 								let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ 								in let _lh_findk_LH_C_0² = 	
//│ 									let _lh_findk_LH_P2_1² = hy²
//│ 									in let _lh_findk_LH_P2_0² = hx²
//│ 									in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ 								in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴))))
//│ 							| LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))}
//│ 						| LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}
//│ 					where
//│ 					def findk_lh_₄(_lh_findk_arg1⁵, _lh_findk_arg2⁵, _lh_findk_arg3⁵, _lh_findk_arg4¹) = 
//│ 						_lh_findk_arg4¹(_lh_findk_arg2⁵, _lh_findk_arg1⁵, _lh_findk_arg3⁵)
//│ 					def findk_lh_₅(_lh_findk_arg1¹⁸, _lh_findk_arg2¹⁸, _lh_findk_arg3¹⁸, _lh_findk_arg4⁶) = 
//│ 						_lh_findk_arg4⁶(_lh_findk_arg2¹⁸, _lh_findk_arg1¹⁸, _lh_findk_arg3¹⁸)
//│ 			def length_lh_₀(ls¹¹) = 
//│ 				case ls¹¹ of {
//│ 					LH_C h¹⁰ t¹³ => (1 + length_lh_₀(t¹³))
//│ 					| LH_N  => 0}
//│ 			def length_lh_₁(ls⁹) = 
//│ 				case ls⁹ of {
//│ 					LH_C h⁸ t¹¹ => (1 + length_lh_₁(t¹¹))
//│ 					| LH_N  => 0}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)]: 605 --->
//│ 	case ls²¹ of {LH_C h¹⁶ t²⁰ => reverse_helper_lh_₀(t²⁰, [LH_C h¹⁶ a⁷]) | LH_N  => a⁷}: 1527
//│ [LH_N]: 606 --->
//│ 	case ls²¹ of {LH_C h¹⁶ t²⁰ => reverse_helper_lh_₀(t²⁰, [LH_C h¹⁶ a⁷]) | LH_N  => a⁷}: 1527
//│ [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_N]: 650 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_N]: 652 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_P2 _lh_listcomp_fun_ls_h¹ 0]: 663 --->
//│ 	case _lh_snd_arg1³ of {LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³ | _  => error⁰}: 1398
//│ 	case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰}: 1918
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 667 --->
//│ 	case ls¹⁷ of {LH_C h¹⁴ t¹⁸ => [LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)] | LH_N  => [LH_N]}: 1392
//│ 	case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 1920
//│ [LH_N]: 668 --->
//│ 	case ls¹⁷ of {LH_C h¹⁴ t¹⁸ => [LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)] | LH_N  => [LH_N]}: 1392
//│ 	case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 1920
//│ [LH_C 0 algb1_lh_₀(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 676 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))} | LH_N  => (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰)))}: 903
//│ [LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695 --->
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_lh_₂(snd_lh_₂, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₂(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 630
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1679
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ 	case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799
//│ [LH_N]: 696 --->
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_lh_₂(snd_lh_₂, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₂(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 630
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1679
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ 	case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799
//│ [LH_N]: 698 --->
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_lh_₂(snd_lh_₂, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₂(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 630
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1679
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ 	case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799
//│ [LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723 --->
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case ls⁹ of {LH_C h⁸ t¹¹ => (1 + length_lh_₁(t¹¹)) | LH_N  => 0}: 915
//│ 	case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1679
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ 	case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799
//│ [LH_N]: 724 --->
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case ls⁹ of {LH_C h⁸ t¹¹ => (1 + length_lh_₁(t¹¹)) | LH_N  => 0}: 915
//│ 	case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1679
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ 	case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799
//│ [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756 --->
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algb1_arg1² of {LH_N  => map_lh_₀(snd_lh_₀, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₀(_lh_algb1_LH_C_1², algb2_lh_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 1218
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1679
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ 	case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799
//│ [LH_N]: 757 --->
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algb1_arg1² of {LH_N  => map_lh_₀(snd_lh_₀, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₀(_lh_algb1_LH_C_1², algb2_lh_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 1218
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1679
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ 	case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799
//│ [LH_N]: 759 --->
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algb1_arg1² of {LH_N  => map_lh_₀(snd_lh_₀, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₀(_lh_algb1_LH_C_1², algb2_lh_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 1218
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1679
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ 	case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799
//│ [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 794 --->
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ [LH_C f²(h⁹) map_lh_₂(f², t¹²)]: 926 --->
//│ 	case xs² of {LH_C hx² tx² => case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))} | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1373
//│ [LH_N]: 927 --->
//│ 	case xs² of {LH_C hx² tx² => case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))} | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1373
//│ [LH_C h¹¹ a³]: 971 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 990
//│ [LH_P2 _lh_listcomp_fun_ls_h² 0]: 984 --->
//│ 	case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰}: 1185
//│ 	case _lh_snd_arg1⁴ of {LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴ | _  => error⁰}: 1533
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 988 --->
//│ 	case ls⁵ of {LH_C h⁴ t⁶ => [LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)] | LH_N  => [LH_N]}: 607
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1187
//│ [LH_N]: 989 --->
//│ 	case ls⁵ of {LH_C h⁴ t⁶ => [LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)] | LH_N  => [LH_N]}: 607
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1187
//│ [LH_C 0 algb1_lh_₁(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 997 --->
//│ 	case ls²¹ of {LH_C h¹⁶ t²⁰ => reverse_helper_lh_₀(t²⁰, [LH_C h¹⁶ a⁷]) | LH_N  => a⁷}: 1527
//│ [LH_C h¹² a⁴]: 1031 --->
//│ 	case _lh_algb1_arg1³ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2³) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₁(_lh_algb1_LH_C_1³, algb2_lh_₁(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2³)) | _  => error⁰}: 1292
//│ [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 1045 --->
//│ 	case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697
//│ 	case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772
//│ 	case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799
//│ [LH_P2 _lh_listcomp_fun_ls_h³ 0]: 1067 --->
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 812
//│ 	case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₂(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰}: 1859
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1071 --->
//│ 	case ls¹⁰ of {LH_C h⁹ t¹² => [LH_C f²(h⁹) map_lh_₂(f², t¹²)] | LH_N  => [LH_N]}: 928
//│ 	case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₂(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1861
//│ [LH_N]: 1072 --->
//│ 	case ls¹⁰ of {LH_C h⁹ t¹² => [LH_C f²(h⁹) map_lh_₂(f², t¹²)] | LH_N  => [LH_N]}: 928
//│ 	case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₂(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1861
//│ [LH_C 0 algb1_lh_₂(_lh_algb_arg1³, let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(_lh_algb_arg2³))]: 1080 --->
//│ 	case xs² of {LH_C hx² tx² => case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))} | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1373
//│ [LH_N]: 1095 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₃(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1130
//│ 	case ls¹⁶ of {LH_C h¹³ t¹⁶ => [LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)] | LH_N  => [LH_N]}: 1232
//│ [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹]: 1115 --->
//│ 	case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₃(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰}: 1128
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 1379
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]: 1125 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₃(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1130
//│ 	case ls¹⁶ of {LH_C h¹³ t¹⁶ => [LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)] | LH_N  => [LH_N]}: 1232
//│ [LH_N]: 1138 --->
//│ 	case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₃(snd_lh_₃, _lh_algb1_arg2⁴) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₃(_lh_algb1_LH_C_1⁴, algb2_lh_₃(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁴)) | _  => error⁰}: 1509
//│ [LH_N]: 1152 --->
//│ 	case ls⁵ of {LH_C h⁴ t⁶ => [LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)] | LH_N  => [LH_N]}: 607
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1187
//│ [LH_P2 _lh_algb2_LH_P2_0² kjcurr²]: 1172 --->
//│ 	case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰}: 1185
//│ 	case _lh_snd_arg1⁴ of {LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴ | _  => error⁰}: 1533
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]: 1182 --->
//│ 	case ls⁵ of {LH_C h⁴ t⁶ => [LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)] | LH_N  => [LH_N]}: 607
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1187
//│ [LH_N]: 1195 --->
//│ 	case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))}: 898
//│ [LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)]: 1230 --->
//│ 	case ls²² of {LH_C h¹⁷ t²¹ => reverse_helper_lh_₃(t²¹, [LH_C h¹⁷ a⁸]) | LH_N  => a⁸}: 1544
//│ [LH_N]: 1231 --->
//│ 	case ls²² of {LH_C h¹⁷ t²¹ => reverse_helper_lh_₃(t²¹, [LH_C h¹⁷ a⁸]) | LH_N  => a⁸}: 1544
//│ [LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹¹ of {LH_C h¹⁰ t¹³ => (1 + length_lh_₀(t¹³)) | LH_N  => 0}: 963
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_N]: 1267 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹¹ of {LH_C h¹⁰ t¹³ => (1 + length_lh_₀(t¹³)) | LH_N  => 0}: 963
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)]: 1390 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))} | LH_N  => (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰)))}: 903
//│ [LH_N]: 1391 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))} | LH_N  => (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰)))}: 903
//│ [LH_C h¹⁵ a⁶]: 1437 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]}: 1462
//│ [LH_N]: 1446 --->
//│ 	case _lh_algb1_arg1³ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2³) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₁(_lh_algb1_LH_C_1³, algb2_lh_₁(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2³)) | _  => error⁰}: 1292
//│ [LH_P2 _lh_listcomp_fun_ls_h⁴ 0]: 1456 --->
//│ 	case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₃(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰}: 1128
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 1379
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 1460 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₃(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1130
//│ 	case ls¹⁶ of {LH_C h¹³ t¹⁶ => [LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)] | LH_N  => [LH_N]}: 1232
//│ [LH_N]: 1461 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₃(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1130
//│ 	case ls¹⁶ of {LH_C h¹³ t¹⁶ => [LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)] | LH_N  => [LH_N]}: 1232
//│ [LH_C 0 algb1_lh_₃(_lh_algb_arg1⁴, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(_lh_algb_arg2⁴))]: 1469 --->
//│ 	case ls²² of {LH_C h¹⁷ t²¹ => reverse_helper_lh_₃(t²¹, [LH_C h¹⁷ a⁸]) | LH_N  => a⁸}: 1544
//│ [LH_N]: 1515 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]}: 1462
//│ [LH_C h¹⁶ a⁷]: 1524 --->
//│ 	case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))}: 898
//│ [LH_C h¹⁷ a⁸]: 1541 --->
//│ 	case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))}: 1368
//│ [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_N]: 1781 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 990
//│ [LH_N]: 1787 --->
//│ 	case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))}: 1368
//│ [LH_C h¹⁸ a⁹]: 1796 --->
//│ 	case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₃(snd_lh_₃, _lh_algb1_arg2⁴) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₃(_lh_algb1_LH_C_1⁴, algb2_lh_₃(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁴)) | _  => error⁰}: 1509
//│ [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_N]: 1819 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_N]: 1821 --->
//│ 	case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783
//│ 	case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073
//│ 	case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773
//│ 	case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881
//│ [LH_N]: 1826 --->
//│ 	case ls¹⁰ of {LH_C h⁹ t¹² => [LH_C f²(h⁹) map_lh_₂(f², t¹²)] | LH_N  => [LH_N]}: 928
//│ 	case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₂(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1861
//│ [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³]: 1846 --->
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 812
//│ 	case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₂(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰}: 1859
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)]: 1856 --->
//│ 	case ls¹⁰ of {LH_C h⁹ t¹² => [LH_C f²(h⁹) map_lh_₂(f², t¹²)] | LH_N  => [LH_N]}: 928
//│ 	case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₂(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1861
//│ [LH_N]: 1885 --->
//│ 	case ls¹⁷ of {LH_C h¹⁴ t¹⁸ => [LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)] | LH_N  => [LH_N]}: 1392
//│ 	case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 1920
//│ [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴]: 1905 --->
//│ 	case _lh_snd_arg1³ of {LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³ | _  => error⁰}: 1398
//│ 	case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰}: 1918
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)]: 1915 --->
//│ 	case ls¹⁷ of {LH_C h¹⁴ t¹⁸ => [LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)] | LH_N  => [LH_N]}: 1392
//│ 	case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 1920
//│ ------------------
//│ case ls⁵ of {LH_C h⁴ t⁶ => [LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)] | LH_N  => [LH_N]}: 607 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 988
//│ 	[LH_N]: 989
//│ 	[LH_N]: 1152
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]: 1182
//│ case _lh_algb1_arg1¹ of {LH_N  => map_lh_₂(snd_lh_₂, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₂(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 630 --->
//│ 	[LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695
//│ 	[LH_N]: 696
//│ 	[LH_N]: 698
//│ case ls⁶ of {LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)] | LH_N  => [LH_N]}: 651 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 669 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case ls⁷ of {LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n² - 1), t⁸)] | LH_N  => [LH_N]}: 697 --->
//│ 	[LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695
//│ 	[LH_N]: 696
//│ 	[LH_N]: 698
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723
//│ 	[LH_N]: 724
//│ 	[LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756
//│ 	[LH_N]: 757
//│ 	[LH_N]: 759
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 794
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 1045
//│ case ls⁸ of {LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 758 --->
//│ 	[LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695
//│ 	[LH_N]: 696
//│ 	[LH_N]: 698
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723
//│ 	[LH_N]: 724
//│ 	[LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756
//│ 	[LH_N]: 757
//│ 	[LH_N]: 759
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 794
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 1045
//│ case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 783 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 806 --->
//│ 	[LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695
//│ 	[LH_N]: 696
//│ 	[LH_N]: 698
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723
//│ 	[LH_N]: 724
//│ 	[LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756
//│ 	[LH_N]: 757
//│ 	[LH_N]: 759
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 794
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 1045
//│ case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 812 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h³ 0]: 1067
//│ 	[LH_P2 _lh_algb2_LH_P2_0³ kjcurr³]: 1846
//│ case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))}: 898 --->
//│ 	[LH_N]: 1195
//│ 	[LH_C h¹⁶ a⁷]: 1524
//│ case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))} | LH_N  => (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰)))}: 903 --->
//│ 	[LH_C 0 algb1_lh_₀(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 676
//│ 	[LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)]: 1390
//│ 	[LH_N]: 1391
//│ case ls⁹ of {LH_C h⁸ t¹¹ => (1 + length_lh_₁(t¹¹)) | LH_N  => 0}: 915 --->
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723
//│ 	[LH_N]: 724
//│ case ls¹⁰ of {LH_C h⁹ t¹² => [LH_C f²(h⁹) map_lh_₂(f², t¹²)] | LH_N  => [LH_N]}: 928 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1071
//│ 	[LH_N]: 1072
//│ 	[LH_N]: 1826
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)]: 1856
//│ case ls¹¹ of {LH_C h¹⁰ t¹³ => (1 + length_lh_₀(t¹³)) | LH_N  => 0}: 963 --->
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ case ls¹² of {LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, [LH_C h¹¹ a³]) | LH_N  => a³}: 974 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 990 --->
//│ 	[LH_C h¹¹ a³]: 971
//│ 	[LH_N]: 1781
//│ case ls¹³ of {LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, [LH_C h¹² a⁴]) | LH_N  => a⁴}: 1034 --->
//│ 	[LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695
//│ 	[LH_N]: 696
//│ 	[LH_N]: 698
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723
//│ 	[LH_N]: 724
//│ 	[LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756
//│ 	[LH_N]: 757
//│ 	[LH_N]: 759
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 794
//│ case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 1057 --->
//│ 	[LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695
//│ 	[LH_N]: 696
//│ 	[LH_N]: 698
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723
//│ 	[LH_N]: 724
//│ 	[LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756
//│ 	[LH_N]: 757
//│ 	[LH_N]: 759
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 794
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 1045
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 1073 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₃(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰}: 1128 --->
//│ 	[LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹]: 1115
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁴ 0]: 1456
//│ case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₃(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1130 --->
//│ 	[LH_N]: 1095
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]: 1125
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 1460
//│ 	[LH_N]: 1461
//│ case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰}: 1185 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² 0]: 984
//│ 	[LH_P2 _lh_algb2_LH_P2_0² kjcurr²]: 1172
//│ case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1187 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 988
//│ 	[LH_N]: 989
//│ 	[LH_N]: 1152
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]: 1182
//│ case _lh_algb1_arg1² of {LH_N  => map_lh_₀(snd_lh_₀, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₀(_lh_algb1_LH_C_1², algb2_lh_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 1218 --->
//│ 	[LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756
//│ 	[LH_N]: 757
//│ 	[LH_N]: 759
//│ case ls¹⁶ of {LH_C h¹³ t¹⁶ => [LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)] | LH_N  => [LH_N]}: 1232 --->
//│ 	[LH_N]: 1095
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₃(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]: 1125
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)]: 1460
//│ 	[LH_N]: 1461
//│ case _lh_algb1_arg1³ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2³) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₁(_lh_algb1_LH_C_1³, algb2_lh_₁(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2³)) | _  => error⁰}: 1292 --->
//│ 	[LH_C h¹² a⁴]: 1031
//│ 	[LH_N]: 1446
//│ case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))}: 1368 --->
//│ 	[LH_C h¹⁷ a⁸]: 1541
//│ 	[LH_N]: 1787
//│ case xs² of {LH_C hx² tx² => case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))} | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1373 --->
//│ 	[LH_C f²(h⁹) map_lh_₂(f², t¹²)]: 926
//│ 	[LH_N]: 927
//│ 	[LH_C 0 algb1_lh_₂(_lh_algb_arg1³, let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(_lh_algb_arg2³))]: 1080
//│ case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 1379 --->
//│ 	[LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹]: 1115
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁴ 0]: 1456
//│ case ls¹⁷ of {LH_C h¹⁴ t¹⁸ => [LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)] | LH_N  => [LH_N]}: 1392 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 667
//│ 	[LH_N]: 668
//│ 	[LH_N]: 1885
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)]: 1915
//│ case _lh_snd_arg1³ of {LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³ | _  => error⁰}: 1398 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹ 0]: 663
//│ 	[LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴]: 1905
//│ case ls¹⁸ of {LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, [LH_C h¹⁵ a⁶]) | LH_N  => a⁶}: 1440 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]}: 1462 --->
//│ 	[LH_C h¹⁵ a⁶]: 1437
//│ 	[LH_N]: 1515
//│ case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₃(snd_lh_₃, _lh_algb1_arg2⁴) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₃(_lh_algb1_LH_C_1⁴, algb2_lh_₃(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁴)) | _  => error⁰}: 1509 --->
//│ 	[LH_N]: 1138
//│ 	[LH_C h¹⁸ a⁹]: 1796
//│ case ls²¹ of {LH_C h¹⁶ t²⁰ => reverse_helper_lh_₀(t²⁰, [LH_C h¹⁶ a⁷]) | LH_N  => a⁷}: 1527 --->
//│ 	[LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)]: 605
//│ 	[LH_N]: 606
//│ 	[LH_C 0 algb1_lh_₁(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 997
//│ case _lh_snd_arg1⁴ of {LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴ | _  => error⁰}: 1533 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² 0]: 984
//│ 	[LH_P2 _lh_algb2_LH_P2_0² kjcurr²]: 1172
//│ case ls²² of {LH_C h¹⁷ t²¹ => reverse_helper_lh_₃(t²¹, [LH_C h¹⁷ a⁸]) | LH_N  => a⁸}: 1544 --->
//│ 	[LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)]: 1230
//│ 	[LH_N]: 1231
//│ 	[LH_C 0 algb1_lh_₃(_lh_algb_arg1⁴, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(_lh_algb_arg2⁴))]: 1469
//│ case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1567 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1679 --->
//│ 	[LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695
//│ 	[LH_N]: 696
//│ 	[LH_N]: 698
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723
//│ 	[LH_N]: 724
//│ 	[LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756
//│ 	[LH_N]: 757
//│ 	[LH_N]: 759
//│ case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 1772 --->
//│ 	[LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695
//│ 	[LH_N]: 696
//│ 	[LH_N]: 698
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723
//│ 	[LH_N]: 724
//│ 	[LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756
//│ 	[LH_N]: 757
//│ 	[LH_N]: 759
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 794
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 1045
//│ case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²² -> [LH_C _lh_algc_LH_C_0¹ t²²]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2²), reverse_lh_₂(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₀(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₁(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₂(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₂(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2³), reverse_lh_₅(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₀(m2³, k³, xs1³, take_lh_₃(k³, _lh_algc_arg4¹), algc_lh_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 1773 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case ls²⁵ of {LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, [LH_C h¹⁸ a⁹]) | LH_N  => a⁹}: 1799 --->
//│ 	[LH_C h⁶ take_lh_₂((n² - 1), t⁸)]: 695
//│ 	[LH_N]: 696
//│ 	[LH_N]: 698
//│ 	[LH_C a² enumFromThenTo_lh_₀(t⁹, ((2 * t⁹) - a²), b¹)]: 723
//│ 	[LH_N]: 724
//│ 	[LH_C h⁷ take_lh_₀((n³ - 1), t¹⁰)]: 756
//│ 	[LH_N]: 757
//│ 	[LH_N]: 759
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 1045
//│ case ls²⁶ of {LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)] | LH_N  => [LH_N]}: 1820 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₂(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰}: 1859 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h³ 0]: 1067
//│ 	[LH_P2 _lh_algb2_LH_P2_0³ kjcurr³]: 1846
//│ case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₂(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1861 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 1071
//│ 	[LH_N]: 1072
//│ 	[LH_N]: 1826
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₂(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)]: 1856
//│ case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1881 --->
//│ 	[LH_C h⁵ take_lh_₁((n¹ - 1), t⁷)]: 649
//│ 	[LH_N]: 650
//│ 	[LH_N]: 652
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 771
//│ 	[LH_C a⁵ enumFromThenTo_lh_₁(t¹⁷, ((2 * t¹⁷) - a⁵), b²)]: 1266
//│ 	[LH_N]: 1267
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1555
//│ 	[LH_C h¹⁹ take_lh_₃((n⁴ - 1), t²⁴)]: 1818
//│ 	[LH_N]: 1819
//│ 	[LH_N]: 1821
//│ case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰}: 1918 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹ 0]: 663
//│ 	[LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴]: 1905
//│ case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 1920 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 667
//│ 	[LH_N]: 668
//│ 	[LH_N]: 1885
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)]: 1915
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)]: 605 --->
//│ 	case ls²¹ of {LH_C h¹⁶ t²⁰ => reverse_helper_lh_₀(t²⁰, [LH_C h¹⁶ a⁷]) | LH_N  => a⁷}: 1527
//│ [LH_N]: 606 --->
//│ 	case ls²¹ of {LH_C h¹⁶ t²⁰ => reverse_helper_lh_₀(t²⁰, [LH_C h¹⁶ a⁷]) | LH_N  => a⁷}: 1527
//│ [LH_C 0 algb1_lh_₀(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 676 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))} | LH_N  => (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰)))}: 903
//│ [LH_C f²(h⁹) map_lh_₂(f², t¹²)]: 926 --->
//│ 	case xs² of {LH_C hx² tx² => case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))} | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1373
//│ [LH_N]: 927 --->
//│ 	case xs² of {LH_C hx² tx² => case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))} | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1373
//│ [LH_C h¹¹ a³]: 971 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 990
//│ [LH_C 0 algb1_lh_₁(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 997 --->
//│ 	case ls²¹ of {LH_C h¹⁶ t²⁰ => reverse_helper_lh_₀(t²⁰, [LH_C h¹⁶ a⁷]) | LH_N  => a⁷}: 1527
//│ [LH_C h¹² a⁴]: 1031 --->
//│ 	case _lh_algb1_arg1³ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2³) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₁(_lh_algb1_LH_C_1³, algb2_lh_₁(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2³)) | _  => error⁰}: 1292
//│ [LH_C 0 algb1_lh_₂(_lh_algb_arg1³, let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(_lh_algb_arg2³))]: 1080 --->
//│ 	case xs² of {LH_C hx² tx² => case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))} | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1373
//│ [LH_N]: 1138 --->
//│ 	case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₃(snd_lh_₃, _lh_algb1_arg2⁴) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₃(_lh_algb1_LH_C_1⁴, algb2_lh_₃(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁴)) | _  => error⁰}: 1509
//│ [LH_N]: 1195 --->
//│ 	case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))}: 898
//│ [LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)]: 1230 --->
//│ 	case ls²² of {LH_C h¹⁷ t²¹ => reverse_helper_lh_₃(t²¹, [LH_C h¹⁷ a⁸]) | LH_N  => a⁸}: 1544
//│ [LH_N]: 1231 --->
//│ 	case ls²² of {LH_C h¹⁷ t²¹ => reverse_helper_lh_₃(t²¹, [LH_C h¹⁷ a⁸]) | LH_N  => a⁸}: 1544
//│ [LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)]: 1390 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))} | LH_N  => (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰)))}: 903
//│ [LH_N]: 1391 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))} | LH_N  => (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰)))}: 903
//│ [LH_C h¹⁵ a⁶]: 1437 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]}: 1462
//│ [LH_N]: 1446 --->
//│ 	case _lh_algb1_arg1³ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2³) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₁(_lh_algb1_LH_C_1³, algb2_lh_₁(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2³)) | _  => error⁰}: 1292
//│ [LH_C 0 algb1_lh_₃(_lh_algb_arg1⁴, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(_lh_algb_arg2⁴))]: 1469 --->
//│ 	case ls²² of {LH_C h¹⁷ t²¹ => reverse_helper_lh_₃(t²¹, [LH_C h¹⁷ a⁸]) | LH_N  => a⁸}: 1544
//│ [LH_N]: 1515 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]}: 1462
//│ [LH_C h¹⁶ a⁷]: 1524 --->
//│ 	case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))}: 898
//│ [LH_C h¹⁷ a⁸]: 1541 --->
//│ 	case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))}: 1368
//│ [LH_N]: 1781 --->
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 990
//│ [LH_N]: 1787 --->
//│ 	case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))}: 1368
//│ [LH_C h¹⁸ a⁹]: 1796 --->
//│ 	case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₃(snd_lh_₃, _lh_algb1_arg2⁴) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₃(_lh_algb1_LH_C_1⁴, algb2_lh_₃(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁴)) | _  => error⁰}: 1509
//│ ------------------
//│ case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))}: 898 --->
//│ 	[LH_N]: 1195
//│ 	[LH_C h¹⁶ a⁷]: 1524
//│ case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => let _lh_findk_LH_C_1² = zip_lh_₀(tx¹, ty¹)
//│ in let _lh_findk_LH_C_0¹ = let _lh_findk_LH_P2_1¹ = hy¹
//│ in let _lh_findk_LH_P2_0¹ = hx¹
//│ in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg3⁷ -> if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3⁷) then findk_lh_₂((_lh_findk_arg1⁷ + 1), _lh_findk_arg1⁷, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1³) else findk_lh_₃((_lh_findk_arg1⁷ + 1), _lh_findk_arg2⁷, _lh_findk_arg3⁷, _lh_findk_LH_C_1³)))))
//│ in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0¹(_lh_findk_LH_C_1², _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))) | LH_N  => (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg3⁹ -> _lh_findk_arg2⁹)))} | LH_N  => (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰)))}: 903 --->
//│ 	[LH_C 0 algb1_lh_₀(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 676
//│ 	[LH_C f⁴(h¹⁴) map_lh_₀(f⁴, t¹⁸)]: 1390
//│ 	[LH_N]: 1391
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 990 --->
//│ 	[LH_C h¹¹ a³]: 971
//│ 	[LH_N]: 1781
//│ case _lh_algb1_arg1³ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2³) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₁(_lh_algb1_LH_C_1³, algb2_lh_₁(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2³)) | _  => error⁰}: 1292 --->
//│ 	[LH_C h¹² a⁴]: 1031
//│ 	[LH_N]: 1446
//│ case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))}: 1368 --->
//│ 	[LH_C h¹⁷ a⁸]: 1541
//│ 	[LH_N]: 1787
//│ case xs² of {LH_C hx² tx² => case ys² of {LH_C hy² ty² => let _lh_findk_LH_C_1⁴ = zip_lh_₁(tx², ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx²
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₄((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₅((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))) | LH_N  => (fun _lh_findk_arg2¹⁵ -> (fun _lh_findk_arg1¹⁵ -> (fun _lh_findk_arg3¹⁵ -> _lh_findk_arg2¹⁵)))} | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1373 --->
//│ 	[LH_C f²(h⁹) map_lh_₂(f², t¹²)]: 926
//│ 	[LH_N]: 927
//│ 	[LH_C 0 algb1_lh_₂(_lh_algb_arg1³, let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(_lh_algb_arg2³))]: 1080
//│ case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]}: 1462 --->
//│ 	[LH_C h¹⁵ a⁶]: 1437
//│ 	[LH_N]: 1515
//│ case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₃(snd_lh_₃, _lh_algb1_arg2⁴) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₃(_lh_algb1_LH_C_1⁴, algb2_lh_₃(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁴)) | _  => error⁰}: 1509 --->
//│ 	[LH_N]: 1138
//│ 	[LH_C h¹⁸ a⁹]: 1796
//│ case ls²¹ of {LH_C h¹⁶ t²⁰ => reverse_helper_lh_₀(t²⁰, [LH_C h¹⁶ a⁷]) | LH_N  => a⁷}: 1527 --->
//│ 	[LH_C f¹(h⁴) map_lh_₁(f¹, t⁶)]: 605
//│ 	[LH_N]: 606
//│ 	[LH_C 0 algb1_lh_₁(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 997
//│ case ls²² of {LH_C h¹⁷ t²¹ => reverse_helper_lh_₃(t²¹, [LH_C h¹⁷ a⁸]) | LH_N  => a⁸}: 1544 --->
//│ 	[LH_C f³(h¹³) map_lh_₃(f³, t¹⁶)]: 1230
//│ 	[LH_N]: 1231
//│ 	[LH_C 0 algb1_lh_₃(_lh_algb_arg1⁴, let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁴(_lh_algb_arg2⁴))]: 1469
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testLCSS_nofib_lh_₀(primId⁰(0))
//│ def testLCSS_nofib_lh_₀(_lh_testLCSS_nofib_arg1²) = 
//│ 	lcssMain_lh_₀(1, 2, 60, 30, 31, 90)
//│ 	where
//│ 	def lcssMain_lh_₀(_lh_lcssMain_arg1², _lh_lcssMain_arg2², _lh_lcssMain_arg3², _lh_lcssMain_arg4², _lh_lcssMain_arg5², _lh_lcssMain_arg6²) = 
//│ 		lcss_lh_₀(enumFromThenTo_lh_₀(_lh_lcssMain_arg1², _lh_lcssMain_arg2², _lh_lcssMain_arg3²), enumFromThenTo_lh_₁(_lh_lcssMain_arg4², _lh_lcssMain_arg5², _lh_lcssMain_arg6²))
//│ 		where
//│ 		def enumFromThenTo_lh_₀(a¹⁶, t²⁷, b³) = 
//│ 			if (a¹⁶ <= b³) then [LH_C a¹⁶ enumFromThenTo_lh_₀(t²⁷, ((2 * t²⁷) - a¹⁶), b³)] else [LH_N]
//│ 		def enumFromThenTo_lh_₁(a¹⁸, t²⁸, b⁴) = 
//│ 			if (a¹⁸ <= b⁴) then [LH_C a¹⁸ enumFromThenTo_lh_₁(t²⁸, ((2 * t²⁸) - a¹⁸), b⁴)] else [LH_N]
//│ 		def lcss_lh_₀(_lh_lcss_arg1², _lh_lcss_arg2²) = 
//│ 			algc_lh_₀(length_lh_₁(_lh_lcss_arg1²), length_lh_₀(_lh_lcss_arg2²), _lh_lcss_arg1², _lh_lcss_arg2², [LH_N])
//│ 			where
//│ 			def algc_lh_₀(_lh_algc_arg1², _lh_algc_arg2², _lh_algc_arg3², _lh_algc_arg4²) = 
//│ 				case _lh_algc_arg4² of {
//│ 					LH_N  => (fun x⁴ -> x⁴)
//│ 					| _  => case _lh_algc_arg3² of {
//│ 						LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {
//│ 							LH_N  => if inList_lh_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4²) then (fun t²⁹ -> [LH_C _lh_algc_LH_C_0¹ t²⁹]) else (fun x⁵ -> x⁵)
//│ 							| _  => 
//│ 								let m2⁴ = div⁰(_lh_algc_arg1², 2)
//│ 								in let xs1⁴ = take_lh_₀(m2⁴, _lh_algc_arg3²)
//│ 								in let xs2⁴ = drop_lh_₀(m2⁴, _lh_algc_arg3²)
//│ 								in let l1⁴ = algb_lh_₀(xs1⁴, _lh_algc_arg4²)
//│ 								in let l2⁴ = reverse_lh_₀(algb_lh_₁(reverse_lh_₁(xs2⁴), reverse_lh_₂(_lh_algc_arg4²)))
//│ 								in let k⁴ = findk_lh_₀(0, 0, (0 - 1), zip_lh_₀(l1⁴, l2⁴))
//│ 								in (fun _lh_funcomp_x⁴ -> algc_lh_₀(m2⁴, k⁴, xs1⁴, take_lh_₁(k⁴, _lh_algc_arg4²), algc_lh_₀((_lh_algc_arg1² - m2⁴), (_lh_algc_arg2² - k⁴), xs2⁴, drop_lh_₁(k⁴, _lh_algc_arg4²), _lh_funcomp_x⁴)))}
//│ 						| _  => 
//│ 							let m2⁵ = div⁰(_lh_algc_arg1², 2)
//│ 							in let xs1⁵ = take_lh_₂(m2⁵, _lh_algc_arg3²)
//│ 							in let xs2⁵ = drop_lh_₂(m2⁵, _lh_algc_arg3²)
//│ 							in let l1⁵ = algb_lh_₂(xs1⁵, _lh_algc_arg4²)
//│ 							in let l2⁵ = reverse_lh_₃(algb_lh_₃(reverse_lh_₄(xs2⁵), reverse_lh_₅(_lh_algc_arg4²)))
//│ 							in let k⁵ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1⁵, l2⁵))
//│ 							in (fun _lh_funcomp_x⁵ -> algc_lh_₀(m2⁵, k⁵, xs1⁵, take_lh_₃(k⁵, _lh_algc_arg4²), algc_lh_₀((_lh_algc_arg1² - m2⁵), (_lh_algc_arg2² - k⁵), xs2⁵, drop_lh_₃(k⁵, _lh_algc_arg4²), _lh_funcomp_x⁵)))}}
//│ 				where
//│ 				def algb_lh_₀(_lh_algb_arg1⁷, _lh_algb_arg2⁷) = 
//│ 					let tx¹⁰ = algb1_lh_₀(_lh_algb_arg1⁷, 
//│ 						let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t¹)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun¹⁰(_lh_algb_arg2⁷))
//│ 					in let hx¹⁰ = 0
//│ 					in (fun ys⁸ -> ys⁸(hx¹⁰, tx¹⁰))
//│ 					where
//│ 					def algb1_lh_₀(_lh_algb1_arg1⁶, _lh_algb1_arg2⁷) = 
//│ 						case _lh_algb1_arg1⁶ of {
//│ 							LH_N  => map_lh_₀(snd_lh_₀, _lh_algb1_arg2⁷)
//│ 							| LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₀(_lh_algb1_LH_C_1², algb2_lh_₀(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2⁷))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₀(_lh_algb2_arg1⁷, _lh_algb2_arg2⁷, _lh_algb2_arg3⁷, _lh_algb2_arg4⁷) = 
//│ 							case _lh_algb2_arg4⁷ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => 
//│ 										let kjcurr⁷ = if (_lh_algb2_arg1⁷ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁷ + 1) else max_lh_₀(_lh_algb2_arg3⁷, _lh_algb2_LH_P2_1⁴)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁷] algb2_lh_₀(_lh_algb2_arg1⁷, _lh_algb2_LH_P2_1⁴, kjcurr⁷, _lh_algb2_LH_C_1⁴)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₀(_lh_max_arg1⁷, _lh_max_arg2⁷) = 
//│ 								if (_lh_max_arg1⁷ > _lh_max_arg2⁷) then _lh_max_arg1⁷ else _lh_max_arg2⁷
//│ 						def map_lh_₀(f⁵, ls²⁸) = 
//│ 							case ls²⁸ of {
//│ 								LH_C h¹⁴ t¹⁸ => 
//│ 									let tx³ = map_lh_₀(f⁵, t¹⁸)
//│ 									in let hx³ = f⁵(h¹⁴)
//│ 									in (fun ys³ -> ys³(hx³, tx³))
//│ 								| LH_N  => (fun ys⁴ -> (fun _lh_findk_arg2¹⁹ -> (fun _lh_findk_arg1¹⁹ -> (fun _lh_findk_arg3¹⁹ -> _lh_findk_arg2¹⁹))))}
//│ 						def snd_lh_₀(_lh_snd_arg1⁶) = 
//│ 							case _lh_snd_arg1⁶ of {
//│ 								LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³
//│ 								| _  => error⁰}
//│ 				def algb_lh_₁(_lh_algb_arg1⁶, _lh_algb_arg2⁶) = 
//│ 					let t³⁰ = algb1_lh_₁(_lh_algb_arg1⁶, 
//│ 						let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁶ -> _lh_listcomp_fun_para⁶(_lh_listcomp_fun⁹))
//│ 						in _lh_listcomp_fun⁹(_lh_algb_arg2⁶))
//│ 					in let h²² = 0
//│ 					in (fun a²⁰ -> reverse_helper_lh_₀(t³⁰, 
//│ 						let ty⁵ = a²⁰
//│ 						in let hy⁵ = h²²
//│ 						in (fun hx⁷ -> (fun tx⁷ -> 
//│ 							let _lh_findk_LH_C_1¹⁰ = zip_lh_₀(tx⁷, ty⁵)
//│ 							in let _lh_findk_LH_C_0⁵ = 	
//│ 								let _lh_findk_LH_P2_1⁵ = hy⁵
//│ 								in let _lh_findk_LH_P2_0⁵ = hx⁷
//│ 								in (fun _lh_findk_LH_C_1¹¹ -> (fun _lh_findk_arg1²⁵ -> (fun _lh_findk_arg2²⁵ -> (fun _lh_findk_arg3²⁵ -> if ((_lh_findk_LH_P2_0⁵ + _lh_findk_LH_P2_1⁵) >= _lh_findk_arg3²⁵) then findk_lh_₂((_lh_findk_arg1²⁵ + 1), _lh_findk_arg1²⁵, (_lh_findk_LH_P2_0⁵ + _lh_findk_LH_P2_1⁵), _lh_findk_LH_C_1¹¹) else findk_lh_₃((_lh_findk_arg1²⁵ + 1), _lh_findk_arg2²⁵, _lh_findk_arg3²⁵, _lh_findk_LH_C_1¹¹)))))
//│ 							in (fun _lh_findk_arg2²⁶ -> (fun _lh_findk_arg1²⁶ -> (fun _lh_findk_arg3²⁶ -> _lh_findk_LH_C_0⁵(_lh_findk_LH_C_1¹⁰, _lh_findk_arg1²⁶, _lh_findk_arg2²⁶, _lh_findk_arg3²⁶))))))))
//│ 					where
//│ 					def algb1_lh_₁(_lh_algb1_arg1⁸, _lh_algb1_arg2¹⁰) = 
//│ 						_lh_algb1_arg1⁸(_lh_algb1_arg2¹⁰)
//│ 						where
//│ 						def algb2_lh_₁(_lh_algb2_arg1⁸, _lh_algb2_arg2⁸, _lh_algb2_arg3⁸, _lh_algb2_arg4⁸) = 
//│ 							case _lh_algb2_arg4⁸ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {
//│ 									LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => 
//│ 										let kjcurr⁸ = if (_lh_algb2_arg1⁸ == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2⁸ + 1) else max_lh_₁(_lh_algb2_arg3⁸, _lh_algb2_LH_P2_1²)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr⁸] algb2_lh_₁(_lh_algb2_arg1⁸, _lh_algb2_LH_P2_1², kjcurr⁸, _lh_algb2_LH_C_1²)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁(_lh_max_arg1⁸, _lh_max_arg2⁸) = 
//│ 								if (_lh_max_arg1⁸ > _lh_max_arg2⁸) then _lh_max_arg1⁸ else _lh_max_arg2⁸
//│ 						def map_lh_₁(f⁸, ls⁴⁰) = 
//│ 							case ls⁴⁰ of {
//│ 								LH_C h⁴ t⁶ => 
//│ 									let t³¹ = map_lh_₁(f⁸, t⁶)
//│ 									in let h²³ = f⁸(h⁴)
//│ 									in (fun a²¹ -> reverse_helper_lh_₀(t³¹, 
//│ 										let ty⁶ = a²¹
//│ 										in let hy⁶ = h²³
//│ 										in (fun hx⁹ -> (fun tx⁹ -> 
//│ 											let _lh_findk_LH_C_1¹² = zip_lh_₀(tx⁹, ty⁶)
//│ 											in let _lh_findk_LH_C_0⁶ = 	
//│ 												let _lh_findk_LH_P2_1⁶ = hy⁶
//│ 												in let _lh_findk_LH_P2_0⁶ = hx⁹
//│ 												in (fun _lh_findk_LH_C_1¹³ -> (fun _lh_findk_arg1³² -> (fun _lh_findk_arg2³² -> (fun _lh_findk_arg3³² -> if ((_lh_findk_LH_P2_0⁶ + _lh_findk_LH_P2_1⁶) >= _lh_findk_arg3³²) then findk_lh_₂((_lh_findk_arg1³² + 1), _lh_findk_arg1³², (_lh_findk_LH_P2_0⁶ + _lh_findk_LH_P2_1⁶), _lh_findk_LH_C_1¹³) else findk_lh_₃((_lh_findk_arg1³² + 1), _lh_findk_arg2³², _lh_findk_arg3³², _lh_findk_LH_C_1¹³)))))
//│ 											in (fun _lh_findk_arg2³³ -> (fun _lh_findk_arg1³³ -> (fun _lh_findk_arg3³³ -> _lh_findk_LH_C_0⁶(_lh_findk_LH_C_1¹², _lh_findk_arg1³³, _lh_findk_arg2³³, _lh_findk_arg3³³))))))))
//│ 								| LH_N  => (fun a²² -> a²²)}
//│ 						def snd_lh_₁(_lh_snd_arg1⁷) = 
//│ 							case _lh_snd_arg1⁷ of {
//│ 								LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴
//│ 								| _  => error⁰}
//│ 				def algb_lh_₂(_lh_algb_arg1⁸, _lh_algb_arg2⁸) = 
//│ 					let tx¹² = algb1_lh_₂(_lh_algb_arg1⁸, 
//│ 						let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 							LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t³)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun¹²(_lh_algb_arg2⁸))
//│ 					in let hx¹² = 0
//│ 					in (fun ys¹⁰ -> ys¹⁰(hx¹², tx¹²))
//│ 					where
//│ 					def algb1_lh_₂(_lh_algb1_arg1⁵, _lh_algb1_arg2⁵) = 
//│ 						case _lh_algb1_arg1⁵ of {
//│ 							LH_N  => map_lh_₂(snd_lh_₂, _lh_algb1_arg2⁵)
//│ 							| LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₂(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2⁵))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₂(_lh_algb2_arg1⁵, _lh_algb2_arg2⁵, _lh_algb2_arg3⁵, _lh_algb2_arg4⁵) = 
//│ 							case _lh_algb2_arg4⁵ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => 
//│ 										let kjcurr⁵ = if (_lh_algb2_arg1⁵ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2⁵ + 1) else max_lh_₂(_lh_algb2_arg3⁵, _lh_algb2_LH_P2_1³)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr⁵] algb2_lh_₂(_lh_algb2_arg1⁵, _lh_algb2_LH_P2_1³, kjcurr⁵, _lh_algb2_LH_C_1³)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₂(_lh_max_arg1⁶, _lh_max_arg2⁶) = 
//│ 								if (_lh_max_arg1⁶ > _lh_max_arg2⁶) then _lh_max_arg1⁶ else _lh_max_arg2⁶
//│ 						def map_lh_₂(f⁷, ls³⁸) = 
//│ 							case ls³⁸ of {
//│ 								LH_C h⁹ t¹² => 
//│ 									let tx⁸ = map_lh_₂(f⁷, t¹²)
//│ 									in let hx⁸ = f⁷(h⁹)
//│ 									in (fun ys⁶ -> ys⁶(hx⁸, tx⁸))
//│ 								| LH_N  => (fun ys⁷ -> (fun _lh_findk_arg2²⁸ -> (fun _lh_findk_arg1²⁸ -> (fun _lh_findk_arg3²⁸ -> _lh_findk_arg2²⁸))))}
//│ 						def snd_lh_₂(_lh_snd_arg1⁵) = 
//│ 							case _lh_snd_arg1⁵ of {
//│ 								LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 								| _  => error⁰}
//│ 				def algb_lh_₃(_lh_algb_arg1⁵, _lh_algb_arg2⁵) = 
//│ 					let t²⁶ = algb1_lh_₃(_lh_algb_arg1⁵, 
//│ 						let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁵ -> _lh_listcomp_fun_para⁵(_lh_listcomp_fun⁷))
//│ 						in _lh_listcomp_fun⁷(_lh_algb_arg2⁵))
//│ 					in let h²¹ = 0
//│ 					in (fun a¹⁵ -> reverse_helper_lh_₃(t²⁶, 
//│ 						let ty⁴ = a¹⁵
//│ 						in let hy⁴ = h²¹
//│ 						in (fun hx⁶ -> (fun tx⁶ -> 
//│ 							let _lh_findk_LH_C_1⁸ = zip_lh_₁(tx⁶, ty⁴)
//│ 							in let _lh_findk_LH_C_0⁴ = 	
//│ 								let _lh_findk_LH_P2_1⁴ = hy⁴
//│ 								in let _lh_findk_LH_P2_0⁴ = hx⁶
//│ 								in (fun _lh_findk_LH_C_1⁹ -> (fun _lh_findk_arg1²³ -> (fun _lh_findk_arg2²³ -> (fun _lh_findk_arg3²³ -> if ((_lh_findk_LH_P2_0⁴ + _lh_findk_LH_P2_1⁴) >= _lh_findk_arg3²³) then findk_lh_₄((_lh_findk_arg1²³ + 1), _lh_findk_arg1²³, (_lh_findk_LH_P2_0⁴ + _lh_findk_LH_P2_1⁴), _lh_findk_LH_C_1⁹) else findk_lh_₅((_lh_findk_arg1²³ + 1), _lh_findk_arg2²³, _lh_findk_arg3²³, _lh_findk_LH_C_1⁹)))))
//│ 							in (fun _lh_findk_arg2²⁴ -> (fun _lh_findk_arg1²⁴ -> (fun _lh_findk_arg3²⁴ -> _lh_findk_LH_C_0⁴(_lh_findk_LH_C_1⁸, _lh_findk_arg1²⁴, _lh_findk_arg2²⁴, _lh_findk_arg3²⁴))))))))
//│ 					where
//│ 					def algb1_lh_₃(_lh_algb1_arg1⁷, _lh_algb1_arg2⁹) = 
//│ 						_lh_algb1_arg1⁷(_lh_algb1_arg2⁹)
//│ 						where
//│ 						def algb2_lh_₃(_lh_algb2_arg1⁶, _lh_algb2_arg2⁶, _lh_algb2_arg3⁶, _lh_algb2_arg4⁶) = 
//│ 							case _lh_algb2_arg4⁶ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => 
//│ 										let kjcurr⁶ = if (_lh_algb2_arg1⁶ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2⁶ + 1) else max_lh_₃(_lh_algb2_arg3⁶, _lh_algb2_LH_P2_1¹)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr⁶] algb2_lh_₃(_lh_algb2_arg1⁶, _lh_algb2_LH_P2_1¹, kjcurr⁶, _lh_algb2_LH_C_1¹)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₃(_lh_max_arg1⁵, _lh_max_arg2⁵) = 
//│ 								if (_lh_max_arg1⁵ > _lh_max_arg2⁵) then _lh_max_arg1⁵ else _lh_max_arg2⁵
//│ 						def map_lh_₃(f⁶, ls³⁰) = 
//│ 							case ls³⁰ of {
//│ 								LH_C h¹³ t¹⁶ => 
//│ 									let t²⁵ = map_lh_₃(f⁶, t¹⁶)
//│ 									in let h²⁰ = f⁶(h¹³)
//│ 									in (fun a¹¹ -> reverse_helper_lh_₃(t²⁵, 
//│ 										let ty³ = a¹¹
//│ 										in let hy³ = h²⁰
//│ 										in (fun hx⁴ -> (fun tx⁴ -> 
//│ 											let _lh_findk_LH_C_1⁶ = zip_lh_₁(tx⁴, ty³)
//│ 											in let _lh_findk_LH_C_0³ = 	
//│ 												let _lh_findk_LH_P2_1³ = hy³
//│ 												in let _lh_findk_LH_P2_0³ = hx⁴
//│ 												in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²⁰ -> (fun _lh_findk_arg2²⁰ -> (fun _lh_findk_arg3²⁰ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²⁰) then findk_lh_₄((_lh_findk_arg1²⁰ + 1), _lh_findk_arg1²⁰, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₅((_lh_findk_arg1²⁰ + 1), _lh_findk_arg2²⁰, _lh_findk_arg3²⁰, _lh_findk_LH_C_1⁷)))))
//│ 											in (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg3²¹ -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²¹, _lh_findk_arg2²¹, _lh_findk_arg3²¹))))))))
//│ 								| LH_N  => (fun a¹² -> a¹²)}
//│ 						def snd_lh_₃(_lh_snd_arg1⁸) = 
//│ 							case _lh_snd_arg1⁸ of {
//│ 								LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1²
//│ 								| _  => error⁰}
//│ 				def drop_lh_₀(_lh_drop_arg1⁸, _lh_drop_arg2⁸) = 
//│ 					case _lh_drop_arg2⁸ of {
//│ 						LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1⁸ == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₀((_lh_drop_arg1⁸ - 1), _lh_drop_LH_C_1²)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₁(_lh_drop_arg1⁵, _lh_drop_arg2⁵) = 
//│ 					case _lh_drop_arg2⁵ of {
//│ 						LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₁((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1¹)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₂(_lh_drop_arg1⁶, _lh_drop_arg2⁶) = 
//│ 					case _lh_drop_arg2⁶ of {
//│ 						LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₂((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1³)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₃(_lh_drop_arg1⁷, _lh_drop_arg2⁷) = 
//│ 					case _lh_drop_arg2⁷ of {
//│ 						LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₃((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁴)
//│ 						| _  => error⁰}
//│ 				def findk_lh_₀(_lh_findk_arg1²⁷, _lh_findk_arg2²⁷, _lh_findk_arg3²⁷, _lh_findk_arg4⁷) = 
//│ 					_lh_findk_arg4⁷(_lh_findk_arg2²⁷, _lh_findk_arg1²⁷, _lh_findk_arg3²⁷)
//│ 				def findk_lh_₁(_lh_findk_arg1³¹, _lh_findk_arg2³¹, _lh_findk_arg3³¹, _lh_findk_arg4¹⁰) = 
//│ 					_lh_findk_arg4¹⁰(_lh_findk_arg2³¹, _lh_findk_arg1³¹, _lh_findk_arg3³¹)
//│ 				def inList_lh_₀(_lh_inList_arg1², _lh_inList_arg2²) = 
//│ 					case _lh_inList_arg2² of {
//│ 						LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1² == _lh_inList_LH_C_0¹) then [True] else inList_lh_₀(_lh_inList_arg1², _lh_inList_LH_C_1¹)
//│ 						| LH_N  => [False]
//│ 						| _  => error⁰}
//│ 				def reverse_lh_₀(ls⁴³) = 
//│ 					reverse_helper_lh_₀(ls⁴³, (fun hx¹¹ -> (fun tx¹¹ -> (fun _lh_findk_arg2³⁵ -> (fun _lh_findk_arg1³⁵ -> (fun _lh_findk_arg3³⁵ -> _lh_findk_arg2³⁵))))))
//│ 					where
//│ 					def reverse_helper_lh_₀(ls²⁷, a¹⁰) = 
//│ 						ls²⁷(a¹⁰)
//│ 				def reverse_lh_₁(ls³¹) = 
//│ 					reverse_helper_lh_₁(ls³¹, (fun _lh_algb1_arg2⁶ -> map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁶)))
//│ 					where
//│ 					def reverse_helper_lh_₁(ls³⁷, a¹⁹) = 
//│ 						case ls³⁷ of {
//│ 							LH_C h¹² t¹⁵ => reverse_helper_lh_₁(t¹⁵, 
//│ 								let _lh_algb1_LH_C_1⁵ = a¹⁹
//│ 								in let _lh_algb1_LH_C_0⁵ = h¹²
//│ 								in (fun _lh_algb1_arg2⁸ -> algb1_lh_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁸))))
//│ 							| LH_N  => a¹⁹}
//│ 				def reverse_lh_₂(ls⁴⁷) = 
//│ 					reverse_helper_lh_₂(ls⁴⁷, (fun _lh_listcomp_fun¹¹ -> [LH_N]))
//│ 					where
//│ 					def reverse_helper_lh_₂(ls³⁶, a¹⁷) = 
//│ 						case ls³⁶ of {
//│ 							LH_C h¹¹ t¹⁴ => reverse_helper_lh_₂(t¹⁴, 
//│ 								let _lh_listcomp_fun_ls_t⁶ = a¹⁷
//│ 								in let _lh_listcomp_fun_ls_h⁶ = h¹¹
//│ 								in (fun _lh_listcomp_fun⁸ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁶)]))
//│ 							| LH_N  => a¹⁷}
//│ 				def reverse_lh_₃(ls³²) = 
//│ 					reverse_helper_lh_₃(ls³², (fun hx⁵ -> (fun tx⁵ -> (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_arg2²²))))))
//│ 					where
//│ 					def reverse_helper_lh_₃(ls³⁵, a¹⁴) = 
//│ 						ls³⁵(a¹⁴)
//│ 				def reverse_lh_₄(ls⁴⁸) = 
//│ 					reverse_helper_lh_₄(ls⁴⁸, (fun _lh_algb1_arg2¹² -> map_lh_₃(snd_lh_₃, _lh_algb1_arg2¹²)))
//│ 					where
//│ 					def reverse_helper_lh_₄(ls⁴⁶, a²³) = 
//│ 						case ls⁴⁶ of {
//│ 							LH_C h¹⁸ t²³ => reverse_helper_lh_₄(t²³, 
//│ 								let _lh_algb1_LH_C_1⁶ = a²³
//│ 								in let _lh_algb1_LH_C_0⁶ = h¹⁸
//│ 								in (fun _lh_algb1_arg2¹¹ -> algb1_lh_₃(_lh_algb1_LH_C_1⁶, algb2_lh_₃(_lh_algb1_LH_C_0⁶, 0, 0, _lh_algb1_arg2¹¹))))
//│ 							| LH_N  => a²³}
//│ 				def reverse_lh_₅(ls³³) = 
//│ 					reverse_helper_lh_₅(ls³³, (fun _lh_listcomp_fun⁵ -> [LH_N]))
//│ 					where
//│ 					def reverse_helper_lh_₅(ls³⁴, a¹³) = 
//│ 						case ls³⁴ of {
//│ 							LH_C h¹⁵ t¹⁹ => reverse_helper_lh_₅(t¹⁹, 
//│ 								let _lh_listcomp_fun_ls_t⁵ = a¹³
//│ 								in let _lh_listcomp_fun_ls_h⁵ = h¹⁵
//│ 								in (fun _lh_listcomp_fun⁶ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁵)]))
//│ 							| LH_N  => a¹³}
//│ 				def take_lh_₀(n⁷, ls⁴¹) = 
//│ 					if (n⁷ > 0) then case ls⁴¹ of {
//│ 						LH_C h⁷ t¹⁰ => [LH_C h⁷ take_lh_₀((n⁷ - 1), t¹⁰)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₁(n⁶, ls³⁹) = 
//│ 					if (n⁶ > 0) then case ls³⁹ of {
//│ 						LH_C h⁵ t⁷ => [LH_C h⁵ take_lh_₁((n⁶ - 1), t⁷)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₂(n⁵, ls²⁹) = 
//│ 					if (n⁵ > 0) then case ls²⁹ of {
//│ 						LH_C h⁶ t⁸ => [LH_C h⁶ take_lh_₂((n⁵ - 1), t⁸)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₃(n⁸, ls⁴⁵) = 
//│ 					if (n⁸ > 0) then case ls⁴⁵ of {
//│ 						LH_C h¹⁹ t²⁴ => [LH_C h¹⁹ take_lh_₃((n⁸ - 1), t²⁴)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def zip_lh_₀(xs⁴, ys⁹) = 
//│ 					xs⁴(ys⁹)
//│ 					where
//│ 					def findk_lh_₂(_lh_findk_arg1³⁴, _lh_findk_arg2³⁴, _lh_findk_arg3³⁴, _lh_findk_arg4¹¹) = 
//│ 						_lh_findk_arg4¹¹(_lh_findk_arg2³⁴, _lh_findk_arg1³⁴, _lh_findk_arg3³⁴)
//│ 					def findk_lh_₃(_lh_findk_arg1³⁶, _lh_findk_arg2³⁶, _lh_findk_arg3³⁶, _lh_findk_arg4¹²) = 
//│ 						_lh_findk_arg4¹²(_lh_findk_arg2³⁶, _lh_findk_arg1³⁶, _lh_findk_arg3³⁶)
//│ 				def zip_lh_₁(xs³, ys⁵) = 
//│ 					xs³(ys⁵)
//│ 					where
//│ 					def findk_lh_₄(_lh_findk_arg1²⁹, _lh_findk_arg2²⁹, _lh_findk_arg3²⁹, _lh_findk_arg4⁸) = 
//│ 						_lh_findk_arg4⁸(_lh_findk_arg2²⁹, _lh_findk_arg1²⁹, _lh_findk_arg3²⁹)
//│ 					def findk_lh_₅(_lh_findk_arg1³⁰, _lh_findk_arg2³⁰, _lh_findk_arg3³⁰, _lh_findk_arg4⁹) = 
//│ 						_lh_findk_arg4⁹(_lh_findk_arg2³⁰, _lh_findk_arg1³⁰, _lh_findk_arg3³⁰)
//│ 			def length_lh_₀(ls⁴⁴) = 
//│ 				case ls⁴⁴ of {
//│ 					LH_C h¹⁰ t¹³ => (1 + length_lh_₀(t¹³))
//│ 					| LH_N  => 0}
//│ 			def length_lh_₁(ls⁴²) = 
//│ 				case ls⁴² of {
//│ 					LH_C h⁸ t¹¹ => (1 + length_lh_₁(t¹¹))
//│ 					| LH_N  => 0}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
