:NewParser
:ParseOnly


:lhInHaskell
:lhGenOCaml
max a b = if a > b then a else b
drop n (h:t) = if n == 0 then (h:t) else (drop (n - 1) t)
snd (_, x) = x
inList x (h:t) = if x == h then True else inList x t
inList x [] = False
algb1 [] yss = map snd yss
algb1 (x:xs) yss = algb1 xs (algb2 x 0 0 yss)
algb2 _ _ _ [] = []
algb2 x k0j1 k1j1 ((y,k0j):ys)
  = let kjcurr = if x == y then k0j1+1 else max k1j1 k0j
    in (y,kjcurr) : (algb2 x k0j kjcurr ys)
algb xs ys = 0 : algb1 xs [ (y,0) | y <- ys ]
findk k km m [] = km
findk k km m ((x,y):xys) =
  if (x+y) >= m then findk (k+1) k (x+y) xys
  else findk (k+1) km m xys
algc m n xs []  = \x -> x
algc m n [x] ys = if inList x ys then (\t -> (x:t)) else (\x -> x)
algc m n xs ys
  = let m2 = (m `div` 2) in
    let xs1 = take m2 xs in
    let xs2 = drop m2 xs in
    let l1 = algb xs1 ys in
    let l2 = reverse (algb (reverse xs2) (reverse ys)) in
    let k = findk 0 0 (0-1) (zip l1 l2) in
    (algc m2 k xs1 (take k ys)) . (algc (m-m2) (n-k) xs2 (drop k ys))
lcss xs ys = algc (length xs) (length ys) xs ys []
lcssMain a b c d e f = lcss [a,b..c] [d,e..f]
testLCSS_nofib _ = lcssMain 1 2 60 30 31 90
testLCSS_nofib $ primId 0
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testLCSS_nofib_lh_₁^1016(primId⁰(0))
//│ def algb1_lh_₁(_lh_algb1_arg1², _lh_algb1_arg2²) = case _lh_algb1_arg1² of {
//│ 	LH_N  => map_lh_₁^154(snd_lh_₁^155, _lh_algb1_arg2²)
//│ 	| LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₁^159(_lh_algb1_LH_C_1², algb2_lh_₁^162(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²))
//│ 	| _  => error⁰}
//│ def algb1_lh_₂(_lh_algb1_arg1¹, _lh_algb1_arg2¹) = case _lh_algb1_arg1¹ of {
//│ 	LH_N  => map_lh_₁^131(snd_lh_₁^132, _lh_algb1_arg2¹)
//│ 	| LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂^136(_lh_algb1_LH_C_1¹, algb2_lh_₁^139(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹))
//│ 	| _  => error⁰}
//│ def algb1_lh_₃(_lh_algb1_arg1⁰, _lh_algb1_arg2⁰) = case _lh_algb1_arg1⁰ of {
//│ 	LH_N  => map_lh_₁^84(snd_lh_₁^85, _lh_algb1_arg2⁰)
//│ 	| LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh_₃^89(_lh_algb1_LH_C_1⁰, algb2_lh_₁^92(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰))
//│ 	| _  => error⁰}
//│ def algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_arg2⁰, _lh_algb2_arg3⁰, _lh_algb2_arg4⁰) = case _lh_algb2_arg4⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {
//│ 		LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => 
//│ 			let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁^24(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ 			in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁^33(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def algb_lh_₁(_lh_algb_arg1³, _lh_algb_arg2³) = [LH_C 0 algb1_lh_₁^638(_lh_algb_arg1³, 
//│ 	let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 		LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun³(_lh_algb_arg2³))]
//│ def algb_lh_₂(_lh_algb_arg1², _lh_algb_arg2²) = [LH_C 0 algb1_lh_₂^615(_lh_algb_arg1², 
//│ 	let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun²(_lh_algb_arg2²))]
//│ def algb_lh_₃(_lh_algb_arg1¹, _lh_algb_arg2¹) = [LH_C 0 algb1_lh_₃^380(_lh_algb_arg1¹, 
//│ 	let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun¹(_lh_algb_arg2¹))]
//│ def algb_lh_₄(_lh_algb_arg1⁰, _lh_algb_arg2⁰) = [LH_C 0 algb1_lh_₃^351(_lh_algb_arg1⁰, 
//│ 	let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁰(_lh_algb_arg2⁰))]
//│ def algc_lh_₁(_lh_algc_arg1⁰, _lh_algc_arg2⁰, _lh_algc_arg3⁰, _lh_algc_arg4⁰) = case _lh_algc_arg4⁰ of {
//│ 	LH_N  => (fun x⁰ -> x⁰)
//│ 	| _  => case _lh_algc_arg3⁰ of {
//│ 		LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {
//│ 			LH_N  => if inList_lh_₁^694(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹)
//│ 			| _  => 
//│ 				let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ 				in let xs1⁰ = take_lh_₃^711(m2⁰, _lh_algc_arg3⁰)
//│ 				in let xs2⁰ = drop_lh_₁^716(m2⁰, _lh_algc_arg3⁰)
//│ 				in let l1⁰ = algb_lh_₂^721(xs1⁰, _lh_algc_arg4⁰)
//│ 				in let l2⁰ = reverse_lh_₄^726(algb_lh_₄^727(reverse_lh_₆^728(xs2⁰), reverse_lh_₁^732(_lh_algc_arg4⁰)))
//│ 				in let k⁰ = findk_lh_₂^737(0, 0, (0 - 1), zip_lh_₂^748(l1⁰, l2⁰))
//│ 				in (fun _lh_funcomp_x⁰ -> algc_lh_₁^754(m2⁰, k⁰, xs1⁰, take_lh_₁^761(k⁰, _lh_algc_arg4⁰), algc_lh_₁^767((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂^782(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}
//│ 		| _  => 
//│ 			let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ 			in let xs1¹ = take_lh_₂^804(m2¹, _lh_algc_arg3⁰)
//│ 			in let xs2¹ = drop_lh_₄^809(m2¹, _lh_algc_arg3⁰)
//│ 			in let l1¹ = algb_lh_₃^814(xs1¹, _lh_algc_arg4⁰)
//│ 			in let l2¹ = reverse_lh_₂^819(algb_lh_₁^820(reverse_lh_₅^821(xs2¹), reverse_lh_₃^825(_lh_algc_arg4⁰)))
//│ 			in let k¹ = findk_lh_₁^830(0, 0, (0 - 1), zip_lh_₁^841(l1¹, l2¹))
//│ 			in (fun _lh_funcomp_x¹ -> algc_lh_₁^847(m2¹, k¹, xs1¹, take_lh_₄^854(k¹, _lh_algc_arg4⁰), algc_lh_₁^860((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃^875(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}
//│ def drop_lh_₁(_lh_drop_arg1³, _lh_drop_arg2³) = case _lh_drop_arg2³ of {
//│ 	LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁^543((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³)
//│ 	| _  => error⁰}
//│ def drop_lh_₂(_lh_drop_arg1², _lh_drop_arg2²) = case _lh_drop_arg2² of {
//│ 	LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂^290((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²)
//│ 	| _  => error⁰}
//│ def drop_lh_₃(_lh_drop_arg1¹, _lh_drop_arg2¹) = case _lh_drop_arg2¹ of {
//│ 	LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃^267((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def drop_lh_₄(_lh_drop_arg1⁰, _lh_drop_arg2⁰) = case _lh_drop_arg2⁰ of {
//│ 	LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄^244((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def enumFromThenTo_lh_₁(a⁷, t¹⁵, b¹) = if (a⁷ <= b¹) then [LH_C a⁷ enumFromThenTo_lh_₁^958(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)] else [LH_N]
//│ def enumFromThenTo_lh_₂(a⁶, t¹⁴, b⁰) = if (a⁶ <= b⁰) then [LH_C a⁶ enumFromThenTo_lh_₂^914(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)] else [LH_N]
//│ def findk_lh_₁(_lh_findk_arg1¹, _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_arg4¹) = case _lh_findk_arg4¹ of {
//│ 	LH_N  => _lh_findk_arg2¹
//│ 	| LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {
//│ 		LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁^569((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁^586((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def findk_lh_₂(_lh_findk_arg1⁰, _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_arg4⁰) = case _lh_findk_arg4⁰ of {
//│ 	LH_N  => _lh_findk_arg2⁰
//│ 	| LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {
//│ 		LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂^495((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂^512((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_arg2⁰) = case _lh_inList_arg2⁰ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁^472(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def lcssMain_lh_₁(_lh_lcssMain_arg1⁰, _lh_lcssMain_arg2⁰, _lh_lcssMain_arg3⁰, _lh_lcssMain_arg4⁰, _lh_lcssMain_arg5⁰, _lh_lcssMain_arg6⁰) = lcss_lh_₁^979(enumFromThenTo_lh_₁^980(_lh_lcssMain_arg1⁰, _lh_lcssMain_arg2⁰, _lh_lcssMain_arg3⁰), enumFromThenTo_lh_₂^988(_lh_lcssMain_arg4⁰, _lh_lcssMain_arg5⁰, _lh_lcssMain_arg6⁰))
//│ def lcss_lh_₁(_lh_lcss_arg1⁰, _lh_lcss_arg2⁰) = algc_lh_₁^935(length_lh_₂^936(_lh_lcss_arg1⁰), length_lh_₁^940(_lh_lcss_arg2⁰), _lh_lcss_arg1⁰, _lh_lcss_arg2⁰, [LH_N])
//│ def length_lh_₁(ls¹⁸) = case ls¹⁸ of {
//│ 	LH_C h¹² t¹³ => (1 + length_lh_₁^901(t¹³))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls¹⁷) = case ls¹⁷ of {
//│ 	LH_C h¹¹ t¹¹ => (1 + length_lh_₂^682(t¹¹))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁^61(f⁰, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def max_lh_₁(_lh_max_arg1⁰, _lh_max_arg2⁰) = if (_lh_max_arg1⁰ > _lh_max_arg2⁰) then _lh_max_arg1⁰ else _lh_max_arg2⁰
//│ def reverse_helper_lh_₁(ls⁶, a⁵) = case ls⁶ of {
//│ 	LH_C h⁶ t⁶ => reverse_helper_lh_₁^201(t⁶, [LH_C h⁶ a⁵])
//│ 	| LH_N  => a⁵}
//│ def reverse_helper_lh_₂(ls⁵, a⁴) = case ls⁵ of {
//│ 	LH_C h⁵ t⁵ => reverse_helper_lh_₂^189(t⁵, [LH_C h⁵ a⁴])
//│ 	| LH_N  => a⁴}
//│ def reverse_helper_lh_₃(ls⁴, a³) = case ls⁴ of {
//│ 	LH_C h⁴ t⁴ => reverse_helper_lh_₃^177(t⁴, [LH_C h⁴ a³])
//│ 	| LH_N  => a³}
//│ def reverse_helper_lh_₄(ls³, a²) = case ls³ of {
//│ 	LH_C h³ t³ => reverse_helper_lh_₄^119(t³, [LH_C h³ a²])
//│ 	| LH_N  => a²}
//│ def reverse_helper_lh_₅(ls², a¹) = case ls² of {
//│ 	LH_C h² t² => reverse_helper_lh_₅^107(t², [LH_C h² a¹])
//│ 	| LH_N  => a¹}
//│ def reverse_helper_lh_₆(ls¹, a⁰) = case ls¹ of {
//│ 	LH_C h¹ t¹ => reverse_helper_lh_₆^72(t¹, [LH_C h¹ a⁰])
//│ 	| LH_N  => a⁰}
//│ def reverse_lh_₁(ls¹⁶) = reverse_helper_lh_₁^672(ls¹⁶, [LH_N])
//│ def reverse_lh_₂(ls¹⁵) = reverse_helper_lh_₂^666(ls¹⁵, [LH_N])
//│ def reverse_lh_₃(ls¹⁴) = reverse_helper_lh_₃^660(ls¹⁴, [LH_N])
//│ def reverse_lh_₄(ls¹³) = reverse_helper_lh_₄^608(ls¹³, [LH_N])
//│ def reverse_lh_₅(ls¹¹) = reverse_helper_lh_₅^419(ls¹¹, [LH_N])
//│ def reverse_lh_₆(ls¹⁰) = reverse_helper_lh_₆^373(ls¹⁰, [LH_N])
//│ def snd_lh_₁(_lh_snd_arg1⁰) = case _lh_snd_arg1⁰ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def take_lh_₁(n³, ls¹²) = if (n³ > 0) then case ls¹² of {
//│ 	LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁^432((n³ - 1), t¹⁰)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lh_₂(n², ls⁹) = if (n² > 0) then case ls⁹ of {
//│ 	LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂^334((n² - 1), t⁹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lh_₃(n¹, ls⁸) = if (n¹ > 0) then case ls⁸ of {
//│ 	LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃^311((n¹ - 1), t⁸)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lh_₄(n⁰, ls⁷) = if (n⁰ > 0) then case ls⁷ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄^219((n⁰ - 1), t⁷)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testLCSS_nofib_lh_₁(_lh_testLCSS_nofib_arg1⁰) = lcssMain_lh_₁^1002(1, 2, 60, 30, 31, 90)
//│ def zip_lh_₁(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C hx¹ tx¹ => case ys¹ of {
//│ 		LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁^453(tx¹, ty¹)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ def zip_lh_₂(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C hx⁰ tx⁰ => case ys⁰ of {
//│ 		LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂^407(tx⁰, ty⁰)]
//│ 		| LH_N  => [LH_N]}
//│ 	| LH_N  => [LH_N]}
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec enumFromThenTo_lh__d2 a_6 t_1_4 b_0 =
//│ 		  (if (a_6 <= b_0) then
//│ 		    (`LH_C(a_6, (((enumFromThenTo_lh__d2 t_1_4) ((2 * t_1_4) - a_6)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec max_lh__d1 _lh_max_arg1_0 _lh_max_arg2_0 =
//│ 		  (if (_lh_max_arg1_0 > _lh_max_arg2_0) then
//│ 		    _lh_max_arg1_0
//│ 		  else
//│ 		    _lh_max_arg2_0);;
//│ 		let rec algb2_lh__d1 _lh_algb2_arg1_0 _lh_algb2_arg2_0 _lh_algb2_arg3_0 _lh_algb2_arg4_0 =
//│ 		  (match _lh_algb2_arg4_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_algb2_LH_C_0_0, _lh_algb2_LH_C_1_0) -> 
//│ 		      (match _lh_algb2_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_algb2_LH_P2_0_0, _lh_algb2_LH_P2_1_0) -> 
//│ 		          (let rec kjcurr_0 = (if (_lh_algb2_arg1_0 = _lh_algb2_LH_P2_0_0) then
//│ 		            (_lh_algb2_arg2_0 + 1)
//│ 		          else
//│ 		            ((max_lh__d1 _lh_algb2_arg3_0) _lh_algb2_LH_P2_1_0)) in
//│ 		            (`LH_C((`LH_P2(_lh_algb2_LH_P2_0_0, kjcurr_0)), ((((algb2_lh__d1 _lh_algb2_arg1_0) _lh_algb2_LH_P2_1_0) kjcurr_0) _lh_algb2_LH_C_1_0))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec map_lh__d1 f_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C((f_0 h_0), ((map_lh__d1 f_0) t_0)))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec snd_lh__d1 _lh_snd_arg1_0 =
//│ 		  (match _lh_snd_arg1_0 with
//│ 		    | `LH_P2(_lh_snd_LH_P2_0_0, _lh_snd_LH_P2_1_0) -> 
//│ 		      _lh_snd_LH_P2_1_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec algb1_lh__d3 _lh_algb1_arg1_0 _lh_algb1_arg2_0 =
//│ 		  (match _lh_algb1_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      ((map_lh__d1 snd_lh__d1) _lh_algb1_arg2_0)
//│ 		    | `LH_C(_lh_algb1_LH_C_0_0, _lh_algb1_LH_C_1_0) -> 
//│ 		      ((algb1_lh__d3 _lh_algb1_LH_C_1_0) ((((algb2_lh__d1 _lh_algb1_LH_C_0_0) 0) 0) _lh_algb1_arg2_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec algb_lh__d3 _lh_algb_arg1_1 _lh_algb_arg2_1 =
//│ 		  (`LH_C(0, ((algb1_lh__d3 _lh_algb_arg1_1) (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		    (match _lh_listcomp_fun_para_1 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		        (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_1, 0)), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_1 _lh_algb_arg2_1)))));;
//│ 		let rec drop_lh__d4 _lh_drop_arg1_0 _lh_drop_arg2_0 =
//│ 		  (match _lh_drop_arg2_0 with
//│ 		    | `LH_C(_lh_drop_LH_C_0_0, _lh_drop_LH_C_1_0) -> 
//│ 		      (if (_lh_drop_arg1_0 = 0) then
//│ 		        (`LH_C(_lh_drop_LH_C_0_0, _lh_drop_LH_C_1_0))
//│ 		      else
//│ 		        ((drop_lh__d4 (_lh_drop_arg1_0 - 1)) _lh_drop_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec inList_lh__d1 _lh_inList_arg1_0 _lh_inList_arg2_0 =
//│ 		  (match _lh_inList_arg2_0 with
//│ 		    | `LH_C(_lh_inList_LH_C_0_0, _lh_inList_LH_C_1_0) -> 
//│ 		      (if (_lh_inList_arg1_0 = _lh_inList_LH_C_0_0) then
//│ 		        true
//│ 		      else
//│ 		        ((inList_lh__d1 _lh_inList_arg1_0) _lh_inList_LH_C_1_0))
//│ 		    | `LH_N -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec take_lh__d2 n_2 ls_9 =
//│ 		  (if (n_2 > 0) then
//│ 		    (match ls_9 with
//│ 		      | `LH_C(h_9, t_9) -> 
//│ 		        (`LH_C(h_9, ((take_lh__d2 (n_2 - 1)) t_9)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec findk_lh__d2 _lh_findk_arg1_0 _lh_findk_arg2_0 _lh_findk_arg3_0 _lh_findk_arg4_0 =
//│ 		  (match _lh_findk_arg4_0 with
//│ 		    | `LH_N -> 
//│ 		      _lh_findk_arg2_0
//│ 		    | `LH_C(_lh_findk_LH_C_0_0, _lh_findk_LH_C_1_0) -> 
//│ 		      (match _lh_findk_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_findk_LH_P2_0_0, _lh_findk_LH_P2_1_0) -> 
//│ 		          (if ((_lh_findk_LH_P2_0_0 + _lh_findk_LH_P2_1_0) >= _lh_findk_arg3_0) then
//│ 		            ((((findk_lh__d2 (_lh_findk_arg1_0 + 1)) _lh_findk_arg1_0) (_lh_findk_LH_P2_0_0 + _lh_findk_LH_P2_1_0)) _lh_findk_LH_C_1_0)
//│ 		          else
//│ 		            ((((findk_lh__d2 (_lh_findk_arg1_0 + 1)) _lh_findk_arg2_0) _lh_findk_arg3_0) _lh_findk_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec take_lh__d3 n_1 ls_8 =
//│ 		  (if (n_1 > 0) then
//│ 		    (match ls_8 with
//│ 		      | `LH_C(h_8, t_8) -> 
//│ 		        (`LH_C(h_8, ((take_lh__d3 (n_1 - 1)) t_8)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec drop_lh__d1 _lh_drop_arg1_3 _lh_drop_arg2_3 =
//│ 		  (match _lh_drop_arg2_3 with
//│ 		    | `LH_C(_lh_drop_LH_C_0_3, _lh_drop_LH_C_1_3) -> 
//│ 		      (if (_lh_drop_arg1_3 = 0) then
//│ 		        (`LH_C(_lh_drop_LH_C_0_3, _lh_drop_LH_C_1_3))
//│ 		      else
//│ 		        ((drop_lh__d1 (_lh_drop_arg1_3 - 1)) _lh_drop_LH_C_1_3))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec reverse_helper_lh__d1 ls_6 a_5 =
//│ 		  (match ls_6 with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      ((reverse_helper_lh__d1 t_6) (`LH_C(h_6, a_5)))
//│ 		    | `LH_N -> 
//│ 		      a_5);;
//│ 		let rec reverse_lh__d1 ls_1_6 =
//│ 		  ((reverse_helper_lh__d1 ls_1_6) (`LH_N));;
//│ 		let rec reverse_helper_lh__d2 ls_5 a_4 =
//│ 		  (match ls_5 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      ((reverse_helper_lh__d2 t_5) (`LH_C(h_5, a_4)))
//│ 		    | `LH_N -> 
//│ 		      a_4);;
//│ 		let rec reverse_lh__d2 ls_1_5 =
//│ 		  ((reverse_helper_lh__d2 ls_1_5) (`LH_N));;
//│ 		let rec reverse_helper_lh__d5 ls_2 a_1 =
//│ 		  (match ls_2 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      ((reverse_helper_lh__d5 t_2) (`LH_C(h_2, a_1)))
//│ 		    | `LH_N -> 
//│ 		      a_1);;
//│ 		let rec reverse_lh__d5 ls_1_1 =
//│ 		  ((reverse_helper_lh__d5 ls_1_1) (`LH_N));;
//│ 		let rec reverse_helper_lh__d3 ls_4 a_3 =
//│ 		  (match ls_4 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      ((reverse_helper_lh__d3 t_4) (`LH_C(h_4, a_3)))
//│ 		    | `LH_N -> 
//│ 		      a_3);;
//│ 		let rec reverse_lh__d3 ls_1_4 =
//│ 		  ((reverse_helper_lh__d3 ls_1_4) (`LH_N));;
//│ 		let rec take_lh__d4 n_0 ls_7 =
//│ 		  (if (n_0 > 0) then
//│ 		    (match ls_7 with
//│ 		      | `LH_C(h_7, t_7) -> 
//│ 		        (`LH_C(h_7, ((take_lh__d4 (n_0 - 1)) t_7)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec drop_lh__d2 _lh_drop_arg1_2 _lh_drop_arg2_2 =
//│ 		  (match _lh_drop_arg2_2 with
//│ 		    | `LH_C(_lh_drop_LH_C_0_2, _lh_drop_LH_C_1_2) -> 
//│ 		      (if (_lh_drop_arg1_2 = 0) then
//│ 		        (`LH_C(_lh_drop_LH_C_0_2, _lh_drop_LH_C_1_2))
//│ 		      else
//│ 		        ((drop_lh__d2 (_lh_drop_arg1_2 - 1)) _lh_drop_LH_C_1_2))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec zip_lh__d1 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(hx_1, tx_1) -> 
//│ 		      (match ys_1 with
//│ 		        | `LH_C(hy_1, ty_1) -> 
//│ 		          (`LH_C((`LH_P2(hx_1, hy_1)), ((zip_lh__d1 tx_1) ty_1)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec reverse_helper_lh__d6 ls_1 a_0 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      ((reverse_helper_lh__d6 t_1) (`LH_C(h_1, a_0)))
//│ 		    | `LH_N -> 
//│ 		      a_0);;
//│ 		let rec reverse_lh__d6 ls_1_0 =
//│ 		  ((reverse_helper_lh__d6 ls_1_0) (`LH_N));;
//│ 		let rec algb1_lh__d1 _lh_algb1_arg1_2 _lh_algb1_arg2_2 =
//│ 		  (match _lh_algb1_arg1_2 with
//│ 		    | `LH_N -> 
//│ 		      ((map_lh__d1 snd_lh__d1) _lh_algb1_arg2_2)
//│ 		    | `LH_C(_lh_algb1_LH_C_0_2, _lh_algb1_LH_C_1_2) -> 
//│ 		      ((algb1_lh__d1 _lh_algb1_LH_C_1_2) ((((algb2_lh__d1 _lh_algb1_LH_C_0_2) 0) 0) _lh_algb1_arg2_2))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec algb_lh__d1 _lh_algb_arg1_3 _lh_algb_arg2_3 =
//│ 		  (`LH_C(0, ((algb1_lh__d1 _lh_algb_arg1_3) (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		    (match _lh_listcomp_fun_para_3 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		        (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_3, 0)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_3 _lh_algb_arg2_3)))));;
//│ 		let rec algb_lh__d4 _lh_algb_arg1_0 _lh_algb_arg2_0 =
//│ 		  (`LH_C(0, ((algb1_lh__d3 _lh_algb_arg1_0) (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		    (match _lh_listcomp_fun_para_0 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		        (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_0, 0)), (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_0 _lh_algb_arg2_0)))));;
//│ 		let rec drop_lh__d3 _lh_drop_arg1_1 _lh_drop_arg2_1 =
//│ 		  (match _lh_drop_arg2_1 with
//│ 		    | `LH_C(_lh_drop_LH_C_0_1, _lh_drop_LH_C_1_1) -> 
//│ 		      (if (_lh_drop_arg1_1 = 0) then
//│ 		        (`LH_C(_lh_drop_LH_C_0_1, _lh_drop_LH_C_1_1))
//│ 		      else
//│ 		        ((drop_lh__d3 (_lh_drop_arg1_1 - 1)) _lh_drop_LH_C_1_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec take_lh__d1 n_3 ls_1_2 =
//│ 		  (if (n_3 > 0) then
//│ 		    (match ls_1_2 with
//│ 		      | `LH_C(h_1_0, t_1_0) -> 
//│ 		        (`LH_C(h_1_0, ((take_lh__d1 (n_3 - 1)) t_1_0)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec findk_lh__d1 _lh_findk_arg1_1 _lh_findk_arg2_1 _lh_findk_arg3_1 _lh_findk_arg4_1 =
//│ 		  (match _lh_findk_arg4_1 with
//│ 		    | `LH_N -> 
//│ 		      _lh_findk_arg2_1
//│ 		    | `LH_C(_lh_findk_LH_C_0_1, _lh_findk_LH_C_1_1) -> 
//│ 		      (match _lh_findk_LH_C_0_1 with
//│ 		        | `LH_P2(_lh_findk_LH_P2_0_1, _lh_findk_LH_P2_1_1) -> 
//│ 		          (if ((_lh_findk_LH_P2_0_1 + _lh_findk_LH_P2_1_1) >= _lh_findk_arg3_1) then
//│ 		            ((((findk_lh__d1 (_lh_findk_arg1_1 + 1)) _lh_findk_arg1_1) (_lh_findk_LH_P2_0_1 + _lh_findk_LH_P2_1_1)) _lh_findk_LH_C_1_1)
//│ 		          else
//│ 		            ((((findk_lh__d1 (_lh_findk_arg1_1 + 1)) _lh_findk_arg2_1) _lh_findk_arg3_1) _lh_findk_LH_C_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec zip_lh__d2 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(hx_0, tx_0) -> 
//│ 		      (match ys_0 with
//│ 		        | `LH_C(hy_0, ty_0) -> 
//│ 		          (`LH_C((`LH_P2(hx_0, hy_0)), ((zip_lh__d2 tx_0) ty_0)))
//│ 		        | `LH_N -> 
//│ 		          (`LH_N))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec reverse_helper_lh__d4 ls_3 a_2 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      ((reverse_helper_lh__d4 t_3) (`LH_C(h_3, a_2)))
//│ 		    | `LH_N -> 
//│ 		      a_2);;
//│ 		let rec reverse_lh__d4 ls_1_3 =
//│ 		  ((reverse_helper_lh__d4 ls_1_3) (`LH_N));;
//│ 		let rec algb1_lh__d2 _lh_algb1_arg1_1 _lh_algb1_arg2_1 =
//│ 		  (match _lh_algb1_arg1_1 with
//│ 		    | `LH_N -> 
//│ 		      ((map_lh__d1 snd_lh__d1) _lh_algb1_arg2_1)
//│ 		    | `LH_C(_lh_algb1_LH_C_0_1, _lh_algb1_LH_C_1_1) -> 
//│ 		      ((algb1_lh__d2 _lh_algb1_LH_C_1_1) ((((algb2_lh__d1 _lh_algb1_LH_C_0_1) 0) 0) _lh_algb1_arg2_1))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec algb_lh__d2 _lh_algb_arg1_2 _lh_algb_arg2_2 =
//│ 		  (`LH_C(0, ((algb1_lh__d2 _lh_algb_arg1_2) (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		    (match _lh_listcomp_fun_para_2 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		        (`LH_C((`LH_P2(_lh_listcomp_fun_ls_h_2, 0)), (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_2 _lh_algb_arg2_2)))));;
//│ 		let rec algc_lh__d1 _lh_algc_arg1_0 _lh_algc_arg2_0 _lh_algc_arg3_0 _lh_algc_arg4_0 =
//│ 		  (match _lh_algc_arg4_0 with
//│ 		    | `LH_N -> 
//│ 		      (fun x_0 -> 
//│ 		        x_0)
//│ 		    | _ -> 
//│ 		      (match _lh_algc_arg3_0 with
//│ 		        | `LH_C(_lh_algc_LH_C_0_0, _lh_algc_LH_C_1_0) -> 
//│ 		          (match _lh_algc_LH_C_1_0 with
//│ 		            | `LH_N -> 
//│ 		              (if ((inList_lh__d1 _lh_algc_LH_C_0_0) _lh_algc_arg4_0) then
//│ 		                (fun t_1_2 -> 
//│ 		                  (`LH_C(_lh_algc_LH_C_0_0, t_1_2)))
//│ 		              else
//│ 		                (fun x_1 -> 
//│ 		                  x_1))
//│ 		            | _ -> 
//│ 		              (let rec m2_0 = (_lh_algc_arg1_0 / 2) in
//│ 		                (let rec xs1_0 = ((take_lh__d3 m2_0) _lh_algc_arg3_0) in
//│ 		                  (let rec xs2_0 = ((drop_lh__d1 m2_0) _lh_algc_arg3_0) in
//│ 		                    (let rec l1_0 = ((algb_lh__d2 xs1_0) _lh_algc_arg4_0) in
//│ 		                      (let rec l2_0 = (reverse_lh__d4 ((algb_lh__d4 (reverse_lh__d6 xs2_0)) (reverse_lh__d1 _lh_algc_arg4_0))) in
//│ 		                        (let rec k_0 = ((((findk_lh__d2 0) 0) (0 - 1)) ((zip_lh__d2 l1_0) l2_0)) in
//│ 		                          (fun _lh_funcomp_x_0 -> 
//│ 		                            (((((algc_lh__d1 m2_0) k_0) xs1_0) ((take_lh__d1 k_0) _lh_algc_arg4_0)) (((((algc_lh__d1 (_lh_algc_arg1_0 - m2_0)) (_lh_algc_arg2_0 - k_0)) xs2_0) ((drop_lh__d2 k_0) _lh_algc_arg4_0)) _lh_funcomp_x_0))))))))))
//│ 		        | _ -> 
//│ 		          (let rec m2_1 = (_lh_algc_arg1_0 / 2) in
//│ 		            (let rec xs1_1 = ((take_lh__d2 m2_1) _lh_algc_arg3_0) in
//│ 		              (let rec xs2_1 = ((drop_lh__d4 m2_1) _lh_algc_arg3_0) in
//│ 		                (let rec l1_1 = ((algb_lh__d3 xs1_1) _lh_algc_arg4_0) in
//│ 		                  (let rec l2_1 = (reverse_lh__d2 ((algb_lh__d1 (reverse_lh__d5 xs2_1)) (reverse_lh__d3 _lh_algc_arg4_0))) in
//│ 		                    (let rec k_1 = ((((findk_lh__d1 0) 0) (0 - 1)) ((zip_lh__d1 l1_1) l2_1)) in
//│ 		                      (fun _lh_funcomp_x_1 -> 
//│ 		                        (((((algc_lh__d1 m2_1) k_1) xs1_1) ((take_lh__d4 k_1) _lh_algc_arg4_0)) (((((algc_lh__d1 (_lh_algc_arg1_0 - m2_1)) (_lh_algc_arg2_0 - k_1)) xs2_1) ((drop_lh__d3 k_1) _lh_algc_arg4_0)) _lh_funcomp_x_1)))))))))));;
//│ 		let rec length_lh__d1 ls_1_8 =
//│ 		  (match ls_1_8 with
//│ 		    | `LH_C(h_1_2, t_1_3) -> 
//│ 		      (1 + (length_lh__d1 t_1_3))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec length_lh__d2 ls_1_7 =
//│ 		  (match ls_1_7 with
//│ 		    | `LH_C(h_1_1, t_1_1) -> 
//│ 		      (1 + (length_lh__d2 t_1_1))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec lcss_lh__d1 _lh_lcss_arg1_0 _lh_lcss_arg2_0 =
//│ 		  (((((algc_lh__d1 (length_lh__d2 _lh_lcss_arg1_0)) (length_lh__d1 _lh_lcss_arg2_0)) _lh_lcss_arg1_0) _lh_lcss_arg2_0) (`LH_N));;
//│ 		let rec enumFromThenTo_lh__d1 a_7 t_1_5 b_1 =
//│ 		  (if (a_7 <= b_1) then
//│ 		    (`LH_C(a_7, (((enumFromThenTo_lh__d1 t_1_5) ((2 * t_1_5) - a_7)) b_1)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec lcssMain_lh__d1 _lh_lcssMain_arg1_0 _lh_lcssMain_arg2_0 _lh_lcssMain_arg3_0 _lh_lcssMain_arg4_0 _lh_lcssMain_arg5_0 _lh_lcssMain_arg6_0 =
//│ 		  ((lcss_lh__d1 (((enumFromThenTo_lh__d1 _lh_lcssMain_arg1_0) _lh_lcssMain_arg2_0) _lh_lcssMain_arg3_0)) (((enumFromThenTo_lh__d2 _lh_lcssMain_arg4_0) _lh_lcssMain_arg5_0) _lh_lcssMain_arg6_0));;
//│ 		let rec testLCSS_nofib_lh__d1 _lh_testLCSS_nofib_arg1_0 =
//│ 		  ((((((lcssMain_lh__d1 1) 2) 60) 30) 31) 90);;
//│ 		(testLCSS_nofib_lh__d1 0)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_N]: 12 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰]: 32 --->
//│ 	case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰}: 45
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 55
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)]: 42 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)]: 66 --->
//│ 	case ls³ of {LH_C h³ t³ => reverse_helper_lh_₄(t³, [LH_C h³ a²]) | LH_N  => a²}: 127
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => reverse_helper_lh_₂(t⁵, [LH_C h⁵ a⁴]) | LH_N  => a⁴}: 197
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 416
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 462
//│ [LH_N]: 67 --->
//│ 	case ls³ of {LH_C h³ t³ => reverse_helper_lh_₄(t³, [LH_C h³ a²]) | LH_N  => a²}: 127
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => reverse_helper_lh_₂(t⁵, [LH_C h⁵ a⁴]) | LH_N  => a⁴}: 197
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 416
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 462
//│ [LH_C h¹ a⁰]: 77 --->
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh_₃(_lh_algb1_LH_C_1⁰, algb2_lh_₁(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 103
//│ [LH_C h² a¹]: 112 --->
//│ 	case _lh_algb1_arg1² of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₁(_lh_algb1_LH_C_1², algb2_lh_₁(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 173
//│ [LH_C h³ a²]: 124 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 414
//│ [LH_C h⁴ a³]: 182 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 650
//│ [LH_C h⁵ a⁴]: 194 --->
//│ 	case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]}: 460
//│ [LH_C h⁶ a⁵]: 206 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 363
//│ [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ [LH_N]: 229 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ [LH_N]: 231 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 243 --->
//│ 	case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80
//│ 	case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 150
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 798
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ [LH_N]: 321 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80
//│ 	case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 150
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 798
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ [LH_N]: 323 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80
//│ 	case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115
//│ 	case _lh_algb1_arg1¹ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 150
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 798
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ [LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh_₃(_lh_algb1_LH_C_1⁰, algb2_lh_₁(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 103
//│ 	case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 798
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ [LH_N]: 344 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh_₃(_lh_algb1_LH_C_1⁰, algb2_lh_₁(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 103
//│ 	case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 798
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ [LH_N]: 346 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh_₃(_lh_algb1_LH_C_1⁰, algb2_lh_₁(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 103
//│ 	case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 798
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ [LH_P2 _lh_listcomp_fun_ls_h⁰ 0]: 357 --->
//│ 	case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰}: 45
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 55
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 361 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_N]: 362 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_C 0 algb1_lh_₃(_lh_algb_arg1⁰, let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_algb_arg2⁰))]: 370 --->
//│ 	case ls³ of {LH_C h³ t³ => reverse_helper_lh_₄(t³, [LH_C h³ a²]) | LH_N  => a²}: 127
//│ [LH_N]: 376 --->
//│ 	case _lh_algb1_arg1⁰ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh_₃(_lh_algb1_LH_C_1⁰, algb2_lh_₁(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 103
//│ [LH_P2 _lh_listcomp_fun_ls_h¹ 0]: 386 --->
//│ 	case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰}: 45
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 55
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 390 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_N]: 391 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_C 0 algb1_lh_₃(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 399 --->
//│ 	case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 462
//│ [LH_P2 hx⁰ hy⁰]: 406 --->
//│ 	case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰}: 527
//│ [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)]: 412 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 529
//│ [LH_N]: 413 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 529
//│ [LH_N]: 415 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 529
//│ [LH_N]: 422 --->
//│ 	case _lh_algb1_arg1² of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₁(_lh_algb1_LH_C_1², algb2_lh_₁(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 173
//│ [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ [LH_N]: 442 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ [LH_N]: 444 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ [LH_P2 hx¹ hy¹]: 452 --->
//│ 	case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰}: 601
//│ [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)]: 458 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 603
//│ [LH_N]: 459 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 603
//│ [LH_N]: 461 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 603
//│ [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 542 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ [LH_N]: 611 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 414
//│ [LH_P2 _lh_listcomp_fun_ls_h² 0]: 621 --->
//│ 	case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰}: 45
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 55
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 625 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_N]: 626 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_C 0 algb1_lh_₂(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 634 --->
//│ 	case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 416
//│ [LH_P2 _lh_listcomp_fun_ls_h³ 0]: 644 --->
//│ 	case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰}: 45
//│ 	case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 55
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 648 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_N]: 649 --->
//│ 	case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68
//│ [LH_C 0 algb1_lh_₁(_lh_algb_arg1³, let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(_lh_algb_arg2³))]: 657 --->
//│ 	case ls⁵ of {LH_C h⁵ t⁵ => reverse_helper_lh_₂(t⁵, [LH_C h⁵ a⁴]) | LH_N  => a⁴}: 197
//│ [LH_N]: 663 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 650
//│ [LH_N]: 669 --->
//│ 	case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]}: 460
//│ [LH_N]: 675 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 363
//│ [LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ 	case ls¹⁸ of {LH_C h¹² t¹³ => (1 + length_lh_₁(t¹³)) | LH_N  => 0}: 906
//│ [LH_N]: 930 --->
//│ 	case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185
//│ 	case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209
//│ 	case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230
//│ 	case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278
//│ 	case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392
//│ 	case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443
//│ 	case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627
//│ 	case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892
//│ 	case ls¹⁸ of {LH_C h¹² t¹³ => (1 + length_lh_₁(t¹³)) | LH_N  => 0}: 906
//│ [LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80
//│ 	case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case ls¹⁷ of {LH_C h¹¹ t¹¹ => (1 + length_lh_₂(t¹¹)) | LH_N  => 0}: 687
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 798
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ [LH_N]: 974 --->
//│ 	case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80
//│ 	case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115
//│ 	case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255
//│ 	case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322
//│ 	case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345
//│ 	case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554
//│ 	case ls¹⁷ of {LH_C h¹¹ t¹¹ => (1 + length_lh_₂(t¹¹)) | LH_N  => 0}: 687
//│ 	case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 798
//│ 	case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891
//│ ------------------
//│ case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰}: 45 --->
//│ 	[LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰]: 32
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁰ 0]: 357
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹ 0]: 386
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² 0]: 621
//│ 	[LH_P2 _lh_listcomp_fun_ls_h³ 0]: 644
//│ case _lh_algb2_arg4⁰ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => let kjcurr⁰ = if (_lh_algb2_arg1⁰ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2⁰ + 1) else max_lh_₁(_lh_algb2_arg3⁰, _lh_algb2_LH_P2_1⁰)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)] | _  => error⁰} | _  => error⁰}: 47 --->
//│ 	[LH_N]: 12
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)]: 42
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 361
//│ 	[LH_N]: 362
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 390
//│ 	[LH_N]: 391
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 625
//│ 	[LH_N]: 626
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 648
//│ 	[LH_N]: 649
//│ case _lh_snd_arg1⁰ of {LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰ | _  => error⁰}: 55 --->
//│ 	[LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰]: 32
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁰ 0]: 357
//│ 	[LH_P2 _lh_listcomp_fun_ls_h¹ 0]: 386
//│ 	[LH_P2 _lh_listcomp_fun_ls_h² 0]: 621
//│ 	[LH_P2 _lh_listcomp_fun_ls_h³ 0]: 644
//│ case ls⁰ of {LH_C h⁰ t⁰ => [LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)] | LH_N  => [LH_N]}: 68 --->
//│ 	[LH_N]: 12
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr⁰] algb2_lh_₁(_lh_algb2_arg1⁰, _lh_algb2_LH_P2_1⁰, kjcurr⁰, _lh_algb2_LH_C_1⁰)]: 42
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)]: 361
//│ 	[LH_N]: 362
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 390
//│ 	[LH_N]: 391
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)]: 625
//│ 	[LH_N]: 626
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 648
//│ 	[LH_N]: 649
//│ case ls¹ of {LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a⁰]) | LH_N  => a⁰}: 80 --->
//│ 	[LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320
//│ 	[LH_N]: 321
//│ 	[LH_N]: 323
//│ 	[LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343
//│ 	[LH_N]: 344
//│ 	[LH_N]: 346
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 542
//│ 	[LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973
//│ 	[LH_N]: 974
//│ case _lh_algb1_arg1⁰ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁰) | LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh_₃(_lh_algb1_LH_C_1⁰, algb2_lh_₁(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁰)) | _  => error⁰}: 103 --->
//│ 	[LH_C h¹ a⁰]: 77
//│ 	[LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343
//│ 	[LH_N]: 344
//│ 	[LH_N]: 346
//│ 	[LH_N]: 376
//│ case ls² of {LH_C h² t² => reverse_helper_lh_₅(t², [LH_C h² a¹]) | LH_N  => a¹}: 115 --->
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 243
//│ 	[LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320
//│ 	[LH_N]: 321
//│ 	[LH_N]: 323
//│ 	[LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343
//│ 	[LH_N]: 344
//│ 	[LH_N]: 346
//│ 	[LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973
//│ 	[LH_N]: 974
//│ case ls³ of {LH_C h³ t³ => reverse_helper_lh_₄(t³, [LH_C h³ a²]) | LH_N  => a²}: 127 --->
//│ 	[LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)]: 66
//│ 	[LH_N]: 67
//│ 	[LH_C 0 algb1_lh_₃(_lh_algb_arg1⁰, let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(_lh_algb_arg2⁰))]: 370
//│ case _lh_algb1_arg1¹ of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2¹) | LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2¹)) | _  => error⁰}: 150 --->
//│ 	[LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320
//│ 	[LH_N]: 321
//│ 	[LH_N]: 323
//│ case _lh_algb1_arg1² of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₁(_lh_algb1_LH_C_1², algb2_lh_₁(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 173 --->
//│ 	[LH_C h² a¹]: 112
//│ 	[LH_N]: 422
//│ case ls⁴ of {LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, [LH_C h⁴ a³]) | LH_N  => a³}: 185 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case ls⁵ of {LH_C h⁵ t⁵ => reverse_helper_lh_₂(t⁵, [LH_C h⁵ a⁴]) | LH_N  => a⁴}: 197 --->
//│ 	[LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)]: 66
//│ 	[LH_N]: 67
//│ 	[LH_C 0 algb1_lh_₁(_lh_algb_arg1³, let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun³(_lh_algb_arg2³))]: 657
//│ case ls⁶ of {LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, [LH_C h⁶ a⁵]) | LH_N  => a⁵}: 209 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case ls⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)] | LH_N  => [LH_N]}: 230 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case _lh_drop_arg2⁰ of {LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁰ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁰ - 1), _lh_drop_LH_C_1⁰) | _  => error⁰}: 255 --->
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 243
//│ 	[LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320
//│ 	[LH_N]: 321
//│ 	[LH_N]: 323
//│ 	[LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343
//│ 	[LH_N]: 344
//│ 	[LH_N]: 346
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 542
//│ 	[LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973
//│ 	[LH_N]: 974
//│ case _lh_drop_arg2¹ of {LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1¹ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1¹ - 1), _lh_drop_LH_C_1¹) | _  => error⁰}: 278 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case _lh_drop_arg2² of {LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1² == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1² - 1), _lh_drop_LH_C_1²) | _  => error⁰}: 301 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case ls⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)] | LH_N  => [LH_N]}: 322 --->
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 243
//│ 	[LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320
//│ 	[LH_N]: 321
//│ 	[LH_N]: 323
//│ 	[LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343
//│ 	[LH_N]: 344
//│ 	[LH_N]: 346
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 542
//│ 	[LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973
//│ 	[LH_N]: 974
//│ case ls⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n² - 1), t⁹)] | LH_N  => [LH_N]}: 345 --->
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 243
//│ 	[LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320
//│ 	[LH_N]: 321
//│ 	[LH_N]: 323
//│ 	[LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343
//│ 	[LH_N]: 344
//│ 	[LH_N]: 346
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 542
//│ 	[LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973
//│ 	[LH_N]: 974
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 363 --->
//│ 	[LH_C h⁶ a⁵]: 206
//│ 	[LH_N]: 675
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]}: 392 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 414 --->
//│ 	[LH_C h³ a²]: 124
//│ 	[LH_N]: 611
//│ case xs⁰ of {LH_C hx⁰ tx⁰ => case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 416 --->
//│ 	[LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)]: 66
//│ 	[LH_N]: 67
//│ 	[LH_C 0 algb1_lh_₂(_lh_algb_arg1², let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun²(_lh_algb_arg2²))]: 634
//│ case ls¹² of {LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)] | LH_N  => [LH_N]}: 443 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]}: 460 --->
//│ 	[LH_C h⁵ a⁴]: 194
//│ 	[LH_N]: 669
//│ case xs¹ of {LH_C hx¹ tx¹ => case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]} | LH_N  => [LH_N]}: 462 --->
//│ 	[LH_C f⁰(h⁰) map_lh_₁(f⁰, t⁰)]: 66
//│ 	[LH_N]: 67
//│ 	[LH_C 0 algb1_lh_₃(_lh_algb_arg1¹, let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹(_lh_algb_arg2¹))]: 399
//│ case _lh_inList_arg2⁰ of {LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1⁰ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1⁰, _lh_inList_LH_C_1⁰) | LH_N  => [False] | _  => error⁰}: 480 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰}: 527 --->
//│ 	[LH_P2 hx⁰ hy⁰]: 406
//│ case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 529 --->
//│ 	[LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)]: 412
//│ 	[LH_N]: 413
//│ 	[LH_N]: 415
//│ case _lh_drop_arg2³ of {LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1³ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1³ - 1), _lh_drop_LH_C_1³) | _  => error⁰}: 554 --->
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 243
//│ 	[LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320
//│ 	[LH_N]: 321
//│ 	[LH_N]: 323
//│ 	[LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343
//│ 	[LH_N]: 344
//│ 	[LH_N]: 346
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 542
//│ 	[LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973
//│ 	[LH_N]: 974
//│ case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰}: 601 --->
//│ 	[LH_P2 hx¹ hy¹]: 452
//│ case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 603 --->
//│ 	[LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)]: 458
//│ 	[LH_N]: 459
//│ 	[LH_N]: 461
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)] | LH_N  => [LH_N]}: 627 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 650 --->
//│ 	[LH_C h⁴ a³]: 182
//│ 	[LH_N]: 663
//│ case ls¹⁷ of {LH_C h¹¹ t¹¹ => (1 + length_lh_₂(t¹¹)) | LH_N  => 0}: 687 --->
//│ 	[LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973
//│ 	[LH_N]: 974
//│ case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))}: 798 --->
//│ 	[LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320
//│ 	[LH_N]: 321
//│ 	[LH_N]: 323
//│ 	[LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343
//│ 	[LH_N]: 344
//│ 	[LH_N]: 346
//│ 	[LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973
//│ 	[LH_N]: 974
//│ case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}: 891 --->
//│ 	[LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰]: 243
//│ 	[LH_C h⁸ take_lh_₃((n¹ - 1), t⁸)]: 320
//│ 	[LH_N]: 321
//│ 	[LH_N]: 323
//│ 	[LH_C h⁹ take_lh_₂((n² - 1), t⁹)]: 343
//│ 	[LH_N]: 344
//│ 	[LH_N]: 346
//│ 	[LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³]: 542
//│ 	[LH_C a⁷ enumFromThenTo_lh_₁(t¹⁵, ((2 * t¹⁵) - a⁷), b¹)]: 973
//│ 	[LH_N]: 974
//│ case _lh_algc_arg4⁰ of {LH_N  => (fun x⁰ -> x⁰) | _  => case _lh_algc_arg3⁰ of {LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4⁰) then (fun t¹² -> [LH_C _lh_algc_LH_C_0⁰ t¹²]) else (fun x¹ -> x¹) | _  => let m2⁰ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1⁰ = take_lh_₃(m2⁰, _lh_algc_arg3⁰)
//│ in let xs2⁰ = drop_lh_₁(m2⁰, _lh_algc_arg3⁰)
//│ in let l1⁰ = algb_lh_₂(xs1⁰, _lh_algc_arg4⁰)
//│ in let l2⁰ = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2⁰), reverse_lh_₁(_lh_algc_arg4⁰)))
//│ in let k⁰ = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1⁰, l2⁰))
//│ in (fun _lh_funcomp_x⁰ -> algc_lh_₁(m2⁰, k⁰, xs1⁰, take_lh_₁(k⁰, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2⁰), (_lh_algc_arg2⁰ - k⁰), xs2⁰, drop_lh_₂(k⁰, _lh_algc_arg4⁰), _lh_funcomp_x⁰)))} | _  => let m2¹ = div⁰(_lh_algc_arg1⁰, 2)
//│ in let xs1¹ = take_lh_₂(m2¹, _lh_algc_arg3⁰)
//│ in let xs2¹ = drop_lh_₄(m2¹, _lh_algc_arg3⁰)
//│ in let l1¹ = algb_lh_₃(xs1¹, _lh_algc_arg4⁰)
//│ in let l2¹ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2¹), reverse_lh_₃(_lh_algc_arg4⁰)))
//│ in let k¹ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1¹, l2¹))
//│ in (fun _lh_funcomp_x¹ -> algc_lh_₁(m2¹, k¹, xs1¹, take_lh_₄(k¹, _lh_algc_arg4⁰), algc_lh_₁((_lh_algc_arg1⁰ - m2¹), (_lh_algc_arg2⁰ - k¹), xs2¹, drop_lh_₃(k¹, _lh_algc_arg4⁰), _lh_funcomp_x¹)))}}: 892 --->
//│ 	[LH_C h⁷ take_lh_₄((n⁰ - 1), t⁷)]: 228
//│ 	[LH_N]: 229
//│ 	[LH_N]: 231
//│ 	[LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹]: 266
//│ 	[LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²]: 289
//│ 	[LH_C h¹⁰ take_lh_₁((n³ - 1), t¹⁰)]: 441
//│ 	[LH_N]: 442
//│ 	[LH_N]: 444
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ case ls¹⁸ of {LH_C h¹² t¹³ => (1 + length_lh_₁(t¹³)) | LH_N  => 0}: 906 --->
//│ 	[LH_C a⁶ enumFromThenTo_lh_₂(t¹⁴, ((2 * t¹⁴) - a⁶), b⁰)]: 929
//│ 	[LH_N]: 930
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C h² a¹]: 112 --->
//│ 	case _lh_algb1_arg1² of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₁(_lh_algb1_LH_C_1², algb2_lh_₁(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 173
//│ [LH_C h³ a²]: 124 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 414
//│ [LH_C h⁴ a³]: 182 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 650
//│ [LH_C h⁵ a⁴]: 194 --->
//│ 	case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]}: 460
//│ [LH_C h⁶ a⁵]: 206 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 363
//│ [LH_P2 hx⁰ hy⁰]: 406 --->
//│ 	case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰}: 527
//│ [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)]: 412 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 529
//│ [LH_N]: 413 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 529
//│ [LH_N]: 415 --->
//│ 	case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 529
//│ [LH_N]: 422 --->
//│ 	case _lh_algb1_arg1² of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₁(_lh_algb1_LH_C_1², algb2_lh_₁(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 173
//│ [LH_P2 hx¹ hy¹]: 452 --->
//│ 	case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰}: 601
//│ [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)]: 458 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 603
//│ [LH_N]: 459 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 603
//│ [LH_N]: 461 --->
//│ 	case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 603
//│ [LH_N]: 611 --->
//│ 	case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 414
//│ [LH_N]: 663 --->
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 650
//│ [LH_N]: 669 --->
//│ 	case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]}: 460
//│ [LH_N]: 675 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 363
//│ ------------------
//│ case _lh_algb1_arg1² of {LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2²) | LH_C _lh_algb1_LH_C_0² _lh_algb1_LH_C_1² => algb1_lh_₁(_lh_algb1_LH_C_1², algb2_lh_₁(_lh_algb1_LH_C_0², 0, 0, _lh_algb1_arg2²)) | _  => error⁰}: 173 --->
//│ 	[LH_C h² a¹]: 112
//│ 	[LH_N]: 422
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁰ 0] _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)] | LH_N  => [LH_N]}: 363 --->
//│ 	[LH_C h⁶ a⁵]: 206
//│ 	[LH_N]: 675
//│ case ys⁰ of {LH_C hy⁰ ty⁰ => [LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)] | LH_N  => [LH_N]}: 414 --->
//│ 	[LH_C h³ a²]: 124
//│ 	[LH_N]: 611
//│ case ys¹ of {LH_C hy¹ ty¹ => [LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)] | LH_N  => [LH_N]}: 460 --->
//│ 	[LH_C h⁵ a⁴]: 194
//│ 	[LH_N]: 669
//│ case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰}: 527 --->
//│ 	[LH_P2 hx⁰ hy⁰]: 406
//│ case _lh_findk_arg4⁰ of {LH_N  => _lh_findk_arg2⁰ | LH_C _lh_findk_LH_C_0⁰ _lh_findk_LH_C_1⁰ => case _lh_findk_LH_C_0⁰ of {LH_P2 _lh_findk_LH_P2_0⁰ _lh_findk_LH_P2_1⁰ => if ((_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰) >= _lh_findk_arg3⁰) then findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg1⁰, (_lh_findk_LH_P2_0⁰ + _lh_findk_LH_P2_1⁰), _lh_findk_LH_C_1⁰) else findk_lh_₂((_lh_findk_arg1⁰ + 1), _lh_findk_arg2⁰, _lh_findk_arg3⁰, _lh_findk_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 529 --->
//│ 	[LH_C [LH_P2 hx⁰ hy⁰] zip_lh_₂(tx⁰, ty⁰)]: 412
//│ 	[LH_N]: 413
//│ 	[LH_N]: 415
//│ case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰}: 601 --->
//│ 	[LH_P2 hx¹ hy¹]: 452
//│ case _lh_findk_arg4¹ of {LH_N  => _lh_findk_arg2¹ | LH_C _lh_findk_LH_C_0¹ _lh_findk_LH_C_1¹ => case _lh_findk_LH_C_0¹ of {LH_P2 _lh_findk_LH_P2_0¹ _lh_findk_LH_P2_1¹ => if ((_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹) >= _lh_findk_arg3¹) then findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg1¹, (_lh_findk_LH_P2_0¹ + _lh_findk_LH_P2_1¹), _lh_findk_LH_C_1¹) else findk_lh_₁((_lh_findk_arg1¹ + 1), _lh_findk_arg2¹, _lh_findk_arg3¹, _lh_findk_LH_C_1¹) | _  => error⁰} | _  => error⁰}: 603 --->
//│ 	[LH_C [LH_P2 hx¹ hy¹] zip_lh_₁(tx¹, ty¹)]: 458
//│ 	[LH_N]: 459
//│ 	[LH_N]: 461
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h³ 0] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => [LH_N]}: 650 --->
//│ 	[LH_C h⁴ a³]: 182
//│ 	[LH_N]: 663
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testLCSS_nofib_lh_₁(primId⁰(0))
//│ def algb1_lh_₁(_lh_algb1_arg1⁵, _lh_algb1_arg2⁷) = _lh_algb1_arg1⁵(_lh_algb1_arg2⁷)
//│ def algb1_lh_₂(_lh_algb1_arg1³, _lh_algb1_arg2⁴) = case _lh_algb1_arg1³ of {
//│ 	LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁴)
//│ 	| LH_C _lh_algb1_LH_C_0¹ _lh_algb1_LH_C_1¹ => algb1_lh_₂(_lh_algb1_LH_C_1¹, algb2_lh_₁(_lh_algb1_LH_C_0¹, 0, 0, _lh_algb1_arg2⁴))
//│ 	| _  => error⁰}
//│ def algb1_lh_₃(_lh_algb1_arg1⁴, _lh_algb1_arg2⁶) = case _lh_algb1_arg1⁴ of {
//│ 	LH_N  => map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁶)
//│ 	| LH_C _lh_algb1_LH_C_0⁰ _lh_algb1_LH_C_1⁰ => algb1_lh_₃(_lh_algb1_LH_C_1⁰, algb2_lh_₁(_lh_algb1_LH_C_0⁰, 0, 0, _lh_algb1_arg2⁶))
//│ 	| _  => error⁰}
//│ def algb2_lh_₁(_lh_algb2_arg1¹, _lh_algb2_arg2¹, _lh_algb2_arg3¹, _lh_algb2_arg4¹) = case _lh_algb2_arg4¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_algb2_LH_C_0⁰ _lh_algb2_LH_C_1⁰ => case _lh_algb2_LH_C_0⁰ of {
//│ 		LH_P2 _lh_algb2_LH_P2_0⁰ _lh_algb2_LH_P2_1⁰ => 
//│ 			let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0⁰) then (_lh_algb2_arg2¹ + 1) else max_lh_₁(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1⁰)
//│ 			in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁰ kjcurr¹] algb2_lh_₁(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1⁰, kjcurr¹, _lh_algb2_LH_C_1⁰)]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def algb_lh_₁(_lh_algb_arg1⁵, _lh_algb_arg2⁵) = [LH_C 0 algb1_lh_₁(_lh_algb_arg1⁵, 
//│ 	let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁵ -> _lh_listcomp_fun_para⁵(_lh_listcomp_fun⁹))
//│ 	in _lh_listcomp_fun⁹(_lh_algb_arg2⁵))]
//│ def algb_lh_₂(_lh_algb_arg1⁷, _lh_algb_arg2⁷) = [LH_C 0 algb1_lh_₂(_lh_algb_arg1⁷, 
//│ 	let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 		LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => [LH_C [LH_P2 _lh_listcomp_fun_ls_h² 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t²)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun¹¹(_lh_algb_arg2⁷))]
//│ def algb_lh_₃(_lh_algb_arg1⁴, _lh_algb_arg2⁴) = [LH_C 0 algb1_lh_₃(_lh_algb_arg1⁴, 
//│ 	let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 		LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h¹ 0] _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t¹)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁴(_lh_algb_arg2⁴))]
//│ def algb_lh_₄(_lh_algb_arg1⁶, _lh_algb_arg2⁶) = [LH_C 0 algb1_lh_₃(_lh_algb_arg1⁶, 
//│ 	let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁶ -> _lh_listcomp_fun_para⁶(_lh_listcomp_fun¹⁰))
//│ 	in _lh_listcomp_fun¹⁰(_lh_algb_arg2⁶))]
//│ def algc_lh_₁(_lh_algc_arg1¹, _lh_algc_arg2¹, _lh_algc_arg3¹, _lh_algc_arg4¹) = case _lh_algc_arg4¹ of {
//│ 	LH_N  => (fun x² -> x²)
//│ 	| _  => case _lh_algc_arg3¹ of {
//│ 		LH_C _lh_algc_LH_C_0⁰ _lh_algc_LH_C_1⁰ => case _lh_algc_LH_C_1⁰ of {
//│ 			LH_N  => if inList_lh_₁(_lh_algc_LH_C_0⁰, _lh_algc_arg4¹) then (fun t¹⁸ -> [LH_C _lh_algc_LH_C_0⁰ t¹⁸]) else (fun x³ -> x³)
//│ 			| _  => 
//│ 				let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ 				in let xs1² = take_lh_₃(m2², _lh_algc_arg3¹)
//│ 				in let xs2² = drop_lh_₁(m2², _lh_algc_arg3¹)
//│ 				in let l1² = algb_lh_₂(xs1², _lh_algc_arg4¹)
//│ 				in let l2² = reverse_lh_₄(algb_lh_₄(reverse_lh_₆(xs2²), reverse_lh_₁(_lh_algc_arg4¹)))
//│ 				in let k² = findk_lh_₂(0, 0, (0 - 1), zip_lh_₂(l1², l2²))
//│ 				in (fun _lh_funcomp_x² -> algc_lh_₁(m2², k², xs1², take_lh_₁(k², _lh_algc_arg4¹), algc_lh_₁((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}
//│ 		| _  => 
//│ 			let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ 			in let xs1³ = take_lh_₂(m2³, _lh_algc_arg3¹)
//│ 			in let xs2³ = drop_lh_₄(m2³, _lh_algc_arg3¹)
//│ 			in let l1³ = algb_lh_₃(xs1³, _lh_algc_arg4¹)
//│ 			in let l2³ = reverse_lh_₂(algb_lh_₁(reverse_lh_₅(xs2³), reverse_lh_₃(_lh_algc_arg4¹)))
//│ 			in let k³ = findk_lh_₁(0, 0, (0 - 1), zip_lh_₁(l1³, l2³))
//│ 			in (fun _lh_funcomp_x³ -> algc_lh_₁(m2³, k³, xs1³, take_lh_₄(k³, _lh_algc_arg4¹), algc_lh_₁((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}
//│ def drop_lh_₁(_lh_drop_arg1⁵, _lh_drop_arg2⁵) = case _lh_drop_arg2⁵ of {
//│ 	LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0³ _lh_drop_LH_C_1³] else drop_lh_₁((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1³)
//│ 	| _  => error⁰}
//│ def drop_lh_₂(_lh_drop_arg1⁶, _lh_drop_arg2⁶) = case _lh_drop_arg2⁶ of {
//│ 	LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1² => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0² _lh_drop_LH_C_1²] else drop_lh_₂((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1²)
//│ 	| _  => error⁰}
//│ def drop_lh_₃(_lh_drop_arg1⁷, _lh_drop_arg2⁷) = case _lh_drop_arg2⁷ of {
//│ 	LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0¹ _lh_drop_LH_C_1¹] else drop_lh_₃((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1¹)
//│ 	| _  => error⁰}
//│ def drop_lh_₄(_lh_drop_arg1⁴, _lh_drop_arg2⁴) = case _lh_drop_arg2⁴ of {
//│ 	LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁰ _lh_drop_LH_C_1⁰] else drop_lh_₄((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁰)
//│ 	| _  => error⁰}
//│ def enumFromThenTo_lh_₁(a¹¹, t¹⁶, b²) = if (a¹¹ <= b²) then [LH_C a¹¹ enumFromThenTo_lh_₁(t¹⁶, ((2 * t¹⁶) - a¹¹), b²)] else [LH_N]
//│ def enumFromThenTo_lh_₂(a¹⁴, t¹⁷, b³) = if (a¹⁴ <= b³) then [LH_C a¹⁴ enumFromThenTo_lh_₂(t¹⁷, ((2 * t¹⁷) - a¹⁴), b³)] else [LH_N]
//│ def findk_lh_₁(_lh_findk_arg1⁶, _lh_findk_arg2⁶, _lh_findk_arg3⁶, _lh_findk_arg4³) = _lh_findk_arg4³(_lh_findk_arg2⁶, _lh_findk_arg1⁶, _lh_findk_arg3⁶)
//│ def findk_lh_₂(_lh_findk_arg1², _lh_findk_arg2², _lh_findk_arg3², _lh_findk_arg4²) = _lh_findk_arg4²(_lh_findk_arg2², _lh_findk_arg1², _lh_findk_arg3²)
//│ def inList_lh_₁(_lh_inList_arg1¹, _lh_inList_arg2¹) = case _lh_inList_arg2¹ of {
//│ 	LH_C _lh_inList_LH_C_0⁰ _lh_inList_LH_C_1⁰ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0⁰) then [True] else inList_lh_₁(_lh_inList_arg1¹, _lh_inList_LH_C_1⁰)
//│ 	| LH_N  => [False]
//│ 	| _  => error⁰}
//│ def lcssMain_lh_₁(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹, _lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹) = lcss_lh_₁(enumFromThenTo_lh_₁(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹), enumFromThenTo_lh_₂(_lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹))
//│ def lcss_lh_₁(_lh_lcss_arg1¹, _lh_lcss_arg2¹) = algc_lh_₁(length_lh_₂(_lh_lcss_arg1¹), length_lh_₁(_lh_lcss_arg2¹), _lh_lcss_arg1¹, _lh_lcss_arg2¹, [LH_N])
//│ def length_lh_₁(ls²⁰) = case ls²⁰ of {
//│ 	LH_C h¹² t¹³ => (1 + length_lh_₁(t¹³))
//│ 	| LH_N  => 0}
//│ def length_lh_₂(ls³⁷) = case ls³⁷ of {
//│ 	LH_C h¹¹ t¹¹ => (1 + length_lh_₂(t¹¹))
//│ 	| LH_N  => 0}
//│ def map_lh_₁(f¹, ls³³) = case ls³³ of {
//│ 	LH_C h⁰ t⁰ => [LH_C f¹(h⁰) map_lh_₁(f¹, t⁰)]
//│ 	| LH_N  => [LH_N]}
//│ def max_lh_₁(_lh_max_arg1¹, _lh_max_arg2¹) = if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ def reverse_helper_lh_₁(ls²⁸, a¹²) = case ls²⁸ of {
//│ 	LH_C h⁶ t⁶ => reverse_helper_lh_₁(t⁶, 
//│ 		let _lh_listcomp_fun_ls_t⁵ = a¹²
//│ 		in let _lh_listcomp_fun_ls_h⁵ = h⁶
//│ 		in (fun _lh_listcomp_fun⁸ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun⁸(_lh_listcomp_fun_ls_t⁵)]))
//│ 	| LH_N  => a¹²}
//│ def reverse_helper_lh_₂(ls²⁷, a¹⁰) = case ls²⁷ of {
//│ 	LH_C h⁵ t⁵ => reverse_helper_lh_₂(t⁵, 
//│ 		let ty² = a¹⁰
//│ 		in let hy² = h⁵
//│ 		in (fun hx² -> (fun tx² -> 
//│ 			let _lh_findk_LH_C_1² = zip_lh_₁(tx², ty²)
//│ 			in let _lh_findk_LH_C_0² = 	
//│ 				let _lh_findk_LH_P2_1² = hy²
//│ 				in let _lh_findk_LH_P2_0² = hx²
//│ 				in (fun _lh_findk_LH_C_1³ -> (fun _lh_findk_arg1⁵ -> (fun _lh_findk_arg2⁵ -> (fun _lh_findk_arg3⁵ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3⁵) then findk_lh_₁((_lh_findk_arg1⁵ + 1), _lh_findk_arg1⁵, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1³) else findk_lh_₁((_lh_findk_arg1⁵ + 1), _lh_findk_arg2⁵, _lh_findk_arg3⁵, _lh_findk_LH_C_1³)))))
//│ 			in (fun _lh_findk_arg2⁴ -> (fun _lh_findk_arg1⁴ -> (fun _lh_findk_arg3⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1², _lh_findk_arg1⁴, _lh_findk_arg2⁴, _lh_findk_arg3⁴)))))))
//│ 	| LH_N  => a¹⁰}
//│ def reverse_helper_lh_₃(ls²⁶, a⁹) = case ls²⁶ of {
//│ 	LH_C h⁴ t⁴ => reverse_helper_lh_₃(t⁴, 
//│ 		let _lh_listcomp_fun_ls_t⁴ = a⁹
//│ 		in let _lh_listcomp_fun_ls_h⁴ = h⁴
//│ 		in (fun _lh_listcomp_fun⁷ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁴)]))
//│ 	| LH_N  => a⁹}
//│ def reverse_helper_lh_₄(ls³⁴, a¹⁵) = case ls³⁴ of {
//│ 	LH_C h³ t³ => reverse_helper_lh_₄(t³, 
//│ 		let ty³ = a¹⁵
//│ 		in let hy³ = h³
//│ 		in (fun hx³ -> (fun tx³ -> 
//│ 			let _lh_findk_LH_C_1⁴ = zip_lh_₂(tx³, ty³)
//│ 			in let _lh_findk_LH_C_0³ = 	
//│ 				let _lh_findk_LH_P2_1³ = hy³
//│ 				in let _lh_findk_LH_P2_0³ = hx³
//│ 				in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1⁹ -> (fun _lh_findk_arg2⁹ -> (fun _lh_findk_arg3⁹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3⁹) then findk_lh_₂((_lh_findk_arg1⁹ + 1), _lh_findk_arg1⁹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁵) else findk_lh_₂((_lh_findk_arg1⁹ + 1), _lh_findk_arg2⁹, _lh_findk_arg3⁹, _lh_findk_LH_C_1⁵)))))
//│ 			in (fun _lh_findk_arg2⁸ -> (fun _lh_findk_arg1⁸ -> (fun _lh_findk_arg3⁸ -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁴, _lh_findk_arg1⁸, _lh_findk_arg2⁸, _lh_findk_arg3⁸)))))))
//│ 	| LH_N  => a¹⁵}
//│ def reverse_helper_lh_₅(ls¹⁹, a⁸) = case ls¹⁹ of {
//│ 	LH_C h² t² => reverse_helper_lh_₅(t², 
//│ 		let _lh_algb1_LH_C_1³ = a⁸
//│ 		in let _lh_algb1_LH_C_0³ = h²
//│ 		in (fun _lh_algb1_arg2³ -> algb1_lh_₁(_lh_algb1_LH_C_1³, algb2_lh_₁(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2³))))
//│ 	| LH_N  => a⁸}
//│ def reverse_helper_lh_₆(ls³⁰, a¹³) = case ls³⁰ of {
//│ 	LH_C h¹ t¹ => reverse_helper_lh_₆(t¹, [LH_C h¹ a¹³])
//│ 	| LH_N  => a¹³}
//│ def reverse_lh_₁(ls²²) = reverse_helper_lh_₁(ls²², (fun _lh_listcomp_fun⁵ -> [LH_N]))
//│ def reverse_lh_₂(ls³⁵) = reverse_helper_lh_₂(ls³⁵, (fun hx⁴ -> (fun tx⁴ -> (fun _lh_findk_arg2¹⁰ -> (fun _lh_findk_arg1¹⁰ -> (fun _lh_findk_arg3¹⁰ -> _lh_findk_arg2¹⁰))))))
//│ def reverse_lh_₃(ls²⁴) = reverse_helper_lh_₃(ls²⁴, (fun _lh_listcomp_fun⁶ -> [LH_N]))
//│ def reverse_lh_₄(ls³⁶) = reverse_helper_lh_₄(ls³⁶, (fun hx⁵ -> (fun tx⁵ -> (fun _lh_findk_arg2¹¹ -> (fun _lh_findk_arg1¹¹ -> (fun _lh_findk_arg3¹¹ -> _lh_findk_arg2¹¹))))))
//│ def reverse_lh_₅(ls²³) = reverse_helper_lh_₅(ls²³, (fun _lh_algb1_arg2⁵ -> map_lh_₁(snd_lh_₁, _lh_algb1_arg2⁵)))
//│ def reverse_lh_₆(ls²⁹) = reverse_helper_lh_₆(ls²⁹, [LH_N])
//│ def snd_lh_₁(_lh_snd_arg1¹) = case _lh_snd_arg1¹ of {
//│ 	LH_P2 _lh_snd_LH_P2_0⁰ _lh_snd_LH_P2_1⁰ => _lh_snd_LH_P2_1⁰
//│ 	| _  => error⁰}
//│ def take_lh_₁(n⁷, ls³²) = if (n⁷ > 0) then case ls³² of {
//│ 	LH_C h¹⁰ t¹⁰ => [LH_C h¹⁰ take_lh_₁((n⁷ - 1), t¹⁰)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lh_₂(n⁶, ls³¹) = if (n⁶ > 0) then case ls³¹ of {
//│ 	LH_C h⁹ t⁹ => [LH_C h⁹ take_lh_₂((n⁶ - 1), t⁹)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lh_₃(n⁴, ls²¹) = if (n⁴ > 0) then case ls²¹ of {
//│ 	LH_C h⁸ t⁸ => [LH_C h⁸ take_lh_₃((n⁴ - 1), t⁸)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def take_lh_₄(n⁵, ls²⁵) = if (n⁵ > 0) then case ls²⁵ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ take_lh_₄((n⁵ - 1), t⁷)]
//│ 	| LH_N  => [LH_N]} else [LH_N]
//│ def testLCSS_nofib_lh_₁(_lh_testLCSS_nofib_arg1¹) = lcssMain_lh_₁(1, 2, 60, 30, 31, 90)
//│ def zip_lh_₁(xs², ys²) = case xs² of {
//│ 	LH_C hx¹ tx¹ => ys²(hx¹, tx¹)
//│ 	| LH_N  => (fun _lh_findk_arg2³ -> (fun _lh_findk_arg1³ -> (fun _lh_findk_arg3³ -> _lh_findk_arg2³)))}
//│ def zip_lh_₂(xs³, ys³) = case xs³ of {
//│ 	LH_C hx⁰ tx⁰ => ys³(hx⁰, tx⁰)
//│ 	| LH_N  => (fun _lh_findk_arg2⁷ -> (fun _lh_findk_arg1⁷ -> (fun _lh_findk_arg3⁷ -> _lh_findk_arg2⁷)))}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testLCSS_nofib_lh_₁^1] (hopeless to continue)
//│ 	[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120] (using original def)
//│ 		[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · enumFromThenTo_lh_₁^500] (using original def)
//│ 			[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · enumFromThenTo_lh_₁^500 · enumFromThenTo_lh_₁^395] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · enumFromThenTo_lh_₁^500] (using original def)
//│ 		[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · enumFromThenTo_lh_₂^508] (using original def)
//│ 			[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · enumFromThenTo_lh_₂^508 · enumFromThenTo_lh_₂^567] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · enumFromThenTo_lh_₂^508] (using original def)
//│ 		[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499] (using original def)
//│ 			[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₁^901] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₁^901 · algb1_lh_₁^472] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058 · algb1_lh_₂^103] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058 · algb2_lh_₁^106] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058 · algb2_lh_₁^106 · algb2_lh_₁^1000] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058 · algb2_lh_₁^106] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058 · algb2_lh_₁^106 · max_lh_₁^991] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058 · map_lh_₁^98] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058 · map_lh_₁^98 · map_lh_₁^649] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058 · map_lh_₁^98] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₂^802 · algb1_lh_₂^1058 · snd_lh_₁^99] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34 · algb1_lh_₃^443] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34 · algb2_lh_₁^446] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34 · algb2_lh_₁^446 · algb2_lh_₁^1000] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34 · algb2_lh_₁^446] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34 · algb2_lh_₁^446 · max_lh_₁^991] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34 · map_lh_₁^438] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34 · map_lh_₁^438 · map_lh_₁^649] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34 · map_lh_₁^438] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₃^895 · algb1_lh_₃^34 · snd_lh_₁^439] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546 · algb1_lh_₃^443] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546 · algb2_lh_₁^446] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546 · algb2_lh_₁^446 · algb2_lh_₁^1000] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546 · algb2_lh_₁^446] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546 · algb2_lh_₁^446 · max_lh_₁^991] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546 · map_lh_₁^438] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546 · map_lh_₁^438 · map_lh_₁^649] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546 · map_lh_₁^438] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algb_lh_₄^808 · algb1_lh_₃^546 · snd_lh_₁^439] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algc_lh_₁^835] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algc_lh_₁^848] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algc_lh_₁^928] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · algc_lh_₁^941] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₁^797] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₁^797 · drop_lh_₁^188] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₁^797] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₂^863] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₂^863 · drop_lh_₂^259] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₂^863] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₃^956] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₃^956 · drop_lh_₃^597] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₃^956] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₄^890] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₄^890 · drop_lh_₄^65] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · drop_lh_₄^890] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · findk_lh_₁^911] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · findk_lh_₂^818] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · inList_lh_₁^775] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · inList_lh_₁^775 · inList_lh_₁^86] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · inList_lh_₁^775] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₁^813] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₁^813 · reverse_helper_lh_₁^202] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₁^813 · reverse_helper_lh_₁^202 · reverse_helper_lh_₁^417] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₁^813 · reverse_helper_lh_₁^202] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₂^900] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₂^900 · reverse_helper_lh_₂^759] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₂^900 · reverse_helper_lh_₂^759 · findk_lh_₁^329] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₂^900 · reverse_helper_lh_₂^759 · findk_lh_₁^346] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₂^900 · reverse_helper_lh_₂^759 · reverse_helper_lh_₂^308] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₂^900 · reverse_helper_lh_₂^759] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₂^900 · reverse_helper_lh_₂^759 · zip_lh_₁^313] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₃^906] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₃^906 · reverse_helper_lh_₃^220] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₃^906 · reverse_helper_lh_₃^220 · reverse_helper_lh_₃^274] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₃^906 · reverse_helper_lh_₃^220] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₄^807] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₄^807 · reverse_helper_lh_₄^1046] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₄^807 · reverse_helper_lh_₄^1046 · findk_lh_₂^699] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₄^807 · reverse_helper_lh_₄^1046 · findk_lh_₂^716] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₄^807 · reverse_helper_lh_₄^1046 · reverse_helper_lh_₄^678] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₄^807 · reverse_helper_lh_₄^1046] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₄^807 · reverse_helper_lh_₄^1046 · zip_lh_₂^683] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · map_lh_₁^212] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · map_lh_₁^212 · map_lh_₁^649] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · map_lh_₁^212] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · reverse_helper_lh_₅^209] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · reverse_helper_lh_₅^209 · algb1_lh_₁^12] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · reverse_helper_lh_₅^209 · algb2_lh_₁^15] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · reverse_helper_lh_₅^209 · algb2_lh_₁^15 · algb2_lh_₁^1000] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · reverse_helper_lh_₅^209 · algb2_lh_₁^15] (using original def)
//│ 							[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · reverse_helper_lh_₅^209 · algb2_lh_₁^15 · max_lh_₁^991] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · reverse_helper_lh_₅^209 · reverse_helper_lh_₅^7] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · reverse_helper_lh_₅^209] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₅^902 · snd_lh_₁^213] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₆^809] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₆^809 · reverse_helper_lh_₆^465] (using original def)
//│ 						[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₆^809 · reverse_helper_lh_₆^465 · reverse_helper_lh_₆^488] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · reverse_lh_₆^809 · reverse_helper_lh_₆^465] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₁^842] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₁^842 · take_lh_₁^618] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₁^842] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₂^885] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₂^885 · take_lh_₂^529] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₂^885] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₃^792] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₃^792 · take_lh_₃^163] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₃^792] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₄^935] (using original def)
//│ 					[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₄^935 · take_lh_₄^234] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · take_lh_₄^935] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · zip_lh_₁^922] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · algc_lh_₁^1029 · zip_lh_₂^829] (using original def)
//│ 			[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · length_lh_₁^1034] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · length_lh_₁^1034 · length_lh_₁^149] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · length_lh_₁^1034] (using original def)
//│ 			[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · length_lh_₂^1030] (using original def)
//│ 				[testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · length_lh_₂^1030 · length_lh_₂^1084] ---> [testLCSS_nofib_lh_₁^1 · lcssMain_lh_₁^120 · lcss_lh_₁^499 · length_lh_₂^1030] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testLCSS_nofib_lh_₁_₀(primId⁰(0))
//│ def testLCSS_nofib_lh_₁_₀(_lh_testLCSS_nofib_arg1¹) = 
//│ 	lcssMain_lh_₁_₀(1, 2, 60, 30, 31, 90)
//│ 	where
//│ 	def lcssMain_lh_₁_₀(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹, _lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹) = 
//│ 		lcss_lh_₁_₀(enumFromThenTo_lh_₁_₀(_lh_lcssMain_arg1¹, _lh_lcssMain_arg2¹, _lh_lcssMain_arg3¹), enumFromThenTo_lh_₂_₀(_lh_lcssMain_arg4¹, _lh_lcssMain_arg5¹, _lh_lcssMain_arg6¹))
//│ 		where
//│ 		def enumFromThenTo_lh_₁_₀(a¹⁰, t²³, b²) = 
//│ 			if (a¹⁰ <= b²) then [LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)] else [LH_N]
//│ 		def enumFromThenTo_lh_₂_₀(a¹⁴, t³⁰, b³) = 
//│ 			if (a¹⁴ <= b³) then [LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)] else [LH_N]
//│ 		def lcss_lh_₁_₀(_lh_lcss_arg1¹, _lh_lcss_arg2¹) = 
//│ 			algc_lh_₁_₀(length_lh_₂_₀(_lh_lcss_arg1¹), length_lh_₁_₀(_lh_lcss_arg2¹), _lh_lcss_arg1¹, _lh_lcss_arg2¹, [LH_N])
//│ 			where
//│ 			def algc_lh_₁_₀(_lh_algc_arg1¹, _lh_algc_arg2¹, _lh_algc_arg3¹, _lh_algc_arg4¹) = 
//│ 				case _lh_algc_arg4¹ of {
//│ 					LH_N  => (fun x² -> x²)
//│ 					| _  => case _lh_algc_arg3¹ of {
//│ 						LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {
//│ 							LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³)
//│ 							| _  => 
//│ 								let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ 								in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ 								in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ 								in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ 								in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ 								in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ 								in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}
//│ 						| _  => 
//│ 							let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ 							in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ 							in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ 							in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ 							in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ 							in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ 							in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}
//│ 				where
//│ 				def algb_lh_₁_₀(_lh_algb_arg1⁷, _lh_algb_arg2⁷) = 
//│ 					[LH_C 0 algb1_lh_₁_₀(_lh_algb_arg1⁷, 
//│ 						let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> _lh_listcomp_fun_para⁷(_lh_listcomp_fun¹⁵))
//│ 						in _lh_listcomp_fun¹⁵(_lh_algb_arg2⁷))]
//│ 					where
//│ 					def algb1_lh_₁_₀(_lh_algb1_arg1⁷, _lh_algb1_arg2¹¹) = 
//│ 						_lh_algb1_arg1⁷(_lh_algb1_arg2¹¹)
//│ 				def algb_lh_₂_₀(_lh_algb_arg1⁶, _lh_algb_arg2⁶) = 
//│ 					[LH_C 0 algb1_lh_₂_₀(_lh_algb_arg1⁶, 
//│ 						let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 							LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun¹¹(_lh_algb_arg2⁶))]
//│ 					where
//│ 					def algb1_lh_₂_₀(_lh_algb1_arg1⁴, _lh_algb1_arg2⁶) = 
//│ 						case _lh_algb1_arg1⁴ of {
//│ 							LH_N  => map_lh_₁_₀(snd_lh_₁_₀, _lh_algb1_arg2⁶)
//│ 							| LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₂_₀(_lh_algb1_LH_C_1⁴, algb2_lh_₁_₀(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁶))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_arg2⁴, _lh_algb2_arg3⁴, _lh_algb2_arg4⁴) = 
//│ 							case _lh_algb2_arg4⁴ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => 
//│ 										let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁_₀(_lh_max_arg1⁴, _lh_max_arg2⁴) = 
//│ 								if (_lh_max_arg1⁴ > _lh_max_arg2⁴) then _lh_max_arg1⁴ else _lh_max_arg2⁴
//│ 						def map_lh_₁_₀(f³, ls³⁷) = 
//│ 							case ls³⁷ of {
//│ 								LH_C h²⁷ t³³ => [LH_C f³(h²⁷) map_lh_₁_₀(f³, t³³)]
//│ 								| LH_N  => [LH_N]}
//│ 						def snd_lh_₁_₀(_lh_snd_arg1²) = 
//│ 							case _lh_snd_arg1² of {
//│ 								LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1²
//│ 								| _  => error⁰}
//│ 				def algb_lh_₃_₀(_lh_algb_arg1⁵, _lh_algb_arg2⁵) = 
//│ 					[LH_C 0 algb1_lh_₃_₀(_lh_algb_arg1⁵, 
//│ 						let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 							LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun¹⁰(_lh_algb_arg2⁵))]
//│ 					where
//│ 					def algb1_lh_₃_₀(_lh_algb1_arg1⁶, _lh_algb1_arg2¹⁰) = 
//│ 						case _lh_algb1_arg1⁶ of {
//│ 							LH_N  => map_lh_₁_₁(snd_lh_₁_₁, _lh_algb1_arg2¹⁰)
//│ 							| LH_C _lh_algb1_LH_C_0⁶ _lh_algb1_LH_C_1⁶ => algb1_lh_₃_₀(_lh_algb1_LH_C_1⁶, algb2_lh_₁_₁(_lh_algb1_LH_C_0⁶, 0, 0, _lh_algb1_arg2¹⁰))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_arg2³, _lh_algb2_arg3³, _lh_algb2_arg4³) = 
//│ 							case _lh_algb2_arg4³ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => 
//│ 										let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₁_₁(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁_₁(_lh_max_arg1², _lh_max_arg2²) = 
//│ 								if (_lh_max_arg1² > _lh_max_arg2²) then _lh_max_arg1² else _lh_max_arg2²
//│ 						def map_lh_₁_₁(f¹, ls²¹) = 
//│ 							case ls²¹ of {
//│ 								LH_C h¹⁵ t¹⁸ => [LH_C f¹(h¹⁵) map_lh_₁_₁(f¹, t¹⁸)]
//│ 								| LH_N  => [LH_N]}
//│ 						def snd_lh_₁_₁(_lh_snd_arg1⁴) = 
//│ 							case _lh_snd_arg1⁴ of {
//│ 								LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴
//│ 								| _  => error⁰}
//│ 				def algb_lh_₄_₀(_lh_algb_arg1⁴, _lh_algb_arg2⁴) = 
//│ 					[LH_C 0 algb1_lh_₃_₁(_lh_algb_arg1⁴, 
//│ 						let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁸))
//│ 						in _lh_listcomp_fun⁸(_lh_algb_arg2⁴))]
//│ 					where
//│ 					def algb1_lh_₃_₁(_lh_algb1_arg1³, _lh_algb1_arg2⁵) = 
//│ 						case _lh_algb1_arg1³ of {
//│ 							LH_N  => map_lh_₁_₂(snd_lh_₁_₂, _lh_algb1_arg2⁵)
//│ 							| LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₃_₁(_lh_algb1_LH_C_1³, algb2_lh_₁_₂(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2⁵))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_arg2¹, _lh_algb2_arg3¹, _lh_algb2_arg4¹) = 
//│ 							case _lh_algb2_arg4¹ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => 
//│ 										let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₁_₂(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁_₂(_lh_max_arg1³, _lh_max_arg2³) = 
//│ 								if (_lh_max_arg1³ > _lh_max_arg2³) then _lh_max_arg1³ else _lh_max_arg2³
//│ 						def map_lh_₁_₂(f², ls²⁵) = 
//│ 							case ls²⁵ of {
//│ 								LH_C h¹⁹ t²² => [LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)]
//│ 								| LH_N  => [LH_N]}
//│ 						def snd_lh_₁_₂(_lh_snd_arg1¹) = 
//│ 							case _lh_snd_arg1¹ of {
//│ 								LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 								| _  => error⁰}
//│ 				def drop_lh_₁_₀(_lh_drop_arg1⁴, _lh_drop_arg2⁴) = 
//│ 					case _lh_drop_arg2⁴ of {
//│ 						LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₂_₀(_lh_drop_arg1⁵, _lh_drop_arg2⁵) = 
//│ 					case _lh_drop_arg2⁵ of {
//│ 						LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₃_₀(_lh_drop_arg1⁶, _lh_drop_arg2⁶) = 
//│ 					case _lh_drop_arg2⁶ of {
//│ 						LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₄_₀(_lh_drop_arg1⁷, _lh_drop_arg2⁷) = 
//│ 					case _lh_drop_arg2⁷ of {
//│ 						LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷)
//│ 						| _  => error⁰}
//│ 				def findk_lh_₁_₀(_lh_findk_arg1¹¹, _lh_findk_arg2¹¹, _lh_findk_arg3¹¹, _lh_findk_arg4³) = 
//│ 					_lh_findk_arg4³(_lh_findk_arg2¹¹, _lh_findk_arg1¹¹, _lh_findk_arg3¹¹)
//│ 				def findk_lh_₂_₀(_lh_findk_arg1¹⁹, _lh_findk_arg2¹⁹, _lh_findk_arg3¹⁹, _lh_findk_arg4⁶) = 
//│ 					_lh_findk_arg4⁶(_lh_findk_arg2¹⁹, _lh_findk_arg1¹⁹, _lh_findk_arg3¹⁹)
//│ 				def inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_arg2¹) = 
//│ 					case _lh_inList_arg2¹ of {
//│ 						LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹)
//│ 						| LH_N  => [False]
//│ 						| _  => error⁰}
//│ 				def reverse_lh_₁_₀(ls³¹) = 
//│ 					reverse_helper_lh_₁_₀(ls³¹, (fun _lh_listcomp_fun¹³ -> [LH_N]))
//│ 					where
//│ 					def reverse_helper_lh_₁_₀(ls²⁰, a⁸) = 
//│ 						case ls²⁰ of {
//│ 							LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, 
//│ 								let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ 								in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ 								in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)]))
//│ 							| LH_N  => a⁸}
//│ 				def reverse_lh_₂_₀(ls³⁹) = 
//│ 					reverse_helper_lh_₂_₀(ls³⁹, (fun hx¹³ -> (fun tx¹³ -> (fun _lh_findk_arg2²⁵ -> (fun _lh_findk_arg1²⁵ -> (fun _lh_findk_arg3²⁵ -> _lh_findk_arg2²⁵))))))
//│ 					where
//│ 					def reverse_helper_lh_₂_₀(ls³⁴, a¹⁵) = 
//│ 						case ls³⁴ of {
//│ 							LH_C h²⁵ t³¹ => reverse_helper_lh_₂_₀(t³¹, 
//│ 								let ty³ = a¹⁵
//│ 								in let hy³ = h²⁵
//│ 								in (fun hx¹⁰ -> (fun tx¹⁰ -> 
//│ 									let _lh_findk_LH_C_1⁶ = zip_lh_₁_₀(tx¹⁰, ty³)
//│ 									in let _lh_findk_LH_C_0³ = 	
//│ 										let _lh_findk_LH_P2_1³ = hy³
//│ 										in let _lh_findk_LH_P2_0³ = hx¹⁰
//│ 										in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg3²¹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²¹) then findk_lh_₁_₁((_lh_findk_arg1²¹ + 1), _lh_findk_arg1²¹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₁_₂((_lh_findk_arg1²¹ + 1), _lh_findk_arg2²¹, _lh_findk_arg3²¹, _lh_findk_LH_C_1⁷)))))
//│ 									in (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²², _lh_findk_arg2²², _lh_findk_arg3²²)))))))
//│ 							| LH_N  => a¹⁵}
//│ 						where
//│ 						def findk_lh_₁_₁(_lh_findk_arg1¹⁰, _lh_findk_arg2¹⁰, _lh_findk_arg3¹⁰, _lh_findk_arg4²) = 
//│ 							_lh_findk_arg4²(_lh_findk_arg2¹⁰, _lh_findk_arg1¹⁰, _lh_findk_arg3¹⁰)
//│ 						def findk_lh_₁_₂(_lh_findk_arg1²⁰, _lh_findk_arg2²⁰, _lh_findk_arg3²⁰, _lh_findk_arg4⁷) = 
//│ 							_lh_findk_arg4⁷(_lh_findk_arg2²⁰, _lh_findk_arg1²⁰, _lh_findk_arg3²⁰)
//│ 						def zip_lh_₁_₀(xs², ys²) = 
//│ 							case xs² of {
//│ 								LH_C hx⁷ tx⁷ => ys²(hx⁷, tx⁷)
//│ 								| LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}
//│ 				def reverse_lh_₃_₀(ls³⁶) = 
//│ 					reverse_helper_lh_₃_₀(ls³⁶, (fun _lh_listcomp_fun¹⁴ -> [LH_N]))
//│ 					where
//│ 					def reverse_helper_lh_₃_₀(ls²⁹, a¹²) = 
//│ 						case ls²⁹ of {
//│ 							LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, 
//│ 								let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ 								in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ 								in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)]))
//│ 							| LH_N  => a¹²}
//│ 				def reverse_lh_₄_₀(ls³⁸) = 
//│ 					reverse_helper_lh_₄_₀(ls³⁸, (fun hx¹² -> (fun tx¹² -> (fun _lh_findk_arg2²⁴ -> (fun _lh_findk_arg1²⁴ -> (fun _lh_findk_arg3²⁴ -> _lh_findk_arg2²⁴))))))
//│ 					where
//│ 					def reverse_helper_lh_₄_₀(ls²², a⁹) = 
//│ 						case ls²² of {
//│ 							LH_C h¹⁶ t¹⁹ => reverse_helper_lh_₄_₀(t¹⁹, 
//│ 								let ty² = a⁹
//│ 								in let hy² = h¹⁶
//│ 								in (fun hx⁶ -> (fun tx⁶ -> 
//│ 									let _lh_findk_LH_C_1⁴ = zip_lh_₂_₀(tx⁶, ty²)
//│ 									in let _lh_findk_LH_C_0² = 	
//│ 										let _lh_findk_LH_P2_1² = hy²
//│ 										in let _lh_findk_LH_P2_0² = hx⁶
//│ 										in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₂_₁((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₂_₂((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ 									in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴)))))))
//│ 							| LH_N  => a⁹}
//│ 						where
//│ 						def findk_lh_₂_₁(_lh_findk_arg1¹², _lh_findk_arg2¹², _lh_findk_arg3¹², _lh_findk_arg4⁴) = 
//│ 							_lh_findk_arg4⁴(_lh_findk_arg2¹², _lh_findk_arg1¹², _lh_findk_arg3¹²)
//│ 						def findk_lh_₂_₂(_lh_findk_arg1¹⁵, _lh_findk_arg2¹⁵, _lh_findk_arg3¹⁵, _lh_findk_arg4⁵) = 
//│ 							_lh_findk_arg4⁵(_lh_findk_arg2¹⁵, _lh_findk_arg1¹⁵, _lh_findk_arg3¹⁵)
//│ 						def zip_lh_₂_₀(xs⁴, ys⁴) = 
//│ 							case xs⁴ of {
//│ 								LH_C hx⁹ tx⁹ => ys⁴(hx⁹, tx⁹)
//│ 								| LH_N  => (fun _lh_findk_arg2¹⁸ -> (fun _lh_findk_arg1¹⁸ -> (fun _lh_findk_arg3¹⁸ -> _lh_findk_arg2¹⁸)))}
//│ 				def reverse_lh_₅_₀(ls³⁰) = 
//│ 					reverse_helper_lh_₅_₀(ls³⁰, (fun _lh_algb1_arg2⁷ -> map_lh_₁_₃(snd_lh_₁_₃, _lh_algb1_arg2⁷)))
//│ 					where
//│ 					def map_lh_₁_₃(f⁴, ls⁴⁰) = 
//│ 						case ls⁴⁰ of {
//│ 							LH_C h²⁸ t³⁴ => [LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)]
//│ 							| LH_N  => [LH_N]}
//│ 					def reverse_helper_lh_₅_₀(ls³², a¹³) = 
//│ 						case ls³² of {
//│ 							LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, 
//│ 								let _lh_algb1_LH_C_1⁵ = a¹³
//│ 								in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ 								in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹))))
//│ 							| LH_N  => a¹³}
//│ 						where
//│ 						def algb1_lh_₁_₁(_lh_algb1_arg1⁵, _lh_algb1_arg2⁸) = 
//│ 							_lh_algb1_arg1⁵(_lh_algb1_arg2⁸)
//│ 						def algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_arg2², _lh_algb2_arg3², _lh_algb2_arg4²) = 
//│ 							case _lh_algb2_arg4² of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {
//│ 									LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => 
//│ 										let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁_₃(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁_₃(_lh_max_arg1¹, _lh_max_arg2¹) = 
//│ 								if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ 					def snd_lh_₁_₃(_lh_snd_arg1³) = 
//│ 						case _lh_snd_arg1³ of {
//│ 							LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³
//│ 							| _  => error⁰}
//│ 				def reverse_lh_₆_₀(ls³³) = 
//│ 					reverse_helper_lh_₆_₀(ls³³, [LH_N])
//│ 					where
//│ 					def reverse_helper_lh_₆_₀(ls²⁷, a¹¹) = 
//│ 						case ls²⁷ of {
//│ 							LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹])
//│ 							| LH_N  => a¹¹}
//│ 				def take_lh_₁_₀(n⁴, ls¹⁹) = 
//│ 					if (n⁴ > 0) then case ls¹⁹ of {
//│ 						LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₂_₀(n⁷, ls²⁸) = 
//│ 					if (n⁷ > 0) then case ls²⁸ of {
//│ 						LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₃_₀(n⁵, ls²³) = 
//│ 					if (n⁵ > 0) then case ls²³ of {
//│ 						LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₄_₀(n⁶, ls²⁴) = 
//│ 					if (n⁶ > 0) then case ls²⁴ of {
//│ 						LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def zip_lh_₁_₁(xs³, ys³) = 
//│ 					case xs³ of {
//│ 						LH_C hx⁸ tx⁸ => ys³(hx⁸, tx⁸)
//│ 						| LH_N  => (fun _lh_findk_arg2¹⁷ -> (fun _lh_findk_arg1¹⁷ -> (fun _lh_findk_arg3¹⁷ -> _lh_findk_arg2¹⁷)))}
//│ 				def zip_lh_₂_₁(xs⁵, ys⁵) = 
//│ 					case xs⁵ of {
//│ 						LH_C hx¹¹ tx¹¹ => ys⁵(hx¹¹, tx¹¹)
//│ 						| LH_N  => (fun _lh_findk_arg2²³ -> (fun _lh_findk_arg1²³ -> (fun _lh_findk_arg3²³ -> _lh_findk_arg2²³)))}
//│ 			def length_lh_₁_₀(ls²⁶) = 
//│ 				case ls²⁶ of {
//│ 					LH_C h²⁰ t²⁴ => (1 + length_lh_₁_₀(t²⁴))
//│ 					| LH_N  => 0}
//│ 			def length_lh_₂_₀(ls³⁵) = 
//│ 				case ls³⁵ of {
//│ 					LH_C h²⁶ t³² => (1 + length_lh_₂_₀(t³²))
//│ 					| LH_N  => 0}
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_N]: 1108 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_N]: 1110 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_N]: 1143 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₁_₂(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1178
//│ 	case ls²⁵ of {LH_C h¹⁹ t²² => [LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)] | LH_N  => [LH_N]}: 1548
//│ [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹]: 1163 --->
//│ 	case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₁_₂(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰}: 1176
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 1622
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]: 1173 --->
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₁_₂(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1178
//│ 	case ls²⁵ of {LH_C h¹⁹ t²² => [LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)] | LH_N  => [LH_N]}: 1548
//│ [LH_C 0 algb1_lh_₃_₁(_lh_algb_arg1⁴, let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁸))
//│ in _lh_listcomp_fun⁸(_lh_algb_arg2⁴))]: 1206 --->
//│ 	case ls²² of {LH_C h¹⁶ t¹⁹ => reverse_helper_lh_₄_₀(t¹⁹, let ty² = a⁹
//│ in let hy² = h¹⁶
//│ in (fun hx⁶ -> (fun tx⁶ -> let _lh_findk_LH_C_1⁴ = zip_lh_₂_₀(tx⁶, ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx⁶
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₂_₁((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₂_₂((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴))))))) | LH_N  => a⁹}: 1442
//│ [LH_P2 _lh_listcomp_fun_ls_h⁴ 0]: 1239 --->
//│ 	DeadCodeCons
//│ 	case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₁_₂(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰}: 1176
//│ 	case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 1622
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)]: 1243 --->
//│ 	DeadCodeCons
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₁_₂(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1178
//│ 	case ls²⁵ of {LH_C h¹⁹ t²² => [LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)] | LH_N  => [LH_N]}: 1548
//│ [LH_C f¹(h¹⁵) map_lh_₁_₁(f¹, t¹⁸)]: 1271 --->
//│ 	DeadCodeCons
//│ 	case xs² of {LH_C hx⁷ tx⁷ => ys²(hx⁷, tx⁷) | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1747
//│ [LH_N]: 1272 --->
//│ 	DeadCodeCons
//│ 	case xs² of {LH_C hx⁷ tx⁷ => ys²(hx⁷, tx⁷) | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1747
//│ [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1284 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_N]: 1300 --->
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁_₃(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1335
//│ 	case ls⁴⁰ of {LH_C h²⁸ t³⁴ => [LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)] | LH_N  => [LH_N]}: 2481
//│ [LH_P2 _lh_algb2_LH_P2_0² kjcurr²]: 1320 --->
//│ 	case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁_₃(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰}: 1333
//│ 	case _lh_snd_arg1³ of {LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³ | _  => error⁰}: 2070
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]: 1330 --->
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁_₃(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1335
//│ 	case ls⁴⁰ of {LH_C h²⁸ t³⁴ => [LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)] | LH_N  => [LH_N]}: 2481
//│ [LH_P2 _lh_listcomp_fun_ls_h⁵ 0]: 1347 --->
//│ 	case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₁_₁(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰}: 1585
//│ 	case _lh_snd_arg1⁴ of {LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴ | _  => error⁰}: 2452
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)]: 1351 --->
//│ 	case ls²¹ of {LH_C h¹⁵ t¹⁸ => [LH_C f¹(h¹⁵) map_lh_₁_₁(f¹, t¹⁸)] | LH_N  => [LH_N]}: 1273
//│ 	case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₁_₁(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1587
//│ [LH_N]: 1352 --->
//│ 	case ls²¹ of {LH_C h¹⁵ t¹⁸ => [LH_C f¹(h¹⁵) map_lh_₁_₁(f¹, t¹⁸)] | LH_N  => [LH_N]}: 1273
//│ 	case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₁_₁(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1587
//│ [LH_C 0 algb1_lh_₃_₀(_lh_algb_arg1⁵, let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(_lh_algb_arg2⁵))]: 1360 --->
//│ 	case xs³ of {LH_C hx⁸ tx⁸ => ys³(hx⁸, tx⁸) | LH_N  => (fun _lh_findk_arg2¹⁷ -> (fun _lh_findk_arg1¹⁷ -> (fun _lh_findk_arg3¹⁷ -> _lh_findk_arg2¹⁷)))}: 1781
//│ [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₁_₀(snd_lh_₁_₀, _lh_algb1_arg2⁶) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₂_₀(_lh_algb1_LH_C_1⁴, algb2_lh_₁_₀(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁶)) | _  => error⁰}: 1804
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1916
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_N]: 1462 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₁_₀(snd_lh_₁_₀, _lh_algb1_arg2⁶) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₂_₀(_lh_algb1_LH_C_1⁴, algb2_lh_₁_₀(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁶)) | _  => error⁰}: 1804
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1916
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_N]: 1464 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₁_₀(snd_lh_₁_₀, _lh_algb1_arg2⁶) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₂_₀(_lh_algb1_LH_C_1⁴, algb2_lh_₁_₀(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁶)) | _  => error⁰}: 1804
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1916
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_N]: 1485 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_N]: 1487 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)]: 1546 --->
//│ 	case ls²² of {LH_C h¹⁶ t¹⁹ => reverse_helper_lh_₄_₀(t¹⁹, let ty² = a⁹
//│ in let hy² = h¹⁶
//│ in (fun hx⁶ -> (fun tx⁶ -> let _lh_findk_LH_C_1⁴ = zip_lh_₂_₀(tx⁶, ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx⁶
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₂_₁((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₂_₂((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴))))))) | LH_N  => a⁹}: 1442
//│ [LH_N]: 1547 --->
//│ 	case ls²² of {LH_C h¹⁶ t¹⁹ => reverse_helper_lh_₄_₀(t¹⁹, let ty² = a⁹
//│ in let hy² = h¹⁶
//│ in (fun hx⁶ -> (fun tx⁶ -> let _lh_findk_LH_C_1⁴ = zip_lh_₂_₀(tx⁶, ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx⁶
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₂_₁((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₂_₂((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴))))))) | LH_N  => a⁹}: 1442
//│ [LH_N]: 1552 --->
//│ 	case ls²¹ of {LH_C h¹⁵ t¹⁸ => [LH_C f¹(h¹⁵) map_lh_₁_₁(f¹, t¹⁸)] | LH_N  => [LH_N]}: 1273
//│ 	case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₁_₁(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1587
//│ [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³]: 1572 --->
//│ 	case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₁_₁(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰}: 1585
//│ 	case _lh_snd_arg1⁴ of {LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴ | _  => error⁰}: 2452
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)]: 1582 --->
//│ 	case ls²¹ of {LH_C h¹⁵ t¹⁸ => [LH_C f¹(h¹⁵) map_lh_₁_₁(f¹, t¹⁸)] | LH_N  => [LH_N]}: 1273
//│ 	case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₁_₁(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1587
//│ [LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1916
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103
//│ 	case ls³⁵ of {LH_C h²⁶ t³² => (1 + length_lh_₂_₀(t³²)) | LH_N  => 0}: 2279
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_N]: 1614 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1916
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103
//│ 	case ls³⁵ of {LH_C h²⁶ t³² => (1 + length_lh_₂_₀(t³²)) | LH_N  => 0}: 2279
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_C h²¹ a¹¹]: 1675 --->
//│ 	case _lh_algb1_arg1³ of {LH_N  => map_lh_₁_₂(snd_lh_₁_₂, _lh_algb1_arg2⁵) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₃_₁(_lh_algb1_LH_C_1³, algb2_lh_₁_₂(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2⁵)) | _  => error⁰}: 1534
//│ [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1916
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103
//│ 	case _lh_algb1_arg1⁶ of {LH_N  => map_lh_₁_₁(snd_lh_₁_₁, _lh_algb1_arg2¹⁰) | LH_C _lh_algb1_LH_C_0⁶ _lh_algb1_LH_C_1⁶ => algb1_lh_₃_₀(_lh_algb1_LH_C_1⁶, algb2_lh_₁_₁(_lh_algb1_LH_C_0⁶, 0, 0, _lh_algb1_arg2¹⁰)) | _  => error⁰}: 2301
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_N]: 1698 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1916
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103
//│ 	case _lh_algb1_arg1⁶ of {LH_N  => map_lh_₁_₁(snd_lh_₁_₁, _lh_algb1_arg2¹⁰) | LH_C _lh_algb1_LH_C_0⁶ _lh_algb1_LH_C_1⁶ => algb1_lh_₃_₀(_lh_algb1_LH_C_1⁶, algb2_lh_₁_₁(_lh_algb1_LH_C_0⁶, 0, 0, _lh_algb1_arg2¹⁰)) | _  => error⁰}: 2301
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_N]: 1700 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1916
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103
//│ 	case _lh_algb1_arg1⁶ of {LH_N  => map_lh_₁_₁(snd_lh_₁_₁, _lh_algb1_arg2¹⁰) | LH_C _lh_algb1_LH_C_0⁶ _lh_algb1_LH_C_1⁶ => algb1_lh_₃_₀(_lh_algb1_LH_C_1⁶, algb2_lh_₁_₁(_lh_algb1_LH_C_0⁶, 0, 0, _lh_algb1_arg2¹⁰)) | _  => error⁰}: 2301
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_P2 _lh_listcomp_fun_ls_h⁶ 0]: 1711 --->
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 1645
//│ 	case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰}: 2397
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)]: 1715 --->
//│ 	case ls³⁷ of {LH_C h²⁷ t³³ => [LH_C f³(h²⁷) map_lh_₁_₀(f³, t³³)] | LH_N  => [LH_N]}: 2360
//│ 	case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 2399
//│ [LH_N]: 1716 --->
//│ 	case ls³⁷ of {LH_C h²⁷ t³³ => [LH_C f³(h²⁷) map_lh_₁_₀(f³, t³³)] | LH_N  => [LH_N]}: 2360
//│ 	case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 2399
//│ [LH_C 0 algb1_lh_₂_₀(_lh_algb_arg1⁶, let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(_lh_algb_arg2⁶))]: 1724 --->
//│ 	case xs⁵ of {LH_C hx¹¹ tx¹¹ => ys⁵(hx¹¹, tx¹¹) | LH_N  => (fun _lh_findk_arg2²³ -> (fun _lh_findk_arg1²³ -> (fun _lh_findk_arg3²³ -> _lh_findk_arg2²³)))}: 2267
//│ [LH_P2 _lh_listcomp_fun_ls_h⁷ 0]: 1758 --->
//│ 	DeadCodeCons
//│ 	case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁_₃(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰}: 1333
//│ 	case _lh_snd_arg1³ of {LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³ | _  => error⁰}: 2070
//│ [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)]: 1762 --->
//│ 	DeadCodeCons
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁_₃(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1335
//│ 	case ls⁴⁰ of {LH_C h²⁸ t³⁴ => [LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)] | LH_N  => [LH_N]}: 2481
//│ [LH_N]: 2075 --->
//│ 	DeadCodeCons
//│ 	case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₁_₂(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1178
//│ 	case ls²⁵ of {LH_C h¹⁹ t²² => [LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)] | LH_N  => [LH_N]}: 1548
//│ [LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case ls²⁶ of {LH_C h²⁰ t²⁴ => (1 + length_lh_₁_₀(t²⁴)) | LH_N  => 0}: 1656
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_N]: 2153 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case ls²⁶ of {LH_C h²⁰ t²⁴ => (1 + length_lh_₁_₀(t²⁴)) | LH_N  => 0}: 1656
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_N]: 2172 --->
//│ 	case _lh_algb1_arg1³ of {LH_N  => map_lh_₁_₂(snd_lh_₁_₂, _lh_algb1_arg2⁵) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₃_₁(_lh_algb1_LH_C_1³, algb2_lh_₁_₂(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2⁵)) | _  => error⁰}: 1534
//│ [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312 --->
//│ 	case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109
//│ 	case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353
//│ 	case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486
//│ 	case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511
//│ 	case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717
//│ 	case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768
//│ 	case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010
//│ 	case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324
//│ [LH_N]: 2345 --->
//│ 	DeadCodeCons
//│ 	case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁_₃(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1335
//│ 	case ls⁴⁰ of {LH_C h²⁸ t³⁴ => [LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)] | LH_N  => [LH_N]}: 2481
//│ [LH_C f³(h²⁷) map_lh_₁_₀(f³, t³³)]: 2358 --->
//│ 	DeadCodeCons
//│ 	case xs⁴ of {LH_C hx⁹ tx⁹ => ys⁴(hx⁹, tx⁹) | LH_N  => (fun _lh_findk_arg2¹⁸ -> (fun _lh_findk_arg1¹⁸ -> (fun _lh_findk_arg3¹⁸ -> _lh_findk_arg2¹⁸)))}: 2064
//│ [LH_N]: 2359 --->
//│ 	DeadCodeCons
//│ 	case xs⁴ of {LH_C hx⁹ tx⁹ => ys⁴(hx⁹, tx⁹) | LH_N  => (fun _lh_findk_arg2¹⁸ -> (fun _lh_findk_arg1¹⁸ -> (fun _lh_findk_arg3¹⁸ -> _lh_findk_arg2¹⁸)))}: 2064
//│ [LH_N]: 2364 --->
//│ 	case ls³⁷ of {LH_C h²⁷ t³³ => [LH_C f³(h²⁷) map_lh_₁_₀(f³, t³³)] | LH_N  => [LH_N]}: 2360
//│ 	case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 2399
//│ [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴]: 2384 --->
//│ 	case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 1645
//│ 	case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰}: 2397
//│ [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)]: 2394 --->
//│ 	case ls³⁷ of {LH_C h²⁷ t³³ => [LH_C f³(h²⁷) map_lh_₁_₀(f³, t³³)] | LH_N  => [LH_N]}: 2360
//│ 	case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 2399
//│ [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷]: 2412 --->
//│ 	case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296
//│ 	case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463
//│ 	case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699
//│ 	case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009
//│ 	case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103
//│ 	case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424
//│ [LH_C 0 algb1_lh_₁_₀(_lh_algb_arg1⁷, let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> _lh_listcomp_fun_para⁷(_lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁵(_lh_algb_arg2⁷))]: 2467 --->
//│ 	case ls³⁴ of {LH_C h²⁵ t³¹ => reverse_helper_lh_₂_₀(t³¹, let ty³ = a¹⁵
//│ in let hy³ = h²⁵
//│ in (fun hx¹⁰ -> (fun tx¹⁰ -> let _lh_findk_LH_C_1⁶ = zip_lh_₁_₀(tx¹⁰, ty³)
//│ in let _lh_findk_LH_C_0³ = let _lh_findk_LH_P2_1³ = hy³
//│ in let _lh_findk_LH_P2_0³ = hx¹⁰
//│ in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg3²¹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²¹) then findk_lh_₁_₁((_lh_findk_arg1²¹ + 1), _lh_findk_arg1²¹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₁_₂((_lh_findk_arg1²¹ + 1), _lh_findk_arg2²¹, _lh_findk_arg3²¹, _lh_findk_LH_C_1⁷)))))
//│ in (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²², _lh_findk_arg2²², _lh_findk_arg3²²))))))) | LH_N  => a¹⁵}: 2254
//│ [LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)]: 2479 --->
//│ 	case ls³⁴ of {LH_C h²⁵ t³¹ => reverse_helper_lh_₂_₀(t³¹, let ty³ = a¹⁵
//│ in let hy³ = h²⁵
//│ in (fun hx¹⁰ -> (fun tx¹⁰ -> let _lh_findk_LH_C_1⁶ = zip_lh_₁_₀(tx¹⁰, ty³)
//│ in let _lh_findk_LH_C_0³ = let _lh_findk_LH_P2_1³ = hy³
//│ in let _lh_findk_LH_P2_0³ = hx¹⁰
//│ in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg3²¹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²¹) then findk_lh_₁_₁((_lh_findk_arg1²¹ + 1), _lh_findk_arg1²¹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₁_₂((_lh_findk_arg1²¹ + 1), _lh_findk_arg2²¹, _lh_findk_arg3²¹, _lh_findk_LH_C_1⁷)))))
//│ in (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²², _lh_findk_arg2²², _lh_findk_arg3²²))))))) | LH_N  => a¹⁵}: 2254
//│ [LH_N]: 2480 --->
//│ 	case ls³⁴ of {LH_C h²⁵ t³¹ => reverse_helper_lh_₂_₀(t³¹, let ty³ = a¹⁵
//│ in let hy³ = h²⁵
//│ in (fun hx¹⁰ -> (fun tx¹⁰ -> let _lh_findk_LH_C_1⁶ = zip_lh_₁_₀(tx¹⁰, ty³)
//│ in let _lh_findk_LH_C_0³ = let _lh_findk_LH_P2_1³ = hy³
//│ in let _lh_findk_LH_P2_0³ = hx¹⁰
//│ in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg3²¹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²¹) then findk_lh_₁_₁((_lh_findk_arg1²¹ + 1), _lh_findk_arg1²¹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₁_₂((_lh_findk_arg1²¹ + 1), _lh_findk_arg2²¹, _lh_findk_arg3²¹, _lh_findk_LH_C_1⁷)))))
//│ in (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²², _lh_findk_arg2²², _lh_findk_arg3²²))))))) | LH_N  => a¹⁵}: 2254
//│ ------------------
//│ case ls¹⁹ of {LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)] | LH_N  => [LH_N]}: 1109 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₁_₂(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰}: 1176 --->
//│ 	DeadCodeProd
//│ 	[LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹]: 1163
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁴ 0]: 1239
//│ case _lh_algb2_arg4¹ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => let kjcurr¹ = if (_lh_algb2_arg1¹ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2¹ + 1) else max_lh_₁_₂(_lh_algb2_arg3¹, _lh_algb2_LH_P2_1¹)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)] | _  => error⁰} | _  => error⁰}: 1178 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1143
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]: 1173
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)]: 1243
//│ 	[LH_N]: 2075
//│ case ls²⁰ of {LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, let _lh_listcomp_fun_ls_t⁴ = a⁸
//│ in let _lh_listcomp_fun_ls_h⁴ = h¹⁴
//│ in (fun _lh_listcomp_fun⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)])) | LH_N  => a⁸}: 1249 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case ls²¹ of {LH_C h¹⁵ t¹⁸ => [LH_C f¹(h¹⁵) map_lh_₁_₁(f¹, t¹⁸)] | LH_N  => [LH_N]}: 1273 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)]: 1351
//│ 	[LH_N]: 1352
//│ 	[LH_N]: 1552
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)]: 1582
//│ case _lh_drop_arg2⁴ of {LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁴ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁴ - 1), _lh_drop_LH_C_1⁴) | _  => error⁰}: 1296 --->
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1284
//│ 	[LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461
//│ 	[LH_N]: 1462
//│ 	[LH_N]: 1464
//│ 	[LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613
//│ 	[LH_N]: 1614
//│ 	[LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697
//│ 	[LH_N]: 1698
//│ 	[LH_N]: 1700
//│ 	[LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷]: 2412
//│ case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁_₃(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰}: 1333 --->
//│ 	DeadCodeProd
//│ 	[LH_P2 _lh_algb2_LH_P2_0² kjcurr²]: 1320
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁷ 0]: 1758
//│ case _lh_algb2_arg4² of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => let kjcurr² = if (_lh_algb2_arg1² == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2² + 1) else max_lh_₁_₃(_lh_algb2_arg3², _lh_algb2_LH_P2_1²)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)] | _  => error⁰} | _  => error⁰}: 1335 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1300
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]: 1330
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)]: 1762
//│ 	[LH_N]: 2345
//│ case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]}: 1353 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case ls²² of {LH_C h¹⁶ t¹⁹ => reverse_helper_lh_₄_₀(t¹⁹, let ty² = a⁹
//│ in let hy² = h¹⁶
//│ in (fun hx⁶ -> (fun tx⁶ -> let _lh_findk_LH_C_1⁴ = zip_lh_₂_₀(tx⁶, ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx⁶
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₂_₁((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₂_₂((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴))))))) | LH_N  => a⁹}: 1442 --->
//│ 	[LH_C 0 algb1_lh_₃_₁(_lh_algb_arg1⁴, let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁸))
//│ in _lh_listcomp_fun⁸(_lh_algb_arg2⁴))]: 1206
//│ 	[LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)]: 1546
//│ 	[LH_N]: 1547
//│ case ls²³ of {LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)] | LH_N  => [LH_N]}: 1463 --->
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1284
//│ 	[LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461
//│ 	[LH_N]: 1462
//│ 	[LH_N]: 1464
//│ 	[LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613
//│ 	[LH_N]: 1614
//│ 	[LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697
//│ 	[LH_N]: 1698
//│ 	[LH_N]: 1700
//│ 	[LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷]: 2412
//│ case ls²⁴ of {LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)] | LH_N  => [LH_N]}: 1486 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case _lh_drop_arg2⁵ of {LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1⁵ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1⁵ - 1), _lh_drop_LH_C_1⁵) | _  => error⁰}: 1511 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case _lh_algb1_arg1³ of {LH_N  => map_lh_₁_₂(snd_lh_₁_₂, _lh_algb1_arg2⁵) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₃_₁(_lh_algb1_LH_C_1³, algb2_lh_₁_₂(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2⁵)) | _  => error⁰}: 1534 --->
//│ 	[LH_C h²¹ a¹¹]: 1675
//│ 	[LH_N]: 2172
//│ case ls²⁵ of {LH_C h¹⁹ t²² => [LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)] | LH_N  => [LH_N]}: 1548 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1143
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹] algb2_lh_₁_₂(_lh_algb2_arg1¹, _lh_algb2_LH_P2_1¹, kjcurr¹, _lh_algb2_LH_C_1¹)]: 1173
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁴ 0] _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t⁴)]: 1243
//│ 	[LH_N]: 2075
//│ case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₁_₁(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰}: 1585 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁵ 0]: 1347
//│ 	[LH_P2 _lh_algb2_LH_P2_0³ kjcurr³]: 1572
//│ case _lh_algb2_arg4³ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => let kjcurr³ = if (_lh_algb2_arg1³ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2³ + 1) else max_lh_₁_₁(_lh_algb2_arg3³, _lh_algb2_LH_P2_1³)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)] | _  => error⁰} | _  => error⁰}: 1587 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)]: 1351
//│ 	[LH_N]: 1352
//│ 	[LH_N]: 1552
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr³] algb2_lh_₁_₁(_lh_algb2_arg1³, _lh_algb2_LH_P2_1³, kjcurr³, _lh_algb2_LH_C_1³)]: 1582
//│ case _lh_snd_arg1¹ of {LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹ | _  => error⁰}: 1622 --->
//│ 	DeadCodeProd
//│ 	[LH_P2 _lh_algb2_LH_P2_0¹ kjcurr¹]: 1163
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁴ 0]: 1239
//│ case _lh_inList_arg2¹ of {LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1¹ == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1¹, _lh_inList_LH_C_1¹) | LH_N  => [False] | _  => error⁰}: 1639 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case _lh_snd_arg1² of {LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1² | _  => error⁰}: 1645 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁶ 0]: 1711
//│ 	[LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴]: 2384
//│ case ls²⁶ of {LH_C h²⁰ t²⁴ => (1 + length_lh_₁_₀(t²⁴)) | LH_N  => 0}: 1656 --->
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ case ls²⁷ of {LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, [LH_C h²¹ a¹¹]) | LH_N  => a¹¹}: 1678 --->
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1284
//│ 	[LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461
//│ 	[LH_N]: 1462
//│ 	[LH_N]: 1464
//│ 	[LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613
//│ 	[LH_N]: 1614
//│ 	[LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697
//│ 	[LH_N]: 1698
//│ 	[LH_N]: 1700
//│ case ls²⁸ of {LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)] | LH_N  => [LH_N]}: 1699 --->
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1284
//│ 	[LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461
//│ 	[LH_N]: 1462
//│ 	[LH_N]: 1464
//│ 	[LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613
//│ 	[LH_N]: 1614
//│ 	[LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697
//│ 	[LH_N]: 1698
//│ 	[LH_N]: 1700
//│ 	[LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷]: 2412
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 1717 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case xs² of {LH_C hx⁷ tx⁷ => ys²(hx⁷, tx⁷) | LH_N  => (fun _lh_findk_arg2¹⁶ -> (fun _lh_findk_arg1¹⁶ -> (fun _lh_findk_arg3¹⁶ -> _lh_findk_arg2¹⁶)))}: 1747 --->
//│ 	[LH_C f¹(h¹⁵) map_lh_₁_₁(f¹, t¹⁸)]: 1271
//│ 	[LH_N]: 1272
//│ case ls²⁹ of {LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, let _lh_listcomp_fun_ls_t⁷ = a¹²
//│ in let _lh_listcomp_fun_ls_h⁷ = h²³
//│ in (fun _lh_listcomp_fun¹² -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)])) | LH_N  => a¹²}: 1768 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case xs³ of {LH_C hx⁸ tx⁸ => ys³(hx⁸, tx⁸) | LH_N  => (fun _lh_findk_arg2¹⁷ -> (fun _lh_findk_arg1¹⁷ -> (fun _lh_findk_arg3¹⁷ -> _lh_findk_arg2¹⁷)))}: 1781 --->
//│ 	[LH_C 0 algb1_lh_₃_₀(_lh_algb_arg1⁵, let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(_lh_algb_arg2⁵))]: 1360
//│ case _lh_algb1_arg1⁴ of {LH_N  => map_lh_₁_₀(snd_lh_₁_₀, _lh_algb1_arg2⁶) | LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₂_₀(_lh_algb1_LH_C_1⁴, algb2_lh_₁_₀(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2⁶)) | _  => error⁰}: 1804 --->
//│ 	[LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461
//│ 	[LH_N]: 1462
//│ 	[LH_N]: 1464
//│ case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))}: 1916 --->
//│ 	[LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461
//│ 	[LH_N]: 1462
//│ 	[LH_N]: 1464
//│ 	[LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613
//│ 	[LH_N]: 1614
//│ 	[LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697
//│ 	[LH_N]: 1698
//│ 	[LH_N]: 1700
//│ case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}: 2009 --->
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1284
//│ 	[LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461
//│ 	[LH_N]: 1462
//│ 	[LH_N]: 1464
//│ 	[LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613
//│ 	[LH_N]: 1614
//│ 	[LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697
//│ 	[LH_N]: 1698
//│ 	[LH_N]: 1700
//│ 	[LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷]: 2412
//│ case _lh_algc_arg4¹ of {LH_N  => (fun x² -> x²) | _  => case _lh_algc_arg3¹ of {LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4¹) then (fun t²⁸ -> [LH_C _lh_algc_LH_C_0¹ t²⁸]) else (fun x³ -> x³) | _  => let m2² = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1² = take_lh_₃_₀(m2², _lh_algc_arg3¹)
//│ in let xs2² = drop_lh_₁_₀(m2², _lh_algc_arg3¹)
//│ in let l1² = algb_lh_₂_₀(xs1², _lh_algc_arg4¹)
//│ in let l2² = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2²), reverse_lh_₁_₀(_lh_algc_arg4¹)))
//│ in let k² = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1², l2²))
//│ in (fun _lh_funcomp_x² -> algc_lh_₁_₀(m2², k², xs1², take_lh_₁_₀(k², _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2²), (_lh_algc_arg2¹ - k²), xs2², drop_lh_₂_₀(k², _lh_algc_arg4¹), _lh_funcomp_x²)))} | _  => let m2³ = div⁰(_lh_algc_arg1¹, 2)
//│ in let xs1³ = take_lh_₂_₀(m2³, _lh_algc_arg3¹)
//│ in let xs2³ = drop_lh_₄_₀(m2³, _lh_algc_arg3¹)
//│ in let l1³ = algb_lh_₃_₀(xs1³, _lh_algc_arg4¹)
//│ in let l2³ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2³), reverse_lh_₃_₀(_lh_algc_arg4¹)))
//│ in let k³ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1³, l2³))
//│ in (fun _lh_funcomp_x³ -> algc_lh_₁_₀(m2³, k³, xs1³, take_lh_₄_₀(k³, _lh_algc_arg4¹), algc_lh_₁_₀((_lh_algc_arg1¹ - m2³), (_lh_algc_arg2¹ - k³), xs2³, drop_lh_₃_₀(k³, _lh_algc_arg4¹), _lh_funcomp_x³)))}}: 2010 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case xs⁴ of {LH_C hx⁹ tx⁹ => ys⁴(hx⁹, tx⁹) | LH_N  => (fun _lh_findk_arg2¹⁸ -> (fun _lh_findk_arg1¹⁸ -> (fun _lh_findk_arg3¹⁸ -> _lh_findk_arg2¹⁸)))}: 2064 --->
//│ 	[LH_C f³(h²⁷) map_lh_₁_₀(f³, t³³)]: 2358
//│ 	[LH_N]: 2359
//│ case _lh_snd_arg1³ of {LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³ | _  => error⁰}: 2070 --->
//│ 	DeadCodeProd
//│ 	[LH_P2 _lh_algb2_LH_P2_0² kjcurr²]: 1320
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁷ 0]: 1758
//│ case ls³² of {LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, let _lh_algb1_LH_C_1⁵ = a¹³
//│ in let _lh_algb1_LH_C_0⁵ = h²⁴
//│ in (fun _lh_algb1_arg2⁹ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁵, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁵, 0, 0, _lh_algb1_arg2⁹)))) | LH_N  => a¹³}: 2103 --->
//│ 	[LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461
//│ 	[LH_N]: 1462
//│ 	[LH_N]: 1464
//│ 	[LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613
//│ 	[LH_N]: 1614
//│ 	[LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697
//│ 	[LH_N]: 1698
//│ 	[LH_N]: 1700
//│ 	[LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷]: 2412
//│ case ls³⁴ of {LH_C h²⁵ t³¹ => reverse_helper_lh_₂_₀(t³¹, let ty³ = a¹⁵
//│ in let hy³ = h²⁵
//│ in (fun hx¹⁰ -> (fun tx¹⁰ -> let _lh_findk_LH_C_1⁶ = zip_lh_₁_₀(tx¹⁰, ty³)
//│ in let _lh_findk_LH_C_0³ = let _lh_findk_LH_P2_1³ = hy³
//│ in let _lh_findk_LH_P2_0³ = hx¹⁰
//│ in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg3²¹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²¹) then findk_lh_₁_₁((_lh_findk_arg1²¹ + 1), _lh_findk_arg1²¹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₁_₂((_lh_findk_arg1²¹ + 1), _lh_findk_arg2²¹, _lh_findk_arg3²¹, _lh_findk_LH_C_1⁷)))))
//│ in (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²², _lh_findk_arg2²², _lh_findk_arg3²²))))))) | LH_N  => a¹⁵}: 2254 --->
//│ 	[LH_C 0 algb1_lh_₁_₀(_lh_algb_arg1⁷, let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> _lh_listcomp_fun_para⁷(_lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁵(_lh_algb_arg2⁷))]: 2467
//│ 	[LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)]: 2479
//│ 	[LH_N]: 2480
//│ case xs⁵ of {LH_C hx¹¹ tx¹¹ => ys⁵(hx¹¹, tx¹¹) | LH_N  => (fun _lh_findk_arg2²³ -> (fun _lh_findk_arg1²³ -> (fun _lh_findk_arg3²³ -> _lh_findk_arg2²³)))}: 2267 --->
//│ 	[LH_C 0 algb1_lh_₂_₀(_lh_algb_arg1⁶, let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(_lh_algb_arg2⁶))]: 1724
//│ case ls³⁵ of {LH_C h²⁶ t³² => (1 + length_lh_₂_₀(t³²)) | LH_N  => 0}: 2279 --->
//│ 	[LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613
//│ 	[LH_N]: 1614
//│ case _lh_algb1_arg1⁶ of {LH_N  => map_lh_₁_₁(snd_lh_₁_₁, _lh_algb1_arg2¹⁰) | LH_C _lh_algb1_LH_C_0⁶ _lh_algb1_LH_C_1⁶ => algb1_lh_₃_₀(_lh_algb1_LH_C_1⁶, algb2_lh_₁_₁(_lh_algb1_LH_C_0⁶, 0, 0, _lh_algb1_arg2¹⁰)) | _  => error⁰}: 2301 --->
//│ 	[LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697
//│ 	[LH_N]: 1698
//│ 	[LH_N]: 1700
//│ case _lh_drop_arg2⁶ of {LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁶ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁶ - 1), _lh_drop_LH_C_1⁶) | _  => error⁰}: 2324 --->
//│ 	[LH_C h¹³ take_lh_₁_₀((n⁴ - 1), t¹⁶)]: 1107
//│ 	[LH_N]: 1108
//│ 	[LH_N]: 1110
//│ 	[LH_C h¹⁸ take_lh_₄_₀((n⁶ - 1), t²¹)]: 1484
//│ 	[LH_N]: 1485
//│ 	[LH_N]: 1487
//│ 	[LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵]: 1499
//│ 	[LH_C a¹⁴ enumFromThenTo_lh_₂_₀(t³⁰, ((2 * t³⁰) - a¹⁴), b³)]: 2152
//│ 	[LH_N]: 2153
//│ 	[LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶]: 2312
//│ case ls³⁷ of {LH_C h²⁷ t³³ => [LH_C f³(h²⁷) map_lh_₁_₀(f³, t³³)] | LH_N  => [LH_N]}: 2360 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)]: 1715
//│ 	[LH_N]: 1716
//│ 	[LH_N]: 2364
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)]: 2394
//│ case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰}: 2397 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁶ 0]: 1711
//│ 	[LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴]: 2384
//│ case _lh_algb2_arg4⁴ of {LH_N  => [LH_N] | LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => let kjcurr⁴ = if (_lh_algb2_arg1⁴ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁴ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁴, _lh_algb2_LH_P2_1⁴)
//│ in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)] | _  => error⁰} | _  => error⁰}: 2399 --->
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)]: 1715
//│ 	[LH_N]: 1716
//│ 	[LH_N]: 2364
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁴] algb2_lh_₁_₀(_lh_algb2_arg1⁴, _lh_algb2_LH_P2_1⁴, kjcurr⁴, _lh_algb2_LH_C_1⁴)]: 2394
//│ case _lh_drop_arg2⁷ of {LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1⁷ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1⁷ - 1), _lh_drop_LH_C_1⁷) | _  => error⁰}: 2424 --->
//│ 	[LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴]: 1284
//│ 	[LH_C h¹⁷ take_lh_₃_₀((n⁵ - 1), t²⁰)]: 1461
//│ 	[LH_N]: 1462
//│ 	[LH_N]: 1464
//│ 	[LH_C a¹⁰ enumFromThenTo_lh_₁_₀(t²³, ((2 * t²³) - a¹⁰), b²)]: 1613
//│ 	[LH_N]: 1614
//│ 	[LH_C h²² take_lh_₂_₀((n⁷ - 1), t²⁶)]: 1697
//│ 	[LH_N]: 1698
//│ 	[LH_N]: 1700
//│ 	[LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷]: 2412
//│ case _lh_snd_arg1⁴ of {LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴ | _  => error⁰}: 2452 --->
//│ 	[LH_P2 _lh_listcomp_fun_ls_h⁵ 0]: 1347
//│ 	[LH_P2 _lh_algb2_LH_P2_0³ kjcurr³]: 1572
//│ case ls⁴⁰ of {LH_C h²⁸ t³⁴ => [LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)] | LH_N  => [LH_N]}: 2481 --->
//│ 	DeadCodeProd
//│ 	[LH_N]: 1300
//│ 	[LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr²] algb2_lh_₁_₃(_lh_algb2_arg1², _lh_algb2_LH_P2_1², kjcurr², _lh_algb2_LH_C_1²)]: 1330
//│ 	[LH_C [LH_P2 _lh_listcomp_fun_ls_h⁷ 0] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁷)]: 1762
//│ 	[LH_N]: 2345
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C 0 algb1_lh_₃_₁(_lh_algb_arg1⁴, let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁸))
//│ in _lh_listcomp_fun⁸(_lh_algb_arg2⁴))]: 1206 --->
//│ 	case ls²² of {LH_C h¹⁶ t¹⁹ => reverse_helper_lh_₄_₀(t¹⁹, let ty² = a⁹
//│ in let hy² = h¹⁶
//│ in (fun hx⁶ -> (fun tx⁶ -> let _lh_findk_LH_C_1⁴ = zip_lh_₂_₀(tx⁶, ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx⁶
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₂_₁((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₂_₂((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴))))))) | LH_N  => a⁹}: 1442
//│ [LH_C 0 algb1_lh_₃_₀(_lh_algb_arg1⁵, let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(_lh_algb_arg2⁵))]: 1360 --->
//│ 	case xs³ of {LH_C hx⁸ tx⁸ => ys³(hx⁸, tx⁸) | LH_N  => (fun _lh_findk_arg2¹⁷ -> (fun _lh_findk_arg1¹⁷ -> (fun _lh_findk_arg3¹⁷ -> _lh_findk_arg2¹⁷)))}: 1781
//│ [LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)]: 1546 --->
//│ 	case ls²² of {LH_C h¹⁶ t¹⁹ => reverse_helper_lh_₄_₀(t¹⁹, let ty² = a⁹
//│ in let hy² = h¹⁶
//│ in (fun hx⁶ -> (fun tx⁶ -> let _lh_findk_LH_C_1⁴ = zip_lh_₂_₀(tx⁶, ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx⁶
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₂_₁((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₂_₂((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴))))))) | LH_N  => a⁹}: 1442
//│ [LH_N]: 1547 --->
//│ 	case ls²² of {LH_C h¹⁶ t¹⁹ => reverse_helper_lh_₄_₀(t¹⁹, let ty² = a⁹
//│ in let hy² = h¹⁶
//│ in (fun hx⁶ -> (fun tx⁶ -> let _lh_findk_LH_C_1⁴ = zip_lh_₂_₀(tx⁶, ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx⁶
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₂_₁((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₂_₂((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴))))))) | LH_N  => a⁹}: 1442
//│ [LH_C h²¹ a¹¹]: 1675 --->
//│ 	case _lh_algb1_arg1³ of {LH_N  => map_lh_₁_₂(snd_lh_₁_₂, _lh_algb1_arg2⁵) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₃_₁(_lh_algb1_LH_C_1³, algb2_lh_₁_₂(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2⁵)) | _  => error⁰}: 1534
//│ [LH_C 0 algb1_lh_₂_₀(_lh_algb_arg1⁶, let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(_lh_algb_arg2⁶))]: 1724 --->
//│ 	case xs⁵ of {LH_C hx¹¹ tx¹¹ => ys⁵(hx¹¹, tx¹¹) | LH_N  => (fun _lh_findk_arg2²³ -> (fun _lh_findk_arg1²³ -> (fun _lh_findk_arg3²³ -> _lh_findk_arg2²³)))}: 2267
//│ [LH_N]: 2172 --->
//│ 	case _lh_algb1_arg1³ of {LH_N  => map_lh_₁_₂(snd_lh_₁_₂, _lh_algb1_arg2⁵) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₃_₁(_lh_algb1_LH_C_1³, algb2_lh_₁_₂(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2⁵)) | _  => error⁰}: 1534
//│ [LH_C 0 algb1_lh_₁_₀(_lh_algb_arg1⁷, let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> _lh_listcomp_fun_para⁷(_lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁵(_lh_algb_arg2⁷))]: 2467 --->
//│ 	case ls³⁴ of {LH_C h²⁵ t³¹ => reverse_helper_lh_₂_₀(t³¹, let ty³ = a¹⁵
//│ in let hy³ = h²⁵
//│ in (fun hx¹⁰ -> (fun tx¹⁰ -> let _lh_findk_LH_C_1⁶ = zip_lh_₁_₀(tx¹⁰, ty³)
//│ in let _lh_findk_LH_C_0³ = let _lh_findk_LH_P2_1³ = hy³
//│ in let _lh_findk_LH_P2_0³ = hx¹⁰
//│ in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg3²¹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²¹) then findk_lh_₁_₁((_lh_findk_arg1²¹ + 1), _lh_findk_arg1²¹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₁_₂((_lh_findk_arg1²¹ + 1), _lh_findk_arg2²¹, _lh_findk_arg3²¹, _lh_findk_LH_C_1⁷)))))
//│ in (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²², _lh_findk_arg2²², _lh_findk_arg3²²))))))) | LH_N  => a¹⁵}: 2254
//│ [LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)]: 2479 --->
//│ 	case ls³⁴ of {LH_C h²⁵ t³¹ => reverse_helper_lh_₂_₀(t³¹, let ty³ = a¹⁵
//│ in let hy³ = h²⁵
//│ in (fun hx¹⁰ -> (fun tx¹⁰ -> let _lh_findk_LH_C_1⁶ = zip_lh_₁_₀(tx¹⁰, ty³)
//│ in let _lh_findk_LH_C_0³ = let _lh_findk_LH_P2_1³ = hy³
//│ in let _lh_findk_LH_P2_0³ = hx¹⁰
//│ in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg3²¹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²¹) then findk_lh_₁_₁((_lh_findk_arg1²¹ + 1), _lh_findk_arg1²¹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₁_₂((_lh_findk_arg1²¹ + 1), _lh_findk_arg2²¹, _lh_findk_arg3²¹, _lh_findk_LH_C_1⁷)))))
//│ in (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²², _lh_findk_arg2²², _lh_findk_arg3²²))))))) | LH_N  => a¹⁵}: 2254
//│ [LH_N]: 2480 --->
//│ 	case ls³⁴ of {LH_C h²⁵ t³¹ => reverse_helper_lh_₂_₀(t³¹, let ty³ = a¹⁵
//│ in let hy³ = h²⁵
//│ in (fun hx¹⁰ -> (fun tx¹⁰ -> let _lh_findk_LH_C_1⁶ = zip_lh_₁_₀(tx¹⁰, ty³)
//│ in let _lh_findk_LH_C_0³ = let _lh_findk_LH_P2_1³ = hy³
//│ in let _lh_findk_LH_P2_0³ = hx¹⁰
//│ in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg3²¹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²¹) then findk_lh_₁_₁((_lh_findk_arg1²¹ + 1), _lh_findk_arg1²¹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₁_₂((_lh_findk_arg1²¹ + 1), _lh_findk_arg2²¹, _lh_findk_arg3²¹, _lh_findk_LH_C_1⁷)))))
//│ in (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²², _lh_findk_arg2²², _lh_findk_arg3²²))))))) | LH_N  => a¹⁵}: 2254
//│ ------------------
//│ case ls²² of {LH_C h¹⁶ t¹⁹ => reverse_helper_lh_₄_₀(t¹⁹, let ty² = a⁹
//│ in let hy² = h¹⁶
//│ in (fun hx⁶ -> (fun tx⁶ -> let _lh_findk_LH_C_1⁴ = zip_lh_₂_₀(tx⁶, ty²)
//│ in let _lh_findk_LH_C_0² = let _lh_findk_LH_P2_1² = hy²
//│ in let _lh_findk_LH_P2_0² = hx⁶
//│ in (fun _lh_findk_LH_C_1⁵ -> (fun _lh_findk_arg1¹³ -> (fun _lh_findk_arg2¹³ -> (fun _lh_findk_arg3¹³ -> if ((_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²) >= _lh_findk_arg3¹³) then findk_lh_₂_₁((_lh_findk_arg1¹³ + 1), _lh_findk_arg1¹³, (_lh_findk_LH_P2_0² + _lh_findk_LH_P2_1²), _lh_findk_LH_C_1⁵) else findk_lh_₂_₂((_lh_findk_arg1¹³ + 1), _lh_findk_arg2¹³, _lh_findk_arg3¹³, _lh_findk_LH_C_1⁵)))))
//│ in (fun _lh_findk_arg2¹⁴ -> (fun _lh_findk_arg1¹⁴ -> (fun _lh_findk_arg3¹⁴ -> _lh_findk_LH_C_0²(_lh_findk_LH_C_1⁴, _lh_findk_arg1¹⁴, _lh_findk_arg2¹⁴, _lh_findk_arg3¹⁴))))))) | LH_N  => a⁹}: 1442 --->
//│ 	[LH_C 0 algb1_lh_₃_₁(_lh_algb_arg1⁴, let _lh_listcomp_fun⁸ = (fun _lh_listcomp_fun_para⁴ -> _lh_listcomp_fun_para⁴(_lh_listcomp_fun⁸))
//│ in _lh_listcomp_fun⁸(_lh_algb_arg2⁴))]: 1206
//│ 	[LH_C f²(h¹⁹) map_lh_₁_₂(f², t²²)]: 1546
//│ 	[LH_N]: 1547
//│ case _lh_algb1_arg1³ of {LH_N  => map_lh_₁_₂(snd_lh_₁_₂, _lh_algb1_arg2⁵) | LH_C _lh_algb1_LH_C_0³ _lh_algb1_LH_C_1³ => algb1_lh_₃_₁(_lh_algb1_LH_C_1³, algb2_lh_₁_₂(_lh_algb1_LH_C_0³, 0, 0, _lh_algb1_arg2⁵)) | _  => error⁰}: 1534 --->
//│ 	[LH_C h²¹ a¹¹]: 1675
//│ 	[LH_N]: 2172
//│ case xs³ of {LH_C hx⁸ tx⁸ => ys³(hx⁸, tx⁸) | LH_N  => (fun _lh_findk_arg2¹⁷ -> (fun _lh_findk_arg1¹⁷ -> (fun _lh_findk_arg3¹⁷ -> _lh_findk_arg2¹⁷)))}: 1781 --->
//│ 	[LH_C 0 algb1_lh_₃_₀(_lh_algb_arg1⁵, let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁵)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁰(_lh_algb_arg2⁵))]: 1360
//│ case ls³⁴ of {LH_C h²⁵ t³¹ => reverse_helper_lh_₂_₀(t³¹, let ty³ = a¹⁵
//│ in let hy³ = h²⁵
//│ in (fun hx¹⁰ -> (fun tx¹⁰ -> let _lh_findk_LH_C_1⁶ = zip_lh_₁_₀(tx¹⁰, ty³)
//│ in let _lh_findk_LH_C_0³ = let _lh_findk_LH_P2_1³ = hy³
//│ in let _lh_findk_LH_P2_0³ = hx¹⁰
//│ in (fun _lh_findk_LH_C_1⁷ -> (fun _lh_findk_arg1²¹ -> (fun _lh_findk_arg2²¹ -> (fun _lh_findk_arg3²¹ -> if ((_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³) >= _lh_findk_arg3²¹) then findk_lh_₁_₁((_lh_findk_arg1²¹ + 1), _lh_findk_arg1²¹, (_lh_findk_LH_P2_0³ + _lh_findk_LH_P2_1³), _lh_findk_LH_C_1⁷) else findk_lh_₁_₂((_lh_findk_arg1²¹ + 1), _lh_findk_arg2²¹, _lh_findk_arg3²¹, _lh_findk_LH_C_1⁷)))))
//│ in (fun _lh_findk_arg2²² -> (fun _lh_findk_arg1²² -> (fun _lh_findk_arg3²² -> _lh_findk_LH_C_0³(_lh_findk_LH_C_1⁶, _lh_findk_arg1²², _lh_findk_arg2²², _lh_findk_arg3²²))))))) | LH_N  => a¹⁵}: 2254 --->
//│ 	[LH_C 0 algb1_lh_₁_₀(_lh_algb_arg1⁷, let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para⁷ -> _lh_listcomp_fun_para⁷(_lh_listcomp_fun¹⁵))
//│ in _lh_listcomp_fun¹⁵(_lh_algb_arg2⁷))]: 2467
//│ 	[LH_C f⁴(h²⁸) map_lh_₁_₃(f⁴, t³⁴)]: 2479
//│ 	[LH_N]: 2480
//│ case xs⁵ of {LH_C hx¹¹ tx¹¹ => ys⁵(hx¹¹, tx¹¹) | LH_N  => (fun _lh_findk_arg2²³ -> (fun _lh_findk_arg1²³ -> (fun _lh_findk_arg3²³ -> _lh_findk_arg2²³)))}: 2267 --->
//│ 	[LH_C 0 algb1_lh_₂_₀(_lh_algb_arg1⁶, let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹¹(_lh_algb_arg2⁶))]: 1724
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testLCSS_nofib_lh_₁_₀(primId⁰(0))
//│ def testLCSS_nofib_lh_₁_₀(_lh_testLCSS_nofib_arg1²) = 
//│ 	lcssMain_lh_₁_₀(1, 2, 60, 30, 31, 90)
//│ 	where
//│ 	def lcssMain_lh_₁_₀(_lh_lcssMain_arg1², _lh_lcssMain_arg2², _lh_lcssMain_arg3², _lh_lcssMain_arg4², _lh_lcssMain_arg5², _lh_lcssMain_arg6²) = 
//│ 		lcss_lh_₁_₀(enumFromThenTo_lh_₁_₀(_lh_lcssMain_arg1², _lh_lcssMain_arg2², _lh_lcssMain_arg3²), enumFromThenTo_lh_₂_₀(_lh_lcssMain_arg4², _lh_lcssMain_arg5², _lh_lcssMain_arg6²))
//│ 		where
//│ 		def enumFromThenTo_lh_₁_₀(a¹⁸, t³⁶, b⁴) = 
//│ 			if (a¹⁸ <= b⁴) then [LH_C a¹⁸ enumFromThenTo_lh_₁_₀(t³⁶, ((2 * t³⁶) - a¹⁸), b⁴)] else [LH_N]
//│ 		def enumFromThenTo_lh_₂_₀(a²⁷, t⁴¹, b⁵) = 
//│ 			if (a²⁷ <= b⁵) then [LH_C a²⁷ enumFromThenTo_lh_₂_₀(t⁴¹, ((2 * t⁴¹) - a²⁷), b⁵)] else [LH_N]
//│ 		def lcss_lh_₁_₀(_lh_lcss_arg1², _lh_lcss_arg2²) = 
//│ 			algc_lh_₁_₀(length_lh_₂_₀(_lh_lcss_arg1²), length_lh_₁_₀(_lh_lcss_arg2²), _lh_lcss_arg1², _lh_lcss_arg2², [LH_N])
//│ 			where
//│ 			def algc_lh_₁_₀(_lh_algc_arg1², _lh_algc_arg2², _lh_algc_arg3², _lh_algc_arg4²) = 
//│ 				case _lh_algc_arg4² of {
//│ 					LH_N  => (fun x⁴ -> x⁴)
//│ 					| _  => case _lh_algc_arg3² of {
//│ 						LH_C _lh_algc_LH_C_0¹ _lh_algc_LH_C_1¹ => case _lh_algc_LH_C_1¹ of {
//│ 							LH_N  => if inList_lh_₁_₀(_lh_algc_LH_C_0¹, _lh_algc_arg4²) then (fun t³⁹ -> [LH_C _lh_algc_LH_C_0¹ t³⁹]) else (fun x⁵ -> x⁵)
//│ 							| _  => 
//│ 								let m2⁴ = div⁰(_lh_algc_arg1², 2)
//│ 								in let xs1⁴ = take_lh_₃_₀(m2⁴, _lh_algc_arg3²)
//│ 								in let xs2⁴ = drop_lh_₁_₀(m2⁴, _lh_algc_arg3²)
//│ 								in let l1⁴ = algb_lh_₂_₀(xs1⁴, _lh_algc_arg4²)
//│ 								in let l2⁴ = reverse_lh_₄_₀(algb_lh_₄_₀(reverse_lh_₆_₀(xs2⁴), reverse_lh_₁_₀(_lh_algc_arg4²)))
//│ 								in let k⁴ = findk_lh_₂_₀(0, 0, (0 - 1), zip_lh_₂_₁(l1⁴, l2⁴))
//│ 								in (fun _lh_funcomp_x⁴ -> algc_lh_₁_₀(m2⁴, k⁴, xs1⁴, take_lh_₁_₀(k⁴, _lh_algc_arg4²), algc_lh_₁_₀((_lh_algc_arg1² - m2⁴), (_lh_algc_arg2² - k⁴), xs2⁴, drop_lh_₂_₀(k⁴, _lh_algc_arg4²), _lh_funcomp_x⁴)))}
//│ 						| _  => 
//│ 							let m2⁵ = div⁰(_lh_algc_arg1², 2)
//│ 							in let xs1⁵ = take_lh_₂_₀(m2⁵, _lh_algc_arg3²)
//│ 							in let xs2⁵ = drop_lh_₄_₀(m2⁵, _lh_algc_arg3²)
//│ 							in let l1⁵ = algb_lh_₃_₀(xs1⁵, _lh_algc_arg4²)
//│ 							in let l2⁵ = reverse_lh_₂_₀(algb_lh_₁_₀(reverse_lh_₅_₀(xs2⁵), reverse_lh_₃_₀(_lh_algc_arg4²)))
//│ 							in let k⁵ = findk_lh_₁_₀(0, 0, (0 - 1), zip_lh_₁_₁(l1⁵, l2⁵))
//│ 							in (fun _lh_funcomp_x⁵ -> algc_lh_₁_₀(m2⁵, k⁵, xs1⁵, take_lh_₄_₀(k⁵, _lh_algc_arg4²), algc_lh_₁_₀((_lh_algc_arg1² - m2⁵), (_lh_algc_arg2² - k⁵), xs2⁵, drop_lh_₃_₀(k⁵, _lh_algc_arg4²), _lh_funcomp_x⁵)))}}
//│ 				where
//│ 				def algb_lh_₁_₀(_lh_algb_arg1⁹, _lh_algb_arg2⁹) = 
//│ 					let t³⁷ = algb1_lh_₁_₀(_lh_algb_arg1⁹, 
//│ 						let _lh_listcomp_fun¹⁸ = (fun _lh_listcomp_fun_para⁹ -> _lh_listcomp_fun_para⁹(_lh_listcomp_fun¹⁸))
//│ 						in _lh_listcomp_fun¹⁸(_lh_algb_arg2⁹))
//│ 					in let h³⁰ = 0
//│ 					in (fun a²¹ -> reverse_helper_lh_₂_₀(t³⁷, 
//│ 						let ty⁵ = a²¹
//│ 						in let hy⁵ = h³⁰
//│ 						in (fun hx¹⁶ -> (fun tx¹⁶ -> 
//│ 							let _lh_findk_LH_C_1¹⁰ = zip_lh_₁_₀(tx¹⁶, ty⁵)
//│ 							in let _lh_findk_LH_C_0⁵ = 	
//│ 								let _lh_findk_LH_P2_1⁵ = hy⁵
//│ 								in let _lh_findk_LH_P2_0⁵ = hx¹⁶
//│ 								in (fun _lh_findk_LH_C_1¹¹ -> (fun _lh_findk_arg1³² -> (fun _lh_findk_arg2³² -> (fun _lh_findk_arg3³² -> if ((_lh_findk_LH_P2_0⁵ + _lh_findk_LH_P2_1⁵) >= _lh_findk_arg3³²) then findk_lh_₁_₁((_lh_findk_arg1³² + 1), _lh_findk_arg1³², (_lh_findk_LH_P2_0⁵ + _lh_findk_LH_P2_1⁵), _lh_findk_LH_C_1¹¹) else findk_lh_₁_₂((_lh_findk_arg1³² + 1), _lh_findk_arg2³², _lh_findk_arg3³², _lh_findk_LH_C_1¹¹)))))
//│ 							in (fun _lh_findk_arg2³³ -> (fun _lh_findk_arg1³³ -> (fun _lh_findk_arg3³³ -> _lh_findk_LH_C_0⁵(_lh_findk_LH_C_1¹⁰, _lh_findk_arg1³³, _lh_findk_arg2³³, _lh_findk_arg3³³))))))))
//│ 					where
//│ 					def algb1_lh_₁_₀(_lh_algb1_arg1¹¹, _lh_algb1_arg2¹⁸) = 
//│ 						_lh_algb1_arg1¹¹(_lh_algb1_arg2¹⁸)
//│ 				def algb_lh_₂_₀(_lh_algb_arg1¹¹, _lh_algb_arg2¹¹) = 
//│ 					let tx²¹ = algb1_lh_₂_₀(_lh_algb_arg1¹¹, 
//│ 						let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 							LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁶ 0] _lh_listcomp_fun²²(_lh_listcomp_fun_ls_t⁶)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun²²(_lh_algb_arg2¹¹))
//│ 					in let hx²¹ = 0
//│ 					in (fun ys¹¹ -> ys¹¹(hx²¹, tx²¹))
//│ 					where
//│ 					def algb1_lh_₂_₀(_lh_algb1_arg1⁹, _lh_algb1_arg2¹³) = 
//│ 						case _lh_algb1_arg1⁹ of {
//│ 							LH_N  => map_lh_₁_₀(snd_lh_₁_₀, _lh_algb1_arg2¹³)
//│ 							| LH_C _lh_algb1_LH_C_0⁴ _lh_algb1_LH_C_1⁴ => algb1_lh_₂_₀(_lh_algb1_LH_C_1⁴, algb2_lh_₁_₀(_lh_algb1_LH_C_0⁴, 0, 0, _lh_algb1_arg2¹³))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₁_₀(_lh_algb2_arg1⁷, _lh_algb2_arg2⁷, _lh_algb2_arg3⁷, _lh_algb2_arg4⁷) = 
//│ 							case _lh_algb2_arg4⁷ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0⁴ _lh_algb2_LH_C_1⁴ => case _lh_algb2_LH_C_0⁴ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0⁴ _lh_algb2_LH_P2_1⁴ => 
//│ 										let kjcurr⁷ = if (_lh_algb2_arg1⁷ == _lh_algb2_LH_P2_0⁴) then (_lh_algb2_arg2⁷ + 1) else max_lh_₁_₀(_lh_algb2_arg3⁷, _lh_algb2_LH_P2_1⁴)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0⁴ kjcurr⁷] algb2_lh_₁_₀(_lh_algb2_arg1⁷, _lh_algb2_LH_P2_1⁴, kjcurr⁷, _lh_algb2_LH_C_1⁴)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁_₀(_lh_max_arg1⁶, _lh_max_arg2⁶) = 
//│ 								if (_lh_max_arg1⁶ > _lh_max_arg2⁶) then _lh_max_arg1⁶ else _lh_max_arg2⁶
//│ 						def map_lh_₁_₀(f⁶, ls⁴⁹) = 
//│ 							case ls⁴⁹ of {
//│ 								LH_C h²⁷ t³³ => [LH_C f⁶(h²⁷) map_lh_₁_₀(f⁶, t³³)]
//│ 								| LH_N  => [LH_N]}
//│ 						def snd_lh_₁_₀(_lh_snd_arg1⁶) = 
//│ 							case _lh_snd_arg1⁶ of {
//│ 								LH_P2 _lh_snd_LH_P2_0² _lh_snd_LH_P2_1² => _lh_snd_LH_P2_1²
//│ 								| _  => error⁰}
//│ 				def algb_lh_₃_₀(_lh_algb_arg1⁸, _lh_algb_arg2⁸) = 
//│ 					let tx¹⁴ = algb1_lh_₃_₀(_lh_algb_arg1⁸, 
//│ 						let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 							LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁵ 0] _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t⁵)]
//│ 							| LH_N  => [LH_N]})
//│ 						in _lh_listcomp_fun¹⁶(_lh_algb_arg2⁸))
//│ 					in let hx¹⁴ = 0
//│ 					in (fun ys⁶ -> ys⁶(hx¹⁴, tx¹⁴))
//│ 					where
//│ 					def algb1_lh_₃_₀(_lh_algb1_arg1¹², _lh_algb1_arg2¹⁹) = 
//│ 						case _lh_algb1_arg1¹² of {
//│ 							LH_N  => map_lh_₁_₁(snd_lh_₁_₁, _lh_algb1_arg2¹⁹)
//│ 							| LH_C _lh_algb1_LH_C_0⁶ _lh_algb1_LH_C_1⁶ => algb1_lh_₃_₀(_lh_algb1_LH_C_1⁶, algb2_lh_₁_₁(_lh_algb1_LH_C_0⁶, 0, 0, _lh_algb1_arg2¹⁹))
//│ 							| _  => error⁰}
//│ 						where
//│ 						def algb2_lh_₁_₁(_lh_algb2_arg1⁸, _lh_algb2_arg2⁸, _lh_algb2_arg3⁸, _lh_algb2_arg4⁸) = 
//│ 							case _lh_algb2_arg4⁸ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0³ _lh_algb2_LH_C_1³ => case _lh_algb2_LH_C_0³ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0³ _lh_algb2_LH_P2_1³ => 
//│ 										let kjcurr⁸ = if (_lh_algb2_arg1⁸ == _lh_algb2_LH_P2_0³) then (_lh_algb2_arg2⁸ + 1) else max_lh_₁_₁(_lh_algb2_arg3⁸, _lh_algb2_LH_P2_1³)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0³ kjcurr⁸] algb2_lh_₁_₁(_lh_algb2_arg1⁸, _lh_algb2_LH_P2_1³, kjcurr⁸, _lh_algb2_LH_C_1³)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁_₁(_lh_max_arg1⁸, _lh_max_arg2⁸) = 
//│ 								if (_lh_max_arg1⁸ > _lh_max_arg2⁸) then _lh_max_arg1⁸ else _lh_max_arg2⁸
//│ 						def map_lh_₁_₁(f⁸, ls⁵⁷) = 
//│ 							case ls⁵⁷ of {
//│ 								LH_C h¹⁵ t¹⁸ => [LH_C f⁸(h¹⁵) map_lh_₁_₁(f⁸, t¹⁸)]
//│ 								| LH_N  => [LH_N]}
//│ 						def snd_lh_₁_₁(_lh_snd_arg1⁷) = 
//│ 							case _lh_snd_arg1⁷ of {
//│ 								LH_P2 _lh_snd_LH_P2_0⁴ _lh_snd_LH_P2_1⁴ => _lh_snd_LH_P2_1⁴
//│ 								| _  => error⁰}
//│ 				def algb_lh_₄_₀(_lh_algb_arg1¹⁰, _lh_algb_arg2¹⁰) = 
//│ 					let t³⁸ = algb1_lh_₃_₁(_lh_algb_arg1¹⁰, 
//│ 						let _lh_listcomp_fun²⁰ = (fun _lh_listcomp_fun_para¹⁰ -> _lh_listcomp_fun_para¹⁰(_lh_listcomp_fun²⁰))
//│ 						in _lh_listcomp_fun²⁰(_lh_algb_arg2¹⁰))
//│ 					in let h³¹ = 0
//│ 					in (fun a²³ -> reverse_helper_lh_₄_₀(t³⁸, 
//│ 						let ty⁶ = a²³
//│ 						in let hy⁶ = h³¹
//│ 						in (fun hx¹⁷ -> (fun tx¹⁷ -> 
//│ 							let _lh_findk_LH_C_1¹² = zip_lh_₂_₀(tx¹⁷, ty⁶)
//│ 							in let _lh_findk_LH_C_0⁶ = 	
//│ 								let _lh_findk_LH_P2_1⁶ = hy⁶
//│ 								in let _lh_findk_LH_P2_0⁶ = hx¹⁷
//│ 								in (fun _lh_findk_LH_C_1¹³ -> (fun _lh_findk_arg1³⁶ -> (fun _lh_findk_arg2³⁶ -> (fun _lh_findk_arg3³⁶ -> if ((_lh_findk_LH_P2_0⁶ + _lh_findk_LH_P2_1⁶) >= _lh_findk_arg3³⁶) then findk_lh_₂_₁((_lh_findk_arg1³⁶ + 1), _lh_findk_arg1³⁶, (_lh_findk_LH_P2_0⁶ + _lh_findk_LH_P2_1⁶), _lh_findk_LH_C_1¹³) else findk_lh_₂_₂((_lh_findk_arg1³⁶ + 1), _lh_findk_arg2³⁶, _lh_findk_arg3³⁶, _lh_findk_LH_C_1¹³)))))
//│ 							in (fun _lh_findk_arg2³⁷ -> (fun _lh_findk_arg1³⁷ -> (fun _lh_findk_arg3³⁷ -> _lh_findk_LH_C_0⁶(_lh_findk_LH_C_1¹², _lh_findk_arg1³⁷, _lh_findk_arg2³⁷, _lh_findk_arg3³⁷))))))))
//│ 					where
//│ 					def algb1_lh_₃_₁(_lh_algb1_arg1⁸, _lh_algb1_arg2¹²) = 
//│ 						_lh_algb1_arg1⁸(_lh_algb1_arg2¹²)
//│ 						where
//│ 						def algb2_lh_₁_₂(_lh_algb2_arg1⁶, _lh_algb2_arg2⁶, _lh_algb2_arg3⁶, _lh_algb2_arg4⁶) = 
//│ 							case _lh_algb2_arg4⁶ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0¹ _lh_algb2_LH_C_1¹ => case _lh_algb2_LH_C_0¹ of {
//│ 									LH_P2 _lh_algb2_LH_P2_0¹ _lh_algb2_LH_P2_1¹ => 
//│ 										let kjcurr⁶ = if (_lh_algb2_arg1⁶ == _lh_algb2_LH_P2_0¹) then (_lh_algb2_arg2⁶ + 1) else max_lh_₁_₂(_lh_algb2_arg3⁶, _lh_algb2_LH_P2_1¹)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0¹ kjcurr⁶] algb2_lh_₁_₂(_lh_algb2_arg1⁶, _lh_algb2_LH_P2_1¹, kjcurr⁶, _lh_algb2_LH_C_1¹)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁_₂(_lh_max_arg1⁵, _lh_max_arg2⁵) = 
//│ 								if (_lh_max_arg1⁵ > _lh_max_arg2⁵) then _lh_max_arg1⁵ else _lh_max_arg2⁵
//│ 						def map_lh_₁_₂(f⁵, ls⁴¹) = 
//│ 							case ls⁴¹ of {
//│ 								LH_C h¹⁹ t²² => 
//│ 									let t³⁵ = map_lh_₁_₂(f⁵, t²²)
//│ 									in let h²⁹ = f⁵(h¹⁹)
//│ 									in (fun a¹⁶ -> reverse_helper_lh_₄_₀(t³⁵, 
//│ 										let ty⁴ = a¹⁶
//│ 										in let hy⁴ = h²⁹
//│ 										in (fun hx¹⁵ -> (fun tx¹⁵ -> 
//│ 											let _lh_findk_LH_C_1⁸ = zip_lh_₂_₀(tx¹⁵, ty⁴)
//│ 											in let _lh_findk_LH_C_0⁴ = 	
//│ 												let _lh_findk_LH_P2_1⁴ = hy⁴
//│ 												in let _lh_findk_LH_P2_0⁴ = hx¹⁵
//│ 												in (fun _lh_findk_LH_C_1⁹ -> (fun _lh_findk_arg1²⁷ -> (fun _lh_findk_arg2²⁷ -> (fun _lh_findk_arg3²⁷ -> if ((_lh_findk_LH_P2_0⁴ + _lh_findk_LH_P2_1⁴) >= _lh_findk_arg3²⁷) then findk_lh_₂_₁((_lh_findk_arg1²⁷ + 1), _lh_findk_arg1²⁷, (_lh_findk_LH_P2_0⁴ + _lh_findk_LH_P2_1⁴), _lh_findk_LH_C_1⁹) else findk_lh_₂_₂((_lh_findk_arg1²⁷ + 1), _lh_findk_arg2²⁷, _lh_findk_arg3²⁷, _lh_findk_LH_C_1⁹)))))
//│ 											in (fun _lh_findk_arg2²⁸ -> (fun _lh_findk_arg1²⁸ -> (fun _lh_findk_arg3²⁸ -> _lh_findk_LH_C_0⁴(_lh_findk_LH_C_1⁸, _lh_findk_arg1²⁸, _lh_findk_arg2²⁸, _lh_findk_arg3²⁸))))))))
//│ 								| LH_N  => (fun a¹⁷ -> a¹⁷)}
//│ 						def snd_lh_₁_₂(_lh_snd_arg1⁸) = 
//│ 							case _lh_snd_arg1⁸ of {
//│ 								LH_P2 _lh_snd_LH_P2_0¹ _lh_snd_LH_P2_1¹ => _lh_snd_LH_P2_1¹
//│ 								| _  => error⁰}
//│ 				def drop_lh_₁_₀(_lh_drop_arg1⁹, _lh_drop_arg2⁹) = 
//│ 					case _lh_drop_arg2⁹ of {
//│ 						LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴ => if (_lh_drop_arg1⁹ == 0) then [LH_C _lh_drop_LH_C_0⁴ _lh_drop_LH_C_1⁴] else drop_lh_₁_₀((_lh_drop_arg1⁹ - 1), _lh_drop_LH_C_1⁴)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₂_₀(_lh_drop_arg1¹⁰, _lh_drop_arg2¹⁰) = 
//│ 					case _lh_drop_arg2¹⁰ of {
//│ 						LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵ => if (_lh_drop_arg1¹⁰ == 0) then [LH_C _lh_drop_LH_C_0⁵ _lh_drop_LH_C_1⁵] else drop_lh_₂_₀((_lh_drop_arg1¹⁰ - 1), _lh_drop_LH_C_1⁵)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₃_₀(_lh_drop_arg1⁸, _lh_drop_arg2⁸) = 
//│ 					case _lh_drop_arg2⁸ of {
//│ 						LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶ => if (_lh_drop_arg1⁸ == 0) then [LH_C _lh_drop_LH_C_0⁶ _lh_drop_LH_C_1⁶] else drop_lh_₃_₀((_lh_drop_arg1⁸ - 1), _lh_drop_LH_C_1⁶)
//│ 						| _  => error⁰}
//│ 				def drop_lh_₄_₀(_lh_drop_arg1¹¹, _lh_drop_arg2¹¹) = 
//│ 					case _lh_drop_arg2¹¹ of {
//│ 						LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷ => if (_lh_drop_arg1¹¹ == 0) then [LH_C _lh_drop_LH_C_0⁷ _lh_drop_LH_C_1⁷] else drop_lh_₄_₀((_lh_drop_arg1¹¹ - 1), _lh_drop_LH_C_1⁷)
//│ 						| _  => error⁰}
//│ 				def findk_lh_₁_₀(_lh_findk_arg1²⁶, _lh_findk_arg2²⁶, _lh_findk_arg3²⁶, _lh_findk_arg4⁸) = 
//│ 					_lh_findk_arg4⁸(_lh_findk_arg2²⁶, _lh_findk_arg1²⁶, _lh_findk_arg3²⁶)
//│ 				def findk_lh_₂_₀(_lh_findk_arg1³⁵, _lh_findk_arg2³⁵, _lh_findk_arg3³⁵, _lh_findk_arg4¹²) = 
//│ 					_lh_findk_arg4¹²(_lh_findk_arg2³⁵, _lh_findk_arg1³⁵, _lh_findk_arg3³⁵)
//│ 				def inList_lh_₁_₀(_lh_inList_arg1², _lh_inList_arg2²) = 
//│ 					case _lh_inList_arg2² of {
//│ 						LH_C _lh_inList_LH_C_0¹ _lh_inList_LH_C_1¹ => if (_lh_inList_arg1² == _lh_inList_LH_C_0¹) then [True] else inList_lh_₁_₀(_lh_inList_arg1², _lh_inList_LH_C_1¹)
//│ 						| LH_N  => [False]
//│ 						| _  => error⁰}
//│ 				def reverse_lh_₁_₀(ls⁴³) = 
//│ 					reverse_helper_lh_₁_₀(ls⁴³, (fun _lh_listcomp_fun¹⁷ -> [LH_N]))
//│ 					where
//│ 					def reverse_helper_lh_₁_₀(ls⁶², a²⁹) = 
//│ 						case ls⁶² of {
//│ 							LH_C h¹⁴ t¹⁷ => reverse_helper_lh_₁_₀(t¹⁷, 
//│ 								let _lh_listcomp_fun_ls_t⁹ = a²⁹
//│ 								in let _lh_listcomp_fun_ls_h⁹ = h¹⁴
//│ 								in (fun _lh_listcomp_fun²³ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁹ 0] _lh_listcomp_fun²³(_lh_listcomp_fun_ls_t⁹)]))
//│ 							| LH_N  => a²⁹}
//│ 				def reverse_lh_₂_₀(ls⁵⁶) = 
//│ 					reverse_helper_lh_₂_₀(ls⁵⁶, (fun hx¹⁹ -> (fun tx¹⁹ -> (fun _lh_findk_arg2⁴⁰ -> (fun _lh_findk_arg1⁴⁰ -> (fun _lh_findk_arg3⁴⁰ -> _lh_findk_arg2⁴⁰))))))
//│ 					where
//│ 					def reverse_helper_lh_₂_₀(ls⁵⁹, a²⁶) = 
//│ 						ls⁵⁹(a²⁶)
//│ 						where
//│ 						def findk_lh_₁_₁(_lh_findk_arg1³¹, _lh_findk_arg2³¹, _lh_findk_arg3³¹, _lh_findk_arg4¹⁰) = 
//│ 							_lh_findk_arg4¹⁰(_lh_findk_arg2³¹, _lh_findk_arg1³¹, _lh_findk_arg3³¹)
//│ 						def findk_lh_₁_₂(_lh_findk_arg1⁴³, _lh_findk_arg2⁴³, _lh_findk_arg3⁴³, _lh_findk_arg4¹³) = 
//│ 							_lh_findk_arg4¹³(_lh_findk_arg2⁴³, _lh_findk_arg1⁴³, _lh_findk_arg3⁴³)
//│ 						def zip_lh_₁_₀(xs⁶, ys⁷) = 
//│ 							case xs⁶ of {
//│ 								LH_C hx⁷ tx⁷ => ys⁷(hx⁷, tx⁷)
//│ 								| LH_N  => (fun _lh_findk_arg2²⁹ -> (fun _lh_findk_arg1²⁹ -> (fun _lh_findk_arg3²⁹ -> _lh_findk_arg2²⁹)))}
//│ 				def reverse_lh_₃_₀(ls⁵³) = 
//│ 					reverse_helper_lh_₃_₀(ls⁵³, (fun _lh_listcomp_fun²¹ -> [LH_N]))
//│ 					where
//│ 					def reverse_helper_lh_₃_₀(ls⁴⁸, a²²) = 
//│ 						case ls⁴⁸ of {
//│ 							LH_C h²³ t²⁷ => reverse_helper_lh_₃_₀(t²⁷, 
//│ 								let _lh_listcomp_fun_ls_t⁸ = a²²
//│ 								in let _lh_listcomp_fun_ls_h⁸ = h²³
//│ 								in (fun _lh_listcomp_fun¹⁹ -> [LH_C [LH_P2 _lh_listcomp_fun_ls_h⁸ 0] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t⁸)]))
//│ 							| LH_N  => a²²}
//│ 				def reverse_lh_₄_₀(ls⁶⁰) = 
//│ 					reverse_helper_lh_₄_₀(ls⁶⁰, (fun hx²⁰ -> (fun tx²⁰ -> (fun _lh_findk_arg2⁴² -> (fun _lh_findk_arg1⁴² -> (fun _lh_findk_arg3⁴² -> _lh_findk_arg2⁴²))))))
//│ 					where
//│ 					def reverse_helper_lh_₄_₀(ls⁴⁵, a²⁰) = 
//│ 						ls⁴⁵(a²⁰)
//│ 						where
//│ 						def findk_lh_₂_₁(_lh_findk_arg1³⁴, _lh_findk_arg2³⁴, _lh_findk_arg3³⁴, _lh_findk_arg4¹¹) = 
//│ 							_lh_findk_arg4¹¹(_lh_findk_arg2³⁴, _lh_findk_arg1³⁴, _lh_findk_arg3³⁴)
//│ 						def findk_lh_₂_₂(_lh_findk_arg1³⁰, _lh_findk_arg2³⁰, _lh_findk_arg3³⁰, _lh_findk_arg4⁹) = 
//│ 							_lh_findk_arg4⁹(_lh_findk_arg2³⁰, _lh_findk_arg1³⁰, _lh_findk_arg3³⁰)
//│ 						def zip_lh_₂_₀(xs⁹, ys¹⁰) = 
//│ 							case xs⁹ of {
//│ 								LH_C hx⁹ tx⁹ => ys¹⁰(hx⁹, tx⁹)
//│ 								| LH_N  => (fun _lh_findk_arg2⁴¹ -> (fun _lh_findk_arg1⁴¹ -> (fun _lh_findk_arg3⁴¹ -> _lh_findk_arg2⁴¹)))}
//│ 				def reverse_lh_₅_₀(ls⁴²) = 
//│ 					reverse_helper_lh_₅_₀(ls⁴², (fun _lh_algb1_arg2¹⁴ -> map_lh_₁_₃(snd_lh_₁_₃, _lh_algb1_arg2¹⁴)))
//│ 					where
//│ 					def map_lh_₁_₃(f⁷, ls⁵⁴) = 
//│ 						case ls⁵⁴ of {
//│ 							LH_C h²⁸ t³⁴ => 
//│ 								let t⁴⁰ = map_lh_₁_₃(f⁷, t³⁴)
//│ 								in let h³² = f⁷(h²⁸)
//│ 								in (fun a²⁴ -> reverse_helper_lh_₂_₀(t⁴⁰, 
//│ 									let ty⁷ = a²⁴
//│ 									in let hy⁷ = h³²
//│ 									in (fun hx¹⁸ -> (fun tx¹⁸ -> 
//│ 										let _lh_findk_LH_C_1¹⁴ = zip_lh_₁_₀(tx¹⁸, ty⁷)
//│ 										in let _lh_findk_LH_C_0⁷ = 	
//│ 											let _lh_findk_LH_P2_1⁷ = hy⁷
//│ 											in let _lh_findk_LH_P2_0⁷ = hx¹⁸
//│ 											in (fun _lh_findk_LH_C_1¹⁵ -> (fun _lh_findk_arg1³⁸ -> (fun _lh_findk_arg2³⁸ -> (fun _lh_findk_arg3³⁸ -> if ((_lh_findk_LH_P2_0⁷ + _lh_findk_LH_P2_1⁷) >= _lh_findk_arg3³⁸) then findk_lh_₁_₁((_lh_findk_arg1³⁸ + 1), _lh_findk_arg1³⁸, (_lh_findk_LH_P2_0⁷ + _lh_findk_LH_P2_1⁷), _lh_findk_LH_C_1¹⁵) else findk_lh_₁_₂((_lh_findk_arg1³⁸ + 1), _lh_findk_arg2³⁸, _lh_findk_arg3³⁸, _lh_findk_LH_C_1¹⁵)))))
//│ 										in (fun _lh_findk_arg2³⁹ -> (fun _lh_findk_arg1³⁹ -> (fun _lh_findk_arg3³⁹ -> _lh_findk_LH_C_0⁷(_lh_findk_LH_C_1¹⁴, _lh_findk_arg1³⁹, _lh_findk_arg2³⁹, _lh_findk_arg3³⁹))))))))
//│ 							| LH_N  => (fun a²⁵ -> a²⁵)}
//│ 					def reverse_helper_lh_₅_₀(ls⁴⁴, a¹⁹) = 
//│ 						case ls⁴⁴ of {
//│ 							LH_C h²⁴ t²⁹ => reverse_helper_lh_₅_₀(t²⁹, 
//│ 								let _lh_algb1_LH_C_1⁷ = a¹⁹
//│ 								in let _lh_algb1_LH_C_0⁷ = h²⁴
//│ 								in (fun _lh_algb1_arg2¹⁵ -> algb1_lh_₁_₁(_lh_algb1_LH_C_1⁷, algb2_lh_₁_₃(_lh_algb1_LH_C_0⁷, 0, 0, _lh_algb1_arg2¹⁵))))
//│ 							| LH_N  => a¹⁹}
//│ 						where
//│ 						def algb1_lh_₁_₁(_lh_algb1_arg1¹⁰, _lh_algb1_arg2¹⁶) = 
//│ 							_lh_algb1_arg1¹⁰(_lh_algb1_arg2¹⁶)
//│ 						def algb2_lh_₁_₃(_lh_algb2_arg1⁵, _lh_algb2_arg2⁵, _lh_algb2_arg3⁵, _lh_algb2_arg4⁵) = 
//│ 							case _lh_algb2_arg4⁵ of {
//│ 								LH_N  => [LH_N]
//│ 								| LH_C _lh_algb2_LH_C_0² _lh_algb2_LH_C_1² => case _lh_algb2_LH_C_0² of {
//│ 									LH_P2 _lh_algb2_LH_P2_0² _lh_algb2_LH_P2_1² => 
//│ 										let kjcurr⁵ = if (_lh_algb2_arg1⁵ == _lh_algb2_LH_P2_0²) then (_lh_algb2_arg2⁵ + 1) else max_lh_₁_₃(_lh_algb2_arg3⁵, _lh_algb2_LH_P2_1²)
//│ 										in [LH_C [LH_P2 _lh_algb2_LH_P2_0² kjcurr⁵] algb2_lh_₁_₃(_lh_algb2_arg1⁵, _lh_algb2_LH_P2_1², kjcurr⁵, _lh_algb2_LH_C_1²)]
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							where
//│ 							def max_lh_₁_₃(_lh_max_arg1⁷, _lh_max_arg2⁷) = 
//│ 								if (_lh_max_arg1⁷ > _lh_max_arg2⁷) then _lh_max_arg1⁷ else _lh_max_arg2⁷
//│ 					def snd_lh_₁_₃(_lh_snd_arg1⁵) = 
//│ 						case _lh_snd_arg1⁵ of {
//│ 							LH_P2 _lh_snd_LH_P2_0³ _lh_snd_LH_P2_1³ => _lh_snd_LH_P2_1³
//│ 							| _  => error⁰}
//│ 				def reverse_lh_₆_₀(ls⁵⁵) = 
//│ 					reverse_helper_lh_₆_₀(ls⁵⁵, (fun _lh_algb1_arg2¹⁷ -> map_lh_₁_₂(snd_lh_₁_₂, _lh_algb1_arg2¹⁷)))
//│ 					where
//│ 					def reverse_helper_lh_₆_₀(ls⁶¹, a²⁸) = 
//│ 						case ls⁶¹ of {
//│ 							LH_C h²¹ t²⁵ => reverse_helper_lh_₆_₀(t²⁵, 
//│ 								let _lh_algb1_LH_C_1⁸ = a²⁸
//│ 								in let _lh_algb1_LH_C_0⁸ = h²¹
//│ 								in (fun _lh_algb1_arg2²⁰ -> algb1_lh_₃_₁(_lh_algb1_LH_C_1⁸, algb2_lh_₁_₂(_lh_algb1_LH_C_0⁸, 0, 0, _lh_algb1_arg2²⁰))))
//│ 							| LH_N  => a²⁸}
//│ 				def take_lh_₁_₀(n⁹, ls⁵¹) = 
//│ 					if (n⁹ > 0) then case ls⁵¹ of {
//│ 						LH_C h¹³ t¹⁶ => [LH_C h¹³ take_lh_₁_₀((n⁹ - 1), t¹⁶)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₂_₀(n¹⁰, ls⁵²) = 
//│ 					if (n¹⁰ > 0) then case ls⁵² of {
//│ 						LH_C h²² t²⁶ => [LH_C h²² take_lh_₂_₀((n¹⁰ - 1), t²⁶)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₃_₀(n¹¹, ls⁵⁸) = 
//│ 					if (n¹¹ > 0) then case ls⁵⁸ of {
//│ 						LH_C h¹⁷ t²⁰ => [LH_C h¹⁷ take_lh_₃_₀((n¹¹ - 1), t²⁰)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def take_lh_₄_₀(n⁸, ls⁴⁶) = 
//│ 					if (n⁸ > 0) then case ls⁴⁶ of {
//│ 						LH_C h¹⁸ t²¹ => [LH_C h¹⁸ take_lh_₄_₀((n⁸ - 1), t²¹)]
//│ 						| LH_N  => [LH_N]} else [LH_N]
//│ 				def zip_lh_₁_₁(xs⁸, ys⁹) = 
//│ 					xs⁸(ys⁹)
//│ 				def zip_lh_₂_₁(xs⁷, ys⁸) = 
//│ 					xs⁷(ys⁸)
//│ 			def length_lh_₁_₀(ls⁵⁰) = 
//│ 				case ls⁵⁰ of {
//│ 					LH_C h²⁰ t²⁴ => (1 + length_lh_₁_₀(t²⁴))
//│ 					| LH_N  => 0}
//│ 			def length_lh_₂_₀(ls⁴⁷) = 
//│ 				case ls⁴⁷ of {
//│ 					LH_C h²⁶ t³² => (1 + length_lh_₂_₀(t³²))
//│ 					| LH_N  => 0}
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
