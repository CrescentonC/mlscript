:NewParser
:ParseOnly


:lhInHaskell
:lhGenOCaml
null [] = True
null (h:t) = False
flatMap f [] = []
flatMap f (h:t) = (f h) ++ (flatMap f t)
lookup k [] = Nothing
lookup k ((x, v):t) = if eqList k x then Just v else lookup k t
data MyState s a = MyState (s -> (s, a))
myRunState :: MyState s a -> s -> (s, a)
myRunState (MyState f) = f
myBind :: MyState s a -> (a -> MyState s b) -> MyState s b
myBind m f = MyState (\s -> case (myRunState m s) of { (s, a) -> myRunState (f a) s })
myReturn :: a -> MyState s a
myReturn a = MyState (\s -> (s, a))
myGet :: MyState s s
myGet = MyState (\s -> (s, s))
myEvalState :: MyState s a -> s -> a
myEvalState m s = case (myRunState m s) of (s, a) -> a
-- start below
mainSimple args =
        if null args
           then error "Args: number-to-sum-up-to"
           else (showTerm (simpleEval [] (App sum0 (Con ((head args))))))
mainMonad args =
        if null args
           then error "Args: number-to-sum-up-to"
           else (ev (App sum0 (Con ((head args)))))
------------------------------------------------------------
-- Data structures
------------------------------------------------------------
--instance Show (a -> b) where
--    show f = "<function>"
data Term
    = Var String
    | Con Int
    | Incr
    | Add Term Term
    | Lam String Term
    | App Term Term
    | IfZero Term Term Term
    -- the following terms are used internally
    | Thunk Term Env  -- a closure
showTerm (Con a) = "Con " ++ (string_of_int a)
showTerm _ = error "unimplemented"
eqTerm (Var a) (Var b) = eqList a b
eqTerm (Con a) (Con b) = a == b
eqTerm (Incr) (Incr) = True
eqTerm (Add a b) (Add c d) = (eqTerm a c) && (eqTerm b d)
eqTerm (Lam a b) (Lam c d) = (eqList a c) && (eqTerm b d)
eqTerm (App a b) (App c d) = (eqTerm a c) && (eqTerm b d)
eqTerm (IfZero a b c) (IfZero d e f) = (eqTerm a d) && (eqTerm b e) && (eqTerm c f)
eqTerm (Thunk a b) (Thunk c d) = (eqTerm a c) && (eqEnv b d)
eqEnv [] [] = True
eqEnv ((s1, t1):b) ((s2, t2):d) = if ((eqList s1 s2) && (eqTerm t1 t2)) then eqEnv b d else False
eqList [] [] = True
eqList (a:b) (c:d) = if (polyEq a c) then eqList b d else False
type Env = [(String,Term)]
----------------------------------------------------------------------
-- Evaluate a term
----------------------------------------------------------------------
ev :: Term -> String
ev t =
    let envt2 = myRunState (traverseTerm t) [] in
    case envt2 of (env, t2) -> (pp t2) ++ "  " ++ (ppenv env)
-----------------------------------------------------------------
-- This class extends Monad to have the standard features
-- we expect while evaluating/manipulating expressions.
----------------------------------------------------
-- class (Monad m) => EvalEnvMonad m where
incr :: a -> MyState Env Unit     -- example of a state update function
-- these defines the traversal!
traverseTerm :: Term -> MyState Env Term
--traversePred :: Pred -> m Pred
lookupVar :: String -> MyState Env Term
pushVar   :: String -> Term -> MyState Env a -> MyState Env a
-- currEnv   :: MyState Env Env         -- returns the current environment
withEnv   :: Env -> MyState Env a -> MyState Env a  -- uses the given environment
myMaybe d f Nothing = d 99
myMaybe d f (Just x) = f x
pushVar v t m = myBind myGet (\env -> withEnv ((v,t):env) m)
incr _dummy = myReturn Unit
traverseTerm t = eval t
lookupVar v =
    let lookup2 = \env -> myMaybe (\_dummy -> error ("undefined var: " ++ v)) (\x -> x) (lookup v env) in
    myBind myGet (\env -> myReturn (lookup2 env))
-- currEnv = myGet
withEnv tmp m = myReturn (myEvalState m tmp)
-- traverseCon :: (EvalEnvMonad m) => Term -> m Int
traverseCon t =
    myBind (traverseTerm t) (\t' ->
       case t' of
           Con c -> myReturn c
           _ -> error ("Not a Con: " ++ (showTerm t'))
    )
-- eval :: (EvalEnvMonad m) => Term -> m Term
eval (Var x) =
    myBind myGet (\e ->
        myBind (lookupVar x) (\t ->
            traverseTerm t
        )
    )
eval (Add u v) =
        myBind (traverseCon u) (\u' ->
            myBind (traverseCon v) (\v' ->
                myReturn (Con (u' + v'))
            )
        )
eval (Thunk t e) = withEnv e (traverseTerm t)
eval (Lam x b) =
    myBind myGet (\env ->
        myReturn (Thunk (Lam x b) env)
    )
eval (App u v) =
        myBind (traverseTerm u) (\u' ->
            apply u' v
        )
eval (IfZero c a b) =
        myBind (traverseTerm c) (\val ->
            if eqTerm val (Con 0)
                then traverseTerm a
                else traverseTerm b
        )
eval (Con i)   = myReturn (Con i)
eval (Incr)    = myBind (incr 99) (\_dummy -> myReturn (Con 0))
--apply :: Term -> Term -> StateMonad2 Term
apply (Thunk (Lam x b) e) a =
        myBind myGet (\orig ->
            withEnv e (pushVar x (Thunk a orig) (traverseTerm b))
        )
apply a b         = error ("bad application: " ++ (pp a) ++ "  [ " ++ (pp b) ++ " ].")
----------------------------------------------------------------------
-- A directly recursive Eval, with explicit environment
----------------------------------------------------------------------
-- A trivial monad so that we can use monad syntax.
-- newtype Id a = Id (Identity a)
--     deriving (Applicative, Functor, Monad)
-- instance Show a => Show (Id a) where
--     show (Id i) = show (runIdentity i)
type Id a = a
simpleEvalCon :: Env -> Term -> Id Int
simpleEvalCon env e =
    let e' = simpleEval env e in
    case e' of
        Con c -> c
        _ -> error ("Not a Con: " ++ showTerm e')
simpleEval :: Env -> Term -> Id Term
simpleEval env (Var v) =
    simpleEval env (myMaybe (\_dummy -> error ("undefined var: " ++ v)) (\x -> x) (lookup v env))
simpleEval env (Con e) = Con e
simpleEval env Incr = (Con 0)
simpleEval env (Add u v) =
    let u' = simpleEvalCon env u in
    let v' = simpleEvalCon env v in
    (Con (u' + v'))
    where
    addCons (Con a) (Con b) = (Con (a+b))
    addCons (Con _) b = error ("type error in second arg of Add: " ++ (pp b))
    addCons a (Con _) = error ("type error in first arg of Add: " ++ (pp a))
simpleEval env (Lam x b) = (Thunk (Lam x b) env)  -- return a closure!
simpleEval env (App u v) =
    let u' = simpleEval env u in
    simpleApply env u' v
simpleEval env (IfZero c a b) =
    let val = simpleEval env c in
    if eqTerm val (Con 0)
       then simpleEval env a
       else simpleEval env b
simpleEval env (Thunk t e) =
    simpleEval e t
simpleApply :: Env -> Term -> Term -> Id Term
simpleApply env (Thunk (Lam x b) e) a = simpleEval ((x, Thunk a env) : e) b
simpleApply env a b         = error ("bad application: " ++ (pp a) ++ "  [ " ++ (pp b) ++ " ].")
------------------------------------------------------------
-- Utility functions for printing terms and envs.
------------------------------------------------------------
ppenv env = "[" ++ (flatMap (\vt -> case vt of (v,t) -> v ++ "=" ++ (pp t) ++ ", ") env) ++ "]"
pp :: Term -> String
pp t = ppn 0 t
-- Precedences:
--   0 = Lam and If (contents never bracketed)
--   1 = Add
--   2 = App
--   3 = atomic and bracketed things
ppn :: Int -> Term -> String
ppn _ (Var v) = v
ppn _ (Con i) = string_of_int i
ppn _ (Incr)  = "INCR"
ppn n (Lam v t) = bracket n 0 ("@" ++ v ++ ". " ++ ppn (0-1) t)
ppn n (Add a b) = bracket n 1 (ppn 1 a ++ " + " ++ ppn 1 b)
ppn n (App a b) = bracket n 2 (ppn 2 a ++ " " ++ ppn 2 b)
ppn n (IfZero c a b) = bracket n 0
    ("IF " ++ ppn 0 c ++ " THEN " ++ ppn 0 a ++ " ELSE " ++ ppn 0 b)
ppn n (Thunk t e) = bracket n 0 (ppn 3 t ++ "::" ++ ppenv e)
bracket outer this t = if this <= outer then "(" ++ t ++ ")" else t
------------------------------------------------------------
-- Test Data
------------------------------------------------------------
-- x  = (Var "x")
-- y  = (Var "y")
-- a1 = (Lam "x" (Add (Var "x") (Con 1)))
-- aa = (Lam "x" (Add (Var "x") (Var "x")))
-- These should all return 1
-- iftrue = (IfZero (Con 0) (Con 1) (Con 2))
-- iffalse = (IfZero (Con 1) (Con 2) (Con 1))
-- This function sums all the numbers from 0 upto its argument.
sum0 :: Term
sum0 = (App fix partialSum0)
partialSum0 = (Lam "sum"
          (Lam "n"
           (IfZero (Var "n")
            (Con 0)
            (Add (Var "n") (App (Var "sum") nMinus1)))))
nMinus1 = (Add (Var "n") (Con (0-1)))
lfxx :: Term
lfxx = (Lam "x" (App (Var "F") (App (Var "x") (Var "x"))))
-- This is the fix point combinator:  Y
fix :: Term
fix = (Lam "F" (App lfxx lfxx))
testLambda_nofib n = (mainSimple [n], mainMonad [n])
testLambda_nofib $ primId 80
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testLambda_nofib_lh_₁^2916(primId⁰(80))
//│ def apply_lh_₁(_lh_apply_arg1⁰, _lh_apply_arg2⁰) = case _lh_apply_arg1⁰ of {
//│ 	Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {
//│ 		Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁^51(myGet_lh_₁^52, (fun orig⁰ -> withEnv_lh_₁^54(_lh_apply_Thunk_1⁰, pushVar_lh_₁^57(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁^64(_lh_apply_Lam_1⁰)))))
//│ 		| _  => error⁰(mappend_lh_₂₆^72(mappend_lh_₂₆^73(mappend_lh_₂₆^74(mappend_lh_₂₆^75([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈^112(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈^128(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ 	| _  => error⁰(mappend_lh_₂₆^144(mappend_lh_₂₆^145(mappend_lh_₂₆^146(mappend_lh_₂₆^147([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈^184(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈^200(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ def bracket_lh_₁(_lh_bracket_arg1², _lh_bracket_arg2², _lh_bracket_arg3²) = if (_lh_bracket_arg2² <= _lh_bracket_arg1²) then mappend_lh_₂₆^493(mappend_lh_₂₆^494([LH_C '(' [LH_N]], _lh_bracket_arg3²), [LH_C ')' [LH_N]]) else _lh_bracket_arg3²
//│ def bracket_lh_₂(_lh_bracket_arg1¹, _lh_bracket_arg2¹, _lh_bracket_arg3¹) = if (_lh_bracket_arg2¹ <= _lh_bracket_arg1¹) then mappend_lh_₂₆^426(mappend_lh_₂₆^427([LH_C '(' [LH_N]], _lh_bracket_arg3¹), [LH_C ')' [LH_N]]) else _lh_bracket_arg3¹
//│ def bracket_lh_₃(_lh_bracket_arg1⁰, _lh_bracket_arg2⁰, _lh_bracket_arg3⁰) = if (_lh_bracket_arg2⁰ <= _lh_bracket_arg1⁰) then mappend_lh_₂₆^391(mappend_lh_₂₆^392([LH_C '(' [LH_N]], _lh_bracket_arg3⁰), [LH_C ')' [LH_N]]) else _lh_bracket_arg3⁰
//│ def eqEnv_lh_₁(_lh_eqEnv_arg1⁰, _lh_eqEnv_arg2⁰) = case _lh_eqEnv_arg1⁰ of {
//│ 	LH_N  => case _lh_eqEnv_arg2⁰ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {
//│ 		LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {
//│ 			LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {
//│ 				LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃^1238(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁^1244(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁^1250(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False]
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₁(_lh_eqList_arg1², _lh_eqList_arg2²) = case _lh_eqList_arg1² of {
//│ 	LH_N  => case _lh_eqList_arg2² of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {
//│ 		LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁^1302(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₂(_lh_eqList_arg1¹, _lh_eqList_arg2¹) = case _lh_eqList_arg1¹ of {
//│ 	LH_N  => case _lh_eqList_arg2¹ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {
//│ 		LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂^1278(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₃(_lh_eqList_arg1⁰, _lh_eqList_arg2⁰) = case _lh_eqList_arg1⁰ of {
//│ 	LH_N  => case _lh_eqList_arg2⁰ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {
//│ 		LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃^1216(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqTerm_lh_₁(_lh_eqTerm_arg1⁰, _lh_eqTerm_arg2⁰) = case _lh_eqTerm_arg1⁰ of {
//│ 	Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Var _lh_eqTerm_Var_0¹ => eqList_lh_₃^1937(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹)
//│ 		| _  => error⁰}
//│ 	| Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹)
//│ 		| _  => error⁰}
//│ 	| Incr  => case _lh_eqTerm_arg2⁰ of {
//│ 		Incr  => [True]
//│ 		| _  => error⁰}
//│ 	| Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁^1958(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁^1964(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹))
//│ 		| _  => error⁰}
//│ 	| Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂^1974(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁^1980(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹))
//│ 		| _  => error⁰}
//│ 	| App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁^1990(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁^1996(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹))
//│ 		| _  => error⁰}
//│ 	| IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁^2007(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁^2013(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁^2020(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹))
//│ 		| _  => error⁰}
//│ 	| Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁^2030(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁^2036(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def ev_lh_₁(_lh_ev_arg1⁰) = 
//│ 	let envt2⁰ = myRunState_lh_₁^2386(traverseTerm_lh_₁^2387(_lh_ev_arg1⁰), [LH_N])
//│ 	in let _lh_matchIdent⁷ = envt2⁰
//│ 	in case _lh_matchIdent⁷ of {
//│ 		LH_P2 _lh_ev_LH_P2_0⁰ _lh_ev_LH_P2_1⁰ => mappend_lh_₅^2395(mappend_lh_₆^2396(pp_lh_₃^2397(_lh_ev_LH_P2_1⁰), [LH_C ' ' [LH_C ' ' [LH_N]]]), ppenv_lh_₁^2408(_lh_ev_LH_P2_0⁰))
//│ 		| _  => error⁰}
//│ def eval_lh_₁(_lh_eval_arg1⁰) = case _lh_eval_arg1⁰ of {
//│ 	Var _lh_eval_Var_0⁰ => myBind_lh_₁^654(myGet_lh_₁^655, (fun e⁰ -> myBind_lh_₁^657(lookupVar_lh_₁^658(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁^662(t¹⁰)))))
//│ 	| Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁^669(traverseCon_lh_₁^670(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁^674(traverseCon_lh_₁^675(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁^679([Con (u'⁰ + v'⁰)])))))
//│ 	| Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁^691(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁^694(_lh_eval_Thunk_0⁰))
//│ 	| Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁^698(myGet_lh_₁^699, (fun env³ -> myReturn_lh_₁^701([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³])))
//│ 	| App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁^710(traverseTerm_lh_₁^711(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁^715(u'¹, _lh_eval_App_1⁰)))
//│ 	| IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁^722(traverseTerm_lh_₁^723(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁^727(val⁰, [Con 0]) then traverseTerm_lh_₁^733(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁^736(_lh_eval_IfZero_2⁰)))
//│ 	| Con _lh_eval_Con_0⁰ => myReturn_lh_₁^742([Con _lh_eval_Con_0⁰])
//│ 	| Incr  => myBind_lh_₁^746(incr_lh_₁^747(99), (fun _dummy¹ -> myReturn_lh_₁^751([Con 0])))
//│ 	| _  => error⁰}
//│ def fix_lh_₁ = [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₁^1879 lfxx_lh_₂^1880]]
//│ def fix_lh_₂ = [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₃^1755 lfxx_lh_₄^1756]]
//│ def flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_arg2⁰) = case _lh_flatMap_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆^620(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁^625(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def head_lh_₁(ls¹) = case ls¹ of {
//│ 	LH_C h²⁷ t²⁸ => h²⁷
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls⁰) = case ls⁰ of {
//│ 	LH_C h²⁶ t²⁷ => h²⁶
//│ 	| LH_N  => error⁰}
//│ def incr_lh_₁(_lh_incr_arg1⁰) = myReturn_lh_₁^45([Unit])
//│ def lfxx_lh_₁ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₂ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₃ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₄ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lookupVar_lh_₁(_lh_lookupVar_arg1⁰) = 
//│ 	let lookup2⁰ = (fun env¹ -> myMaybe_lh_₁^237((fun _dummy⁰ -> error⁰(mappend_lh_₂₆^239([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_lookupVar_arg1⁰))), (fun x⁰ -> x⁰), lookup_lh_₁^280(_lh_lookupVar_arg1⁰, env¹)))
//│ 	in myBind_lh_₁^287(myGet_lh_₁^288, (fun env² -> myReturn_lh_₁^290(lookup2⁰(env²))))
//│ def lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_arg2⁰) = case _lh_lookup_arg2⁰ of {
//│ 	LH_N  => [Nothing]
//│ 	| LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {
//│ 		LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁^2063(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁^2070(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def mainMonad_lh_₁(_lh_mainMonad_arg1⁰) = if null_lh_₂^2768(_lh_mainMonad_arg1⁰) then error⁰([LH_C 'A' [LH_C 'r' [LH_C 'g' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'n' [LH_C 'u' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_C '-' [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_C '-' [LH_C 'u' [LH_C 'p' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]) else ev_lh_₁^2824([App sum0_lh_₂^2825 [Con head_lh_₂^2826(_lh_mainMonad_arg1⁰)]])
//│ def mainSimple_lh_₁(_lh_mainSimple_arg1⁰) = if null_lh_₁^2834(_lh_mainSimple_arg1⁰) then error⁰([LH_C 'A' [LH_C 'r' [LH_C 'g' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'n' [LH_C 'u' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_C '-' [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_C '-' [LH_C 'u' [LH_C 'p' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]) else showTerm_lh_₁^2890(simpleEval_lh_₁^2891([LH_N], [App sum0_lh_₁^2894 [Con head_lh_₁^2895(_lh_mainSimple_arg1⁰)]]))
//│ def mappend_lh_₁(xs²⁵, ys²⁵) = case xs²⁵ of {
//│ 	LH_C h²⁵ t²⁶ => [LH_C h²⁵ mappend_lh_₁^2268(t²⁶, ys²⁵)]
//│ 	| LH_N  => ys²⁵}
//│ def mappend_lh_₁₀(xs¹⁶, ys¹⁶) = case xs¹⁶ of {
//│ 	LH_C h¹⁶ t¹⁷ => [LH_C h¹⁶ mappend_lh_₁₀^1413(t¹⁷, ys¹⁶)]
//│ 	| LH_N  => ys¹⁶}
//│ def mappend_lh_₁₁(xs¹⁵, ys¹⁵) = case xs¹⁵ of {
//│ 	LH_C h¹⁵ t¹⁶ => [LH_C h¹⁵ mappend_lh_₁₁^1401(t¹⁶, ys¹⁵)]
//│ 	| LH_N  => ys¹⁵}
//│ def mappend_lh_₁₂(xs¹⁴, ys¹⁴) = case xs¹⁴ of {
//│ 	LH_C h¹⁴ t¹⁵ => [LH_C h¹⁴ mappend_lh_₁₂^1371(t¹⁵, ys¹⁴)]
//│ 	| LH_N  => ys¹⁴}
//│ def mappend_lh_₁₃(xs¹³, ys¹³) = case xs¹³ of {
//│ 	LH_C h¹³ t¹⁴ => [LH_C h¹³ mappend_lh_₁₃^1359(t¹⁴, ys¹³)]
//│ 	| LH_N  => ys¹³}
//│ def mappend_lh_₁₄(xs¹², ys¹²) = case xs¹² of {
//│ 	LH_C h¹² t¹³ => [LH_C h¹² mappend_lh_₁₄^1347(t¹³, ys¹²)]
//│ 	| LH_N  => ys¹²}
//│ def mappend_lh_₁₅(xs¹¹, ys¹¹) = case xs¹¹ of {
//│ 	LH_C h¹¹ t¹² => [LH_C h¹¹ mappend_lh_₁₅^1329(t¹², ys¹¹)]
//│ 	| LH_N  => ys¹¹}
//│ def mappend_lh_₁₆(xs¹⁰, ys¹⁰) = case xs¹⁰ of {
//│ 	LH_C h¹⁰ t¹¹ => [LH_C h¹⁰ mappend_lh_₁₆^1317(t¹¹, ys¹⁰)]
//│ 	| LH_N  => ys¹⁰}
//│ def mappend_lh_₁₇(xs⁹, ys⁹) = case xs⁹ of {
//│ 	LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇^637(t⁹, ys⁹)]
//│ 	| LH_N  => ys⁹}
//│ def mappend_lh_₁₈(xs⁸, ys⁸) = case xs⁸ of {
//│ 	LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈^608(t⁸, ys⁸)]
//│ 	| LH_N  => ys⁸}
//│ def mappend_lh_₁₉(xs⁷, ys⁷) = case xs⁷ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₉^596(t⁷, ys⁷)]
//│ 	| LH_N  => ys⁷}
//│ def mappend_lh_₂(xs²⁴, ys²⁴) = case xs²⁴ of {
//│ 	LH_C h²⁴ t²⁵ => [LH_C h²⁴ mappend_lh_₂^2256(t²⁵, ys²⁴)]
//│ 	| LH_N  => ys²⁴}
//│ def mappend_lh_₂₀(xs⁶, ys⁶) = case xs⁶ of {
//│ 	LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀^584(t⁶, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₂₁(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₂₁^572(t⁵, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₂₂(xs⁴, ys⁴) = case xs⁴ of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂^513(t⁴, ys⁴)]
//│ 	| LH_N  => ys⁴}
//│ def mappend_lh_₂₃(xs³, ys³) = case xs³ of {
//│ 	LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃^411(t³, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₂₄(xs², ys²) = case xs² of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₂₄^376(t², ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₂₅(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅^364(t¹, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₂₆(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆^352(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def mappend_lh_₃(xs²³, ys²³) = case xs²³ of {
//│ 	LH_C h²³ t²⁴ => [LH_C h²³ mappend_lh_₃^2050(t²⁴, ys²³)]
//│ 	| LH_N  => ys²³}
//│ def mappend_lh_₄(xs²², ys²²) = case xs²² of {
//│ 	LH_C h²² t²³ => [LH_C h²² mappend_lh_₄^1919(t²³, ys²²)]
//│ 	| LH_N  => ys²²}
//│ def mappend_lh_₅(xs²¹, ys²¹) = case xs²¹ of {
//│ 	LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅^1851(t²², ys²¹)]
//│ 	| LH_N  => ys²¹}
//│ def mappend_lh_₆(xs²⁰, ys²⁰) = case xs²⁰ of {
//│ 	LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆^1839(t²¹, ys²⁰)]
//│ 	| LH_N  => ys²⁰}
//│ def mappend_lh_₇(xs¹⁹, ys¹⁹) = case xs¹⁹ of {
//│ 	LH_C h¹⁹ t²⁰ => [LH_C h¹⁹ mappend_lh_₇^1695(t²⁰, ys¹⁹)]
//│ 	| LH_N  => ys¹⁹}
//│ def mappend_lh_₈(xs¹⁸, ys¹⁸) = case xs¹⁸ of {
//│ 	LH_C h¹⁸ t¹⁹ => [LH_C h¹⁸ mappend_lh_₈^1437(t¹⁹, ys¹⁸)]
//│ 	| LH_N  => ys¹⁸}
//│ def mappend_lh_₉(xs¹⁷, ys¹⁷) = case xs¹⁷ of {
//│ 	LH_C h¹⁷ t¹⁸ => [LH_C h¹⁷ mappend_lh_₉^1425(t¹⁸, ys¹⁷)]
//│ 	| LH_N  => ys¹⁷}
//│ def myBind_lh_₁(_lh_myBind_arg1⁰, _lh_myBind_arg2⁰) = [MyState (fun s¹ -> 
//│ 	let _lh_matchIdent¹ = myRunState_lh_₁^217(_lh_myBind_arg1⁰, s¹)
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => myRunState_lh_₁^223(_lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰), _lh_myBind_LH_P2_0⁰)
//│ 		| _  => error⁰})]
//│ def myEvalState_lh_₁(_lh_myEvalState_arg1⁰, _lh_myEvalState_arg2⁰) = 
//│ 	let _lh_matchIdent⁰ = myRunState_lh_₁^1(_lh_myEvalState_arg1⁰, _lh_myEvalState_arg2⁰)
//│ 	in case _lh_matchIdent⁰ of {
//│ 		LH_P2 _lh_myEvalState_LH_P2_0⁰ _lh_myEvalState_LH_P2_1⁰ => _lh_myEvalState_LH_P2_1⁰
//│ 		| _  => error⁰}
//│ def myGet_lh_₁ = [MyState (fun s² -> [LH_P2 s² s²])]
//│ def myMaybe_lh_₁(_lh_myMaybe_arg1⁰, _lh_myMaybe_arg2⁰, _lh_myMaybe_arg3⁰) = case _lh_myMaybe_arg3⁰ of {
//│ 	Nothing  => _lh_myMaybe_arg1⁰(99)
//│ 	| Just _lh_myMaybe_Just_0⁰ => _lh_myMaybe_arg2⁰(_lh_myMaybe_Just_0⁰)
//│ 	| _  => error⁰}
//│ def myReturn_lh_₁(_lh_myReturn_arg1⁰) = [MyState (fun s⁰ -> [LH_P2 s⁰ _lh_myReturn_arg1⁰])]
//│ def myRunState_lh_₁(_lh_myRunState_arg1⁰) = case _lh_myRunState_arg1⁰ of {
//│ 	MyState _lh_myRunState_MyState_0⁰ => _lh_myRunState_MyState_0⁰
//│ 	| _  => error⁰}
//│ def nMinus1_lh_₁ = [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]
//│ def nMinus1_lh_₂ = [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]
//│ def null_lh_₁(_lh_null_arg1¹) = case _lh_null_arg1¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False]
//│ 	| _  => error⁰}
//│ def null_lh_₂(_lh_null_arg1⁰) = case _lh_null_arg1⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False]
//│ 	| _  => error⁰}
//│ def partialSum0_lh_₁ = [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁^1911]]]]]
//│ def partialSum0_lh_₂ = [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂^1787]]]]]
//│ def pp_lh_₁(_lh_pp_arg1⁷) = ppn_lh_₁^2322(0, _lh_pp_arg1⁷)
//│ def pp_lh_₂(_lh_pp_arg1⁶) = ppn_lh_₂^1929(0, _lh_pp_arg1⁶)
//│ def pp_lh_₃(_lh_pp_arg1⁵) = ppn_lh_₃^1870(0, _lh_pp_arg1⁵)
//│ def pp_lh_₄(_lh_pp_arg1⁴) = ppn_lh_₃^1393(0, _lh_pp_arg1⁴)
//│ def pp_lh_₅(_lh_pp_arg1³) = ppn_lh_₃^1387(0, _lh_pp_arg1³)
//│ def pp_lh_₆(_lh_pp_arg1²) = ppn_lh_₃^1381(0, _lh_pp_arg1²)
//│ def pp_lh_₇(_lh_pp_arg1¹) = ppn_lh_₃^1339(0, _lh_pp_arg1¹)
//│ def pp_lh_₈(_lh_pp_arg1⁰) = ppn_lh_₃^647(0, _lh_pp_arg1⁰)
//│ def ppenv_lh_₁(_lh_ppenv_arg1¹) = mappend_lh_₁₇^1793(mappend_lh_₁₉^1794([LH_C '[' [LH_N]], flatMap_lh_₁^1799((fun vt¹ -> 
//│ 	let _lh_matchIdent⁴ = vt¹
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_P2 _lh_ppenv_LH_P2_0¹ _lh_ppenv_LH_P2_1¹ => mappend_lh_₁₈^1802(mappend_lh_₂₁^1803(mappend_lh_₂₀^1804(_lh_ppenv_LH_P2_0¹, [LH_C '=' [LH_N]]), pp_lh_₈^1812(_lh_ppenv_LH_P2_1¹)), [LH_C ',' [LH_C ' ' [LH_N]]])
//│ 		| _  => error⁰}), _lh_ppenv_arg1¹)), [LH_C ']' [LH_N]])
//│ def ppenv_lh_₂(_lh_ppenv_arg1⁰) = mappend_lh_₂₆^444(mappend_lh_₂₆^445([LH_C '[' [LH_N]], flatMap_lh_₁^450((fun vt⁰ -> 
//│ 	let _lh_matchIdent³ = vt⁰
//│ 	in case _lh_matchIdent³ of {
//│ 		LH_P2 _lh_ppenv_LH_P2_0⁰ _lh_ppenv_LH_P2_1⁰ => mappend_lh_₂₆^453(mappend_lh_₂₆^454(mappend_lh_₂₆^455(_lh_ppenv_LH_P2_0⁰, [LH_C '=' [LH_N]]), pp_lh_₁^463(_lh_ppenv_LH_P2_1⁰)), [LH_C ',' [LH_C ' ' [LH_N]]])
//│ 		| _  => error⁰}), _lh_ppenv_arg1⁰)), [LH_C ']' [LH_N]])
//│ def ppn_lh_₁(_lh_ppn_arg1², _lh_ppn_arg2²) = case _lh_ppn_arg2² of {
//│ 	Var _lh_ppn_Var_0² => _lh_ppn_Var_0²
//│ 	| Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃^1508(_lh_ppn_arg1², 0, mappend_lh_₂₆^1513(mappend_lh_₂₆^1514(mappend_lh_₂₆^1515([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁^1530((0 - 1), _lh_ppn_Lam_1²)))
//│ 	| Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂^1541(_lh_ppn_arg1², 1, mappend_lh_₂₄^1546(mappend_lh_₂₅^1547(ppn_lh_₁^1548(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁^1563(1, _lh_ppn_Add_1²)))
//│ 	| App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃^1570(_lh_ppn_arg1², 2, mappend_lh_₂₆^1575(mappend_lh_₂₆^1576(ppn_lh_₁^1577(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁^1588(2, _lh_ppn_App_1²)))
//│ 	| IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃^1595(_lh_ppn_arg1², 0, mappend_lh_₂₃^1600(mappend_lh_₂₆^1601(mappend_lh_₂₆^1602(mappend_lh_₂₆^1603(mappend_lh_₂₆^1604([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁^1613(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁^1635(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁^1657(0, _lh_ppn_IfZero_2²)))
//│ 	| Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁^1664(_lh_ppn_arg1², 0, mappend_lh_₂₆^1669(mappend_lh_₂₆^1670(ppn_lh_₁^1671(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂^1684(_lh_ppn_Thunk_1²)))
//│ 	| _  => error⁰}
//│ def ppn_lh_₂(_lh_ppn_arg1¹, _lh_ppn_arg2¹) = case _lh_ppn_arg2¹ of {
//│ 	Var _lh_ppn_Var_0¹ => _lh_ppn_Var_0¹
//│ 	| Con _lh_ppn_Con_0¹ => string_of_int⁰(_lh_ppn_Con_0¹)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0¹ _lh_ppn_Lam_1¹ => bracket_lh_₃^1020(_lh_ppn_arg1¹, 0, mappend_lh_₂₆^1025(mappend_lh_₂₆^1026(mappend_lh_₂₆^1027([LH_C '@' [LH_N]], _lh_ppn_Lam_0¹), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₂^1042((0 - 1), _lh_ppn_Lam_1¹)))
//│ 	| Add _lh_ppn_Add_0¹ _lh_ppn_Add_1¹ => bracket_lh_₃^1053(_lh_ppn_arg1¹, 1, mappend_lh_₂₆^1058(mappend_lh_₂₆^1059(ppn_lh_₂^1060(1, _lh_ppn_Add_0¹), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₂^1075(1, _lh_ppn_Add_1¹)))
//│ 	| App _lh_ppn_App_0¹ _lh_ppn_App_1¹ => bracket_lh_₃^1082(_lh_ppn_arg1¹, 2, mappend_lh_₂₆^1087(mappend_lh_₂₆^1088(ppn_lh_₂^1089(2, _lh_ppn_App_0¹), [LH_C ' ' [LH_N]]), ppn_lh_₂^1100(2, _lh_ppn_App_1¹)))
//│ 	| IfZero _lh_ppn_IfZero_0¹ _lh_ppn_IfZero_1¹ _lh_ppn_IfZero_2¹ => bracket_lh_₃^1107(_lh_ppn_arg1¹, 0, mappend_lh_₂₆^1112(mappend_lh_₂₆^1113(mappend_lh_₂₆^1114(mappend_lh_₂₆^1115(mappend_lh_₂₆^1116([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₂^1125(0, _lh_ppn_IfZero_0¹)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₂^1147(0, _lh_ppn_IfZero_1¹)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₂^1169(0, _lh_ppn_IfZero_2¹)))
//│ 	| Thunk _lh_ppn_Thunk_0¹ _lh_ppn_Thunk_1¹ => bracket_lh_₃^1176(_lh_ppn_arg1¹, 0, mappend_lh_₂₆^1181(mappend_lh_₂₆^1182(ppn_lh_₂^1183(3, _lh_ppn_Thunk_0¹), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂^1196(_lh_ppn_Thunk_1¹)))
//│ 	| _  => error⁰}
//│ def ppn_lh_₃(_lh_ppn_arg1⁰, _lh_ppn_arg2⁰) = case _lh_ppn_arg2⁰ of {
//│ 	Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰
//│ 	| Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃^774(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆^779(mappend_lh_₂₆^780(mappend_lh_₂₆^781([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃^796((0 - 1), _lh_ppn_Lam_1⁰)))
//│ 	| Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃^807(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆^812(mappend_lh_₂₆^813(ppn_lh_₃^814(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃^829(1, _lh_ppn_Add_1⁰)))
//│ 	| App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃^836(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆^841(mappend_lh_₂₆^842(ppn_lh_₃^843(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃^854(2, _lh_ppn_App_1⁰)))
//│ 	| IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃^861(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆^866(mappend_lh_₂₆^867(mappend_lh_₂₆^868(mappend_lh_₂₆^869(mappend_lh_₂₆^870([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃^879(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃^901(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃^923(0, _lh_ppn_IfZero_2⁰)))
//│ 	| Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃^930(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆^935(mappend_lh_₂₆^936(ppn_lh_₃^937(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂^950(_lh_ppn_Thunk_1⁰)))
//│ 	| _  => error⁰}
//│ def pushVar_lh_₁(_lh_pushVar_arg1⁰, _lh_pushVar_arg2⁰, _lh_pushVar_arg3⁰) = myBind_lh_₁^13(myGet_lh_₁^14, (fun env⁰ -> withEnv_lh_₁^16([LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰], _lh_pushVar_arg3⁰)))
//│ def showTerm_lh_₁(_lh_showTerm_arg1²) = case _lh_showTerm_arg1² of {
//│ 	Con _lh_showTerm_Con_0² => mappend_lh_₄^2421([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0²))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def showTerm_lh_₂(_lh_showTerm_arg1¹) = case _lh_showTerm_arg1¹ of {
//│ 	Con _lh_showTerm_Con_0¹ => mappend_lh_₂₂^1706([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0¹))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def showTerm_lh_₃(_lh_showTerm_arg1⁰) = case _lh_showTerm_arg1⁰ of {
//│ 	Con _lh_showTerm_Con_0⁰ => mappend_lh_₂₆^1448([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0⁰))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def simpleApply_lh_₁(_lh_simpleApply_arg1⁰, _lh_simpleApply_arg2⁰, _lh_simpleApply_arg3⁰) = case _lh_simpleApply_arg2⁰ of {
//│ 	Thunk _lh_simpleApply_Thunk_0⁰ _lh_simpleApply_Thunk_1⁰ => case _lh_simpleApply_Thunk_0⁰ of {
//│ 		Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁^2084([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰)
//│ 		| _  => error⁰(mappend_lh_₁₁^2096(mappend_lh_₁₅^2097(mappend_lh_₁₂^2098(mappend_lh_₉^2099([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅^2136(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆^2152(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ 	| _  => error⁰(mappend_lh_₁₄^2168(mappend_lh_₁₃^2169(mappend_lh_₁₆^2170(mappend_lh_₁₀^2171([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₄^2208(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₇^2224(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ def simpleEvalCon_lh_₁(_lh_simpleEvalCon_arg1¹, _lh_simpleEvalCon_arg2¹) = 
//│ 	let e'¹ = simpleEval_lh_₁^2328(_lh_simpleEvalCon_arg1¹, _lh_simpleEvalCon_arg2¹)
//│ 	in let _lh_matchIdent⁶ = e'¹
//│ 	in case _lh_matchIdent⁶ of {
//│ 		Con _lh_simpleEvalCon_Con_0¹ => _lh_simpleEvalCon_Con_0¹
//│ 		| _  => error⁰(mappend_lh_₇^2337([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₂^2362(e'¹)))}
//│ def simpleEvalCon_lh_₂(_lh_simpleEvalCon_arg1⁰, _lh_simpleEvalCon_arg2⁰) = 
//│ 	let e'⁰ = simpleEval_lh_₁^2278(_lh_simpleEvalCon_arg1⁰, _lh_simpleEvalCon_arg2⁰)
//│ 	in let _lh_matchIdent⁵ = e'⁰
//│ 	in case _lh_matchIdent⁵ of {
//│ 		Con _lh_simpleEvalCon_Con_0⁰ => _lh_simpleEvalCon_Con_0⁰
//│ 		| _  => error⁰(mappend_lh_₈^2287([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃^2312(e'⁰)))}
//│ def simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_arg2⁰) = case _lh_simpleEval_arg2⁰ of {
//│ 	Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁^2468(_lh_simpleEval_arg1⁰, myMaybe_lh_₁^2471((fun _dummy² -> error⁰(mappend_lh_₁^2473([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁^2514(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰)))
//│ 	| Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰]
//│ 	| Incr  => [Con 0]
//│ 	| Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => 
//│ 		let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {
//│ 			Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {
//│ 				Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)]
//│ 				| _  => error⁰(mappend_lh_₃^2534([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁^2603(_lh_addCons_arg2⁰)))}
//│ 			| _  => case _lh_addCons_arg2⁰ of {
//│ 				Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂^2611([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂^2678(_lh_addCons_arg1⁰)))
//│ 				| _  => error⁰}}))
//│ 		in let u'² = simpleEvalCon_lh_₁^2688(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ 		in let v'¹ = simpleEvalCon_lh_₂^2693(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ 		in [Con (u'² + v'¹)]
//│ 	| Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰]
//│ 	| App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => 
//│ 		let u'³ = simpleEval_lh_₁^2712(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ 		in simpleApply_lh_₁^2717(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰)
//│ 	| IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => 
//│ 		let val¹ = simpleEval_lh_₁^2725(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ 		in if eqTerm_lh_₁^2730(val¹, [Con 0]) then simpleEval_lh_₁^2736(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁^2741(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰)
//│ 	| Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁^2748(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰)
//│ 	| _  => error⁰}
//│ def sum0_lh_₁ = [App fix_lh_₁^2417 partialSum0_lh_₁^2418]
//│ def sum0_lh_₂ = [App fix_lh_₂^2377 partialSum0_lh_₂^2378]
//│ def testLambda_nofib_lh_₁(_lh_testLambda_nofib_arg1⁰) = [LH_P2 mainSimple_lh_₁^2904([LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]]) mainMonad_lh_₁^2909([LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]])]
//│ def traverseCon_lh_₁(_lh_traverseCon_arg1⁰) = myBind_lh_₁^304(traverseTerm_lh_₁^305(_lh_traverseCon_arg1⁰), (fun t'⁰ -> 
//│ 	let _lh_matchIdent² = t'⁰
//│ 	in case _lh_matchIdent² of {
//│ 		Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁^311(_lh_traverseCon_Con_0⁰)
//│ 		| _  => error⁰(mappend_lh_₂₆^315([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃^340(t'⁰)))}))
//│ def traverseTerm_lh_₁(_lh_traverseTerm_arg1⁰) = eval_lh_₁^1866(_lh_traverseTerm_arg1⁰)
//│ def withEnv_lh_₁(_lh_withEnv_arg1⁰, _lh_withEnv_arg2⁰) = myReturn_lh_₁^36(myEvalState_lh_₁^37(_lh_withEnv_arg2⁰, _lh_withEnv_arg1⁰))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec mappend_lh__d2_d6 xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (`LH_C(h_0, ((mappend_lh__d2_d6 t_0) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec showTerm_lh__d3 _lh_showTerm_arg1_0 =
//│ 		  (match _lh_showTerm_arg1_0 with
//│ 		    | `Con(_lh_showTerm_Con_0_0) -> 
//│ 		      ((mappend_lh__d2_d6 (`LH_C('C', (`LH_C('o', (`LH_C('n', (`LH_C(' ', (`LH_N)))))))))) (string_of_int _lh_showTerm_Con_0_0))
//│ 		    | _ -> 
//│ 		      ((failwith "error") (`LH_C('u', (`LH_C('n', (`LH_C('i', (`LH_C('m', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_C('m', (`LH_C('e', (`LH_C('n', (`LH_C('t', (`LH_C('e', (`LH_C('d', (`LH_N)))))))))))))))))))))))))))));;
//│ 		let rec mappend_lh__d8 xs_1_8 ys_1_8 =
//│ 		  (match xs_1_8 with
//│ 		    | `LH_C(h_1_8, t_1_9) -> 
//│ 		      (`LH_C(h_1_8, ((mappend_lh__d8 t_1_9) ys_1_8)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_8);;
//│ 		let rec mappend_lh__d3 xs_2_3 ys_2_3 =
//│ 		  (match xs_2_3 with
//│ 		    | `LH_C(h_2_3, t_2_4) -> 
//│ 		      (`LH_C(h_2_3, ((mappend_lh__d3 t_2_4) ys_2_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_2_3);;
//│ 		let rec mappend_lh__d1_d6 xs_1_0 ys_1_0 =
//│ 		  (match xs_1_0 with
//│ 		    | `LH_C(h_1_0, t_1_1) -> 
//│ 		      (`LH_C(h_1_0, ((mappend_lh__d1_d6 t_1_1) ys_1_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_0);;
//│ 		let rec mappend_lh__d1_d0 xs_1_6 ys_1_6 =
//│ 		  (match xs_1_6 with
//│ 		    | `LH_C(h_1_6, t_1_7) -> 
//│ 		      (`LH_C(h_1_6, ((mappend_lh__d1_d0 t_1_7) ys_1_6)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_6);;
//│ 		let rec mappend_lh__d1_d4 xs_1_2 ys_1_2 =
//│ 		  (match xs_1_2 with
//│ 		    | `LH_C(h_1_2, t_1_3) -> 
//│ 		      (`LH_C(h_1_2, ((mappend_lh__d1_d4 t_1_3) ys_1_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_2);;
//│ 		let rec mappend_lh__d1_d1 xs_1_5 ys_1_5 =
//│ 		  (match xs_1_5 with
//│ 		    | `LH_C(h_1_5, t_1_6) -> 
//│ 		      (`LH_C(h_1_5, ((mappend_lh__d1_d1 t_1_6) ys_1_5)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_5);;
//│ 		let rec mappend_lh__d1_d3 xs_1_3 ys_1_3 =
//│ 		  (match xs_1_3 with
//│ 		    | `LH_C(h_1_3, t_1_4) -> 
//│ 		      (`LH_C(h_1_3, ((mappend_lh__d1_d3 t_1_4) ys_1_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_3);;
//│ 		let rec mappend_lh__d9 xs_1_7 ys_1_7 =
//│ 		  (match xs_1_7 with
//│ 		    | `LH_C(h_1_7, t_1_8) -> 
//│ 		      (`LH_C(h_1_7, ((mappend_lh__d9 t_1_8) ys_1_7)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_7);;
//│ 		let rec mappend_lh__d1_d5 xs_1_1 ys_1_1 =
//│ 		  (match xs_1_1 with
//│ 		    | `LH_C(h_1_1, t_1_2) -> 
//│ 		      (`LH_C(h_1_1, ((mappend_lh__d1_d5 t_1_2) ys_1_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_1);;
//│ 		let rec bracket_lh__d3 _lh_bracket_arg1_0 _lh_bracket_arg2_0 _lh_bracket_arg3_0 =
//│ 		  (if (_lh_bracket_arg2_0 <= _lh_bracket_arg1_0) then
//│ 		    ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('(', (`LH_N)))) _lh_bracket_arg3_0)) (`LH_C(')', (`LH_N))))
//│ 		  else
//│ 		    _lh_bracket_arg3_0);;
//│ 		let rec mappend_lh__d2_d3 xs_3 ys_3 =
//│ 		  (match xs_3 with
//│ 		    | `LH_C(h_3, t_3) -> 
//│ 		      (`LH_C(h_3, ((mappend_lh__d2_d3 t_3) ys_3)))
//│ 		    | `LH_N -> 
//│ 		      ys_3);;
//│ 		let rec mappend_lh__d2_d5 xs_1 ys_1 =
//│ 		  (match xs_1 with
//│ 		    | `LH_C(h_1, t_1) -> 
//│ 		      (`LH_C(h_1, ((mappend_lh__d2_d5 t_1) ys_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_1);;
//│ 		let rec bracket_lh__d2 _lh_bracket_arg1_1 _lh_bracket_arg2_1 _lh_bracket_arg3_1 =
//│ 		  (if (_lh_bracket_arg2_1 <= _lh_bracket_arg1_1) then
//│ 		    ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('(', (`LH_N)))) _lh_bracket_arg3_1)) (`LH_C(')', (`LH_N))))
//│ 		  else
//│ 		    _lh_bracket_arg3_1);;
//│ 		let rec mappend_lh__d2_d4 xs_2 ys_2 =
//│ 		  (match xs_2 with
//│ 		    | `LH_C(h_2, t_2) -> 
//│ 		      (`LH_C(h_2, ((mappend_lh__d2_d4 t_2) ys_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2);;
//│ 		let rec bracket_lh__d1 _lh_bracket_arg1_2 _lh_bracket_arg2_2 _lh_bracket_arg3_2 =
//│ 		  (if (_lh_bracket_arg2_2 <= _lh_bracket_arg1_2) then
//│ 		    ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('(', (`LH_N)))) _lh_bracket_arg3_2)) (`LH_C(')', (`LH_N))))
//│ 		  else
//│ 		    _lh_bracket_arg3_2);;
//│ 		let rec flatMap_lh__d1 _lh_flatMap_arg1_0 _lh_flatMap_arg2_0 =
//│ 		  (match _lh_flatMap_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_N)
//│ 		    | `LH_C(_lh_flatMap_LH_C_0_0, _lh_flatMap_LH_C_1_0) -> 
//│ 		      ((mappend_lh__d2_d6 (_lh_flatMap_arg1_0 _lh_flatMap_LH_C_0_0)) ((flatMap_lh__d1 _lh_flatMap_arg1_0) _lh_flatMap_LH_C_1_0))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec pp_lh__d1 _lh_pp_arg1_7 =
//│ 		  ((ppn_lh__d1 0) _lh_pp_arg1_7)
//│ 		and
//│ 		ppenv_lh__d2 _lh_ppenv_arg1_0 =
//│ 		  ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('[', (`LH_N)))) ((flatMap_lh__d1 (fun vt_0 -> 
//│ 		    (let rec _lh_matchIdent_3 = vt_0 in
//│ 		      (match _lh_matchIdent_3 with
//│ 		        | `LH_P2(_lh_ppenv_LH_P2_0_0, _lh_ppenv_LH_P2_1_0) -> 
//│ 		          ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 _lh_ppenv_LH_P2_0_0) (`LH_C('=', (`LH_N))))) (pp_lh__d1 _lh_ppenv_LH_P2_1_0))) (`LH_C(',', (`LH_C(' ', (`LH_N))))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))) _lh_ppenv_arg1_0))) (`LH_C(']', (`LH_N))))
//│ 		and
//│ 		ppn_lh__d1 _lh_ppn_arg1_2 _lh_ppn_arg2_2 =
//│ 		  (match _lh_ppn_arg2_2 with
//│ 		    | `Var(_lh_ppn_Var_0_2) -> 
//│ 		      _lh_ppn_Var_0_2
//│ 		    | `Con(_lh_ppn_Con_0_2) -> 
//│ 		      (string_of_int _lh_ppn_Con_0_2)
//│ 		    | `Incr -> 
//│ 		      (`LH_C('I', (`LH_C('N', (`LH_C('C', (`LH_C('R', (`LH_N)))))))))
//│ 		    | `Lam(_lh_ppn_Lam_0_2, _lh_ppn_Lam_1_2) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_2) 0) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('@', (`LH_N)))) _lh_ppn_Lam_0_2)) (`LH_C('.', (`LH_C(' ', (`LH_N))))))) ((ppn_lh__d1 (0 - 1)) _lh_ppn_Lam_1_2)))
//│ 		    | `Add(_lh_ppn_Add_0_2, _lh_ppn_Add_1_2) -> 
//│ 		      (((bracket_lh__d2 _lh_ppn_arg1_2) 1) ((mappend_lh__d2_d4 ((mappend_lh__d2_d5 ((ppn_lh__d1 1) _lh_ppn_Add_0_2)) (`LH_C(' ', (`LH_C('+', (`LH_C(' ', (`LH_N))))))))) ((ppn_lh__d1 1) _lh_ppn_Add_1_2)))
//│ 		    | `App(_lh_ppn_App_0_2, _lh_ppn_App_1_2) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_2) 2) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((ppn_lh__d1 2) _lh_ppn_App_0_2)) (`LH_C(' ', (`LH_N))))) ((ppn_lh__d1 2) _lh_ppn_App_1_2)))
//│ 		    | `IfZero(_lh_ppn_IfZero_0_2, _lh_ppn_IfZero_1_2, _lh_ppn_IfZero_2_2) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_2) 0) ((mappend_lh__d2_d3 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('I', (`LH_C('F', (`LH_C(' ', (`LH_N)))))))) ((ppn_lh__d1 0) _lh_ppn_IfZero_0_2))) (`LH_C(' ', (`LH_C('T', (`LH_C('H', (`LH_C('E', (`LH_C('N', (`LH_C(' ', (`LH_N))))))))))))))) ((ppn_lh__d1 0) _lh_ppn_IfZero_1_2))) (`LH_C(' ', (`LH_C('E', (`LH_C('L', (`LH_C('S', (`LH_C('E', (`LH_C(' ', (`LH_N))))))))))))))) ((ppn_lh__d1 0) _lh_ppn_IfZero_2_2)))
//│ 		    | `Thunk(_lh_ppn_Thunk_0_2, _lh_ppn_Thunk_1_2) -> 
//│ 		      (((bracket_lh__d1 _lh_ppn_arg1_2) 0) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((ppn_lh__d1 3) _lh_ppn_Thunk_0_2)) (`LH_C(':', (`LH_C(':', (`LH_N))))))) (ppenv_lh__d2 _lh_ppn_Thunk_1_2)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec ppn_lh__d3 _lh_ppn_arg1_0 _lh_ppn_arg2_0 =
//│ 		  (match _lh_ppn_arg2_0 with
//│ 		    | `Var(_lh_ppn_Var_0_0) -> 
//│ 		      _lh_ppn_Var_0_0
//│ 		    | `Con(_lh_ppn_Con_0_0) -> 
//│ 		      (string_of_int _lh_ppn_Con_0_0)
//│ 		    | `Incr -> 
//│ 		      (`LH_C('I', (`LH_C('N', (`LH_C('C', (`LH_C('R', (`LH_N)))))))))
//│ 		    | `Lam(_lh_ppn_Lam_0_0, _lh_ppn_Lam_1_0) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_0) 0) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('@', (`LH_N)))) _lh_ppn_Lam_0_0)) (`LH_C('.', (`LH_C(' ', (`LH_N))))))) ((ppn_lh__d3 (0 - 1)) _lh_ppn_Lam_1_0)))
//│ 		    | `Add(_lh_ppn_Add_0_0, _lh_ppn_Add_1_0) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_0) 1) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((ppn_lh__d3 1) _lh_ppn_Add_0_0)) (`LH_C(' ', (`LH_C('+', (`LH_C(' ', (`LH_N))))))))) ((ppn_lh__d3 1) _lh_ppn_Add_1_0)))
//│ 		    | `App(_lh_ppn_App_0_0, _lh_ppn_App_1_0) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_0) 2) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((ppn_lh__d3 2) _lh_ppn_App_0_0)) (`LH_C(' ', (`LH_N))))) ((ppn_lh__d3 2) _lh_ppn_App_1_0)))
//│ 		    | `IfZero(_lh_ppn_IfZero_0_0, _lh_ppn_IfZero_1_0, _lh_ppn_IfZero_2_0) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_0) 0) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('I', (`LH_C('F', (`LH_C(' ', (`LH_N)))))))) ((ppn_lh__d3 0) _lh_ppn_IfZero_0_0))) (`LH_C(' ', (`LH_C('T', (`LH_C('H', (`LH_C('E', (`LH_C('N', (`LH_C(' ', (`LH_N))))))))))))))) ((ppn_lh__d3 0) _lh_ppn_IfZero_1_0))) (`LH_C(' ', (`LH_C('E', (`LH_C('L', (`LH_C('S', (`LH_C('E', (`LH_C(' ', (`LH_N))))))))))))))) ((ppn_lh__d3 0) _lh_ppn_IfZero_2_0)))
//│ 		    | `Thunk(_lh_ppn_Thunk_0_0, _lh_ppn_Thunk_1_0) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_0) 0) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((ppn_lh__d3 3) _lh_ppn_Thunk_0_0)) (`LH_C(':', (`LH_C(':', (`LH_N))))))) (ppenv_lh__d2 _lh_ppn_Thunk_1_0)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec pp_lh__d4 _lh_pp_arg1_4 =
//│ 		  ((ppn_lh__d3 0) _lh_pp_arg1_4);;
//│ 		let rec mappend_lh__d1_d2 xs_1_4 ys_1_4 =
//│ 		  (match xs_1_4 with
//│ 		    | `LH_C(h_1_4, t_1_5) -> 
//│ 		      (`LH_C(h_1_4, ((mappend_lh__d1_d2 t_1_5) ys_1_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_4);;
//│ 		let rec pp_lh__d5 _lh_pp_arg1_3 =
//│ 		  ((ppn_lh__d3 0) _lh_pp_arg1_3);;
//│ 		let rec pp_lh__d7 _lh_pp_arg1_1 =
//│ 		  ((ppn_lh__d3 0) _lh_pp_arg1_1);;
//│ 		let rec pp_lh__d6 _lh_pp_arg1_2 =
//│ 		  ((ppn_lh__d3 0) _lh_pp_arg1_2);;
//│ 		let rec mappend_lh__d2 xs_2_4 ys_2_4 =
//│ 		  (match xs_2_4 with
//│ 		    | `LH_C(h_2_4, t_2_5) -> 
//│ 		      (`LH_C(h_2_4, ((mappend_lh__d2 t_2_5) ys_2_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_2_4);;
//│ 		let rec eqList_lh__d3 _lh_eqList_arg1_0 _lh_eqList_arg2_0 =
//│ 		  (match _lh_eqList_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (match _lh_eqList_arg2_0 with
//│ 		        | `LH_N -> 
//│ 		          true
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `LH_C(_lh_eqList_LH_C_0_0, _lh_eqList_LH_C_1_0) -> 
//│ 		      (match _lh_eqList_arg2_0 with
//│ 		        | `LH_C(_lh_eqList_LH_C_0_1, _lh_eqList_LH_C_1_1) -> 
//│ 		          (if (_lh_eqList_LH_C_0_0 = _lh_eqList_LH_C_0_1) then
//│ 		            ((eqList_lh__d3 _lh_eqList_LH_C_1_0) _lh_eqList_LH_C_1_1)
//│ 		          else
//│ 		            false)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec eqList_lh__d2 _lh_eqList_arg1_1 _lh_eqList_arg2_1 =
//│ 		  (match _lh_eqList_arg1_1 with
//│ 		    | `LH_N -> 
//│ 		      (match _lh_eqList_arg2_1 with
//│ 		        | `LH_N -> 
//│ 		          true
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `LH_C(_lh_eqList_LH_C_0_2, _lh_eqList_LH_C_1_2) -> 
//│ 		      (match _lh_eqList_arg2_1 with
//│ 		        | `LH_C(_lh_eqList_LH_C_0_3, _lh_eqList_LH_C_1_3) -> 
//│ 		          (if (_lh_eqList_LH_C_0_2 = _lh_eqList_LH_C_0_3) then
//│ 		            ((eqList_lh__d2 _lh_eqList_LH_C_1_2) _lh_eqList_LH_C_1_3)
//│ 		          else
//│ 		            false)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec eqEnv_lh__d1 _lh_eqEnv_arg1_0 _lh_eqEnv_arg2_0 =
//│ 		  (match _lh_eqEnv_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (match _lh_eqEnv_arg2_0 with
//│ 		        | `LH_N -> 
//│ 		          true
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `LH_C(_lh_eqEnv_LH_C_0_0, _lh_eqEnv_LH_C_1_0) -> 
//│ 		      (match _lh_eqEnv_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_eqEnv_LH_P2_0_0, _lh_eqEnv_LH_P2_1_0) -> 
//│ 		          (match _lh_eqEnv_arg2_0 with
//│ 		            | `LH_C(_lh_eqEnv_LH_C_0_1, _lh_eqEnv_LH_C_1_1) -> 
//│ 		              (match _lh_eqEnv_LH_C_0_1 with
//│ 		                | `LH_P2(_lh_eqEnv_LH_P2_0_1, _lh_eqEnv_LH_P2_1_1) -> 
//│ 		                  (if (((eqList_lh__d3 _lh_eqEnv_LH_P2_0_0) _lh_eqEnv_LH_P2_0_1) && ((eqTerm_lh__d1 _lh_eqEnv_LH_P2_1_0) _lh_eqEnv_LH_P2_1_1)) then
//│ 		                    ((eqEnv_lh__d1 _lh_eqEnv_LH_C_1_0) _lh_eqEnv_LH_C_1_1)
//│ 		                  else
//│ 		                    false)
//│ 		                | _ -> 
//│ 		                  (failwith "error"))
//│ 		            | _ -> 
//│ 		              (failwith "error"))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and
//│ 		eqTerm_lh__d1 _lh_eqTerm_arg1_0 _lh_eqTerm_arg2_0 =
//│ 		  (match _lh_eqTerm_arg1_0 with
//│ 		    | `Var(_lh_eqTerm_Var_0_0) -> 
//│ 		      (match _lh_eqTerm_arg2_0 with
//│ 		        | `Var(_lh_eqTerm_Var_0_1) -> 
//│ 		          ((eqList_lh__d3 _lh_eqTerm_Var_0_0) _lh_eqTerm_Var_0_1)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `Con(_lh_eqTerm_Con_0_0) -> 
//│ 		      (match _lh_eqTerm_arg2_0 with
//│ 		        | `Con(_lh_eqTerm_Con_0_1) -> 
//│ 		          (_lh_eqTerm_Con_0_0 = _lh_eqTerm_Con_0_1)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `Incr -> 
//│ 		      (match _lh_eqTerm_arg2_0 with
//│ 		        | `Incr -> 
//│ 		          true
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `Add(_lh_eqTerm_Add_0_0, _lh_eqTerm_Add_1_0) -> 
//│ 		      (match _lh_eqTerm_arg2_0 with
//│ 		        | `Add(_lh_eqTerm_Add_0_1, _lh_eqTerm_Add_1_1) -> 
//│ 		          (((eqTerm_lh__d1 _lh_eqTerm_Add_0_0) _lh_eqTerm_Add_0_1) && ((eqTerm_lh__d1 _lh_eqTerm_Add_1_0) _lh_eqTerm_Add_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `Lam(_lh_eqTerm_Lam_0_0, _lh_eqTerm_Lam_1_0) -> 
//│ 		      (match _lh_eqTerm_arg2_0 with
//│ 		        | `Lam(_lh_eqTerm_Lam_0_1, _lh_eqTerm_Lam_1_1) -> 
//│ 		          (((eqList_lh__d2 _lh_eqTerm_Lam_0_0) _lh_eqTerm_Lam_0_1) && ((eqTerm_lh__d1 _lh_eqTerm_Lam_1_0) _lh_eqTerm_Lam_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `App(_lh_eqTerm_App_0_0, _lh_eqTerm_App_1_0) -> 
//│ 		      (match _lh_eqTerm_arg2_0 with
//│ 		        | `App(_lh_eqTerm_App_0_1, _lh_eqTerm_App_1_1) -> 
//│ 		          (((eqTerm_lh__d1 _lh_eqTerm_App_0_0) _lh_eqTerm_App_0_1) && ((eqTerm_lh__d1 _lh_eqTerm_App_1_0) _lh_eqTerm_App_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `IfZero(_lh_eqTerm_IfZero_0_0, _lh_eqTerm_IfZero_1_0, _lh_eqTerm_IfZero_2_0) -> 
//│ 		      (match _lh_eqTerm_arg2_0 with
//│ 		        | `IfZero(_lh_eqTerm_IfZero_0_1, _lh_eqTerm_IfZero_1_1, _lh_eqTerm_IfZero_2_1) -> 
//│ 		          ((((eqTerm_lh__d1 _lh_eqTerm_IfZero_0_0) _lh_eqTerm_IfZero_0_1) && ((eqTerm_lh__d1 _lh_eqTerm_IfZero_1_0) _lh_eqTerm_IfZero_1_1)) && ((eqTerm_lh__d1 _lh_eqTerm_IfZero_2_0) _lh_eqTerm_IfZero_2_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `Thunk(_lh_eqTerm_Thunk_0_0, _lh_eqTerm_Thunk_1_0) -> 
//│ 		      (match _lh_eqTerm_arg2_0 with
//│ 		        | `Thunk(_lh_eqTerm_Thunk_0_1, _lh_eqTerm_Thunk_1_1) -> 
//│ 		          (((eqTerm_lh__d1 _lh_eqTerm_Thunk_0_0) _lh_eqTerm_Thunk_0_1) && ((eqEnv_lh__d1 _lh_eqTerm_Thunk_1_0) _lh_eqTerm_Thunk_1_1))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec myMaybe_lh__d1 _lh_myMaybe_arg1_0 _lh_myMaybe_arg2_0 _lh_myMaybe_arg3_0 =
//│ 		  (match _lh_myMaybe_arg3_0 with
//│ 		    | `Nothing -> 
//│ 		      (_lh_myMaybe_arg1_0 99)
//│ 		    | `Just(_lh_myMaybe_Just_0_0) -> 
//│ 		      (_lh_myMaybe_arg2_0 _lh_myMaybe_Just_0_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec ppn_lh__d2 _lh_ppn_arg1_1 _lh_ppn_arg2_1 =
//│ 		  (match _lh_ppn_arg2_1 with
//│ 		    | `Var(_lh_ppn_Var_0_1) -> 
//│ 		      _lh_ppn_Var_0_1
//│ 		    | `Con(_lh_ppn_Con_0_1) -> 
//│ 		      (string_of_int _lh_ppn_Con_0_1)
//│ 		    | `Incr -> 
//│ 		      (`LH_C('I', (`LH_C('N', (`LH_C('C', (`LH_C('R', (`LH_N)))))))))
//│ 		    | `Lam(_lh_ppn_Lam_0_1, _lh_ppn_Lam_1_1) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_1) 0) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('@', (`LH_N)))) _lh_ppn_Lam_0_1)) (`LH_C('.', (`LH_C(' ', (`LH_N))))))) ((ppn_lh__d2 (0 - 1)) _lh_ppn_Lam_1_1)))
//│ 		    | `Add(_lh_ppn_Add_0_1, _lh_ppn_Add_1_1) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_1) 1) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((ppn_lh__d2 1) _lh_ppn_Add_0_1)) (`LH_C(' ', (`LH_C('+', (`LH_C(' ', (`LH_N))))))))) ((ppn_lh__d2 1) _lh_ppn_Add_1_1)))
//│ 		    | `App(_lh_ppn_App_0_1, _lh_ppn_App_1_1) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_1) 2) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((ppn_lh__d2 2) _lh_ppn_App_0_1)) (`LH_C(' ', (`LH_N))))) ((ppn_lh__d2 2) _lh_ppn_App_1_1)))
//│ 		    | `IfZero(_lh_ppn_IfZero_0_1, _lh_ppn_IfZero_1_1, _lh_ppn_IfZero_2_1) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_1) 0) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('I', (`LH_C('F', (`LH_C(' ', (`LH_N)))))))) ((ppn_lh__d2 0) _lh_ppn_IfZero_0_1))) (`LH_C(' ', (`LH_C('T', (`LH_C('H', (`LH_C('E', (`LH_C('N', (`LH_C(' ', (`LH_N))))))))))))))) ((ppn_lh__d2 0) _lh_ppn_IfZero_1_1))) (`LH_C(' ', (`LH_C('E', (`LH_C('L', (`LH_C('S', (`LH_C('E', (`LH_C(' ', (`LH_N))))))))))))))) ((ppn_lh__d2 0) _lh_ppn_IfZero_2_1)))
//│ 		    | `Thunk(_lh_ppn_Thunk_0_1, _lh_ppn_Thunk_1_1) -> 
//│ 		      (((bracket_lh__d3 _lh_ppn_arg1_1) 0) ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((ppn_lh__d2 3) _lh_ppn_Thunk_0_1)) (`LH_C(':', (`LH_C(':', (`LH_N))))))) (ppenv_lh__d2 _lh_ppn_Thunk_1_1)))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec pp_lh__d2 _lh_pp_arg1_6 =
//│ 		  ((ppn_lh__d2 0) _lh_pp_arg1_6);;
//│ 		let rec mappend_lh__d1 xs_2_5 ys_2_5 =
//│ 		  (match xs_2_5 with
//│ 		    | `LH_C(h_2_5, t_2_6) -> 
//│ 		      (`LH_C(h_2_5, ((mappend_lh__d1 t_2_6) ys_2_5)))
//│ 		    | `LH_N -> 
//│ 		      ys_2_5);;
//│ 		let rec eqList_lh__d1 _lh_eqList_arg1_2 _lh_eqList_arg2_2 =
//│ 		  (match _lh_eqList_arg1_2 with
//│ 		    | `LH_N -> 
//│ 		      (match _lh_eqList_arg2_2 with
//│ 		        | `LH_N -> 
//│ 		          true
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | `LH_C(_lh_eqList_LH_C_0_4, _lh_eqList_LH_C_1_4) -> 
//│ 		      (match _lh_eqList_arg2_2 with
//│ 		        | `LH_C(_lh_eqList_LH_C_0_5, _lh_eqList_LH_C_1_5) -> 
//│ 		          (if (_lh_eqList_LH_C_0_4 = _lh_eqList_LH_C_0_5) then
//│ 		            ((eqList_lh__d1 _lh_eqList_LH_C_1_4) _lh_eqList_LH_C_1_5)
//│ 		          else
//│ 		            false)
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec lookup_lh__d1 _lh_lookup_arg1_0 _lh_lookup_arg2_0 =
//│ 		  (match _lh_lookup_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`Nothing)
//│ 		    | `LH_C(_lh_lookup_LH_C_0_0, _lh_lookup_LH_C_1_0) -> 
//│ 		      (match _lh_lookup_LH_C_0_0 with
//│ 		        | `LH_P2(_lh_lookup_LH_P2_0_0, _lh_lookup_LH_P2_1_0) -> 
//│ 		          (if ((eqList_lh__d1 _lh_lookup_arg1_0) _lh_lookup_LH_P2_0_0) then
//│ 		            (`Just(_lh_lookup_LH_P2_1_0))
//│ 		          else
//│ 		            ((lookup_lh__d1 _lh_lookup_arg1_0) _lh_lookup_LH_C_1_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d2_d2 xs_4 ys_4 =
//│ 		  (match xs_4 with
//│ 		    | `LH_C(h_4, t_4) -> 
//│ 		      (`LH_C(h_4, ((mappend_lh__d2_d2 t_4) ys_4)))
//│ 		    | `LH_N -> 
//│ 		      ys_4);;
//│ 		let rec showTerm_lh__d2 _lh_showTerm_arg1_1 =
//│ 		  (match _lh_showTerm_arg1_1 with
//│ 		    | `Con(_lh_showTerm_Con_0_1) -> 
//│ 		      ((mappend_lh__d2_d2 (`LH_C('C', (`LH_C('o', (`LH_C('n', (`LH_C(' ', (`LH_N)))))))))) (string_of_int _lh_showTerm_Con_0_1))
//│ 		    | _ -> 
//│ 		      ((failwith "error") (`LH_C('u', (`LH_C('n', (`LH_C('i', (`LH_C('m', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_C('m', (`LH_C('e', (`LH_C('n', (`LH_C('t', (`LH_C('e', (`LH_C('d', (`LH_N)))))))))))))))))))))))))))));;
//│ 		let rec mappend_lh__d7 xs_1_9 ys_1_9 =
//│ 		  (match xs_1_9 with
//│ 		    | `LH_C(h_1_9, t_2_0) -> 
//│ 		      (`LH_C(h_1_9, ((mappend_lh__d7 t_2_0) ys_1_9)))
//│ 		    | `LH_N -> 
//│ 		      ys_1_9);;
//│ 		let rec simpleApply_lh__d1 _lh_simpleApply_arg1_0 _lh_simpleApply_arg2_0 _lh_simpleApply_arg3_0 =
//│ 		  (match _lh_simpleApply_arg2_0 with
//│ 		    | `Thunk(_lh_simpleApply_Thunk_0_0, _lh_simpleApply_Thunk_1_0) -> 
//│ 		      (match _lh_simpleApply_Thunk_0_0 with
//│ 		        | `Lam(_lh_simpleApply_Lam_0_0, _lh_simpleApply_Lam_1_0) -> 
//│ 		          ((simpleEval_lh__d1 (`LH_C((`LH_P2(_lh_simpleApply_Lam_0_0, (`Thunk(_lh_simpleApply_arg3_0, _lh_simpleApply_arg1_0)))), _lh_simpleApply_Thunk_1_0))) _lh_simpleApply_Lam_1_0)
//│ 		        | _ -> 
//│ 		          ((failwith "error") ((mappend_lh__d1_d1 ((mappend_lh__d1_d5 ((mappend_lh__d1_d2 ((mappend_lh__d9 (`LH_C('b', (`LH_C('a', (`LH_C('d', (`LH_C(' ', (`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('i', (`LH_C('c', (`LH_C('a', (`LH_C('t', (`LH_C('i', (`LH_C('o', (`LH_C('n', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))))))))))))))) (pp_lh__d5 _lh_simpleApply_arg2_0))) (`LH_C(' ', (`LH_C(' ', (`LH_C('[', (`LH_C(' ', (`LH_N))))))))))) (pp_lh__d6 _lh_simpleApply_arg3_0))) (`LH_C(' ', (`LH_C(']', (`LH_C('.', (`LH_N))))))))))
//│ 		    | _ -> 
//│ 		      ((failwith "error") ((mappend_lh__d1_d4 ((mappend_lh__d1_d3 ((mappend_lh__d1_d6 ((mappend_lh__d1_d0 (`LH_C('b', (`LH_C('a', (`LH_C('d', (`LH_C(' ', (`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('i', (`LH_C('c', (`LH_C('a', (`LH_C('t', (`LH_C('i', (`LH_C('o', (`LH_C('n', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))))))))))))))) (pp_lh__d4 _lh_simpleApply_arg2_0))) (`LH_C(' ', (`LH_C(' ', (`LH_C('[', (`LH_C(' ', (`LH_N))))))))))) (pp_lh__d7 _lh_simpleApply_arg3_0))) (`LH_C(' ', (`LH_C(']', (`LH_C('.', (`LH_N))))))))))
//│ 		and
//│ 		simpleEvalCon_lh__d1 _lh_simpleEvalCon_arg1_1 _lh_simpleEvalCon_arg2_1 =
//│ 		  (let rec e'_1 = ((simpleEval_lh__d1 _lh_simpleEvalCon_arg1_1) _lh_simpleEvalCon_arg2_1) in
//│ 		    (let rec _lh_matchIdent_6 = e'_1 in
//│ 		      (match _lh_matchIdent_6 with
//│ 		        | `Con(_lh_simpleEvalCon_Con_0_1) -> 
//│ 		          _lh_simpleEvalCon_Con_0_1
//│ 		        | _ -> 
//│ 		          ((failwith "error") ((mappend_lh__d7 (`LH_C('N', (`LH_C('o', (`LH_C('t', (`LH_C(' ', (`LH_C('a', (`LH_C(' ', (`LH_C('C', (`LH_C('o', (`LH_C('n', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))) (showTerm_lh__d2 e'_1))))))
//│ 		and
//│ 		simpleEvalCon_lh__d2 _lh_simpleEvalCon_arg1_0 _lh_simpleEvalCon_arg2_0 =
//│ 		  (let rec e'_0 = ((simpleEval_lh__d1 _lh_simpleEvalCon_arg1_0) _lh_simpleEvalCon_arg2_0) in
//│ 		    (let rec _lh_matchIdent_5 = e'_0 in
//│ 		      (match _lh_matchIdent_5 with
//│ 		        | `Con(_lh_simpleEvalCon_Con_0_0) -> 
//│ 		          _lh_simpleEvalCon_Con_0_0
//│ 		        | _ -> 
//│ 		          ((failwith "error") ((mappend_lh__d8 (`LH_C('N', (`LH_C('o', (`LH_C('t', (`LH_C(' ', (`LH_C('a', (`LH_C(' ', (`LH_C('C', (`LH_C('o', (`LH_C('n', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))) (showTerm_lh__d3 e'_0))))))
//│ 		and
//│ 		simpleEval_lh__d1 _lh_simpleEval_arg1_0 _lh_simpleEval_arg2_0 =
//│ 		  (match _lh_simpleEval_arg2_0 with
//│ 		    | `Var(_lh_simpleEval_Var_0_0) -> 
//│ 		      ((simpleEval_lh__d1 _lh_simpleEval_arg1_0) (((myMaybe_lh__d1 (fun _dummy_2 -> 
//│ 		        ((failwith "error") ((mappend_lh__d1 (`LH_C('u', (`LH_C('n', (`LH_C('d', (`LH_C('e', (`LH_C('f', (`LH_C('i', (`LH_C('n', (`LH_C('e', (`LH_C('d', (`LH_C(' ', (`LH_C('v', (`LH_C('a', (`LH_C('r', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))))))))))) _lh_simpleEval_Var_0_0)))) (fun x_1 -> 
//│ 		        x_1)) ((lookup_lh__d1 _lh_simpleEval_Var_0_0) _lh_simpleEval_arg1_0)))
//│ 		    | `Con(_lh_simpleEval_Con_0_0) -> 
//│ 		      (`Con(_lh_simpleEval_Con_0_0))
//│ 		    | `Incr -> 
//│ 		      (`Con(0))
//│ 		    | `Add(_lh_simpleEval_Add_0_0, _lh_simpleEval_Add_1_0) -> 
//│ 		      (let rec addCons_0 = (fun _lh_addCons_arg1_0 _lh_addCons_arg2_0 -> 
//│ 		        (match _lh_addCons_arg1_0 with
//│ 		          | `Con(_lh_addCons_Con_0_0) -> 
//│ 		            (match _lh_addCons_arg2_0 with
//│ 		              | `Con(_lh_addCons_Con_0_1) -> 
//│ 		                (`Con((_lh_addCons_Con_0_0 + _lh_addCons_Con_0_1)))
//│ 		              | _ -> 
//│ 		                ((failwith "error") ((mappend_lh__d3 (`LH_C('t', (`LH_C('y', (`LH_C('p', (`LH_C('e', (`LH_C(' ', (`LH_C('e', (`LH_C('r', (`LH_C('r', (`LH_C('o', (`LH_C('r', (`LH_C(' ', (`LH_C('i', (`LH_C('n', (`LH_C(' ', (`LH_C('s', (`LH_C('e', (`LH_C('c', (`LH_C('o', (`LH_C('n', (`LH_C('d', (`LH_C(' ', (`LH_C('a', (`LH_C('r', (`LH_C('g', (`LH_C(' ', (`LH_C('o', (`LH_C('f', (`LH_C(' ', (`LH_C('A', (`LH_C('d', (`LH_C('d', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (pp_lh__d1 _lh_addCons_arg2_0))))
//│ 		          | _ -> 
//│ 		            (match _lh_addCons_arg2_0 with
//│ 		              | `Con(_lh_addCons_Con_0_2) -> 
//│ 		                ((failwith "error") ((mappend_lh__d2 (`LH_C('t', (`LH_C('y', (`LH_C('p', (`LH_C('e', (`LH_C(' ', (`LH_C('e', (`LH_C('r', (`LH_C('r', (`LH_C('o', (`LH_C('r', (`LH_C(' ', (`LH_C('i', (`LH_C('n', (`LH_C(' ', (`LH_C('f', (`LH_C('i', (`LH_C('r', (`LH_C('s', (`LH_C('t', (`LH_C(' ', (`LH_C('a', (`LH_C('r', (`LH_C('g', (`LH_C(' ', (`LH_C('o', (`LH_C('f', (`LH_C(' ', (`LH_C('A', (`LH_C('d', (`LH_C('d', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (pp_lh__d2 _lh_addCons_arg1_0)))
//│ 		              | _ -> 
//│ 		                (failwith "error")))) in
//│ 		        (let rec u'_2 = ((simpleEvalCon_lh__d1 _lh_simpleEval_arg1_0) _lh_simpleEval_Add_0_0) in
//│ 		          (let rec v'_1 = ((simpleEvalCon_lh__d2 _lh_simpleEval_arg1_0) _lh_simpleEval_Add_1_0) in
//│ 		            (`Con((u'_2 + v'_1))))))
//│ 		    | `Lam(_lh_simpleEval_Lam_0_0, _lh_simpleEval_Lam_1_0) -> 
//│ 		      (`Thunk((`Lam(_lh_simpleEval_Lam_0_0, _lh_simpleEval_Lam_1_0)), _lh_simpleEval_arg1_0))
//│ 		    | `App(_lh_simpleEval_App_0_0, _lh_simpleEval_App_1_0) -> 
//│ 		      (let rec u'_3 = ((simpleEval_lh__d1 _lh_simpleEval_arg1_0) _lh_simpleEval_App_0_0) in
//│ 		        (((simpleApply_lh__d1 _lh_simpleEval_arg1_0) u'_3) _lh_simpleEval_App_1_0))
//│ 		    | `IfZero(_lh_simpleEval_IfZero_0_0, _lh_simpleEval_IfZero_1_0, _lh_simpleEval_IfZero_2_0) -> 
//│ 		      (let rec val_1 = ((simpleEval_lh__d1 _lh_simpleEval_arg1_0) _lh_simpleEval_IfZero_0_0) in
//│ 		        (if ((eqTerm_lh__d1 val_1) (`Con(0))) then
//│ 		          ((simpleEval_lh__d1 _lh_simpleEval_arg1_0) _lh_simpleEval_IfZero_1_0)
//│ 		        else
//│ 		          ((simpleEval_lh__d1 _lh_simpleEval_arg1_0) _lh_simpleEval_IfZero_2_0)))
//│ 		    | `Thunk(_lh_simpleEval_Thunk_0_0, _lh_simpleEval_Thunk_1_0) -> 
//│ 		      ((simpleEval_lh__d1 _lh_simpleEval_Thunk_1_0) _lh_simpleEval_Thunk_0_0)
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d4 xs_2_2 ys_2_2 =
//│ 		  (match xs_2_2 with
//│ 		    | `LH_C(h_2_2, t_2_3) -> 
//│ 		      (`LH_C(h_2_2, ((mappend_lh__d4 t_2_3) ys_2_2)))
//│ 		    | `LH_N -> 
//│ 		      ys_2_2);;
//│ 		let rec showTerm_lh__d1 _lh_showTerm_arg1_2 =
//│ 		  (match _lh_showTerm_arg1_2 with
//│ 		    | `Con(_lh_showTerm_Con_0_2) -> 
//│ 		      ((mappend_lh__d4 (`LH_C('C', (`LH_C('o', (`LH_C('n', (`LH_C(' ', (`LH_N)))))))))) (string_of_int _lh_showTerm_Con_0_2))
//│ 		    | _ -> 
//│ 		      ((failwith "error") (`LH_C('u', (`LH_C('n', (`LH_C('i', (`LH_C('m', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_C('m', (`LH_C('e', (`LH_C('n', (`LH_C('t', (`LH_C('e', (`LH_C('d', (`LH_N)))))))))))))))))))))))))))));;
//│ 		let rec lfxx_lh__d1 =
//│ 		  (`Lam((`LH_C('x', (`LH_N))), (`App((`Var((`LH_C('F', (`LH_N))))), (`App((`Var((`LH_C('x', (`LH_N))))), (`Var((`LH_C('x', (`LH_N)))))))))));;
//│ 		let rec lfxx_lh__d2 =
//│ 		  (`Lam((`LH_C('x', (`LH_N))), (`App((`Var((`LH_C('F', (`LH_N))))), (`App((`Var((`LH_C('x', (`LH_N))))), (`Var((`LH_C('x', (`LH_N)))))))))));;
//│ 		let rec fix_lh__d1 =
//│ 		  (`Lam((`LH_C('F', (`LH_N))), (`App(lfxx_lh__d1, lfxx_lh__d2))));;
//│ 		let rec nMinus1_lh__d1 =
//│ 		  (`Add((`Var((`LH_C('n', (`LH_N))))), (`Con((0 - 1)))));;
//│ 		let rec partialSum0_lh__d1 =
//│ 		  (`Lam((`LH_C('s', (`LH_C('u', (`LH_C('m', (`LH_N))))))), (`Lam((`LH_C('n', (`LH_N))), (`IfZero((`Var((`LH_C('n', (`LH_N))))), (`Con(0)), (`Add((`Var((`LH_C('n', (`LH_N))))), (`App((`Var((`LH_C('s', (`LH_C('u', (`LH_C('m', (`LH_N))))))))), nMinus1_lh__d1))))))))));;
//│ 		let rec sum0_lh__d1 =
//│ 		  (`App(fix_lh__d1, partialSum0_lh__d1));;
//│ 		let rec null_lh__d1 _lh_null_arg1_1 =
//│ 		  (match _lh_null_arg1_1 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_null_LH_C_0_1, _lh_null_LH_C_1_1) -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec head_lh__d1 ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_2_7, t_2_8) -> 
//│ 		      h_2_7
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec mainSimple_lh__d1 _lh_mainSimple_arg1_0 =
//│ 		  (if (null_lh__d1 _lh_mainSimple_arg1_0) then
//│ 		    ((failwith "error") (`LH_C('A', (`LH_C('r', (`LH_C('g', (`LH_C('s', (`LH_C(':', (`LH_C(' ', (`LH_C('n', (`LH_C('u', (`LH_C('m', (`LH_C('b', (`LH_C('e', (`LH_C('r', (`LH_C('-', (`LH_C('t', (`LH_C('o', (`LH_C('-', (`LH_C('s', (`LH_C('u', (`LH_C('m', (`LH_C('-', (`LH_C('u', (`LH_C('p', (`LH_C('-', (`LH_C('t', (`LH_C('o', (`LH_N))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		  else
//│ 		    (showTerm_lh__d1 ((simpleEval_lh__d1 (`LH_N)) (`App(sum0_lh__d1, (`Con((head_lh__d1 _lh_mainSimple_arg1_0))))))));;
//│ 		let rec nMinus1_lh__d2 =
//│ 		  (`Add((`Var((`LH_C('n', (`LH_N))))), (`Con((0 - 1)))));;
//│ 		let rec partialSum0_lh__d2 =
//│ 		  (`Lam((`LH_C('s', (`LH_C('u', (`LH_C('m', (`LH_N))))))), (`Lam((`LH_C('n', (`LH_N))), (`IfZero((`Var((`LH_C('n', (`LH_N))))), (`Con(0)), (`Add((`Var((`LH_C('n', (`LH_N))))), (`App((`Var((`LH_C('s', (`LH_C('u', (`LH_C('m', (`LH_N))))))))), nMinus1_lh__d2))))))))));;
//│ 		let rec lfxx_lh__d4 =
//│ 		  (`Lam((`LH_C('x', (`LH_N))), (`App((`Var((`LH_C('F', (`LH_N))))), (`App((`Var((`LH_C('x', (`LH_N))))), (`Var((`LH_C('x', (`LH_N)))))))))));;
//│ 		let rec lfxx_lh__d3 =
//│ 		  (`Lam((`LH_C('x', (`LH_N))), (`App((`Var((`LH_C('F', (`LH_N))))), (`App((`Var((`LH_C('x', (`LH_N))))), (`Var((`LH_C('x', (`LH_N)))))))))));;
//│ 		let rec fix_lh__d2 =
//│ 		  (`Lam((`LH_C('F', (`LH_N))), (`App(lfxx_lh__d3, lfxx_lh__d4))));;
//│ 		let rec sum0_lh__d2 =
//│ 		  (`App(fix_lh__d2, partialSum0_lh__d2));;
//│ 		let rec null_lh__d2 _lh_null_arg1_0 =
//│ 		  (match _lh_null_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      true
//│ 		    | `LH_C(_lh_null_LH_C_0_0, _lh_null_LH_C_1_0) -> 
//│ 		      false
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec head_lh__d2 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_2_6, t_2_7) -> 
//│ 		      h_2_6
//│ 		    | `LH_N -> 
//│ 		      (failwith "error"));;
//│ 		let rec pp_lh__d3 _lh_pp_arg1_5 =
//│ 		  ((ppn_lh__d3 0) _lh_pp_arg1_5);;
//│ 		let rec myRunState_lh__d1 _lh_myRunState_arg1_0 =
//│ 		  (match _lh_myRunState_arg1_0 with
//│ 		    | `MyState(_lh_myRunState_MyState_0_0) -> 
//│ 		      _lh_myRunState_MyState_0_0
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec mappend_lh__d5 xs_2_1 ys_2_1 =
//│ 		  (match xs_2_1 with
//│ 		    | `LH_C(h_2_1, t_2_2) -> 
//│ 		      (`LH_C(h_2_1, ((mappend_lh__d5 t_2_2) ys_2_1)))
//│ 		    | `LH_N -> 
//│ 		      ys_2_1);;
//│ 		let rec mappend_lh__d2_d1 xs_5 ys_5 =
//│ 		  (match xs_5 with
//│ 		    | `LH_C(h_5, t_5) -> 
//│ 		      (`LH_C(h_5, ((mappend_lh__d2_d1 t_5) ys_5)))
//│ 		    | `LH_N -> 
//│ 		      ys_5);;
//│ 		let rec pp_lh__d8 _lh_pp_arg1_0 =
//│ 		  ((ppn_lh__d3 0) _lh_pp_arg1_0);;
//│ 		let rec mappend_lh__d1_d8 xs_8 ys_8 =
//│ 		  (match xs_8 with
//│ 		    | `LH_C(h_8, t_8) -> 
//│ 		      (`LH_C(h_8, ((mappend_lh__d1_d8 t_8) ys_8)))
//│ 		    | `LH_N -> 
//│ 		      ys_8);;
//│ 		let rec mappend_lh__d1_d9 xs_7 ys_7 =
//│ 		  (match xs_7 with
//│ 		    | `LH_C(h_7, t_7) -> 
//│ 		      (`LH_C(h_7, ((mappend_lh__d1_d9 t_7) ys_7)))
//│ 		    | `LH_N -> 
//│ 		      ys_7);;
//│ 		let rec mappend_lh__d2_d0 xs_6 ys_6 =
//│ 		  (match xs_6 with
//│ 		    | `LH_C(h_6, t_6) -> 
//│ 		      (`LH_C(h_6, ((mappend_lh__d2_d0 t_6) ys_6)))
//│ 		    | `LH_N -> 
//│ 		      ys_6);;
//│ 		let rec mappend_lh__d1_d7 xs_9 ys_9 =
//│ 		  (match xs_9 with
//│ 		    | `LH_C(h_9, t_9) -> 
//│ 		      (`LH_C(h_9, ((mappend_lh__d1_d7 t_9) ys_9)))
//│ 		    | `LH_N -> 
//│ 		      ys_9);;
//│ 		let rec ppenv_lh__d1 _lh_ppenv_arg1_1 =
//│ 		  ((mappend_lh__d1_d7 ((mappend_lh__d1_d9 (`LH_C('[', (`LH_N)))) ((flatMap_lh__d1 (fun vt_1 -> 
//│ 		    (let rec _lh_matchIdent_4 = vt_1 in
//│ 		      (match _lh_matchIdent_4 with
//│ 		        | `LH_P2(_lh_ppenv_LH_P2_0_1, _lh_ppenv_LH_P2_1_1) -> 
//│ 		          ((mappend_lh__d1_d8 ((mappend_lh__d2_d1 ((mappend_lh__d2_d0 _lh_ppenv_LH_P2_0_1) (`LH_C('=', (`LH_N))))) (pp_lh__d8 _lh_ppenv_LH_P2_1_1))) (`LH_C(',', (`LH_C(' ', (`LH_N))))))
//│ 		        | _ -> 
//│ 		          (failwith "error"))))) _lh_ppenv_arg1_1))) (`LH_C(']', (`LH_N))));;
//│ 		let rec myReturn_lh__d1 _lh_myReturn_arg1_0 =
//│ 		  (`MyState((fun s_0 -> 
//│ 		    (`LH_P2(s_0, _lh_myReturn_arg1_0)))));;
//│ 		let rec myBind_lh__d1 _lh_myBind_arg1_0 _lh_myBind_arg2_0 =
//│ 		  (`MyState((fun s_1 -> 
//│ 		    (let rec _lh_matchIdent_1 = ((myRunState_lh__d1 _lh_myBind_arg1_0) s_1) in
//│ 		      (match _lh_matchIdent_1 with
//│ 		        | `LH_P2(_lh_myBind_LH_P2_0_0, _lh_myBind_LH_P2_1_0) -> 
//│ 		          ((myRunState_lh__d1 (_lh_myBind_arg2_0 _lh_myBind_LH_P2_1_0)) _lh_myBind_LH_P2_0_0)
//│ 		        | _ -> 
//│ 		          (failwith "error"))))));;
//│ 		let rec myGet_lh__d1 =
//│ 		  (`MyState((fun s_2 -> 
//│ 		    (`LH_P2(s_2, s_2)))));;
//│ 		let rec lookupVar_lh__d1 _lh_lookupVar_arg1_0 =
//│ 		  (let rec lookup2_0 = (fun env_1 -> 
//│ 		    (((myMaybe_lh__d1 (fun _dummy_0 -> 
//│ 		      ((failwith "error") ((mappend_lh__d2_d6 (`LH_C('u', (`LH_C('n', (`LH_C('d', (`LH_C('e', (`LH_C('f', (`LH_C('i', (`LH_C('n', (`LH_C('e', (`LH_C('d', (`LH_C(' ', (`LH_C('v', (`LH_C('a', (`LH_C('r', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))))))))))) _lh_lookupVar_arg1_0)))) (fun x_0 -> 
//│ 		      x_0)) ((lookup_lh__d1 _lh_lookupVar_arg1_0) env_1))) in
//│ 		    ((myBind_lh__d1 myGet_lh__d1) (fun env_2 -> 
//│ 		      (myReturn_lh__d1 (lookup2_0 env_2)))));;
//│ 		let rec incr_lh__d1 _lh_incr_arg1_0 =
//│ 		  (myReturn_lh__d1 (`Unit));;
//│ 		let rec myEvalState_lh__d1 _lh_myEvalState_arg1_0 _lh_myEvalState_arg2_0 =
//│ 		  (let rec _lh_matchIdent_0 = ((myRunState_lh__d1 _lh_myEvalState_arg1_0) _lh_myEvalState_arg2_0) in
//│ 		    (match _lh_matchIdent_0 with
//│ 		      | `LH_P2(_lh_myEvalState_LH_P2_0_0, _lh_myEvalState_LH_P2_1_0) -> 
//│ 		        _lh_myEvalState_LH_P2_1_0
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec withEnv_lh__d1 _lh_withEnv_arg1_0 _lh_withEnv_arg2_0 =
//│ 		  (myReturn_lh__d1 ((myEvalState_lh__d1 _lh_withEnv_arg2_0) _lh_withEnv_arg1_0));;
//│ 		let rec pushVar_lh__d1 _lh_pushVar_arg1_0 _lh_pushVar_arg2_0 _lh_pushVar_arg3_0 =
//│ 		  ((myBind_lh__d1 myGet_lh__d1) (fun env_0 -> 
//│ 		    ((withEnv_lh__d1 (`LH_C((`LH_P2(_lh_pushVar_arg1_0, _lh_pushVar_arg2_0)), env_0))) _lh_pushVar_arg3_0)));;
//│ 		let rec apply_lh__d1 _lh_apply_arg1_0 _lh_apply_arg2_0 =
//│ 		  (match _lh_apply_arg1_0 with
//│ 		    | `Thunk(_lh_apply_Thunk_0_0, _lh_apply_Thunk_1_0) -> 
//│ 		      (match _lh_apply_Thunk_0_0 with
//│ 		        | `Lam(_lh_apply_Lam_0_0, _lh_apply_Lam_1_0) -> 
//│ 		          ((myBind_lh__d1 myGet_lh__d1) (fun orig_0 -> 
//│ 		            ((withEnv_lh__d1 _lh_apply_Thunk_1_0) (((pushVar_lh__d1 _lh_apply_Lam_0_0) (`Thunk(_lh_apply_arg2_0, orig_0))) (traverseTerm_lh__d1 _lh_apply_Lam_1_0)))))
//│ 		        | _ -> 
//│ 		          ((failwith "error") ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('b', (`LH_C('a', (`LH_C('d', (`LH_C(' ', (`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('i', (`LH_C('c', (`LH_C('a', (`LH_C('t', (`LH_C('i', (`LH_C('o', (`LH_C('n', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))))))))))))))) (pp_lh__d8 _lh_apply_arg1_0))) (`LH_C(' ', (`LH_C(' ', (`LH_C('[', (`LH_C(' ', (`LH_N))))))))))) (pp_lh__d8 _lh_apply_arg2_0))) (`LH_C(' ', (`LH_C(']', (`LH_C('.', (`LH_N))))))))))
//│ 		    | _ -> 
//│ 		      ((failwith "error") ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 ((mappend_lh__d2_d6 (`LH_C('b', (`LH_C('a', (`LH_C('d', (`LH_C(' ', (`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('i', (`LH_C('c', (`LH_C('a', (`LH_C('t', (`LH_C('i', (`LH_C('o', (`LH_C('n', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))))))))))))))) (pp_lh__d8 _lh_apply_arg1_0))) (`LH_C(' ', (`LH_C(' ', (`LH_C('[', (`LH_C(' ', (`LH_N))))))))))) (pp_lh__d8 _lh_apply_arg2_0))) (`LH_C(' ', (`LH_C(']', (`LH_C('.', (`LH_N))))))))))
//│ 		and
//│ 		eval_lh__d1 _lh_eval_arg1_0 =
//│ 		  (match _lh_eval_arg1_0 with
//│ 		    | `Var(_lh_eval_Var_0_0) -> 
//│ 		      ((myBind_lh__d1 myGet_lh__d1) (fun e_0 -> 
//│ 		        ((myBind_lh__d1 (lookupVar_lh__d1 _lh_eval_Var_0_0)) (fun t_1_0 -> 
//│ 		          (traverseTerm_lh__d1 t_1_0)))))
//│ 		    | `Add(_lh_eval_Add_0_0, _lh_eval_Add_1_0) -> 
//│ 		      ((myBind_lh__d1 (traverseCon_lh__d1 _lh_eval_Add_0_0)) (fun u'_0 -> 
//│ 		        ((myBind_lh__d1 (traverseCon_lh__d1 _lh_eval_Add_1_0)) (fun v'_0 -> 
//│ 		          (myReturn_lh__d1 (`Con((u'_0 + v'_0))))))))
//│ 		    | `Thunk(_lh_eval_Thunk_0_0, _lh_eval_Thunk_1_0) -> 
//│ 		      ((withEnv_lh__d1 _lh_eval_Thunk_1_0) (traverseTerm_lh__d1 _lh_eval_Thunk_0_0))
//│ 		    | `Lam(_lh_eval_Lam_0_0, _lh_eval_Lam_1_0) -> 
//│ 		      ((myBind_lh__d1 myGet_lh__d1) (fun env_3 -> 
//│ 		        (myReturn_lh__d1 (`Thunk((`Lam(_lh_eval_Lam_0_0, _lh_eval_Lam_1_0)), env_3)))))
//│ 		    | `App(_lh_eval_App_0_0, _lh_eval_App_1_0) -> 
//│ 		      ((myBind_lh__d1 (traverseTerm_lh__d1 _lh_eval_App_0_0)) (fun u'_1 -> 
//│ 		        ((apply_lh__d1 u'_1) _lh_eval_App_1_0)))
//│ 		    | `IfZero(_lh_eval_IfZero_0_0, _lh_eval_IfZero_1_0, _lh_eval_IfZero_2_0) -> 
//│ 		      ((myBind_lh__d1 (traverseTerm_lh__d1 _lh_eval_IfZero_0_0)) (fun val_0 -> 
//│ 		        (if ((eqTerm_lh__d1 val_0) (`Con(0))) then
//│ 		          (traverseTerm_lh__d1 _lh_eval_IfZero_1_0)
//│ 		        else
//│ 		          (traverseTerm_lh__d1 _lh_eval_IfZero_2_0))))
//│ 		    | `Con(_lh_eval_Con_0_0) -> 
//│ 		      (myReturn_lh__d1 (`Con(_lh_eval_Con_0_0)))
//│ 		    | `Incr -> 
//│ 		      ((myBind_lh__d1 (incr_lh__d1 99)) (fun _dummy_1 -> 
//│ 		        (myReturn_lh__d1 (`Con(0)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and
//│ 		traverseCon_lh__d1 _lh_traverseCon_arg1_0 =
//│ 		  ((myBind_lh__d1 (traverseTerm_lh__d1 _lh_traverseCon_arg1_0)) (fun t'_0 -> 
//│ 		    (let rec _lh_matchIdent_2 = t'_0 in
//│ 		      (match _lh_matchIdent_2 with
//│ 		        | `Con(_lh_traverseCon_Con_0_0) -> 
//│ 		          (myReturn_lh__d1 _lh_traverseCon_Con_0_0)
//│ 		        | _ -> 
//│ 		          ((failwith "error") ((mappend_lh__d2_d6 (`LH_C('N', (`LH_C('o', (`LH_C('t', (`LH_C(' ', (`LH_C('a', (`LH_C(' ', (`LH_C('C', (`LH_C('o', (`LH_C('n', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))) (showTerm_lh__d3 t'_0)))))))
//│ 		and
//│ 		traverseTerm_lh__d1 _lh_traverseTerm_arg1_0 =
//│ 		  (eval_lh__d1 _lh_traverseTerm_arg1_0);;
//│ 		let rec mappend_lh__d6 xs_2_0 ys_2_0 =
//│ 		  (match xs_2_0 with
//│ 		    | `LH_C(h_2_0, t_2_1) -> 
//│ 		      (`LH_C(h_2_0, ((mappend_lh__d6 t_2_1) ys_2_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_2_0);;
//│ 		let rec ev_lh__d1 _lh_ev_arg1_0 =
//│ 		  (let rec envt2_0 = ((myRunState_lh__d1 (traverseTerm_lh__d1 _lh_ev_arg1_0)) (`LH_N)) in
//│ 		    (let rec _lh_matchIdent_7 = envt2_0 in
//│ 		      (match _lh_matchIdent_7 with
//│ 		        | `LH_P2(_lh_ev_LH_P2_0_0, _lh_ev_LH_P2_1_0) -> 
//│ 		          ((mappend_lh__d5 ((mappend_lh__d6 (pp_lh__d3 _lh_ev_LH_P2_1_0)) (`LH_C(' ', (`LH_C(' ', (`LH_N))))))) (ppenv_lh__d1 _lh_ev_LH_P2_0_0))
//│ 		        | _ -> 
//│ 		          (failwith "error"))));;
//│ 		let rec mainMonad_lh__d1 _lh_mainMonad_arg1_0 =
//│ 		  (if (null_lh__d2 _lh_mainMonad_arg1_0) then
//│ 		    ((failwith "error") (`LH_C('A', (`LH_C('r', (`LH_C('g', (`LH_C('s', (`LH_C(':', (`LH_C(' ', (`LH_C('n', (`LH_C('u', (`LH_C('m', (`LH_C('b', (`LH_C('e', (`LH_C('r', (`LH_C('-', (`LH_C('t', (`LH_C('o', (`LH_C('-', (`LH_C('s', (`LH_C('u', (`LH_C('m', (`LH_C('-', (`LH_C('u', (`LH_C('p', (`LH_C('-', (`LH_C('t', (`LH_C('o', (`LH_N))))))))))))))))))))))))))))))))))))))))))))))))))))
//│ 		  else
//│ 		    (ev_lh__d1 (`App(sum0_lh__d2, (`Con((head_lh__d2 _lh_mainMonad_arg1_0)))))));;
//│ 		let rec testLambda_nofib_lh__d1 _lh_testLambda_nofib_arg1_0 =
//│ 		  (`LH_P2((mainSimple_lh__d1 (`LH_C(_lh_testLambda_nofib_arg1_0, (`LH_N)))), (mainMonad_lh__d1 (`LH_C(_lh_testLambda_nofib_arg1_0, (`LH_N))))));;
//│ 		(testLambda_nofib_lh__d1 80)
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰]: 19 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent³ of {LH_P2 _lh_ppenv_LH_P2_0⁰ _lh_ppenv_LH_P2_1⁰ => mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(_lh_ppenv_LH_P2_0⁰, [LH_C '=' [LH_N]]), pp_lh_₁(_lh_ppenv_LH_P2_1⁰)), [LH_C ',' [LH_C ' ' [LH_N]]]) | _  => error⁰}: 475
//│ 	case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1262
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_ppenv_LH_P2_0¹ _lh_ppenv_LH_P2_1¹ => mappend_lh_₁₈(mappend_lh_₂₁(mappend_lh_₂₀(_lh_ppenv_LH_P2_0¹, [LH_C '=' [LH_N]]), pp_lh_₈(_lh_ppenv_LH_P2_1¹)), [LH_C ',' [LH_C ' ' [LH_N]]]) | _  => error⁰}: 1824
//│ 	case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰}: 2077
//│ [LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰]: 21 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ [LH_P2 s⁰ _lh_myReturn_arg1⁰]: 32 --->
//│ 	case _lh_matchIdent⁰ of {LH_P2 _lh_myEvalState_LH_P2_0⁰ _lh_myEvalState_LH_P2_1⁰ => _lh_myEvalState_LH_P2_1⁰ | _  => error⁰}: 9
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => myRunState_lh_₁(_lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰), _lh_myBind_LH_P2_0⁰) | _  => error⁰}: 231
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_ev_LH_P2_0⁰ _lh_ev_LH_P2_1⁰ => mappend_lh_₅(mappend_lh_₆(pp_lh_₃(_lh_ev_LH_P2_1⁰), [LH_C ' ' [LH_C ' ' [LH_N]]]), ppenv_lh_₁(_lh_ev_LH_P2_0⁰)) | _  => error⁰}: 2413
//│ [MyState (fun s⁰ -> [LH_P2 s⁰ _lh_myReturn_arg1⁰])]: 34 --->
//│ 	case _lh_myRunState_arg1⁰ of {MyState _lh_myRunState_MyState_0⁰ => _lh_myRunState_MyState_0⁰ | _  => error⁰}: 1864
//│ [Unit]: 46 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ [Thunk _lh_apply_arg2⁰ orig⁰]: 62 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [MyState (fun s¹ -> let _lh_matchIdent¹ = myRunState_lh_₁(_lh_myBind_arg1⁰, s¹)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => myRunState_lh_₁(_lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰), _lh_myBind_LH_P2_0⁰) | _  => error⁰})]: 234 --->
//│ 	case _lh_myRunState_arg1⁰ of {MyState _lh_myRunState_MyState_0⁰ => _lh_myRunState_MyState_0⁰ | _  => error⁰}: 1864
//│ [LH_P2 s² s²]: 301 --->
//│ 	case _lh_matchIdent⁰ of {LH_P2 _lh_myEvalState_LH_P2_0⁰ _lh_myEvalState_LH_P2_1⁰ => _lh_myEvalState_LH_P2_1⁰ | _  => error⁰}: 9
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => myRunState_lh_₁(_lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰), _lh_myBind_LH_P2_0⁰) | _  => error⁰}: 231
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_ev_LH_P2_0⁰ _lh_ev_LH_P2_1⁰ => mappend_lh_₅(mappend_lh_₆(pp_lh_₃(_lh_ev_LH_P2_1⁰), [LH_C ' ' [LH_C ' ' [LH_N]]]), ppenv_lh_₁(_lh_ev_LH_P2_0⁰)) | _  => error⁰}: 2413
//│ [MyState (fun s² -> [LH_P2 s² s²])]: 303 --->
//│ 	case _lh_myRunState_arg1⁰ of {MyState _lh_myRunState_MyState_0⁰ => _lh_myRunState_MyState_0⁰ | _  => error⁰}: 1864
//│ [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)]: 357 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)]: 369 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_C h² mappend_lh_₂₄(t², ys²)]: 381 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 394 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C '(' [LH_N]]: 395 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 401 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ')' [LH_N]]: 402 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C h³ mappend_lh_₂₃(t³, ys³)]: 416 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 429 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C '(' [LH_N]]: 430 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 436 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ')' [LH_N]]: 437 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 447 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C '[' [LH_N]]: 448 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 459 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C '=' [LH_N]]: 460 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 470 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 471 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ',' [LH_C ' ' [LH_N]]]: 472 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 484 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ']' [LH_N]]: 485 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 496 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C '(' [LH_N]]: 497 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 503 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ')' [LH_N]]: 504 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 524 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 525 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 527 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'F' [LH_N]]: 528 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'F' [LH_N]]]: 529 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 531 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 532 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'x' [LH_N]]]: 533 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 535 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 536 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'x' [LH_N]]]: 537 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 538 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 539 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 540 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 542 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 543 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 545 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'F' [LH_N]]: 546 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'F' [LH_N]]]: 547 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ [LH_N]: 549 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 550 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'x' [LH_N]]]: 551 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 553 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 554 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'x' [LH_N]]]: 555 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 556 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 557 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 558 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ [LH_N]: 560 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'n' [LH_N]]: 561 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'n' [LH_N]]]: 562 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Con (0 - 1)]: 568 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 569 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)]: 577 --->
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)]: 589 --->
//│ 	case xs⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)] | LH_N  => ys⁵}: 579
//│ [LH_C h⁷ mappend_lh_₁₉(t⁷, ys⁷)]: 601 --->
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)]: 613 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 619 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Con (u'⁰ + v'⁰)]: 685 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰]: 704 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ [Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]: 706 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ [Con 0]: 731 --->
//│ 	case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰}: 1943
//│ 	case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰}: 1951
//│ 	case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰}: 1955
//│ 	case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰}: 1971
//│ 	case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰}: 1987
//│ 	case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰}: 2003
//│ 	case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰}: 2027
//│ 	case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰}: 2043
//│ [Con _lh_eval_Con_0⁰]: 744 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ [Con 0]: 753 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ [LH_N]: 769 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'R' [LH_N]]: 770 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'C' [LH_C 'R' [LH_N]]]: 771 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 772 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 773 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 783 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C '@' [LH_N]]: 784 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 791 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 792 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C '.' [LH_C ' ' [LH_N]]]: 793 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 823 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 824 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C '+' [LH_C ' ' [LH_N]]]: 825 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 826 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 850 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 851 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 874 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C ' ' [LH_N]]: 875 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C 'F' [LH_C ' ' [LH_N]]]: 876 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]]: 877 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 892 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 893 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'N' [LH_C ' ' [LH_N]]]: 894 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 895 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 896 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 897 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 898 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 914 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 915 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'E' [LH_C ' ' [LH_N]]]: 916 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 917 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 918 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 919 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 920 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 945 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ':' [LH_N]]: 946 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ':' [LH_C ':' [LH_N]]]: 947 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 960 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 961 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 963 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'F' [LH_N]]: 964 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'F' [LH_N]]]: 965 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 967 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 968 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'x' [LH_N]]]: 969 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 971 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 972 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'x' [LH_N]]]: 973 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 974 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 975 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 976 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 978 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ [LH_C 'x' [LH_N]]: 979 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ [LH_N]: 981 --->
//│ 	NoCons
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ [LH_C 'F' [LH_N]]: 982 --->
//│ 	NoCons
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ [Var [LH_C 'F' [LH_N]]]: 983 --->
//│ 	NoCons
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 985 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 986 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'x' [LH_N]]]: 987 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 989 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'x' [LH_N]]: 990 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'x' [LH_N]]]: 991 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 992 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 993 --->
//│ 	NoCons
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 994 --->
//│ 	NoCons
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 996 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'n' [LH_N]]: 997 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'n' [LH_N]]]: 998 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Con (0 - 1)]: 1004 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 1005 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 1015 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'R' [LH_N]]: 1016 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'C' [LH_C 'R' [LH_N]]]: 1017 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1018 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1019 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1029 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C '@' [LH_N]]: 1030 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 1037 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 1038 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C '.' [LH_C ' ' [LH_N]]]: 1039 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1069 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 1070 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C '+' [LH_C ' ' [LH_N]]]: 1071 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1072 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1096 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 1097 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1120 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C ' ' [LH_N]]: 1121 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C 'F' [LH_C ' ' [LH_N]]]: 1122 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]]: 1123 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 1138 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 1139 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'N' [LH_C ' ' [LH_N]]]: 1140 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1141 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1142 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1143 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1144 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1160 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 1161 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'E' [LH_C ' ' [LH_N]]]: 1162 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1163 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1164 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1165 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1166 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1191 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ':' [LH_N]]: 1192 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ':' [LH_C ':' [LH_N]]]: 1193 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1453 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C ' ' [LH_N]]: 1454 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C 'n' [LH_C ' ' [LH_N]]]: 1455 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 1456 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 1457 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 1503 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'R' [LH_N]]: 1504 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'C' [LH_C 'R' [LH_N]]]: 1505 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1506 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1507 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1517 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C '@' [LH_N]]: 1518 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 1525 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 1526 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C '.' [LH_C ' ' [LH_N]]]: 1527 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1557 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_C ' ' [LH_N]]: 1558 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_C '+' [LH_C ' ' [LH_N]]]: 1559 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1560 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_N]: 1584 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 1585 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1608 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C ' ' [LH_N]]: 1609 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C 'F' [LH_C ' ' [LH_N]]]: 1610 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]]: 1611 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_N]: 1626 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 1627 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'N' [LH_C ' ' [LH_N]]]: 1628 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1629 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1630 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1631 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1632 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1648 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_N]]: 1649 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'E' [LH_C ' ' [LH_N]]]: 1650 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1651 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1652 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1653 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1654 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1679 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ':' [LH_N]]: 1680 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C ':' [LH_C ':' [LH_N]]]: 1681 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1711 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_C ' ' [LH_N]]: 1712 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_C 'n' [LH_C ' ' [LH_N]]]: 1713 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 1714 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 1715 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_N]: 1753 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'F' [LH_N]]: 1754 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [App lfxx_lh_₃ lfxx_lh_₄]: 1757 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₃ lfxx_lh_₄]]: 1758 --->
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ [LH_N]: 1762 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'm' [LH_N]]: 1763 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'u' [LH_C 'm' [LH_N]]]: 1764 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1767 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'n' [LH_N]]: 1768 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1770 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'n' [LH_N]]: 1771 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'n' [LH_N]]]: 1772 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Con 0]: 1774 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 1776 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'n' [LH_N]]: 1777 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'n' [LH_N]]]: 1778 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 1782 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'm' [LH_N]]: 1783 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'u' [LH_C 'm' [LH_N]]]: 1784 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1785 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1786 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]: 1788 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]: 1789 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]: 1790 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]: 1791 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]: 1792 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 1796 --->
//│ 	case xs⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₉(t⁷, ys⁷)] | LH_N  => ys⁷}: 603
//│ [LH_C '[' [LH_N]]: 1797 --->
//│ 	case xs⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₉(t⁷, ys⁷)] | LH_N  => ys⁷}: 603
//│ [LH_N]: 1808 --->
//│ 	case xs⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)] | LH_N  => ys⁵}: 579
//│ [LH_C '=' [LH_N]]: 1809 --->
//│ 	case xs⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)] | LH_N  => ys⁵}: 579
//│ [LH_N]: 1819 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C ' ' [LH_N]]: 1820 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C ',' [LH_C ' ' [LH_N]]]: 1821 --->
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)]: 1844 --->
//│ 	case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858
//│ [LH_N]: 1877 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ [LH_C 'F' [LH_N]]: 1878 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ [App lfxx_lh_₁ lfxx_lh_₂]: 1881 --->
//│ 	NoCons
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₁ lfxx_lh_₂]]: 1882 --->
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 1886 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'm' [LH_N]]: 1887 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'u' [LH_C 'm' [LH_N]]]: 1888 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1891 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'n' [LH_N]]: 1892 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288
//│ 	case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295
//│ 	case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_N]: 1894 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'n' [LH_N]]: 1895 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'n' [LH_N]]]: 1896 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Con 0]: 1898 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 1900 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'n' [LH_N]]: 1901 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 'n' [LH_N]]]: 1902 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 1906 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'm' [LH_N]]: 1907 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 'u' [LH_C 'm' [LH_N]]]: 1908 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1909 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359
//│ 	case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371
//│ 	case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418
//│ 	case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615
//│ 	case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644
//│ 	case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226
//│ 	case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312
//│ 	case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846
//│ [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1910 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]: 1912 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]: 1913 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]: 1914 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]: 1915 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]: 1916 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [Nothing]: 2061 --->
//│ 	case _lh_myMaybe_arg3⁰ of {Nothing  => _lh_myMaybe_arg1⁰(99) | Just _lh_myMaybe_Just_0⁰ => _lh_myMaybe_arg2⁰(_lh_myMaybe_Just_0⁰) | _  => error⁰}: 2250
//│ [Just _lh_lookup_LH_P2_1⁰]: 2069 --->
//│ 	case _lh_myMaybe_arg3⁰ of {Nothing  => _lh_myMaybe_arg1⁰(99) | Just _lh_myMaybe_Just_0⁰ => _lh_myMaybe_arg2⁰(_lh_myMaybe_Just_0⁰) | _  => error⁰}: 2250
//│ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]]: 2089 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_matchIdent³ of {LH_P2 _lh_ppenv_LH_P2_0⁰ _lh_ppenv_LH_P2_1⁰ => mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(_lh_ppenv_LH_P2_0⁰, [LH_C '=' [LH_N]]), pp_lh_₁(_lh_ppenv_LH_P2_1⁰)), [LH_C ',' [LH_C ' ' [LH_N]]]) | _  => error⁰}: 475
//│ 	case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1262
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_ppenv_LH_P2_0¹ _lh_ppenv_LH_P2_1¹ => mappend_lh_₁₈(mappend_lh_₂₁(mappend_lh_₂₀(_lh_ppenv_LH_P2_0¹, [LH_C '=' [LH_N]]), pp_lh_₈(_lh_ppenv_LH_P2_1¹)), [LH_C ',' [LH_C ' ' [LH_N]]]) | _  => error⁰}: 1824
//│ 	case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰}: 2077
//│ [LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰]: 2091 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ [App fix_lh_₂ partialSum0_lh_₂]: 2379 --->
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ [LH_N]: 2391 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ [LH_N]: 2403 --->
//│ 	case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858
//│ [LH_C ' ' [LH_N]]: 2404 --->
//│ 	case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858
//│ [LH_C ' ' [LH_C ' ' [LH_N]]]: 2405 --->
//│ 	case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858
//│ [App fix_lh_₁ partialSum0_lh_₁]: 2419 --->
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_N]: 2426 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ [LH_C ' ' [LH_N]]: 2427 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ [LH_C 'n' [LH_C ' ' [LH_N]]]: 2428 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 2429 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 2430 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ [Con _lh_simpleEval_Con_0⁰]: 2522 --->
//│ 	NoCons
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleApply_arg2⁰ of {Thunk _lh_simpleApply_Thunk_0⁰ _lh_simpleApply_Thunk_1⁰ => case _lh_simpleApply_Thunk_0⁰ of {Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰) | _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₁₄(mappend_lh_₁₃(mappend_lh_₁₆(mappend_lh_₁₀([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₄(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₇(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 2238
//│ 	case _lh_matchIdent⁵ of {Con _lh_simpleEvalCon_Con_0⁰ => _lh_simpleEvalCon_Con_0⁰ | _  => error⁰(mappend_lh_₈([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(e'⁰)))}: 2317
//│ 	case _lh_matchIdent⁶ of {Con _lh_simpleEvalCon_Con_0¹ => _lh_simpleEvalCon_Con_0¹ | _  => error⁰(mappend_lh_₇([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₂(e'¹)))}: 2367
//│ 	case _lh_showTerm_arg1² of {Con _lh_showTerm_Con_0² => mappend_lh_₄([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0²)) | _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}: 2465
//│ [Con 0]: 2524 --->
//│ 	NoCons
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleApply_arg2⁰ of {Thunk _lh_simpleApply_Thunk_0⁰ _lh_simpleApply_Thunk_1⁰ => case _lh_simpleApply_Thunk_0⁰ of {Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰) | _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₁₄(mappend_lh_₁₃(mappend_lh_₁₆(mappend_lh_₁₀([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₄(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₇(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 2238
//│ 	case _lh_matchIdent⁵ of {Con _lh_simpleEvalCon_Con_0⁰ => _lh_simpleEvalCon_Con_0⁰ | _  => error⁰(mappend_lh_₈([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(e'⁰)))}: 2317
//│ 	case _lh_matchIdent⁶ of {Con _lh_simpleEvalCon_Con_0¹ => _lh_simpleEvalCon_Con_0¹ | _  => error⁰(mappend_lh_₇([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₂(e'¹)))}: 2367
//│ 	case _lh_showTerm_arg1² of {Con _lh_showTerm_Con_0² => mappend_lh_₄([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0²)) | _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}: 2465
//│ [Con (u'² + v'¹)]: 2703 --->
//│ 	NoCons
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleApply_arg2⁰ of {Thunk _lh_simpleApply_Thunk_0⁰ _lh_simpleApply_Thunk_1⁰ => case _lh_simpleApply_Thunk_0⁰ of {Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰) | _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₁₄(mappend_lh_₁₃(mappend_lh_₁₆(mappend_lh_₁₀([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₄(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₇(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 2238
//│ 	case _lh_matchIdent⁵ of {Con _lh_simpleEvalCon_Con_0⁰ => _lh_simpleEvalCon_Con_0⁰ | _  => error⁰(mappend_lh_₈([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(e'⁰)))}: 2317
//│ 	case _lh_matchIdent⁶ of {Con _lh_simpleEvalCon_Con_0¹ => _lh_simpleEvalCon_Con_0¹ | _  => error⁰(mappend_lh_₇([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₂(e'¹)))}: 2367
//│ 	case _lh_showTerm_arg1² of {Con _lh_showTerm_Con_0² => mappend_lh_₄([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0²)) | _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}: 2465
//│ [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰]: 2709 --->
//│ 	NoCons
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleApply_Thunk_0⁰ of {Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰) | _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 2166
//│ [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰]: 2711 --->
//│ 	NoCons
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleApply_arg2⁰ of {Thunk _lh_simpleApply_Thunk_0⁰ _lh_simpleApply_Thunk_1⁰ => case _lh_simpleApply_Thunk_0⁰ of {Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰) | _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₁₄(mappend_lh_₁₃(mappend_lh_₁₆(mappend_lh_₁₀([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₄(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₇(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 2238
//│ 	case _lh_matchIdent⁵ of {Con _lh_simpleEvalCon_Con_0⁰ => _lh_simpleEvalCon_Con_0⁰ | _  => error⁰(mappend_lh_₈([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(e'⁰)))}: 2317
//│ 	case _lh_matchIdent⁶ of {Con _lh_simpleEvalCon_Con_0¹ => _lh_simpleEvalCon_Con_0¹ | _  => error⁰(mappend_lh_₇([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₂(e'¹)))}: 2367
//│ 	case _lh_showTerm_arg1² of {Con _lh_showTerm_Con_0² => mappend_lh_₄([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0²)) | _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}: 2465
//│ [Con 0]: 2734 --->
//│ 	case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰}: 1943
//│ 	case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰}: 1951
//│ 	case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰}: 1955
//│ 	case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰}: 1971
//│ 	case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰}: 1987
//│ 	case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰}: 2003
//│ 	case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰}: 2027
//│ 	case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰}: 2043
//│ [Con head_lh_₂(_lh_mainMonad_arg1⁰)]: 2829 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App sum0_lh_₂ [Con head_lh_₂(_lh_mainMonad_arg1⁰)]]: 2830 --->
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ [LH_N]: 2892 --->
//│ 	NoCons
//│ 	DeadCodeCons
//│ 	case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214
//│ 	case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345
//│ 	case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079
//│ [Con head_lh_₁(_lh_mainSimple_arg1⁰)]: 2898 --->
//│ 	DeadCodeCons
//│ 	NoCons
//│ 	case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142
//│ 	case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758
//│ 	case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956
//│ 	case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690
//│ 	case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [App sum0_lh_₁ [Con head_lh_₁(_lh_mainSimple_arg1⁰)]]: 2899 --->
//│ 	case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754
//│ [LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]]: 2907 --->
//│ 	case ls¹ of {LH_C h²⁷ t²⁸ => h²⁷ | LH_N  => error⁰}: 2760
//│ 	case _lh_null_arg1¹ of {LH_N  => [True] | LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False] | _  => error⁰}: 2766
//│ [LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]]: 2912 --->
//│ 	case ls⁰ of {LH_C h²⁶ t²⁷ => h²⁶ | LH_N  => error⁰}: 2375
//│ 	case _lh_null_arg1⁰ of {LH_N  => [True] | LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False] | _  => error⁰}: 2384
//│ ------------------
//│ case _lh_matchIdent⁰ of {LH_P2 _lh_myEvalState_LH_P2_0⁰ _lh_myEvalState_LH_P2_1⁰ => _lh_myEvalState_LH_P2_1⁰ | _  => error⁰}: 9 --->
//│ 	[LH_P2 s⁰ _lh_myReturn_arg1⁰]: 32
//│ 	[LH_P2 s² s²]: 301
//│ case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 142 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Var [LH_C 'x' [LH_N]]]: 537
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 538
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 540
//│ 	[Var [LH_C 'x' [LH_N]]]: 555
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 556
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 569
//│ 	[Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰]: 704
//│ 	[Var [LH_C 'x' [LH_N]]]: 973
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 974
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 976
//│ 	[Var [LH_C 'x' [LH_N]]]: 991
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 992
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 1005
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]: 1792
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]: 1916
//│ 	[Con head_lh_₂(_lh_mainMonad_arg1⁰)]: 2829
//│ 	[Con head_lh_₁(_lh_mainSimple_arg1⁰)]: 2898
//│ case _lh_apply_arg1⁰ of {Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰))))) | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 214 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰]: 21
//│ 	[Unit]: 46
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Con (u'⁰ + v'⁰)]: 685
//│ 	[Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]: 706
//│ 	[Con _lh_eval_Con_0⁰]: 744
//│ 	[Con 0]: 753
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰]: 2091
//│ 	[LH_N]: 2391
//│ 	[LH_N]: 2892
//│ case _lh_matchIdent¹ of {LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => myRunState_lh_₁(_lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰), _lh_myBind_LH_P2_0⁰) | _  => error⁰}: 231 --->
//│ 	[LH_P2 s⁰ _lh_myReturn_arg1⁰]: 32
//│ 	[LH_P2 s² s²]: 301
//│ case _lh_matchIdent² of {Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰) | _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}: 345 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰]: 21
//│ 	[Unit]: 46
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Con (u'⁰ + v'⁰)]: 685
//│ 	[Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]: 706
//│ 	[Con _lh_eval_Con_0⁰]: 744
//│ 	[Con 0]: 753
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰]: 2091
//│ 	[LH_N]: 2391
//│ 	[LH_N]: 2892
//│ case xs⁰ of {LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)] | LH_N  => ys⁰}: 359 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)]: 357
//│ 	[LH_C h² mappend_lh_₂₄(t², ys²)]: 381
//│ 	[LH_N]: 394
//│ 	[LH_C '(' [LH_N]]: 395
//│ 	[LH_N]: 401
//│ 	[LH_C ')' [LH_N]]: 402
//│ 	[LH_C h³ mappend_lh_₂₃(t³, ys³)]: 416
//│ 	[LH_N]: 429
//│ 	[LH_C '(' [LH_N]]: 430
//│ 	[LH_N]: 436
//│ 	[LH_C ')' [LH_N]]: 437
//│ 	[LH_N]: 447
//│ 	[LH_C '[' [LH_N]]: 448
//│ 	[LH_N]: 459
//│ 	[LH_C '=' [LH_N]]: 460
//│ 	[LH_N]: 470
//│ 	[LH_C ' ' [LH_N]]: 471
//│ 	[LH_C ',' [LH_C ' ' [LH_N]]]: 472
//│ 	[LH_N]: 484
//│ 	[LH_C ']' [LH_N]]: 485
//│ 	[LH_N]: 496
//│ 	[LH_C '(' [LH_N]]: 497
//│ 	[LH_N]: 503
//│ 	[LH_C ')' [LH_N]]: 504
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 527
//│ 	[LH_C 'F' [LH_N]]: 528
//│ 	[LH_N]: 531
//│ 	[LH_C 'x' [LH_N]]: 532
//│ 	[LH_N]: 535
//│ 	[LH_C 'x' [LH_N]]: 536
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 545
//│ 	[LH_C 'F' [LH_N]]: 546
//│ 	[LH_N]: 549
//│ 	[LH_C 'x' [LH_N]]: 550
//│ 	[LH_N]: 553
//│ 	[LH_C 'x' [LH_N]]: 554
//│ 	[LH_N]: 560
//│ 	[LH_C 'n' [LH_N]]: 561
//│ 	[LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)]: 613
//│ 	[LH_N]: 619
//│ 	[LH_N]: 769
//│ 	[LH_C 'R' [LH_N]]: 770
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 771
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 772
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 773
//│ 	[LH_N]: 783
//│ 	[LH_C '@' [LH_N]]: 784
//│ 	[LH_N]: 791
//│ 	[LH_C ' ' [LH_N]]: 792
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 793
//│ 	[LH_N]: 823
//│ 	[LH_C ' ' [LH_N]]: 824
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 825
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 826
//│ 	[LH_N]: 850
//│ 	[LH_C ' ' [LH_N]]: 851
//│ 	[LH_N]: 874
//│ 	[LH_C ' ' [LH_N]]: 875
//│ 	[LH_C 'F' [LH_C ' ' [LH_N]]]: 876
//│ 	[LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]]: 877
//│ 	[LH_N]: 892
//│ 	[LH_C ' ' [LH_N]]: 893
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 894
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 895
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 896
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 897
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 898
//│ 	[LH_N]: 914
//│ 	[LH_C ' ' [LH_N]]: 915
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 916
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 917
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 918
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 919
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 920
//│ 	[LH_N]: 945
//│ 	[LH_C ':' [LH_N]]: 946
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 947
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 963
//│ 	[LH_C 'F' [LH_N]]: 964
//│ 	[LH_N]: 967
//│ 	[LH_C 'x' [LH_N]]: 968
//│ 	[LH_N]: 971
//│ 	[LH_C 'x' [LH_N]]: 972
//│ 	[LH_N]: 978
//│ 	[LH_C 'x' [LH_N]]: 979
//│ 	[LH_N]: 985
//│ 	[LH_C 'x' [LH_N]]: 986
//│ 	[LH_N]: 989
//│ 	[LH_C 'x' [LH_N]]: 990
//│ 	[LH_N]: 996
//│ 	[LH_C 'n' [LH_N]]: 997
//│ 	[LH_N]: 1015
//│ 	[LH_C 'R' [LH_N]]: 1016
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1017
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1018
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1019
//│ 	[LH_N]: 1029
//│ 	[LH_C '@' [LH_N]]: 1030
//│ 	[LH_N]: 1037
//│ 	[LH_C ' ' [LH_N]]: 1038
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1039
//│ 	[LH_N]: 1069
//│ 	[LH_C ' ' [LH_N]]: 1070
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 1071
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1072
//│ 	[LH_N]: 1096
//│ 	[LH_C ' ' [LH_N]]: 1097
//│ 	[LH_N]: 1120
//│ 	[LH_C ' ' [LH_N]]: 1121
//│ 	[LH_C 'F' [LH_C ' ' [LH_N]]]: 1122
//│ 	[LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]]: 1123
//│ 	[LH_N]: 1138
//│ 	[LH_C ' ' [LH_N]]: 1139
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1140
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1141
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1142
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1143
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1144
//│ 	[LH_N]: 1160
//│ 	[LH_C ' ' [LH_N]]: 1161
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1162
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1163
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1164
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1165
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1166
//│ 	[LH_N]: 1191
//│ 	[LH_C ':' [LH_N]]: 1192
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1193
//│ 	[LH_N]: 1453
//│ 	[LH_C ' ' [LH_N]]: 1454
//│ 	[LH_C 'n' [LH_C ' ' [LH_N]]]: 1455
//│ 	[LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 1456
//│ 	[LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 1457
//│ 	[LH_N]: 1503
//│ 	[LH_C 'R' [LH_N]]: 1504
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1505
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1506
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1507
//│ 	[LH_N]: 1517
//│ 	[LH_C '@' [LH_N]]: 1518
//│ 	[LH_N]: 1525
//│ 	[LH_C ' ' [LH_N]]: 1526
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1527
//│ 	[LH_N]: 1584
//│ 	[LH_C ' ' [LH_N]]: 1585
//│ 	[LH_N]: 1608
//│ 	[LH_C ' ' [LH_N]]: 1609
//│ 	[LH_C 'F' [LH_C ' ' [LH_N]]]: 1610
//│ 	[LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]]: 1611
//│ 	[LH_N]: 1626
//│ 	[LH_C ' ' [LH_N]]: 1627
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1628
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1629
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1630
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1631
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1632
//│ 	[LH_N]: 1648
//│ 	[LH_C ' ' [LH_N]]: 1649
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1650
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1651
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1652
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1653
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1654
//│ 	[LH_N]: 1679
//│ 	[LH_C ':' [LH_N]]: 1680
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1681
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1770
//│ 	[LH_C 'n' [LH_N]]: 1771
//│ 	[LH_N]: 1776
//│ 	[LH_C 'n' [LH_N]]: 1777
//│ 	[LH_N]: 1782
//│ 	[LH_C 'm' [LH_N]]: 1783
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1784
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1785
//│ 	[LH_N]: 1819
//│ 	[LH_C ' ' [LH_N]]: 1820
//│ 	[LH_C ',' [LH_C ' ' [LH_N]]]: 1821
//│ 	[LH_N]: 1877
//│ 	[LH_C 'F' [LH_N]]: 1878
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ 	[LH_N]: 1894
//│ 	[LH_C 'n' [LH_N]]: 1895
//│ 	[LH_N]: 1900
//│ 	[LH_C 'n' [LH_N]]: 1901
//│ 	[LH_N]: 1906
//│ 	[LH_C 'm' [LH_N]]: 1907
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1908
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1909
//│ case xs¹ of {LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)] | LH_N  => ys¹}: 371 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)]: 357
//│ 	[LH_C h² mappend_lh_₂₄(t², ys²)]: 381
//│ 	[LH_N]: 401
//│ 	[LH_C ')' [LH_N]]: 402
//│ 	[LH_C h³ mappend_lh_₂₃(t³, ys³)]: 416
//│ 	[LH_N]: 436
//│ 	[LH_C ')' [LH_N]]: 437
//│ 	[LH_N]: 459
//│ 	[LH_C '=' [LH_N]]: 460
//│ 	[LH_N]: 470
//│ 	[LH_C ' ' [LH_N]]: 471
//│ 	[LH_C ',' [LH_C ' ' [LH_N]]]: 472
//│ 	[LH_N]: 484
//│ 	[LH_C ']' [LH_N]]: 485
//│ 	[LH_N]: 503
//│ 	[LH_C ')' [LH_N]]: 504
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 527
//│ 	[LH_C 'F' [LH_N]]: 528
//│ 	[LH_N]: 531
//│ 	[LH_C 'x' [LH_N]]: 532
//│ 	[LH_N]: 535
//│ 	[LH_C 'x' [LH_N]]: 536
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 545
//│ 	[LH_C 'F' [LH_N]]: 546
//│ 	[LH_N]: 549
//│ 	[LH_C 'x' [LH_N]]: 550
//│ 	[LH_N]: 553
//│ 	[LH_C 'x' [LH_N]]: 554
//│ 	[LH_N]: 560
//│ 	[LH_C 'n' [LH_N]]: 561
//│ 	[LH_N]: 619
//│ 	[LH_N]: 769
//│ 	[LH_C 'R' [LH_N]]: 770
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 771
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 772
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 773
//│ 	[LH_N]: 791
//│ 	[LH_C ' ' [LH_N]]: 792
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 793
//│ 	[LH_N]: 823
//│ 	[LH_C ' ' [LH_N]]: 824
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 825
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 826
//│ 	[LH_N]: 850
//│ 	[LH_C ' ' [LH_N]]: 851
//│ 	[LH_N]: 892
//│ 	[LH_C ' ' [LH_N]]: 893
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 894
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 895
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 896
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 897
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 898
//│ 	[LH_N]: 914
//│ 	[LH_C ' ' [LH_N]]: 915
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 916
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 917
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 918
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 919
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 920
//│ 	[LH_N]: 945
//│ 	[LH_C ':' [LH_N]]: 946
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 947
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 963
//│ 	[LH_C 'F' [LH_N]]: 964
//│ 	[LH_N]: 967
//│ 	[LH_C 'x' [LH_N]]: 968
//│ 	[LH_N]: 971
//│ 	[LH_C 'x' [LH_N]]: 972
//│ 	[LH_N]: 985
//│ 	[LH_C 'x' [LH_N]]: 986
//│ 	[LH_N]: 989
//│ 	[LH_C 'x' [LH_N]]: 990
//│ 	[LH_N]: 996
//│ 	[LH_C 'n' [LH_N]]: 997
//│ 	[LH_N]: 1015
//│ 	[LH_C 'R' [LH_N]]: 1016
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1017
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1018
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1019
//│ 	[LH_N]: 1037
//│ 	[LH_C ' ' [LH_N]]: 1038
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1039
//│ 	[LH_N]: 1069
//│ 	[LH_C ' ' [LH_N]]: 1070
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 1071
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1072
//│ 	[LH_N]: 1096
//│ 	[LH_C ' ' [LH_N]]: 1097
//│ 	[LH_N]: 1138
//│ 	[LH_C ' ' [LH_N]]: 1139
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1140
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1141
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1142
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1143
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1144
//│ 	[LH_N]: 1160
//│ 	[LH_C ' ' [LH_N]]: 1161
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1162
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1163
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1164
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1165
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1166
//│ 	[LH_N]: 1191
//│ 	[LH_C ':' [LH_N]]: 1192
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1193
//│ 	[LH_N]: 1503
//│ 	[LH_C 'R' [LH_N]]: 1504
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1505
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1506
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1507
//│ 	[LH_N]: 1525
//│ 	[LH_C ' ' [LH_N]]: 1526
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1527
//│ 	[LH_N]: 1584
//│ 	[LH_C ' ' [LH_N]]: 1585
//│ 	[LH_N]: 1626
//│ 	[LH_C ' ' [LH_N]]: 1627
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1628
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1629
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1630
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1631
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1632
//│ 	[LH_N]: 1648
//│ 	[LH_C ' ' [LH_N]]: 1649
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1650
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1651
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1652
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1653
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1654
//│ 	[LH_N]: 1679
//│ 	[LH_C ':' [LH_N]]: 1680
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1681
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1770
//│ 	[LH_C 'n' [LH_N]]: 1771
//│ 	[LH_N]: 1776
//│ 	[LH_C 'n' [LH_N]]: 1777
//│ 	[LH_N]: 1782
//│ 	[LH_C 'm' [LH_N]]: 1783
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1784
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1785
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ 	[LH_N]: 1894
//│ 	[LH_C 'n' [LH_N]]: 1895
//│ 	[LH_N]: 1900
//│ 	[LH_C 'n' [LH_N]]: 1901
//│ 	[LH_N]: 1906
//│ 	[LH_C 'm' [LH_N]]: 1907
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1908
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1909
//│ case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383 --->
//│ 	[LH_C h¹ mappend_lh_₂₅(t¹, ys¹)]: 369
//│ 	[LH_N]: 1557
//│ 	[LH_C ' ' [LH_N]]: 1558
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 1559
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1560
//│ case xs³ of {LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys³)] | LH_N  => ys³}: 418 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)]: 357
//│ 	[LH_C h² mappend_lh_₂₄(t², ys²)]: 381
//│ 	[LH_N]: 401
//│ 	[LH_C ')' [LH_N]]: 402
//│ 	[LH_C h³ mappend_lh_₂₃(t³, ys³)]: 416
//│ 	[LH_N]: 436
//│ 	[LH_C ')' [LH_N]]: 437
//│ 	[LH_N]: 459
//│ 	[LH_C '=' [LH_N]]: 460
//│ 	[LH_N]: 470
//│ 	[LH_C ' ' [LH_N]]: 471
//│ 	[LH_C ',' [LH_C ' ' [LH_N]]]: 472
//│ 	[LH_N]: 484
//│ 	[LH_C ']' [LH_N]]: 485
//│ 	[LH_N]: 503
//│ 	[LH_C ')' [LH_N]]: 504
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 527
//│ 	[LH_C 'F' [LH_N]]: 528
//│ 	[LH_N]: 531
//│ 	[LH_C 'x' [LH_N]]: 532
//│ 	[LH_N]: 535
//│ 	[LH_C 'x' [LH_N]]: 536
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 545
//│ 	[LH_C 'F' [LH_N]]: 546
//│ 	[LH_N]: 549
//│ 	[LH_C 'x' [LH_N]]: 550
//│ 	[LH_N]: 553
//│ 	[LH_C 'x' [LH_N]]: 554
//│ 	[LH_N]: 560
//│ 	[LH_C 'n' [LH_N]]: 561
//│ 	[LH_N]: 619
//│ 	[LH_N]: 769
//│ 	[LH_C 'R' [LH_N]]: 770
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 771
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 772
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 773
//│ 	[LH_N]: 791
//│ 	[LH_C ' ' [LH_N]]: 792
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 793
//│ 	[LH_N]: 823
//│ 	[LH_C ' ' [LH_N]]: 824
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 825
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 826
//│ 	[LH_N]: 850
//│ 	[LH_C ' ' [LH_N]]: 851
//│ 	[LH_N]: 892
//│ 	[LH_C ' ' [LH_N]]: 893
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 894
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 895
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 896
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 897
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 898
//│ 	[LH_N]: 914
//│ 	[LH_C ' ' [LH_N]]: 915
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 916
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 917
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 918
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 919
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 920
//│ 	[LH_N]: 945
//│ 	[LH_C ':' [LH_N]]: 946
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 947
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 963
//│ 	[LH_C 'F' [LH_N]]: 964
//│ 	[LH_N]: 967
//│ 	[LH_C 'x' [LH_N]]: 968
//│ 	[LH_N]: 971
//│ 	[LH_C 'x' [LH_N]]: 972
//│ 	[LH_N]: 985
//│ 	[LH_C 'x' [LH_N]]: 986
//│ 	[LH_N]: 989
//│ 	[LH_C 'x' [LH_N]]: 990
//│ 	[LH_N]: 996
//│ 	[LH_C 'n' [LH_N]]: 997
//│ 	[LH_N]: 1015
//│ 	[LH_C 'R' [LH_N]]: 1016
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1017
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1018
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1019
//│ 	[LH_N]: 1037
//│ 	[LH_C ' ' [LH_N]]: 1038
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1039
//│ 	[LH_N]: 1069
//│ 	[LH_C ' ' [LH_N]]: 1070
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 1071
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1072
//│ 	[LH_N]: 1096
//│ 	[LH_C ' ' [LH_N]]: 1097
//│ 	[LH_N]: 1138
//│ 	[LH_C ' ' [LH_N]]: 1139
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1140
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1141
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1142
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1143
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1144
//│ 	[LH_N]: 1160
//│ 	[LH_C ' ' [LH_N]]: 1161
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1162
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1163
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1164
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1165
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1166
//│ 	[LH_N]: 1191
//│ 	[LH_C ':' [LH_N]]: 1192
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1193
//│ 	[LH_N]: 1503
//│ 	[LH_C 'R' [LH_N]]: 1504
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1505
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1506
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1507
//│ 	[LH_N]: 1525
//│ 	[LH_C ' ' [LH_N]]: 1526
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1527
//│ 	[LH_N]: 1584
//│ 	[LH_C ' ' [LH_N]]: 1585
//│ 	[LH_N]: 1626
//│ 	[LH_C ' ' [LH_N]]: 1627
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1628
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1629
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1630
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1631
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1632
//│ 	[LH_N]: 1648
//│ 	[LH_C ' ' [LH_N]]: 1649
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1650
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1651
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1652
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1653
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1654
//│ 	[LH_N]: 1679
//│ 	[LH_C ':' [LH_N]]: 1680
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1681
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1770
//│ 	[LH_C 'n' [LH_N]]: 1771
//│ 	[LH_N]: 1776
//│ 	[LH_C 'n' [LH_N]]: 1777
//│ 	[LH_N]: 1782
//│ 	[LH_C 'm' [LH_N]]: 1783
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1784
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1785
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ 	[LH_N]: 1894
//│ 	[LH_C 'n' [LH_N]]: 1895
//│ 	[LH_N]: 1900
//│ 	[LH_C 'n' [LH_N]]: 1901
//│ 	[LH_N]: 1906
//│ 	[LH_C 'm' [LH_N]]: 1907
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1908
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1909
//│ case _lh_matchIdent³ of {LH_P2 _lh_ppenv_LH_P2_0⁰ _lh_ppenv_LH_P2_1⁰ => mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(_lh_ppenv_LH_P2_0⁰, [LH_C '=' [LH_N]]), pp_lh_₁(_lh_ppenv_LH_P2_1⁰)), [LH_C ',' [LH_C ' ' [LH_N]]]) | _  => error⁰}: 475 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰]: 19
//│ 	[LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]]: 2089
//│ case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520 --->
//│ 	[LH_N]: 1711
//│ 	[LH_C ' ' [LH_N]]: 1712
//│ 	[LH_C 'n' [LH_C ' ' [LH_N]]]: 1713
//│ 	[LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 1714
//│ 	[LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 1715
//│ case xs⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)] | LH_N  => ys⁵}: 579 --->
//│ 	[LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)]: 589
//│ 	[LH_N]: 1808
//│ 	[LH_C '=' [LH_N]]: 1809
//│ case xs⁶ of {LH_C h⁶ t⁶ => [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)] | LH_N  => ys⁶}: 591 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 978
//│ 	[LH_C 'x' [LH_N]]: 979
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1877
//│ 	[LH_C 'F' [LH_N]]: 1878
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ case xs⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₉(t⁷, ys⁷)] | LH_N  => ys⁷}: 603 --->
//│ 	[LH_N]: 1796
//│ 	[LH_C '[' [LH_N]]: 1797
//│ case xs⁸ of {LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys⁸)] | LH_N  => ys⁸}: 615 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)]: 357
//│ 	[LH_C h² mappend_lh_₂₄(t², ys²)]: 381
//│ 	[LH_N]: 401
//│ 	[LH_C ')' [LH_N]]: 402
//│ 	[LH_C h³ mappend_lh_₂₃(t³, ys³)]: 416
//│ 	[LH_N]: 436
//│ 	[LH_C ')' [LH_N]]: 437
//│ 	[LH_N]: 459
//│ 	[LH_C '=' [LH_N]]: 460
//│ 	[LH_N]: 470
//│ 	[LH_C ' ' [LH_N]]: 471
//│ 	[LH_C ',' [LH_C ' ' [LH_N]]]: 472
//│ 	[LH_N]: 484
//│ 	[LH_C ']' [LH_N]]: 485
//│ 	[LH_N]: 503
//│ 	[LH_C ')' [LH_N]]: 504
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 527
//│ 	[LH_C 'F' [LH_N]]: 528
//│ 	[LH_N]: 531
//│ 	[LH_C 'x' [LH_N]]: 532
//│ 	[LH_N]: 535
//│ 	[LH_C 'x' [LH_N]]: 536
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 545
//│ 	[LH_C 'F' [LH_N]]: 546
//│ 	[LH_N]: 549
//│ 	[LH_C 'x' [LH_N]]: 550
//│ 	[LH_N]: 553
//│ 	[LH_C 'x' [LH_N]]: 554
//│ 	[LH_N]: 560
//│ 	[LH_C 'n' [LH_N]]: 561
//│ 	[LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)]: 577
//│ 	[LH_N]: 619
//│ 	[LH_N]: 769
//│ 	[LH_C 'R' [LH_N]]: 770
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 771
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 772
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 773
//│ 	[LH_N]: 791
//│ 	[LH_C ' ' [LH_N]]: 792
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 793
//│ 	[LH_N]: 823
//│ 	[LH_C ' ' [LH_N]]: 824
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 825
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 826
//│ 	[LH_N]: 850
//│ 	[LH_C ' ' [LH_N]]: 851
//│ 	[LH_N]: 892
//│ 	[LH_C ' ' [LH_N]]: 893
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 894
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 895
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 896
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 897
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 898
//│ 	[LH_N]: 914
//│ 	[LH_C ' ' [LH_N]]: 915
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 916
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 917
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 918
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 919
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 920
//│ 	[LH_N]: 945
//│ 	[LH_C ':' [LH_N]]: 946
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 947
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 963
//│ 	[LH_C 'F' [LH_N]]: 964
//│ 	[LH_N]: 967
//│ 	[LH_C 'x' [LH_N]]: 968
//│ 	[LH_N]: 971
//│ 	[LH_C 'x' [LH_N]]: 972
//│ 	[LH_N]: 985
//│ 	[LH_C 'x' [LH_N]]: 986
//│ 	[LH_N]: 989
//│ 	[LH_C 'x' [LH_N]]: 990
//│ 	[LH_N]: 996
//│ 	[LH_C 'n' [LH_N]]: 997
//│ 	[LH_N]: 1015
//│ 	[LH_C 'R' [LH_N]]: 1016
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1017
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1018
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1019
//│ 	[LH_N]: 1037
//│ 	[LH_C ' ' [LH_N]]: 1038
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1039
//│ 	[LH_N]: 1069
//│ 	[LH_C ' ' [LH_N]]: 1070
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 1071
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1072
//│ 	[LH_N]: 1096
//│ 	[LH_C ' ' [LH_N]]: 1097
//│ 	[LH_N]: 1138
//│ 	[LH_C ' ' [LH_N]]: 1139
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1140
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1141
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1142
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1143
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1144
//│ 	[LH_N]: 1160
//│ 	[LH_C ' ' [LH_N]]: 1161
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1162
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1163
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1164
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1165
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1166
//│ 	[LH_N]: 1191
//│ 	[LH_C ':' [LH_N]]: 1192
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1193
//│ 	[LH_N]: 1503
//│ 	[LH_C 'R' [LH_N]]: 1504
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1505
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1506
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1507
//│ 	[LH_N]: 1525
//│ 	[LH_C ' ' [LH_N]]: 1526
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1527
//│ 	[LH_N]: 1584
//│ 	[LH_C ' ' [LH_N]]: 1585
//│ 	[LH_N]: 1626
//│ 	[LH_C ' ' [LH_N]]: 1627
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1628
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1629
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1630
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1631
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1632
//│ 	[LH_N]: 1648
//│ 	[LH_C ' ' [LH_N]]: 1649
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1650
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1651
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1652
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1653
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1654
//│ 	[LH_N]: 1679
//│ 	[LH_C ':' [LH_N]]: 1680
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1681
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1770
//│ 	[LH_C 'n' [LH_N]]: 1771
//│ 	[LH_N]: 1776
//│ 	[LH_C 'n' [LH_N]]: 1777
//│ 	[LH_N]: 1782
//│ 	[LH_C 'm' [LH_N]]: 1783
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1784
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1785
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ 	[LH_N]: 1894
//│ 	[LH_C 'n' [LH_N]]: 1895
//│ 	[LH_N]: 1900
//│ 	[LH_C 'n' [LH_N]]: 1901
//│ 	[LH_N]: 1906
//│ 	[LH_C 'm' [LH_N]]: 1907
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1908
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1909
//│ case _lh_flatMap_arg2⁰ of {LH_N  => [LH_N] | LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰)) | _  => error⁰}: 632 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰]: 21
//│ 	[Unit]: 46
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Con (u'⁰ + v'⁰)]: 685
//│ 	[Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]: 706
//│ 	[Con _lh_eval_Con_0⁰]: 744
//│ 	[Con 0]: 753
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰]: 2091
//│ 	[LH_N]: 2391
//│ 	[LH_N]: 2892
//│ case xs⁹ of {LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁹)] | LH_N  => ys⁹}: 644 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)]: 357
//│ 	[LH_C h² mappend_lh_₂₄(t², ys²)]: 381
//│ 	[LH_N]: 401
//│ 	[LH_C ')' [LH_N]]: 402
//│ 	[LH_C h³ mappend_lh_₂₃(t³, ys³)]: 416
//│ 	[LH_N]: 436
//│ 	[LH_C ')' [LH_N]]: 437
//│ 	[LH_N]: 459
//│ 	[LH_C '=' [LH_N]]: 460
//│ 	[LH_N]: 470
//│ 	[LH_C ' ' [LH_N]]: 471
//│ 	[LH_C ',' [LH_C ' ' [LH_N]]]: 472
//│ 	[LH_N]: 484
//│ 	[LH_C ']' [LH_N]]: 485
//│ 	[LH_N]: 503
//│ 	[LH_C ')' [LH_N]]: 504
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 527
//│ 	[LH_C 'F' [LH_N]]: 528
//│ 	[LH_N]: 531
//│ 	[LH_C 'x' [LH_N]]: 532
//│ 	[LH_N]: 535
//│ 	[LH_C 'x' [LH_N]]: 536
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 545
//│ 	[LH_C 'F' [LH_N]]: 546
//│ 	[LH_N]: 549
//│ 	[LH_C 'x' [LH_N]]: 550
//│ 	[LH_N]: 553
//│ 	[LH_C 'x' [LH_N]]: 554
//│ 	[LH_N]: 560
//│ 	[LH_C 'n' [LH_N]]: 561
//│ 	[LH_C h⁷ mappend_lh_₁₉(t⁷, ys⁷)]: 601
//│ 	[LH_N]: 619
//│ 	[LH_N]: 769
//│ 	[LH_C 'R' [LH_N]]: 770
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 771
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 772
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 773
//│ 	[LH_N]: 791
//│ 	[LH_C ' ' [LH_N]]: 792
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 793
//│ 	[LH_N]: 823
//│ 	[LH_C ' ' [LH_N]]: 824
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 825
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 826
//│ 	[LH_N]: 850
//│ 	[LH_C ' ' [LH_N]]: 851
//│ 	[LH_N]: 892
//│ 	[LH_C ' ' [LH_N]]: 893
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 894
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 895
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 896
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 897
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 898
//│ 	[LH_N]: 914
//│ 	[LH_C ' ' [LH_N]]: 915
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 916
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 917
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 918
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 919
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 920
//│ 	[LH_N]: 945
//│ 	[LH_C ':' [LH_N]]: 946
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 947
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 963
//│ 	[LH_C 'F' [LH_N]]: 964
//│ 	[LH_N]: 967
//│ 	[LH_C 'x' [LH_N]]: 968
//│ 	[LH_N]: 971
//│ 	[LH_C 'x' [LH_N]]: 972
//│ 	[LH_N]: 985
//│ 	[LH_C 'x' [LH_N]]: 986
//│ 	[LH_N]: 989
//│ 	[LH_C 'x' [LH_N]]: 990
//│ 	[LH_N]: 996
//│ 	[LH_C 'n' [LH_N]]: 997
//│ 	[LH_N]: 1015
//│ 	[LH_C 'R' [LH_N]]: 1016
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1017
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1018
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1019
//│ 	[LH_N]: 1037
//│ 	[LH_C ' ' [LH_N]]: 1038
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1039
//│ 	[LH_N]: 1069
//│ 	[LH_C ' ' [LH_N]]: 1070
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 1071
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1072
//│ 	[LH_N]: 1096
//│ 	[LH_C ' ' [LH_N]]: 1097
//│ 	[LH_N]: 1138
//│ 	[LH_C ' ' [LH_N]]: 1139
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1140
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1141
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1142
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1143
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1144
//│ 	[LH_N]: 1160
//│ 	[LH_C ' ' [LH_N]]: 1161
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1162
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1163
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1164
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1165
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1166
//│ 	[LH_N]: 1191
//│ 	[LH_C ':' [LH_N]]: 1192
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1193
//│ 	[LH_N]: 1503
//│ 	[LH_C 'R' [LH_N]]: 1504
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1505
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1506
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1507
//│ 	[LH_N]: 1525
//│ 	[LH_C ' ' [LH_N]]: 1526
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1527
//│ 	[LH_N]: 1584
//│ 	[LH_C ' ' [LH_N]]: 1585
//│ 	[LH_N]: 1626
//│ 	[LH_C ' ' [LH_N]]: 1627
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1628
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1629
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1630
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1631
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1632
//│ 	[LH_N]: 1648
//│ 	[LH_C ' ' [LH_N]]: 1649
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1650
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1651
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1652
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1653
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1654
//│ 	[LH_N]: 1679
//│ 	[LH_C ':' [LH_N]]: 1680
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1681
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1770
//│ 	[LH_C 'n' [LH_N]]: 1771
//│ 	[LH_N]: 1776
//│ 	[LH_C 'n' [LH_N]]: 1777
//│ 	[LH_N]: 1782
//│ 	[LH_C 'm' [LH_N]]: 1783
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1784
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1785
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ 	[LH_N]: 1894
//│ 	[LH_C 'n' [LH_N]]: 1895
//│ 	[LH_N]: 1900
//│ 	[LH_C 'n' [LH_N]]: 1901
//│ 	[LH_N]: 1906
//│ 	[LH_C 'm' [LH_N]]: 1907
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1908
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1909
//│ case _lh_eval_arg1⁰ of {Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹⁰ -> traverseTerm_lh_₁(t¹⁰))))) | Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁰ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'⁰ -> myReturn_lh_₁([Con (u'⁰ + v'⁰)]))))) | Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰)) | Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env³ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]))) | App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'¹ -> apply_lh_₁(u'¹, _lh_eval_App_1⁰))) | IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val⁰ -> if eqTerm_lh_₁(val⁰, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰))) | Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰]) | Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy¹ -> myReturn_lh_₁([Con 0]))) | _  => error⁰}: 758 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰]: 21
//│ 	[Unit]: 46
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Var [LH_C 'F' [LH_N]]]: 529
//│ 	[Var [LH_C 'x' [LH_N]]]: 533
//│ 	[Var [LH_C 'x' [LH_N]]]: 537
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 538
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 539
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 540
//│ 	[Var [LH_C 'F' [LH_N]]]: 547
//│ 	[Var [LH_C 'x' [LH_N]]]: 551
//│ 	[Var [LH_C 'x' [LH_N]]]: 555
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 556
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 557
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 558
//│ 	[Var [LH_C 'n' [LH_N]]]: 562
//│ 	[Con (0 - 1)]: 568
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 569
//│ 	[Con (u'⁰ + v'⁰)]: 685
//│ 	[Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰]: 704
//│ 	[Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]: 706
//│ 	[Con _lh_eval_Con_0⁰]: 744
//│ 	[Con 0]: 753
//│ 	[Var [LH_C 'F' [LH_N]]]: 965
//│ 	[Var [LH_C 'x' [LH_N]]]: 969
//│ 	[Var [LH_C 'x' [LH_N]]]: 973
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 974
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 975
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 976
//│ 	[Var [LH_C 'x' [LH_N]]]: 987
//│ 	[Var [LH_C 'x' [LH_N]]]: 991
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 992
//│ 	[Var [LH_C 'n' [LH_N]]]: 998
//│ 	[Con (0 - 1)]: 1004
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 1005
//│ 	[App lfxx_lh_₃ lfxx_lh_₄]: 1757
//│ 	[Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₃ lfxx_lh_₄]]: 1758
//│ 	[Var [LH_C 'n' [LH_N]]]: 1772
//│ 	[Con 0]: 1774
//│ 	[Var [LH_C 'n' [LH_N]]]: 1778
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1786
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]: 1788
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]: 1789
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]: 1790
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]: 1791
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]: 1792
//│ 	[Var [LH_C 'n' [LH_N]]]: 1896
//│ 	[Con 0]: 1898
//│ 	[Var [LH_C 'n' [LH_N]]]: 1902
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1910
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]: 1912
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]: 1913
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]: 1914
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]: 1915
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]: 1916
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰]: 2091
//│ 	[App fix_lh_₂ partialSum0_lh_₂]: 2379
//│ 	[LH_N]: 2391
//│ 	[Con head_lh_₂(_lh_mainMonad_arg1⁰)]: 2829
//│ 	[App sum0_lh_₂ [Con head_lh_₂(_lh_mainMonad_arg1⁰)]]: 2830
//│ 	[LH_N]: 2892
//│ 	[Con head_lh_₁(_lh_mainSimple_arg1⁰)]: 2898
//│ case _lh_ppn_arg2⁰ of {Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰ | Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰))) | Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰))) | App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰))) | IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰))) | Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰))) | _  => error⁰}: 956 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰]: 21
//│ 	[Unit]: 46
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Var [LH_C 'F' [LH_N]]]: 529
//│ 	[Var [LH_C 'x' [LH_N]]]: 533
//│ 	[Var [LH_C 'x' [LH_N]]]: 537
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 538
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 539
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 540
//│ 	[Var [LH_C 'F' [LH_N]]]: 547
//│ 	[Var [LH_C 'x' [LH_N]]]: 551
//│ 	[Var [LH_C 'x' [LH_N]]]: 555
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 556
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 557
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 558
//│ 	[Var [LH_C 'n' [LH_N]]]: 562
//│ 	[Con (0 - 1)]: 568
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 569
//│ 	[Con (u'⁰ + v'⁰)]: 685
//│ 	[Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰]: 704
//│ 	[Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]: 706
//│ 	[Con _lh_eval_Con_0⁰]: 744
//│ 	[Con 0]: 753
//│ 	[Var [LH_C 'F' [LH_N]]]: 965
//│ 	[Var [LH_C 'x' [LH_N]]]: 969
//│ 	[Var [LH_C 'x' [LH_N]]]: 973
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 974
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 975
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 976
//│ 	[Var [LH_C 'x' [LH_N]]]: 987
//│ 	[Var [LH_C 'x' [LH_N]]]: 991
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 992
//│ 	[Var [LH_C 'n' [LH_N]]]: 998
//│ 	[Con (0 - 1)]: 1004
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 1005
//│ 	[App lfxx_lh_₃ lfxx_lh_₄]: 1757
//│ 	[Var [LH_C 'n' [LH_N]]]: 1772
//│ 	[Con 0]: 1774
//│ 	[Var [LH_C 'n' [LH_N]]]: 1778
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1786
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]: 1788
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]: 1789
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]: 1790
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]: 1791
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]: 1792
//│ 	[Var [LH_C 'n' [LH_N]]]: 1896
//│ 	[Con 0]: 1898
//│ 	[Var [LH_C 'n' [LH_N]]]: 1902
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1910
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]: 1912
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]: 1913
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]: 1914
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]: 1915
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]: 1916
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰]: 2091
//│ 	[LH_N]: 2391
//│ 	[Con head_lh_₂(_lh_mainMonad_arg1⁰)]: 2829
//│ 	[LH_N]: 2892
//│ 	[Con head_lh_₁(_lh_mainSimple_arg1⁰)]: 2898
//│ case _lh_eqList_arg1⁰ of {LH_N  => case _lh_eqList_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰}: 1226 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 527
//│ 	[LH_C 'F' [LH_N]]: 528
//│ 	[LH_N]: 531
//│ 	[LH_C 'x' [LH_N]]: 532
//│ 	[LH_N]: 535
//│ 	[LH_C 'x' [LH_N]]: 536
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 545
//│ 	[LH_C 'F' [LH_N]]: 546
//│ 	[LH_N]: 549
//│ 	[LH_C 'x' [LH_N]]: 550
//│ 	[LH_N]: 553
//│ 	[LH_C 'x' [LH_N]]: 554
//│ 	[LH_N]: 560
//│ 	[LH_C 'n' [LH_N]]: 561
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 963
//│ 	[LH_C 'F' [LH_N]]: 964
//│ 	[LH_N]: 967
//│ 	[LH_C 'x' [LH_N]]: 968
//│ 	[LH_N]: 971
//│ 	[LH_C 'x' [LH_N]]: 972
//│ 	[LH_N]: 978
//│ 	[LH_C 'x' [LH_N]]: 979
//│ 	[LH_N]: 981
//│ 	[LH_C 'F' [LH_N]]: 982
//│ 	[LH_N]: 985
//│ 	[LH_C 'x' [LH_N]]: 986
//│ 	[LH_N]: 989
//│ 	[LH_C 'x' [LH_N]]: 990
//│ 	[LH_N]: 996
//│ 	[LH_C 'n' [LH_N]]: 997
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1770
//│ 	[LH_C 'n' [LH_N]]: 1771
//│ 	[LH_N]: 1776
//│ 	[LH_C 'n' [LH_N]]: 1777
//│ 	[LH_N]: 1782
//│ 	[LH_C 'm' [LH_N]]: 1783
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1784
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1785
//│ 	[LH_N]: 1877
//│ 	[LH_C 'F' [LH_N]]: 1878
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ 	[LH_N]: 1894
//│ 	[LH_C 'n' [LH_N]]: 1895
//│ 	[LH_N]: 1900
//│ 	[LH_C 'n' [LH_N]]: 1901
//│ 	[LH_N]: 1906
//│ 	[LH_C 'm' [LH_N]]: 1907
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1908
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1909
//│ case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1262 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰]: 19
//│ 	[LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]]: 2089
//│ case _lh_eqEnv_arg1⁰ of {LH_N  => case _lh_eqEnv_arg2⁰ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False] | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 1264 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰]: 21
//│ 	[Unit]: 46
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Con (u'⁰ + v'⁰)]: 685
//│ 	[Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]: 706
//│ 	[Con _lh_eval_Con_0⁰]: 744
//│ 	[Con 0]: 753
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰]: 2091
//│ 	[LH_N]: 2391
//│ 	[LH_N]: 2892
//│ case _lh_eqList_arg1¹ of {LH_N  => case _lh_eqList_arg2¹ of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False] | _  => error⁰} | _  => error⁰}: 1288 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 978
//│ 	[LH_C 'x' [LH_N]]: 979
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1877
//│ 	[LH_C 'F' [LH_N]]: 1878
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰}: 1295 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 978
//│ 	[LH_C 'x' [LH_N]]: 979
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1877
//│ 	[LH_C 'F' [LH_N]]: 1878
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰}: 1310 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 978
//│ 	[LH_C 'x' [LH_N]]: 979
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1877
//│ 	[LH_C 'F' [LH_N]]: 1878
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ case _lh_eqList_arg1² of {LH_N  => case _lh_eqList_arg2² of {LH_N  => [True] | _  => error⁰} | LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False] | _  => error⁰} | _  => error⁰}: 1312 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_N]: 527
//│ 	[LH_C 'F' [LH_N]]: 528
//│ 	[LH_N]: 531
//│ 	[LH_C 'x' [LH_N]]: 532
//│ 	[LH_N]: 535
//│ 	[LH_C 'x' [LH_N]]: 536
//│ 	[LH_N]: 545
//│ 	[LH_C 'F' [LH_N]]: 546
//│ 	[LH_N]: 549
//│ 	[LH_C 'x' [LH_N]]: 550
//│ 	[LH_N]: 553
//│ 	[LH_C 'x' [LH_N]]: 554
//│ 	[LH_N]: 560
//│ 	[LH_C 'n' [LH_N]]: 561
//│ 	[LH_N]: 963
//│ 	[LH_C 'F' [LH_N]]: 964
//│ 	[LH_N]: 967
//│ 	[LH_C 'x' [LH_N]]: 968
//│ 	[LH_N]: 971
//│ 	[LH_C 'x' [LH_N]]: 972
//│ 	[LH_N]: 981
//│ 	[LH_C 'F' [LH_N]]: 982
//│ 	[LH_N]: 985
//│ 	[LH_C 'x' [LH_N]]: 986
//│ 	[LH_N]: 989
//│ 	[LH_C 'x' [LH_N]]: 990
//│ 	[LH_N]: 996
//│ 	[LH_C 'n' [LH_N]]: 997
//│ 	[LH_N]: 1770
//│ 	[LH_C 'n' [LH_N]]: 1771
//│ 	[LH_N]: 1776
//│ 	[LH_C 'n' [LH_N]]: 1777
//│ 	[LH_N]: 1782
//│ 	[LH_C 'm' [LH_N]]: 1783
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1784
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1785
//│ 	[LH_N]: 1894
//│ 	[LH_C 'n' [LH_N]]: 1895
//│ 	[LH_N]: 1900
//│ 	[LH_C 'n' [LH_N]]: 1901
//│ 	[LH_N]: 1906
//│ 	[LH_C 'm' [LH_N]]: 1907
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1908
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1909
//│ case _lh_ppn_arg2² of {Var _lh_ppn_Var_0² => _lh_ppn_Var_0² | Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²) | Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]] | Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²))) | Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1², 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₁(1, _lh_ppn_Add_1²))) | App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²))) | IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²))) | Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²))) | _  => error⁰}: 1690 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Var [LH_C 'F' [LH_N]]]: 529
//│ 	[Var [LH_C 'x' [LH_N]]]: 533
//│ 	[Var [LH_C 'x' [LH_N]]]: 537
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 538
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 539
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 540
//│ 	[Var [LH_C 'x' [LH_N]]]: 551
//│ 	[Var [LH_C 'x' [LH_N]]]: 555
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 556
//│ 	[Var [LH_C 'n' [LH_N]]]: 562
//│ 	[Con (0 - 1)]: 568
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 569
//│ 	[Var [LH_C 'F' [LH_N]]]: 965
//│ 	[Var [LH_C 'x' [LH_N]]]: 969
//│ 	[Var [LH_C 'x' [LH_N]]]: 973
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 974
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 975
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 976
//│ 	[Var [LH_C 'x' [LH_N]]]: 987
//│ 	[Var [LH_C 'x' [LH_N]]]: 991
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 992
//│ 	[Var [LH_C 'n' [LH_N]]]: 998
//│ 	[Con (0 - 1)]: 1004
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 1005
//│ 	[Var [LH_C 'n' [LH_N]]]: 1772
//│ 	[Con 0]: 1774
//│ 	[Var [LH_C 'n' [LH_N]]]: 1778
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1786
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]: 1788
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]: 1789
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]: 1790
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]: 1791
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]: 1792
//│ 	[Var [LH_C 'n' [LH_N]]]: 1896
//│ 	[Con 0]: 1898
//│ 	[Var [LH_C 'n' [LH_N]]]: 1902
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1910
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]: 1912
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]: 1913
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]: 1914
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]: 1915
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]: 1916
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[Con head_lh_₂(_lh_mainMonad_arg1⁰)]: 2829
//│ 	[Con head_lh_₁(_lh_mainSimple_arg1⁰)]: 2898
//│ case _lh_matchIdent⁴ of {LH_P2 _lh_ppenv_LH_P2_0¹ _lh_ppenv_LH_P2_1¹ => mappend_lh_₁₈(mappend_lh_₂₁(mappend_lh_₂₀(_lh_ppenv_LH_P2_0¹, [LH_C '=' [LH_N]]), pp_lh_₈(_lh_ppenv_LH_P2_1¹)), [LH_C ',' [LH_C ' ' [LH_N]]]) | _  => error⁰}: 1824 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰]: 19
//│ 	[LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]]: 2089
//│ case xs²⁰ of {LH_C h²⁰ t²¹ => [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)] | LH_N  => ys²⁰}: 1846 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁰)]: 357
//│ 	[LH_C h² mappend_lh_₂₄(t², ys²)]: 381
//│ 	[LH_N]: 401
//│ 	[LH_C ')' [LH_N]]: 402
//│ 	[LH_C h³ mappend_lh_₂₃(t³, ys³)]: 416
//│ 	[LH_N]: 436
//│ 	[LH_C ')' [LH_N]]: 437
//│ 	[LH_N]: 459
//│ 	[LH_C '=' [LH_N]]: 460
//│ 	[LH_N]: 470
//│ 	[LH_C ' ' [LH_N]]: 471
//│ 	[LH_C ',' [LH_C ' ' [LH_N]]]: 472
//│ 	[LH_N]: 484
//│ 	[LH_C ']' [LH_N]]: 485
//│ 	[LH_N]: 503
//│ 	[LH_C ')' [LH_N]]: 504
//│ 	[LH_N]: 524
//│ 	[LH_C 'x' [LH_N]]: 525
//│ 	[LH_N]: 527
//│ 	[LH_C 'F' [LH_N]]: 528
//│ 	[LH_N]: 531
//│ 	[LH_C 'x' [LH_N]]: 532
//│ 	[LH_N]: 535
//│ 	[LH_C 'x' [LH_N]]: 536
//│ 	[LH_N]: 542
//│ 	[LH_C 'x' [LH_N]]: 543
//│ 	[LH_N]: 545
//│ 	[LH_C 'F' [LH_N]]: 546
//│ 	[LH_N]: 549
//│ 	[LH_C 'x' [LH_N]]: 550
//│ 	[LH_N]: 553
//│ 	[LH_C 'x' [LH_N]]: 554
//│ 	[LH_N]: 560
//│ 	[LH_C 'n' [LH_N]]: 561
//│ 	[LH_N]: 619
//│ 	[LH_N]: 769
//│ 	[LH_C 'R' [LH_N]]: 770
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 771
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 772
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 773
//│ 	[LH_N]: 791
//│ 	[LH_C ' ' [LH_N]]: 792
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 793
//│ 	[LH_N]: 823
//│ 	[LH_C ' ' [LH_N]]: 824
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 825
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 826
//│ 	[LH_N]: 850
//│ 	[LH_C ' ' [LH_N]]: 851
//│ 	[LH_N]: 892
//│ 	[LH_C ' ' [LH_N]]: 893
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 894
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 895
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 896
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 897
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 898
//│ 	[LH_N]: 914
//│ 	[LH_C ' ' [LH_N]]: 915
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 916
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 917
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 918
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 919
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 920
//│ 	[LH_N]: 945
//│ 	[LH_C ':' [LH_N]]: 946
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 947
//│ 	[LH_N]: 960
//│ 	[LH_C 'x' [LH_N]]: 961
//│ 	[LH_N]: 963
//│ 	[LH_C 'F' [LH_N]]: 964
//│ 	[LH_N]: 967
//│ 	[LH_C 'x' [LH_N]]: 968
//│ 	[LH_N]: 971
//│ 	[LH_C 'x' [LH_N]]: 972
//│ 	[LH_N]: 985
//│ 	[LH_C 'x' [LH_N]]: 986
//│ 	[LH_N]: 989
//│ 	[LH_C 'x' [LH_N]]: 990
//│ 	[LH_N]: 996
//│ 	[LH_C 'n' [LH_N]]: 997
//│ 	[LH_N]: 1015
//│ 	[LH_C 'R' [LH_N]]: 1016
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1017
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1018
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1019
//│ 	[LH_N]: 1037
//│ 	[LH_C ' ' [LH_N]]: 1038
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1039
//│ 	[LH_N]: 1069
//│ 	[LH_C ' ' [LH_N]]: 1070
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 1071
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1072
//│ 	[LH_N]: 1096
//│ 	[LH_C ' ' [LH_N]]: 1097
//│ 	[LH_N]: 1138
//│ 	[LH_C ' ' [LH_N]]: 1139
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1140
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1141
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1142
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1143
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1144
//│ 	[LH_N]: 1160
//│ 	[LH_C ' ' [LH_N]]: 1161
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1162
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1163
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1164
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1165
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1166
//│ 	[LH_N]: 1191
//│ 	[LH_C ':' [LH_N]]: 1192
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1193
//│ 	[LH_N]: 1503
//│ 	[LH_C 'R' [LH_N]]: 1504
//│ 	[LH_C 'C' [LH_C 'R' [LH_N]]]: 1505
//│ 	[LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]: 1506
//│ 	[LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]: 1507
//│ 	[LH_N]: 1525
//│ 	[LH_C ' ' [LH_N]]: 1526
//│ 	[LH_C '.' [LH_C ' ' [LH_N]]]: 1527
//│ 	[LH_N]: 1584
//│ 	[LH_C ' ' [LH_N]]: 1585
//│ 	[LH_N]: 1626
//│ 	[LH_C ' ' [LH_N]]: 1627
//│ 	[LH_C 'N' [LH_C ' ' [LH_N]]]: 1628
//│ 	[LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]: 1629
//│ 	[LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]: 1630
//│ 	[LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]: 1631
//│ 	[LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]: 1632
//│ 	[LH_N]: 1648
//│ 	[LH_C ' ' [LH_N]]: 1649
//│ 	[LH_C 'E' [LH_C ' ' [LH_N]]]: 1650
//│ 	[LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]: 1651
//│ 	[LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]: 1652
//│ 	[LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]: 1653
//│ 	[LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]: 1654
//│ 	[LH_N]: 1679
//│ 	[LH_C ':' [LH_N]]: 1680
//│ 	[LH_C ':' [LH_C ':' [LH_N]]]: 1681
//│ 	[LH_N]: 1753
//│ 	[LH_C 'F' [LH_N]]: 1754
//│ 	[LH_N]: 1762
//│ 	[LH_C 'm' [LH_N]]: 1763
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1764
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1765
//│ 	[LH_N]: 1767
//│ 	[LH_C 'n' [LH_N]]: 1768
//│ 	[LH_N]: 1770
//│ 	[LH_C 'n' [LH_N]]: 1771
//│ 	[LH_N]: 1776
//│ 	[LH_C 'n' [LH_N]]: 1777
//│ 	[LH_N]: 1782
//│ 	[LH_C 'm' [LH_N]]: 1783
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1784
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1785
//│ 	[LH_N]: 1886
//│ 	[LH_C 'm' [LH_N]]: 1887
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1888
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1889
//│ 	[LH_N]: 1891
//│ 	[LH_C 'n' [LH_N]]: 1892
//│ 	[LH_N]: 1894
//│ 	[LH_C 'n' [LH_N]]: 1895
//│ 	[LH_N]: 1900
//│ 	[LH_C 'n' [LH_N]]: 1901
//│ 	[LH_N]: 1906
//│ 	[LH_C 'm' [LH_N]]: 1907
//│ 	[LH_C 'u' [LH_C 'm' [LH_N]]]: 1908
//│ 	[LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]: 1909
//│ case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858 --->
//│ 	[LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)]: 1844
//│ 	[LH_N]: 2403
//│ 	[LH_C ' ' [LH_N]]: 2404
//│ 	[LH_C ' ' [LH_C ' ' [LH_N]]]: 2405
//│ case _lh_myRunState_arg1⁰ of {MyState _lh_myRunState_MyState_0⁰ => _lh_myRunState_MyState_0⁰ | _  => error⁰}: 1864 --->
//│ 	[MyState (fun s⁰ -> [LH_P2 s⁰ _lh_myReturn_arg1⁰])]: 34
//│ 	[MyState (fun s¹ -> let _lh_matchIdent¹ = myRunState_lh_₁(_lh_myBind_arg1⁰, s¹)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => myRunState_lh_₁(_lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰), _lh_myBind_LH_P2_0⁰) | _  => error⁰})]: 234
//│ 	[MyState (fun s² -> [LH_P2 s² s²])]: 303
//│ case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926 --->
//│ 	[LH_N]: 2426
//│ 	[LH_C ' ' [LH_N]]: 2427
//│ 	[LH_C 'n' [LH_C ' ' [LH_N]]]: 2428
//│ 	[LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 2429
//│ 	[LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 2430
//│ case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰}: 1943 --->
//│ 	DeadCodeProd
//│ 	[Con 0]: 731
//│ 	[Con 0]: 2734
//│ case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰}: 1951 --->
//│ 	DeadCodeProd
//│ 	[Con 0]: 731
//│ 	[Con 0]: 2734
//│ case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰}: 1955 --->
//│ 	DeadCodeProd
//│ 	[Con 0]: 731
//│ 	[Con 0]: 2734
//│ case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰}: 1971 --->
//│ 	DeadCodeProd
//│ 	[Con 0]: 731
//│ 	[Con 0]: 2734
//│ case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰}: 1987 --->
//│ 	DeadCodeProd
//│ 	[Con 0]: 731
//│ 	[Con 0]: 2734
//│ case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰}: 2003 --->
//│ 	DeadCodeProd
//│ 	[Con 0]: 731
//│ 	[Con 0]: 2734
//│ case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰}: 2027 --->
//│ 	DeadCodeProd
//│ 	[Con 0]: 731
//│ 	[Con 0]: 2734
//│ case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰}: 2043 --->
//│ 	DeadCodeProd
//│ 	[Con 0]: 731
//│ 	[Con 0]: 2734
//│ case _lh_eqTerm_arg1⁰ of {Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹) | _  => error⁰} | Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹) | _  => error⁰} | Incr  => case _lh_eqTerm_arg2⁰ of {Incr  => [True] | _  => error⁰} | Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹)) | _  => error⁰} | Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹)) | _  => error⁰} | App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹)) | _  => error⁰} | IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹)) | _  => error⁰} | Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹)) | _  => error⁰} | _  => error⁰}: 2045 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰]: 21
//│ 	[Unit]: 46
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Var [LH_C 'F' [LH_N]]]: 529
//│ 	[Var [LH_C 'x' [LH_N]]]: 533
//│ 	[Var [LH_C 'x' [LH_N]]]: 537
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 538
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 539
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 540
//│ 	[Var [LH_C 'F' [LH_N]]]: 547
//│ 	[Var [LH_C 'x' [LH_N]]]: 551
//│ 	[Var [LH_C 'x' [LH_N]]]: 555
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 556
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 557
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 558
//│ 	[Var [LH_C 'n' [LH_N]]]: 562
//│ 	[Con (0 - 1)]: 568
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 569
//│ 	[Con (u'⁰ + v'⁰)]: 685
//│ 	[Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰]: 704
//│ 	[Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]: 706
//│ 	[Con _lh_eval_Con_0⁰]: 744
//│ 	[Con 0]: 753
//│ 	[Var [LH_C 'F' [LH_N]]]: 965
//│ 	[Var [LH_C 'x' [LH_N]]]: 969
//│ 	[Var [LH_C 'x' [LH_N]]]: 973
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 974
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 975
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 976
//│ 	[Var [LH_C 'F' [LH_N]]]: 983
//│ 	[Var [LH_C 'x' [LH_N]]]: 987
//│ 	[Var [LH_C 'x' [LH_N]]]: 991
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 992
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 993
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 994
//│ 	[Var [LH_C 'n' [LH_N]]]: 998
//│ 	[Con (0 - 1)]: 1004
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 1005
//│ 	[App lfxx_lh_₃ lfxx_lh_₄]: 1757
//│ 	[Var [LH_C 'n' [LH_N]]]: 1772
//│ 	[Con 0]: 1774
//│ 	[Var [LH_C 'n' [LH_N]]]: 1778
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1786
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]: 1788
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]: 1789
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]: 1790
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]: 1791
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]: 1792
//│ 	[App lfxx_lh_₁ lfxx_lh_₂]: 1881
//│ 	[Var [LH_C 'n' [LH_N]]]: 1896
//│ 	[Con 0]: 1898
//│ 	[Var [LH_C 'n' [LH_N]]]: 1902
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1910
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]: 1912
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]: 1913
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]: 1914
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]: 1915
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]: 1916
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰]: 2091
//│ 	[LH_N]: 2391
//│ 	[Con _lh_simpleEval_Con_0⁰]: 2522
//│ 	[Con 0]: 2524
//│ 	[Con (u'² + v'¹)]: 2703
//│ 	[Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰]: 2709
//│ 	[Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰]: 2711
//│ 	[Con head_lh_₂(_lh_mainMonad_arg1⁰)]: 2829
//│ 	[LH_N]: 2892
//│ 	[Con head_lh_₁(_lh_mainSimple_arg1⁰)]: 2898
//│ case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰}: 2077 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰]: 19
//│ 	[LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]]: 2089
//│ case _lh_lookup_arg2⁰ of {LH_N  => [Nothing] | LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then [Just _lh_lookup_LH_P2_1⁰] else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰) | _  => error⁰} | _  => error⁰}: 2079 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env⁰]: 21
//│ 	[Unit]: 46
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Con (u'⁰ + v'⁰)]: 685
//│ 	[Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env³]: 706
//│ 	[Con _lh_eval_Con_0⁰]: 744
//│ 	[Con 0]: 753
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰]: 2091
//│ 	[LH_N]: 2391
//│ 	[LH_N]: 2892
//│ case _lh_simpleApply_Thunk_0⁰ of {Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰) | _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 2166 --->
//│ 	[Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰]: 2709
//│ case _lh_simpleApply_arg2⁰ of {Thunk _lh_simpleApply_Thunk_0⁰ _lh_simpleApply_Thunk_1⁰ => case _lh_simpleApply_Thunk_0⁰ of {Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰) | _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))} | _  => error⁰(mappend_lh_₁₄(mappend_lh_₁₃(mappend_lh_₁₆(mappend_lh_₁₀([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₄(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₇(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}: 2238 --->
//│ 	[Con _lh_simpleEval_Con_0⁰]: 2522
//│ 	[Con 0]: 2524
//│ 	[Con (u'² + v'¹)]: 2703
//│ 	[Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰]: 2711
//│ case _lh_myMaybe_arg3⁰ of {Nothing  => _lh_myMaybe_arg1⁰(99) | Just _lh_myMaybe_Just_0⁰ => _lh_myMaybe_arg2⁰(_lh_myMaybe_Just_0⁰) | _  => error⁰}: 2250 --->
//│ 	[Nothing]: 2061
//│ 	[Just _lh_lookup_LH_P2_1⁰]: 2069
//│ case _lh_matchIdent⁵ of {Con _lh_simpleEvalCon_Con_0⁰ => _lh_simpleEvalCon_Con_0⁰ | _  => error⁰(mappend_lh_₈([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(e'⁰)))}: 2317 --->
//│ 	[Con _lh_simpleEval_Con_0⁰]: 2522
//│ 	[Con 0]: 2524
//│ 	[Con (u'² + v'¹)]: 2703
//│ 	[Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰]: 2711
//│ case _lh_matchIdent⁶ of {Con _lh_simpleEvalCon_Con_0¹ => _lh_simpleEvalCon_Con_0¹ | _  => error⁰(mappend_lh_₇([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₂(e'¹)))}: 2367 --->
//│ 	[Con _lh_simpleEval_Con_0⁰]: 2522
//│ 	[Con 0]: 2524
//│ 	[Con (u'² + v'¹)]: 2703
//│ 	[Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰]: 2711
//│ case ls⁰ of {LH_C h²⁶ t²⁷ => h²⁶ | LH_N  => error⁰}: 2375 --->
//│ 	[LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]]: 2912
//│ case _lh_null_arg1⁰ of {LH_N  => [True] | LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False] | _  => error⁰}: 2384 --->
//│ 	[LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]]: 2912
//│ case _lh_matchIdent⁷ of {LH_P2 _lh_ev_LH_P2_0⁰ _lh_ev_LH_P2_1⁰ => mappend_lh_₅(mappend_lh_₆(pp_lh_₃(_lh_ev_LH_P2_1⁰), [LH_C ' ' [LH_C ' ' [LH_N]]]), ppenv_lh_₁(_lh_ev_LH_P2_0⁰)) | _  => error⁰}: 2413 --->
//│ 	[LH_P2 s⁰ _lh_myReturn_arg1⁰]: 32
//│ 	[LH_P2 s² s²]: 301
//│ case _lh_showTerm_arg1² of {Con _lh_showTerm_Con_0² => mappend_lh_₄([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0²)) | _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}: 2465 --->
//│ 	[Con _lh_simpleEval_Con_0⁰]: 2522
//│ 	[Con 0]: 2524
//│ 	[Con (u'² + v'¹)]: 2703
//│ 	[Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰]: 2711
//│ case _lh_simpleEval_arg2⁰ of {Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, myMaybe_lh_₁((fun _dummy² -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰))) | Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰] | Incr  => [Con 0] | Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)] | _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))} | _  => case _lh_addCons_arg2⁰ of {Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰))) | _  => error⁰}}))
//│ in let u'² = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ in let v'¹ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ in [Con (u'² + v'¹)] | Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰] | App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => let u'³ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'³, _lh_simpleEval_App_1⁰) | IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => let val¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ in if eqTerm_lh_₁(val¹, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰) | Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰) | _  => error⁰}: 2754 --->
//│ 	NoProd
//│ 	DeadCodeProd
//│ 	[Thunk _lh_apply_arg2⁰ orig⁰]: 62
//│ 	[Var [LH_C 'F' [LH_N]]]: 529
//│ 	[Var [LH_C 'x' [LH_N]]]: 533
//│ 	[Var [LH_C 'x' [LH_N]]]: 537
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 538
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 539
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 540
//│ 	[Var [LH_C 'x' [LH_N]]]: 551
//│ 	[Var [LH_C 'x' [LH_N]]]: 555
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 556
//│ 	[Var [LH_C 'n' [LH_N]]]: 562
//│ 	[Con (0 - 1)]: 568
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 569
//│ 	[Var [LH_C 'F' [LH_N]]]: 965
//│ 	[Var [LH_C 'x' [LH_N]]]: 969
//│ 	[Var [LH_C 'x' [LH_N]]]: 973
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 974
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 975
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 976
//│ 	[Var [LH_C 'F' [LH_N]]]: 983
//│ 	[Var [LH_C 'x' [LH_N]]]: 987
//│ 	[Var [LH_C 'x' [LH_N]]]: 991
//│ 	[App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]: 992
//│ 	[App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]: 993
//│ 	[Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]: 994
//│ 	[Var [LH_C 'n' [LH_N]]]: 998
//│ 	[Con (0 - 1)]: 1004
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]: 1005
//│ 	[Var [LH_C 'n' [LH_N]]]: 1772
//│ 	[Con 0]: 1774
//│ 	[Var [LH_C 'n' [LH_N]]]: 1778
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1786
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]: 1788
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]: 1789
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]: 1790
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]: 1791
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]: 1792
//│ 	[App lfxx_lh_₁ lfxx_lh_₂]: 1881
//│ 	[Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₁ lfxx_lh_₂]]: 1882
//│ 	[Var [LH_C 'n' [LH_N]]]: 1896
//│ 	[Con 0]: 1898
//│ 	[Var [LH_C 'n' [LH_N]]]: 1902
//│ 	[Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]]: 1910
//│ 	[App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]: 1912
//│ 	[Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]: 1913
//│ 	[IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]: 1914
//│ 	[Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]: 1915
//│ 	[Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]: 1916
//│ 	[Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]: 2088
//│ 	[App fix_lh_₁ partialSum0_lh_₁]: 2419
//│ 	[Con head_lh_₂(_lh_mainMonad_arg1⁰)]: 2829
//│ 	[Con head_lh_₁(_lh_mainSimple_arg1⁰)]: 2898
//│ 	[App sum0_lh_₁ [Con head_lh_₁(_lh_mainSimple_arg1⁰)]]: 2899
//│ case ls¹ of {LH_C h²⁷ t²⁸ => h²⁷ | LH_N  => error⁰}: 2760 --->
//│ 	[LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]]: 2907
//│ case _lh_null_arg1¹ of {LH_N  => [True] | LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False] | _  => error⁰}: 2766 --->
//│ 	[LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]]: 2907
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [MyState (fun s⁰ -> [LH_P2 s⁰ _lh_myReturn_arg1⁰])]: 34 --->
//│ 	case _lh_myRunState_arg1⁰ of {MyState _lh_myRunState_MyState_0⁰ => _lh_myRunState_MyState_0⁰ | _  => error⁰}: 1864
//│ [MyState (fun s¹ -> let _lh_matchIdent¹ = myRunState_lh_₁(_lh_myBind_arg1⁰, s¹)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => myRunState_lh_₁(_lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰), _lh_myBind_LH_P2_0⁰) | _  => error⁰})]: 234 --->
//│ 	case _lh_myRunState_arg1⁰ of {MyState _lh_myRunState_MyState_0⁰ => _lh_myRunState_MyState_0⁰ | _  => error⁰}: 1864
//│ [MyState (fun s² -> [LH_P2 s² s²])]: 303 --->
//│ 	case _lh_myRunState_arg1⁰ of {MyState _lh_myRunState_MyState_0⁰ => _lh_myRunState_MyState_0⁰ | _  => error⁰}: 1864
//│ [LH_C h¹ mappend_lh_₂₅(t¹, ys¹)]: 369 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)]: 589 --->
//│ 	case xs⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)] | LH_N  => ys⁵}: 579
//│ [LH_N]: 1557 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_C ' ' [LH_N]]: 1558 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_C '+' [LH_C ' ' [LH_N]]]: 1559 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1560 --->
//│ 	case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383
//│ [LH_N]: 1711 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_C ' ' [LH_N]]: 1712 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_C 'n' [LH_C ' ' [LH_N]]]: 1713 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 1714 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 1715 --->
//│ 	case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520
//│ [LH_N]: 1796 --->
//│ 	case xs⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₉(t⁷, ys⁷)] | LH_N  => ys⁷}: 603
//│ [LH_C '[' [LH_N]]: 1797 --->
//│ 	case xs⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₉(t⁷, ys⁷)] | LH_N  => ys⁷}: 603
//│ [LH_N]: 1808 --->
//│ 	case xs⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)] | LH_N  => ys⁵}: 579
//│ [LH_C '=' [LH_N]]: 1809 --->
//│ 	case xs⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)] | LH_N  => ys⁵}: 579
//│ [LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)]: 1844 --->
//│ 	case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858
//│ [Nothing]: 2061 --->
//│ 	case _lh_myMaybe_arg3⁰ of {Nothing  => _lh_myMaybe_arg1⁰(99) | Just _lh_myMaybe_Just_0⁰ => _lh_myMaybe_arg2⁰(_lh_myMaybe_Just_0⁰) | _  => error⁰}: 2250
//│ [Just _lh_lookup_LH_P2_1⁰]: 2069 --->
//│ 	case _lh_myMaybe_arg3⁰ of {Nothing  => _lh_myMaybe_arg1⁰(99) | Just _lh_myMaybe_Just_0⁰ => _lh_myMaybe_arg2⁰(_lh_myMaybe_Just_0⁰) | _  => error⁰}: 2250
//│ [LH_N]: 2403 --->
//│ 	case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858
//│ [LH_C ' ' [LH_N]]: 2404 --->
//│ 	case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858
//│ [LH_C ' ' [LH_C ' ' [LH_N]]]: 2405 --->
//│ 	case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858
//│ [LH_N]: 2426 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ [LH_C ' ' [LH_N]]: 2427 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ [LH_C 'n' [LH_C ' ' [LH_N]]]: 2428 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 2429 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 2430 --->
//│ 	case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926
//│ ------------------
//│ case xs² of {LH_C h² t² => [LH_C h² mappend_lh_₂₄(t², ys²)] | LH_N  => ys²}: 383 --->
//│ 	[LH_C h¹ mappend_lh_₂₅(t¹, ys¹)]: 369
//│ 	[LH_N]: 1557
//│ 	[LH_C ' ' [LH_N]]: 1558
//│ 	[LH_C '+' [LH_C ' ' [LH_N]]]: 1559
//│ 	[LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]: 1560
//│ case xs⁴ of {LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₂₂(t⁴, ys⁴)] | LH_N  => ys⁴}: 520 --->
//│ 	[LH_N]: 1711
//│ 	[LH_C ' ' [LH_N]]: 1712
//│ 	[LH_C 'n' [LH_C ' ' [LH_N]]]: 1713
//│ 	[LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 1714
//│ 	[LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 1715
//│ case xs⁵ of {LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₂₁(t⁵, ys⁵)] | LH_N  => ys⁵}: 579 --->
//│ 	[LH_C h⁶ mappend_lh_₂₀(t⁶, ys⁶)]: 589
//│ 	[LH_N]: 1808
//│ 	[LH_C '=' [LH_N]]: 1809
//│ case xs⁷ of {LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₉(t⁷, ys⁷)] | LH_N  => ys⁷}: 603 --->
//│ 	[LH_N]: 1796
//│ 	[LH_C '[' [LH_N]]: 1797
//│ case xs²¹ of {LH_C h²¹ t²² => [LH_C h²¹ mappend_lh_₅(t²², ys²¹)] | LH_N  => ys²¹}: 1858 --->
//│ 	[LH_C h²⁰ mappend_lh_₆(t²¹, ys²⁰)]: 1844
//│ 	[LH_N]: 2403
//│ 	[LH_C ' ' [LH_N]]: 2404
//│ 	[LH_C ' ' [LH_C ' ' [LH_N]]]: 2405
//│ case _lh_myRunState_arg1⁰ of {MyState _lh_myRunState_MyState_0⁰ => _lh_myRunState_MyState_0⁰ | _  => error⁰}: 1864 --->
//│ 	[MyState (fun s⁰ -> [LH_P2 s⁰ _lh_myReturn_arg1⁰])]: 34
//│ 	[MyState (fun s¹ -> let _lh_matchIdent¹ = myRunState_lh_₁(_lh_myBind_arg1⁰, s¹)
//│ in case _lh_matchIdent¹ of {LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => myRunState_lh_₁(_lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰), _lh_myBind_LH_P2_0⁰) | _  => error⁰})]: 234
//│ 	[MyState (fun s² -> [LH_P2 s² s²])]: 303
//│ case xs²² of {LH_C h²² t²³ => [LH_C h²² mappend_lh_₄(t²³, ys²²)] | LH_N  => ys²²}: 1926 --->
//│ 	[LH_N]: 2426
//│ 	[LH_C ' ' [LH_N]]: 2427
//│ 	[LH_C 'n' [LH_C ' ' [LH_N]]]: 2428
//│ 	[LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]: 2429
//│ 	[LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]]: 2430
//│ case _lh_myMaybe_arg3⁰ of {Nothing  => _lh_myMaybe_arg1⁰(99) | Just _lh_myMaybe_Just_0⁰ => _lh_myMaybe_arg2⁰(_lh_myMaybe_Just_0⁰) | _  => error⁰}: 2250 --->
//│ 	[Nothing]: 2061
//│ 	[Just _lh_lookup_LH_P2_1⁰]: 2069
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testLambda_nofib_lh_₁(primId⁰(80))
//│ def apply_lh_₁(_lh_apply_arg1¹, _lh_apply_arg2¹) = case _lh_apply_arg1¹ of {
//│ 	Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {
//│ 		Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig¹ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2¹ orig¹], traverseTerm_lh_₁(_lh_apply_Lam_1⁰)))))
//│ 		| _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1¹)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2¹)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ 	| _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1¹)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2¹)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ def bracket_lh_₁(_lh_bracket_arg1⁵, _lh_bracket_arg2⁵, _lh_bracket_arg3⁵) = if (_lh_bracket_arg2⁵ <= _lh_bracket_arg1⁵) then mappend_lh_₂₆(mappend_lh_₂₆([LH_C '(' [LH_N]], _lh_bracket_arg3⁵), [LH_C ')' [LH_N]]) else _lh_bracket_arg3⁵
//│ def bracket_lh_₂(_lh_bracket_arg1⁴, _lh_bracket_arg2⁴, _lh_bracket_arg3⁴) = if (_lh_bracket_arg2⁴ <= _lh_bracket_arg1⁴) then mappend_lh_₂₆(mappend_lh_₂₆([LH_C '(' [LH_N]], _lh_bracket_arg3⁴), [LH_C ')' [LH_N]]) else _lh_bracket_arg3⁴
//│ def bracket_lh_₃(_lh_bracket_arg1³, _lh_bracket_arg2³, _lh_bracket_arg3³) = if (_lh_bracket_arg2³ <= _lh_bracket_arg1³) then mappend_lh_₂₆(mappend_lh_₂₆([LH_C '(' [LH_N]], _lh_bracket_arg3³), [LH_C ')' [LH_N]]) else _lh_bracket_arg3³
//│ def eqEnv_lh_₁(_lh_eqEnv_arg1¹, _lh_eqEnv_arg2¹) = case _lh_eqEnv_arg1¹ of {
//│ 	LH_N  => case _lh_eqEnv_arg2¹ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {
//│ 		LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2¹ of {
//│ 			LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {
//│ 				LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False]
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₁(_lh_eqList_arg1⁴, _lh_eqList_arg2⁴) = case _lh_eqList_arg1⁴ of {
//│ 	LH_N  => case _lh_eqList_arg2⁴ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2⁴ of {
//│ 		LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₁(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₂(_lh_eqList_arg1⁵, _lh_eqList_arg2⁵) = case _lh_eqList_arg1⁵ of {
//│ 	LH_N  => case _lh_eqList_arg2⁵ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2⁵ of {
//│ 		LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₂(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₃(_lh_eqList_arg1³, _lh_eqList_arg2³) = case _lh_eqList_arg1³ of {
//│ 	LH_N  => case _lh_eqList_arg2³ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2³ of {
//│ 		LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqTerm_lh_₁(_lh_eqTerm_arg1¹, _lh_eqTerm_arg2¹) = case _lh_eqTerm_arg1¹ of {
//│ 	Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2¹ of {
//│ 		Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹)
//│ 		| _  => error⁰}
//│ 	| Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2¹ of {
//│ 		Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹)
//│ 		| _  => error⁰}
//│ 	| Incr  => case _lh_eqTerm_arg2¹ of {
//│ 		Incr  => [True]
//│ 		| _  => error⁰}
//│ 	| Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2¹ of {
//│ 		Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹))
//│ 		| _  => error⁰}
//│ 	| Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2¹ of {
//│ 		Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹))
//│ 		| _  => error⁰}
//│ 	| App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2¹ of {
//│ 		App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹))
//│ 		| _  => error⁰}
//│ 	| IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2¹ of {
//│ 		IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹))
//│ 		| _  => error⁰}
//│ 	| Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2¹ of {
//│ 		Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def ev_lh_₁(_lh_ev_arg1¹) = 
//│ 	let envt2¹ = myRunState_lh_₁(traverseTerm_lh_₁(_lh_ev_arg1¹), [LH_N])
//│ 	in let _lh_matchIdent¹³ = envt2¹
//│ 	in case _lh_matchIdent¹³ of {
//│ 		LH_P2 _lh_ev_LH_P2_0⁰ _lh_ev_LH_P2_1⁰ => mappend_lh_₅(mappend_lh_₆(pp_lh_₃(_lh_ev_LH_P2_1⁰), 
//│ 			let t⁴² = 	
//│ 				let t⁴³ = (fun ys⁶⁵ -> ys⁶⁵)
//│ 				in let h⁴¹ = ' '
//│ 				in (fun ys⁶⁴ -> [LH_C h⁴¹ mappend_lh_₅(t⁴³, ys⁶⁴)])
//│ 			in let h⁴⁰ = ' '
//│ 			in (fun ys⁶³ -> [LH_C h⁴⁰ mappend_lh_₅(t⁴², ys⁶³)])), ppenv_lh_₁(_lh_ev_LH_P2_0⁰))
//│ 		| _  => error⁰}
//│ def eval_lh_₁(_lh_eval_arg1¹) = case _lh_eval_arg1¹ of {
//│ 	Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e¹ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t³³ -> traverseTerm_lh_₁(t³³)))))
//│ 	| Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'⁶ -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'³ -> myReturn_lh_₁([Con (u'⁶ + v'³)])))))
//│ 	| Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰))
//│ 	| Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env⁶ -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env⁶])))
//│ 	| App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'⁷ -> apply_lh_₁(u'⁷, _lh_eval_App_1⁰)))
//│ 	| IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val³ -> if eqTerm_lh_₁(val³, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰)))
//│ 	| Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰])
//│ 	| Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy⁵ -> myReturn_lh_₁([Con 0])))
//│ 	| _  => error⁰}
//│ def fix_lh_₁ = [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₁ lfxx_lh_₂]]
//│ def fix_lh_₂ = [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₃ lfxx_lh_₄]]
//│ def flatMap_lh_₁(_lh_flatMap_arg1¹, _lh_flatMap_arg2¹) = case _lh_flatMap_arg2¹ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1¹(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1¹, _lh_flatMap_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def head_lh_₁(ls³) = case ls³ of {
//│ 	LH_C h²⁷ t²⁸ => h²⁷
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls²) = case ls² of {
//│ 	LH_C h²⁶ t²⁷ => h²⁶
//│ 	| LH_N  => error⁰}
//│ def incr_lh_₁(_lh_incr_arg1¹) = myReturn_lh_₁([Unit])
//│ def lfxx_lh_₁ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₂ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₃ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₄ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lookupVar_lh_₁(_lh_lookupVar_arg1¹) = 
//│ 	let lookup2¹ = (fun env⁴ -> myMaybe_lh_₁((fun _dummy³ -> error⁰(mappend_lh_₂₆([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_lookupVar_arg1¹))), (fun x² -> x²), lookup_lh_₁(_lh_lookupVar_arg1¹, env⁴)))
//│ 	in myBind_lh_₁(myGet_lh_₁, (fun env⁵ -> myReturn_lh_₁(lookup2¹(env⁵))))
//│ def lookup_lh_₁(_lh_lookup_arg1¹, _lh_lookup_arg2¹) = case _lh_lookup_arg2¹ of {
//│ 	LH_N  => (fun _lh_myMaybe_arg1¹ -> (fun _lh_myMaybe_arg2¹ -> _lh_myMaybe_arg1¹(99)))
//│ 	| LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {
//│ 		LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1¹, _lh_lookup_LH_P2_0⁰) then 
//│ 			let _lh_myMaybe_Just_0¹ = _lh_lookup_LH_P2_1⁰
//│ 			in (fun _lh_myMaybe_arg1² -> (fun _lh_myMaybe_arg2² -> _lh_myMaybe_arg2²(_lh_myMaybe_Just_0¹))) else lookup_lh_₁(_lh_lookup_arg1¹, _lh_lookup_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def mainMonad_lh_₁(_lh_mainMonad_arg1¹) = if null_lh_₂(_lh_mainMonad_arg1¹) then error⁰([LH_C 'A' [LH_C 'r' [LH_C 'g' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'n' [LH_C 'u' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_C '-' [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_C '-' [LH_C 'u' [LH_C 'p' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]) else ev_lh_₁([App sum0_lh_₂ [Con head_lh_₂(_lh_mainMonad_arg1¹)]])
//│ def mainSimple_lh_₁(_lh_mainSimple_arg1¹) = if null_lh_₁(_lh_mainSimple_arg1¹) then error⁰([LH_C 'A' [LH_C 'r' [LH_C 'g' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'n' [LH_C 'u' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_C '-' [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_C '-' [LH_C 'u' [LH_C 'p' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]) else showTerm_lh_₁(simpleEval_lh_₁([LH_N], [App sum0_lh_₁ [Con head_lh_₁(_lh_mainSimple_arg1¹)]]))
//│ def mappend_lh_₁(xs³², ys³²) = case xs³² of {
//│ 	LH_C h²⁵ t²⁶ => [LH_C h²⁵ mappend_lh_₁(t²⁶, ys³²)]
//│ 	| LH_N  => ys³²}
//│ def mappend_lh_₁₀(xs³⁶, ys⁴¹) = case xs³⁶ of {
//│ 	LH_C h¹⁶ t¹⁷ => [LH_C h¹⁶ mappend_lh_₁₀(t¹⁷, ys⁴¹)]
//│ 	| LH_N  => ys⁴¹}
//│ def mappend_lh_₁₁(xs⁴³, ys⁵⁸) = case xs⁴³ of {
//│ 	LH_C h¹⁵ t¹⁶ => [LH_C h¹⁵ mappend_lh_₁₁(t¹⁶, ys⁵⁸)]
//│ 	| LH_N  => ys⁵⁸}
//│ def mappend_lh_₁₂(xs²⁸, ys²⁸) = case xs²⁸ of {
//│ 	LH_C h¹⁴ t¹⁵ => [LH_C h¹⁴ mappend_lh_₁₂(t¹⁵, ys²⁸)]
//│ 	| LH_N  => ys²⁸}
//│ def mappend_lh_₁₃(xs⁴⁶, ys⁶²) = case xs⁴⁶ of {
//│ 	LH_C h¹³ t¹⁴ => [LH_C h¹³ mappend_lh_₁₃(t¹⁴, ys⁶²)]
//│ 	| LH_N  => ys⁶²}
//│ def mappend_lh_₁₄(xs⁴¹, ys⁵⁵) = case xs⁴¹ of {
//│ 	LH_C h¹² t¹³ => [LH_C h¹² mappend_lh_₁₄(t¹³, ys⁵⁵)]
//│ 	| LH_N  => ys⁵⁵}
//│ def mappend_lh_₁₅(xs²⁷, ys²⁷) = case xs²⁷ of {
//│ 	LH_C h¹¹ t¹² => [LH_C h¹¹ mappend_lh_₁₅(t¹², ys²⁷)]
//│ 	| LH_N  => ys²⁷}
//│ def mappend_lh_₁₆(xs²⁹, ys²⁹) = case xs²⁹ of {
//│ 	LH_C h¹⁰ t¹¹ => [LH_C h¹⁰ mappend_lh_₁₆(t¹¹, ys²⁹)]
//│ 	| LH_N  => ys²⁹}
//│ def mappend_lh_₁₇(xs⁴⁹, ys⁷³) = case xs⁴⁹ of {
//│ 	LH_C h⁹ t⁹ => [LH_C h⁹ mappend_lh_₁₇(t⁹, ys⁷³)]
//│ 	| LH_N  => ys⁷³}
//│ def mappend_lh_₁₈(xs³³, ys³³) = case xs³³ of {
//│ 	LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₁₈(t⁸, ys³³)]
//│ 	| LH_N  => ys³³}
//│ def mappend_lh_₁₉(xs³⁵, ys³⁵) = xs³⁵(ys³⁵)
//│ def mappend_lh_₂(xs³⁸, ys⁴³) = case xs³⁸ of {
//│ 	LH_C h²⁴ t²⁵ => [LH_C h²⁴ mappend_lh_₂(t²⁵, ys⁴³)]
//│ 	| LH_N  => ys⁴³}
//│ def mappend_lh_₂₀(xs⁴⁵, ys⁶⁰) = case xs⁴⁵ of {
//│ 	LH_C h⁶ t⁶ => 
//│ 		let t⁴¹ = mappend_lh_₂₀(t⁶, ys⁶⁰)
//│ 		in let h³⁹ = h⁶
//│ 		in (fun ys⁶¹ -> [LH_C h³⁹ mappend_lh_₂₁(t⁴¹, ys⁶¹)])
//│ 	| LH_N  => ys⁶⁰}
//│ def mappend_lh_₂₁(xs³⁰, ys³⁰) = xs³⁰(ys³⁰)
//│ def mappend_lh_₂₂(xs⁵¹, ys⁷⁵) = xs⁵¹(ys⁷⁵)
//│ def mappend_lh_₂₃(xs³⁹, ys⁴⁴) = case xs³⁹ of {
//│ 	LH_C h³ t³ => [LH_C h³ mappend_lh_₂₃(t³, ys⁴⁴)]
//│ 	| LH_N  => ys⁴⁴}
//│ def mappend_lh_₂₄(xs⁴⁸, ys⁷²) = xs⁴⁸(ys⁷²)
//│ def mappend_lh_₂₅(xs⁴⁷, ys⁶⁶) = case xs⁴⁷ of {
//│ 	LH_C h¹ t¹ => 
//│ 		let t⁴⁴ = mappend_lh_₂₅(t¹, ys⁶⁶)
//│ 		in let h⁴² = h¹
//│ 		in (fun ys⁶⁷ -> [LH_C h⁴² mappend_lh_₂₄(t⁴⁴, ys⁶⁷)])
//│ 	| LH_N  => ys⁶⁶}
//│ def mappend_lh_₂₆(xs⁵⁰, ys⁷⁴) = case xs⁵⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₂₆(t⁰, ys⁷⁴)]
//│ 	| LH_N  => ys⁷⁴}
//│ def mappend_lh_₃(xs³¹, ys³¹) = case xs³¹ of {
//│ 	LH_C h²³ t²⁴ => [LH_C h²³ mappend_lh_₃(t²⁴, ys³¹)]
//│ 	| LH_N  => ys³¹}
//│ def mappend_lh_₄(xs⁴⁴, ys⁵⁹) = xs⁴⁴(ys⁵⁹)
//│ def mappend_lh_₅(xs⁴⁰, ys⁴⁵) = xs⁴⁰(ys⁴⁵)
//│ def mappend_lh_₆(xs⁴², ys⁵⁶) = case xs⁴² of {
//│ 	LH_C h²⁰ t²¹ => 
//│ 		let t⁴⁰ = mappend_lh_₆(t²¹, ys⁵⁶)
//│ 		in let h³⁸ = h²⁰
//│ 		in (fun ys⁵⁷ -> [LH_C h³⁸ mappend_lh_₅(t⁴⁰, ys⁵⁷)])
//│ 	| LH_N  => ys⁵⁶}
//│ def mappend_lh_₇(xs³⁷, ys⁴²) = case xs³⁷ of {
//│ 	LH_C h¹⁹ t²⁰ => [LH_C h¹⁹ mappend_lh_₇(t²⁰, ys⁴²)]
//│ 	| LH_N  => ys⁴²}
//│ def mappend_lh_₈(xs³⁴, ys³⁴) = case xs³⁴ of {
//│ 	LH_C h¹⁸ t¹⁹ => [LH_C h¹⁸ mappend_lh_₈(t¹⁹, ys³⁴)]
//│ 	| LH_N  => ys³⁴}
//│ def mappend_lh_₉(xs²⁶, ys²⁶) = case xs²⁶ of {
//│ 	LH_C h¹⁷ t¹⁸ => [LH_C h¹⁷ mappend_lh_₉(t¹⁸, ys²⁶)]
//│ 	| LH_N  => ys²⁶}
//│ def myBind_lh_₁(_lh_myBind_arg1¹, _lh_myBind_arg2¹) = 
//│ 	let _lh_myRunState_MyState_0² = (fun s⁴ -> 
//│ 		let _lh_matchIdent¹⁴ = myRunState_lh_₁(_lh_myBind_arg1¹, s⁴)
//│ 		in case _lh_matchIdent¹⁴ of {
//│ 			LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => myRunState_lh_₁(_lh_myBind_arg2¹(_lh_myBind_LH_P2_1⁰), _lh_myBind_LH_P2_0⁰)
//│ 			| _  => error⁰})
//│ 	in _lh_myRunState_MyState_0²
//│ def myEvalState_lh_₁(_lh_myEvalState_arg1¹, _lh_myEvalState_arg2¹) = 
//│ 	let _lh_matchIdent⁹ = myRunState_lh_₁(_lh_myEvalState_arg1¹, _lh_myEvalState_arg2¹)
//│ 	in case _lh_matchIdent⁹ of {
//│ 		LH_P2 _lh_myEvalState_LH_P2_0⁰ _lh_myEvalState_LH_P2_1⁰ => _lh_myEvalState_LH_P2_1⁰
//│ 		| _  => error⁰}
//│ def myGet_lh_₁ = 
//│ 	let _lh_myRunState_MyState_0³ = (fun s⁵ -> [LH_P2 s⁵ s⁵])
//│ 	in _lh_myRunState_MyState_0³
//│ def myMaybe_lh_₁(_lh_myMaybe_arg1³, _lh_myMaybe_arg2³, _lh_myMaybe_arg3¹) = _lh_myMaybe_arg3¹(_lh_myMaybe_arg1³, _lh_myMaybe_arg2³)
//│ def myReturn_lh_₁(_lh_myReturn_arg1¹) = 
//│ 	let _lh_myRunState_MyState_0¹ = (fun s³ -> [LH_P2 s³ _lh_myReturn_arg1¹])
//│ 	in _lh_myRunState_MyState_0¹
//│ def myRunState_lh_₁(_lh_myRunState_arg1¹) = _lh_myRunState_arg1¹
//│ def nMinus1_lh_₁ = [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]
//│ def nMinus1_lh_₂ = [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]
//│ def null_lh_₁(_lh_null_arg1³) = case _lh_null_arg1³ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False]
//│ 	| _  => error⁰}
//│ def null_lh_₂(_lh_null_arg1²) = case _lh_null_arg1² of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False]
//│ 	| _  => error⁰}
//│ def partialSum0_lh_₁ = [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]
//│ def partialSum0_lh_₂ = [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]
//│ def pp_lh_₁(_lh_pp_arg1¹¹) = ppn_lh_₁(0, _lh_pp_arg1¹¹)
//│ def pp_lh_₂(_lh_pp_arg1¹⁵) = ppn_lh_₂(0, _lh_pp_arg1¹⁵)
//│ def pp_lh_₃(_lh_pp_arg1⁹) = ppn_lh_₃(0, _lh_pp_arg1⁹)
//│ def pp_lh_₄(_lh_pp_arg1¹²) = ppn_lh_₃(0, _lh_pp_arg1¹²)
//│ def pp_lh_₅(_lh_pp_arg1⁸) = ppn_lh_₃(0, _lh_pp_arg1⁸)
//│ def pp_lh_₆(_lh_pp_arg1¹³) = ppn_lh_₃(0, _lh_pp_arg1¹³)
//│ def pp_lh_₇(_lh_pp_arg1¹⁴) = ppn_lh_₃(0, _lh_pp_arg1¹⁴)
//│ def pp_lh_₈(_lh_pp_arg1¹⁰) = ppn_lh_₃(0, _lh_pp_arg1¹⁰)
//│ def ppenv_lh_₁(_lh_ppenv_arg1²) = mappend_lh_₁₇(mappend_lh_₁₉(
//│ 	let t³⁸ = (fun ys⁵² -> ys⁵²)
//│ 	in let h³⁶ = '['
//│ 	in (fun ys⁵¹ -> [LH_C h³⁶ mappend_lh_₁₉(t³⁸, ys⁵¹)]), flatMap_lh_₁((fun vt² -> 
//│ 	let _lh_matchIdent¹¹ = vt²
//│ 	in case _lh_matchIdent¹¹ of {
//│ 		LH_P2 _lh_ppenv_LH_P2_0¹ _lh_ppenv_LH_P2_1¹ => mappend_lh_₁₈(mappend_lh_₂₁(mappend_lh_₂₀(_lh_ppenv_LH_P2_0¹, 
//│ 			let t³⁹ = (fun ys⁵⁴ -> ys⁵⁴)
//│ 			in let h³⁷ = '='
//│ 			in (fun ys⁵³ -> [LH_C h³⁷ mappend_lh_₂₁(t³⁹, ys⁵³)])), pp_lh_₈(_lh_ppenv_LH_P2_1¹)), [LH_C ',' [LH_C ' ' [LH_N]]])
//│ 		| _  => error⁰}), _lh_ppenv_arg1²)), [LH_C ']' [LH_N]])
//│ def ppenv_lh_₂(_lh_ppenv_arg1³) = mappend_lh_₂₆(mappend_lh_₂₆([LH_C '[' [LH_N]], flatMap_lh_₁((fun vt³ -> 
//│ 	let _lh_matchIdent¹⁵ = vt³
//│ 	in case _lh_matchIdent¹⁵ of {
//│ 		LH_P2 _lh_ppenv_LH_P2_0⁰ _lh_ppenv_LH_P2_1⁰ => mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(_lh_ppenv_LH_P2_0⁰, [LH_C '=' [LH_N]]), pp_lh_₁(_lh_ppenv_LH_P2_1⁰)), [LH_C ',' [LH_C ' ' [LH_N]]])
//│ 		| _  => error⁰}), _lh_ppenv_arg1³)), [LH_C ']' [LH_N]])
//│ def ppn_lh_₁(_lh_ppn_arg1⁴, _lh_ppn_arg2⁴) = case _lh_ppn_arg2⁴ of {
//│ 	Var _lh_ppn_Var_0² => _lh_ppn_Var_0²
//│ 	| Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1⁴, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1²)))
//│ 	| Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₂(_lh_ppn_arg1⁴, 1, mappend_lh_₂₄(mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0²), 
//│ 		let t⁴⁵ = 	
//│ 			let t⁴⁶ = 	
//│ 				let t⁴⁷ = (fun ys⁷¹ -> ys⁷¹)
//│ 				in let h⁴⁵ = ' '
//│ 				in (fun ys⁷⁰ -> [LH_C h⁴⁵ mappend_lh_₂₄(t⁴⁷, ys⁷⁰)])
//│ 			in let h⁴⁴ = '+'
//│ 			in (fun ys⁶⁹ -> [LH_C h⁴⁴ mappend_lh_₂₄(t⁴⁶, ys⁶⁹)])
//│ 		in let h⁴³ = ' '
//│ 		in (fun ys⁶⁸ -> [LH_C h⁴³ mappend_lh_₂₄(t⁴⁵, ys⁶⁸)])), ppn_lh_₁(1, _lh_ppn_Add_1²)))
//│ 	| App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1⁴, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1²)))
//│ 	| IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1⁴, 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2²)))
//│ 	| Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₁(_lh_ppn_arg1⁴, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²)))
//│ 	| _  => error⁰}
//│ def ppn_lh_₂(_lh_ppn_arg1³, _lh_ppn_arg2³) = case _lh_ppn_arg2³ of {
//│ 	Var _lh_ppn_Var_0¹ => _lh_ppn_Var_0¹
//│ 	| Con _lh_ppn_Con_0¹ => string_of_int⁰(_lh_ppn_Con_0¹)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0¹ _lh_ppn_Lam_1¹ => bracket_lh_₃(_lh_ppn_arg1³, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0¹), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₂((0 - 1), _lh_ppn_Lam_1¹)))
//│ 	| Add _lh_ppn_Add_0¹ _lh_ppn_Add_1¹ => bracket_lh_₃(_lh_ppn_arg1³, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₂(1, _lh_ppn_Add_0¹), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₂(1, _lh_ppn_Add_1¹)))
//│ 	| App _lh_ppn_App_0¹ _lh_ppn_App_1¹ => bracket_lh_₃(_lh_ppn_arg1³, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₂(2, _lh_ppn_App_0¹), [LH_C ' ' [LH_N]]), ppn_lh_₂(2, _lh_ppn_App_1¹)))
//│ 	| IfZero _lh_ppn_IfZero_0¹ _lh_ppn_IfZero_1¹ _lh_ppn_IfZero_2¹ => bracket_lh_₃(_lh_ppn_arg1³, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₂(0, _lh_ppn_IfZero_0¹)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₂(0, _lh_ppn_IfZero_1¹)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₂(0, _lh_ppn_IfZero_2¹)))
//│ 	| Thunk _lh_ppn_Thunk_0¹ _lh_ppn_Thunk_1¹ => bracket_lh_₃(_lh_ppn_arg1³, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₂(3, _lh_ppn_Thunk_0¹), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1¹)))
//│ 	| _  => error⁰}
//│ def ppn_lh_₃(_lh_ppn_arg1⁵, _lh_ppn_arg2⁵) = case _lh_ppn_arg2⁵ of {
//│ 	Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰
//│ 	| Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁵, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1⁰)))
//│ 	| Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁵, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1⁰)))
//│ 	| App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁵, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1⁰)))
//│ 	| IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁵, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2⁰)))
//│ 	| Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁵, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰)))
//│ 	| _  => error⁰}
//│ def pushVar_lh_₁(_lh_pushVar_arg1¹, _lh_pushVar_arg2¹, _lh_pushVar_arg3¹) = myBind_lh_₁(myGet_lh_₁, (fun env⁷ -> withEnv_lh_₁([LH_C [LH_P2 _lh_pushVar_arg1¹ _lh_pushVar_arg2¹] env⁷], _lh_pushVar_arg3¹)))
//│ def showTerm_lh_₁(_lh_showTerm_arg1³) = case _lh_showTerm_arg1³ of {
//│ 	Con _lh_showTerm_Con_0² => mappend_lh_₄(
//│ 		let t²⁹ = 	
//│ 			let t³⁰ = 	
//│ 				let t³¹ = 	
//│ 					let t³² = (fun ys⁴⁰ -> ys⁴⁰)
//│ 					in let h³¹ = ' '
//│ 					in (fun ys³⁹ -> [LH_C h³¹ mappend_lh_₄(t³², ys³⁹)])
//│ 				in let h³⁰ = 'n'
//│ 				in (fun ys³⁸ -> [LH_C h³⁰ mappend_lh_₄(t³¹, ys³⁸)])
//│ 			in let h²⁹ = 'o'
//│ 			in (fun ys³⁷ -> [LH_C h²⁹ mappend_lh_₄(t³⁰, ys³⁷)])
//│ 		in let h²⁸ = 'C'
//│ 		in (fun ys³⁶ -> [LH_C h²⁸ mappend_lh_₄(t²⁹, ys³⁶)]), string_of_int⁰(_lh_showTerm_Con_0²))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def showTerm_lh_₂(_lh_showTerm_arg1⁴) = case _lh_showTerm_arg1⁴ of {
//│ 	Con _lh_showTerm_Con_0¹ => mappend_lh_₂₂(
//│ 		let t³⁴ = 	
//│ 			let t³⁵ = 	
//│ 				let t³⁶ = 	
//│ 					let t³⁷ = (fun ys⁵⁰ -> ys⁵⁰)
//│ 					in let h³⁵ = ' '
//│ 					in (fun ys⁴⁹ -> [LH_C h³⁵ mappend_lh_₂₂(t³⁷, ys⁴⁹)])
//│ 				in let h³⁴ = 'n'
//│ 				in (fun ys⁴⁸ -> [LH_C h³⁴ mappend_lh_₂₂(t³⁶, ys⁴⁸)])
//│ 			in let h³³ = 'o'
//│ 			in (fun ys⁴⁷ -> [LH_C h³³ mappend_lh_₂₂(t³⁵, ys⁴⁷)])
//│ 		in let h³² = 'C'
//│ 		in (fun ys⁴⁶ -> [LH_C h³² mappend_lh_₂₂(t³⁴, ys⁴⁶)]), string_of_int⁰(_lh_showTerm_Con_0¹))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def showTerm_lh_₃(_lh_showTerm_arg1⁵) = case _lh_showTerm_arg1⁵ of {
//│ 	Con _lh_showTerm_Con_0⁰ => mappend_lh_₂₆([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0⁰))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def simpleApply_lh_₁(_lh_simpleApply_arg1¹, _lh_simpleApply_arg2¹, _lh_simpleApply_arg3¹) = case _lh_simpleApply_arg2¹ of {
//│ 	Thunk _lh_simpleApply_Thunk_0⁰ _lh_simpleApply_Thunk_1⁰ => case _lh_simpleApply_Thunk_0⁰ of {
//│ 		Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3¹ _lh_simpleApply_arg1¹]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰)
//│ 		| _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2¹)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3¹)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ 	| _  => error⁰(mappend_lh_₁₄(mappend_lh_₁₃(mappend_lh_₁₆(mappend_lh_₁₀([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₄(_lh_simpleApply_arg2¹)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₇(_lh_simpleApply_arg3¹)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ def simpleEvalCon_lh_₁(_lh_simpleEvalCon_arg1³, _lh_simpleEvalCon_arg2³) = 
//│ 	let e'³ = simpleEval_lh_₁(_lh_simpleEvalCon_arg1³, _lh_simpleEvalCon_arg2³)
//│ 	in let _lh_matchIdent¹² = e'³
//│ 	in case _lh_matchIdent¹² of {
//│ 		Con _lh_simpleEvalCon_Con_0¹ => _lh_simpleEvalCon_Con_0¹
//│ 		| _  => error⁰(mappend_lh_₇([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₂(e'³)))}
//│ def simpleEvalCon_lh_₂(_lh_simpleEvalCon_arg1², _lh_simpleEvalCon_arg2²) = 
//│ 	let e'² = simpleEval_lh_₁(_lh_simpleEvalCon_arg1², _lh_simpleEvalCon_arg2²)
//│ 	in let _lh_matchIdent⁸ = e'²
//│ 	in case _lh_matchIdent⁸ of {
//│ 		Con _lh_simpleEvalCon_Con_0⁰ => _lh_simpleEvalCon_Con_0⁰
//│ 		| _  => error⁰(mappend_lh_₈([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(e'²)))}
//│ def simpleEval_lh_₁(_lh_simpleEval_arg1¹, _lh_simpleEval_arg2¹) = case _lh_simpleEval_arg2¹ of {
//│ 	Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1¹, myMaybe_lh_₁((fun _dummy⁴ -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x³ -> x³), lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1¹)))
//│ 	| Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰]
//│ 	| Incr  => [Con 0]
//│ 	| Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => 
//│ 		let addCons¹ = (fun _lh_addCons_arg1¹ -> (fun _lh_addCons_arg2¹ -> case _lh_addCons_arg1¹ of {
//│ 			Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2¹ of {
//│ 				Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)]
//│ 				| _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2¹)))}
//│ 			| _  => case _lh_addCons_arg2¹ of {
//│ 				Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1¹)))
//│ 				| _  => error⁰}}))
//│ 		in let u'⁴ = simpleEvalCon_lh_₁(_lh_simpleEval_arg1¹, _lh_simpleEval_Add_0⁰)
//│ 		in let v'² = simpleEvalCon_lh_₂(_lh_simpleEval_arg1¹, _lh_simpleEval_Add_1⁰)
//│ 		in [Con (u'⁴ + v'²)]
//│ 	| Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1¹]
//│ 	| App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => 
//│ 		let u'⁵ = simpleEval_lh_₁(_lh_simpleEval_arg1¹, _lh_simpleEval_App_0⁰)
//│ 		in simpleApply_lh_₁(_lh_simpleEval_arg1¹, u'⁵, _lh_simpleEval_App_1⁰)
//│ 	| IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => 
//│ 		let val² = simpleEval_lh_₁(_lh_simpleEval_arg1¹, _lh_simpleEval_IfZero_0⁰)
//│ 		in if eqTerm_lh_₁(val², [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1¹, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1¹, _lh_simpleEval_IfZero_2⁰)
//│ 	| Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰)
//│ 	| _  => error⁰}
//│ def sum0_lh_₁ = [App fix_lh_₁ partialSum0_lh_₁]
//│ def sum0_lh_₂ = [App fix_lh_₂ partialSum0_lh_₂]
//│ def testLambda_nofib_lh_₁(_lh_testLambda_nofib_arg1¹) = [LH_P2 mainSimple_lh_₁([LH_C _lh_testLambda_nofib_arg1¹ [LH_N]]) mainMonad_lh_₁([LH_C _lh_testLambda_nofib_arg1¹ [LH_N]])]
//│ def traverseCon_lh_₁(_lh_traverseCon_arg1¹) = myBind_lh_₁(traverseTerm_lh_₁(_lh_traverseCon_arg1¹), (fun t'¹ -> 
//│ 	let _lh_matchIdent¹⁰ = t'¹
//│ 	in case _lh_matchIdent¹⁰ of {
//│ 		Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰)
//│ 		| _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'¹)))}))
//│ def traverseTerm_lh_₁(_lh_traverseTerm_arg1¹) = eval_lh_₁(_lh_traverseTerm_arg1¹)
//│ def withEnv_lh_₁(_lh_withEnv_arg1¹, _lh_withEnv_arg2¹) = myReturn_lh_₁(myEvalState_lh_₁(_lh_withEnv_arg2¹, _lh_withEnv_arg1¹))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>> consumer ids >>>>>>>
//│ mappend_lh_₁₉, mappend_lh_₂₂, myRunState_lh_₁, mappend_lh_₂₁, mappend_lh_₂₄, mappend_lh_₄, mappend_lh_₅, myMaybe_lh_₁
//│ <<<<<<< consumer ids <<<<<<<
//│ 
//│ >>>>>>> floating out info >>>>>>>
//│ lookup_lh_₁ -> 2
//│ showTerm_lh_₁ -> 1
//│ myReturn_lh_₁ -> 1
//│ showTerm_lh_₂ -> 1
//│ ppenv_lh_₁ -> 1
//│ mappend_lh_₆ -> 3
//│ myGet_lh_₁ -> 0
//│ mappend_lh_₂₀ -> 3
//│ ev_lh_₁ -> 1
//│ mappend_lh_₂₅ -> 3
//│ ppn_lh_₁ -> 2
//│ myBind_lh_₁ -> 2
//│ <<<<<<< floating out info <<<<<<<
//│ 
//│ >>>>>>> after inlining >>>>>>>
//│ testLambda_nofib_lh_₁(primId⁰(80))
//│ def apply_lh_₁(_lh_apply_arg1⁰, _lh_apply_arg2⁰) = case _lh_apply_arg1⁰ of {
//│ 	Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {
//│ 		Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰)))))
//│ 		| _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ 	| _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ def bracket_lh_₁(_lh_bracket_arg1², _lh_bracket_arg2², _lh_bracket_arg3²) = if (_lh_bracket_arg2² <= _lh_bracket_arg1²) then mappend_lh_₂₆(mappend_lh_₂₆([LH_C '(' [LH_N]], _lh_bracket_arg3²), [LH_C ')' [LH_N]]) else _lh_bracket_arg3²
//│ def bracket_lh_₂(_lh_bracket_arg1¹, _lh_bracket_arg2¹, _lh_bracket_arg3¹) = if (_lh_bracket_arg2¹ <= _lh_bracket_arg1¹) then mappend_lh_₂₆(mappend_lh_₂₆([LH_C '(' [LH_N]], _lh_bracket_arg3¹), [LH_C ')' [LH_N]]) else _lh_bracket_arg3¹
//│ def bracket_lh_₃(_lh_bracket_arg1⁰, _lh_bracket_arg2⁰, _lh_bracket_arg3⁰) = if (_lh_bracket_arg2⁰ <= _lh_bracket_arg1⁰) then mappend_lh_₂₆(mappend_lh_₂₆([LH_C '(' [LH_N]], _lh_bracket_arg3⁰), [LH_C ')' [LH_N]]) else _lh_bracket_arg3⁰
//│ def eqEnv_lh_₁(_lh_eqEnv_arg1⁰, _lh_eqEnv_arg2⁰) = case _lh_eqEnv_arg1⁰ of {
//│ 	LH_N  => case _lh_eqEnv_arg2⁰ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {
//│ 		LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {
//│ 			LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {
//│ 				LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False]
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₁(_lh_eqList_arg1¹, _lh_eqList_arg2¹) = case _lh_eqList_arg1¹ of {
//│ 	LH_N  => case _lh_eqList_arg2¹ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {
//│ 		LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₁(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₂(_lh_eqList_arg1², _lh_eqList_arg2²) = case _lh_eqList_arg1² of {
//│ 	LH_N  => case _lh_eqList_arg2² of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {
//│ 		LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₂(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₃(_lh_eqList_arg1⁰, _lh_eqList_arg2⁰) = case _lh_eqList_arg1⁰ of {
//│ 	LH_N  => case _lh_eqList_arg2⁰ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {
//│ 		LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqTerm_lh_₁(_lh_eqTerm_arg1⁰, _lh_eqTerm_arg2⁰) = case _lh_eqTerm_arg1⁰ of {
//│ 	Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹)
//│ 		| _  => error⁰}
//│ 	| Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹)
//│ 		| _  => error⁰}
//│ 	| Incr  => case _lh_eqTerm_arg2⁰ of {
//│ 		Incr  => [True]
//│ 		| _  => error⁰}
//│ 	| Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹))
//│ 		| _  => error⁰}
//│ 	| Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹))
//│ 		| _  => error⁰}
//│ 	| App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹))
//│ 		| _  => error⁰}
//│ 	| IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹))
//│ 		| _  => error⁰}
//│ 	| Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def ev_lh_₁(_lh_ev_arg1⁰) = 
//│ 	let envt2⁰ = traverseTerm_lh_₁(_lh_ev_arg1⁰, [LH_N])
//│ 	in let _lh_matchIdent⁵ = envt2⁰
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_P2 _lh_ev_LH_P2_0⁰ _lh_ev_LH_P2_1⁰ => mappend_lh_₆(pp_lh_₃(_lh_ev_LH_P2_1⁰), 
//│ 			let t³¹ = 	
//│ 				let t³² = (fun ys³⁷ -> ys³⁷)
//│ 				in let h³⁰ = ' '
//│ 				in (fun ys³⁸ -> [LH_C h³⁰ t³²(ys³⁸)])
//│ 			in let h³¹ = ' '
//│ 			in (fun ys³⁹ -> [LH_C h³¹ t³¹(ys³⁹)]), ppenv_lh_₁(_lh_ev_LH_P2_0⁰))
//│ 		| _  => error⁰}
//│ def eval_lh_₁(_lh_eval_arg1⁰) = case _lh_eval_arg1⁰ of {
//│ 	Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹³ -> traverseTerm_lh_₁(t¹³)))))
//│ 	| Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'² -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'¹ -> myReturn_lh_₁([Con (u'² + v'¹)])))))
//│ 	| Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰))
//│ 	| Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env² -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env²])))
//│ 	| App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'³ -> apply_lh_₁(u'³, _lh_eval_App_1⁰)))
//│ 	| IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val¹ -> if eqTerm_lh_₁(val¹, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰)))
//│ 	| Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰])
//│ 	| Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy² -> myReturn_lh_₁([Con 0])))
//│ 	| _  => error⁰}
//│ def fix_lh_₁ = [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₁ lfxx_lh_₂]]
//│ def fix_lh_₂ = [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₃ lfxx_lh_₄]]
//│ def flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_arg2⁰) = case _lh_flatMap_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def head_lh_₁(ls¹) = case ls¹ of {
//│ 	LH_C h³⁷ t³⁸ => h³⁷
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls⁰) = case ls⁰ of {
//│ 	LH_C h⁶ t⁶ => h⁶
//│ 	| LH_N  => error⁰}
//│ def incr_lh_₁(_lh_incr_arg1⁰) = myReturn_lh_₁([Unit])
//│ def lfxx_lh_₁ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₂ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₃ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₄ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lookupVar_lh_₁(_lh_lookupVar_arg1⁰) = 
//│ 	let lookup2⁰ = (fun env⁰ -> lookup_lh_₁(_lh_lookupVar_arg1⁰, env⁰, (fun _dummy⁰ -> error⁰(mappend_lh_₂₆([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_lookupVar_arg1⁰))), (fun x⁰ -> x⁰)))
//│ 	in myBind_lh_₁(myGet_lh_₁, (fun env¹ -> myReturn_lh_₁(lookup2⁰(env¹))))
//│ def lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_arg2⁰) = case _lh_lookup_arg2⁰ of {
//│ 	LH_N  => (fun _lh_myMaybe_arg1⁰ -> (fun _lh_myMaybe_arg2⁰ -> _lh_myMaybe_arg1⁰(99)))
//│ 	| LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {
//│ 		LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then 
//│ 			let _lh_myMaybe_Just_0⁰ = _lh_lookup_LH_P2_1⁰
//│ 			in (fun _lh_myMaybe_arg1¹ -> (fun _lh_myMaybe_arg2¹ -> _lh_myMaybe_arg2¹(_lh_myMaybe_Just_0⁰))) else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def mainMonad_lh_₁(_lh_mainMonad_arg1⁰) = if null_lh_₂(_lh_mainMonad_arg1⁰) then error⁰([LH_C 'A' [LH_C 'r' [LH_C 'g' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'n' [LH_C 'u' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_C '-' [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_C '-' [LH_C 'u' [LH_C 'p' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]) else ev_lh_₁([App sum0_lh_₂ [Con head_lh_₂(_lh_mainMonad_arg1⁰)]])
//│ def mainSimple_lh_₁(_lh_mainSimple_arg1⁰) = if null_lh_₁(_lh_mainSimple_arg1⁰) then error⁰([LH_C 'A' [LH_C 'r' [LH_C 'g' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'n' [LH_C 'u' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_C '-' [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_C '-' [LH_C 'u' [LH_C 'p' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]) else showTerm_lh_₁(simpleEval_lh_₁([LH_N], [App sum0_lh_₁ [Con head_lh_₁(_lh_mainSimple_arg1⁰)]]))
//│ def mappend_lh_₁(xs⁶, ys⁶) = case xs⁶ of {
//│ 	LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₁(t⁵, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₁₀(xs¹⁰, ys¹⁵) = case xs¹⁰ of {
//│ 	LH_C h¹³ t¹⁴ => [LH_C h¹³ mappend_lh_₁₀(t¹⁴, ys¹⁵)]
//│ 	| LH_N  => ys¹⁵}
//│ def mappend_lh_₁₁(xs¹⁷, ys³²) = case xs¹⁷ of {
//│ 	LH_C h²⁶ t²⁷ => [LH_C h²⁶ mappend_lh_₁₁(t²⁷, ys³²)]
//│ 	| LH_N  => ys³²}
//│ def mappend_lh_₁₂(xs², ys²) = case xs² of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₁₂(t², ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₁₃(xs²⁰, ys³⁶) = case xs²⁰ of {
//│ 	LH_C h²⁹ t³⁰ => [LH_C h²⁹ mappend_lh_₁₃(t³⁰, ys³⁶)]
//│ 	| LH_N  => ys³⁶}
//│ def mappend_lh_₁₄(xs¹⁵, ys²⁹) = case xs¹⁵ of {
//│ 	LH_C h²³ t²⁴ => [LH_C h²³ mappend_lh_₁₄(t²⁴, ys²⁹)]
//│ 	| LH_N  => ys²⁹}
//│ def mappend_lh_₁₅(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₁₅(t¹, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₁₆(xs³, ys³) = case xs³ of {
//│ 	LH_C h³ t³ => [LH_C h³ mappend_lh_₁₆(t³, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₁₇(xs²³, ys⁴⁷) = case xs²³ of {
//│ 	LH_C h³⁸ t³⁹ => [LH_C h³⁸ mappend_lh_₁₇(t³⁹, ys⁴⁷)]
//│ 	| LH_N  => ys⁴⁷}
//│ def mappend_lh_₁₈(xs⁷, ys⁷) = case xs⁷ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₈(t⁷, ys⁷)]
//│ 	| LH_N  => ys⁷}
//│ def mappend_lh_₁₉(xs⁹, ys⁹) = xs⁹(ys⁹)
//│ def mappend_lh_₂(xs¹², ys¹⁷) = case xs¹² of {
//│ 	LH_C h¹⁵ t¹⁶ => [LH_C h¹⁵ mappend_lh_₂(t¹⁶, ys¹⁷)]
//│ 	| LH_N  => ys¹⁷}
//│ def mappend_lh_₂₀(xs¹⁹, ys³⁴) = case xs¹⁹ of {
//│ 	LH_C h²⁷ t²⁸ => 
//│ 		let t²⁹ = mappend_lh_₂₀(t²⁸, ys³⁴)
//│ 		in let h²⁸ = h²⁷
//│ 		in (fun ys³⁵ -> [LH_C h²⁸ t²⁹(ys³⁵)])
//│ 	| LH_N  => ys³⁴}
//│ def mappend_lh_₂₁(xs⁴, ys⁴) = xs⁴(ys⁴)
//│ def mappend_lh_₂₂(xs²⁵, ys⁴⁹) = xs²⁵(ys⁴⁹)
//│ def mappend_lh_₂₃(xs¹³, ys¹⁸) = case xs¹³ of {
//│ 	LH_C h¹⁶ t¹⁷ => [LH_C h¹⁶ mappend_lh_₂₃(t¹⁷, ys¹⁸)]
//│ 	| LH_N  => ys¹⁸}
//│ def mappend_lh_₂₄(xs²², ys⁴⁶) = xs²²(ys⁴⁶)
//│ def mappend_lh_₂₅(xs²¹, ys⁴⁰) = case xs²¹ of {
//│ 	LH_C h³² t³³ => 
//│ 		let t³⁴ = mappend_lh_₂₅(t³³, ys⁴⁰)
//│ 		in let h³³ = h³²
//│ 		in (fun ys⁴¹ -> [LH_C h³³ t³⁴(ys⁴¹)])
//│ 	| LH_N  => ys⁴⁰}
//│ def mappend_lh_₂₆(xs²⁴, ys⁴⁸) = case xs²⁴ of {
//│ 	LH_C h³⁹ t⁴⁰ => [LH_C h³⁹ mappend_lh_₂₆(t⁴⁰, ys⁴⁸)]
//│ 	| LH_N  => ys⁴⁸}
//│ def mappend_lh_₃(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₃(t⁴, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₄(xs¹⁸, ys³³) = xs¹⁸(ys³³)
//│ def mappend_lh_₅(xs¹⁴, ys¹⁹) = xs¹⁴(ys¹⁹)
//│ def mappend_lh_₆(xs¹⁶, ys³⁰) = case xs¹⁶ of {
//│ 	LH_C h²⁴ t²⁵ => 
//│ 		let t²⁶ = mappend_lh_₆(t²⁵, ys³⁰)
//│ 		in let h²⁵ = h²⁴
//│ 		in (fun ys³¹ -> [LH_C h²⁵ t²⁶(ys³¹)])
//│ 	| LH_N  => ys³⁰}
//│ def mappend_lh_₇(xs¹¹, ys¹⁶) = case xs¹¹ of {
//│ 	LH_C h¹⁴ t¹⁵ => [LH_C h¹⁴ mappend_lh_₇(t¹⁵, ys¹⁶)]
//│ 	| LH_N  => ys¹⁶}
//│ def mappend_lh_₈(xs⁸, ys⁸) = case xs⁸ of {
//│ 	LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₈(t⁸, ys⁸)]
//│ 	| LH_N  => ys⁸}
//│ def mappend_lh_₉(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₉(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def myBind_lh_₁(_lh_myBind_arg1⁰, _lh_myBind_arg2⁰) = 
//│ 	let _lh_myRunState_MyState_0¹ = (fun s¹ -> 
//│ 		let _lh_matchIdent⁶ = _lh_myBind_arg1⁰(s¹)
//│ 		in case _lh_matchIdent⁶ of {
//│ 			LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => _lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰, _lh_myBind_LH_P2_0⁰)
//│ 			| _  => error⁰})
//│ 	in _lh_myRunState_MyState_0¹
//│ def myEvalState_lh_₁(_lh_myEvalState_arg1⁰, _lh_myEvalState_arg2⁰) = 
//│ 	let _lh_matchIdent¹ = _lh_myEvalState_arg1⁰(_lh_myEvalState_arg2⁰)
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P2 _lh_myEvalState_LH_P2_0⁰ _lh_myEvalState_LH_P2_1⁰ => _lh_myEvalState_LH_P2_1⁰
//│ 		| _  => error⁰}
//│ def myGet_lh_₁ = 
//│ 	let _lh_myRunState_MyState_0² = (fun s² -> [LH_P2 s² s²])
//│ 	in _lh_myRunState_MyState_0²
//│ def myMaybe_lh_₁(_lh_myMaybe_arg1², _lh_myMaybe_arg2², _lh_myMaybe_arg3⁰) = _lh_myMaybe_arg3⁰(_lh_myMaybe_arg1², _lh_myMaybe_arg2²)
//│ def myReturn_lh_₁(_lh_myReturn_arg1⁰) = 
//│ 	let _lh_myRunState_MyState_0⁰ = (fun s⁰ -> [LH_P2 s⁰ _lh_myReturn_arg1⁰])
//│ 	in _lh_myRunState_MyState_0⁰
//│ def myRunState_lh_₁(_lh_myRunState_arg1⁰) = _lh_myRunState_arg1⁰
//│ def nMinus1_lh_₁ = [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]
//│ def nMinus1_lh_₂ = [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]
//│ def null_lh_₁(_lh_null_arg1¹) = case _lh_null_arg1¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False]
//│ 	| _  => error⁰}
//│ def null_lh_₂(_lh_null_arg1⁰) = case _lh_null_arg1⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False]
//│ 	| _  => error⁰}
//│ def partialSum0_lh_₁ = [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]
//│ def partialSum0_lh_₂ = [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]
//│ def pp_lh_₁(_lh_pp_arg1³) = ppn_lh_₁(0, _lh_pp_arg1³)
//│ def pp_lh_₂(_lh_pp_arg1⁷) = ppn_lh_₂(0, _lh_pp_arg1⁷)
//│ def pp_lh_₃(_lh_pp_arg1¹) = ppn_lh_₃(0, _lh_pp_arg1¹)
//│ def pp_lh_₄(_lh_pp_arg1⁴) = ppn_lh_₃(0, _lh_pp_arg1⁴)
//│ def pp_lh_₅(_lh_pp_arg1⁰) = ppn_lh_₃(0, _lh_pp_arg1⁰)
//│ def pp_lh_₆(_lh_pp_arg1⁵) = ppn_lh_₃(0, _lh_pp_arg1⁵)
//│ def pp_lh_₇(_lh_pp_arg1⁶) = ppn_lh_₃(0, _lh_pp_arg1⁶)
//│ def pp_lh_₈(_lh_pp_arg1²) = ppn_lh_₃(0, _lh_pp_arg1²)
//│ def ppenv_lh_₁(_lh_ppenv_arg1⁰) = mappend_lh_₁₇(
//│ 	let t²² = (fun ys²⁵ -> ys²⁵)
//│ 	in let h²¹ = '['
//│ 	in (fun ys²⁶ -> [LH_C h²¹ t²²(ys²⁶)])(flatMap_lh_₁((fun vt⁰ -> 
//│ 	let _lh_matchIdent³ = vt⁰
//│ 	in case _lh_matchIdent³ of {
//│ 		LH_P2 _lh_ppenv_LH_P2_0⁰ _lh_ppenv_LH_P2_1⁰ => mappend_lh_₁₈(mappend_lh_₂₀(_lh_ppenv_LH_P2_0⁰, 
//│ 			let t²³ = (fun ys²⁷ -> ys²⁷)
//│ 			in let h²² = '='
//│ 			in (fun ys²⁸ -> [LH_C h²² t²³(ys²⁸)]), pp_lh_₈(_lh_ppenv_LH_P2_1⁰)), [LH_C ',' [LH_C ' ' [LH_N]]])
//│ 		| _  => error⁰}), _lh_ppenv_arg1⁰)), [LH_C ']' [LH_N]])
//│ def ppenv_lh_₂(_lh_ppenv_arg1¹) = mappend_lh_₂₆(mappend_lh_₂₆([LH_C '[' [LH_N]], flatMap_lh_₁((fun vt¹ -> 
//│ 	let _lh_matchIdent⁷ = vt¹
//│ 	in case _lh_matchIdent⁷ of {
//│ 		LH_P2 _lh_ppenv_LH_P2_0¹ _lh_ppenv_LH_P2_1¹ => mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(_lh_ppenv_LH_P2_0¹, [LH_C '=' [LH_N]]), pp_lh_₁(_lh_ppenv_LH_P2_1¹)), [LH_C ',' [LH_C ' ' [LH_N]]])
//│ 		| _  => error⁰}), _lh_ppenv_arg1¹)), [LH_C ']' [LH_N]])
//│ def ppn_lh_₁(_lh_ppn_arg1¹, _lh_ppn_arg2¹) = case _lh_ppn_arg2¹ of {
//│ 	Var _lh_ppn_Var_0¹ => _lh_ppn_Var_0¹
//│ 	| Con _lh_ppn_Con_0¹ => string_of_int⁰(_lh_ppn_Con_0¹)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0¹ _lh_ppn_Lam_1¹ => bracket_lh_₃(_lh_ppn_arg1¹, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0¹), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1¹)))
//│ 	| Add _lh_ppn_Add_0¹ _lh_ppn_Add_1¹ => bracket_lh_₂(_lh_ppn_arg1¹, 1, mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0¹), 
//│ 		let t³⁵ = 	
//│ 			let t³⁶ = 	
//│ 				let t³⁷ = (fun ys⁴² -> ys⁴²)
//│ 				in let h³⁴ = ' '
//│ 				in (fun ys⁴³ -> [LH_C h³⁴ t³⁷(ys⁴³)])
//│ 			in let h³⁵ = '+'
//│ 			in (fun ys⁴⁴ -> [LH_C h³⁵ t³⁶(ys⁴⁴)])
//│ 		in let h³⁶ = ' '
//│ 		in (fun ys⁴⁵ -> [LH_C h³⁶ t³⁵(ys⁴⁵)]), ppn_lh_₁(1, _lh_ppn_Add_1¹)))
//│ 	| App _lh_ppn_App_0¹ _lh_ppn_App_1¹ => bracket_lh_₃(_lh_ppn_arg1¹, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0¹), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1¹)))
//│ 	| IfZero _lh_ppn_IfZero_0¹ _lh_ppn_IfZero_1¹ _lh_ppn_IfZero_2¹ => bracket_lh_₃(_lh_ppn_arg1¹, 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0¹)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1¹)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2¹)))
//│ 	| Thunk _lh_ppn_Thunk_0¹ _lh_ppn_Thunk_1¹ => bracket_lh_₁(_lh_ppn_arg1¹, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0¹), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1¹)))
//│ 	| _  => error⁰}
//│ def ppn_lh_₂(_lh_ppn_arg1⁰, _lh_ppn_arg2⁰) = case _lh_ppn_arg2⁰ of {
//│ 	Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰
//│ 	| Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₂((0 - 1), _lh_ppn_Lam_1⁰)))
//│ 	| Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₂(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₂(1, _lh_ppn_Add_1⁰)))
//│ 	| App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₂(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₂(2, _lh_ppn_App_1⁰)))
//│ 	| IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₂(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₂(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₂(0, _lh_ppn_IfZero_2⁰)))
//│ 	| Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₂(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰)))
//│ 	| _  => error⁰}
//│ def ppn_lh_₃(_lh_ppn_arg1², _lh_ppn_arg2²) = case _lh_ppn_arg2² of {
//│ 	Var _lh_ppn_Var_0² => _lh_ppn_Var_0²
//│ 	| Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1²)))
//│ 	| Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₃(_lh_ppn_arg1², 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1²)))
//│ 	| App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1²)))
//│ 	| IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2²)))
//│ 	| Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²)))
//│ 	| _  => error⁰}
//│ def pushVar_lh_₁(_lh_pushVar_arg1⁰, _lh_pushVar_arg2⁰, _lh_pushVar_arg3⁰) = myBind_lh_₁(myGet_lh_₁, (fun env³ -> withEnv_lh_₁([LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env³], _lh_pushVar_arg3⁰)))
//│ def showTerm_lh_₁(_lh_showTerm_arg1⁰) = case _lh_showTerm_arg1⁰ of {
//│ 	Con _lh_showTerm_Con_0⁰ => 
//│ 		let t⁹ = 	
//│ 			let t¹⁰ = 	
//│ 				let t¹¹ = 	
//│ 					let t¹² = (fun ys¹⁰ -> ys¹⁰)
//│ 					in let h⁹ = ' '
//│ 					in (fun ys¹¹ -> [LH_C h⁹ t¹²(ys¹¹)])
//│ 				in let h¹⁰ = 'n'
//│ 				in (fun ys¹² -> [LH_C h¹⁰ t¹¹(ys¹²)])
//│ 			in let h¹¹ = 'o'
//│ 			in (fun ys¹³ -> [LH_C h¹¹ t¹⁰(ys¹³)])
//│ 		in let h¹² = 'C'
//│ 		in (fun ys¹⁴ -> [LH_C h¹² t⁹(ys¹⁴)])(string_of_int⁰(_lh_showTerm_Con_0⁰))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def showTerm_lh_₂(_lh_showTerm_arg1¹) = case _lh_showTerm_arg1¹ of {
//│ 	Con _lh_showTerm_Con_0¹ => 
//│ 		let t¹⁸ = 	
//│ 			let t¹⁹ = 	
//│ 				let t²⁰ = 	
//│ 					let t²¹ = (fun ys²⁰ -> ys²⁰)
//│ 					in let h¹⁷ = ' '
//│ 					in (fun ys²¹ -> [LH_C h¹⁷ t²¹(ys²¹)])
//│ 				in let h¹⁸ = 'n'
//│ 				in (fun ys²² -> [LH_C h¹⁸ t²⁰(ys²²)])
//│ 			in let h¹⁹ = 'o'
//│ 			in (fun ys²³ -> [LH_C h¹⁹ t¹⁹(ys²³)])
//│ 		in let h²⁰ = 'C'
//│ 		in (fun ys²⁴ -> [LH_C h²⁰ t¹⁸(ys²⁴)])(string_of_int⁰(_lh_showTerm_Con_0¹))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def showTerm_lh_₃(_lh_showTerm_arg1²) = case _lh_showTerm_arg1² of {
//│ 	Con _lh_showTerm_Con_0² => mappend_lh_₂₆([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0²))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def simpleApply_lh_₁(_lh_simpleApply_arg1⁰, _lh_simpleApply_arg2⁰, _lh_simpleApply_arg3⁰) = case _lh_simpleApply_arg2⁰ of {
//│ 	Thunk _lh_simpleApply_Thunk_0⁰ _lh_simpleApply_Thunk_1⁰ => case _lh_simpleApply_Thunk_0⁰ of {
//│ 		Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰)
//│ 		| _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ 	| _  => error⁰(mappend_lh_₁₄(mappend_lh_₁₃(mappend_lh_₁₆(mappend_lh_₁₀([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₄(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₇(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ def simpleEvalCon_lh_₁(_lh_simpleEvalCon_arg1¹, _lh_simpleEvalCon_arg2¹) = 
//│ 	let e'¹ = simpleEval_lh_₁(_lh_simpleEvalCon_arg1¹, _lh_simpleEvalCon_arg2¹)
//│ 	in let _lh_matchIdent⁴ = e'¹
//│ 	in case _lh_matchIdent⁴ of {
//│ 		Con _lh_simpleEvalCon_Con_0¹ => _lh_simpleEvalCon_Con_0¹
//│ 		| _  => error⁰(mappend_lh_₇([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₂(e'¹)))}
//│ def simpleEvalCon_lh_₂(_lh_simpleEvalCon_arg1⁰, _lh_simpleEvalCon_arg2⁰) = 
//│ 	let e'⁰ = simpleEval_lh_₁(_lh_simpleEvalCon_arg1⁰, _lh_simpleEvalCon_arg2⁰)
//│ 	in let _lh_matchIdent⁰ = e'⁰
//│ 	in case _lh_matchIdent⁰ of {
//│ 		Con _lh_simpleEvalCon_Con_0⁰ => _lh_simpleEvalCon_Con_0⁰
//│ 		| _  => error⁰(mappend_lh_₈([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(e'⁰)))}
//│ def simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_arg2⁰) = case _lh_simpleEval_arg2⁰ of {
//│ 	Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰, (fun _dummy¹ -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹)))
//│ 	| Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰]
//│ 	| Incr  => [Con 0]
//│ 	| Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => 
//│ 		let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {
//│ 			Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {
//│ 				Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)]
//│ 				| _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))}
//│ 			| _  => case _lh_addCons_arg2⁰ of {
//│ 				Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰)))
//│ 				| _  => error⁰}}))
//│ 		in let u'⁰ = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ 		in let v'⁰ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ 		in [Con (u'⁰ + v'⁰)]
//│ 	| Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰]
//│ 	| App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => 
//│ 		let u'¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ 		in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'¹, _lh_simpleEval_App_1⁰)
//│ 	| IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => 
//│ 		let val⁰ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ 		in if eqTerm_lh_₁(val⁰, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰)
//│ 	| Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰)
//│ 	| _  => error⁰}
//│ def sum0_lh_₁ = [App fix_lh_₁ partialSum0_lh_₁]
//│ def sum0_lh_₂ = [App fix_lh_₂ partialSum0_lh_₂]
//│ def testLambda_nofib_lh_₁(_lh_testLambda_nofib_arg1⁰) = [LH_P2 mainSimple_lh_₁([LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]]) mainMonad_lh_₁([LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]])]
//│ def traverseCon_lh_₁(_lh_traverseCon_arg1⁰) = myBind_lh_₁(traverseTerm_lh_₁(_lh_traverseCon_arg1⁰), (fun t'⁰ -> 
//│ 	let _lh_matchIdent² = t'⁰
//│ 	in case _lh_matchIdent² of {
//│ 		Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰)
//│ 		| _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}))
//│ def traverseTerm_lh_₁(_lh_traverseTerm_arg1⁰) = eval_lh_₁(_lh_traverseTerm_arg1⁰)
//│ def withEnv_lh_₁(_lh_withEnv_arg1⁰, _lh_withEnv_arg2⁰) = myReturn_lh_₁(myEvalState_lh_₁(_lh_withEnv_arg2⁰, _lh_withEnv_arg1⁰))
//│ <<<<<<< after inlining <<<<<<<
//│ 
//│ >>>>>>> after floating out >>>>>>>
//│ testLambda_nofib_lh_₁(primId⁰(80))
//│ def apply_lh_₁(_lh_apply_arg1⁰, _lh_apply_arg2⁰) = case _lh_apply_arg1⁰ of {
//│ 	Thunk _lh_apply_Thunk_0⁰ _lh_apply_Thunk_1⁰ => case _lh_apply_Thunk_0⁰ of {
//│ 		Lam _lh_apply_Lam_0⁰ _lh_apply_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun orig⁰ -> withEnv_lh_₁(_lh_apply_Thunk_1⁰, pushVar_lh_₁(_lh_apply_Lam_0⁰, [Thunk _lh_apply_arg2⁰ orig⁰], traverseTerm_lh_₁(_lh_apply_Lam_1⁰)))))
//│ 		| _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ 	| _  => error⁰(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₈(_lh_apply_arg1⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₈(_lh_apply_arg2⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ def bracket_lh_₁(_lh_bracket_arg1², _lh_bracket_arg2², _lh_bracket_arg3²) = if (_lh_bracket_arg2² <= _lh_bracket_arg1²) then mappend_lh_₂₆(mappend_lh_₂₆([LH_C '(' [LH_N]], _lh_bracket_arg3²), [LH_C ')' [LH_N]]) else _lh_bracket_arg3²
//│ def bracket_lh_₂(_lh_bracket_arg1¹, _lh_bracket_arg2¹, _lh_bracket_arg3¹) = if (_lh_bracket_arg2¹ <= _lh_bracket_arg1¹) then mappend_lh_₂₆(mappend_lh_₂₆([LH_C '(' [LH_N]], _lh_bracket_arg3¹), [LH_C ')' [LH_N]]) else _lh_bracket_arg3¹
//│ def bracket_lh_₃(_lh_bracket_arg1⁰, _lh_bracket_arg2⁰, _lh_bracket_arg3⁰) = if (_lh_bracket_arg2⁰ <= _lh_bracket_arg1⁰) then mappend_lh_₂₆(mappend_lh_₂₆([LH_C '(' [LH_N]], _lh_bracket_arg3⁰), [LH_C ')' [LH_N]]) else _lh_bracket_arg3⁰
//│ def eqEnv_lh_₁(_lh_eqEnv_arg1⁰, _lh_eqEnv_arg2⁰) = case _lh_eqEnv_arg1⁰ of {
//│ 	LH_N  => case _lh_eqEnv_arg2⁰ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqEnv_LH_C_0⁰ _lh_eqEnv_LH_C_1⁰ => case _lh_eqEnv_LH_C_0⁰ of {
//│ 		LH_P2 _lh_eqEnv_LH_P2_0⁰ _lh_eqEnv_LH_P2_1⁰ => case _lh_eqEnv_arg2⁰ of {
//│ 			LH_C _lh_eqEnv_LH_C_0¹ _lh_eqEnv_LH_C_1¹ => case _lh_eqEnv_LH_C_0¹ of {
//│ 				LH_P2 _lh_eqEnv_LH_P2_0¹ _lh_eqEnv_LH_P2_1¹ => if (eqList_lh_₃(_lh_eqEnv_LH_P2_0⁰, _lh_eqEnv_LH_P2_0¹) && eqTerm_lh_₁(_lh_eqEnv_LH_P2_1⁰, _lh_eqEnv_LH_P2_1¹)) then eqEnv_lh_₁(_lh_eqEnv_LH_C_1⁰, _lh_eqEnv_LH_C_1¹) else [False]
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₁(_lh_eqList_arg1¹, _lh_eqList_arg2¹) = case _lh_eqList_arg1¹ of {
//│ 	LH_N  => case _lh_eqList_arg2¹ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0² _lh_eqList_LH_C_1² => case _lh_eqList_arg2¹ of {
//│ 		LH_C _lh_eqList_LH_C_0³ _lh_eqList_LH_C_1³ => if polyEq⁰(_lh_eqList_LH_C_0², _lh_eqList_LH_C_0³) then eqList_lh_₁(_lh_eqList_LH_C_1², _lh_eqList_LH_C_1³) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₂(_lh_eqList_arg1², _lh_eqList_arg2²) = case _lh_eqList_arg1² of {
//│ 	LH_N  => case _lh_eqList_arg2² of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0⁴ _lh_eqList_LH_C_1⁴ => case _lh_eqList_arg2² of {
//│ 		LH_C _lh_eqList_LH_C_0⁵ _lh_eqList_LH_C_1⁵ => if polyEq⁰(_lh_eqList_LH_C_0⁴, _lh_eqList_LH_C_0⁵) then eqList_lh_₂(_lh_eqList_LH_C_1⁴, _lh_eqList_LH_C_1⁵) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqList_lh_₃(_lh_eqList_arg1⁰, _lh_eqList_arg2⁰) = case _lh_eqList_arg1⁰ of {
//│ 	LH_N  => case _lh_eqList_arg2⁰ of {
//│ 		LH_N  => [True]
//│ 		| _  => error⁰}
//│ 	| LH_C _lh_eqList_LH_C_0⁰ _lh_eqList_LH_C_1⁰ => case _lh_eqList_arg2⁰ of {
//│ 		LH_C _lh_eqList_LH_C_0¹ _lh_eqList_LH_C_1¹ => if polyEq⁰(_lh_eqList_LH_C_0⁰, _lh_eqList_LH_C_0¹) then eqList_lh_₃(_lh_eqList_LH_C_1⁰, _lh_eqList_LH_C_1¹) else [False]
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def eqTerm_lh_₁(_lh_eqTerm_arg1⁰, _lh_eqTerm_arg2⁰) = case _lh_eqTerm_arg1⁰ of {
//│ 	Var _lh_eqTerm_Var_0⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Var _lh_eqTerm_Var_0¹ => eqList_lh_₃(_lh_eqTerm_Var_0⁰, _lh_eqTerm_Var_0¹)
//│ 		| _  => error⁰}
//│ 	| Con _lh_eqTerm_Con_0⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Con _lh_eqTerm_Con_0¹ => (_lh_eqTerm_Con_0⁰ == _lh_eqTerm_Con_0¹)
//│ 		| _  => error⁰}
//│ 	| Incr  => case _lh_eqTerm_arg2⁰ of {
//│ 		Incr  => [True]
//│ 		| _  => error⁰}
//│ 	| Add _lh_eqTerm_Add_0⁰ _lh_eqTerm_Add_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Add _lh_eqTerm_Add_0¹ _lh_eqTerm_Add_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Add_0⁰, _lh_eqTerm_Add_0¹) && eqTerm_lh_₁(_lh_eqTerm_Add_1⁰, _lh_eqTerm_Add_1¹))
//│ 		| _  => error⁰}
//│ 	| Lam _lh_eqTerm_Lam_0⁰ _lh_eqTerm_Lam_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Lam _lh_eqTerm_Lam_0¹ _lh_eqTerm_Lam_1¹ => (eqList_lh_₂(_lh_eqTerm_Lam_0⁰, _lh_eqTerm_Lam_0¹) && eqTerm_lh_₁(_lh_eqTerm_Lam_1⁰, _lh_eqTerm_Lam_1¹))
//│ 		| _  => error⁰}
//│ 	| App _lh_eqTerm_App_0⁰ _lh_eqTerm_App_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		App _lh_eqTerm_App_0¹ _lh_eqTerm_App_1¹ => (eqTerm_lh_₁(_lh_eqTerm_App_0⁰, _lh_eqTerm_App_0¹) && eqTerm_lh_₁(_lh_eqTerm_App_1⁰, _lh_eqTerm_App_1¹))
//│ 		| _  => error⁰}
//│ 	| IfZero _lh_eqTerm_IfZero_0⁰ _lh_eqTerm_IfZero_1⁰ _lh_eqTerm_IfZero_2⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		IfZero _lh_eqTerm_IfZero_0¹ _lh_eqTerm_IfZero_1¹ _lh_eqTerm_IfZero_2¹ => ((eqTerm_lh_₁(_lh_eqTerm_IfZero_0⁰, _lh_eqTerm_IfZero_0¹) && eqTerm_lh_₁(_lh_eqTerm_IfZero_1⁰, _lh_eqTerm_IfZero_1¹)) && eqTerm_lh_₁(_lh_eqTerm_IfZero_2⁰, _lh_eqTerm_IfZero_2¹))
//│ 		| _  => error⁰}
//│ 	| Thunk _lh_eqTerm_Thunk_0⁰ _lh_eqTerm_Thunk_1⁰ => case _lh_eqTerm_arg2⁰ of {
//│ 		Thunk _lh_eqTerm_Thunk_0¹ _lh_eqTerm_Thunk_1¹ => (eqTerm_lh_₁(_lh_eqTerm_Thunk_0⁰, _lh_eqTerm_Thunk_0¹) && eqEnv_lh_₁(_lh_eqTerm_Thunk_1⁰, _lh_eqTerm_Thunk_1¹))
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def ev_lh_₁(_lh_ev_arg1⁰) = 
//│ 	let envt2⁰ = traverseTerm_lh_₁(_lh_ev_arg1⁰, [LH_N])
//│ 	in let _lh_matchIdent⁵ = envt2⁰
//│ 	in case _lh_matchIdent⁵ of {
//│ 		LH_P2 _lh_ev_LH_P2_0⁰ _lh_ev_LH_P2_1⁰ => mappend_lh_₆(pp_lh_₃(_lh_ev_LH_P2_1⁰), 
//│ 			let t³¹ = 	
//│ 				let t³² = (fun ys³⁷ -> ys³⁷)
//│ 				in let h³⁰ = ' '
//│ 				in (fun ys³⁸ -> [LH_C h³⁰ t³²(ys³⁸)])
//│ 			in let h³¹ = ' '
//│ 			in (fun ys³⁹ -> [LH_C h³¹ t³¹(ys³⁹)]), ppenv_lh_₁(_lh_ev_LH_P2_0⁰))
//│ 		| _  => error⁰}
//│ def eval_lh_₁(_lh_eval_arg1⁰) = case _lh_eval_arg1⁰ of {
//│ 	Var _lh_eval_Var_0⁰ => myBind_lh_₁(myGet_lh_₁, (fun e⁰ -> myBind_lh_₁(lookupVar_lh_₁(_lh_eval_Var_0⁰), (fun t¹³ -> traverseTerm_lh_₁(t¹³)))))
//│ 	| Add _lh_eval_Add_0⁰ _lh_eval_Add_1⁰ => myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_0⁰), (fun u'² -> myBind_lh_₁(traverseCon_lh_₁(_lh_eval_Add_1⁰), (fun v'¹ -> myReturn_lh_₁([Con (u'² + v'¹)])))))
//│ 	| Thunk _lh_eval_Thunk_0⁰ _lh_eval_Thunk_1⁰ => withEnv_lh_₁(_lh_eval_Thunk_1⁰, traverseTerm_lh_₁(_lh_eval_Thunk_0⁰))
//│ 	| Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰ => myBind_lh_₁(myGet_lh_₁, (fun env² -> myReturn_lh_₁([Thunk [Lam _lh_eval_Lam_0⁰ _lh_eval_Lam_1⁰] env²])))
//│ 	| App _lh_eval_App_0⁰ _lh_eval_App_1⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_App_0⁰), (fun u'³ -> apply_lh_₁(u'³, _lh_eval_App_1⁰)))
//│ 	| IfZero _lh_eval_IfZero_0⁰ _lh_eval_IfZero_1⁰ _lh_eval_IfZero_2⁰ => myBind_lh_₁(traverseTerm_lh_₁(_lh_eval_IfZero_0⁰), (fun val¹ -> if eqTerm_lh_₁(val¹, [Con 0]) then traverseTerm_lh_₁(_lh_eval_IfZero_1⁰) else traverseTerm_lh_₁(_lh_eval_IfZero_2⁰)))
//│ 	| Con _lh_eval_Con_0⁰ => myReturn_lh_₁([Con _lh_eval_Con_0⁰])
//│ 	| Incr  => myBind_lh_₁(incr_lh_₁(99), (fun _dummy² -> myReturn_lh_₁([Con 0])))
//│ 	| _  => error⁰}
//│ def fix_lh_₁ = [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₁ lfxx_lh_₂]]
//│ def fix_lh_₂ = [Lam [LH_C 'F' [LH_N]] [App lfxx_lh_₃ lfxx_lh_₄]]
//│ def flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_arg2⁰) = case _lh_flatMap_arg2⁰ of {
//│ 	LH_N  => [LH_N]
//│ 	| LH_C _lh_flatMap_LH_C_0⁰ _lh_flatMap_LH_C_1⁰ => mappend_lh_₂₆(_lh_flatMap_arg1⁰(_lh_flatMap_LH_C_0⁰), flatMap_lh_₁(_lh_flatMap_arg1⁰, _lh_flatMap_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def head_lh_₁(ls¹) = case ls¹ of {
//│ 	LH_C h³⁷ t³⁸ => h³⁷
//│ 	| LH_N  => error⁰}
//│ def head_lh_₂(ls⁰) = case ls⁰ of {
//│ 	LH_C h⁶ t⁶ => h⁶
//│ 	| LH_N  => error⁰}
//│ def incr_lh_₁(_lh_incr_arg1⁰) = myReturn_lh_₁([Unit])
//│ def lfxx_lh_₁ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₂ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₃ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lfxx_lh_₄ = [Lam [LH_C 'x' [LH_N]] [App [Var [LH_C 'F' [LH_N]]] [App [Var [LH_C 'x' [LH_N]]] [Var [LH_C 'x' [LH_N]]]]]]
//│ def lookupVar_lh_₁(_lh_lookupVar_arg1⁰) = 
//│ 	let lookup2⁰ = (fun env⁰ -> lookup_lh_₁(_lh_lookupVar_arg1⁰, env⁰, (fun _dummy⁰ -> error⁰(mappend_lh_₂₆([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_lookupVar_arg1⁰))), (fun x⁰ -> x⁰)))
//│ 	in myBind_lh_₁(myGet_lh_₁, (fun env¹ -> myReturn_lh_₁(lookup2⁰(env¹))))
//│ def lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_arg2⁰) = case _lh_lookup_arg2⁰ of {
//│ 	LH_N  => (fun _lh_myMaybe_arg1⁰ -> (fun _lh_myMaybe_arg2⁰ -> _lh_myMaybe_arg1⁰(99)))
//│ 	| LH_C _lh_lookup_LH_C_0⁰ _lh_lookup_LH_C_1⁰ => case _lh_lookup_LH_C_0⁰ of {
//│ 		LH_P2 _lh_lookup_LH_P2_0⁰ _lh_lookup_LH_P2_1⁰ => if eqList_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_P2_0⁰) then 
//│ 			let _lh_myMaybe_Just_0⁰ = _lh_lookup_LH_P2_1⁰
//│ 			in (fun _lh_myMaybe_arg1¹ -> (fun _lh_myMaybe_arg2¹ -> _lh_myMaybe_arg2¹(_lh_myMaybe_Just_0⁰))) else lookup_lh_₁(_lh_lookup_arg1⁰, _lh_lookup_LH_C_1⁰)
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def mainMonad_lh_₁(_lh_mainMonad_arg1⁰) = if null_lh_₂(_lh_mainMonad_arg1⁰) then error⁰([LH_C 'A' [LH_C 'r' [LH_C 'g' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'n' [LH_C 'u' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_C '-' [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_C '-' [LH_C 'u' [LH_C 'p' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]) else ev_lh_₁([App sum0_lh_₂ [Con head_lh_₂(_lh_mainMonad_arg1⁰)]])
//│ def mainSimple_lh_₁(_lh_mainSimple_arg1⁰) = if null_lh_₁(_lh_mainSimple_arg1⁰) then error⁰([LH_C 'A' [LH_C 'r' [LH_C 'g' [LH_C 's' [LH_C ':' [LH_C ' ' [LH_C 'n' [LH_C 'u' [LH_C 'm' [LH_C 'b' [LH_C 'e' [LH_C 'r' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_C '-' [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_C '-' [LH_C 'u' [LH_C 'p' [LH_C '-' [LH_C 't' [LH_C 'o' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]) else showTerm_lh_₁(simpleEval_lh_₁([LH_N], [App sum0_lh_₁ [Con head_lh_₁(_lh_mainSimple_arg1⁰)]]))
//│ def mappend_lh_₁(xs⁶, ys⁶) = case xs⁶ of {
//│ 	LH_C h⁵ t⁵ => [LH_C h⁵ mappend_lh_₁(t⁵, ys⁶)]
//│ 	| LH_N  => ys⁶}
//│ def mappend_lh_₁₀(xs¹⁰, ys¹⁵) = case xs¹⁰ of {
//│ 	LH_C h¹³ t¹⁴ => [LH_C h¹³ mappend_lh_₁₀(t¹⁴, ys¹⁵)]
//│ 	| LH_N  => ys¹⁵}
//│ def mappend_lh_₁₁(xs¹⁷, ys³²) = case xs¹⁷ of {
//│ 	LH_C h²⁶ t²⁷ => [LH_C h²⁶ mappend_lh_₁₁(t²⁷, ys³²)]
//│ 	| LH_N  => ys³²}
//│ def mappend_lh_₁₂(xs², ys²) = case xs² of {
//│ 	LH_C h² t² => [LH_C h² mappend_lh_₁₂(t², ys²)]
//│ 	| LH_N  => ys²}
//│ def mappend_lh_₁₃(xs²⁰, ys³⁶) = case xs²⁰ of {
//│ 	LH_C h²⁹ t³⁰ => [LH_C h²⁹ mappend_lh_₁₃(t³⁰, ys³⁶)]
//│ 	| LH_N  => ys³⁶}
//│ def mappend_lh_₁₄(xs¹⁵, ys²⁹) = case xs¹⁵ of {
//│ 	LH_C h²³ t²⁴ => [LH_C h²³ mappend_lh_₁₄(t²⁴, ys²⁹)]
//│ 	| LH_N  => ys²⁹}
//│ def mappend_lh_₁₅(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h¹ t¹ => [LH_C h¹ mappend_lh_₁₅(t¹, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def mappend_lh_₁₆(xs³, ys³) = case xs³ of {
//│ 	LH_C h³ t³ => [LH_C h³ mappend_lh_₁₆(t³, ys³)]
//│ 	| LH_N  => ys³}
//│ def mappend_lh_₁₇(xs²³, ys⁴⁷) = case xs²³ of {
//│ 	LH_C h³⁸ t³⁹ => [LH_C h³⁸ mappend_lh_₁₇(t³⁹, ys⁴⁷)]
//│ 	| LH_N  => ys⁴⁷}
//│ def mappend_lh_₁₈(xs⁷, ys⁷) = case xs⁷ of {
//│ 	LH_C h⁷ t⁷ => [LH_C h⁷ mappend_lh_₁₈(t⁷, ys⁷)]
//│ 	| LH_N  => ys⁷}
//│ def mappend_lh_₁₉(xs⁹, ys⁹) = xs⁹(ys⁹)
//│ def mappend_lh_₂(xs¹², ys¹⁷) = case xs¹² of {
//│ 	LH_C h¹⁵ t¹⁶ => [LH_C h¹⁵ mappend_lh_₂(t¹⁶, ys¹⁷)]
//│ 	| LH_N  => ys¹⁷}
//│ def mappend_lh_₂₀(xs¹⁹, ys³⁴) = case xs¹⁹ of {
//│ 	LH_C h²⁷ t²⁸ => 
//│ 		let t²⁹ = mappend_lh_₂₀(t²⁸, ys³⁴)
//│ 		in let h²⁸ = h²⁷
//│ 		in (fun ys³⁵ -> [LH_C h²⁸ t²⁹(ys³⁵)])
//│ 	| LH_N  => ys³⁴}
//│ def mappend_lh_₂₁(xs⁴, ys⁴) = xs⁴(ys⁴)
//│ def mappend_lh_₂₂(xs²⁵, ys⁴⁹) = xs²⁵(ys⁴⁹)
//│ def mappend_lh_₂₃(xs¹³, ys¹⁸) = case xs¹³ of {
//│ 	LH_C h¹⁶ t¹⁷ => [LH_C h¹⁶ mappend_lh_₂₃(t¹⁷, ys¹⁸)]
//│ 	| LH_N  => ys¹⁸}
//│ def mappend_lh_₂₄(xs²², ys⁴⁶) = xs²²(ys⁴⁶)
//│ def mappend_lh_₂₅(xs²¹, ys⁴⁰) = case xs²¹ of {
//│ 	LH_C h³² t³³ => 
//│ 		let t³⁴ = mappend_lh_₂₅(t³³, ys⁴⁰)
//│ 		in let h³³ = h³²
//│ 		in (fun ys⁴¹ -> [LH_C h³³ t³⁴(ys⁴¹)])
//│ 	| LH_N  => ys⁴⁰}
//│ def mappend_lh_₂₆(xs²⁴, ys⁴⁸) = case xs²⁴ of {
//│ 	LH_C h³⁹ t⁴⁰ => [LH_C h³⁹ mappend_lh_₂₆(t⁴⁰, ys⁴⁸)]
//│ 	| LH_N  => ys⁴⁸}
//│ def mappend_lh_₃(xs⁵, ys⁵) = case xs⁵ of {
//│ 	LH_C h⁴ t⁴ => [LH_C h⁴ mappend_lh_₃(t⁴, ys⁵)]
//│ 	| LH_N  => ys⁵}
//│ def mappend_lh_₄(xs¹⁸, ys³³) = xs¹⁸(ys³³)
//│ def mappend_lh_₅(xs¹⁴, ys¹⁹) = xs¹⁴(ys¹⁹)
//│ def mappend_lh_₆(xs¹⁶, ys³⁰) = case xs¹⁶ of {
//│ 	LH_C h²⁴ t²⁵ => 
//│ 		let t²⁶ = mappend_lh_₆(t²⁵, ys³⁰)
//│ 		in let h²⁵ = h²⁴
//│ 		in (fun ys³¹ -> [LH_C h²⁵ t²⁶(ys³¹)])
//│ 	| LH_N  => ys³⁰}
//│ def mappend_lh_₇(xs¹¹, ys¹⁶) = case xs¹¹ of {
//│ 	LH_C h¹⁴ t¹⁵ => [LH_C h¹⁴ mappend_lh_₇(t¹⁵, ys¹⁶)]
//│ 	| LH_N  => ys¹⁶}
//│ def mappend_lh_₈(xs⁸, ys⁸) = case xs⁸ of {
//│ 	LH_C h⁸ t⁸ => [LH_C h⁸ mappend_lh_₈(t⁸, ys⁸)]
//│ 	| LH_N  => ys⁸}
//│ def mappend_lh_₉(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h⁰ t⁰ => [LH_C h⁰ mappend_lh_₉(t⁰, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def myBind_lh_₁(_lh_myBind_arg1⁰, _lh_myBind_arg2⁰) = 
//│ 	let _lh_myRunState_MyState_0¹ = (fun s¹ -> 
//│ 		let _lh_matchIdent⁶ = _lh_myBind_arg1⁰(s¹)
//│ 		in case _lh_matchIdent⁶ of {
//│ 			LH_P2 _lh_myBind_LH_P2_0⁰ _lh_myBind_LH_P2_1⁰ => _lh_myBind_arg2⁰(_lh_myBind_LH_P2_1⁰, _lh_myBind_LH_P2_0⁰)
//│ 			| _  => error⁰})
//│ 	in _lh_myRunState_MyState_0¹
//│ def myEvalState_lh_₁(_lh_myEvalState_arg1⁰, _lh_myEvalState_arg2⁰) = 
//│ 	let _lh_matchIdent¹ = _lh_myEvalState_arg1⁰(_lh_myEvalState_arg2⁰)
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P2 _lh_myEvalState_LH_P2_0⁰ _lh_myEvalState_LH_P2_1⁰ => _lh_myEvalState_LH_P2_1⁰
//│ 		| _  => error⁰}
//│ def myGet_lh_₁ = 
//│ 	let _lh_myRunState_MyState_0² = (fun s² -> [LH_P2 s² s²])
//│ 	in _lh_myRunState_MyState_0²
//│ def myMaybe_lh_₁(_lh_myMaybe_arg1², _lh_myMaybe_arg2², _lh_myMaybe_arg3⁰) = _lh_myMaybe_arg3⁰(_lh_myMaybe_arg1², _lh_myMaybe_arg2²)
//│ def myReturn_lh_₁(_lh_myReturn_arg1⁰) = 
//│ 	let _lh_myRunState_MyState_0⁰ = (fun s⁰ -> [LH_P2 s⁰ _lh_myReturn_arg1⁰])
//│ 	in _lh_myRunState_MyState_0⁰
//│ def myRunState_lh_₁(_lh_myRunState_arg1⁰) = _lh_myRunState_arg1⁰
//│ def nMinus1_lh_₁ = [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]
//│ def nMinus1_lh_₂ = [Add [Var [LH_C 'n' [LH_N]]] [Con (0 - 1)]]
//│ def null_lh_₁(_lh_null_arg1¹) = case _lh_null_arg1¹ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0¹ _lh_null_LH_C_1¹ => [False]
//│ 	| _  => error⁰}
//│ def null_lh_₂(_lh_null_arg1⁰) = case _lh_null_arg1⁰ of {
//│ 	LH_N  => [True]
//│ 	| LH_C _lh_null_LH_C_0⁰ _lh_null_LH_C_1⁰ => [False]
//│ 	| _  => error⁰}
//│ def partialSum0_lh_₁ = [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₁]]]]]
//│ def partialSum0_lh_₂ = [Lam [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]] [Lam [LH_C 'n' [LH_N]] [IfZero [Var [LH_C 'n' [LH_N]]] [Con 0] [Add [Var [LH_C 'n' [LH_N]]] [App [Var [LH_C 's' [LH_C 'u' [LH_C 'm' [LH_N]]]]] nMinus1_lh_₂]]]]]
//│ def pp_lh_₁(_lh_pp_arg1³) = ppn_lh_₁(0, _lh_pp_arg1³)
//│ def pp_lh_₂(_lh_pp_arg1⁷) = ppn_lh_₂(0, _lh_pp_arg1⁷)
//│ def pp_lh_₃(_lh_pp_arg1¹) = ppn_lh_₃(0, _lh_pp_arg1¹)
//│ def pp_lh_₄(_lh_pp_arg1⁴) = ppn_lh_₃(0, _lh_pp_arg1⁴)
//│ def pp_lh_₅(_lh_pp_arg1⁰) = ppn_lh_₃(0, _lh_pp_arg1⁰)
//│ def pp_lh_₆(_lh_pp_arg1⁵) = ppn_lh_₃(0, _lh_pp_arg1⁵)
//│ def pp_lh_₇(_lh_pp_arg1⁶) = ppn_lh_₃(0, _lh_pp_arg1⁶)
//│ def pp_lh_₈(_lh_pp_arg1²) = ppn_lh_₃(0, _lh_pp_arg1²)
//│ def ppenv_lh_₁(_lh_ppenv_arg1⁰) = mappend_lh_₁₇(
//│ 	let t²² = (fun ys²⁵ -> ys²⁵)
//│ 	in let h²¹ = '['
//│ 	in (fun ys²⁶ -> [LH_C h²¹ t²²(ys²⁶)])(flatMap_lh_₁((fun vt⁰ -> 
//│ 	let _lh_matchIdent³ = vt⁰
//│ 	in case _lh_matchIdent³ of {
//│ 		LH_P2 _lh_ppenv_LH_P2_0⁰ _lh_ppenv_LH_P2_1⁰ => mappend_lh_₁₈(mappend_lh_₂₀(_lh_ppenv_LH_P2_0⁰, 
//│ 			let t²³ = (fun ys²⁷ -> ys²⁷)
//│ 			in let h²² = '='
//│ 			in (fun ys²⁸ -> [LH_C h²² t²³(ys²⁸)]), pp_lh_₈(_lh_ppenv_LH_P2_1⁰)), [LH_C ',' [LH_C ' ' [LH_N]]])
//│ 		| _  => error⁰}), _lh_ppenv_arg1⁰)), [LH_C ']' [LH_N]])
//│ def ppenv_lh_₂(_lh_ppenv_arg1¹) = mappend_lh_₂₆(mappend_lh_₂₆([LH_C '[' [LH_N]], flatMap_lh_₁((fun vt¹ -> 
//│ 	let _lh_matchIdent⁷ = vt¹
//│ 	in case _lh_matchIdent⁷ of {
//│ 		LH_P2 _lh_ppenv_LH_P2_0¹ _lh_ppenv_LH_P2_1¹ => mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(_lh_ppenv_LH_P2_0¹, [LH_C '=' [LH_N]]), pp_lh_₁(_lh_ppenv_LH_P2_1¹)), [LH_C ',' [LH_C ' ' [LH_N]]])
//│ 		| _  => error⁰}), _lh_ppenv_arg1¹)), [LH_C ']' [LH_N]])
//│ def ppn_lh_₁(_lh_ppn_arg1¹, _lh_ppn_arg2¹) = case _lh_ppn_arg2¹ of {
//│ 	Var _lh_ppn_Var_0¹ => _lh_ppn_Var_0¹
//│ 	| Con _lh_ppn_Con_0¹ => string_of_int⁰(_lh_ppn_Con_0¹)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0¹ _lh_ppn_Lam_1¹ => bracket_lh_₃(_lh_ppn_arg1¹, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0¹), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₁((0 - 1), _lh_ppn_Lam_1¹)))
//│ 	| Add _lh_ppn_Add_0¹ _lh_ppn_Add_1¹ => bracket_lh_₂(_lh_ppn_arg1¹, 1, mappend_lh_₂₅(ppn_lh_₁(1, _lh_ppn_Add_0¹), 
//│ 		let t³⁵ = 	
//│ 			let t³⁶ = 	
//│ 				let t³⁷ = (fun ys⁴² -> ys⁴²)
//│ 				in let h³⁴ = ' '
//│ 				in (fun ys⁴³ -> [LH_C h³⁴ t³⁷(ys⁴³)])
//│ 			in let h³⁵ = '+'
//│ 			in (fun ys⁴⁴ -> [LH_C h³⁵ t³⁶(ys⁴⁴)])
//│ 		in let h³⁶ = ' '
//│ 		in (fun ys⁴⁵ -> [LH_C h³⁶ t³⁵(ys⁴⁵)]), ppn_lh_₁(1, _lh_ppn_Add_1¹)))
//│ 	| App _lh_ppn_App_0¹ _lh_ppn_App_1¹ => bracket_lh_₃(_lh_ppn_arg1¹, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(2, _lh_ppn_App_0¹), [LH_C ' ' [LH_N]]), ppn_lh_₁(2, _lh_ppn_App_1¹)))
//│ 	| IfZero _lh_ppn_IfZero_0¹ _lh_ppn_IfZero_1¹ _lh_ppn_IfZero_2¹ => bracket_lh_₃(_lh_ppn_arg1¹, 0, mappend_lh_₂₃(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₁(0, _lh_ppn_IfZero_0¹)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_1¹)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₁(0, _lh_ppn_IfZero_2¹)))
//│ 	| Thunk _lh_ppn_Thunk_0¹ _lh_ppn_Thunk_1¹ => bracket_lh_₁(_lh_ppn_arg1¹, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₁(3, _lh_ppn_Thunk_0¹), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1¹)))
//│ 	| _  => error⁰}
//│ def ppn_lh_₂(_lh_ppn_arg1⁰, _lh_ppn_arg2⁰) = case _lh_ppn_arg2⁰ of {
//│ 	Var _lh_ppn_Var_0⁰ => _lh_ppn_Var_0⁰
//│ 	| Con _lh_ppn_Con_0⁰ => string_of_int⁰(_lh_ppn_Con_0⁰)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0⁰ _lh_ppn_Lam_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0⁰), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₂((0 - 1), _lh_ppn_Lam_1⁰)))
//│ 	| Add _lh_ppn_Add_0⁰ _lh_ppn_Add_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₂(1, _lh_ppn_Add_0⁰), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₂(1, _lh_ppn_Add_1⁰)))
//│ 	| App _lh_ppn_App_0⁰ _lh_ppn_App_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₂(2, _lh_ppn_App_0⁰), [LH_C ' ' [LH_N]]), ppn_lh_₂(2, _lh_ppn_App_1⁰)))
//│ 	| IfZero _lh_ppn_IfZero_0⁰ _lh_ppn_IfZero_1⁰ _lh_ppn_IfZero_2⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₂(0, _lh_ppn_IfZero_0⁰)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₂(0, _lh_ppn_IfZero_1⁰)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₂(0, _lh_ppn_IfZero_2⁰)))
//│ 	| Thunk _lh_ppn_Thunk_0⁰ _lh_ppn_Thunk_1⁰ => bracket_lh_₃(_lh_ppn_arg1⁰, 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₂(3, _lh_ppn_Thunk_0⁰), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1⁰)))
//│ 	| _  => error⁰}
//│ def ppn_lh_₃(_lh_ppn_arg1², _lh_ppn_arg2²) = case _lh_ppn_arg2² of {
//│ 	Var _lh_ppn_Var_0² => _lh_ppn_Var_0²
//│ 	| Con _lh_ppn_Con_0² => string_of_int⁰(_lh_ppn_Con_0²)
//│ 	| Incr  => [LH_C 'I' [LH_C 'N' [LH_C 'C' [LH_C 'R' [LH_N]]]]]
//│ 	| Lam _lh_ppn_Lam_0² _lh_ppn_Lam_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C '@' [LH_N]], _lh_ppn_Lam_0²), [LH_C '.' [LH_C ' ' [LH_N]]]), ppn_lh_₃((0 - 1), _lh_ppn_Lam_1²)))
//│ 	| Add _lh_ppn_Add_0² _lh_ppn_Add_1² => bracket_lh_₃(_lh_ppn_arg1², 1, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(1, _lh_ppn_Add_0²), [LH_C ' ' [LH_C '+' [LH_C ' ' [LH_N]]]]), ppn_lh_₃(1, _lh_ppn_Add_1²)))
//│ 	| App _lh_ppn_App_0² _lh_ppn_App_1² => bracket_lh_₃(_lh_ppn_arg1², 2, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(2, _lh_ppn_App_0²), [LH_C ' ' [LH_N]]), ppn_lh_₃(2, _lh_ppn_App_1²)))
//│ 	| IfZero _lh_ppn_IfZero_0² _lh_ppn_IfZero_1² _lh_ppn_IfZero_2² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆(mappend_lh_₂₆([LH_C 'I' [LH_C 'F' [LH_C ' ' [LH_N]]]], ppn_lh_₃(0, _lh_ppn_IfZero_0²)), [LH_C ' ' [LH_C 'T' [LH_C 'H' [LH_C 'E' [LH_C 'N' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_1²)), [LH_C ' ' [LH_C 'E' [LH_C 'L' [LH_C 'S' [LH_C 'E' [LH_C ' ' [LH_N]]]]]]]), ppn_lh_₃(0, _lh_ppn_IfZero_2²)))
//│ 	| Thunk _lh_ppn_Thunk_0² _lh_ppn_Thunk_1² => bracket_lh_₃(_lh_ppn_arg1², 0, mappend_lh_₂₆(mappend_lh_₂₆(ppn_lh_₃(3, _lh_ppn_Thunk_0²), [LH_C ':' [LH_C ':' [LH_N]]]), ppenv_lh_₂(_lh_ppn_Thunk_1²)))
//│ 	| _  => error⁰}
//│ def pushVar_lh_₁(_lh_pushVar_arg1⁰, _lh_pushVar_arg2⁰, _lh_pushVar_arg3⁰) = myBind_lh_₁(myGet_lh_₁, (fun env³ -> withEnv_lh_₁([LH_C [LH_P2 _lh_pushVar_arg1⁰ _lh_pushVar_arg2⁰] env³], _lh_pushVar_arg3⁰)))
//│ def showTerm_lh_₁(_lh_showTerm_arg1⁰) = case _lh_showTerm_arg1⁰ of {
//│ 	Con _lh_showTerm_Con_0⁰ => 
//│ 		let t⁹ = 	
//│ 			let t¹⁰ = 	
//│ 				let t¹¹ = 	
//│ 					let t¹² = (fun ys¹⁰ -> ys¹⁰)
//│ 					in let h⁹ = ' '
//│ 					in (fun ys¹¹ -> [LH_C h⁹ t¹²(ys¹¹)])
//│ 				in let h¹⁰ = 'n'
//│ 				in (fun ys¹² -> [LH_C h¹⁰ t¹¹(ys¹²)])
//│ 			in let h¹¹ = 'o'
//│ 			in (fun ys¹³ -> [LH_C h¹¹ t¹⁰(ys¹³)])
//│ 		in let h¹² = 'C'
//│ 		in (fun ys¹⁴ -> [LH_C h¹² t⁹(ys¹⁴)])(string_of_int⁰(_lh_showTerm_Con_0⁰))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def showTerm_lh_₂(_lh_showTerm_arg1¹) = case _lh_showTerm_arg1¹ of {
//│ 	Con _lh_showTerm_Con_0¹ => 
//│ 		let t¹⁸ = 	
//│ 			let t¹⁹ = 	
//│ 				let t²⁰ = 	
//│ 					let t²¹ = (fun ys²⁰ -> ys²⁰)
//│ 					in let h¹⁷ = ' '
//│ 					in (fun ys²¹ -> [LH_C h¹⁷ t²¹(ys²¹)])
//│ 				in let h¹⁸ = 'n'
//│ 				in (fun ys²² -> [LH_C h¹⁸ t²⁰(ys²²)])
//│ 			in let h¹⁹ = 'o'
//│ 			in (fun ys²³ -> [LH_C h¹⁹ t¹⁹(ys²³)])
//│ 		in let h²⁰ = 'C'
//│ 		in (fun ys²⁴ -> [LH_C h²⁰ t¹⁸(ys²⁴)])(string_of_int⁰(_lh_showTerm_Con_0¹))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def showTerm_lh_₃(_lh_showTerm_arg1²) = case _lh_showTerm_arg1² of {
//│ 	Con _lh_showTerm_Con_0² => mappend_lh_₂₆([LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ' ' [LH_N]]]]], string_of_int⁰(_lh_showTerm_Con_0²))
//│ 	| _  => error⁰([LH_C 'u' [LH_C 'n' [LH_C 'i' [LH_C 'm' [LH_C 'p' [LH_C 'l' [LH_C 'e' [LH_C 'm' [LH_C 'e' [LH_C 'n' [LH_C 't' [LH_C 'e' [LH_C 'd' [LH_N]]]]]]]]]]]]]])}
//│ def simpleApply_lh_₁(_lh_simpleApply_arg1⁰, _lh_simpleApply_arg2⁰, _lh_simpleApply_arg3⁰) = case _lh_simpleApply_arg2⁰ of {
//│ 	Thunk _lh_simpleApply_Thunk_0⁰ _lh_simpleApply_Thunk_1⁰ => case _lh_simpleApply_Thunk_0⁰ of {
//│ 		Lam _lh_simpleApply_Lam_0⁰ _lh_simpleApply_Lam_1⁰ => simpleEval_lh_₁([LH_C [LH_P2 _lh_simpleApply_Lam_0⁰ [Thunk _lh_simpleApply_arg3⁰ _lh_simpleApply_arg1⁰]] _lh_simpleApply_Thunk_1⁰], _lh_simpleApply_Lam_1⁰)
//│ 		| _  => error⁰(mappend_lh_₁₁(mappend_lh_₁₅(mappend_lh_₁₂(mappend_lh_₉([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₅(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₆(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ 	| _  => error⁰(mappend_lh_₁₄(mappend_lh_₁₃(mappend_lh_₁₆(mappend_lh_₁₀([LH_C 'b' [LH_C 'a' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'p' [LH_C 'p' [LH_C 'l' [LH_C 'i' [LH_C 'c' [LH_C 'a' [LH_C 't' [LH_C 'i' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]], pp_lh_₄(_lh_simpleApply_arg2⁰)), [LH_C ' ' [LH_C ' ' [LH_C '[' [LH_C ' ' [LH_N]]]]]), pp_lh_₇(_lh_simpleApply_arg3⁰)), [LH_C ' ' [LH_C ']' [LH_C '.' [LH_N]]]]))}
//│ def simpleEvalCon_lh_₁(_lh_simpleEvalCon_arg1¹, _lh_simpleEvalCon_arg2¹) = 
//│ 	let e'¹ = simpleEval_lh_₁(_lh_simpleEvalCon_arg1¹, _lh_simpleEvalCon_arg2¹)
//│ 	in let _lh_matchIdent⁴ = e'¹
//│ 	in case _lh_matchIdent⁴ of {
//│ 		Con _lh_simpleEvalCon_Con_0¹ => _lh_simpleEvalCon_Con_0¹
//│ 		| _  => error⁰(mappend_lh_₇([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₂(e'¹)))}
//│ def simpleEvalCon_lh_₂(_lh_simpleEvalCon_arg1⁰, _lh_simpleEvalCon_arg2⁰) = 
//│ 	let e'⁰ = simpleEval_lh_₁(_lh_simpleEvalCon_arg1⁰, _lh_simpleEvalCon_arg2⁰)
//│ 	in let _lh_matchIdent⁰ = e'⁰
//│ 	in case _lh_matchIdent⁰ of {
//│ 		Con _lh_simpleEvalCon_Con_0⁰ => _lh_simpleEvalCon_Con_0⁰
//│ 		| _  => error⁰(mappend_lh_₈([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(e'⁰)))}
//│ def simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_arg2⁰) = case _lh_simpleEval_arg2⁰ of {
//│ 	Var _lh_simpleEval_Var_0⁰ => simpleEval_lh_₁(_lh_simpleEval_arg1⁰, lookup_lh_₁(_lh_simpleEval_Var_0⁰, _lh_simpleEval_arg1⁰, (fun _dummy¹ -> error⁰(mappend_lh_₁([LH_C 'u' [LH_C 'n' [LH_C 'd' [LH_C 'e' [LH_C 'f' [LH_C 'i' [LH_C 'n' [LH_C 'e' [LH_C 'd' [LH_C ' ' [LH_C 'v' [LH_C 'a' [LH_C 'r' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]], _lh_simpleEval_Var_0⁰))), (fun x¹ -> x¹)))
//│ 	| Con _lh_simpleEval_Con_0⁰ => [Con _lh_simpleEval_Con_0⁰]
//│ 	| Incr  => [Con 0]
//│ 	| Add _lh_simpleEval_Add_0⁰ _lh_simpleEval_Add_1⁰ => 
//│ 		let addCons⁰ = (fun _lh_addCons_arg1⁰ -> (fun _lh_addCons_arg2⁰ -> case _lh_addCons_arg1⁰ of {
//│ 			Con _lh_addCons_Con_0⁰ => case _lh_addCons_arg2⁰ of {
//│ 				Con _lh_addCons_Con_0¹ => [Con (_lh_addCons_Con_0⁰ + _lh_addCons_Con_0¹)]
//│ 				| _  => error⁰(mappend_lh_₃([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 's' [LH_C 'e' [LH_C 'c' [LH_C 'o' [LH_C 'n' [LH_C 'd' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₁(_lh_addCons_arg2⁰)))}
//│ 			| _  => case _lh_addCons_arg2⁰ of {
//│ 				Con _lh_addCons_Con_0² => error⁰(mappend_lh_₂([LH_C 't' [LH_C 'y' [LH_C 'p' [LH_C 'e' [LH_C ' ' [LH_C 'e' [LH_C 'r' [LH_C 'r' [LH_C 'o' [LH_C 'r' [LH_C ' ' [LH_C 'i' [LH_C 'n' [LH_C ' ' [LH_C 'f' [LH_C 'i' [LH_C 'r' [LH_C 's' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C 'r' [LH_C 'g' [LH_C ' ' [LH_C 'o' [LH_C 'f' [LH_C ' ' [LH_C 'A' [LH_C 'd' [LH_C 'd' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], pp_lh_₂(_lh_addCons_arg1⁰)))
//│ 				| _  => error⁰}}))
//│ 		in let u'⁰ = simpleEvalCon_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_0⁰)
//│ 		in let v'⁰ = simpleEvalCon_lh_₂(_lh_simpleEval_arg1⁰, _lh_simpleEval_Add_1⁰)
//│ 		in [Con (u'⁰ + v'⁰)]
//│ 	| Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰ => [Thunk [Lam _lh_simpleEval_Lam_0⁰ _lh_simpleEval_Lam_1⁰] _lh_simpleEval_arg1⁰]
//│ 	| App _lh_simpleEval_App_0⁰ _lh_simpleEval_App_1⁰ => 
//│ 		let u'¹ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_App_0⁰)
//│ 		in simpleApply_lh_₁(_lh_simpleEval_arg1⁰, u'¹, _lh_simpleEval_App_1⁰)
//│ 	| IfZero _lh_simpleEval_IfZero_0⁰ _lh_simpleEval_IfZero_1⁰ _lh_simpleEval_IfZero_2⁰ => 
//│ 		let val⁰ = simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_0⁰)
//│ 		in if eqTerm_lh_₁(val⁰, [Con 0]) then simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_1⁰) else simpleEval_lh_₁(_lh_simpleEval_arg1⁰, _lh_simpleEval_IfZero_2⁰)
//│ 	| Thunk _lh_simpleEval_Thunk_0⁰ _lh_simpleEval_Thunk_1⁰ => simpleEval_lh_₁(_lh_simpleEval_Thunk_1⁰, _lh_simpleEval_Thunk_0⁰)
//│ 	| _  => error⁰}
//│ def sum0_lh_₁ = [App fix_lh_₁ partialSum0_lh_₁]
//│ def sum0_lh_₂ = [App fix_lh_₂ partialSum0_lh_₂]
//│ def testLambda_nofib_lh_₁(_lh_testLambda_nofib_arg1⁰) = [LH_P2 mainSimple_lh_₁([LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]]) mainMonad_lh_₁([LH_C _lh_testLambda_nofib_arg1⁰ [LH_N]])]
//│ def traverseCon_lh_₁(_lh_traverseCon_arg1⁰) = myBind_lh_₁(traverseTerm_lh_₁(_lh_traverseCon_arg1⁰), (fun t'⁰ -> 
//│ 	let _lh_matchIdent² = t'⁰
//│ 	in case _lh_matchIdent² of {
//│ 		Con _lh_traverseCon_Con_0⁰ => myReturn_lh_₁(_lh_traverseCon_Con_0⁰)
//│ 		| _  => error⁰(mappend_lh_₂₆([LH_C 'N' [LH_C 'o' [LH_C 't' [LH_C ' ' [LH_C 'a' [LH_C ' ' [LH_C 'C' [LH_C 'o' [LH_C 'n' [LH_C ':' [LH_C ' ' [LH_N]]]]]]]]]]]], showTerm_lh_₃(t'⁰)))}))
//│ def traverseTerm_lh_₁(_lh_traverseTerm_arg1⁰) = eval_lh_₁(_lh_traverseTerm_arg1⁰)
//│ def withEnv_lh_₁(_lh_withEnv_arg1⁰, _lh_withEnv_arg2⁰) = myReturn_lh_₁(myEvalState_lh_₁(_lh_withEnv_arg2⁰, _lh_withEnv_arg1⁰))
//│ <<<<<<< after floating out <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<
