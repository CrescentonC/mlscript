:NewParser
:ParseOnly


:lhInHaskell
:lhGenOCaml
span p [] = ([], [])
span p (h:t) = if (p h) then
                    case (span p t) of {
                      (f, s) -> (h:f, s)
                    }
                else
                  ([], (h:t))
max a b = if a > b then a else b
numchars l = sum $ (map length l)
expand [] = [""]
expand ('<':x) = numericRule x
expand ('[':x) = alphabeticRule x
expand x = constantRule x
constantRule (c:rest) = [ c:z | z <- expand rest ]
alphabeticRule (a:('-':(b:(']':rest)))) =
  if ((int_of_char a) <= (int_of_char b)) then
    [(char_of_int c):z | c <- [(int_of_char a)..(int_of_char b)], z <- expand rest]
  else
    [(char_of_int c):z | c <- reverse [(int_of_char b)..(int_of_char a)], z <- expand rest]
mknum s = foldl (\ u c -> (u * 10) + ((int_of_char c) - (int_of_char '0'))) 0 s
pad s w  = [ '0' | i <- [1 .. (w - (length s))]] ++ s
numericRule x = case (span (\c -> (polyNeq c '-')) x) of {
                  (p, (_:q)) -> case (span (\c -> (polyNeq c '>')) q) of {
                    (r, (_:s)) -> case (mknum p, mknum r) of {
                      (u, v) ->
                        let width = (max (length (string_of_int u)) (length (string_of_int v))) in
                                  [ (pad (string_of_int i) width) ++ z | i <- (if (u < v) then [u..v] else [u,(u-1)..v]), z <- expand s ]
                    }
                  }
                }
testGenRegexs_nofib e = concat (expand e)
testGenRegexs_nofib $ primId "[a-j][a-j][a-j][0-9]"
//│ ||
//│ Parsed: {}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ testGenRegexs_nofib_lh^481(primId⁰([LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C '0' [LH_C '-' [LH_C '9' [LH_C ']' [LH_N]]]]]]]]]]]]]]]]]]]]]))
//│ def alphabeticRule_lh(_lh_alphabeticRule_arg1⁰) = case _lh_alphabeticRule_arg1⁰ of {
//│ 	LH_C _lh_alphabeticRule_LH_C_0⁰ _lh_alphabeticRule_LH_C_1⁰ => case _lh_alphabeticRule_LH_C_1⁰ of {
//│ 		LH_C _lh_alphabeticRule_LH_C_0¹ _lh_alphabeticRule_LH_C_1¹ => case _lh_alphabeticRule_LH_C_0¹ of {
//│ 			'-'  => case _lh_alphabeticRule_LH_C_1¹ of {
//│ 				LH_C _lh_alphabeticRule_LH_C_0² _lh_alphabeticRule_LH_C_1² => case _lh_alphabeticRule_LH_C_1² of {
//│ 					LH_C _lh_alphabeticRule_LH_C_0³ _lh_alphabeticRule_LH_C_1³ => case _lh_alphabeticRule_LH_C_0³ of {
//│ 						']'  => if (int_of_char⁰(_lh_alphabeticRule_LH_C_0⁰) <= int_of_char⁰(_lh_alphabeticRule_LH_C_0²)) then 
//│ 							let _lh_listcomp_fun² = (fun _lh_listcomp_fun_para² -> case _lh_listcomp_fun_para² of {
//│ 								LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 									let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {
//│ 										LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]
//│ 										| LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ 									in _lh_listcomp_fun³(expand_lh^322(_lh_alphabeticRule_LH_C_1³))
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun²(enumFromTo_lh^331(int_of_char⁰(_lh_alphabeticRule_LH_C_0⁰), int_of_char⁰(_lh_alphabeticRule_LH_C_0²))) else 
//│ 							let _lh_listcomp_fun⁴ = (fun _lh_listcomp_fun_para⁴ -> case _lh_listcomp_fun_para⁴ of {
//│ 								LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => 
//│ 									let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {
//│ 										LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]
//│ 										| LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ 									in _lh_listcomp_fun⁵(expand_lh^359(_lh_alphabeticRule_LH_C_1³))
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun⁴(reverse_lh^368(enumFromTo_lh^369(int_of_char⁰(_lh_alphabeticRule_LH_C_0²), int_of_char⁰(_lh_alphabeticRule_LH_C_0⁰))))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def concat_lh(lss⁰) = case lss⁰ of {
//│ 	LH_C h³ t⁴ => mappend_lh^89(h³, concat_lh^92(t⁴))
//│ 	| LH_N  => [LH_N]}
//│ def constantRule_lh(_lh_constantRule_arg1⁰) = case _lh_constantRule_arg1⁰ of {
//│ 	LH_C _lh_constantRule_LH_C_0⁰ _lh_constantRule_LH_C_1⁰ => 
//│ 		let _lh_listcomp_fun⁷ = (fun _lh_listcomp_fun_para⁷ -> case _lh_listcomp_fun_para⁷ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun⁷(expand_lh^473(_lh_constantRule_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def enumFromThenTo_lh(a¹, t¹, b¹) = if (a¹ <= b¹) then [LH_C a¹ enumFromThenTo_lh^44(t¹, ((2 * t¹) - a¹), b¹)] else [LH_N]
//│ def enumFromTo_lh(a⁰, b⁰) = if (a⁰ <= b⁰) then [LH_C a⁰ enumFromTo_lh^24((a⁰ + 1), b⁰)] else [LH_N]
//│ def expand_lh(_lh_expand_arg1⁰) = case _lh_expand_arg1⁰ of {
//│ 	LH_N  => [LH_C [LH_N] [LH_N]]
//│ 	| LH_C _lh_expand_LH_C_0⁰ _lh_expand_LH_C_1⁰ => case _lh_expand_LH_C_0⁰ of {
//│ 		'<'  => numericRule_lh^429(_lh_expand_LH_C_1⁰)
//│ 		| '['  => alphabeticRule_lh^432(_lh_expand_LH_C_1⁰)
//│ 		| _  => constantRule_lh^435(_lh_expand_arg1⁰)}
//│ 	| _  => constantRule_lh^439(_lh_expand_arg1⁰)}
//│ def foldl_lh(f⁰, i⁰, ls⁰) = case ls⁰ of {
//│ 	LH_C h⁰ t⁰ => foldl_lh^2(f⁰, f⁰(i⁰, h⁰), t⁰)
//│ 	| LH_N  => i⁰}
//│ def length_lh(ls¹) = case ls¹ of {
//│ 	LH_C h¹ t² => (1 + length_lh^69(t²))
//│ 	| LH_N  => 0}
//│ def mappend_lh(xs⁰, ys⁰) = case xs⁰ of {
//│ 	LH_C h² t³ => [LH_C h² mappend_lh^78(t³, ys⁰)]
//│ 	| LH_N  => ys⁰}
//│ def max_lh(_lh_max_arg1⁰, _lh_max_arg2⁰) = if (_lh_max_arg1⁰ > _lh_max_arg2⁰) then _lh_max_arg1⁰ else _lh_max_arg2⁰
//│ def mknum_lh(_lh_mknum_arg1⁰) = foldl_lh^264((fun u⁰ -> (fun c² -> ((u⁰ * 10) + (int_of_char⁰(c²) - int_of_char⁰('0'))))), 0, _lh_mknum_arg1⁰)
//│ def numericRule_lh(_lh_numericRule_arg1⁰) = 
//│ 	let _lh_matchIdent¹ = span_lh^148((fun c⁰ -> polyNeq⁰(c⁰, '-')), _lh_numericRule_arg1⁰)
//│ 	in case _lh_matchIdent¹ of {
//│ 		LH_P2 _lh_numericRule_LH_P2_0⁰ _lh_numericRule_LH_P2_1⁰ => case _lh_numericRule_LH_P2_1⁰ of {
//│ 			LH_C _lh_numericRule_LH_C_0⁰ _lh_numericRule_LH_C_1⁰ => 
//│ 				let _lh_matchIdent² = span_lh^160((fun c¹ -> polyNeq⁰(c¹, '>')), _lh_numericRule_LH_C_1⁰)
//│ 				in case _lh_matchIdent² of {
//│ 					LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {
//│ 						LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => 
//│ 							let _lh_matchIdent³ = [LH_P2 mknum_lh^172(_lh_numericRule_LH_P2_0⁰) mknum_lh^175(_lh_numericRule_LH_P2_0¹)]
//│ 							in case _lh_matchIdent³ of {
//│ 								LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => 
//│ 									let width⁰ = max_lh^180(length_lh^181(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh^187(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ 									in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {
//│ 										LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 											let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {
//│ 												LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh^195(pad_lh^196(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]
//│ 												| LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ 											in _lh_listcomp_fun¹(expand_lh^216(_lh_numericRule_LH_C_1¹))
//│ 										| LH_N  => [LH_N]})
//│ 									in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh^230(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh^235(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²))
//│ 								| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ def pad_lh(_lh_pad_arg1⁰, _lh_pad_arg2⁰) = mappend_lh^395(
//│ 	let _lh_listcomp_fun⁶ = (fun _lh_listcomp_fun_para⁶ -> case _lh_listcomp_fun_para⁶ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C '0' _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun⁶(enumFromTo_lh^406(1, (_lh_pad_arg2⁰ - length_lh^412(_lh_pad_arg1⁰)))), _lh_pad_arg1⁰)
//│ def reverse_helper_lh(ls³, a²) = case ls³ of {
//│ 	LH_C h⁴ t⁵ => reverse_helper_lh^106(t⁵, [LH_C h⁴ a²])
//│ 	| LH_N  => a²}
//│ def reverse_lh(ls²) = reverse_helper_lh^99(ls², [LH_N])
//│ def span_lh(_lh_span_arg1⁰, _lh_span_arg2⁰) = case _lh_span_arg2⁰ of {
//│ 	LH_N  => [LH_P2 [LH_N] [LH_N]]
//│ 	| LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰ => if _lh_span_arg1⁰(_lh_span_LH_C_0⁰) then 
//│ 		let _lh_matchIdent⁰ = span_lh^124(_lh_span_arg1⁰, _lh_span_LH_C_1⁰)
//│ 		in case _lh_matchIdent⁰ of {
//│ 			LH_P2 _lh_span_LH_P2_0⁰ _lh_span_LH_P2_1⁰ => [LH_P2 [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰] _lh_span_LH_P2_1⁰]
//│ 			| _  => error⁰} else [LH_P2 [LH_N] [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰]]
//│ 	| _  => error⁰}
//│ def testGenRegexs_nofib_lh(_lh_testGenRegexs_nofib_arg1⁰) = concat_lh^454(expand_lh^455(_lh_testGenRegexs_nofib_arg1⁰))
//│ 		---------- unoptimized ocaml gen ----------
//│ 		let rec enumFromTo_lh a_0 b_0 =
//│ 		  (if (a_0 <= b_0) then
//│ 		    (`LH_C(a_0, ((enumFromTo_lh (a_0 + 1)) b_0)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec reverse_helper_lh ls_3 a_2 =
//│ 		  (match ls_3 with
//│ 		    | `LH_C(h_4, t_5) -> 
//│ 		      ((reverse_helper_lh t_5) (`LH_C(h_4, a_2)))
//│ 		    | `LH_N -> 
//│ 		      a_2);;
//│ 		let rec reverse_lh ls_2 =
//│ 		  ((reverse_helper_lh ls_2) (`LH_N));;
//│ 		let rec enumFromThenTo_lh a_1 t_1 b_1 =
//│ 		  (if (a_1 <= b_1) then
//│ 		    (`LH_C(a_1, (((enumFromThenTo_lh t_1) ((2 * t_1) - a_1)) b_1)))
//│ 		  else
//│ 		    (`LH_N));;
//│ 		let rec mappend_lh xs_0 ys_0 =
//│ 		  (match xs_0 with
//│ 		    | `LH_C(h_2, t_3) -> 
//│ 		      (`LH_C(h_2, ((mappend_lh t_3) ys_0)))
//│ 		    | `LH_N -> 
//│ 		      ys_0);;
//│ 		let rec length_lh ls_1 =
//│ 		  (match ls_1 with
//│ 		    | `LH_C(h_1, t_2) -> 
//│ 		      (1 + (length_lh t_2))
//│ 		    | `LH_N -> 
//│ 		      0);;
//│ 		let rec pad_lh _lh_pad_arg1_0 _lh_pad_arg2_0 =
//│ 		  ((mappend_lh (let rec _lh_listcomp_fun_6 = (fun _lh_listcomp_fun_para_6 -> 
//│ 		    (match _lh_listcomp_fun_para_6 with
//│ 		      | `LH_C(_lh_listcomp_fun_ls_h_6, _lh_listcomp_fun_ls_t_6) -> 
//│ 		        (`LH_C('0', (_lh_listcomp_fun_6 _lh_listcomp_fun_ls_t_6)))
//│ 		      | `LH_N -> 
//│ 		        (`LH_N))) in
//│ 		    (_lh_listcomp_fun_6 ((enumFromTo_lh 1) (_lh_pad_arg2_0 - (length_lh _lh_pad_arg1_0)))))) _lh_pad_arg1_0);;
//│ 		let rec foldl_lh f_0 i_0 ls_0 =
//│ 		  (match ls_0 with
//│ 		    | `LH_C(h_0, t_0) -> 
//│ 		      (((foldl_lh f_0) ((f_0 i_0) h_0)) t_0)
//│ 		    | `LH_N -> 
//│ 		      i_0);;
//│ 		let rec mknum_lh _lh_mknum_arg1_0 =
//│ 		  (((foldl_lh (fun u_0 c_2 -> 
//│ 		    ((u_0 * 10) + ((int_of_char c_2) - (int_of_char '0'))))) 0) _lh_mknum_arg1_0);;
//│ 		let rec max_lh _lh_max_arg1_0 _lh_max_arg2_0 =
//│ 		  (if (_lh_max_arg1_0 > _lh_max_arg2_0) then
//│ 		    _lh_max_arg1_0
//│ 		  else
//│ 		    _lh_max_arg2_0);;
//│ 		let rec span_lh _lh_span_arg1_0 _lh_span_arg2_0 =
//│ 		  (match _lh_span_arg2_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_P2((`LH_N), (`LH_N)))
//│ 		    | `LH_C(_lh_span_LH_C_0_0, _lh_span_LH_C_1_0) -> 
//│ 		      (if (_lh_span_arg1_0 _lh_span_LH_C_0_0) then
//│ 		        (let rec _lh_matchIdent_0 = ((span_lh _lh_span_arg1_0) _lh_span_LH_C_1_0) in
//│ 		          (match _lh_matchIdent_0 with
//│ 		            | `LH_P2(_lh_span_LH_P2_0_0, _lh_span_LH_P2_1_0) -> 
//│ 		              (`LH_P2((`LH_C(_lh_span_LH_C_0_0, _lh_span_LH_P2_0_0)), _lh_span_LH_P2_1_0))
//│ 		            | _ -> 
//│ 		              (failwith "error")))
//│ 		      else
//│ 		        (`LH_P2((`LH_N), (`LH_C(_lh_span_LH_C_0_0, _lh_span_LH_C_1_0)))))
//│ 		    | _ -> 
//│ 		      (failwith "error"));;
//│ 		let rec alphabeticRule_lh _lh_alphabeticRule_arg1_0 =
//│ 		  (match _lh_alphabeticRule_arg1_0 with
//│ 		    | `LH_C(_lh_alphabeticRule_LH_C_0_0, _lh_alphabeticRule_LH_C_1_0) -> 
//│ 		      (match _lh_alphabeticRule_LH_C_1_0 with
//│ 		        | `LH_C(_lh_alphabeticRule_LH_C_0_1, _lh_alphabeticRule_LH_C_1_1) -> 
//│ 		          (match _lh_alphabeticRule_LH_C_0_1 with
//│ 		            | '-' -> 
//│ 		              (match _lh_alphabeticRule_LH_C_1_1 with
//│ 		                | `LH_C(_lh_alphabeticRule_LH_C_0_2, _lh_alphabeticRule_LH_C_1_2) -> 
//│ 		                  (match _lh_alphabeticRule_LH_C_1_2 with
//│ 		                    | `LH_C(_lh_alphabeticRule_LH_C_0_3, _lh_alphabeticRule_LH_C_1_3) -> 
//│ 		                      (match _lh_alphabeticRule_LH_C_0_3 with
//│ 		                        | ']' -> 
//│ 		                          (if ((int_of_char _lh_alphabeticRule_LH_C_0_0) <= (int_of_char _lh_alphabeticRule_LH_C_0_2)) then
//│ 		                            (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
//│ 		                              (match _lh_listcomp_fun_para_2 with
//│ 		                                | `LH_C(_lh_listcomp_fun_ls_h_2, _lh_listcomp_fun_ls_t_2) -> 
//│ 		                                  (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
//│ 		                                    (match _lh_listcomp_fun_para_3 with
//│ 		                                      | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
//│ 		                                        (`LH_C((`LH_C((char_of_int _lh_listcomp_fun_ls_h_2), _lh_listcomp_fun_ls_h_3)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
//│ 		                                      | `LH_N -> 
//│ 		                                        (_lh_listcomp_fun_2 _lh_listcomp_fun_ls_t_2))) in
//│ 		                                    (_lh_listcomp_fun_3 (expand_lh _lh_alphabeticRule_LH_C_1_3)))
//│ 		                                | `LH_N -> 
//│ 		                                  (`LH_N))) in
//│ 		                              (_lh_listcomp_fun_2 ((enumFromTo_lh (int_of_char _lh_alphabeticRule_LH_C_0_0)) (int_of_char _lh_alphabeticRule_LH_C_0_2))))
//│ 		                          else
//│ 		                            (let rec _lh_listcomp_fun_4 = (fun _lh_listcomp_fun_para_4 -> 
//│ 		                              (match _lh_listcomp_fun_para_4 with
//│ 		                                | `LH_C(_lh_listcomp_fun_ls_h_4, _lh_listcomp_fun_ls_t_4) -> 
//│ 		                                  (let rec _lh_listcomp_fun_5 = (fun _lh_listcomp_fun_para_5 -> 
//│ 		                                    (match _lh_listcomp_fun_para_5 with
//│ 		                                      | `LH_C(_lh_listcomp_fun_ls_h_5, _lh_listcomp_fun_ls_t_5) -> 
//│ 		                                        (`LH_C((`LH_C((char_of_int _lh_listcomp_fun_ls_h_4), _lh_listcomp_fun_ls_h_5)), (_lh_listcomp_fun_5 _lh_listcomp_fun_ls_t_5)))
//│ 		                                      | `LH_N -> 
//│ 		                                        (_lh_listcomp_fun_4 _lh_listcomp_fun_ls_t_4))) in
//│ 		                                    (_lh_listcomp_fun_5 (expand_lh _lh_alphabeticRule_LH_C_1_3)))
//│ 		                                | `LH_N -> 
//│ 		                                  (`LH_N))) in
//│ 		                              (_lh_listcomp_fun_4 (reverse_lh ((enumFromTo_lh (int_of_char _lh_alphabeticRule_LH_C_0_2)) (int_of_char _lh_alphabeticRule_LH_C_0_0))))))
//│ 		                        | _ -> 
//│ 		                          (failwith "error"))
//│ 		                    | _ -> 
//│ 		                      (failwith "error"))
//│ 		                | _ -> 
//│ 		                  (failwith "error"))
//│ 		            | _ -> 
//│ 		              (failwith "error"))
//│ 		        | _ -> 
//│ 		          (failwith "error"))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and
//│ 		constantRule_lh _lh_constantRule_arg1_0 =
//│ 		  (match _lh_constantRule_arg1_0 with
//│ 		    | `LH_C(_lh_constantRule_LH_C_0_0, _lh_constantRule_LH_C_1_0) -> 
//│ 		      (let rec _lh_listcomp_fun_7 = (fun _lh_listcomp_fun_para_7 -> 
//│ 		        (match _lh_listcomp_fun_para_7 with
//│ 		          | `LH_C(_lh_listcomp_fun_ls_h_7, _lh_listcomp_fun_ls_t_7) -> 
//│ 		            (`LH_C((`LH_C(_lh_constantRule_LH_C_0_0, _lh_listcomp_fun_ls_h_7)), (_lh_listcomp_fun_7 _lh_listcomp_fun_ls_t_7)))
//│ 		          | `LH_N -> 
//│ 		            (`LH_N))) in
//│ 		        (_lh_listcomp_fun_7 (expand_lh _lh_constantRule_LH_C_1_0)))
//│ 		    | _ -> 
//│ 		      (failwith "error"))
//│ 		and
//│ 		expand_lh _lh_expand_arg1_0 =
//│ 		  (match _lh_expand_arg1_0 with
//│ 		    | `LH_N -> 
//│ 		      (`LH_C((`LH_N), (`LH_N)))
//│ 		    | `LH_C(_lh_expand_LH_C_0_0, _lh_expand_LH_C_1_0) -> 
//│ 		      (match _lh_expand_LH_C_0_0 with
//│ 		        | '<' -> 
//│ 		          (numericRule_lh _lh_expand_LH_C_1_0)
//│ 		        | '[' -> 
//│ 		          (alphabeticRule_lh _lh_expand_LH_C_1_0)
//│ 		        | _ -> 
//│ 		          (constantRule_lh _lh_expand_arg1_0))
//│ 		    | _ -> 
//│ 		      (constantRule_lh _lh_expand_arg1_0))
//│ 		and
//│ 		numericRule_lh _lh_numericRule_arg1_0 =
//│ 		  (let rec _lh_matchIdent_1 = ((span_lh (fun c_0 -> 
//│ 		    (c_0 <> '-'))) _lh_numericRule_arg1_0) in
//│ 		    (match _lh_matchIdent_1 with
//│ 		      | `LH_P2(_lh_numericRule_LH_P2_0_0, _lh_numericRule_LH_P2_1_0) -> 
//│ 		        (match _lh_numericRule_LH_P2_1_0 with
//│ 		          | `LH_C(_lh_numericRule_LH_C_0_0, _lh_numericRule_LH_C_1_0) -> 
//│ 		            (let rec _lh_matchIdent_2 = ((span_lh (fun c_1 -> 
//│ 		              (c_1 <> '>'))) _lh_numericRule_LH_C_1_0) in
//│ 		              (match _lh_matchIdent_2 with
//│ 		                | `LH_P2(_lh_numericRule_LH_P2_0_1, _lh_numericRule_LH_P2_1_1) -> 
//│ 		                  (match _lh_numericRule_LH_P2_1_1 with
//│ 		                    | `LH_C(_lh_numericRule_LH_C_0_1, _lh_numericRule_LH_C_1_1) -> 
//│ 		                      (let rec _lh_matchIdent_3 = (`LH_P2((mknum_lh _lh_numericRule_LH_P2_0_0), (mknum_lh _lh_numericRule_LH_P2_0_1))) in
//│ 		                        (match _lh_matchIdent_3 with
//│ 		                          | `LH_P2(_lh_numericRule_LH_P2_0_2, _lh_numericRule_LH_P2_1_2) -> 
//│ 		                            (let rec width_0 = ((max_lh (length_lh (string_of_int _lh_numericRule_LH_P2_0_2))) (length_lh (string_of_int _lh_numericRule_LH_P2_1_2))) in
//│ 		                              (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
//│ 		                                (match _lh_listcomp_fun_para_0 with
//│ 		                                  | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
//│ 		                                    (let rec _lh_listcomp_fun_1 = (fun _lh_listcomp_fun_para_1 -> 
//│ 		                                      (match _lh_listcomp_fun_para_1 with
//│ 		                                        | `LH_C(_lh_listcomp_fun_ls_h_1, _lh_listcomp_fun_ls_t_1) -> 
//│ 		                                          (`LH_C(((mappend_lh ((pad_lh (string_of_int _lh_listcomp_fun_ls_h_0)) width_0)) _lh_listcomp_fun_ls_h_1), (_lh_listcomp_fun_1 _lh_listcomp_fun_ls_t_1)))
//│ 		                                        | `LH_N -> 
//│ 		                                          (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))) in
//│ 		                                      (_lh_listcomp_fun_1 (expand_lh _lh_numericRule_LH_C_1_1)))
//│ 		                                  | `LH_N -> 
//│ 		                                    (`LH_N))) in
//│ 		                                (_lh_listcomp_fun_0 (if (_lh_numericRule_LH_P2_0_2 < _lh_numericRule_LH_P2_1_2) then
//│ 		                                  ((enumFromTo_lh _lh_numericRule_LH_P2_0_2) _lh_numericRule_LH_P2_1_2)
//│ 		                                else
//│ 		                                  (((enumFromThenTo_lh _lh_numericRule_LH_P2_0_2) (_lh_numericRule_LH_P2_0_2 - 1)) _lh_numericRule_LH_P2_1_2)))))
//│ 		                          | _ -> 
//│ 		                            (failwith "error")))
//│ 		                    | _ -> 
//│ 		                      (failwith "error"))
//│ 		                | _ -> 
//│ 		                  (failwith "error")))
//│ 		          | _ -> 
//│ 		            (failwith "error"))
//│ 		      | _ -> 
//│ 		        (failwith "error")));;
//│ 		let rec concat_lh lss_0 =
//│ 		  (match lss_0 with
//│ 		    | `LH_C(h_3, t_4) -> 
//│ 		      ((mappend_lh h_3) (concat_lh t_4))
//│ 		    | `LH_N -> 
//│ 		      (`LH_N));;
//│ 		let rec testGenRegexs_nofib_lh _lh_testGenRegexs_nofib_arg1_0 =
//│ 		  (concat_lh (expand_lh _lh_testGenRegexs_nofib_arg1_0));;
//│ 		(testGenRegexs_nofib_lh (`LH_C('[', (`LH_C('a', (`LH_C('-', (`LH_C('j', (`LH_C(']', (`LH_C('[', (`LH_C('a', (`LH_C('-', (`LH_C('j', (`LH_C(']', (`LH_C('[', (`LH_C('a', (`LH_C('-', (`LH_C('j', (`LH_C(']', (`LH_C('[', (`LH_C('0', (`LH_C('-', (`LH_C('9', (`LH_C(']', (`LH_N))))))))))))))))))))))))))))))))))))))))))
//│ 		---------- unoptimized ocaml gen ----------
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 33 --->
//│ 	case ls³ of {LH_C h⁴ t⁵ => reverse_helper_lh(t⁵, [LH_C h⁴ a²]) | LH_N  => a²}: 114
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]}: 222
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(expand_lh(_lh_alphabeticRule_LH_C_1³)) | LH_N  => [LH_N]}: 328
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C '0' _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 403
//│ [LH_N]: 34 --->
//│ 	case ls³ of {LH_C h⁴ t⁵ => reverse_helper_lh(t⁵, [LH_C h⁴ a²]) | LH_N  => a²}: 114
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]}: 222
//│ 	case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(expand_lh(_lh_alphabeticRule_LH_C_1³)) | LH_N  => [LH_N]}: 328
//│ 	case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C '0' _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 403
//│ [LH_C a¹ enumFromThenTo_lh(t¹, ((2 * t¹) - a¹), b¹)]: 59 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]}: 222
//│ [LH_N]: 60 --->
//│ 	case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]}: 222
//│ [LH_C h² mappend_lh(t³, ys⁰)]: 83 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h² t³ => [LH_C h² mappend_lh(t³, ys⁰)] | LH_N  => ys⁰}: 85
//│ [LH_N]: 96 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h² t³ => [LH_C h² mappend_lh(t³, ys⁰)] | LH_N  => ys⁰}: 85
//│ [LH_N]: 102 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵(expand_lh(_lh_alphabeticRule_LH_C_1³)) | LH_N  => [LH_N]}: 365
//│ [LH_C h⁴ a²]: 111 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵(expand_lh(_lh_alphabeticRule_LH_C_1³)) | LH_N  => [LH_N]}: 365
//│ [LH_N]: 118 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => foldl_lh(f⁰, f⁰(i⁰, h⁰), t⁰) | LH_N  => i⁰}: 14
//│ [LH_N]: 119 --->
//│ 	case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰}: 254
//│ 	case _lh_numericRule_LH_P2_1⁰ of {LH_C _lh_numericRule_LH_C_0⁰ _lh_numericRule_LH_C_1⁰ => let _lh_matchIdent² = span_lh((fun c¹ -> polyNeq⁰(c¹, '>')), _lh_numericRule_LH_C_1⁰)
//│ in case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 259
//│ [LH_P2 [LH_N] [LH_N]]: 120 --->
//│ 	case _lh_matchIdent⁰ of {LH_P2 _lh_span_LH_P2_0⁰ _lh_span_LH_P2_1⁰ => [LH_P2 [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰] _lh_span_LH_P2_1⁰] | _  => error⁰}: 136
//│ 	case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 256
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_numericRule_LH_P2_0⁰ _lh_numericRule_LH_P2_1⁰ => case _lh_numericRule_LH_P2_1⁰ of {LH_C _lh_numericRule_LH_C_0⁰ _lh_numericRule_LH_C_1⁰ => let _lh_matchIdent² = span_lh((fun c¹ -> polyNeq⁰(c¹, '>')), _lh_numericRule_LH_C_1⁰)
//│ in case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 261
//│ [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰]: 132 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => foldl_lh(f⁰, f⁰(i⁰, h⁰), t⁰) | LH_N  => i⁰}: 14
//│ [LH_P2 [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰] _lh_span_LH_P2_1⁰]: 134 --->
//│ 	case _lh_matchIdent⁰ of {LH_P2 _lh_span_LH_P2_0⁰ _lh_span_LH_P2_1⁰ => [LH_P2 [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰] _lh_span_LH_P2_1⁰] | _  => error⁰}: 136
//│ 	case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 256
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_numericRule_LH_P2_0⁰ _lh_numericRule_LH_P2_1⁰ => case _lh_numericRule_LH_P2_1⁰ of {LH_C _lh_numericRule_LH_C_0⁰ _lh_numericRule_LH_C_1⁰ => let _lh_matchIdent² = span_lh((fun c¹ -> polyNeq⁰(c¹, '>')), _lh_numericRule_LH_C_1⁰)
//│ in case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 261
//│ [LH_N]: 138 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => foldl_lh(f⁰, f⁰(i⁰, h⁰), t⁰) | LH_N  => i⁰}: 14
//│ [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰]: 141 --->
//│ 	case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰}: 254
//│ 	case _lh_numericRule_LH_P2_1⁰ of {LH_C _lh_numericRule_LH_C_0⁰ _lh_numericRule_LH_C_1⁰ => let _lh_matchIdent² = span_lh((fun c¹ -> polyNeq⁰(c¹, '>')), _lh_numericRule_LH_C_1⁰)
//│ in case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 259
//│ [LH_P2 [LH_N] [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰]]: 142 --->
//│ 	case _lh_matchIdent⁰ of {LH_P2 _lh_span_LH_P2_0⁰ _lh_span_LH_P2_1⁰ => [LH_P2 [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰] _lh_span_LH_P2_1⁰] | _  => error⁰}: 136
//│ 	case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 256
//│ 	case _lh_matchIdent¹ of {LH_P2 _lh_numericRule_LH_P2_0⁰ _lh_numericRule_LH_P2_1⁰ => case _lh_numericRule_LH_P2_1⁰ of {LH_C _lh_numericRule_LH_C_0⁰ _lh_numericRule_LH_C_1⁰ => let _lh_matchIdent² = span_lh((fun c¹ -> polyNeq⁰(c¹, '>')), _lh_numericRule_LH_C_1⁰)
//│ in case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 261
//│ [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]: 178 --->
//│ 	case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰}: 251
//│ [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 209 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ [LH_N]: 221 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³]: 311 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h² t³ => [LH_C h² mappend_lh(t³, ys⁰)] | LH_N  => ys⁰}: 85
//│ [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 315 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ [LH_N]: 327 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵]: 348 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h² t³ => [LH_C h² mappend_lh(t³, ys⁰)] | LH_N  => ys⁰}: 85
//│ [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 352 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ [LH_N]: 364 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ [LH_C '0' _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 401 --->
//│ 	case xs⁰ of {LH_C h² t³ => [LH_C h² mappend_lh(t³, ys⁰)] | LH_N  => ys⁰}: 85
//│ [LH_N]: 402 --->
//│ 	case xs⁰ of {LH_C h² t³ => [LH_C h² mappend_lh(t³, ys⁰)] | LH_N  => ys⁰}: 85
//│ [LH_N]: 425 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h² t³ => [LH_C h² mappend_lh(t³, ys⁰)] | LH_N  => ys⁰}: 85
//│ [LH_N]: 426 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ [LH_C [LH_N] [LH_N]]: 427 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷]: 464 --->
//│ 	NoCons
//│ 	case xs⁰ of {LH_C h² t³ => [LH_C h² mappend_lh(t³, ys⁰)] | LH_N  => ys⁰}: 85
//│ [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 468 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ [LH_N]: 469 --->
//│ 	case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97
//│ 	case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213
//│ 	case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319
//│ 	case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356
//│ 	case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470
//│ ------------------
//│ case ls⁰ of {LH_C h⁰ t⁰ => foldl_lh(f⁰, f⁰(i⁰, h⁰), t⁰) | LH_N  => i⁰}: 14 --->
//│ 	[LH_N]: 118
//│ 	[LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰]: 132
//│ 	[LH_N]: 138
//│ case xs⁰ of {LH_C h² t³ => [LH_C h² mappend_lh(t³, ys⁰)] | LH_N  => ys⁰}: 85 --->
//│ 	NoProd
//│ 	[LH_C h² mappend_lh(t³, ys⁰)]: 83
//│ 	[LH_N]: 96
//│ 	[LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³]: 311
//│ 	[LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵]: 348
//│ 	[LH_C '0' _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)]: 401
//│ 	[LH_N]: 402
//│ 	[LH_N]: 425
//│ 	[LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷]: 464
//│ case lss⁰ of {LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴)) | LH_N  => [LH_N]}: 97 --->
//│ 	[LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 209
//│ 	[LH_N]: 221
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 315
//│ 	[LH_N]: 327
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 352
//│ 	[LH_N]: 364
//│ 	[LH_N]: 426
//│ 	[LH_C [LH_N] [LH_N]]: 427
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 468
//│ 	[LH_N]: 469
//│ case ls³ of {LH_C h⁴ t⁵ => reverse_helper_lh(t⁵, [LH_C h⁴ a²]) | LH_N  => a²}: 114 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 33
//│ 	[LH_N]: 34
//│ case _lh_matchIdent⁰ of {LH_P2 _lh_span_LH_P2_0⁰ _lh_span_LH_P2_1⁰ => [LH_P2 [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰] _lh_span_LH_P2_1⁰] | _  => error⁰}: 136 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 120
//│ 	[LH_P2 [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰] _lh_span_LH_P2_1⁰]: 134
//│ 	[LH_P2 [LH_N] [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰]]: 142
//│ case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)}: 213 --->
//│ 	[LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 209
//│ 	[LH_N]: 221
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 315
//│ 	[LH_N]: 327
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 352
//│ 	[LH_N]: 364
//│ 	[LH_N]: 426
//│ 	[LH_C [LH_N] [LH_N]]: 427
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 468
//│ 	[LH_N]: 469
//│ case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]}: 222 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 33
//│ 	[LH_N]: 34
//│ 	[LH_C a¹ enumFromThenTo_lh(t¹, ((2 * t¹) - a¹), b¹)]: 59
//│ 	[LH_N]: 60
//│ case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰}: 251 --->
//│ 	[LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]: 178
//│ case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰}: 254 --->
//│ 	[LH_N]: 119
//│ 	[LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰]: 141
//│ case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 256 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 120
//│ 	[LH_P2 [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰] _lh_span_LH_P2_1⁰]: 134
//│ 	[LH_P2 [LH_N] [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰]]: 142
//│ case _lh_numericRule_LH_P2_1⁰ of {LH_C _lh_numericRule_LH_C_0⁰ _lh_numericRule_LH_C_1⁰ => let _lh_matchIdent² = span_lh((fun c¹ -> polyNeq⁰(c¹, '>')), _lh_numericRule_LH_C_1⁰)
//│ in case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 259 --->
//│ 	[LH_N]: 119
//│ 	[LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰]: 141
//│ case _lh_matchIdent¹ of {LH_P2 _lh_numericRule_LH_P2_0⁰ _lh_numericRule_LH_P2_1⁰ => case _lh_numericRule_LH_P2_1⁰ of {LH_C _lh_numericRule_LH_C_0⁰ _lh_numericRule_LH_C_1⁰ => let _lh_matchIdent² = span_lh((fun c¹ -> polyNeq⁰(c¹, '>')), _lh_numericRule_LH_C_1⁰)
//│ in case _lh_matchIdent² of {LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => let _lh_matchIdent³ = [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]
//│ in case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 261 --->
//│ 	[LH_P2 [LH_N] [LH_N]]: 120
//│ 	[LH_P2 [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰] _lh_span_LH_P2_1⁰]: 134
//│ 	[LH_P2 [LH_N] [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰]]: 142
//│ case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)}: 319 --->
//│ 	[LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 209
//│ 	[LH_N]: 221
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 315
//│ 	[LH_N]: 327
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 352
//│ 	[LH_N]: 364
//│ 	[LH_N]: 426
//│ 	[LH_C [LH_N] [LH_N]]: 427
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 468
//│ 	[LH_N]: 469
//│ case _lh_listcomp_fun_para² of {LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => let _lh_listcomp_fun³ = (fun _lh_listcomp_fun_para³ -> case _lh_listcomp_fun_para³ of {LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)] | LH_N  => _lh_listcomp_fun²(_lh_listcomp_fun_ls_t²)})
//│ in _lh_listcomp_fun³(expand_lh(_lh_alphabeticRule_LH_C_1³)) | LH_N  => [LH_N]}: 328 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 33
//│ 	[LH_N]: 34
//│ case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)}: 356 --->
//│ 	[LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 209
//│ 	[LH_N]: 221
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 315
//│ 	[LH_N]: 327
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 352
//│ 	[LH_N]: 364
//│ 	[LH_N]: 426
//│ 	[LH_C [LH_N] [LH_N]]: 427
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 468
//│ 	[LH_N]: 469
//│ case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵(expand_lh(_lh_alphabeticRule_LH_C_1³)) | LH_N  => [LH_N]}: 365 --->
//│ 	[LH_N]: 102
//│ 	[LH_C h⁴ a²]: 111
//│ case _lh_listcomp_fun_para⁶ of {LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C '0' _lh_listcomp_fun⁶(_lh_listcomp_fun_ls_t⁶)] | LH_N  => [LH_N]}: 403 --->
//│ 	[LH_C a⁰ enumFromTo_lh((a⁰ + 1), b⁰)]: 33
//│ 	[LH_N]: 34
//│ case _lh_listcomp_fun_para⁷ of {LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)] | LH_N  => [LH_N]}: 470 --->
//│ 	[LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)]: 209
//│ 	[LH_N]: 221
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun³(_lh_listcomp_fun_ls_t³)]: 315
//│ 	[LH_N]: 327
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)]: 352
//│ 	[LH_N]: 364
//│ 	[LH_N]: 426
//│ 	[LH_C [LH_N] [LH_N]]: 427
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun⁷(_lh_listcomp_fun_ls_t⁷)]: 468
//│ 	[LH_N]: 469
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_N]: 102 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵(expand_lh(_lh_alphabeticRule_LH_C_1³)) | LH_N  => [LH_N]}: 365
//│ [LH_C h⁴ a²]: 111 --->
//│ 	case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵(expand_lh(_lh_alphabeticRule_LH_C_1³)) | LH_N  => [LH_N]}: 365
//│ [LH_N]: 118 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => foldl_lh(f⁰, f⁰(i⁰, h⁰), t⁰) | LH_N  => i⁰}: 14
//│ [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰]: 132 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => foldl_lh(f⁰, f⁰(i⁰, h⁰), t⁰) | LH_N  => i⁰}: 14
//│ [LH_N]: 138 --->
//│ 	case ls⁰ of {LH_C h⁰ t⁰ => foldl_lh(f⁰, f⁰(i⁰, h⁰), t⁰) | LH_N  => i⁰}: 14
//│ [LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]: 178 --->
//│ 	case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰}: 251
//│ ------------------
//│ case ls⁰ of {LH_C h⁰ t⁰ => foldl_lh(f⁰, f⁰(i⁰, h⁰), t⁰) | LH_N  => i⁰}: 14 --->
//│ 	[LH_N]: 118
//│ 	[LH_C _lh_span_LH_C_0⁰ _lh_span_LH_P2_0⁰]: 132
//│ 	[LH_N]: 138
//│ case _lh_matchIdent³ of {LH_P2 _lh_numericRule_LH_P2_0² _lh_numericRule_LH_P2_1² => let width⁰ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0²)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1²)))
//│ in let _lh_listcomp_fun⁰ = (fun _lh_listcomp_fun_para⁰ -> case _lh_listcomp_fun_para⁰ of {LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => let _lh_listcomp_fun¹ = (fun _lh_listcomp_fun_para¹ -> case _lh_listcomp_fun_para¹ of {LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width⁰), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹(_lh_listcomp_fun_ls_t¹)] | LH_N  => _lh_listcomp_fun⁰(_lh_listcomp_fun_ls_t⁰)})
//│ in _lh_listcomp_fun¹(expand_lh(_lh_numericRule_LH_C_1¹)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun⁰(if (_lh_numericRule_LH_P2_0² < _lh_numericRule_LH_P2_1²) then enumFromTo_lh(_lh_numericRule_LH_P2_0², _lh_numericRule_LH_P2_1²) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0², (_lh_numericRule_LH_P2_0² - 1), _lh_numericRule_LH_P2_1²)) | _  => error⁰}: 251 --->
//│ 	[LH_P2 mknum_lh(_lh_numericRule_LH_P2_0⁰) mknum_lh(_lh_numericRule_LH_P2_0¹)]: 178
//│ case _lh_listcomp_fun_para⁴ of {LH_C _lh_listcomp_fun_ls_h⁴ _lh_listcomp_fun_ls_t⁴ => let _lh_listcomp_fun⁵ = (fun _lh_listcomp_fun_para⁵ -> case _lh_listcomp_fun_para⁵ of {LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁴) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun⁵(_lh_listcomp_fun_ls_t⁵)] | LH_N  => _lh_listcomp_fun⁴(_lh_listcomp_fun_ls_t⁴)})
//│ in _lh_listcomp_fun⁵(expand_lh(_lh_alphabeticRule_LH_C_1³)) | LH_N  => [LH_N]}: 365 --->
//│ 	[LH_N]: 102
//│ 	[LH_C h⁴ a²]: 111
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testGenRegexs_nofib_lh(primId⁰([LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C '0' [LH_C '-' [LH_C '9' [LH_C ']' [LH_N]]]]]]]]]]]]]]]]]]]]]))
//│ def alphabeticRule_lh(_lh_alphabeticRule_arg1¹) = case _lh_alphabeticRule_arg1¹ of {
//│ 	LH_C _lh_alphabeticRule_LH_C_0⁰ _lh_alphabeticRule_LH_C_1⁰ => case _lh_alphabeticRule_LH_C_1⁰ of {
//│ 		LH_C _lh_alphabeticRule_LH_C_0¹ _lh_alphabeticRule_LH_C_1¹ => case _lh_alphabeticRule_LH_C_0¹ of {
//│ 			'-'  => case _lh_alphabeticRule_LH_C_1¹ of {
//│ 				LH_C _lh_alphabeticRule_LH_C_0² _lh_alphabeticRule_LH_C_1² => case _lh_alphabeticRule_LH_C_1² of {
//│ 					LH_C _lh_alphabeticRule_LH_C_0³ _lh_alphabeticRule_LH_C_1³ => case _lh_alphabeticRule_LH_C_0³ of {
//│ 						']'  => if (int_of_char⁰(_lh_alphabeticRule_LH_C_0⁰) <= int_of_char⁰(_lh_alphabeticRule_LH_C_0²)) then 
//│ 							let _lh_listcomp_fun⁹ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 								LH_C _lh_listcomp_fun_ls_h² _lh_listcomp_fun_ls_t² => 
//│ 									let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 										LH_C _lh_listcomp_fun_ls_h³ _lh_listcomp_fun_ls_t³ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²) _lh_listcomp_fun_ls_h³] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t³)]
//│ 										| LH_N  => _lh_listcomp_fun⁹(_lh_listcomp_fun_ls_t²)})
//│ 									in _lh_listcomp_fun¹⁰(expand_lh(_lh_alphabeticRule_LH_C_1³))
//│ 								| LH_N  => [LH_N]})
//│ 							in _lh_listcomp_fun⁹(enumFromTo_lh(int_of_char⁰(_lh_alphabeticRule_LH_C_0⁰), int_of_char⁰(_lh_alphabeticRule_LH_C_0²))) else 
//│ 							let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para¹⁰ -> _lh_listcomp_fun_para¹⁰(_lh_alphabeticRule_LH_C_1³, _lh_listcomp_fun¹¹))
//│ 							in _lh_listcomp_fun¹¹(reverse_lh(enumFromTo_lh(int_of_char⁰(_lh_alphabeticRule_LH_C_0²), int_of_char⁰(_lh_alphabeticRule_LH_C_0⁰))))
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ 	| _  => error⁰}
//│ def concat_lh(lss¹) = case lss¹ of {
//│ 	LH_C h³ t⁴ => mappend_lh(h³, concat_lh(t⁴))
//│ 	| LH_N  => [LH_N]}
//│ def constantRule_lh(_lh_constantRule_arg1¹) = case _lh_constantRule_arg1¹ of {
//│ 	LH_C _lh_constantRule_LH_C_0⁰ _lh_constantRule_LH_C_1⁰ => 
//│ 		let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {
//│ 			LH_C _lh_listcomp_fun_ls_h⁷ _lh_listcomp_fun_ls_t⁷ => [LH_C [LH_C _lh_constantRule_LH_C_0⁰ _lh_listcomp_fun_ls_h⁷] _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t⁷)]
//│ 			| LH_N  => [LH_N]})
//│ 		in _lh_listcomp_fun¹⁶(expand_lh(_lh_constantRule_LH_C_1⁰))
//│ 	| _  => error⁰}
//│ def enumFromThenTo_lh(a³, t⁶, b²) = if (a³ <= b²) then [LH_C a³ enumFromThenTo_lh(t⁶, ((2 * t⁶) - a³), b²)] else [LH_N]
//│ def enumFromTo_lh(a⁵, b³) = if (a⁵ <= b³) then [LH_C a⁵ enumFromTo_lh((a⁵ + 1), b³)] else [LH_N]
//│ def expand_lh(_lh_expand_arg1¹) = case _lh_expand_arg1¹ of {
//│ 	LH_N  => [LH_C [LH_N] [LH_N]]
//│ 	| LH_C _lh_expand_LH_C_0⁰ _lh_expand_LH_C_1⁰ => case _lh_expand_LH_C_0⁰ of {
//│ 		'<'  => numericRule_lh(_lh_expand_LH_C_1⁰)
//│ 		| '['  => alphabeticRule_lh(_lh_expand_LH_C_1⁰)
//│ 		| _  => constantRule_lh(_lh_expand_arg1¹)}
//│ 	| _  => constantRule_lh(_lh_expand_arg1¹)}
//│ def foldl_lh(f¹, i¹, ls⁶) = ls⁶(f¹, i¹)
//│ def length_lh(ls⁵) = case ls⁵ of {
//│ 	LH_C h¹ t² => (1 + length_lh(t²))
//│ 	| LH_N  => 0}
//│ def mappend_lh(xs¹, ys¹) = case xs¹ of {
//│ 	LH_C h² t³ => [LH_C h² mappend_lh(t³, ys¹)]
//│ 	| LH_N  => ys¹}
//│ def max_lh(_lh_max_arg1¹, _lh_max_arg2¹) = if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ def mknum_lh(_lh_mknum_arg1¹) = foldl_lh((fun u¹ -> (fun c³ -> ((u¹ * 10) + (int_of_char⁰(c³) - int_of_char⁰('0'))))), 0, _lh_mknum_arg1¹)
//│ def numericRule_lh(_lh_numericRule_arg1¹) = 
//│ 	let _lh_matchIdent⁴ = span_lh((fun c⁴ -> polyNeq⁰(c⁴, '-')), _lh_numericRule_arg1¹)
//│ 	in case _lh_matchIdent⁴ of {
//│ 		LH_P2 _lh_numericRule_LH_P2_0⁰ _lh_numericRule_LH_P2_1⁰ => case _lh_numericRule_LH_P2_1⁰ of {
//│ 			LH_C _lh_numericRule_LH_C_0⁰ _lh_numericRule_LH_C_1⁰ => 
//│ 				let _lh_matchIdent⁵ = span_lh((fun c⁵ -> polyNeq⁰(c⁵, '>')), _lh_numericRule_LH_C_1⁰)
//│ 				in case _lh_matchIdent⁵ of {
//│ 					LH_P2 _lh_numericRule_LH_P2_0¹ _lh_numericRule_LH_P2_1¹ => case _lh_numericRule_LH_P2_1¹ of {
//│ 						LH_C _lh_numericRule_LH_C_0¹ _lh_numericRule_LH_C_1¹ => 
//│ 							let _lh_matchIdent⁶ = 	
//│ 								let _lh_numericRule_LH_P2_1³ = mknum_lh(_lh_numericRule_LH_P2_0¹)
//│ 								in let _lh_numericRule_LH_P2_0³ = mknum_lh(_lh_numericRule_LH_P2_0⁰)
//│ 								in (fun _lh_numericRule_LH_C_1² -> 
//│ 									let width¹ = max_lh(length_lh(string_of_int⁰(_lh_numericRule_LH_P2_0³)), length_lh(string_of_int⁰(_lh_numericRule_LH_P2_1³)))
//│ 									in let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹¹ -> case _lh_listcomp_fun_para¹¹ of {
//│ 										LH_C _lh_listcomp_fun_ls_h⁰ _lh_listcomp_fun_ls_t⁰ => 
//│ 											let _lh_listcomp_fun¹³ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {
//│ 												LH_C _lh_listcomp_fun_ls_h¹ _lh_listcomp_fun_ls_t¹ => [LH_C mappend_lh(pad_lh(string_of_int⁰(_lh_listcomp_fun_ls_h⁰), width¹), _lh_listcomp_fun_ls_h¹) _lh_listcomp_fun¹³(_lh_listcomp_fun_ls_t¹)]
//│ 												| LH_N  => _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t⁰)})
//│ 											in _lh_listcomp_fun¹³(expand_lh(_lh_numericRule_LH_C_1²))
//│ 										| LH_N  => [LH_N]})
//│ 									in _lh_listcomp_fun¹²(if (_lh_numericRule_LH_P2_0³ < _lh_numericRule_LH_P2_1³) then enumFromTo_lh(_lh_numericRule_LH_P2_0³, _lh_numericRule_LH_P2_1³) else enumFromThenTo_lh(_lh_numericRule_LH_P2_0³, (_lh_numericRule_LH_P2_0³ - 1), _lh_numericRule_LH_P2_1³)))
//│ 							in _lh_matchIdent⁶(_lh_numericRule_LH_C_1¹)
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 			| _  => error⁰}
//│ 		| _  => error⁰}
//│ def pad_lh(_lh_pad_arg1¹, _lh_pad_arg2¹) = mappend_lh(
//│ 	let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {
//│ 		LH_C _lh_listcomp_fun_ls_h⁶ _lh_listcomp_fun_ls_t⁶ => [LH_C '0' _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t⁶)]
//│ 		| LH_N  => [LH_N]})
//│ 	in _lh_listcomp_fun¹⁷(enumFromTo_lh(1, (_lh_pad_arg2¹ - length_lh(_lh_pad_arg1¹)))), _lh_pad_arg1¹)
//│ def reverse_helper_lh(ls⁷, a⁴) = case ls⁷ of {
//│ 	LH_C h⁴ t⁵ => reverse_helper_lh(t⁵, 
//│ 		let _lh_listcomp_fun_ls_t⁸ = a⁴
//│ 		in let _lh_listcomp_fun_ls_h⁸ = h⁴
//│ 		in (fun _lh_alphabeticRule_LH_C_1⁵ -> (fun _lh_listcomp_fun¹⁴ -> 
//│ 			let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {
//│ 				LH_C _lh_listcomp_fun_ls_h⁵ _lh_listcomp_fun_ls_t⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁸) _lh_listcomp_fun_ls_h⁵] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t⁵)]
//│ 				| LH_N  => _lh_listcomp_fun¹⁴(_lh_listcomp_fun_ls_t⁸)})
//│ 			in _lh_listcomp_fun¹⁵(expand_lh(_lh_alphabeticRule_LH_C_1⁵)))))
//│ 	| LH_N  => a⁴}
//│ def reverse_lh(ls⁴) = reverse_helper_lh(ls⁴, (fun _lh_alphabeticRule_LH_C_1⁴ -> (fun _lh_listcomp_fun⁸ -> [LH_N])))
//│ def span_lh(_lh_span_arg1¹, _lh_span_arg2¹) = case _lh_span_arg2¹ of {
//│ 	LH_N  => [LH_P2 (fun f² -> (fun i² -> i²)) [LH_N]]
//│ 	| LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰ => if _lh_span_arg1¹(_lh_span_LH_C_0⁰) then 
//│ 		let _lh_matchIdent⁷ = span_lh(_lh_span_arg1¹, _lh_span_LH_C_1⁰)
//│ 		in case _lh_matchIdent⁷ of {
//│ 			LH_P2 _lh_span_LH_P2_0⁰ _lh_span_LH_P2_1⁰ => [LH_P2 
//│ 				let t⁷ = _lh_span_LH_P2_0⁰
//│ 				in let h⁵ = _lh_span_LH_C_0⁰
//│ 				in (fun f³ -> (fun i³ -> foldl_lh(f³, f³(i³, h⁵), t⁷))) _lh_span_LH_P2_1⁰]
//│ 			| _  => error⁰} else [LH_P2 (fun f⁴ -> (fun i⁴ -> i⁴)) [LH_C _lh_span_LH_C_0⁰ _lh_span_LH_C_1⁰]]
//│ 	| _  => error⁰}
//│ def testGenRegexs_nofib_lh(_lh_testGenRegexs_nofib_arg1¹) = concat_lh(expand_lh(_lh_testGenRegexs_nofib_arg1¹))
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [testGenRegexs_nofib_lh^1] (hopeless to continue)
//│ 	[testGenRegexs_nofib_lh^1 · concat_lh^427] (using original def)
//│ 		[testGenRegexs_nofib_lh^1 · concat_lh^427 · concat_lh^525] ---> [testGenRegexs_nofib_lh^1 · concat_lh^427] (using original def)
//│ 		[testGenRegexs_nofib_lh^1 · concat_lh^427 · mappend_lh^522] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · concat_lh^427 · mappend_lh^522 · mappend_lh^534] ---> [testGenRegexs_nofib_lh^1 · concat_lh^427 · mappend_lh^522] (using original def)
//│ 	[testGenRegexs_nofib_lh^1 · expand_lh^428] (using original def)
//│ 		[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · enumFromTo_lh^167] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · enumFromTo_lh^167 · enumFromTo_lh^392] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · enumFromTo_lh^167] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · enumFromTo_lh^186] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · enumFromTo_lh^186 · enumFromTo_lh^392] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · enumFromTo_lh^186] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · expand_lh^158] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · reverse_lh^185] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · reverse_lh^185 · reverse_helper_lh^73] (using original def)
//│ 					[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · reverse_lh^185 · reverse_helper_lh^73 · expand_lh^372] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428] (using original def)
//│ 					[testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · reverse_lh^185 · reverse_helper_lh^73 · reverse_helper_lh^351] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · alphabeticRule_lh^220 · reverse_lh^185 · reverse_helper_lh^73] (using original def)
//│ 		[testGenRegexs_nofib_lh^1 · expand_lh^428 · constantRule_lh^223] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · constantRule_lh^223 · expand_lh^419] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428] (using original def)
//│ 		[testGenRegexs_nofib_lh^1 · expand_lh^428 · constantRule_lh^227] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · constantRule_lh^227 · expand_lh^419] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428] (using original def)
//│ 		[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · enumFromThenTo_lh^317] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · enumFromThenTo_lh^317 · enumFromThenTo_lh^52] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · enumFromThenTo_lh^317] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · enumFromTo_lh^312] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · enumFromTo_lh^312 · enumFromTo_lh^392] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · enumFromTo_lh^312] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · expand_lh^298] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · length_lh^263] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · length_lh^263 · length_lh^85] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · length_lh^263] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · length_lh^269] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · length_lh^269 · length_lh^85] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · length_lh^269] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · mappend_lh^277] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · mappend_lh^277 · mappend_lh^534] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · mappend_lh^277] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · max_lh^262] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · mknum_lh^256] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · mknum_lh^256 · foldl_lh^100] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · mknum_lh^259] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · mknum_lh^259 · foldl_lh^100] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278 · enumFromTo_lh^444] (using original def)
//│ 					[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278 · enumFromTo_lh^444 · enumFromTo_lh^392] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278 · enumFromTo_lh^444] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278 · length_lh^450] (using original def)
//│ 					[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278 · length_lh^450 · length_lh^85] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278 · length_lh^450] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278 · mappend_lh^433] (using original def)
//│ 					[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278 · mappend_lh^433 · mappend_lh^534] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · pad_lh^278 · mappend_lh^433] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · span_lh^232] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · span_lh^232 · foldl_lh^489] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · span_lh^232 · span_lh^481] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · span_lh^232] (using original def)
//│ 			[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · span_lh^244] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · span_lh^244 · foldl_lh^489] (using original def)
//│ 				[testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · span_lh^244 · span_lh^481] ---> [testGenRegexs_nofib_lh^1 · expand_lh^428 · numericRule_lh^217 · span_lh^244] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ testGenRegexs_nofib_lh_₀(primId⁰([LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C '0' [LH_C '-' [LH_C '9' [LH_C ']' [LH_N]]]]]]]]]]]]]]]]]]]]]))
//│ def testGenRegexs_nofib_lh_₀(_lh_testGenRegexs_nofib_arg1¹) = 
//│ 	concat_lh_₀(expand_lh_₀(_lh_testGenRegexs_nofib_arg1¹))
//│ 	where
//│ 	def concat_lh_₀(lss¹) = 
//│ 		case lss¹ of {
//│ 			LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶))
//│ 			| LH_N  => [LH_N]}
//│ 		where
//│ 		def mappend_lh_₀(xs³, ys³) = 
//│ 			case xs³ of {
//│ 				LH_C h¹³ t¹⁵ => [LH_C h¹³ mappend_lh_₀(t¹⁵, ys³)]
//│ 				| LH_N  => ys³}
//│ 	def expand_lh_₀(_lh_expand_arg1¹) = 
//│ 		case _lh_expand_arg1¹ of {
//│ 			LH_N  => [LH_C [LH_N] [LH_N]]
//│ 			| LH_C _lh_expand_LH_C_0¹ _lh_expand_LH_C_1¹ => case _lh_expand_LH_C_0¹ of {
//│ 				'<'  => numericRule_lh_₀(_lh_expand_LH_C_1¹)
//│ 				| '['  => alphabeticRule_lh_₀(_lh_expand_LH_C_1¹)
//│ 				| _  => constantRule_lh_₀(_lh_expand_arg1¹)}
//│ 			| _  => constantRule_lh_₁(_lh_expand_arg1¹)}
//│ 		where
//│ 		def alphabeticRule_lh_₀(_lh_alphabeticRule_arg1¹) = 
//│ 			case _lh_alphabeticRule_arg1¹ of {
//│ 				LH_C _lh_alphabeticRule_LH_C_0⁴ _lh_alphabeticRule_LH_C_1⁶ => case _lh_alphabeticRule_LH_C_1⁶ of {
//│ 					LH_C _lh_alphabeticRule_LH_C_0⁵ _lh_alphabeticRule_LH_C_1⁷ => case _lh_alphabeticRule_LH_C_0⁵ of {
//│ 						'-'  => case _lh_alphabeticRule_LH_C_1⁷ of {
//│ 							LH_C _lh_alphabeticRule_LH_C_0⁶ _lh_alphabeticRule_LH_C_1⁸ => case _lh_alphabeticRule_LH_C_1⁸ of {
//│ 								LH_C _lh_alphabeticRule_LH_C_0⁷ _lh_alphabeticRule_LH_C_1⁹ => case _lh_alphabeticRule_LH_C_0⁷ of {
//│ 									']'  => if (int_of_char⁰(_lh_alphabeticRule_LH_C_0⁴) <= int_of_char⁰(_lh_alphabeticRule_LH_C_0⁶)) then 
//│ 										let _lh_listcomp_fun¹¹ = (fun _lh_listcomp_fun_para⁹ -> case _lh_listcomp_fun_para⁹ of {
//│ 											LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => 
//│ 												let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {
//│ 													LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)]
//│ 													| LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)})
//│ 												in _lh_listcomp_fun¹²(expand_lh_₀(_lh_alphabeticRule_LH_C_1⁹))
//│ 											| LH_N  => [LH_N]})
//│ 										in _lh_listcomp_fun¹¹(enumFromTo_lh_₀(int_of_char⁰(_lh_alphabeticRule_LH_C_0⁴), int_of_char⁰(_lh_alphabeticRule_LH_C_0⁶))) else 
//│ 										let _lh_listcomp_fun¹³ = (fun _lh_listcomp_fun_para¹¹ -> _lh_listcomp_fun_para¹¹(_lh_alphabeticRule_LH_C_1⁹, _lh_listcomp_fun¹³))
//│ 										in _lh_listcomp_fun¹³(reverse_lh_₀(enumFromTo_lh_₁(int_of_char⁰(_lh_alphabeticRule_LH_C_0⁶), int_of_char⁰(_lh_alphabeticRule_LH_C_0⁴))))
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def enumFromTo_lh_₀(a⁸, b⁶) = 
//│ 				if (a⁸ <= b⁶) then [LH_C a⁸ enumFromTo_lh_₀((a⁸ + 1), b⁶)] else [LH_N]
//│ 			def enumFromTo_lh_₁(a⁷, b⁵) = 
//│ 				if (a⁷ <= b⁵) then [LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁵)] else [LH_N]
//│ 			def reverse_lh_₀(ls⁴) = 
//│ 				reverse_helper_lh_₀(ls⁴, (fun _lh_alphabeticRule_LH_C_1¹⁰ -> (fun _lh_listcomp_fun¹⁴ -> [LH_N])))
//│ 				where
//│ 				def reverse_helper_lh_₀(ls⁷, a⁴) = 
//│ 					case ls⁷ of {
//│ 						LH_C h⁸ t⁹ => reverse_helper_lh_₀(t⁹, 
//│ 							let _lh_listcomp_fun_ls_t¹⁴ = a⁴
//│ 							in let _lh_listcomp_fun_ls_h¹⁴ = h⁸
//│ 							in (fun _lh_alphabeticRule_LH_C_1¹¹ -> (fun _lh_listcomp_fun¹⁸ -> 
//│ 								let _lh_listcomp_fun¹⁹ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {
//│ 									LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)]
//│ 									| LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)})
//│ 								in _lh_listcomp_fun¹⁹(expand_lh_₀(_lh_alphabeticRule_LH_C_1¹¹)))))
//│ 						| LH_N  => a⁴}
//│ 		def constantRule_lh_₀(_lh_constantRule_arg1¹) = 
//│ 			case _lh_constantRule_arg1¹ of {
//│ 				LH_C _lh_constantRule_LH_C_0¹ _lh_constantRule_LH_C_1¹ => 
//│ 					let _lh_listcomp_fun¹⁰ = (fun _lh_listcomp_fun_para⁸ -> case _lh_listcomp_fun_para⁸ of {
//│ 						LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)]
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun¹⁰(expand_lh_₀(_lh_constantRule_LH_C_1¹))
//│ 				| _  => error⁰}
//│ 		def constantRule_lh_₁(_lh_constantRule_arg1²) = 
//│ 			case _lh_constantRule_arg1² of {
//│ 				LH_C _lh_constantRule_LH_C_0² _lh_constantRule_LH_C_1² => 
//│ 					let _lh_listcomp_fun¹⁵ = (fun _lh_listcomp_fun_para¹² -> case _lh_listcomp_fun_para¹² of {
//│ 						LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)]
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun¹⁵(expand_lh_₀(_lh_constantRule_LH_C_1²))
//│ 				| _  => error⁰}
//│ 		def numericRule_lh_₀(_lh_numericRule_arg1¹) = 
//│ 			let _lh_matchIdent⁴ = span_lh_₀((fun c³ -> polyNeq⁰(c³, '-')), _lh_numericRule_arg1¹)
//│ 			in case _lh_matchIdent⁴ of {
//│ 				LH_P2 _lh_numericRule_LH_P2_0³ _lh_numericRule_LH_P2_1³ => case _lh_numericRule_LH_P2_1³ of {
//│ 					LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => 
//│ 						let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ 						in case _lh_matchIdent⁵ of {
//│ 							LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {
//│ 								LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => 
//│ 									let _lh_matchIdent⁶ = 	
//│ 										let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ 										in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ 										in (fun _lh_numericRule_LH_C_1⁵ -> 
//│ 											let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ 											in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {
//│ 												LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => 
//│ 													let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {
//│ 														LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)]
//│ 														| LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ 													in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵))
//│ 												| LH_N  => [LH_N]})
//│ 											in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ 									in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴)
//│ 								| _  => error⁰}
//│ 							| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def enumFromThenTo_lh_₀(a⁵, t¹⁰, b³) = 
//│ 				if (a⁵ <= b³) then [LH_C a⁵ enumFromThenTo_lh_₀(t¹⁰, ((2 * t¹⁰) - a⁵), b³)] else [LH_N]
//│ 			def enumFromTo_lh_₂(a⁶, b⁴) = 
//│ 				if (a⁶ <= b⁴) then [LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b⁴)] else [LH_N]
//│ 			def length_lh_₀(ls⁵) = 
//│ 				case ls⁵ of {
//│ 					LH_C h⁶ t⁷ => (1 + length_lh_₀(t⁷))
//│ 					| LH_N  => 0}
//│ 			def length_lh_₁(ls⁹) = 
//│ 				case ls⁹ of {
//│ 					LH_C h¹⁰ t¹² => (1 + length_lh_₁(t¹²))
//│ 					| LH_N  => 0}
//│ 			def mappend_lh_₁(xs¹, ys¹) = 
//│ 				case xs¹ of {
//│ 					LH_C h⁵ t⁶ => [LH_C h⁵ mappend_lh_₁(t⁶, ys¹)]
//│ 					| LH_N  => ys¹}
//│ 			def max_lh_₀(_lh_max_arg1¹, _lh_max_arg2¹) = 
//│ 				if (_lh_max_arg1¹ > _lh_max_arg2¹) then _lh_max_arg1¹ else _lh_max_arg2¹
//│ 			def mknum_lh_₀(_lh_mknum_arg1¹) = 
//│ 				foldl_lh_₀((fun u¹ -> (fun c⁵ -> ((u¹ * 10) + (int_of_char⁰(c⁵) - int_of_char⁰('0'))))), 0, _lh_mknum_arg1¹)
//│ 				where
//│ 				def foldl_lh_₀(f¹³, i¹³, ls¹²) = 
//│ 					ls¹²(f¹³, i¹³)
//│ 			def mknum_lh_₁(_lh_mknum_arg1²) = 
//│ 				foldl_lh_₁((fun u² -> (fun c⁶ -> ((u² * 10) + (int_of_char⁰(c⁶) - int_of_char⁰('0'))))), 0, _lh_mknum_arg1²)
//│ 				where
//│ 				def foldl_lh_₁(f¹¹, i¹¹, ls¹⁰) = 
//│ 					ls¹⁰(f¹¹, i¹¹)
//│ 			def pad_lh_₀(_lh_pad_arg1¹, _lh_pad_arg2¹) = 
//│ 				mappend_lh_₂(
//│ 					let _lh_listcomp_fun²⁰ = (fun _lh_listcomp_fun_para¹⁶ -> case _lh_listcomp_fun_para¹⁶ of {
//│ 						LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t¹⁶ => [LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)]
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun²⁰(enumFromTo_lh_₃(1, (_lh_pad_arg2¹ - length_lh_₂(_lh_pad_arg1¹)))), _lh_pad_arg1¹)
//│ 				where
//│ 				def enumFromTo_lh_₃(a³, b²) = 
//│ 					if (a³ <= b²) then [LH_C a³ enumFromTo_lh_₃((a³ + 1), b²)] else [LH_N]
//│ 				def length_lh_₂(ls⁶) = 
//│ 					case ls⁶ of {
//│ 						LH_C h⁷ t⁸ => (1 + length_lh_₂(t⁸))
//│ 						| LH_N  => 0}
//│ 				def mappend_lh_₂(xs², ys²) = 
//│ 					case xs² of {
//│ 						LH_C h⁹ t¹¹ => [LH_C h⁹ mappend_lh_₂(t¹¹, ys²)]
//│ 						| LH_N  => ys²}
//│ 			def span_lh_₀(_lh_span_arg1¹, _lh_span_arg2¹) = 
//│ 				case _lh_span_arg2¹ of {
//│ 					LH_N  => [LH_P2 (fun f⁵ -> (fun i⁵ -> i⁵)) [LH_N]]
//│ 					| LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹ => if _lh_span_arg1¹(_lh_span_LH_C_0¹) then 
//│ 						let _lh_matchIdent⁷ = span_lh_₀(_lh_span_arg1¹, _lh_span_LH_C_1¹)
//│ 						in case _lh_matchIdent⁷ of {
//│ 							LH_P2 _lh_span_LH_P2_0¹ _lh_span_LH_P2_1¹ => [LH_P2 
//│ 								let t¹³ = _lh_span_LH_P2_0¹
//│ 								in let h¹¹ = _lh_span_LH_C_0¹
//│ 								in (fun f⁶ -> (fun i⁶ -> foldl_lh_₂(f⁶, f⁶(i⁶, h¹¹), t¹³))) _lh_span_LH_P2_1¹]
//│ 							| _  => error⁰} else [LH_P2 (fun f⁷ -> (fun i⁷ -> i⁷)) [LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹]]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl_lh_₂(f¹², i¹², ls¹¹) = 
//│ 					ls¹¹(f¹², i¹²)
//│ 			def span_lh_₁(_lh_span_arg1², _lh_span_arg2²) = 
//│ 				case _lh_span_arg2² of {
//│ 					LH_N  => [LH_P2 (fun f⁸ -> (fun i⁸ -> i⁸)) [LH_N]]
//│ 					| LH_C _lh_span_LH_C_0² _lh_span_LH_C_1² => if _lh_span_arg1²(_lh_span_LH_C_0²) then 
//│ 						let _lh_matchIdent⁸ = span_lh_₁(_lh_span_arg1², _lh_span_LH_C_1²)
//│ 						in case _lh_matchIdent⁸ of {
//│ 							LH_P2 _lh_span_LH_P2_0² _lh_span_LH_P2_1² => [LH_P2 
//│ 								let t¹⁴ = _lh_span_LH_P2_0²
//│ 								in let h¹² = _lh_span_LH_C_0²
//│ 								in (fun f⁹ -> (fun i⁹ -> foldl_lh_₃(f⁹, f⁹(i⁹, h¹²), t¹⁴))) _lh_span_LH_P2_1²]
//│ 							| _  => error⁰} else [LH_P2 (fun f¹⁰ -> (fun i¹⁰ -> i¹⁰)) [LH_C _lh_span_LH_C_0² _lh_span_LH_C_1²]]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl_lh_₃(f⁴, i⁴, ls⁸) = 
//│ 					ls⁸(f⁴, i⁴)
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸]: 548 --->
//│ 	DeadCodeCons
//│ 	case xs³ of {LH_C h¹³ t¹⁵ => [LH_C h¹³ mappend_lh_₀(t¹⁵, ys³)] | LH_N  => ys³}: 1212
//│ [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)]: 552 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_N]: 553 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰]: 586 --->
//│ 	DeadCodeCons
//│ 	case xs³ of {LH_C h¹³ t¹⁵ => [LH_C h¹³ mappend_lh_₀(t¹⁵, ys³)] | LH_N  => ys³}: 1212
//│ [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)]: 590 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_N]: 602 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_C h⁵ mappend_lh_₁(t⁶, ys¹)]: 668 --->
//│ 	DeadCodeCons
//│ 	case xs³ of {LH_C h¹³ t¹⁵ => [LH_C h¹³ mappend_lh_₀(t¹⁵, ys³)] | LH_N  => ys³}: 1212
//│ [LH_N]: 676 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹]: 696 --->
//│ 	DeadCodeCons
//│ 	case xs³ of {LH_C h¹³ t¹⁵ => [LH_C h¹³ mappend_lh_₀(t¹⁵, ys³)] | LH_N  => ys³}: 1212
//│ [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)]: 700 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_N]: 701 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_C a³ enumFromTo_lh_₃((a³ + 1), b²)]: 728 --->
//│ 	case _lh_listcomp_fun_para¹⁶ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t¹⁶ => [LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)] | LH_N  => [LH_N]}: 996
//│ [LH_N]: 729 --->
//│ 	case _lh_listcomp_fun_para¹⁶ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t¹⁶ => [LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)] | LH_N  => [LH_N]}: 996
//│ [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)]: 792 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_N]: 804 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵]: 873 --->
//│ 	DeadCodeCons
//│ 	case xs³ of {LH_C h¹³ t¹⁵ => [LH_C h¹³ mappend_lh_₀(t¹⁵, ys³)] | LH_N  => ys³}: 1212
//│ [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)]: 877 --->
//│ 	DeadCodeCons
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_C a⁵ enumFromThenTo_lh_₀(t¹⁰, ((2 * t¹⁰) - a⁵), b³)]: 953 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805
//│ [LH_N]: 954 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805
//│ [LH_C h⁹ mappend_lh_₂(t¹¹, ys²)]: 966 --->
//│ 	case xs¹ of {LH_C h⁵ t⁶ => [LH_C h⁵ mappend_lh_₁(t⁶, ys¹)] | LH_N  => ys¹}: 670
//│ [LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)]: 994 --->
//│ 	case xs² of {LH_C h⁹ t¹¹ => [LH_C h⁹ mappend_lh_₂(t¹¹, ys²)] | LH_N  => ys²}: 968
//│ [LH_N]: 995 --->
//│ 	case xs² of {LH_C h⁹ t¹¹ => [LH_C h⁹ mappend_lh_₂(t¹¹, ys²)] | LH_N  => ys²}: 968
//│ [LH_N]: 1018 --->
//│ 	DeadCodeCons
//│ 	case xs³ of {LH_C h¹³ t¹⁵ => [LH_C h¹³ mappend_lh_₀(t¹⁵, ys³)] | LH_N  => ys³}: 1212
//│ [LH_N]: 1019 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_C [LH_N] [LH_N]]: 1020 --->
//│ 	case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554
//│ 	case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594
//│ 	case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702
//│ 	case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796
//│ 	case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881
//│ 	case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224
//│ [LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b⁴)]: 1052 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805
//│ [LH_N]: 1053 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805
//│ [LH_N]: 1061 --->
//│ 	case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 846
//│ [LH_P2 (fun f⁵ -> (fun i⁵ -> i⁵)) [LH_N]]: 1062 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_numericRule_LH_P2_0³ _lh_numericRule_LH_P2_1³ => case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 848
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_span_LH_P2_0¹ _lh_span_LH_P2_1¹ => [LH_P2 let t¹³ = _lh_span_LH_P2_0¹
//│ in let h¹¹ = _lh_span_LH_C_0¹
//│ in (fun f⁶ -> (fun i⁶ -> foldl_lh_₂(f⁶, f⁶(i⁶, h¹¹), t¹³))) _lh_span_LH_P2_1¹] | _  => error⁰}: 1092
//│ [LH_P2 let t¹³ = _lh_span_LH_P2_0¹
//│ in let h¹¹ = _lh_span_LH_C_0¹
//│ in (fun f⁶ -> (fun i⁶ -> foldl_lh_₂(f⁶, f⁶(i⁶, h¹¹), t¹³))) _lh_span_LH_P2_1¹]: 1090 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_numericRule_LH_P2_0³ _lh_numericRule_LH_P2_1³ => case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 848
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_span_LH_P2_0¹ _lh_span_LH_P2_1¹ => [LH_P2 let t¹³ = _lh_span_LH_P2_0¹
//│ in let h¹¹ = _lh_span_LH_C_0¹
//│ in (fun f⁶ -> (fun i⁶ -> foldl_lh_₂(f⁶, f⁶(i⁶, h¹¹), t¹³))) _lh_span_LH_P2_1¹] | _  => error⁰}: 1092
//│ [LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹]: 1099 --->
//│ 	case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 846
//│ [LH_P2 (fun f⁷ -> (fun i⁷ -> i⁷)) [LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹]]: 1100 --->
//│ 	case _lh_matchIdent⁴ of {LH_P2 _lh_numericRule_LH_P2_0³ _lh_numericRule_LH_P2_1³ => case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 848
//│ 	case _lh_matchIdent⁷ of {LH_P2 _lh_span_LH_P2_0¹ _lh_span_LH_P2_1¹ => [LH_P2 let t¹³ = _lh_span_LH_P2_0¹
//│ in let h¹¹ = _lh_span_LH_C_0¹
//│ in (fun f⁶ -> (fun i⁶ -> foldl_lh_₂(f⁶, f⁶(i⁶, h¹¹), t¹³))) _lh_span_LH_P2_1¹] | _  => error⁰}: 1092
//│ [LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁵)]: 1121 --->
//│ 	case ls⁷ of {LH_C h⁸ t⁹ => reverse_helper_lh_₀(t⁹, let _lh_listcomp_fun_ls_t¹⁴ = a⁴
//│ in let _lh_listcomp_fun_ls_h¹⁴ = h⁸
//│ in (fun _lh_alphabeticRule_LH_C_1¹¹ -> (fun _lh_listcomp_fun¹⁸ -> let _lh_listcomp_fun¹⁹ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)})
//│ in _lh_listcomp_fun¹⁹(expand_lh_₀(_lh_alphabeticRule_LH_C_1¹¹))))) | LH_N  => a⁴}: 895
//│ [LH_N]: 1122 --->
//│ 	case ls⁷ of {LH_C h⁸ t⁹ => reverse_helper_lh_₀(t⁹, let _lh_listcomp_fun_ls_t¹⁴ = a⁴
//│ in let _lh_listcomp_fun_ls_h¹⁴ = h⁸
//│ in (fun _lh_alphabeticRule_LH_C_1¹¹ -> (fun _lh_listcomp_fun¹⁸ -> let _lh_listcomp_fun¹⁹ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)})
//│ in _lh_listcomp_fun¹⁹(expand_lh_₀(_lh_alphabeticRule_LH_C_1¹¹))))) | LH_N  => a⁴}: 895
//│ [LH_C a⁸ enumFromTo_lh_₀((a⁸ + 1), b⁶)]: 1141 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹²(expand_lh_₀(_lh_alphabeticRule_LH_C_1⁹)) | LH_N  => [LH_N]}: 603
//│ [LH_N]: 1142 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹²(expand_lh_₀(_lh_alphabeticRule_LH_C_1⁹)) | LH_N  => [LH_N]}: 603
//│ [LH_N]: 1150 --->
//│ 	case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰}: 841
//│ [LH_P2 (fun f⁸ -> (fun i⁸ -> i⁸)) [LH_N]]: 1151 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰}: 843
//│ 	case _lh_matchIdent⁸ of {LH_P2 _lh_span_LH_P2_0² _lh_span_LH_P2_1² => [LH_P2 let t¹⁴ = _lh_span_LH_P2_0²
//│ in let h¹² = _lh_span_LH_C_0²
//│ in (fun f⁹ -> (fun i⁹ -> foldl_lh_₃(f⁹, f⁹(i⁹, h¹²), t¹⁴))) _lh_span_LH_P2_1²] | _  => error⁰}: 1181
//│ [LH_P2 let t¹⁴ = _lh_span_LH_P2_0²
//│ in let h¹² = _lh_span_LH_C_0²
//│ in (fun f⁹ -> (fun i⁹ -> foldl_lh_₃(f⁹, f⁹(i⁹, h¹²), t¹⁴))) _lh_span_LH_P2_1²]: 1179 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰}: 843
//│ 	case _lh_matchIdent⁸ of {LH_P2 _lh_span_LH_P2_0² _lh_span_LH_P2_1² => [LH_P2 let t¹⁴ = _lh_span_LH_P2_0²
//│ in let h¹² = _lh_span_LH_C_0²
//│ in (fun f⁹ -> (fun i⁹ -> foldl_lh_₃(f⁹, f⁹(i⁹, h¹²), t¹⁴))) _lh_span_LH_P2_1²] | _  => error⁰}: 1181
//│ [LH_C _lh_span_LH_C_0² _lh_span_LH_C_1²]: 1188 --->
//│ 	case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰}: 841
//│ [LH_P2 (fun f¹⁰ -> (fun i¹⁰ -> i¹⁰)) [LH_C _lh_span_LH_C_0² _lh_span_LH_C_1²]]: 1189 --->
//│ 	case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰}: 843
//│ 	case _lh_matchIdent⁸ of {LH_P2 _lh_span_LH_P2_0² _lh_span_LH_P2_1² => [LH_P2 let t¹⁴ = _lh_span_LH_P2_0²
//│ in let h¹² = _lh_span_LH_C_0²
//│ in (fun f⁹ -> (fun i⁹ -> foldl_lh_₃(f⁹, f⁹(i⁹, h¹²), t¹⁴))) _lh_span_LH_P2_1²] | _  => error⁰}: 1181
//│ ------------------
//│ case _lh_listcomp_fun_para⁸ of {LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)] | LH_N  => [LH_N]}: 554 --->
//│ 	DeadCodeProd
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)]: 552
//│ 	[LH_N]: 553
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)]: 590
//│ 	[LH_N]: 602
//│ 	[LH_N]: 676
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)]: 700
//│ 	[LH_N]: 701
//│ 	[LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)]: 792
//│ 	[LH_N]: 804
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)]: 877
//│ 	[LH_N]: 1019
//│ 	[LH_C [LH_N] [LH_N]]: 1020
//│ case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)}: 594 --->
//│ 	DeadCodeProd
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)]: 552
//│ 	[LH_N]: 553
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)]: 590
//│ 	[LH_N]: 602
//│ 	[LH_N]: 676
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)]: 700
//│ 	[LH_N]: 701
//│ 	[LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)]: 792
//│ 	[LH_N]: 804
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)]: 877
//│ 	[LH_N]: 1019
//│ 	[LH_C [LH_N] [LH_N]]: 1020
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹²(expand_lh_₀(_lh_alphabeticRule_LH_C_1⁹)) | LH_N  => [LH_N]}: 603 --->
//│ 	[LH_C a⁸ enumFromTo_lh_₀((a⁸ + 1), b⁶)]: 1141
//│ 	[LH_N]: 1142
//│ case xs¹ of {LH_C h⁵ t⁶ => [LH_C h⁵ mappend_lh_₁(t⁶, ys¹)] | LH_N  => ys¹}: 670 --->
//│ 	NoProd
//│ 	[LH_C h⁹ mappend_lh_₂(t¹¹, ys²)]: 966
//│ case _lh_listcomp_fun_para¹² of {LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)] | LH_N  => [LH_N]}: 702 --->
//│ 	DeadCodeProd
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)]: 552
//│ 	[LH_N]: 553
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)]: 590
//│ 	[LH_N]: 602
//│ 	[LH_N]: 676
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)]: 700
//│ 	[LH_N]: 701
//│ 	[LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)]: 792
//│ 	[LH_N]: 804
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)]: 877
//│ 	[LH_N]: 1019
//│ 	[LH_C [LH_N] [LH_N]]: 1020
//│ case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)}: 796 --->
//│ 	DeadCodeProd
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)]: 552
//│ 	[LH_N]: 553
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)]: 590
//│ 	[LH_N]: 602
//│ 	[LH_N]: 676
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)]: 700
//│ 	[LH_N]: 701
//│ 	[LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)]: 792
//│ 	[LH_N]: 804
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)]: 877
//│ 	[LH_N]: 1019
//│ 	[LH_C [LH_N] [LH_N]]: 1020
//│ case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805 --->
//│ 	[LH_C a⁵ enumFromThenTo_lh_₀(t¹⁰, ((2 * t¹⁰) - a⁵), b³)]: 953
//│ 	[LH_N]: 954
//│ 	[LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b⁴)]: 1052
//│ 	[LH_N]: 1053
//│ case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰}: 841 --->
//│ 	[LH_N]: 1150
//│ 	[LH_C _lh_span_LH_C_0² _lh_span_LH_C_1²]: 1188
//│ case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰}: 843 --->
//│ 	[LH_P2 (fun f⁸ -> (fun i⁸ -> i⁸)) [LH_N]]: 1151
//│ 	[LH_P2 let t¹⁴ = _lh_span_LH_P2_0²
//│ in let h¹² = _lh_span_LH_C_0²
//│ in (fun f⁹ -> (fun i⁹ -> foldl_lh_₃(f⁹, f⁹(i⁹, h¹²), t¹⁴))) _lh_span_LH_P2_1²]: 1179
//│ 	[LH_P2 (fun f¹⁰ -> (fun i¹⁰ -> i¹⁰)) [LH_C _lh_span_LH_C_0² _lh_span_LH_C_1²]]: 1189
//│ case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 846 --->
//│ 	[LH_N]: 1061
//│ 	[LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹]: 1099
//│ case _lh_matchIdent⁴ of {LH_P2 _lh_numericRule_LH_P2_0³ _lh_numericRule_LH_P2_1³ => case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰} | _  => error⁰}: 848 --->
//│ 	[LH_P2 (fun f⁵ -> (fun i⁵ -> i⁵)) [LH_N]]: 1062
//│ 	[LH_P2 let t¹³ = _lh_span_LH_P2_0¹
//│ in let h¹¹ = _lh_span_LH_C_0¹
//│ in (fun f⁶ -> (fun i⁶ -> foldl_lh_₂(f⁶, f⁶(i⁶, h¹¹), t¹³))) _lh_span_LH_P2_1¹]: 1090
//│ 	[LH_P2 (fun f⁷ -> (fun i⁷ -> i⁷)) [LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹]]: 1100
//│ case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)}: 881 --->
//│ 	DeadCodeProd
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)]: 552
//│ 	[LH_N]: 553
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)]: 590
//│ 	[LH_N]: 602
//│ 	[LH_N]: 676
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)]: 700
//│ 	[LH_N]: 701
//│ 	[LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)]: 792
//│ 	[LH_N]: 804
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)]: 877
//│ 	[LH_N]: 1019
//│ 	[LH_C [LH_N] [LH_N]]: 1020
//│ case ls⁷ of {LH_C h⁸ t⁹ => reverse_helper_lh_₀(t⁹, let _lh_listcomp_fun_ls_t¹⁴ = a⁴
//│ in let _lh_listcomp_fun_ls_h¹⁴ = h⁸
//│ in (fun _lh_alphabeticRule_LH_C_1¹¹ -> (fun _lh_listcomp_fun¹⁸ -> let _lh_listcomp_fun¹⁹ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)})
//│ in _lh_listcomp_fun¹⁹(expand_lh_₀(_lh_alphabeticRule_LH_C_1¹¹))))) | LH_N  => a⁴}: 895 --->
//│ 	[LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁵)]: 1121
//│ 	[LH_N]: 1122
//│ case xs² of {LH_C h⁹ t¹¹ => [LH_C h⁹ mappend_lh_₂(t¹¹, ys²)] | LH_N  => ys²}: 968 --->
//│ 	[LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)]: 994
//│ 	[LH_N]: 995
//│ case _lh_listcomp_fun_para¹⁶ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t¹⁶ => [LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)] | LH_N  => [LH_N]}: 996 --->
//│ 	[LH_C a³ enumFromTo_lh_₃((a³ + 1), b²)]: 728
//│ 	[LH_N]: 729
//│ case _lh_matchIdent⁷ of {LH_P2 _lh_span_LH_P2_0¹ _lh_span_LH_P2_1¹ => [LH_P2 let t¹³ = _lh_span_LH_P2_0¹
//│ in let h¹¹ = _lh_span_LH_C_0¹
//│ in (fun f⁶ -> (fun i⁶ -> foldl_lh_₂(f⁶, f⁶(i⁶, h¹¹), t¹³))) _lh_span_LH_P2_1¹] | _  => error⁰}: 1092 --->
//│ 	[LH_P2 (fun f⁵ -> (fun i⁵ -> i⁵)) [LH_N]]: 1062
//│ 	[LH_P2 let t¹³ = _lh_span_LH_P2_0¹
//│ in let h¹¹ = _lh_span_LH_C_0¹
//│ in (fun f⁶ -> (fun i⁶ -> foldl_lh_₂(f⁶, f⁶(i⁶, h¹¹), t¹³))) _lh_span_LH_P2_1¹]: 1090
//│ 	[LH_P2 (fun f⁷ -> (fun i⁷ -> i⁷)) [LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹]]: 1100
//│ case _lh_matchIdent⁸ of {LH_P2 _lh_span_LH_P2_0² _lh_span_LH_P2_1² => [LH_P2 let t¹⁴ = _lh_span_LH_P2_0²
//│ in let h¹² = _lh_span_LH_C_0²
//│ in (fun f⁹ -> (fun i⁹ -> foldl_lh_₃(f⁹, f⁹(i⁹, h¹²), t¹⁴))) _lh_span_LH_P2_1²] | _  => error⁰}: 1181 --->
//│ 	[LH_P2 (fun f⁸ -> (fun i⁸ -> i⁸)) [LH_N]]: 1151
//│ 	[LH_P2 let t¹⁴ = _lh_span_LH_P2_0²
//│ in let h¹² = _lh_span_LH_C_0²
//│ in (fun f⁹ -> (fun i⁹ -> foldl_lh_₃(f⁹, f⁹(i⁹, h¹²), t¹⁴))) _lh_span_LH_P2_1²]: 1179
//│ 	[LH_P2 (fun f¹⁰ -> (fun i¹⁰ -> i¹⁰)) [LH_C _lh_span_LH_C_0² _lh_span_LH_C_1²]]: 1189
//│ case xs³ of {LH_C h¹³ t¹⁵ => [LH_C h¹³ mappend_lh_₀(t¹⁵, ys³)] | LH_N  => ys³}: 1212 --->
//│ 	DeadCodeProd
//│ 	[LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸]: 548
//│ 	[LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰]: 586
//│ 	[LH_C h⁵ mappend_lh_₁(t⁶, ys¹)]: 668
//│ 	[LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹]: 696
//│ 	[LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵]: 873
//│ 	[LH_N]: 1018
//│ case lss¹ of {LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶)) | LH_N  => [LH_N]}: 1224 --->
//│ 	DeadCodeProd
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun¹⁰(_lh_listcomp_fun_ls_t⁸)]: 552
//│ 	[LH_N]: 553
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)]: 590
//│ 	[LH_N]: 602
//│ 	[LH_N]: 676
//│ 	[LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun¹⁵(_lh_listcomp_fun_ls_t¹¹)]: 700
//│ 	[LH_N]: 701
//│ 	[LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)]: 792
//│ 	[LH_N]: 804
//│ 	[LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)]: 877
//│ 	[LH_N]: 1019
//│ 	[LH_C [LH_N] [LH_N]]: 1020
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [LH_C a³ enumFromTo_lh_₃((a³ + 1), b²)]: 728 --->
//│ 	case _lh_listcomp_fun_para¹⁶ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t¹⁶ => [LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)] | LH_N  => [LH_N]}: 996
//│ [LH_N]: 729 --->
//│ 	case _lh_listcomp_fun_para¹⁶ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t¹⁶ => [LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)] | LH_N  => [LH_N]}: 996
//│ [LH_C a⁵ enumFromThenTo_lh_₀(t¹⁰, ((2 * t¹⁰) - a⁵), b³)]: 953 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805
//│ [LH_N]: 954 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805
//│ [LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)]: 994 --->
//│ 	case xs² of {LH_C h⁹ t¹¹ => [LH_C h⁹ mappend_lh_₂(t¹¹, ys²)] | LH_N  => ys²}: 968
//│ [LH_N]: 995 --->
//│ 	case xs² of {LH_C h⁹ t¹¹ => [LH_C h⁹ mappend_lh_₂(t¹¹, ys²)] | LH_N  => ys²}: 968
//│ [LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b⁴)]: 1052 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805
//│ [LH_N]: 1053 --->
//│ 	case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805
//│ [LH_N]: 1061 --->
//│ 	case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 846
//│ [LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹]: 1099 --->
//│ 	case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 846
//│ [LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁵)]: 1121 --->
//│ 	case ls⁷ of {LH_C h⁸ t⁹ => reverse_helper_lh_₀(t⁹, let _lh_listcomp_fun_ls_t¹⁴ = a⁴
//│ in let _lh_listcomp_fun_ls_h¹⁴ = h⁸
//│ in (fun _lh_alphabeticRule_LH_C_1¹¹ -> (fun _lh_listcomp_fun¹⁸ -> let _lh_listcomp_fun¹⁹ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)})
//│ in _lh_listcomp_fun¹⁹(expand_lh_₀(_lh_alphabeticRule_LH_C_1¹¹))))) | LH_N  => a⁴}: 895
//│ [LH_N]: 1122 --->
//│ 	case ls⁷ of {LH_C h⁸ t⁹ => reverse_helper_lh_₀(t⁹, let _lh_listcomp_fun_ls_t¹⁴ = a⁴
//│ in let _lh_listcomp_fun_ls_h¹⁴ = h⁸
//│ in (fun _lh_alphabeticRule_LH_C_1¹¹ -> (fun _lh_listcomp_fun¹⁸ -> let _lh_listcomp_fun¹⁹ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)})
//│ in _lh_listcomp_fun¹⁹(expand_lh_₀(_lh_alphabeticRule_LH_C_1¹¹))))) | LH_N  => a⁴}: 895
//│ [LH_C a⁸ enumFromTo_lh_₀((a⁸ + 1), b⁶)]: 1141 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹²(expand_lh_₀(_lh_alphabeticRule_LH_C_1⁹)) | LH_N  => [LH_N]}: 603
//│ [LH_N]: 1142 --->
//│ 	case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹²(expand_lh_₀(_lh_alphabeticRule_LH_C_1⁹)) | LH_N  => [LH_N]}: 603
//│ [LH_N]: 1150 --->
//│ 	case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰}: 841
//│ [LH_C _lh_span_LH_C_0² _lh_span_LH_C_1²]: 1188 --->
//│ 	case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰}: 841
//│ ------------------
//│ case _lh_listcomp_fun_para⁹ of {LH_C _lh_listcomp_fun_ls_h⁹ _lh_listcomp_fun_ls_t⁹ => let _lh_listcomp_fun¹² = (fun _lh_listcomp_fun_para¹⁰ -> case _lh_listcomp_fun_para¹⁰ of {LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h⁹) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun¹²(_lh_listcomp_fun_ls_t¹⁰)] | LH_N  => _lh_listcomp_fun¹¹(_lh_listcomp_fun_ls_t⁹)})
//│ in _lh_listcomp_fun¹²(expand_lh_₀(_lh_alphabeticRule_LH_C_1⁹)) | LH_N  => [LH_N]}: 603 --->
//│ 	[LH_C a⁸ enumFromTo_lh_₀((a⁸ + 1), b⁶)]: 1141
//│ 	[LH_N]: 1142
//│ case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]}: 805 --->
//│ 	[LH_C a⁵ enumFromThenTo_lh_₀(t¹⁰, ((2 * t¹⁰) - a⁵), b³)]: 953
//│ 	[LH_N]: 954
//│ 	[LH_C a⁶ enumFromTo_lh_₂((a⁶ + 1), b⁴)]: 1052
//│ 	[LH_N]: 1053
//│ case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰}: 841 --->
//│ 	[LH_N]: 1150
//│ 	[LH_C _lh_span_LH_C_0² _lh_span_LH_C_1²]: 1188
//│ case _lh_numericRule_LH_P2_1³ of {LH_C _lh_numericRule_LH_C_0² _lh_numericRule_LH_C_1³ => let _lh_matchIdent⁵ = span_lh_₁((fun c⁴ -> polyNeq⁰(c⁴, '>')), _lh_numericRule_LH_C_1³)
//│ in case _lh_matchIdent⁵ of {LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => case _lh_numericRule_LH_P2_1⁴ of {LH_C _lh_numericRule_LH_C_0³ _lh_numericRule_LH_C_1⁴ => let _lh_matchIdent⁶ = let _lh_numericRule_LH_P2_1⁵ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁴)
//│ in let _lh_numericRule_LH_P2_0⁵ = mknum_lh_₁(_lh_numericRule_LH_P2_0³)
//│ in (fun _lh_numericRule_LH_C_1⁵ -> let width¹ = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0⁵)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁵)))
//│ in let _lh_listcomp_fun¹⁶ = (fun _lh_listcomp_fun_para¹³ -> case _lh_listcomp_fun_para¹³ of {LH_C _lh_listcomp_fun_ls_h¹² _lh_listcomp_fun_ls_t¹² => let _lh_listcomp_fun¹⁷ = (fun _lh_listcomp_fun_para¹⁴ -> case _lh_listcomp_fun_para¹⁴ of {LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹²), width¹), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun¹⁷(_lh_listcomp_fun_ls_t¹³)] | LH_N  => _lh_listcomp_fun¹⁶(_lh_listcomp_fun_ls_t¹²)})
//│ in _lh_listcomp_fun¹⁷(expand_lh_₀(_lh_numericRule_LH_C_1⁵)) | LH_N  => [LH_N]})
//│ in _lh_listcomp_fun¹⁶(if (_lh_numericRule_LH_P2_0⁵ < _lh_numericRule_LH_P2_1⁵) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0⁵, _lh_numericRule_LH_P2_1⁵) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0⁵, (_lh_numericRule_LH_P2_0⁵ - 1), _lh_numericRule_LH_P2_1⁵)))
//│ in _lh_matchIdent⁶(_lh_numericRule_LH_C_1⁴) | _  => error⁰} | _  => error⁰} | _  => error⁰}: 846 --->
//│ 	[LH_N]: 1061
//│ 	[LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹]: 1099
//│ case ls⁷ of {LH_C h⁸ t⁹ => reverse_helper_lh_₀(t⁹, let _lh_listcomp_fun_ls_t¹⁴ = a⁴
//│ in let _lh_listcomp_fun_ls_h¹⁴ = h⁸
//│ in (fun _lh_alphabeticRule_LH_C_1¹¹ -> (fun _lh_listcomp_fun¹⁸ -> let _lh_listcomp_fun¹⁹ = (fun _lh_listcomp_fun_para¹⁵ -> case _lh_listcomp_fun_para¹⁵ of {LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁴) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun¹⁹(_lh_listcomp_fun_ls_t¹⁵)] | LH_N  => _lh_listcomp_fun¹⁸(_lh_listcomp_fun_ls_t¹⁴)})
//│ in _lh_listcomp_fun¹⁹(expand_lh_₀(_lh_alphabeticRule_LH_C_1¹¹))))) | LH_N  => a⁴}: 895 --->
//│ 	[LH_C a⁷ enumFromTo_lh_₁((a⁷ + 1), b⁵)]: 1121
//│ 	[LH_N]: 1122
//│ case xs² of {LH_C h⁹ t¹¹ => [LH_C h⁹ mappend_lh_₂(t¹¹, ys²)] | LH_N  => ys²}: 968 --->
//│ 	[LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)]: 994
//│ 	[LH_N]: 995
//│ case _lh_listcomp_fun_para¹⁶ of {LH_C _lh_listcomp_fun_ls_h¹⁶ _lh_listcomp_fun_ls_t¹⁶ => [LH_C '0' _lh_listcomp_fun²⁰(_lh_listcomp_fun_ls_t¹⁶)] | LH_N  => [LH_N]}: 996 --->
//│ 	[LH_C a³ enumFromTo_lh_₃((a³ + 1), b²)]: 728
//│ 	[LH_N]: 729
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ testGenRegexs_nofib_lh_₀(primId⁰([LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C 'a' [LH_C '-' [LH_C 'j' [LH_C ']' [LH_C '[' [LH_C '0' [LH_C '-' [LH_C '9' [LH_C ']' [LH_N]]]]]]]]]]]]]]]]]]]]]))
//│ def testGenRegexs_nofib_lh_₀(_lh_testGenRegexs_nofib_arg1²) = 
//│ 	concat_lh_₀(expand_lh_₀(_lh_testGenRegexs_nofib_arg1²))
//│ 	where
//│ 	def concat_lh_₀(lss²) = 
//│ 		case lss² of {
//│ 			LH_C h¹⁴ t¹⁶ => mappend_lh_₀(h¹⁴, concat_lh_₀(t¹⁶))
//│ 			| LH_N  => [LH_N]}
//│ 		where
//│ 		def mappend_lh_₀(xs⁵, ys⁷) = 
//│ 			case xs⁵ of {
//│ 				LH_C h¹³ t¹⁵ => [LH_C h¹³ mappend_lh_₀(t¹⁵, ys⁷)]
//│ 				| LH_N  => ys⁷}
//│ 	def expand_lh_₀(_lh_expand_arg1²) = 
//│ 		case _lh_expand_arg1² of {
//│ 			LH_N  => [LH_C [LH_N] [LH_N]]
//│ 			| LH_C _lh_expand_LH_C_0¹ _lh_expand_LH_C_1¹ => case _lh_expand_LH_C_0¹ of {
//│ 				'<'  => numericRule_lh_₀(_lh_expand_LH_C_1¹)
//│ 				| '['  => alphabeticRule_lh_₀(_lh_expand_LH_C_1¹)
//│ 				| _  => constantRule_lh_₀(_lh_expand_arg1²)}
//│ 			| _  => constantRule_lh_₁(_lh_expand_arg1²)}
//│ 		where
//│ 		def alphabeticRule_lh_₀(_lh_alphabeticRule_arg1²) = 
//│ 			case _lh_alphabeticRule_arg1² of {
//│ 				LH_C _lh_alphabeticRule_LH_C_0⁴ _lh_alphabeticRule_LH_C_1⁶ => case _lh_alphabeticRule_LH_C_1⁶ of {
//│ 					LH_C _lh_alphabeticRule_LH_C_0⁵ _lh_alphabeticRule_LH_C_1⁷ => case _lh_alphabeticRule_LH_C_0⁵ of {
//│ 						'-'  => case _lh_alphabeticRule_LH_C_1⁷ of {
//│ 							LH_C _lh_alphabeticRule_LH_C_0⁶ _lh_alphabeticRule_LH_C_1⁸ => case _lh_alphabeticRule_LH_C_1⁸ of {
//│ 								LH_C _lh_alphabeticRule_LH_C_0⁷ _lh_alphabeticRule_LH_C_1⁹ => case _lh_alphabeticRule_LH_C_0⁷ of {
//│ 									']'  => if (int_of_char⁰(_lh_alphabeticRule_LH_C_0⁴) <= int_of_char⁰(_lh_alphabeticRule_LH_C_0⁶)) then 
//│ 										let _lh_listcomp_fun³¹ = (fun _lh_listcomp_fun_para²² -> _lh_listcomp_fun_para²²(_lh_alphabeticRule_LH_C_1⁹, _lh_listcomp_fun³¹))
//│ 										in _lh_listcomp_fun³¹(enumFromTo_lh_₀(int_of_char⁰(_lh_alphabeticRule_LH_C_0⁴), int_of_char⁰(_lh_alphabeticRule_LH_C_0⁶))) else 
//│ 										let _lh_listcomp_fun³² = (fun _lh_listcomp_fun_para²³ -> _lh_listcomp_fun_para²³(_lh_alphabeticRule_LH_C_1⁹, _lh_listcomp_fun³²))
//│ 										in _lh_listcomp_fun³²(reverse_lh_₀(enumFromTo_lh_₁(int_of_char⁰(_lh_alphabeticRule_LH_C_0⁶), int_of_char⁰(_lh_alphabeticRule_LH_C_0⁴))))
//│ 									| _  => error⁰}
//│ 								| _  => error⁰}
//│ 							| _  => error⁰}
//│ 						| _  => error⁰}
//│ 					| _  => error⁰}
//│ 				| _  => error⁰}
//│ 			where
//│ 			def enumFromTo_lh_₀(a¹⁶, b¹¹) = 
//│ 				if (a¹⁶ <= b¹¹) then 
//│ 					let _lh_listcomp_fun_ls_t²¹ = enumFromTo_lh_₀((a¹⁶ + 1), b¹¹)
//│ 					in let _lh_listcomp_fun_ls_h²⁰ = a¹⁶
//│ 					in (fun _lh_alphabeticRule_LH_C_1¹³ -> (fun _lh_listcomp_fun³⁶ -> 
//│ 						let _lh_listcomp_fun³⁷ = (fun _lh_listcomp_fun_para²⁵ -> case _lh_listcomp_fun_para²⁵ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹⁰ _lh_listcomp_fun_ls_t¹⁰ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h²⁰) _lh_listcomp_fun_ls_h¹⁰] _lh_listcomp_fun³⁷(_lh_listcomp_fun_ls_t¹⁰)]
//│ 							| LH_N  => _lh_listcomp_fun³⁶(_lh_listcomp_fun_ls_t²¹)})
//│ 						in _lh_listcomp_fun³⁷(expand_lh_₀(_lh_alphabeticRule_LH_C_1¹³)))) else (fun _lh_alphabeticRule_LH_C_1¹⁴ -> (fun _lh_listcomp_fun³⁸ -> [LH_N]))
//│ 			def enumFromTo_lh_₁(a⁹, b⁷) = 
//│ 				if (a⁹ <= b⁷) then 
//│ 					let t¹⁷ = enumFromTo_lh_₁((a⁹ + 1), b⁷)
//│ 					in let h¹⁵ = a⁹
//│ 					in (fun a¹⁰ -> reverse_helper_lh_₀(t¹⁷, 
//│ 						let _lh_listcomp_fun_ls_t¹⁷ = a¹⁰
//│ 						in let _lh_listcomp_fun_ls_h¹⁷ = h¹⁵
//│ 						in (fun _lh_alphabeticRule_LH_C_1¹² -> (fun _lh_listcomp_fun²¹ -> 
//│ 							let _lh_listcomp_fun²² = (fun _lh_listcomp_fun_para¹⁷ -> case _lh_listcomp_fun_para¹⁷ of {
//│ 								LH_C _lh_listcomp_fun_ls_h¹⁵ _lh_listcomp_fun_ls_t¹⁵ => [LH_C [LH_C char_of_int⁰(_lh_listcomp_fun_ls_h¹⁷) _lh_listcomp_fun_ls_h¹⁵] _lh_listcomp_fun²²(_lh_listcomp_fun_ls_t¹⁵)]
//│ 								| LH_N  => _lh_listcomp_fun²¹(_lh_listcomp_fun_ls_t¹⁷)})
//│ 							in _lh_listcomp_fun²²(expand_lh_₀(_lh_alphabeticRule_LH_C_1¹²)))))) else (fun a¹¹ -> a¹¹)
//│ 			def reverse_lh_₀(ls²⁰) = 
//│ 				reverse_helper_lh_₀(ls²⁰, (fun _lh_alphabeticRule_LH_C_1¹⁵ -> (fun _lh_listcomp_fun³⁹ -> [LH_N])))
//│ 				where
//│ 				def reverse_helper_lh_₀(ls¹⁷, a¹³) = 
//│ 					ls¹⁷(a¹³)
//│ 		def constantRule_lh_₀(_lh_constantRule_arg1³) = 
//│ 			case _lh_constantRule_arg1³ of {
//│ 				LH_C _lh_constantRule_LH_C_0¹ _lh_constantRule_LH_C_1¹ => 
//│ 					let _lh_listcomp_fun²⁵ = (fun _lh_listcomp_fun_para¹⁸ -> case _lh_listcomp_fun_para¹⁸ of {
//│ 						LH_C _lh_listcomp_fun_ls_h⁸ _lh_listcomp_fun_ls_t⁸ => [LH_C [LH_C _lh_constantRule_LH_C_0¹ _lh_listcomp_fun_ls_h⁸] _lh_listcomp_fun²⁵(_lh_listcomp_fun_ls_t⁸)]
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun²⁵(expand_lh_₀(_lh_constantRule_LH_C_1¹))
//│ 				| _  => error⁰}
//│ 		def constantRule_lh_₁(_lh_constantRule_arg1⁴) = 
//│ 			case _lh_constantRule_arg1⁴ of {
//│ 				LH_C _lh_constantRule_LH_C_0² _lh_constantRule_LH_C_1² => 
//│ 					let _lh_listcomp_fun⁴⁰ = (fun _lh_listcomp_fun_para²⁶ -> case _lh_listcomp_fun_para²⁶ of {
//│ 						LH_C _lh_listcomp_fun_ls_h¹¹ _lh_listcomp_fun_ls_t¹¹ => [LH_C [LH_C _lh_constantRule_LH_C_0² _lh_listcomp_fun_ls_h¹¹] _lh_listcomp_fun⁴⁰(_lh_listcomp_fun_ls_t¹¹)]
//│ 						| LH_N  => [LH_N]})
//│ 					in _lh_listcomp_fun⁴⁰(expand_lh_₀(_lh_constantRule_LH_C_1²))
//│ 				| _  => error⁰}
//│ 		def numericRule_lh_₀(_lh_numericRule_arg1²) = 
//│ 			let _lh_matchIdent¹³ = span_lh_₀((fun c¹⁰ -> polyNeq⁰(c¹⁰, '-')), _lh_numericRule_arg1²)
//│ 			in case _lh_matchIdent¹³ of {
//│ 				LH_P2 _lh_numericRule_LH_P2_0³ _lh_numericRule_LH_P2_1³ => _lh_numericRule_LH_P2_1³(_lh_numericRule_LH_P2_0³)
//│ 				| _  => error⁰}
//│ 			where
//│ 			def enumFromThenTo_lh_₀(a¹⁴, t²¹, b⁹) = 
//│ 				if (a¹⁴ <= b⁹) then 
//│ 					let _lh_listcomp_fun_ls_t¹⁹ = enumFromThenTo_lh_₀(t²¹, ((2 * t²¹) - a¹⁴), b⁹)
//│ 					in let _lh_listcomp_fun_ls_h¹⁸ = a¹⁴
//│ 					in (fun _lh_listcomp_fun²⁸ -> (fun _lh_numericRule_LH_C_1⁹ -> (fun width³ -> 
//│ 						let _lh_listcomp_fun²⁹ = (fun _lh_listcomp_fun_para²¹ -> case _lh_listcomp_fun_para²¹ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹⁸), width³), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun²⁹(_lh_listcomp_fun_ls_t¹³)]
//│ 							| LH_N  => _lh_listcomp_fun²⁸(_lh_listcomp_fun_ls_t¹⁹)})
//│ 						in _lh_listcomp_fun²⁹(expand_lh_₀(_lh_numericRule_LH_C_1⁹))))) else (fun _lh_listcomp_fun³⁰ -> (fun _lh_numericRule_LH_C_1¹⁰ -> (fun width⁴ -> [LH_N])))
//│ 			def enumFromTo_lh_₂(a¹⁵, b¹⁰) = 
//│ 				if (a¹⁵ <= b¹⁰) then 
//│ 					let _lh_listcomp_fun_ls_t²⁰ = enumFromTo_lh_₂((a¹⁵ + 1), b¹⁰)
//│ 					in let _lh_listcomp_fun_ls_h¹⁹ = a¹⁵
//│ 					in (fun _lh_listcomp_fun³³ -> (fun _lh_numericRule_LH_C_1¹¹ -> (fun width⁵ -> 
//│ 						let _lh_listcomp_fun³⁴ = (fun _lh_listcomp_fun_para²⁴ -> case _lh_listcomp_fun_para²⁴ of {
//│ 							LH_C _lh_listcomp_fun_ls_h¹³ _lh_listcomp_fun_ls_t¹³ => [LH_C mappend_lh_₁(pad_lh_₀(string_of_int⁰(_lh_listcomp_fun_ls_h¹⁹), width⁵), _lh_listcomp_fun_ls_h¹³) _lh_listcomp_fun³⁴(_lh_listcomp_fun_ls_t¹³)]
//│ 							| LH_N  => _lh_listcomp_fun³³(_lh_listcomp_fun_ls_t²⁰)})
//│ 						in _lh_listcomp_fun³⁴(expand_lh_₀(_lh_numericRule_LH_C_1¹¹))))) else (fun _lh_listcomp_fun³⁵ -> (fun _lh_numericRule_LH_C_1¹² -> (fun width⁶ -> [LH_N])))
//│ 			def length_lh_₀(ls²¹) = 
//│ 				case ls²¹ of {
//│ 					LH_C h⁶ t⁷ => (1 + length_lh_₀(t⁷))
//│ 					| LH_N  => 0}
//│ 			def length_lh_₁(ls¹⁹) = 
//│ 				case ls¹⁹ of {
//│ 					LH_C h¹⁰ t¹² => (1 + length_lh_₁(t¹²))
//│ 					| LH_N  => 0}
//│ 			def mappend_lh_₁(xs⁴, ys⁶) = 
//│ 				case xs⁴ of {
//│ 					LH_C h⁵ t⁶ => [LH_C h⁵ mappend_lh_₁(t⁶, ys⁶)]
//│ 					| LH_N  => ys⁶}
//│ 			def max_lh_₀(_lh_max_arg1², _lh_max_arg2²) = 
//│ 				if (_lh_max_arg1² > _lh_max_arg2²) then _lh_max_arg1² else _lh_max_arg2²
//│ 			def mknum_lh_₀(_lh_mknum_arg1⁴) = 
//│ 				foldl_lh_₀((fun u⁴ -> (fun c⁸ -> ((u⁴ * 10) + (int_of_char⁰(c⁸) - int_of_char⁰('0'))))), 0, _lh_mknum_arg1⁴)
//│ 				where
//│ 				def foldl_lh_₀(f¹⁴, i¹⁴, ls¹³) = 
//│ 					ls¹³(f¹⁴, i¹⁴)
//│ 			def mknum_lh_₁(_lh_mknum_arg1³) = 
//│ 				foldl_lh_₁((fun u³ -> (fun c⁷ -> ((u³ * 10) + (int_of_char⁰(c⁷) - int_of_char⁰('0'))))), 0, _lh_mknum_arg1³)
//│ 				where
//│ 				def foldl_lh_₁(f²⁰, i²⁰, ls¹⁸) = 
//│ 					ls¹⁸(f²⁰, i²⁰)
//│ 			def pad_lh_₀(_lh_pad_arg1², _lh_pad_arg2²) = 
//│ 				mappend_lh_₂(
//│ 					let _lh_listcomp_fun²⁶ = (fun _lh_listcomp_fun_para¹⁹ -> _lh_listcomp_fun_para¹⁹(_lh_listcomp_fun²⁶))
//│ 					in _lh_listcomp_fun²⁶(enumFromTo_lh_₃(1, (_lh_pad_arg2² - length_lh_₂(_lh_pad_arg1²)))), _lh_pad_arg1²)
//│ 				where
//│ 				def enumFromTo_lh_₃(a¹², b⁸) = 
//│ 					if (a¹² <= b⁸) then 
//│ 						let _lh_listcomp_fun_ls_t¹⁸ = enumFromTo_lh_₃((a¹² + 1), b⁸)
//│ 						in (fun _lh_listcomp_fun²³ -> 
//│ 							let t¹⁸ = _lh_listcomp_fun²³(_lh_listcomp_fun_ls_t¹⁸)
//│ 							in let h¹⁶ = '0'
//│ 							in (fun ys⁴ -> [LH_C h¹⁶ mappend_lh_₂(t¹⁸, ys⁴)])) else (fun _lh_listcomp_fun²⁴ -> (fun ys⁵ -> ys⁵))
//│ 				def length_lh_₂(ls¹⁵) = 
//│ 					case ls¹⁵ of {
//│ 						LH_C h⁷ t⁸ => (1 + length_lh_₂(t⁸))
//│ 						| LH_N  => 0}
//│ 				def mappend_lh_₂(xs⁶, ys⁸) = 
//│ 					xs⁶(ys⁸)
//│ 			def span_lh_₀(_lh_span_arg1⁴, _lh_span_arg2⁴) = 
//│ 				case _lh_span_arg2⁴ of {
//│ 					LH_N  => [LH_P2 (fun f²¹ -> (fun i²¹ -> i²¹)) (fun _lh_numericRule_LH_P2_0¹¹ -> error⁰)]
//│ 					| LH_C _lh_span_LH_C_0¹ _lh_span_LH_C_1¹ => if _lh_span_arg1⁴(_lh_span_LH_C_0¹) then 
//│ 						let _lh_matchIdent¹¹ = span_lh_₀(_lh_span_arg1⁴, _lh_span_LH_C_1¹)
//│ 						in case _lh_matchIdent¹¹ of {
//│ 							LH_P2 _lh_span_LH_P2_0¹ _lh_span_LH_P2_1¹ => [LH_P2 
//│ 								let t²⁰ = _lh_span_LH_P2_0¹
//│ 								in let h¹⁸ = _lh_span_LH_C_0¹
//│ 								in (fun f²² -> (fun i²² -> foldl_lh_₂(f²², f²²(i²², h¹⁸), t²⁰))) _lh_span_LH_P2_1¹]
//│ 							| _  => error⁰} else [LH_P2 (fun f²³ -> (fun i²³ -> i²³)) 
//│ 						let _lh_numericRule_LH_C_1⁸ = _lh_span_LH_C_1¹
//│ 						in (fun _lh_numericRule_LH_P2_0¹² -> 
//│ 							let _lh_matchIdent¹² = span_lh_₁((fun c⁹ -> polyNeq⁰(c⁹, '>')), _lh_numericRule_LH_C_1⁸)
//│ 							in case _lh_matchIdent¹² of {
//│ 								LH_P2 _lh_numericRule_LH_P2_0⁴ _lh_numericRule_LH_P2_1⁴ => _lh_numericRule_LH_P2_1⁴(_lh_numericRule_LH_P2_0¹², _lh_numericRule_LH_P2_0⁴)
//│ 								| _  => error⁰})]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl_lh_₂(f¹⁶, i¹⁶, ls¹⁶) = 
//│ 					ls¹⁶(f¹⁶, i¹⁶)
//│ 			def span_lh_₁(_lh_span_arg1³, _lh_span_arg2³) = 
//│ 				case _lh_span_arg2³ of {
//│ 					LH_N  => [LH_P2 (fun f¹⁷ -> (fun i¹⁷ -> i¹⁷)) (fun _lh_numericRule_LH_P2_0⁶ -> (fun _lh_numericRule_LH_P2_0⁷ -> error⁰))]
//│ 					| LH_C _lh_span_LH_C_0² _lh_span_LH_C_1² => if _lh_span_arg1³(_lh_span_LH_C_0²) then 
//│ 						let _lh_matchIdent⁹ = span_lh_₁(_lh_span_arg1³, _lh_span_LH_C_1²)
//│ 						in case _lh_matchIdent⁹ of {
//│ 							LH_P2 _lh_span_LH_P2_0² _lh_span_LH_P2_1² => [LH_P2 
//│ 								let t¹⁹ = _lh_span_LH_P2_0²
//│ 								in let h¹⁷ = _lh_span_LH_C_0²
//│ 								in (fun f¹⁸ -> (fun i¹⁸ -> foldl_lh_₃(f¹⁸, f¹⁸(i¹⁸, h¹⁷), t¹⁹))) _lh_span_LH_P2_1²]
//│ 							| _  => error⁰} else [LH_P2 (fun f¹⁹ -> (fun i¹⁹ -> i¹⁹)) 
//│ 						let _lh_numericRule_LH_C_1⁶ = _lh_span_LH_C_1²
//│ 						in (fun _lh_numericRule_LH_P2_0⁸ -> (fun _lh_numericRule_LH_P2_0⁹ -> 
//│ 							let _lh_matchIdent¹⁰ = 	
//│ 								let _lh_numericRule_LH_P2_1⁶ = mknum_lh_₀(_lh_numericRule_LH_P2_0⁹)
//│ 								in let _lh_numericRule_LH_P2_0¹⁰ = mknum_lh_₁(_lh_numericRule_LH_P2_0⁸)
//│ 								in (fun _lh_numericRule_LH_C_1⁷ -> 
//│ 									let width² = max_lh_₀(length_lh_₀(string_of_int⁰(_lh_numericRule_LH_P2_0¹⁰)), length_lh_₁(string_of_int⁰(_lh_numericRule_LH_P2_1⁶)))
//│ 									in let _lh_listcomp_fun²⁷ = (fun _lh_listcomp_fun_para²⁰ -> _lh_listcomp_fun_para²⁰(_lh_listcomp_fun²⁷, _lh_numericRule_LH_C_1⁷, width²))
//│ 									in _lh_listcomp_fun²⁷(if (_lh_numericRule_LH_P2_0¹⁰ < _lh_numericRule_LH_P2_1⁶) then enumFromTo_lh_₂(_lh_numericRule_LH_P2_0¹⁰, _lh_numericRule_LH_P2_1⁶) else enumFromThenTo_lh_₀(_lh_numericRule_LH_P2_0¹⁰, (_lh_numericRule_LH_P2_0¹⁰ - 1), _lh_numericRule_LH_P2_1⁶)))
//│ 							in _lh_matchIdent¹⁰(_lh_numericRule_LH_C_1⁶)))]
//│ 					| _  => error⁰}
//│ 				where
//│ 				def foldl_lh_₃(f¹⁵, i¹⁵, ls¹⁴) = 
//│ 					ls¹⁴(f¹⁵, i¹⁵)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ >>>>>>>>>> Generated OCaml >>>>>>>>>>
//│ benchmark file generated
//│ <<<<<<<<<< Generated OCaml <<<<<<<<<<

