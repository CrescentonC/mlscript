:NewParser
:ParseOnly

// CORRECT: p1 and c are aligned, and p2 and c is not algned
// WRONG: example for merging the alpha-equiv strategies being difficult
let p1 = C(C(p1))
let p2 = D(D(D(p2)))
fun c(x) = if x is
  C(aa) then if aa is
    C(a2) then if a2 is
      C(a3) then y => if y is
        D(bb) then if bb is
          D(cc) then c(a3)(cc)
c(p1)(p2)
//│ |#let| |p1| |#=| |C|(|C|(|p1|)|)|↵|#let| |p2| |#=| |D|(|D|(|D|(|p2|)|)|)|↵|#fun| |c|(|x|)| |#=| |#if| |x| |is|→|C|(|aa|)| |#then| |#if| |aa| |is|→|C|(|a2|)| |#then| |#if| |a2| |is|→|C|(|a3|)| |#then| |y| |=>| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |c|(|a3|)|(|cc|)|←|←|←|←|←|↵|c|(|p1|)|(|p2|)|
//│ Parsed: {let p1 = C (C (p1,),); let p2 = D (D (D (p2,),),); fun c = x, => if x is ‹(C (aa,)) then if aa is ‹(C (a2,)) then if a2 is ‹(C (a3,)) then y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then c (a3,) (cc,)›››››; c (p1,) (p2,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ ((c^25 p1^26) p2^28)
//│ def c = (fun x⁰ -> case x⁰ of {
//│ 	C aa⁰ => case aa⁰ of {
//│ 		C a2⁰ => case a2⁰ of {
//│ 			C a3⁰ => (fun y⁰ -> case y⁰ of {
//│ 				D bb⁰ => case bb⁰ of {
//│ 					D cc⁰ => ((c^13 a3⁰) cc⁰)}})}}})
//│ def p1 = [C [C p1^1]]
//│ def p2 = [D [D [D p2^4]]]
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [c^25]
//│ 	[c^25 · c^13]
//│ 		[c^25 · c^13 · c^13] ---> [c^25] (only one)
//│ [p1^26]
//│ 	[p1^26 · p1^1]
//│ 		[p1^26 · p1^1 · p1^1]
//│ 			[p1^26 · p1^1 · p1^1 · p1^1] ---> [p1^26] (only one)
//│ [p2^28]
//│ 	[p2^28 · p2^4]
//│ 		[p2^28 · p2^4 · p2^4] ---> [p2^28] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ ((c₀ p1₀) p2₀)
//│ def c₀ = 
//│ 	(fun x¹ -> case x¹ of {
//│ 		C aa¹ => case aa¹ of {
//│ 			C a2¹ => case a2¹ of {
//│ 				C a3¹ => (fun y¹ -> case y¹ of {
//│ 					D bb¹ => case bb¹ of {
//│ 						D cc¹ => ((c₁ a3¹) cc¹)}})}}})
//│ 	where
//│ 	def c₁ = 
//│ 		(fun x² -> case x² of {
//│ 			C aa² => case aa² of {
//│ 				C a2² => case a2² of {
//│ 					C a3² => (fun y² -> case y² of {
//│ 						D bb² => case bb² of {
//│ 							D cc² => ((c₀ a3²) cc²)}})}}})
//│ def p1₀ = 
//│ 	[C [C p1₁]]
//│ 	where
//│ 	def p1₁ = 
//│ 		[C [C p1₂]]
//│ 		where
//│ 		def p1₂ = 
//│ 			[C [C p1₀]]
//│ def p2₀ = 
//│ 	[D [D [D p2₁]]]
//│ 	where
//│ 	def p2₁ = 
//│ 		[D [D [D p2₀]]]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [D p2₀]: 31 --->
//│ 	case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}: 51
//│ 	case bb² of {D cc² => ((c₀ a3²) cc²)}: 68
//│ [D [D p2₀]]: 32 --->
//│ 	case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}}: 52
//│ 	case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}}: 69
//│ [D [D [D p2₀]]]: 33 --->
//│ 	case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}: 51
//│ 	case bb² of {D cc² => ((c₀ a3²) cc²)}: 68
//│ [C p1₁]: 35 --->
//│ 	case aa¹ of {C a2¹ => case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}}: 55
//│ [C [C p1₁]]: 36 --->
//│ 	case x¹ of {C aa¹ => case aa¹ of {C a2¹ => case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}}}: 56
//│ [D p2₁]: 38 --->
//│ 	case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}}: 52
//│ 	case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}}: 69
//│ [D [D p2₁]]: 39 --->
//│ 	case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}: 51
//│ 	case bb² of {D cc² => ((c₀ a3²) cc²)}: 68
//│ [D [D [D p2₁]]]: 40 --->
//│ 	case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}}: 52
//│ 	case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}}: 69
//│ [C p1₀]: 76 --->
//│ 	case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}: 71
//│ [C [C p1₀]]: 77 --->
//│ 	case aa² of {C a2² => case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}}: 72
//│ [C p1₂]: 79 --->
//│ 	case x² of {C aa² => case aa² of {C a2² => case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}}}: 73
//│ [C [C p1₂]]: 80 --->
//│ 	case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}: 54
//│ ------------------
//│ case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}: 51 --->
//│ 	[D p2₀]: 31
//│ 	[D [D [D p2₀]]]: 33
//│ 	[D [D p2₁]]: 39
//│ case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}}: 52 --->
//│ 	[D [D p2₀]]: 32
//│ 	[D p2₁]: 38
//│ 	[D [D [D p2₁]]]: 40
//│ case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}: 54 --->
//│ 	[C [C p1₂]]: 80
//│ case aa¹ of {C a2¹ => case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}}: 55 --->
//│ 	[C p1₁]: 35
//│ case x¹ of {C aa¹ => case aa¹ of {C a2¹ => case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}}}: 56 --->
//│ 	[C [C p1₁]]: 36
//│ case bb² of {D cc² => ((c₀ a3²) cc²)}: 68 --->
//│ 	[D p2₀]: 31
//│ 	[D [D [D p2₀]]]: 33
//│ 	[D [D p2₁]]: 39
//│ case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}}: 69 --->
//│ 	[D [D p2₀]]: 32
//│ 	[D p2₁]: 38
//│ 	[D [D [D p2₁]]]: 40
//│ case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}: 71 --->
//│ 	[C p1₀]: 76
//│ case aa² of {C a2² => case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}}: 72 --->
//│ 	[C [C p1₀]]: 77
//│ case x² of {C aa² => case aa² of {C a2² => case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}}}: 73 --->
//│ 	[C p1₂]: 79
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [C p1₁]: 35 --->
//│ 	case aa¹ of {C a2¹ => case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}}: 55
//│ [C [C p1₁]]: 36 --->
//│ 	case x¹ of {C aa¹ => case aa¹ of {C a2¹ => case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}}}: 56
//│ [C p1₀]: 76 --->
//│ 	case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}: 71
//│ [C [C p1₀]]: 77 --->
//│ 	case aa² of {C a2² => case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}}: 72
//│ [C p1₂]: 79 --->
//│ 	case x² of {C aa² => case aa² of {C a2² => case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}}}: 73
//│ [C [C p1₂]]: 80 --->
//│ 	case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}: 54
//│ ------------------
//│ case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}: 54 --->
//│ 	[C [C p1₂]]: 80
//│ case aa¹ of {C a2¹ => case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}}: 55 --->
//│ 	[C p1₁]: 35
//│ case x¹ of {C aa¹ => case aa¹ of {C a2¹ => case a2¹ of {C a3¹ => (fun y¹ -> case y¹ of {D bb¹ => case bb¹ of {D cc¹ => ((c₁ a3¹) cc¹)}})}}}: 56 --->
//│ 	[C [C p1₁]]: 36
//│ case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}: 71 --->
//│ 	[C p1₀]: 76
//│ case aa² of {C a2² => case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}}: 72 --->
//│ 	[C [C p1₀]]: 77
//│ case x² of {C aa² => case aa² of {C a2² => case a2² of {C a3² => (fun y² -> case y² of {D bb² => case bb² of {D cc² => ((c₀ a3²) cc²)}})}}}: 73 --->
//│ 	[C p1₂]: 79
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ ((c₀ p1₀) p2₀)
//│ def c₀ = 
//│ 	(fun x⁴ -> x⁴)
//│ 	where
//│ 	def c₁ = 
//│ 		(fun x³ -> x³)
//│ def p1₀ = 
//│ 	let aa³ = 	
//│ 		let a2⁴ = p1₁
//│ 		in a2⁴
//│ 	in aa³
//│ 	where
//│ 	def p1₁ = 
//│ 		let a3⁴ = 	
//│ 			let aa⁴ = p1₂
//│ 			in aa⁴
//│ 		in (fun y⁴ -> case y⁴ of {
//│ 			D bb¹ => case bb¹ of {
//│ 				D cc¹ => ((c₁ a3⁴) cc¹)}})
//│ 		where
//│ 		def p1₂ = 
//│ 			let a2³ = 	
//│ 				let a3³ = p1₀
//│ 				in (fun y³ -> case y³ of {
//│ 					D bb² => case bb² of {
//│ 						D cc² => ((c₀ a3³) cc²)}})
//│ 			in a2³
//│ def p2₀ = 
//│ 	[D [D [D p2₁]]]
//│ 	where
//│ 	def p2₁ = 
//│ 		[D [D [D p2₀]]]
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [c₀^1] (hopeless to continue)
//│ [p1₀^2] (hopeless to continue)
//│ 	[p1₀^2 · p1₁^32] (using original def)
//│ 		[p1₀^2 · p1₁^32 · c₁^42] (using original def)
//│ 		[p1₀^2 · p1₁^32 · p1₂^37] (using original def)
//│ 			[p1₀^2 · p1₁^32 · p1₂^37 · c₀^21] (using original def)
//│ 			[p1₀^2 · p1₁^32 · p1₂^37 · p1₀^18] ---> [p1₀^2] (using original def)
//│ [p2₀^4] (hopeless to continue)
//│ 	[p2₀^4 · p2₁^8] (using original def)
//│ 		[p2₀^4 · p2₁^8 · p2₀^14] ---> [p2₀^4] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ ((c₀₀ p1₀₀) p2₀₀)
//│ def c₀₀ = 
//│ 	(fun x³ -> x³)
//│ def p1₀₀ = 
//│ 	let aa² = 	
//│ 		let a2³ = p1₁₀
//│ 		in a2³
//│ 	in aa²
//│ 	where
//│ 	def p1₁₀ = 
//│ 		let a3³ = 	
//│ 			let aa³ = p1₂₀
//│ 			in aa³
//│ 		in (fun y³ -> case y³ of {
//│ 			D bb³ => case bb³ of {
//│ 				D cc³ => ((c₁₀ a3³) cc³)}})
//│ 		where
//│ 		def c₁₀ = 
//│ 			(fun x² -> x²)
//│ 		def p1₂₀ = 
//│ 			let a2² = 	
//│ 				let a3² = p1₀₀
//│ 				in (fun y² -> case y² of {
//│ 					D bb² => case bb² of {
//│ 						D cc² => ((c₀₁ a3²) cc²)}})
//│ 			in a2²
//│ 			where
//│ 			def c₀₁ = 
//│ 				(fun x⁴ -> x⁴)
//│ def p2₀₀ = 
//│ 	[D [D [D p2₁₀]]]
//│ 	where
//│ 	def p2₁₀ = 
//│ 		[D [D [D p2₀₀]]]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [D p2₀₀]: 68 --->
//│ 	case bb² of {D cc² => ((c₀₁ a3²) cc²)}: 59
//│ 	case bb³ of {D cc³ => ((c₁₀ a3³) cc³)}: 94
//│ [D [D p2₀₀]]: 69 --->
//│ 	case y² of {D bb² => case bb² of {D cc² => ((c₀₁ a3²) cc²)}}: 60
//│ 	case y³ of {D bb³ => case bb³ of {D cc³ => ((c₁₀ a3³) cc³)}}: 95
//│ [D [D [D p2₀₀]]]: 70 --->
//│ 	case bb² of {D cc² => ((c₀₁ a3²) cc²)}: 59
//│ 	case bb³ of {D cc³ => ((c₁₀ a3³) cc³)}: 94
//│ [D p2₁₀]: 74 --->
//│ 	case y² of {D bb² => case bb² of {D cc² => ((c₀₁ a3²) cc²)}}: 60
//│ 	case y³ of {D bb³ => case bb³ of {D cc³ => ((c₁₀ a3³) cc³)}}: 95
//│ [D [D p2₁₀]]: 75 --->
//│ 	case bb² of {D cc² => ((c₀₁ a3²) cc²)}: 59
//│ 	case bb³ of {D cc³ => ((c₁₀ a3³) cc³)}: 94
//│ [D [D [D p2₁₀]]]: 76 --->
//│ 	case y² of {D bb² => case bb² of {D cc² => ((c₀₁ a3²) cc²)}}: 60
//│ 	case y³ of {D bb³ => case bb³ of {D cc³ => ((c₁₀ a3³) cc³)}}: 95
//│ ------------------
//│ case bb² of {D cc² => ((c₀₁ a3²) cc²)}: 59 --->
//│ 	[D p2₀₀]: 68
//│ 	[D [D [D p2₀₀]]]: 70
//│ 	[D [D p2₁₀]]: 75
//│ case y² of {D bb² => case bb² of {D cc² => ((c₀₁ a3²) cc²)}}: 60 --->
//│ 	[D [D p2₀₀]]: 69
//│ 	[D p2₁₀]: 74
//│ 	[D [D [D p2₁₀]]]: 76
//│ case bb³ of {D cc³ => ((c₁₀ a3³) cc³)}: 94 --->
//│ 	[D p2₀₀]: 68
//│ 	[D [D [D p2₀₀]]]: 70
//│ 	[D [D p2₁₀]]: 75
//│ case y³ of {D bb³ => case bb³ of {D cc³ => ((c₁₀ a3³) cc³)}}: 95 --->
//│ 	[D [D p2₀₀]]: 69
//│ 	[D p2₁₀]: 74
//│ 	[D [D [D p2₁₀]]]: 76
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ ((c₀₀ p1₀₀) p2₀₀)
//│ def c₀₀ = 
//│ 	(fun x⁶ -> x⁶)
//│ def p1₀₀ = 
//│ 	let aa² = 	
//│ 		let a2³ = p1₁₀
//│ 		in a2³
//│ 	in aa²
//│ 	where
//│ 	def p1₁₀ = 
//│ 		let a3³ = 	
//│ 			let aa³ = p1₂₀
//│ 			in aa³
//│ 		in (fun y⁵ -> case y⁵ of {
//│ 			D bb³ => case bb³ of {
//│ 				D cc³ => ((c₁₀ a3³) cc³)}})
//│ 		where
//│ 		def c₁₀ = 
//│ 			(fun x⁵ -> x⁵)
//│ 		def p1₂₀ = 
//│ 			let a2² = 	
//│ 				let a3² = p1₀₀
//│ 				in (fun y⁴ -> case y⁴ of {
//│ 					D bb² => case bb² of {
//│ 						D cc² => ((c₀₁ a3²) cc²)}})
//│ 			in a2²
//│ 			where
//│ 			def c₀₁ = 
//│ 				(fun x⁷ -> x⁷)
//│ def p2₀₀ = 
//│ 	[D [D [D p2₁₀]]]
//│ 	where
//│ 	def p2₁₀ = 
//│ 		[D [D [D p2₀₀]]]
//│ <<<<<<< after fusion <<<<<<<

// WRONG: manually do the fusion on top of the previous fusion result, since `c0` is used twice, it is wrong
fun c0(x) = x
fun c1(x) = x
let p10 = p11
fun p11(y) = if y is
  D(bb) then if bb is
    D(cc) then c1(p12)(cc)
fun p12(y) = if y is
  D(bb) then if bb is
    D(cc) then c0(p10)(cc)
let p20 = D(D(D(p21)))
let p21 = D(D(D(p20)))
c0(p10)(p20)
//│ |#fun| |c0|(|x|)| |#=| |x|↵|#fun| |c1|(|x|)| |#=| |x|↵|#let| |p10| |#=| |p11|↵|#fun| |p11|(|y|)| |#=| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |c1|(|p12|)|(|cc|)|←|←|↵|#fun| |p12|(|y|)| |#=| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |c0|(|p10|)|(|cc|)|←|←|↵|#let| |p20| |#=| |D|(|D|(|D|(|p21|)|)|)|↵|#let| |p21| |#=| |D|(|D|(|D|(|p20|)|)|)|↵|c0|(|p10|)|(|p20|)|
//│ Parsed: {fun c0 = x, => x; fun c1 = x, => x; let p10 = p11; fun p11 = y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then c1 (p12,) (cc,)››; fun p12 = y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then c0 (p10,) (cc,)››; let p20 = D (D (D (p21,),),); let p21 = D (D (D (p20,),),); c0 (p10,) (p20,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ ((c0^34 p10^35) p20^37)
//│ def c0 = (fun x⁰ -> x⁰)
//│ def c1 = (fun x¹ -> x¹)
//│ def p10 = p11^5
//│ def p11 = (fun y⁰ -> case y⁰ of {
//│ 	D bb⁰ => case bb⁰ of {
//│ 		D cc⁰ => ((c1^8 p12^9) cc⁰)}})
//│ def p12 = (fun y¹ -> case y¹ of {
//│ 	D bb¹ => case bb¹ of {
//│ 		D cc¹ => ((c0^18 p10^19) cc¹)}})
//│ def p20 = [D [D [D p21^26]]]
//│ def p21 = [D [D [D p20^30]]]
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [c0^34] (hopeless to continue)
//│ [p10^35] (hopeless to continue)
//│ 	[p10^35 · p11^5] (using original def)
//│ 		[p10^35 · p11^5 · c1^8] (using original def)
//│ 		[p10^35 · p11^5 · p12^9] (using original def)
//│ 			[p10^35 · p11^5 · p12^9 · c0^18] (using original def)
//│ 			[p10^35 · p11^5 · p12^9 · p10^19] ---> [p10^35] (using original def)
//│ [p20^37] (hopeless to continue)
//│ 	[p20^37 · p21^26] (using original def)
//│ 		[p20^37 · p21^26 · p20^30] ---> [p20^37] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ ((c0₀ p10₀) p20₀)
//│ def c0₀ = 
//│ 	(fun x³ -> x³)
//│ def p10₀ = 
//│ 	p11₀
//│ 	where
//│ 	def p11₀ = 
//│ 		(fun y³ -> case y³ of {
//│ 			D bb³ => case bb³ of {
//│ 				D cc³ => ((c1₀ p12₀) cc³)}})
//│ 		where
//│ 		def c1₀ = 
//│ 			(fun x⁴ -> x⁴)
//│ 		def p12₀ = 
//│ 			(fun y² -> case y² of {
//│ 				D bb² => case bb² of {
//│ 					D cc² => ((c0₁ p10₀) cc²)}})
//│ 			where
//│ 			def c0₁ = 
//│ 				(fun x² -> x²)
//│ def p20₀ = 
//│ 	[D [D [D p21₀]]]
//│ 	where
//│ 	def p21₀ = 
//│ 		[D [D [D p20₀]]]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [D p20₀]: 64 --->
//│ 	case bb² of {D cc² => ((c0₁ p10₀) cc²)}: 46
//│ 	case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}: 60
//│ [D [D p20₀]]: 65 --->
//│ 	case y² of {D bb² => case bb² of {D cc² => ((c0₁ p10₀) cc²)}}: 47
//│ 	case y³ of {D bb³ => case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}}: 61
//│ [D [D [D p20₀]]]: 66 --->
//│ 	case bb² of {D cc² => ((c0₁ p10₀) cc²)}: 46
//│ 	case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}: 60
//│ [D p21₀]: 71 --->
//│ 	case y² of {D bb² => case bb² of {D cc² => ((c0₁ p10₀) cc²)}}: 47
//│ 	case y³ of {D bb³ => case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}}: 61
//│ [D [D p21₀]]: 72 --->
//│ 	case bb² of {D cc² => ((c0₁ p10₀) cc²)}: 46
//│ 	case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}: 60
//│ [D [D [D p21₀]]]: 73 --->
//│ 	case y² of {D bb² => case bb² of {D cc² => ((c0₁ p10₀) cc²)}}: 47
//│ 	case y³ of {D bb³ => case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}}: 61
//│ ------------------
//│ case bb² of {D cc² => ((c0₁ p10₀) cc²)}: 46 --->
//│ 	[D p20₀]: 64
//│ 	[D [D [D p20₀]]]: 66
//│ 	[D [D p21₀]]: 72
//│ case y² of {D bb² => case bb² of {D cc² => ((c0₁ p10₀) cc²)}}: 47 --->
//│ 	[D [D p20₀]]: 65
//│ 	[D p21₀]: 71
//│ 	[D [D [D p21₀]]]: 73
//│ case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}: 60 --->
//│ 	[D p20₀]: 64
//│ 	[D [D [D p20₀]]]: 66
//│ 	[D [D p21₀]]: 72
//│ case y³ of {D bb³ => case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}}: 61 --->
//│ 	[D [D p20₀]]: 65
//│ 	[D p21₀]: 71
//│ 	[D [D [D p21₀]]]: 73
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ ((c0₀ p10₀) p20₀)
//│ def c0₀ = 
//│ 	(fun x⁶ -> x⁶)
//│ def p10₀ = 
//│ 	p11₀
//│ 	where
//│ 	def p11₀ = 
//│ 		(fun y⁴ -> case y⁴ of {
//│ 			D bb³ => case bb³ of {
//│ 				D cc³ => ((c1₀ p12₀) cc³)}})
//│ 		where
//│ 		def c1₀ = 
//│ 			(fun x⁷ -> x⁷)
//│ 		def p12₀ = 
//│ 			(fun y⁵ -> case y⁵ of {
//│ 				D bb² => case bb² of {
//│ 					D cc² => ((c0₁ p10₀) cc²)}})
//│ 			where
//│ 			def c0₁ = 
//│ 				(fun x⁵ -> x⁵)
//│ def p20₀ = 
//│ 	[D [D [D p21₀]]]
//│ 	where
//│ 	def p21₀ = 
//│ 		[D [D [D p20₀]]]
//│ <<<<<<< after fusion <<<<<<<

// CORRECT: after duplicating the used-more-than-once `c0`, the result is correct
fun c0(x) = x
fun c1(x) = x
fun id(x) = x
let p10 = p11
fun p11(y) = if y is
  D(bb) then if bb is
    D(cc) then c1(p12)(cc)
fun p12(y) = if y is
  D(bb) then if bb is
    D(cc) then id(p10)(cc)
let p20 = D(D(D(p21)))
let p21 = D(D(D(p20)))
c0(p10)(p20)
//│ |#fun| |c0|(|x|)| |#=| |x|↵|#fun| |c1|(|x|)| |#=| |x|↵|#fun| |id|(|x|)| |#=| |x|↵|#let| |p10| |#=| |p11|↵|#fun| |p11|(|y|)| |#=| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |c1|(|p12|)|(|cc|)|←|←|↵|#fun| |p12|(|y|)| |#=| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |id|(|p10|)|(|cc|)|←|←|↵|#let| |p20| |#=| |D|(|D|(|D|(|p21|)|)|)|↵|#let| |p21| |#=| |D|(|D|(|D|(|p20|)|)|)|↵|c0|(|p10|)|(|p20|)|
//│ Parsed: {fun c0 = x, => x; fun c1 = x, => x; fun id = x, => x; let p10 = p11; fun p11 = y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then c1 (p12,) (cc,)››; fun p12 = y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then id (p10,) (cc,)››; let p20 = D (D (D (p21,),),); let p21 = D (D (D (p20,),),); c0 (p10,) (p20,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ ((c0^36 p10^37) p20^39)
//│ def c0 = (fun x⁰ -> x⁰)
//│ def c1 = (fun x¹ -> x¹)
//│ def id = (fun x² -> x²)
//│ def p10 = p11^7
//│ def p11 = (fun y⁰ -> case y⁰ of {
//│ 	D bb⁰ => case bb⁰ of {
//│ 		D cc⁰ => ((c1^10 p12^11) cc⁰)}})
//│ def p12 = (fun y¹ -> case y¹ of {
//│ 	D bb¹ => case bb¹ of {
//│ 		D cc¹ => ((id^20 p10^21) cc¹)}})
//│ def p20 = [D [D [D p21^28]]]
//│ def p21 = [D [D [D p20^32]]]
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [c0^36] (hopeless to continue)
//│ [p10^37]
//│ 	[p10^37 · p11^7]
//│ 		[p10^37 · p11^7 · c1^10] (hopeless to continue)
//│ 		[p10^37 · p11^7 · p12^11]
//│ 			[p10^37 · p11^7 · p12^11 · id^20] (hopeless to continue)
//│ 			[p10^37 · p11^7 · p12^11 · p10^21]
//│ 				[p10^37 · p11^7 · p12^11 · p10^21 · p11^7]
//│ 					[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · c1^10] (hopeless to continue)
//│ 					[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11]
//│ 						[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · id^20] (hopeless to continue)
//│ 						[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · p10^21]
//│ 							[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · p10^21 · p11^7]
//│ 								[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · p10^21 · p11^7 · c1^10] (hopeless to continue)
//│ 								[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11]
//│ 									[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · id^20] (hopeless to continue)
//│ 									[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · p10^21]
//│ 										[p10^37 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · p10^21 · p11^7 · p12^11 · p10^21 · p11^7] ---> [p10^37 · p11^7] (only one)
//│ [p20^39]
//│ 	[p20^39 · p21^28]
//│ 		[p20^39 · p21^28 · p20^32]
//│ 			[p20^39 · p21^28 · p20^32 · p21^28]
//│ 				[p20^39 · p21^28 · p20^32 · p21^28 · p20^32] ---> [p20^39] (only one)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ ((c0₀ p10₀) p20₀)
//│ def c0₀ = 
//│ 	(fun x⁵ -> x⁵)
//│ def p10₀ = 
//│ 	p11₀
//│ 	where
//│ 	def p11₀ = 
//│ 		(fun y³ -> case y³ of {
//│ 			D bb³ => case bb³ of {
//│ 				D cc³ => ((c1₀ p12₀) cc³)}})
//│ 		where
//│ 		def c1₀ = 
//│ 			(fun x⁸ -> x⁸)
//│ 		def p12₀ = 
//│ 			(fun y⁵ -> case y⁵ of {
//│ 				D bb⁵ => case bb⁵ of {
//│ 					D cc⁵ => ((id₀ p10₁) cc⁵)}})
//│ 			where
//│ 			def id₀ = 
//│ 				(fun x⁷ -> x⁷)
//│ 			def p10₁ = 
//│ 				p11₁
//│ 				where
//│ 				def p11₁ = 
//│ 					(fun y⁷ -> case y⁷ of {
//│ 						D bb⁷ => case bb⁷ of {
//│ 							D cc⁷ => ((c1₁ p12₁) cc⁷)}})
//│ 					where
//│ 					def c1₁ = 
//│ 						(fun x³ -> x³)
//│ 					def p12₁ = 
//│ 						(fun y⁶ -> case y⁶ of {
//│ 							D bb⁶ => case bb⁶ of {
//│ 								D cc⁶ => ((id₁ p10₂) cc⁶)}})
//│ 						where
//│ 						def id₁ = 
//│ 							(fun x⁶ -> x⁶)
//│ 						def p10₂ = 
//│ 							p11₂
//│ 							where
//│ 							def p11₂ = 
//│ 								(fun y⁴ -> case y⁴ of {
//│ 									D bb⁴ => case bb⁴ of {
//│ 										D cc⁴ => ((c1₂ p12₂) cc⁴)}})
//│ 								where
//│ 								def c1₂ = 
//│ 									(fun x⁹ -> x⁹)
//│ 								def p12₂ = 
//│ 									(fun y² -> case y² of {
//│ 										D bb² => case bb² of {
//│ 											D cc² => ((id₂ p10₃) cc²)}})
//│ 									where
//│ 									def id₂ = 
//│ 										(fun x⁴ -> x⁴)
//│ 									def p10₃ = 
//│ 										p11₀
//│ def p20₀ = 
//│ 	[D [D [D p21₀]]]
//│ 	where
//│ 	def p21₀ = 
//│ 		[D [D [D p20₁]]]
//│ 		where
//│ 		def p20₁ = 
//│ 			[D [D [D p21₁]]]
//│ 			where
//│ 			def p21₁ = 
//│ 				[D [D [D p20₀]]]
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [D p21₁]: 90 --->
//│ 	case y⁴ of {D bb⁴ => case bb⁴ of {D cc⁴ => ((c1₂ p12₂) cc⁴)}}: 77
//│ [D [D p21₁]]: 91 --->
//│ 	case bb⁶ of {D cc⁶ => ((id₁ p10₂) cc⁶)}: 109
//│ [D [D [D p21₁]]]: 92 --->
//│ 	case y⁶ of {D bb⁶ => case bb⁶ of {D cc⁶ => ((id₁ p10₂) cc⁶)}}: 110
//│ [D p21₀]: 95 --->
//│ 	case y⁵ of {D bb⁵ => case bb⁵ of {D cc⁵ => ((id₀ p10₁) cc⁵)}}: 87
//│ [D [D p21₀]]: 96 --->
//│ 	case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}: 62
//│ [D [D [D p21₀]]]: 97 --->
//│ 	case y³ of {D bb³ => case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}}: 63
//│ [D p20₀]: 99 --->
//│ 	case bb² of {D cc² => ((id₂ p10₃) cc²)}: 50
//│ [D [D p20₀]]: 100 --->
//│ 	case y² of {D bb² => case bb² of {D cc² => ((id₂ p10₃) cc²)}}: 51
//│ [D [D [D p20₀]]]: 101 --->
//│ 	case bb⁴ of {D cc⁴ => ((c1₂ p12₂) cc⁴)}: 76
//│ [D p20₁]: 126 --->
//│ 	case bb⁷ of {D cc⁷ => ((c1₁ p12₁) cc⁷)}: 121
//│ [D [D p20₁]]: 127 --->
//│ 	case y⁷ of {D bb⁷ => case bb⁷ of {D cc⁷ => ((c1₁ p12₁) cc⁷)}}: 122
//│ [D [D [D p20₁]]]: 128 --->
//│ 	case bb⁵ of {D cc⁵ => ((id₀ p10₁) cc⁵)}: 86
//│ ------------------
//│ case bb² of {D cc² => ((id₂ p10₃) cc²)}: 50 --->
//│ 	[D p20₀]: 99
//│ case y² of {D bb² => case bb² of {D cc² => ((id₂ p10₃) cc²)}}: 51 --->
//│ 	[D [D p20₀]]: 100
//│ case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}: 62 --->
//│ 	[D [D p21₀]]: 96
//│ case y³ of {D bb³ => case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}}: 63 --->
//│ 	[D [D [D p21₀]]]: 97
//│ case bb⁴ of {D cc⁴ => ((c1₂ p12₂) cc⁴)}: 76 --->
//│ 	[D [D [D p20₀]]]: 101
//│ case y⁴ of {D bb⁴ => case bb⁴ of {D cc⁴ => ((c1₂ p12₂) cc⁴)}}: 77 --->
//│ 	[D p21₁]: 90
//│ case bb⁵ of {D cc⁵ => ((id₀ p10₁) cc⁵)}: 86 --->
//│ 	[D [D [D p20₁]]]: 128
//│ case y⁵ of {D bb⁵ => case bb⁵ of {D cc⁵ => ((id₀ p10₁) cc⁵)}}: 87 --->
//│ 	[D p21₀]: 95
//│ case bb⁶ of {D cc⁶ => ((id₁ p10₂) cc⁶)}: 109 --->
//│ 	[D [D p21₁]]: 91
//│ case y⁶ of {D bb⁶ => case bb⁶ of {D cc⁶ => ((id₁ p10₂) cc⁶)}}: 110 --->
//│ 	[D [D [D p21₁]]]: 92
//│ case bb⁷ of {D cc⁷ => ((c1₁ p12₁) cc⁷)}: 121 --->
//│ 	[D p20₁]: 126
//│ case y⁷ of {D bb⁷ => case bb⁷ of {D cc⁷ => ((c1₁ p12₁) cc⁷)}}: 122 --->
//│ 	[D [D p20₁]]: 127
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [D p21₁]: 90 --->
//│ 	case y⁴ of {D bb⁴ => case bb⁴ of {D cc⁴ => ((c1₂ p12₂) cc⁴)}}: 77
//│ [D [D p21₁]]: 91 --->
//│ 	case bb⁶ of {D cc⁶ => ((id₁ p10₂) cc⁶)}: 109
//│ [D [D [D p21₁]]]: 92 --->
//│ 	case y⁶ of {D bb⁶ => case bb⁶ of {D cc⁶ => ((id₁ p10₂) cc⁶)}}: 110
//│ [D p21₀]: 95 --->
//│ 	case y⁵ of {D bb⁵ => case bb⁵ of {D cc⁵ => ((id₀ p10₁) cc⁵)}}: 87
//│ [D [D p21₀]]: 96 --->
//│ 	case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}: 62
//│ [D [D [D p21₀]]]: 97 --->
//│ 	case y³ of {D bb³ => case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}}: 63
//│ [D p20₀]: 99 --->
//│ 	case bb² of {D cc² => ((id₂ p10₃) cc²)}: 50
//│ [D [D p20₀]]: 100 --->
//│ 	case y² of {D bb² => case bb² of {D cc² => ((id₂ p10₃) cc²)}}: 51
//│ [D [D [D p20₀]]]: 101 --->
//│ 	case bb⁴ of {D cc⁴ => ((c1₂ p12₂) cc⁴)}: 76
//│ [D p20₁]: 126 --->
//│ 	case bb⁷ of {D cc⁷ => ((c1₁ p12₁) cc⁷)}: 121
//│ [D [D p20₁]]: 127 --->
//│ 	case y⁷ of {D bb⁷ => case bb⁷ of {D cc⁷ => ((c1₁ p12₁) cc⁷)}}: 122
//│ [D [D [D p20₁]]]: 128 --->
//│ 	case bb⁵ of {D cc⁵ => ((id₀ p10₁) cc⁵)}: 86
//│ ------------------
//│ case bb² of {D cc² => ((id₂ p10₃) cc²)}: 50 --->
//│ 	[D p20₀]: 99
//│ case y² of {D bb² => case bb² of {D cc² => ((id₂ p10₃) cc²)}}: 51 --->
//│ 	[D [D p20₀]]: 100
//│ case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}: 62 --->
//│ 	[D [D p21₀]]: 96
//│ case y³ of {D bb³ => case bb³ of {D cc³ => ((c1₀ p12₀) cc³)}}: 63 --->
//│ 	[D [D [D p21₀]]]: 97
//│ case bb⁴ of {D cc⁴ => ((c1₂ p12₂) cc⁴)}: 76 --->
//│ 	[D [D [D p20₀]]]: 101
//│ case y⁴ of {D bb⁴ => case bb⁴ of {D cc⁴ => ((c1₂ p12₂) cc⁴)}}: 77 --->
//│ 	[D p21₁]: 90
//│ case bb⁵ of {D cc⁵ => ((id₀ p10₁) cc⁵)}: 86 --->
//│ 	[D [D [D p20₁]]]: 128
//│ case y⁵ of {D bb⁵ => case bb⁵ of {D cc⁵ => ((id₀ p10₁) cc⁵)}}: 87 --->
//│ 	[D p21₀]: 95
//│ case bb⁶ of {D cc⁶ => ((id₁ p10₂) cc⁶)}: 109 --->
//│ 	[D [D p21₁]]: 91
//│ case y⁶ of {D bb⁶ => case bb⁶ of {D cc⁶ => ((id₁ p10₂) cc⁶)}}: 110 --->
//│ 	[D [D [D p21₁]]]: 92
//│ case bb⁷ of {D cc⁷ => ((c1₁ p12₁) cc⁷)}: 121 --->
//│ 	[D p20₁]: 126
//│ case y⁷ of {D bb⁷ => case bb⁷ of {D cc⁷ => ((c1₁ p12₁) cc⁷)}}: 122 --->
//│ 	[D [D p20₁]]: 127
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ ((c0₀ p10₀) p20₀)
//│ def c0₀ = 
//│ 	(fun x¹² -> x¹²)
//│ def p10₀ = 
//│ 	p11₀
//│ 	where
//│ 	def p11₀ = 
//│ 		(fun y¹⁰ -> y¹⁰)
//│ 		where
//│ 		def c1₀ = 
//│ 			(fun x¹⁶ -> x¹⁶)
//│ 		def p12₀ = 
//│ 			(fun y¹¹ -> y¹¹)
//│ 			where
//│ 			def id₀ = 
//│ 				(fun x¹⁴ -> x¹⁴)
//│ 			def p10₁ = 
//│ 				p11₁
//│ 				where
//│ 				def p11₁ = 
//│ 					(fun y⁹ -> y⁹)
//│ 					where
//│ 					def c1₁ = 
//│ 						(fun x¹⁵ -> x¹⁵)
//│ 					def p12₁ = 
//│ 						(fun y¹² -> y¹²)
//│ 						where
//│ 						def id₁ = 
//│ 							(fun x¹³ -> x¹³)
//│ 						def p10₂ = 
//│ 							p11₂
//│ 							where
//│ 							def p11₂ = 
//│ 								(fun y⁸ -> y⁸)
//│ 								where
//│ 								def c1₂ = 
//│ 									(fun x¹¹ -> x¹¹)
//│ 								def p12₂ = 
//│ 									(fun y¹³ -> y¹³)
//│ 									where
//│ 									def id₂ = 
//│ 										(fun x¹⁰ -> x¹⁰)
//│ 									def p10₃ = 
//│ 										p11₀
//│ def p20₀ = 
//│ 	let bb⁸ = 	
//│ 		let cc⁸ = 	
//│ 			let bb⁹ = p21₀
//│ 			in bb⁹
//│ 		in ((c1₀ p12₀) cc⁸)
//│ 	in bb⁸
//│ 	where
//│ 	def p21₀ = 
//│ 		let cc¹² = 	
//│ 			let bb¹³ = 	
//│ 				let cc¹³ = p20₁
//│ 				in ((c1₁ p12₁) cc¹³)
//│ 			in bb¹³
//│ 		in ((id₀ p10₁) cc¹²)
//│ 		where
//│ 		def p20₁ = 
//│ 			let bb¹¹ = 	
//│ 				let cc¹¹ = 	
//│ 					let bb¹² = p21₁
//│ 					in bb¹²
//│ 				in ((id₁ p10₂) cc¹¹)
//│ 			in bb¹¹
//│ 			where
//│ 			def p21₁ = 
//│ 				let cc⁹ = 	
//│ 					let bb¹⁰ = 	
//│ 						let cc¹⁰ = p20₀
//│ 						in ((id₂ p10₃) cc¹⁰)
//│ 					in bb¹⁰
//│ 				in ((c1₂ p12₂) cc⁹)
//│ <<<<<<< after fusion <<<<<<<
//│ 
//│ ~~~~~~~~~~~~~~~~~~~~~~~ NEXT ITERATION ~~~~~~~~~~~~~~~~~~~~~~~
//│ 
//│ >>>>>>> expansion >>>>>>>
//│ [c0₀^1] (hopeless to continue)
//│ [p10₀^2] (hopeless to continue)
//│ 	[p10₀^2 · p11₀^85] (using original def)
//│ [p20₀^4] (hopeless to continue)
//│ 	[p20₀^4 · c1₀^14] (using original def)
//│ 	[p20₀^4 · p12₀^15] (using original def)
//│ 	[p20₀^4 · p21₀^11] (using original def)
//│ 		[p20₀^4 · p21₀^11 · c1₁^67] (using original def)
//│ 		[p20₀^4 · p21₀^11 · id₀^75] (using original def)
//│ 		[p20₀^4 · p21₀^11 · p10₁^76] (using original def)
//│ 			[p20₀^4 · p21₀^11 · p10₁^76 · p11₁^46] (using original def)
//│ 		[p20₀^4 · p21₀^11 · p12₁^68] (using original def)
//│ 		[p20₀^4 · p21₀^11 · p20₁^66] (using original def)
//│ 			[p20₀^4 · p21₀^11 · p20₁^66 · id₁^54] (using original def)
//│ 			[p20₀^4 · p21₀^11 · p20₁^66 · p10₂^55] (using original def)
//│ 				[p20₀^4 · p21₀^11 · p20₁^66 · p10₂^55 · p11₂^6] (using original def)
//│ 			[p20₀^4 · p21₀^11 · p20₁^66 · p21₁^51] (using original def)
//│ 				[p20₀^4 · p21₀^11 · p20₁^66 · p21₁^51 · c1₂^35] (using original def)
//│ 				[p20₀^4 · p21₀^11 · p20₁^66 · p21₁^51 · id₂^27] (using original def)
//│ 				[p20₀^4 · p21₀^11 · p20₁^66 · p21₁^51 · p10₃^28] (using original def)
//│ 					[p20₀^4 · p21₀^11 · p20₁^66 · p21₁^51 · p10₃^28 · p11₀^41] (using original def)
//│ 				[p20₀^4 · p21₀^11 · p20₁^66 · p21₁^51 · p12₂^36] (using original def)
//│ 				[p20₀^4 · p21₀^11 · p20₁^66 · p21₁^51 · p20₀^26] ---> [p20₀^4] (using original def)
//│ <<<<<<< expansion <<<<<<<
//│ 
//│ >>>>>>> expanded program >>>>>>>
//│ ((c0₀₀ p10₀₀) p20₀₀)
//│ def c0₀₀ = 
//│ 	(fun x⁹ -> x⁹)
//│ def p10₀₀ = 
//│ 	p11₀₀
//│ 	where
//│ 	def p11₀₀ = 
//│ 		(fun y¹⁰ -> y¹⁰)
//│ def p20₀₀ = 
//│ 	let bb⁷ = 	
//│ 		let cc⁸ = 	
//│ 			let bb⁸ = p21₀₀
//│ 			in bb⁸
//│ 		in ((c1₀₀ p12₀₀) cc⁸)
//│ 	in bb⁷
//│ 	where
//│ 	def c1₀₀ = 
//│ 		(fun x¹¹ -> x¹¹)
//│ 	def p12₀₀ = 
//│ 		(fun y¹¹ -> y¹¹)
//│ 	def p21₀₀ = 
//│ 		let cc⁶ = 	
//│ 			let bb⁶ = 	
//│ 				let cc⁷ = p20₁₀
//│ 				in ((c1₁₀ p12₁₀) cc⁷)
//│ 			in bb⁶
//│ 		in ((id₀₀ p10₁₀) cc⁶)
//│ 		where
//│ 		def c1₁₀ = 
//│ 			(fun x⁷ -> x⁷)
//│ 		def id₀₀ = 
//│ 			(fun x¹² -> x¹²)
//│ 		def p10₁₀ = 
//│ 			p11₁₀
//│ 			where
//│ 			def p11₁₀ = 
//│ 				(fun y¹² -> y¹²)
//│ 		def p12₁₀ = 
//│ 			(fun y⁷ -> y⁷)
//│ 		def p20₁₀ = 
//│ 			let bb⁹ = 	
//│ 				let cc⁹ = 	
//│ 					let bb¹⁰ = p21₁₀
//│ 					in bb¹⁰
//│ 				in ((id₁₀ p10₂₀) cc⁹)
//│ 			in bb⁹
//│ 			where
//│ 			def id₁₀ = 
//│ 				(fun x¹⁰ -> x¹⁰)
//│ 			def p10₂₀ = 
//│ 				p11₂₀
//│ 				where
//│ 				def p11₂₀ = 
//│ 					(fun y⁸ -> y⁸)
//│ 			def p21₁₀ = 
//│ 				let cc¹⁰ = 	
//│ 					let bb¹¹ = 	
//│ 						let cc¹¹ = p20₀₀
//│ 						in ((id₂₀ p10₃₀) cc¹¹)
//│ 					in bb¹¹
//│ 				in ((c1₂₀ p12₂₀) cc¹⁰)
//│ 				where
//│ 				def c1₂₀ = 
//│ 					(fun x⁸ -> x⁸)
//│ 				def id₂₀ = 
//│ 					(fun x¹³ -> x¹³)
//│ 				def p10₃₀ = 
//│ 					p11₀₁
//│ 					where
//│ 					def p11₀₁ = 
//│ 						(fun y⁹ -> y⁹)
//│ 				def p12₂₀ = 
//│ 					(fun y⁶ -> y⁶)
//│ <<<<<<< expanded program <<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ ((c0₀₀ p10₀₀) p20₀₀)
//│ def c0₀₀ = 
//│ 	(fun x¹⁸ -> x¹⁸)
//│ def p10₀₀ = 
//│ 	p11₀₀
//│ 	where
//│ 	def p11₀₀ = 
//│ 		(fun y¹⁴ -> y¹⁴)
//│ def p20₀₀ = 
//│ 	let bb⁷ = 	
//│ 		let cc⁸ = 	
//│ 			let bb⁸ = p21₀₀
//│ 			in bb⁸
//│ 		in ((c1₀₀ p12₀₀) cc⁸)
//│ 	in bb⁷
//│ 	where
//│ 	def c1₀₀ = 
//│ 		(fun x¹⁹ -> x¹⁹)
//│ 	def p12₀₀ = 
//│ 		(fun y¹⁹ -> y¹⁹)
//│ 	def p21₀₀ = 
//│ 		let cc⁶ = 	
//│ 			let bb⁶ = 	
//│ 				let cc⁷ = p20₁₀
//│ 				in ((c1₁₀ p12₁₀) cc⁷)
//│ 			in bb⁶
//│ 		in ((id₀₀ p10₁₀) cc⁶)
//│ 		where
//│ 		def c1₁₀ = 
//│ 			(fun x¹⁷ -> x¹⁷)
//│ 		def id₀₀ = 
//│ 			(fun x¹⁵ -> x¹⁵)
//│ 		def p10₁₀ = 
//│ 			p11₁₀
//│ 			where
//│ 			def p11₁₀ = 
//│ 				(fun y¹⁷ -> y¹⁷)
//│ 		def p12₁₀ = 
//│ 			(fun y¹³ -> y¹³)
//│ 		def p20₁₀ = 
//│ 			let bb⁹ = 	
//│ 				let cc⁹ = 	
//│ 					let bb¹⁰ = p21₁₀
//│ 					in bb¹⁰
//│ 				in ((id₁₀ p10₂₀) cc⁹)
//│ 			in bb⁹
//│ 			where
//│ 			def id₁₀ = 
//│ 				(fun x¹⁴ -> x¹⁴)
//│ 			def p10₂₀ = 
//│ 				p11₂₀
//│ 				where
//│ 				def p11₂₀ = 
//│ 					(fun y¹⁵ -> y¹⁵)
//│ 			def p21₁₀ = 
//│ 				let cc¹⁰ = 	
//│ 					let bb¹¹ = 	
//│ 						let cc¹¹ = p20₀₀
//│ 						in ((id₂₀ p10₃₀) cc¹¹)
//│ 					in bb¹¹
//│ 				in ((c1₂₀ p12₂₀) cc¹⁰)
//│ 				where
//│ 				def c1₂₀ = 
//│ 					(fun x²⁰ -> x²⁰)
//│ 				def id₂₀ = 
//│ 					(fun x¹⁶ -> x¹⁶)
//│ 				def p10₃₀ = 
//│ 					p11₀₁
//│ 					where
//│ 					def p11₀₁ = 
//│ 						(fun y¹⁶ -> y¹⁶)
//│ 				def p12₂₀ = 
//│ 					(fun y¹⁸ -> y¹⁸)
//│ <<<<<<< after fusion <<<<<<<
