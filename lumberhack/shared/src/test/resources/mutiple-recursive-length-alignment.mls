:NewParser
:ParseOnly

// CORRECT: p1 and c are aligned, and p2 and c is not algned
// WRONG: example for merging the alpha-equiv strategies being difficult
let p1 = C(C(p1))
let p2 = D(D(D(p2)))
fun c(x) = if x is
  C(aa) then if aa is
    C(a2) then if a2 is
      C(a3) then y => if y is
        D(bb) then if bb is
          D(cc) then c(a3)(cc)
c(p1)(p2)
//│ |#let| |p1| |#=| |C|(|C|(|p1|)|)|↵|#let| |p2| |#=| |D|(|D|(|D|(|p2|)|)|)|↵|#fun| |c|(|x|)| |#=| |#if| |x| |is|→|C|(|aa|)| |#then| |#if| |aa| |is|→|C|(|a2|)| |#then| |#if| |a2| |is|→|C|(|a3|)| |#then| |y| |=>| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |c|(|a3|)|(|cc|)|←|←|←|←|←|↵|c|(|p1|)|(|p2|)|
//│ Parsed: {let p1 = C (C (p1,),); let p2 = D (D (D (p2,),),); fun c = x, => if x is ‹(C (aa,)) then if aa is ‹(C (a2,)) then if a2 is ‹(C (a3,)) then y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then c (a3,) (cc,)›››››; c (p1,) (p2,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ c^25(p1^26, p2^28)
//│ def c(x⁰) = case x⁰ of {
//│ 	C aa⁰ => case aa⁰ of {
//│ 		C a2⁰ => case a2⁰ of {
//│ 			C a3⁰ => (fun y⁰ -> case y⁰ of {
//│ 				D bb⁰ => case bb⁰ of {
//│ 					D cc⁰ => c^13(a3⁰, cc⁰)}})}}}
//│ def p1 = [C [C p1^1]]
//│ def p2 = [D [D [D p2^4]]]
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [C p1]: 2 --->
//│ 	case a2⁰ of {C a3⁰ => (fun y⁰ -> case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}})}: 21
//│ 	case aa⁰ of {C a2⁰ => case a2⁰ of {C a3⁰ => (fun y⁰ -> case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}})}}: 22
//│ 	case x⁰ of {C aa⁰ => case aa⁰ of {C a2⁰ => case a2⁰ of {C a3⁰ => (fun y⁰ -> case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}})}}}: 23
//│ [C [C p1]]: 3 --->
//│ 	case a2⁰ of {C a3⁰ => (fun y⁰ -> case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}})}: 21
//│ 	case aa⁰ of {C a2⁰ => case a2⁰ of {C a3⁰ => (fun y⁰ -> case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}})}}: 22
//│ 	case x⁰ of {C aa⁰ => case aa⁰ of {C a2⁰ => case a2⁰ of {C a3⁰ => (fun y⁰ -> case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}})}}}: 23
//│ [D p2]: 5 --->
//│ 	case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}: 18
//│ 	case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}}: 19
//│ [D [D p2]]: 6 --->
//│ 	case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}: 18
//│ 	case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}}: 19
//│ [D [D [D p2]]]: 7 --->
//│ 	case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}: 18
//│ 	case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}}: 19
//│ ------------------
//│ case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}: 18 --->
//│ 	[D p2]: 5
//│ 	[D [D p2]]: 6
//│ 	[D [D [D p2]]]: 7
//│ case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}}: 19 --->
//│ 	[D p2]: 5
//│ 	[D [D p2]]: 6
//│ 	[D [D [D p2]]]: 7
//│ case a2⁰ of {C a3⁰ => (fun y⁰ -> case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}})}: 21 --->
//│ 	[C p1]: 2
//│ 	[C [C p1]]: 3
//│ case aa⁰ of {C a2⁰ => case a2⁰ of {C a3⁰ => (fun y⁰ -> case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}})}}: 22 --->
//│ 	[C p1]: 2
//│ 	[C [C p1]]: 3
//│ case x⁰ of {C aa⁰ => case aa⁰ of {C a2⁰ => case a2⁰ of {C a3⁰ => (fun y⁰ -> case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c(a3⁰, cc⁰)}})}}}: 23 --->
//│ 	[C p1]: 2
//│ 	[C [C p1]]: 3
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ c(p1, p2)
//│ def c(x¹) = case x¹ of {
//│ 	C aa⁰ => case aa⁰ of {
//│ 		C a2⁰ => case a2⁰ of {
//│ 			C a3⁰ => (fun y¹ -> case y¹ of {
//│ 				D bb⁰ => case bb⁰ of {
//│ 					D cc⁰ => c(a3⁰, cc⁰)}})}}}
//│ def p1 = [C [C p1]]
//│ def p2 = [D [D [D p2]]]
//│ <<<<<<< after fusion <<<<<<<

// WRONG: manually do the fusion on top of the previous fusion result, since `c0` is used twice, it is wrong
fun c0(x) = x
fun c1(x) = x
let p10 = p11
fun p11(y) = if y is
  D(bb) then if bb is
    D(cc) then c1(p12)(cc)
fun p12(y) = if y is
  D(bb) then if bb is
    D(cc) then c0(p10)(cc)
let p20 = D(D(D(p21)))
let p21 = D(D(D(p20)))
c0(p10)(p20)
//│ |#fun| |c0|(|x|)| |#=| |x|↵|#fun| |c1|(|x|)| |#=| |x|↵|#let| |p10| |#=| |p11|↵|#fun| |p11|(|y|)| |#=| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |c1|(|p12|)|(|cc|)|←|←|↵|#fun| |p12|(|y|)| |#=| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |c0|(|p10|)|(|cc|)|←|←|↵|#let| |p20| |#=| |D|(|D|(|D|(|p21|)|)|)|↵|#let| |p21| |#=| |D|(|D|(|D|(|p20|)|)|)|↵|c0|(|p10|)|(|p20|)|
//│ Parsed: {fun c0 = x, => x; fun c1 = x, => x; let p10 = p11; fun p11 = y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then c1 (p12,) (cc,)››; fun p12 = y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then c0 (p10,) (cc,)››; let p20 = D (D (D (p21,),),); let p21 = D (D (D (p20,),),); c0 (p10,) (p20,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ c0^34(p10^35, p20^37)
//│ def c0(x⁰) = x⁰
//│ def c1(x¹) = x¹
//│ def p10 = p11^5
//│ def p11(y⁰) = case y⁰ of {
//│ 	D bb⁰ => case bb⁰ of {
//│ 		D cc⁰ => c1^8(p12^9, cc⁰)}}
//│ def p12(y¹) = case y¹ of {
//│ 	D bb¹ => case bb¹ of {
//│ 		D cc¹ => c0^18(p10^19, cc¹)}}
//│ def p20 = [D [D [D p21^26]]]
//│ def p21 = [D [D [D p20^30]]]
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [D p21]: 27 --->
//│ 	case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}}: 14
//│ 	case y¹ of {D bb¹ => case bb¹ of {D cc¹ => c0(p10, cc¹)}}: 24
//│ [D [D p21]]: 28 --->
//│ 	case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}: 13
//│ 	case bb¹ of {D cc¹ => c0(p10, cc¹)}: 23
//│ [D [D [D p21]]]: 29 --->
//│ 	case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}}: 14
//│ 	case y¹ of {D bb¹ => case bb¹ of {D cc¹ => c0(p10, cc¹)}}: 24
//│ [D p20]: 31 --->
//│ 	case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}: 13
//│ 	case bb¹ of {D cc¹ => c0(p10, cc¹)}: 23
//│ [D [D p20]]: 32 --->
//│ 	case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}}: 14
//│ 	case y¹ of {D bb¹ => case bb¹ of {D cc¹ => c0(p10, cc¹)}}: 24
//│ [D [D [D p20]]]: 33 --->
//│ 	case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}: 13
//│ 	case bb¹ of {D cc¹ => c0(p10, cc¹)}: 23
//│ ------------------
//│ case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}: 13 --->
//│ 	[D [D p21]]: 28
//│ 	[D p20]: 31
//│ 	[D [D [D p20]]]: 33
//│ case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}}: 14 --->
//│ 	[D p21]: 27
//│ 	[D [D [D p21]]]: 29
//│ 	[D [D p20]]: 32
//│ case bb¹ of {D cc¹ => c0(p10, cc¹)}: 23 --->
//│ 	[D [D p21]]: 28
//│ 	[D p20]: 31
//│ 	[D [D [D p20]]]: 33
//│ case y¹ of {D bb¹ => case bb¹ of {D cc¹ => c0(p10, cc¹)}}: 24 --->
//│ 	[D p21]: 27
//│ 	[D [D [D p21]]]: 29
//│ 	[D [D p20]]: 32
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ c0(p10, p20)
//│ def c0(x²) = x²
//│ def c1(x³) = x³
//│ def p10 = p11
//│ def p11(y²) = case y² of {
//│ 	D bb⁰ => case bb⁰ of {
//│ 		D cc⁰ => c1(p12, cc⁰)}}
//│ def p12(y³) = case y³ of {
//│ 	D bb¹ => case bb¹ of {
//│ 		D cc¹ => c0(p10, cc¹)}}
//│ def p20 = [D [D [D p21]]]
//│ def p21 = [D [D [D p20]]]
//│ <<<<<<< after fusion <<<<<<<

// CORRECT: after duplicating the used-more-than-once `c0`, the result is correct
fun c0(x) = x
fun c1(x) = x
fun id(x) = x
let p10 = p11
fun p11(y) = if y is
  D(bb) then if bb is
    D(cc) then c1(p12)(cc)
fun p12(y) = if y is
  D(bb) then if bb is
    D(cc) then id(p10)(cc)
let p20 = D(D(D(p21)))
let p21 = D(D(D(p20)))
c0(p10)(p20)
//│ |#fun| |c0|(|x|)| |#=| |x|↵|#fun| |c1|(|x|)| |#=| |x|↵|#fun| |id|(|x|)| |#=| |x|↵|#let| |p10| |#=| |p11|↵|#fun| |p11|(|y|)| |#=| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |c1|(|p12|)|(|cc|)|←|←|↵|#fun| |p12|(|y|)| |#=| |#if| |y| |is|→|D|(|bb|)| |#then| |#if| |bb| |is|→|D|(|cc|)| |#then| |id|(|p10|)|(|cc|)|←|←|↵|#let| |p20| |#=| |D|(|D|(|D|(|p21|)|)|)|↵|#let| |p21| |#=| |D|(|D|(|D|(|p20|)|)|)|↵|c0|(|p10|)|(|p20|)|
//│ Parsed: {fun c0 = x, => x; fun c1 = x, => x; fun id = x, => x; let p10 = p11; fun p11 = y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then c1 (p12,) (cc,)››; fun p12 = y, => if y is ‹(D (bb,)) then if bb is ‹(D (cc,)) then id (p10,) (cc,)››; let p20 = D (D (D (p21,),),); let p21 = D (D (D (p20,),),); c0 (p10,) (p20,)}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ c0^36(p10^37, p20^39)
//│ def c0(x⁰) = x⁰
//│ def c1(x¹) = x¹
//│ def id(x²) = x²
//│ def p10 = p11^7
//│ def p11(y⁰) = case y⁰ of {
//│ 	D bb⁰ => case bb⁰ of {
//│ 		D cc⁰ => c1^10(p12^11, cc⁰)}}
//│ def p12(y¹) = case y¹ of {
//│ 	D bb¹ => case bb¹ of {
//│ 		D cc¹ => id^20(p10^21, cc¹)}}
//│ def p20 = [D [D [D p21^28]]]
//│ def p21 = [D [D [D p20^32]]]
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [D p21]: 29 --->
//│ 	case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}}: 16
//│ 	case y¹ of {D bb¹ => case bb¹ of {D cc¹ => id(p10, cc¹)}}: 26
//│ [D [D p21]]: 30 --->
//│ 	case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}: 15
//│ 	case bb¹ of {D cc¹ => id(p10, cc¹)}: 25
//│ [D [D [D p21]]]: 31 --->
//│ 	case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}}: 16
//│ 	case y¹ of {D bb¹ => case bb¹ of {D cc¹ => id(p10, cc¹)}}: 26
//│ [D p20]: 33 --->
//│ 	case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}: 15
//│ 	case bb¹ of {D cc¹ => id(p10, cc¹)}: 25
//│ [D [D p20]]: 34 --->
//│ 	case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}}: 16
//│ 	case y¹ of {D bb¹ => case bb¹ of {D cc¹ => id(p10, cc¹)}}: 26
//│ [D [D [D p20]]]: 35 --->
//│ 	case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}: 15
//│ 	case bb¹ of {D cc¹ => id(p10, cc¹)}: 25
//│ ------------------
//│ case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}: 15 --->
//│ 	[D [D p21]]: 30
//│ 	[D p20]: 33
//│ 	[D [D [D p20]]]: 35
//│ case y⁰ of {D bb⁰ => case bb⁰ of {D cc⁰ => c1(p12, cc⁰)}}: 16 --->
//│ 	[D p21]: 29
//│ 	[D [D [D p21]]]: 31
//│ 	[D [D p20]]: 34
//│ case bb¹ of {D cc¹ => id(p10, cc¹)}: 25 --->
//│ 	[D [D p21]]: 30
//│ 	[D p20]: 33
//│ 	[D [D [D p20]]]: 35
//│ case y¹ of {D bb¹ => case bb¹ of {D cc¹ => id(p10, cc¹)}}: 26 --->
//│ 	[D p21]: 29
//│ 	[D [D [D p21]]]: 31
//│ 	[D [D p20]]: 34
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ 
//│ ------------------
//│ 
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ c0(p10, p20)
//│ def c0(x³) = x³
//│ def c1(x⁴) = x⁴
//│ def id(x⁵) = x⁵
//│ def p10 = p11
//│ def p11(y²) = case y² of {
//│ 	D bb⁰ => case bb⁰ of {
//│ 		D cc⁰ => c1(p12, cc⁰)}}
//│ def p12(y³) = case y³ of {
//│ 	D bb¹ => case bb¹ of {
//│ 		D cc¹ => id(p10, cc¹)}}
//│ def p20 = [D [D [D p21]]]
//│ def p21 = [D [D [D p20]]]
//│ <<<<<<< after fusion <<<<<<<
