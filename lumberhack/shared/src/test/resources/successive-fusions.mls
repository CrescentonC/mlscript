:NewParser
:ParseOnly

fun f(x) = if x is
  N then K
  C(a) then primitive
if f(N) is
  K then 0
  L then 1
//│ |#fun| |f|(|x|)| |#=| |#if| |x| |is|→|N| |#then| |K|↵|C|(|a|)| |#then| |primitive|←|↵|#if| |f|(|N|)| |is|→|K| |#then| |0|↵|L| |#then| |1|←|
//│ Parsed: {fun f = x, => if x is ‹(N) then K; (C (a,)) then primitive›; if f (N,) is ‹(K) then 0; (L) then 1›}
//│ >>>>>>>>>> Original >>>>>>>>>>
//│ case f^6([N]) of {
//│ 	K  => 0
//│ 	| L  => 1}
//│ def f(x⁰) = case x⁰ of {
//│ 	N  => [K]
//│ 	| C a⁰ => primitive⁰}
//│ <<<<<<<<<< Original <<<<<<<<<<
//│ 
//│ >>>>>>> fusion matches >>>>>>>
//│ [K]: 2 --->
//│ 	case f([N]) of {K  => 0 | L  => 1}: 11
//│ [N]: 7 --->
//│ 	case x⁰ of {N  => [K] | C a⁰ => primitive⁰}: 4
//│ ------------------
//│ case x⁰ of {N  => [K] | C a⁰ => primitive⁰}: 4 --->
//│ 	[N]: 7
//│ case f([N]) of {K  => 0 | L  => 1}: 11 --->
//│ 	[K]: 2
//│ 	NoProd
//│ <<<<<<< fusion matches <<<<<<<
//│ 
//│ >>>>>>> new fusion strategy >>>>>>>
//│ [N]: 7 --->
//│ 	case x⁰ of {N  => [K] | C a⁰ => primitive⁰}: 4
//│ ------------------
//│ case x⁰ of {N  => [K] | C a⁰ => primitive⁰}: 4 --->
//│ 	[N]: 7
//│ <<<<<<< new fusion strategy <<<<<<<
//│ 
//│ >>>>>>> after fusion >>>>>>>
//│ case f([K]) of {
//│ 	K  => 0
//│ 	| L  => 1}
//│ def f(x¹) = x¹
//│ <<<<<<< after fusion <<<<<<<

