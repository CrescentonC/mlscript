From c1998f42c485dc793dfbaa484fb9d89775bb4f1f Mon Sep 17 00:00:00 2001
From: CrescentonC <43136427+CrescentonC@users.noreply.github.com>
Date: Sat, 18 Nov 2023 23:02:38 +0800
Subject: [PATCH] fix type of spectral/integer fix type of spectral/lambda fix
 type of spectral/cichelli fix type of spectral/constraints fix type of
 spectral/cryptarithm2 fix type of spectral/life fix type of spectral/mate fix
 type of spectral/minimax fix type of spectral/para fix type of
 spectral/rewrite

---
 .../Cichelli_nofib_lh/Module_original.ml      |  83 +++++------
 .../Constraints_nofib_lh/Module_original.ml   |  79 ++++++-----
 .../Cryptarithm2_nofib_lh/Module_original.ml  | 132 +++++++++---------
 .../Integer_nofib_lh/Module_original.ml       |  12 +-
 .../Lambda_nofib_lh/Module_original.ml        |  37 ++---
 .../Life_nofib_lh/Module_original.ml          |  16 +--
 .../Mate_nofib_lh/Module_original.ml          |  18 +--
 .../Minimax_nofib_lh/Module_original.ml       |  12 +-
 .../Para_nofib_lh/Module_original.ml          |  74 +++++-----
 .../Rewrite_nofib_lh/Module_original.ml       |  52 +++----
 10 files changed, 260 insertions(+), 255 deletions(-)

diff --git a/new-nofib-ocaml-gen/Cichelli_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Cichelli_nofib_lh/Module_original.ml
index a59f0541..32e7be63 100644
--- a/new-nofib-ocaml-gen/Cichelli_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Cichelli_nofib_lh/Module_original.ml
@@ -3,6 +3,21 @@
 open Lumherhack_Common.Lumherhack_Common;;
 open Lumberhack_LargeStr.Lumberhack_LargeStr;;
 module Module_original = struct
+type 'a lh_list = ([`LH_C of 'a * 'l | `LH_N] as 'l);;
+let rec map_lh f_0 ls_0 =
+  (match ls_0 with
+    | `LH_C(h_0, t_0) -> 
+      (`LH_C((f_0 h_0), ((map_lh f_0) t_0)))
+    | `LH_N -> 
+      (`LH_N));;
+let rec member_lh _lh_member_arg1_0 _lh_member_arg2_0 =
+  (match _lh_member_arg2_0 with
+    | `LH_N -> 
+      false
+    | `LH_C(_lh_member_LH_C_0_0, _lh_member_LH_C_1_0) -> 
+      ((_lh_member_arg1_0 = _lh_member_LH_C_0_0) || ((member_lh _lh_member_arg1_0) _lh_member_LH_C_1_0))
+    | _ -> 
+      (failwith "error"));;
 let rec all_lh _lh_all_arg1_0 _lh_all_arg2_0 =
   (match _lh_all_arg2_0 with
     | `LH_N -> 
@@ -68,6 +83,8 @@ let rec first_lh _lh_first_arg1_0 _lh_first_arg2_0 =
             (failwith "error")))
     | _ -> 
       (failwith "error"));;
+let firstSuccess_lh: ('a -> 'b) -> ('a lh_list) -> 'b = fun _lh_firstSuccess_arg1_0 _lh_firstSuccess_arg2_0 ->
+  ((first_lh 0) ((map_lh _lh_firstSuccess_arg1_0) _lh_firstSuccess_arg2_0));;
 let rec foldr_lh f_1 i_0 ls_1 =
   (match ls_1 with
     | `LH_C(h_1, t_1) -> 
@@ -82,7 +99,7 @@ let rec head_lh ls_2 =
       h_2
     | `LH_N -> 
       (failwith "error"));;
-let rec histins_lh _lh_histins_arg1_0 _lh_histins_arg2_0 =
+let rec histins_lh: 'a -> ([`LH_P2 of 'a * int] lh_list) -> ([`LH_P2 of 'a * int] lh_list) = fun _lh_histins_arg1_0 _lh_histins_arg2_0 ->
   (match _lh_histins_arg2_0 with
     | `LH_N -> 
       (`LH_C((`LH_P2(_lh_histins_arg1_0, 1)), (`LH_N)))
@@ -97,6 +114,11 @@ let rec histins_lh _lh_histins_arg1_0 _lh_histins_arg2_0 =
           (failwith "error"))
     | _ -> 
       (failwith "error"));;
+let rec histo_lh: ('a lh_list) -> [`LH_P2 of 'a * int] lh_list = fun _lh_histo_arg1_0 ->
+  (((foldr_lh histins_lh) (`LH_N)) _lh_histo_arg1_0);;
+let subset_lh: 'a lh_list -> 'a lh_list -> bool = fun _lh_subset_arg1_0 _lh_subset_arg2_0 ->
+  ((all_lh (fun x_1 -> 
+    ((member_lh x_1) _lh_subset_arg2_0))) _lh_subset_arg1_0);;
 let rec keys_lh _lh_keys_arg1_0 =
   (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('p', (`LH_C('l', (`LH_C('e', (`LH_N))))))))))), (`LH_C((`LH_C('b', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_C('n', (`LH_C('a', (`LH_N))))))))))))), (`LH_C((`LH_C('p', (`LH_C('e', (`LH_C('a', (`LH_C('c', (`LH_C('h', (`LH_N))))))))))), (`LH_C((`LH_C('a', (`LH_C('p', (`LH_C('r', (`LH_C('i', (`LH_C('c', (`LH_C('o', (`LH_C('t', (`LH_N))))))))))))))), (`LH_N)))))))));;
 let rec last_lh _lh_last_arg1_0 =
@@ -119,31 +141,34 @@ let rec length_lh ls_4 =
       (1 + (length_lh t_4))
     | `LH_N -> 
       0);;
-let rec map_lh f_0 ls_0 =
-  (match ls_0 with
-    | `LH_C(h_0, t_0) -> 
-      (`LH_C((f_0 h_0), ((map_lh f_0) t_0)))
-    | `LH_N -> 
-      (`LH_N));;
 let rec mappend_lh xs_0 ys_0 =
   (match xs_0 with
     | `LH_C(h_5, t_5) -> 
       (`LH_C(h_5, ((mappend_lh t_5) ys_0)))
     | `LH_N -> 
       ys_0);;
+let union_lh: 'a lh_list -> 'a lh_list -> 'a lh_list = fun _lh_union_arg1_0 _lh_union_arg2_0 ->
+  ((mappend_lh _lh_union_arg1_0) (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
+    (match _lh_listcomp_fun_para_0 with
+      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
+        (if (not ((member_lh _lh_listcomp_fun_ls_h_0) _lh_union_arg1_0)) then
+          (`LH_C(_lh_listcomp_fun_ls_h_0, (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
+        else
+          (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))
+      | `LH_N -> 
+        (`LH_N))) in
+    (_lh_listcomp_fun_0 _lh_union_arg2_0)));;
+let rec concat_lh: (('a lh_list) lh_list) -> ('a lh_list) = fun lss_0 ->
+  (match lss_0 with
+    | `LH_C(h_6, t_6) -> 
+      ((mappend_lh h_6) (concat_lh t_6))
+    | `LH_N -> 
+      (`LH_N));;
 let rec max_lh _lh_max_arg1_0 _lh_max_arg2_0 =
   (if (_lh_max_arg1_0 > _lh_max_arg2_0) then
     _lh_max_arg1_0
   else
     _lh_max_arg2_0);;
-let rec member_lh _lh_member_arg1_0 _lh_member_arg2_0 =
-  (match _lh_member_arg2_0 with
-    | `LH_N -> 
-      false
-    | `LH_C(_lh_member_LH_C_0_0, _lh_member_LH_C_1_0) -> 
-      ((_lh_member_arg1_0 = _lh_member_LH_C_0_0) || ((member_lh _lh_member_arg1_0) _lh_member_LH_C_1_0))
-    | _ -> 
-      (failwith "error"));;
 let rec min_lh _lh_min_arg1_0 _lh_min_arg2_0 =
   (if (_lh_min_arg1_0 < _lh_min_arg2_0) then
     _lh_min_arg1_0
@@ -158,6 +183,8 @@ let rec select_lh _lh_select_arg1_0 _lh_select_arg2_0 _lh_select_arg3_0 =
         (`LH_P2(_lh_select_LH_P2_0_0, (`LH_C(_lh_select_arg2_0, _lh_select_LH_P2_1_0)))))
     | _ -> 
       (failwith "error"));;
+let partition'_lh: ('a -> bool) -> ([`LH_C of 'a * 'b | `LH_N] as 'b) -> [`LH_P2 of ([`LH_C of 'a * 'b | `LH_N] as 'b) * ([`LH_C of 'a * 'b | `LH_N] as 'b)] = fun _lh_partition'_arg1_0 ->
+  ((foldr_lh (select_lh _lh_partition'_arg1_0)) (`LH_P2((`LH_N), (`LH_N))));;
 let rec take_lh n_0 ls_3 =
   (if (n_0 > 0) then
     (match ls_3 with
@@ -192,12 +219,6 @@ and cichelli_lh _lh_cichelli_arg1_0 =
     (let rec hashkeys_0 = ((fun _lh_funcomp_x_0 -> 
       (blocked_lh (freqsorted_lh _lh_funcomp_x_0))) attribkeys'_0) in
       (findhash_lh hashkeys_0)))
-and concat_lh lss_0 =
-  (match lss_0 with
-    | `LH_C(h_6, t_6) -> 
-      ((mappend_lh h_6) (concat_lh t_6))
-    | `LH_N -> 
-      (`LH_N))
 and findhash'_lh _lh_findhash'_arg1_0 _lh_findhash'_arg2_0 _lh_findhash'_arg3_0 =
   (match _lh_findhash'_arg3_0 with
     | `LH_N -> 
@@ -270,8 +291,6 @@ and findhash'_lh _lh_findhash'_arg1_0 _lh_findhash'_arg2_0 _lh_findhash'_arg3_0
       (failwith "error"))
 and findhash_lh _lh_findhash_arg1_0 =
   (((findhash'_lh (`H((`Nothing), (`Nothing), (`LH_N)))) (`LH_N)) _lh_findhash_arg1_0)
-and firstSuccess_lh _lh_firstSuccess_arg1_0 _lh_firstSuccess_arg2_0 =
-  ((first_lh 0) ((map_lh _lh_firstSuccess_arg1_0) _lh_firstSuccess_arg2_0))
 and freqtab_lh _lh_freqtab_arg1_0 =
   (histo_lh (concat_lh ((map_lh ends_lh) (attribkeys_lh (keys_lh 0)))))
 and hash_lh _lh_hash_arg1_0 _lh_hash_arg2_0 =
@@ -291,8 +310,6 @@ and hinsert_lh _lh_hinsert_arg1_0 _lh_hinsert_arg2_0 =
             (`Just((`H((`Just(lo'_0)), (`Just(hi'_0)), (`LH_C(_lh_hinsert_arg1_0, _lh_hinsert_H_2_0)))))))))
     | _ -> 
       (failwith "error"))
-and histo_lh _lh_histo_arg1_0 =
-  (((foldr_lh histins_lh) (`LH_N)) _lh_histo_arg1_0)
 and maxm_lh _lh_maxm_arg1_0 _lh_maxm_arg2_0 =
   (match _lh_maxm_arg1_0 with
     | `Nothing -> 
@@ -309,25 +326,9 @@ and minm_lh _lh_minm_arg1_0 _lh_minm_arg2_0 =
       ((min_lh _lh_minm_Just_0_0) _lh_minm_arg2_0)
     | _ -> 
       (failwith "error"))
-and partition'_lh _lh_partition'_arg1_0 =
-  ((foldr_lh (select_lh _lh_partition'_arg1_0)) (`LH_P2((`LH_N), (`LH_N))))
 and prog_lh _lh_prog_arg1_0 =
   (cichelli_lh _lh_prog_arg1_0)
-and subset_lh _lh_subset_arg1_0 _lh_subset_arg2_0 =
-  ((all_lh (fun x_1 -> 
-    ((member_lh x_1) _lh_subset_arg2_0))) _lh_subset_arg1_0)
 and testCichelli_nofib_lh _lh_testCichelli_nofib_arg1_0 =
   (prog_lh _lh_testCichelli_nofib_arg1_0)
-and union_lh _lh_union_arg1_0 _lh_union_arg2_0 =
-  ((mappend_lh _lh_union_arg1_0) (let rec _lh_listcomp_fun_0 = (fun _lh_listcomp_fun_para_0 -> 
-    (match _lh_listcomp_fun_para_0 with
-      | `LH_C(_lh_listcomp_fun_ls_h_0, _lh_listcomp_fun_ls_t_0) -> 
-        (if (not ((member_lh _lh_listcomp_fun_ls_h_0) _lh_union_arg1_0)) then
-          (`LH_C(_lh_listcomp_fun_ls_h_0, (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0)))
-        else
-          (_lh_listcomp_fun_0 _lh_listcomp_fun_ls_t_0))
-      | `LH_N -> 
-        (`LH_N))) in
-    (_lh_listcomp_fun_0 _lh_union_arg2_0)));;
 end;;
 
diff --git a/new-nofib-ocaml-gen/Constraints_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Constraints_nofib_lh/Module_original.ml
index 56d04d4a..2340701b 100644
--- a/new-nofib-ocaml-gen/Constraints_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Constraints_nofib_lh/Module_original.ml
@@ -3,6 +3,8 @@
 open Lumherhack_Common.Lumherhack_Common;;
 open Lumberhack_LargeStr.Lumberhack_LargeStr;;
 module Module_original = struct
+type 'a lh_list = [`LH_C of 'a * 'l | `LH_N] as 'l
+type 'a lh_tree = [`Node of 'a * ('t lh_list)] as 't
 let rec abs_lh _lh_abs_arg1_0 =
   (if (_lh_abs_arg1_0 > 0) then
     _lh_abs_arg1_0
@@ -126,6 +128,45 @@ let rec mappend_lh xs_1 ys_1 =
       (`LH_C(h_6, ((mappend_lh t_6) ys_1)))
     | `LH_N -> 
       ys_1);;
+let rec concat_lh: (('a lh_list) lh_list) -> ('a lh_list) = fun lss_0 ->
+  (match lss_0 with
+    | `LH_C(h_8, t_8) -> 
+      ((mappend_lh h_8) (concat_lh t_8))
+    | `LH_N -> 
+            (`LH_N));;
+let rec mapTree_lh: ('a -> 'b) -> ('a lh_tree -> 'b lh_tree) = fun _lh_mapTree_arg1_0 _lh_mapTree_arg2_0 ->
+  (match _lh_mapTree_arg2_0 with
+    | `Node(_lh_mapTree_Node_0_0, _lh_mapTree_Node_1_0) -> 
+      (`Node((_lh_mapTree_arg1_0 _lh_mapTree_Node_0_0), ((map_lh (mapTree_lh _lh_mapTree_arg1_0)) _lh_mapTree_Node_1_0)))
+    | _ -> 
+      (failwith "error"));;
+let rec foldTree_lh: ('a -> ('b lh_list) -> 'b) -> ('a lh_tree) -> 'b = fun _lh_foldTree_arg1_0 _lh_foldTree_arg2_0 ->
+  (match _lh_foldTree_arg2_0 with
+    | `Node(_lh_foldTree_Node_0_0, _lh_foldTree_Node_1_0) -> 
+      ((_lh_foldTree_arg1_0 _lh_foldTree_Node_0_0) ((map_lh (foldTree_lh _lh_foldTree_arg1_0)) _lh_foldTree_Node_1_0))
+    | _ -> 
+      (failwith "error"));;
+let filterTree_lh: ('a -> bool) -> ('a lh_tree -> 'a lh_tree) = fun _lh_filterTree_arg1_0 ->
+  (let rec f_8 = (fun a_3 cs_0 -> 
+    (`Node(a_3, ((filter_lh (fun _lh_funcomp_x_8 -> 
+      (_lh_filterTree_arg1_0 (label_lh _lh_funcomp_x_8)))) cs_0)))) in
+    (foldTree_lh f_8));;
+let rec initTree_lh: ('a -> 'a lh_list) -> 'a -> ('a lh_tree) = fun _lh_initTree_arg1_0 _lh_initTree_arg2_0 ->
+  (`Node(_lh_initTree_arg2_0, ((map_lh (initTree_lh _lh_initTree_arg1_0)) (_lh_initTree_arg1_0 _lh_initTree_arg2_0))));;
+let prune_lh: ('a -> bool) -> ('a lh_tree -> 'a lh_tree) = fun _lh_prune_arg1_0 ->
+  (filterTree_lh (fun _lh_funcomp_x_2 -> 
+    (not (_lh_prune_arg1_0 _lh_funcomp_x_2))));;
+let rec leaves_lh: 'a lh_tree -> 'a lh_list = fun _lh_leaves_arg1_0 ->
+  (match _lh_leaves_arg1_0 with
+    | `Node(_lh_leaves_Node_0_0, _lh_leaves_Node_1_0) -> 
+      (match _lh_leaves_Node_1_0 with
+        | `LH_N -> 
+          (`LH_C(_lh_leaves_Node_0_0, (`LH_N)))
+        | _ -> 
+          (concat_lh ((map_lh leaves_lh) _lh_leaves_Node_1_0)))
+    | _ -> 
+      (failwith "error"));;
+
 let rec maxLevel_lh _lh_maxLevel_arg1_0 =
   (match _lh_maxLevel_arg1_0 with
     | `LH_N -> 
@@ -293,12 +334,6 @@ and complete_lh _lh_complete_arg1_0 _lh_complete_arg2_0 =
       ((maxLevel_lh _lh_complete_arg2_0) = _lh_complete_CSP_0_0)
     | _ -> 
       (failwith "error"))
-and concat_lh lss_0 =
-  (match lss_0 with
-    | `LH_C(h_8, t_8) -> 
-      ((mappend_lh h_8) (concat_lh t_8))
-    | `LH_N -> 
-      (`LH_N))
 and domainWipeOut_lh _lh_domainWipeOut_arg1_0 _lh_domainWipeOut_arg2_0 =
   (match _lh_domainWipeOut_arg1_0 with
     | `CSP(_lh_domainWipeOut_CSP_0_0, _lh_domainWipeOut_CSP_1_0, _lh_domainWipeOut_CSP_2_0) -> 
@@ -408,29 +443,6 @@ and fillTable_lh _lh_fillTable_arg1_0 _lh_fillTable_arg2_0 _lh_fillTable_arg3_0
           (failwith "error"))
     | _ -> 
       (failwith "error"))
-and filterTree_lh _lh_filterTree_arg1_0 =
-  (let rec f_8 = (fun a_3 cs_0 -> 
-    (`Node(a_3, ((filter_lh (fun _lh_funcomp_x_8 -> 
-      (_lh_filterTree_arg1_0 (label_lh _lh_funcomp_x_8)))) cs_0)))) in
-    (foldTree_lh f_8))
-and foldTree_lh _lh_foldTree_arg1_0 _lh_foldTree_arg2_0 =
-  (match _lh_foldTree_arg2_0 with
-    | `Node(_lh_foldTree_Node_0_0, _lh_foldTree_Node_1_0) -> 
-      ((_lh_foldTree_arg1_0 _lh_foldTree_Node_0_0) ((map_lh (foldTree_lh _lh_foldTree_arg1_0)) _lh_foldTree_Node_1_0))
-    | _ -> 
-      (failwith "error"))
-and initTree_lh _lh_initTree_arg1_0 _lh_initTree_arg2_0 =
-  (`Node(_lh_initTree_arg2_0, ((map_lh (initTree_lh _lh_initTree_arg1_0)) (_lh_initTree_arg1_0 _lh_initTree_arg2_0))))
-and leaves_lh _lh_leaves_arg1_0 =
-  (match _lh_leaves_arg1_0 with
-    | `Node(_lh_leaves_Node_0_0, _lh_leaves_Node_1_0) -> 
-      (match _lh_leaves_Node_1_0 with
-        | `LH_N -> 
-          (`LH_C(_lh_leaves_Node_0_0, (`LH_N)))
-        | _ -> 
-          (concat_lh ((map_lh leaves_lh) _lh_leaves_Node_1_0)))
-    | _ -> 
-      (failwith "error"))
 and lookupCache_lh _lh_lookupCache_arg1_0 _lh_lookupCache_arg2_0 =
   (let rec f_1_0 = (fun _lh_f_arg1_3 _lh_f_arg2_2 -> 
     (match _lh_f_arg2_2 with
@@ -450,12 +462,6 @@ and lookupCache_lh _lh_lookupCache_arg1_0 _lh_lookupCache_arg2_0 =
       | _ -> 
         (failwith "error"))) in
     ((mapTree_lh (f_1_0 _lh_lookupCache_arg1_0)) _lh_lookupCache_arg2_0))
-and mapTree_lh _lh_mapTree_arg1_0 _lh_mapTree_arg2_0 =
-  (match _lh_mapTree_arg2_0 with
-    | `Node(_lh_mapTree_Node_0_0, _lh_mapTree_Node_1_0) -> 
-      (`Node((_lh_mapTree_arg1_0 _lh_mapTree_Node_0_0), ((map_lh (mapTree_lh _lh_mapTree_arg1_0)) _lh_mapTree_Node_1_0)))
-    | _ -> 
-      (failwith "error"))
 and mkTree_lh _lh_mkTree_arg1_0 =
   (match _lh_mkTree_arg1_0 with
     | `CSP(_lh_mkTree_CSP_0_0, _lh_mkTree_CSP_1_0, _lh_mkTree_CSP_2_0) -> 
@@ -482,9 +488,6 @@ and nubBy_lh _lh_nubBy_arg1_0 _lh_nubBy_arg2_0 =
         (not ((_lh_nubBy_arg1_0 _lh_nubBy_LH_C_0_0) y_0)))) _lh_nubBy_LH_C_1_0))))
     | _ -> 
       (failwith "error"))
-and prune_lh _lh_prune_arg1_0 =
-  (filterTree_lh (fun _lh_funcomp_x_2 -> 
-    (not (_lh_prune_arg1_0 _lh_funcomp_x_2))))
 and queens_lh _lh_queens_arg1_0 =
   (`CSP(_lh_queens_arg1_0, _lh_queens_arg1_0, safe_lh))
 and reverse_lh ls_7 =
diff --git a/new-nofib-ocaml-gen/Cryptarithm2_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Cryptarithm2_nofib_lh/Module_original.ml
index 9652ca48..a004512b 100644
--- a/new-nofib-ocaml-gen/Cryptarithm2_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Cryptarithm2_nofib_lh/Module_original.ml
@@ -104,6 +104,28 @@ let rec mappend_lh xs_0 ys_0 =
       (`LH_C(h_5, ((mappend_lh t_5) ys_0)))
     | `LH_N -> 
       ys_0);;
+let rec concat_lh lss_0 =
+  (match lss_0 with
+    | `LH_C(h_7, t_7) -> 
+      ((mappend_lh h_7) (concat_lh t_7))
+    | `LH_N -> 
+      (`LH_N));;
+let unlines_lh _lh_unlines_arg1_0 =
+  (concat_lh ((map_lh (fun l_0 -> 
+    ((mappend_lh l_0) (`LH_C('n', (`LH_N)))))) _lh_unlines_arg1_0));;
+let unzip_lh _lh_unzip_arg1_0 =
+  (((foldr_lh (fun ab_0 asbs_0 -> 
+    (let rec _lh_matchIdent_0 = ab_0 in
+      (match _lh_matchIdent_0 with
+        | `LH_P2(_lh_unzip_LH_P2_0_0, _lh_unzip_LH_P2_1_0) -> 
+          (let rec _lh_matchIdent_1 = asbs_0 in
+            (match _lh_matchIdent_1 with
+              | `LH_P2(_lh_unzip_LH_P2_0_1, _lh_unzip_LH_P2_1_1) -> 
+                (`LH_P2((`LH_C(_lh_unzip_LH_P2_0_0, _lh_unzip_LH_P2_0_1)), (`LH_C(_lh_unzip_LH_P2_1_0, _lh_unzip_LH_P2_1_1))))
+              | _ -> 
+                (failwith "error")))
+        | _ -> 
+          (failwith "error"))))) (`LH_P2((`LH_N), (`LH_N)))) _lh_unzip_arg1_0);;
 let rec put_lh _lh_put_arg1_0 =
   (`StateT((fun s_3 -> 
     (`LH_C((`LH_P2((`Unit), _lh_put_arg1_0)), (`LH_N))))));;
@@ -144,7 +166,38 @@ let rec sum_lh _lh_sum_arg1_0 =
       (_lh_sum_LH_C_0_0 + (sum_lh _lh_sum_LH_C_1_0))
     | _ -> 
       (failwith "error"));;
-let rec bind_lh _lh_bind_arg1_0 _lh_bind_arg2_0 =
+let rec transpose_lh _lh_transpose_arg1_0 =
+  (match _lh_transpose_arg1_0 with
+    | `LH_N -> 
+      (`LH_N)
+    | `LH_C(_lh_transpose_LH_C_0_0, _lh_transpose_LH_C_1_0) -> 
+      (match _lh_transpose_LH_C_0_0 with
+        | `LH_N -> 
+          (transpose_lh _lh_transpose_LH_C_1_0)
+        | `LH_C(_lh_transpose_LH_C_0_1, _lh_transpose_LH_C_1_1) -> 
+          (let rec _lh_matchIdent_8 = (unzip_lh (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
+            (match _lh_listcomp_fun_para_3 with
+              | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
+                (match _lh_listcomp_fun_ls_h_3 with
+                  | `LH_C(_lh_transpose_LH_C_0_2, _lh_transpose_LH_C_1_2) -> 
+                    (`LH_C((`LH_P2(_lh_transpose_LH_C_0_2, _lh_transpose_LH_C_1_2)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
+                  | _ -> 
+                    (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3))
+              | `LH_N -> 
+                (`LH_N))) in
+            (_lh_listcomp_fun_3 _lh_transpose_LH_C_1_0))) in
+            (match _lh_matchIdent_8 with
+              | `LH_P2(_lh_transpose_LH_P2_0_0, _lh_transpose_LH_P2_1_0) -> 
+                ((((combine_lh _lh_transpose_LH_C_0_1) _lh_transpose_LH_P2_0_0) _lh_transpose_LH_C_1_1) _lh_transpose_LH_P2_1_0)
+              | _ -> 
+                (failwith "error")))
+        | _ -> 
+          (failwith "error"))
+    | _ -> 
+      (failwith "error"))
+and combine_lh _lh_combine_arg1_0 _lh_combine_arg2_0 _lh_combine_arg3_0 _lh_combine_arg4_0 =
+  (`LH_C((`LH_C(_lh_combine_arg1_0, _lh_combine_arg2_0)), (transpose_lh (`LH_C(_lh_combine_arg3_0, _lh_combine_arg4_0)))));;
+let bind_lh _lh_bind_arg1_0 _lh_bind_arg2_0 =
   (`StateT((fun s_2 -> 
     (concat_lh ((map_lh (fun as_0 -> 
       (let rec _lh_matchIdent_7 = as_0 in
@@ -152,35 +205,27 @@ let rec bind_lh _lh_bind_arg1_0 _lh_bind_arg2_0 =
           | `LH_P2(_lh_bind_LH_P2_0_0, _lh_bind_LH_P2_1_0) -> 
             ((runStateT_lh (_lh_bind_arg2_0 _lh_bind_LH_P2_0_0)) _lh_bind_LH_P2_1_0)
           | _ -> 
-            (failwith "error"))))) ((runStateT_lh _lh_bind_arg1_0) s_2))))))
-and combine_lh _lh_combine_arg1_0 _lh_combine_arg2_0 _lh_combine_arg3_0 _lh_combine_arg4_0 =
-  (`LH_C((`LH_C(_lh_combine_arg1_0, _lh_combine_arg2_0)), (transpose_lh (`LH_C(_lh_combine_arg3_0, _lh_combine_arg4_0)))))
-and concat_lh lss_0 =
-  (match lss_0 with
-    | `LH_C(h_7, t_7) -> 
-      ((mappend_lh h_7) (concat_lh t_7))
-    | `LH_N -> 
-      (`LH_N))
-and execStateT_lh _lh_execStateT_arg1_0 _lh_execStateT_arg2_0 =
+            (failwith "error"))))) ((runStateT_lh _lh_bind_arg1_0) s_2))))));;
+let execStateT_lh _lh_execStateT_arg1_0 _lh_execStateT_arg2_0 =
   (concat_lh ((map_lh (fun x_1 -> 
     (let rec _lh_matchIdent_4 = x_1 in
       (match _lh_matchIdent_4 with
         | `LH_P2(_lh_execStateT_LH_P2_0_0, _lh_execStateT_LH_P2_1_0) -> 
           (`LH_C(_lh_execStateT_LH_P2_1_0, (`LH_N)))
         | _ -> 
-          (failwith "error"))))) ((runStateT_lh _lh_execStateT_arg1_0) _lh_execStateT_arg2_0)))
-and lift_lh _lh_lift_arg1_0 =
+          (failwith "error"))))) ((runStateT_lh _lh_execStateT_arg1_0) _lh_execStateT_arg2_0)));;
+let lift_lh _lh_lift_arg1_0 =
   (`StateT((fun s_1 -> 
     (concat_lh ((map_lh (fun x_2 -> 
-      (`LH_C((`LH_P2(x_2, s_1)), (`LH_N))))) _lh_lift_arg1_0)))))
-and listDiff_lh =
-  (foldl_lh delete_lh)
-and mapM_lh _lh_mapM_arg1_0 _lh_mapM_arg2_0 =
+      (`LH_C((`LH_P2(x_2, s_1)), (`LH_N))))) _lh_lift_arg1_0)))));;
+let listDiff_lh =
+  (foldl_lh delete_lh);;
+let mapM_lh _lh_mapM_arg1_0 _lh_mapM_arg2_0 =
   (((foldr_lh (fun a_2 r_0 -> 
     ((bind_lh (_lh_mapM_arg1_0 a_2)) (fun x_0 -> 
       ((bind_lh r_0) (fun xs_1 -> 
-        (return_lh (`LH_C(x_0, xs_1))))))))) (return_lh (`LH_N))) _lh_mapM_arg2_0)
-and nub_lh _lh_nub_arg1_0 =
+        (return_lh (`LH_C(x_0, xs_1))))))))) (return_lh (`LH_N))) _lh_mapM_arg2_0);;
+let rec nub_lh _lh_nub_arg1_0 =
   (match _lh_nub_arg1_0 with
     | `LH_N -> 
       (`LH_N)
@@ -188,8 +233,8 @@ and nub_lh _lh_nub_arg1_0 =
       (`LH_C(_lh_nub_LH_C_0_0, (nub_lh ((filter_lh (fun y_0 -> 
         (not (_lh_nub_LH_C_0_0 = y_0)))) _lh_nub_LH_C_1_0))))
     | _ -> 
-      (failwith "error"))
-and permute_lh _lh_permute_arg1_0 =
+      (failwith "error"));;
+let rec permute_lh _lh_permute_arg1_0 =
   ((bind_lh get_lh) (fun st_1 -> 
     ((bind_lh (let rec xs_2 = (digits_lh st_1) in
       (lift_lh (let rec _lh_listcomp_fun_2 = (fun _lh_listcomp_fun_para_2 -> 
@@ -298,50 +343,5 @@ and testCryptarithm2_nofib_lh _lh_testCryptarithm2_nofib_arg1_0 =
     else
       (`LH_N))), (`LH_N))))))))))))) in
       ((puzzle_lh args_0) (`LH_C('N', (`LH_C('I', (`LH_C('N', (`LH_C('E', (`LH_C('T', (`LH_C('Y', (`LH_N))))))))))))))))) ((enumFromTo_lh 1) _lh_testCryptarithm2_nofib_arg1_0))
-and transpose_lh _lh_transpose_arg1_0 =
-  (match _lh_transpose_arg1_0 with
-    | `LH_N -> 
-      (`LH_N)
-    | `LH_C(_lh_transpose_LH_C_0_0, _lh_transpose_LH_C_1_0) -> 
-      (match _lh_transpose_LH_C_0_0 with
-        | `LH_N -> 
-          (transpose_lh _lh_transpose_LH_C_1_0)
-        | `LH_C(_lh_transpose_LH_C_0_1, _lh_transpose_LH_C_1_1) -> 
-          (let rec _lh_matchIdent_8 = (unzip_lh (let rec _lh_listcomp_fun_3 = (fun _lh_listcomp_fun_para_3 -> 
-            (match _lh_listcomp_fun_para_3 with
-              | `LH_C(_lh_listcomp_fun_ls_h_3, _lh_listcomp_fun_ls_t_3) -> 
-                (match _lh_listcomp_fun_ls_h_3 with
-                  | `LH_C(_lh_transpose_LH_C_0_2, _lh_transpose_LH_C_1_2) -> 
-                    (`LH_C((`LH_P2(_lh_transpose_LH_C_0_2, _lh_transpose_LH_C_1_2)), (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3)))
-                  | _ -> 
-                    (_lh_listcomp_fun_3 _lh_listcomp_fun_ls_t_3))
-              | `LH_N -> 
-                (`LH_N))) in
-            (_lh_listcomp_fun_3 _lh_transpose_LH_C_1_0))) in
-            (match _lh_matchIdent_8 with
-              | `LH_P2(_lh_transpose_LH_P2_0_0, _lh_transpose_LH_P2_1_0) -> 
-                ((((combine_lh _lh_transpose_LH_C_0_1) _lh_transpose_LH_P2_0_0) _lh_transpose_LH_C_1_1) _lh_transpose_LH_P2_1_0)
-              | _ -> 
-                (failwith "error")))
-        | _ -> 
-          (failwith "error"))
-    | _ -> 
-      (failwith "error"))
-and unlines_lh _lh_unlines_arg1_0 =
-  (concat_lh ((map_lh (fun l_0 -> 
-    ((mappend_lh l_0) (`LH_C('n', (`LH_N)))))) _lh_unlines_arg1_0))
-and unzip_lh _lh_unzip_arg1_0 =
-  (((foldr_lh (fun ab_0 asbs_0 -> 
-    (let rec _lh_matchIdent_0 = ab_0 in
-      (match _lh_matchIdent_0 with
-        | `LH_P2(_lh_unzip_LH_P2_0_0, _lh_unzip_LH_P2_1_0) -> 
-          (let rec _lh_matchIdent_1 = asbs_0 in
-            (match _lh_matchIdent_1 with
-              | `LH_P2(_lh_unzip_LH_P2_0_1, _lh_unzip_LH_P2_1_1) -> 
-                (`LH_P2((`LH_C(_lh_unzip_LH_P2_0_0, _lh_unzip_LH_P2_0_1)), (`LH_C(_lh_unzip_LH_P2_1_0, _lh_unzip_LH_P2_1_1))))
-              | _ -> 
-                (failwith "error")))
-        | _ -> 
-          (failwith "error"))))) (`LH_P2((`LH_N), (`LH_N)))) _lh_unzip_arg1_0);;
 end;;
 
diff --git a/new-nofib-ocaml-gen/Integer_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Integer_nofib_lh/Module_original.ml
index d4fc209b..418aba91 100644
--- a/new-nofib-ocaml-gen/Integer_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Integer_nofib_lh/Module_original.ml
@@ -36,7 +36,10 @@ and integerbench_lh _lh_integerbench_arg1_0 _lh_integerbench_arg2_0 _lh_integerb
       | `LH_N -> 
         (`LH_N))) in
     (_lh_listcomp_fun_2 (((enumFromThenTo_lh _lh_integerbench_arg2_0) (_lh_integerbench_arg2_0 + _lh_integerbench_arg3_0)) _lh_integerbench_arg4_0)))
-and runalltests_lh _lh_runalltests_arg1_0 _lh_runalltests_arg2_0 _lh_runalltests_arg3_0 _lh_runalltests_arg4_0 _lh_runalltests_arg5_0 _lh_runalltests_arg6_0 =
+let runbench_lh: (int -> int -> 'a) -> (int -> int -> 'a) -> ([`LH_C of char * 'b | `LH_N] as 'b) -> int -> int -> int -> int -> int -> int -> int = fun _lh_runbench_arg1_0 _lh_runbench_arg2_0 _lh_runbench_arg3_0 _lh_runbench_arg4_0 _lh_runbench_arg5_0 _lh_runbench_arg6_0 _lh_runbench_arg7_0 _lh_runbench_arg8_0 _lh_runbench_arg9_0 ->
+  (let rec _dum_0 = (`LH_P2((((((((intbench_lh _lh_runbench_arg2_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0), (((((((integerbench_lh _lh_runbench_arg1_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0))) in
+    0);;
+let runalltests_lh _lh_runalltests_arg1_0 _lh_runalltests_arg2_0 _lh_runalltests_arg3_0 _lh_runalltests_arg4_0 _lh_runalltests_arg5_0 _lh_runalltests_arg6_0 =
   (`LH_C((((((((((runbench_lh (fun a_1 b_1 -> 
     (a_1 + b_1))) (fun a_2 b_2 -> 
     (a_2 + b_2))) (`LH_C('(', (`LH_C('+', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh (fun a_3 b_3 -> 
@@ -57,11 +60,8 @@ and runalltests_lh _lh_runalltests_arg1_0 _lh_runalltests_arg2_0 _lh_runalltests
     (a_1_7 > b_1_7))) (fun a_1_8 b_1_8 -> 
     (a_1_8 > b_1_8))) (`LH_C('(', (`LH_C('>', (`LH_C(')', (`LH_N)))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_C((((((((((runbench_lh (fun a_1_9 b_1_9 -> 
     (a_1_9 >= b_1_9))) (fun a_2_0 b_2_0 -> 
-    (a_2_0 >= b_2_0))) (`LH_C('(', (`LH_C('>', (`LH_C('=', (`LH_C(')', (`LH_N)))))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_N)))))))))))))))))))))
-and runbench_lh _lh_runbench_arg1_0 _lh_runbench_arg2_0 _lh_runbench_arg3_0 _lh_runbench_arg4_0 _lh_runbench_arg5_0 _lh_runbench_arg6_0 _lh_runbench_arg7_0 _lh_runbench_arg8_0 _lh_runbench_arg9_0 =
-  (let rec _dum_0 = (`LH_P2((((((((intbench_lh _lh_runbench_arg2_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0), (((((((integerbench_lh _lh_runbench_arg1_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0) _lh_runbench_arg4_0) _lh_runbench_arg5_0) _lh_runbench_arg6_0))) in
-    0)
-and testInteger_nofib_lh _lh_testInteger_nofib_arg1_0 =
+    (a_2_0 >= b_2_0))) (`LH_C('(', (`LH_C('>', (`LH_C('=', (`LH_C(')', (`LH_N)))))))))) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0) _lh_runalltests_arg1_0) _lh_runalltests_arg2_0) _lh_runalltests_arg3_0), (`LH_N)))))))))))))))))))));;
+let testInteger_nofib_lh _lh_testInteger_nofib_arg1_0 =
   ((((((runalltests_lh (0 - _lh_testInteger_nofib_arg1_0)) 31) (0 + _lh_testInteger_nofib_arg1_0)) (0 - _lh_testInteger_nofib_arg1_0)) 31) (0 + _lh_testInteger_nofib_arg1_0));;
 end;;
 
diff --git a/new-nofib-ocaml-gen/Lambda_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Lambda_nofib_lh/Module_original.ml
index f97618d2..f8faf853 100644
--- a/new-nofib-ocaml-gen/Lambda_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Lambda_nofib_lh/Module_original.ml
@@ -3,6 +3,7 @@
 open Lumherhack_Common.Lumherhack_Common;;
 open Lumberhack_LargeStr.Lumberhack_LargeStr;;
 module Module_original = struct
+type ('s, 'a) lh_state = [`MyState of 's -> [`LH_P2 of 's * 'a]]
 let rec eqList_lh _lh_eqList_arg1_0 _lh_eqList_arg2_0 =
   (match _lh_eqList_arg1_0 with
     | `LH_N -> 
@@ -66,6 +67,23 @@ let rec null_lh _lh_null_arg1_0 =
       false
     | _ -> 
       (failwith "error"));;
+let myBind_lh: ('s, 'a) lh_state -> ('a -> (('s, 'b) lh_state)) -> (('s, 'b) lh_state) = fun _lh_myBind_arg1_0 _lh_myBind_arg2_0 ->
+  (`MyState((fun s_1 -> 
+    (let rec _lh_matchIdent_4 = ((myRunState_lh _lh_myBind_arg1_0) s_1) in
+      (match _lh_matchIdent_4 with
+        | `LH_P2(_lh_myBind_LH_P2_0_0, _lh_myBind_LH_P2_1_0) -> 
+          ((myRunState_lh (_lh_myBind_arg2_0 _lh_myBind_LH_P2_1_0)) _lh_myBind_LH_P2_0_0)
+        | _ -> 
+          (failwith "error"))))));;
+let myEvalState_lh: ('s, 'a) lh_state -> 'a -> 'a = fun _lh_myEvalState_arg1_0 _lh_myEvalState_arg2_0 ->
+  (let rec _lh_matchIdent_1 = ((myRunState_lh _lh_myEvalState_arg1_0) _lh_myEvalState_arg2_0) in
+    (match _lh_matchIdent_1 with
+      | `LH_P2(_lh_myEvalState_LH_P2_0_0, _lh_myEvalState_LH_P2_1_0) -> 
+        _lh_myEvalState_LH_P2_1_0
+      | _ -> 
+        (failwith "error")));;
+let withEnv_lh _lh_withEnv_arg1_0 _lh_withEnv_arg2_0 =
+  (myReturn_lh ((myEvalState_lh _lh_withEnv_arg2_0) _lh_withEnv_arg1_0));;
 let rec apply_lh _lh_apply_arg1_0 _lh_apply_arg2_0 =
   (match _lh_apply_arg1_0 with
     | `Thunk(_lh_apply_Thunk_0_0, _lh_apply_Thunk_1_0) -> 
@@ -244,21 +262,6 @@ and mainSimple_lh _lh_mainSimple_arg1_0 =
     ((failwith "error") (`LH_C('A', (`LH_C('r', (`LH_C('g', (`LH_C('s', (`LH_C(':', (`LH_C(' ', (`LH_C('n', (`LH_C('u', (`LH_C('m', (`LH_C('b', (`LH_C('e', (`LH_C('r', (`LH_C('-', (`LH_C('t', (`LH_C('o', (`LH_C('-', (`LH_C('s', (`LH_C('u', (`LH_C('m', (`LH_C('-', (`LH_C('u', (`LH_C('p', (`LH_C('-', (`LH_C('t', (`LH_C('o', (`LH_N))))))))))))))))))))))))))))))))))))))))))))))))))))
   else
     (showTerm_lh ((simpleEval_lh (`LH_N)) (`App(sum0_lh, (`Con((head_lh _lh_mainSimple_arg1_0))))))))
-and myBind_lh _lh_myBind_arg1_0 _lh_myBind_arg2_0 =
-  (`MyState((fun s_1 -> 
-    (let rec _lh_matchIdent_4 = ((myRunState_lh _lh_myBind_arg1_0) s_1) in
-      (match _lh_matchIdent_4 with
-        | `LH_P2(_lh_myBind_LH_P2_0_0, _lh_myBind_LH_P2_1_0) -> 
-          ((myRunState_lh (_lh_myBind_arg2_0 _lh_myBind_LH_P2_1_0)) _lh_myBind_LH_P2_0_0)
-        | _ -> 
-          (failwith "error"))))))
-and myEvalState_lh _lh_myEvalState_arg1_0 _lh_myEvalState_arg2_0 =
-  (let rec _lh_matchIdent_1 = ((myRunState_lh _lh_myEvalState_arg1_0) _lh_myEvalState_arg2_0) in
-    (match _lh_matchIdent_1 with
-      | `LH_P2(_lh_myEvalState_LH_P2_0_0, _lh_myEvalState_LH_P2_1_0) -> 
-        _lh_myEvalState_LH_P2_1_0
-      | _ -> 
-        (failwith "error")))
 and partialSum0_lh =
   (`Lam((`LH_C('s', (`LH_C('u', (`LH_C('m', (`LH_N))))))), (`Lam((`LH_C('n', (`LH_N))), (`IfZero((`Var((`LH_C('n', (`LH_N))))), (`Con(0)), (`Add((`Var((`LH_C('n', (`LH_N))))), (`App((`Var((`LH_C('s', (`LH_C('u', (`LH_C('m', (`LH_N))))))))), nMinus1_lh))))))))))
 and pp_lh _lh_pp_arg1_0 =
@@ -374,8 +377,6 @@ and traverseCon_lh _lh_traverseCon_arg1_0 =
         | _ -> 
           ((failwith "error") ((mappend_lh (`LH_C('N', (`LH_C('o', (`LH_C('t', (`LH_C(' ', (`LH_C('a', (`LH_C(' ', (`LH_C('C', (`LH_C('o', (`LH_C('n', (`LH_C(':', (`LH_C(' ', (`LH_N)))))))))))))))))))))))) (showTerm_lh t'_0)))))))
 and traverseTerm_lh _lh_traverseTerm_arg1_0 =
-  (eval_lh _lh_traverseTerm_arg1_0)
-and withEnv_lh _lh_withEnv_arg1_0 _lh_withEnv_arg2_0 =
-  (myReturn_lh ((myEvalState_lh _lh_withEnv_arg2_0) _lh_withEnv_arg1_0));;
+  (eval_lh _lh_traverseTerm_arg1_0);;
 end;;
 
diff --git a/new-nofib-ocaml-gen/Life_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Life_nofib_lh/Module_original.ml
index 99871aed..152981f6 100644
--- a/new-nofib-ocaml-gen/Life_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Life_nofib_lh/Module_original.ml
@@ -169,8 +169,14 @@ let rec concat_lh lss_0 =
     | `LH_C(h_6, t_6) -> 
       ((mappend_lh h_6) (concat_lh t_6))
     | `LH_N -> 
-      (`LH_N))
-and disp_lh _lh_disp_arg1_0 =
+      (`LH_N));;
+let rec shiftl_lh _lh_shiftl_arg1_0 _lh_shiftl_arg2_0 =
+  ((mappend_lh (tail_lh _lh_shiftl_arg2_0)) (`LH_C(_lh_shiftl_arg1_0, (`LH_N))));;
+let rec shiftr_lh _lh_shiftr_arg1_0 _lh_shiftr_arg2_0 =
+  ((mappend_lh (`LH_C(_lh_shiftr_arg1_0, (`LH_N)))) (init_lh _lh_shiftr_arg2_0));;
+let shift_lh _lh_shift_arg1_0 _lh_shift_arg2_0 =
+  (((zip3_lh ((shiftr_lh _lh_shift_arg1_0) _lh_shift_arg2_0)) _lh_shift_arg2_0) ((shiftl_lh _lh_shift_arg1_0) _lh_shift_arg2_0));;
+let rec disp_lh _lh_disp_arg1_0 =
   (match _lh_disp_arg1_0 with
     | `LH_P2(_lh_disp_LH_P2_0_0, _lh_disp_LH_P2_1_0) -> 
       ((mappend_lh ((mappend_lh _lh_disp_LH_P2_0_0) (`LH_C('n', (`LH_C('n', (`LH_N))))))) ((fun _lh_funcomp_x_4 -> 
@@ -196,12 +202,6 @@ and row_lh _lh_row_arg1_0 =
       ((((zipWith3_lh elt_lh) ((shift_lh 0) _lh_row_LH_P3_0_0)) ((shift_lh 0) _lh_row_LH_P3_1_0)) ((shift_lh 0) _lh_row_LH_P3_2_0))
     | _ -> 
       (failwith "error"))
-and shift_lh _lh_shift_arg1_0 _lh_shift_arg2_0 =
-  (((zip3_lh ((shiftr_lh _lh_shift_arg1_0) _lh_shift_arg2_0)) _lh_shift_arg2_0) ((shiftl_lh _lh_shift_arg1_0) _lh_shift_arg2_0))
-and shiftl_lh _lh_shiftl_arg1_0 _lh_shiftl_arg2_0 =
-  ((mappend_lh (tail_lh _lh_shiftl_arg2_0)) (`LH_C(_lh_shiftl_arg1_0, (`LH_N))))
-and shiftr_lh _lh_shiftr_arg1_0 _lh_shiftr_arg2_0 =
-  ((mappend_lh (`LH_C(_lh_shiftr_arg1_0, (`LH_N)))) (init_lh _lh_shiftr_arg2_0))
 and testLife_nofib_lh _lh_testLife_nofib_arg1_0 =
   (generations_lh _lh_testLife_nofib_arg1_0);;
 end;;
diff --git a/new-nofib-ocaml-gen/Mate_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Mate_nofib_lh/Module_original.ml
index 8665f9be..a8bb0e31 100644
--- a/new-nofib-ocaml-gen/Mate_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Mate_nofib_lh/Module_original.ml
@@ -434,6 +434,15 @@ let rec zipWith_lh f_3 xs_0 ys_0 =
           (`LH_N))
     | `LH_N -> 
       (`LH_N));;
+let rec concat_lh lss_0 =
+  (match lss_0 with
+    | `LH_C(h_8, t_8) -> 
+      ((mappend_lh h_8) (concat_lh t_8))
+    | `LH_N -> 
+      (`LH_N));;
+let unlines_lh _lh_unlines_arg1_0 =
+  (concat_lh ((map_lh (fun l_0 -> 
+    ((mappend_lh l_0) (`LH_C('|', (`LH_N)))))) _lh_unlines_arg1_0));;
 let rec bishopmoves_lh _lh_bishopmoves_arg1_0 _lh_bishopmoves_arg2_0 _lh_bishopmoves_arg3_0 =
   ((((((moveLine_lh _lh_bishopmoves_arg3_0) _lh_bishopmoves_arg1_0) _lh_bishopmoves_arg2_0) (fun xy_5 -> 
     (let rec _lh_matchIdent_4_2 = xy_5 in
@@ -469,12 +478,6 @@ and compact_lh _lh_compact_arg1_0 =
       (`Soln(_lh_compact_Solution_0_0, (((foldr_lh insertCompact_lh) (`LH_N)) _lh_compact_Solution_1_0)))
     | _ -> 
       (failwith "error"))
-and concat_lh lss_0 =
-  (match lss_0 with
-    | `LH_C(h_8, t_8) -> 
-      ((mappend_lh h_8) (concat_lh t_8))
-    | `LH_N -> 
-      (`LH_N))
 and insertCompact_lh _lh_insertCompact_arg1_0 _lh_insertCompact_arg2_0 =
   (match _lh_insertCompact_arg1_0 with
     | `LH_P2(_lh_insertCompact_LH_P2_0_0, _lh_insertCompact_LH_P2_1_0) -> 
@@ -1165,9 +1168,6 @@ and tryMove_lh _lh_tryMove_arg1_0 _lh_tryMove_arg2_0 _lh_tryMove_arg3_0 _lh_tryM
           (failwith "error"))
     | _ -> 
       (failwith "error"))
-and unlines_lh _lh_unlines_arg1_0 =
-  (concat_lh ((map_lh (fun l_0 -> 
-    ((mappend_lh l_0) (`LH_C('|', (`LH_N)))))) _lh_unlines_arg1_0))
 and words_lh _lh_words_arg1_0 =
   (let rec _lh_matchIdent_2_5 = ((dropWhile_lh (fun x_3 -> 
     (x_3 = ' '))) _lh_words_arg1_0) in
diff --git a/new-nofib-ocaml-gen/Minimax_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Minimax_nofib_lh/Module_original.ml
index f0cd4694..3e4f5106 100644
--- a/new-nofib-ocaml-gen/Minimax_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Minimax_nofib_lh/Module_original.ml
@@ -323,6 +323,12 @@ let rec win7_lh =
   (`LH_C((`LH_C(1, (`LH_C(0, (`LH_C(0, (`LH_N))))))), (`LH_C((`LH_C(0, (`LH_C(1, (`LH_C(0, (`LH_N))))))), (`LH_C((`LH_C(0, (`LH_C(0, (`LH_C(1, (`LH_N))))))), (`LH_N)))))));;
 let rec win8_lh =
   (`LH_C((`LH_C(0, (`LH_C(0, (`LH_C(1, (`LH_N))))))), (`LH_C((`LH_C(0, (`LH_C(1, (`LH_C(0, (`LH_N))))))), (`LH_C((`LH_C(1, (`LH_C(0, (`LH_C(0, (`LH_N))))))), (`LH_N)))))));;
+let rec concat_lh lss_0 =
+  (match lss_0 with
+    | `LH_C(h_5, t_5) -> 
+      ((mappend_lh h_5) (concat_lh t_5))
+    | `LH_N -> 
+      (`LH_N));;
 let rec alternate_lh _lh_alternate_arg1_0 _lh_alternate_arg2_0 _lh_alternate_arg3_0 _lh_alternate_arg4_0 =
   (if (fullBoard_lh _lh_alternate_arg4_0) then
     (`LH_N)
@@ -347,12 +353,6 @@ and bestMove_lh _lh_bestMove_arg1_0 _lh_bestMove_arg2_0 _lh_bestMove_arg3_0 _lh_
   ((fun _lh_funcomp_x_1 -> 
     (((mise_lh _lh_bestMove_arg2_0) _lh_bestMove_arg3_0) (cropTree_lh _lh_funcomp_x_1))) ((fun _lh_funcomp_x_2 -> 
     ((mapTree_lh static_lh) ((searchTree_lh _lh_bestMove_arg1_0) _lh_funcomp_x_2))) _lh_funcomp_x_0))
-and concat_lh lss_0 =
-  (match lss_0 with
-    | `LH_C(h_5, t_5) -> 
-      ((mappend_lh h_5) (concat_lh t_5))
-    | `LH_N -> 
-      (`LH_N))
 and cropTree_lh _lh_cropTree_arg1_0 =
   (match _lh_cropTree_arg1_0 with
     | `Branch(_lh_cropTree_Branch_0_0, _lh_cropTree_Branch_1_0) -> 
diff --git a/new-nofib-ocaml-gen/Para_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Para_nofib_lh/Module_original.ml
index 49e5ce30..3b3e2143 100644
--- a/new-nofib-ocaml-gen/Para_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Para_nofib_lh/Module_original.ml
@@ -175,8 +175,43 @@ let rec concat_lh lss_0 =
     | `LH_C(h_7, t_7) -> 
       ((mappend_lh h_7) (concat_lh t_7))
     | `LH_N -> 
-      (`LH_N))
-and cons'_lh _lh_cons'_arg1_0 _lh_cons'_arg2_0 =
+      (`LH_N));;
+let rec unlines_lh _lh_unlines_arg1_0 =
+  (concat_lh ((map_lh (fun l_1 -> 
+    ((mappend_lh l_1) (`LH_C('|', (`LH_N)))))) _lh_unlines_arg1_0));;
+let rec unwords_lh _lh_unwords_arg1_0 =
+  (match _lh_unwords_arg1_0 with
+    | `LH_N -> 
+      (`LH_N)
+    | `LH_C(_lh_unwords_LH_C_0_0, _lh_unwords_LH_C_1_0) -> 
+      (let rec go_0 = (fun _lh_go_arg1_0 -> 
+        (match _lh_go_arg1_0 with
+          | `LH_N -> 
+            (`LH_N)
+          | `LH_C(_lh_go_LH_C_0_0, _lh_go_LH_C_1_0) -> 
+            (`LH_C(' ', ((mappend_lh _lh_go_LH_C_0_0) (go_0 _lh_go_LH_C_1_0))))
+          | _ -> 
+            (failwith "error"))) in
+        ((mappend_lh _lh_unwords_LH_C_0_0) (go_0 _lh_unwords_LH_C_1_0)))
+    | _ -> 
+      (failwith "error"));;
+let rec words_lh _lh_words_arg1_0 =
+  (let rec _lh_matchIdent_4 = ((dropWhile_lh isSpace_lh) _lh_words_arg1_0) in
+    (match _lh_matchIdent_4 with
+      | `LH_N -> 
+        (`LH_N)
+      | `LH_C(_lh_words_LH_C_0_0, _lh_words_LH_C_1_0) -> 
+        (let rec _lh_matchIdent_5 = ((break_lh isSpace_lh) (`LH_C(_lh_words_LH_C_0_0, _lh_words_LH_C_1_0))) in
+          (match _lh_matchIdent_5 with
+            | `LH_P2(_lh_words_LH_P2_0_0, _lh_words_LH_P2_1_0) -> 
+              (`LH_C(_lh_words_LH_P2_0_0, (words_lh _lh_words_LH_P2_1_0)))
+            | _ -> 
+              (failwith "error")))
+      | _ -> 
+        (failwith "error")));;
+let splitAt_lh _lh_splitAt_arg1_0 _lh_splitAt_arg2_0 =
+  (`LH_P2(((take_lh _lh_splitAt_arg1_0) _lh_splitAt_arg2_0), ((drop_lh _lh_splitAt_arg1_0) _lh_splitAt_arg2_0)));;
+let rec cons'_lh _lh_cons'_arg1_0 _lh_cons'_arg2_0 =
   (match _lh_cons'_arg2_0 with
     | `LH_P2(_lh_cons'_LH_P2_0_0, _lh_cons'_LH_P2_1_0) -> 
       (if (not (null_lh _lh_cons'_LH_P2_1_0)) then
@@ -282,8 +317,6 @@ and single'_lh _lh_single'_arg1_0 =
       (((null_lh _lh_single'_LH_P2_0_0) && (single_lh _lh_single'_LH_P2_1_0)) || ((single_lh _lh_single'_LH_P2_0_0) && (null_lh _lh_single'_LH_P2_1_0)))
     | _ -> 
       (failwith "error"))
-and splitAt_lh _lh_splitAt_arg1_0 _lh_splitAt_arg2_0 =
-  (`LH_P2(((take_lh _lh_splitAt_arg1_0) _lh_splitAt_arg2_0), ((drop_lh _lh_splitAt_arg1_0) _lh_splitAt_arg2_0)))
 and startr_lh _lh_startr_arg1_0 =
   (if (_lh_startr_arg1_0 <= maxw_lh) then
     (`LH_P3(((cons'_lh (`LH_P3(0, 0, 0))) nil'_lh), _lh_startr_arg1_0, 1))
@@ -410,46 +443,13 @@ and unformat_lh _lh_unformat_arg1_0 =
   ((fold1_lh (fun xs_1 ys_1 -> 
     ((mappend_lh ((mappend_lh xs_1) (`LH_C(_lh_unformat_arg1_0, (`LH_N))))) ys_1))) (fun x_1 -> 
     x_1))
-and unlines_lh _lh_unlines_arg1_0 =
-  (concat_lh ((map_lh (fun l_1 -> 
-    ((mappend_lh l_1) (`LH_C('|', (`LH_N)))))) _lh_unlines_arg1_0))
 and unparas_lh _lh_unparas_arg1_0 =
   ((unformat_lh (`LH_N)) _lh_unparas_arg1_0)
 and unparse_lh _lh_unparse_arg1_0 =
   ((fun _lh_funcomp_x_0 -> 
     ((fun _lh_funcomp_x_1 -> 
       (unlines_lh ((map_lh unwords_lh) _lh_funcomp_x_1))) (unparas_lh _lh_funcomp_x_0))) _lh_unparse_arg1_0)
-and unwords_lh _lh_unwords_arg1_0 =
-  (match _lh_unwords_arg1_0 with
-    | `LH_N -> 
-      (`LH_N)
-    | `LH_C(_lh_unwords_LH_C_0_0, _lh_unwords_LH_C_1_0) -> 
-      (let rec go_0 = (fun _lh_go_arg1_0 -> 
-        (match _lh_go_arg1_0 with
-          | `LH_N -> 
-            (`LH_N)
-          | `LH_C(_lh_go_LH_C_0_0, _lh_go_LH_C_1_0) -> 
-            (`LH_C(' ', ((mappend_lh _lh_go_LH_C_0_0) (go_0 _lh_go_LH_C_1_0))))
-          | _ -> 
-            (failwith "error"))) in
-        ((mappend_lh _lh_unwords_LH_C_0_0) (go_0 _lh_unwords_LH_C_1_0)))
-    | _ -> 
-      (failwith "error"))
 and width_tl_lh _lh_width_tl_arg1_0 =
   (fst3_lh _lh_width_tl_arg1_0)
-and words_lh _lh_words_arg1_0 =
-  (let rec _lh_matchIdent_4 = ((dropWhile_lh isSpace_lh) _lh_words_arg1_0) in
-    (match _lh_matchIdent_4 with
-      | `LH_N -> 
-        (`LH_N)
-      | `LH_C(_lh_words_LH_C_0_0, _lh_words_LH_C_1_0) -> 
-        (let rec _lh_matchIdent_5 = ((break_lh isSpace_lh) (`LH_C(_lh_words_LH_C_0_0, _lh_words_LH_C_1_0))) in
-          (match _lh_matchIdent_5 with
-            | `LH_P2(_lh_words_LH_P2_0_0, _lh_words_LH_P2_1_0) -> 
-              (`LH_C(_lh_words_LH_P2_0_0, (words_lh _lh_words_LH_P2_1_0)))
-            | _ -> 
-              (failwith "error")))
-      | _ -> 
-        (failwith "error")));;
 end;;
 
diff --git a/new-nofib-ocaml-gen/Rewrite_nofib_lh/Module_original.ml b/new-nofib-ocaml-gen/Rewrite_nofib_lh/Module_original.ml
index 99fe2e98..745e7026 100644
--- a/new-nofib-ocaml-gen/Rewrite_nofib_lh/Module_original.ml
+++ b/new-nofib-ocaml-gen/Rewrite_nofib_lh/Module_original.ml
@@ -298,9 +298,20 @@ let rec zip_lz_nl_lh xs_1 ys_1 =
           (`LH_N))
     | `LH_N -> 
       (`LH_N));;
-let rec apply_lh _lh_apply_arg1_0 _lh_apply_arg2_0 =
-  ((getOrElse_lh ((assoc_lh _lh_apply_arg1_0) _lh_apply_arg2_0)) (`Var(_lh_apply_arg2_0)))
-and assoc_lh _lh_assoc_arg1_0 _lh_assoc_arg2_0 =
+let rec concat_lh lss_0 =
+  (match lss_0 with
+    | `LH_C(h_8, t_8) -> 
+      ((mappend_lh h_8) (concat_lh t_8))
+    | `LH_N -> 
+      (`LH_N));;
+let listify_lh _lh_listify_arg1_0 =
+  ((getOrElse_lh ((lift_lh box_lh) _lh_listify_arg1_0)) (`LH_N));;
+let sift_lh _lh_sift_arg1_0 =
+  ((fun _lh_funcomp_x_1_1 -> 
+    (concat_lh ((map_lh listify_lh) _lh_funcomp_x_1_1))) _lh_sift_arg1_0);;
+let first_ok_lh _lh_first_ok_arg1_0 =
+  (((foldr_lh orElse_lh) (`Nothing)) _lh_first_ok_arg1_0);;
+let assoc_lh _lh_assoc_arg1_0 _lh_assoc_arg2_0 =
   (let rec match_x_0 = (fun uv_0 -> 
     (let rec _lh_matchIdent_1_3 = uv_0 in
       (match _lh_matchIdent_1_3 with
@@ -308,8 +319,18 @@ and assoc_lh _lh_assoc_arg1_0 _lh_assoc_arg2_0 =
           ((maybeX_lh (_lh_assoc_arg2_0 = _lh_assoc_LH_P2_0_0)) _lh_assoc_LH_P2_1_0)
         | _ -> 
           (failwith "error")))) in
-    (first_ok_lh ((map_lh match_x_0) _lh_assoc_arg1_0)))
-and comp_sub_lh _lh_comp_sub_arg1_0 _lh_comp_sub_arg2_0 =
+    (first_ok_lh ((map_lh match_x_0) _lh_assoc_arg1_0)));;
+let apply_lh _lh_apply_arg1_0 _lh_apply_arg2_0 =
+  ((getOrElse_lh ((assoc_lh _lh_apply_arg1_0) _lh_apply_arg2_0)) (`Var(_lh_apply_arg2_0)));;
+let rec expr_fold_lh _lh_expr_fold_arg1_0 _lh_expr_fold_arg2_0 _lh_expr_fold_arg3_0 =
+  (match _lh_expr_fold_arg3_0 with
+    | `Var(_lh_expr_fold_Var_0_0) -> 
+      (_lh_expr_fold_arg2_0 _lh_expr_fold_Var_0_0)
+    | `Func(_lh_expr_fold_Func_0_0, _lh_expr_fold_Func_1_0) -> 
+      ((_lh_expr_fold_arg1_0 _lh_expr_fold_Func_0_0) ((map_lh ((expr_fold_lh _lh_expr_fold_arg1_0) _lh_expr_fold_arg2_0)) _lh_expr_fold_Func_1_0))
+    | _ -> 
+      (failwith "error"))
+let rec comp_sub_lh _lh_comp_sub_arg1_0 _lh_comp_sub_arg2_0 =
   ((mappend_lh (let rec _lh_listcomp_fun_7 = (fun _lh_listcomp_fun_para_7 -> 
     (match _lh_listcomp_fun_para_7 with
       | `LH_C(_lh_listcomp_fun_ls_h_7, _lh_listcomp_fun_ls_t_7) -> 
@@ -321,12 +342,6 @@ and comp_sub_lh _lh_comp_sub_arg1_0 _lh_comp_sub_arg2_0 =
       | `LH_N -> 
         (`LH_N))) in
     (_lh_listcomp_fun_7 _lh_comp_sub_arg2_0))) _lh_comp_sub_arg1_0)
-and concat_lh lss_0 =
-  (match lss_0 with
-    | `LH_C(h_8, t_8) -> 
-      ((mappend_lh h_8) (concat_lh t_8))
-    | `LH_N -> 
-      (`LH_N))
 and cost_lh _lh_cost_arg1_0 =
   (match _lh_cost_arg1_0 with
     | `LH_P2(_lh_cost_LH_P2_0_0, _lh_cost_LH_P2_1_0) -> 
@@ -376,16 +391,6 @@ and eqListExpr_lh _lh_eqListExpr_arg1_0 _lh_eqListExpr_arg2_0 =
           false)
     | _ -> 
       false)
-and expr_fold_lh _lh_expr_fold_arg1_0 _lh_expr_fold_arg2_0 _lh_expr_fold_arg3_0 =
-  (match _lh_expr_fold_arg3_0 with
-    | `Var(_lh_expr_fold_Var_0_0) -> 
-      (_lh_expr_fold_arg2_0 _lh_expr_fold_Var_0_0)
-    | `Func(_lh_expr_fold_Func_0_0, _lh_expr_fold_Func_1_0) -> 
-      ((_lh_expr_fold_arg1_0 _lh_expr_fold_Func_0_0) ((map_lh ((expr_fold_lh _lh_expr_fold_arg1_0) _lh_expr_fold_arg2_0)) _lh_expr_fold_Func_1_0))
-    | _ -> 
-      (failwith "error"))
-and first_ok_lh _lh_first_ok_arg1_0 =
-  (((foldr_lh orElse_lh) (`Nothing)) _lh_first_ok_arg1_0)
 and geRewrite_lh _lh_geRewrite_arg1_0 _lh_geRewrite_arg2_0 _lh_geRewrite_arg3_0 =
   ((inList_lh (_lh_geRewrite_arg1_0 (`LH_P2(_lh_geRewrite_arg2_0, _lh_geRewrite_arg3_0)))) (`LH_C((`Greater), (`LH_C((`Equal), (`LH_N))))))
 and inside_lh _lh_inside_arg1_0 _lh_inside_arg2_0 =
@@ -400,8 +405,6 @@ and inside_lh _lh_inside_arg1_0 _lh_inside_arg2_0 =
       | `LH_N -> 
         (`LH_N))) in
     (_lh_listcomp_fun_8 (subterms_lh _lh_inside_arg2_0))))
-and listify_lh _lh_listify_arg1_0 =
-  ((getOrElse_lh ((lift_lh box_lh) _lh_listify_arg1_0)) (`LH_N))
 and map_dnet_lh _lh_map_dnet_arg1_0 _lh_map_dnet_arg2_0 =
   (match _lh_map_dnet_arg2_0 with
     | `Switch(_lh_map_dnet_Switch_0_0, _lh_map_dnet_Switch_1_0) -> 
@@ -1246,9 +1249,6 @@ and rewrite_lh _lh_rewrite_arg1_0 =
           (failwith "error"))
     | _ -> 
       (failwith "error"))
-and sift_lh _lh_sift_arg1_0 =
-  ((fun _lh_funcomp_x_1_1 -> 
-    (concat_lh ((map_lh listify_lh) _lh_funcomp_x_1_1))) _lh_sift_arg1_0)
 and simplify_lh _lh_simplify_arg1_0 =
   (let rec f_4 = (fun t_1_0 -> 
     ((getOrElse_lh ((lift_lh f_4) (_lh_simplify_arg1_0 t_1_0))) t_1_0)) in
-- 
2.39.3 (Apple Git-145)

